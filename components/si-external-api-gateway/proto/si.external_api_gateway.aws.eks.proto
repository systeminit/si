syntax = "proto3";

package si.external_api_gateway.aws.eks;

import "si-external-api-gateway/proto/si.external_api_gateway.proto";

// [API reference](https://docs.aws.amazon.com/eks/latest/APIReference/Welcome.html)
service EKS {
  // Creates an Amazon EKS control plane.
  //
  // The Amazon EKS control plane consists of control plane instances that run
  // the Kubernetes software, such as etcd and the API server. The control
  // plane runs in an account managed by AWS, and the Kubernetes API is exposed
  // via the Amazon EKS API server endpoint. Each Amazon EKS cluster control
  // plane is single-tenant and unique and runs on its own set of Amazon EC2
  // instances.
  //
  // The cluster control plane is provisioned across multiple Availability
  // Zones and fronted by an Elastic Load Balancing Network Load Balancer.
  // Amazon EKS also provisions elastic network interfaces in your VPC subnets
  // to provide connectivity from the control plane instances to the worker
  // nodes (for example, to support kubectl exec, logs, and proxy data flows).
  //
  // Amazon EKS worker nodes run in your AWS account and connect to your
  // cluster's control plane via the Kubernetes API server endpoint and a
  // certificate file that is created for your cluster.
  //
  // You can use the endpointPublicAccess and endpointPrivateAccess parameters
  // to enable or disable public and private access to your cluster's
  // Kubernetes API server endpoint. By default, public access is enabled, and
  // private access is disabled. For more information, see Amazon EKS Cluster
  // Endpoint Access Control in the Amazon EKS User Guide .
  //
  // You can use the logging parameter to enable or disable exporting the
  // Kubernetes control plane logs for your cluster to CloudWatch Logs. By
  // default, cluster control plane logs aren't exported to CloudWatch Logs.
  // For more information, see Amazon EKS Cluster Control Plane Logs in the
  // Amazon EKS User Guide.
  //
  // Note: CloudWatch Logs ingestion, archive storage, and data scanning rates
  // apply to exported control plane logs. For more information, see Amazon
  // CloudWatch Pricing.
  //
  // Cluster creation typically takes between 10 and 15 minutes. After you
  // create an Amazon EKS cluster, you must configure your Kubernetes tooling
  // to communicate with the API server and launch worker nodes into your
  // cluster.  For more information, see Managing Cluster Authentication and
  // Launching Amazon EKS Worker Nodes in the Amazon EKS User Guide.
  //
  // [API Reference](https://docs.aws.amazon.com/eks/latest/APIReference/API_CreateCluster.html)
  rpc CreateCluster(CreateClusterRequest) returns (CreateClusterReply);
}

// [API Reference](https://docs.aws.amazon.com/eks/latest/APIReference/API_CreateCluster.html#API_CreateCluster_RequestSyntax)
message CreateClusterRequest {
  si.external_api_gateway.Context context = 1;
  // Unique, case-sensitive identifier that you provide to ensure the
  // idempotency of the request.
  //
  // Required: No
  string client_request_token = 2;
  // Enable or disable exporting the Kubernetes control plane logs for your
  // cluster to CloudWatch Logs. By default, cluster control plane logs aren't
  // exported to CloudWatch Logs. For more information, see Amazon EKS Cluster
  // Control Plane Logs in the Amazon EKS User Guide .
  //
  // Required: No
  Logging logging = 3;
  // The unique name to give to your cluster.
  //
  // Required: No
  string name = 4;
  // The VPC configuration used by the cluster control plane. Amazon EKS VPC
  // resources have specific requirements to work properly with Kubernetes. For
  // more information, see Cluster VPC Considerations and Cluster Security
  // Group Considerations in the Amazon EKS User Guide. You must specify at
  // least two subnets. You can specify up to five security groups, but we
  // recommend that you use a dedicated security group for your cluster control
  // plane.
  //
  // Required: Yes
  VpcConfigRequest resources_vpc_config = 5;
  // An object representing the VPC configuration to use for an Amazon EKS
  // cluster.
  //
  // [API Reference](https://docs.aws.amazon.com/eks/latest/APIReference/API_VpcConfigRequest.html)
  message VpcConfigRequest {
    // Set this value to true to enable private access for your cluster's
    // Kubernetes API server endpoint. If you enable private access, Kubernetes
    // API requests from within your cluster's VPC use the private VPC
    // endpoint. The default value for this parameter is false, which disables
    // private access for your Kubernetes API server. If you disable private
    // access and you have worker nodes or AWS Fargate pods in the cluster,
    // then ensure that publicAccessCidrs includes the necessary CIDR blocks
    // for communication with the worker nodes or Fargate pods. For more
    // information, see Amazon EKS Cluster Endpoint Access Control in the
    // Amazon EKS User Guide.
    //
    // Required: No
    bool endpoint_private_access = 1;
    // Set this value to false to disable public access to your cluster's
    // Kubernetes API server endpoint. If you disable public access, your
    // cluster's Kubernetes API server can only receive requests from within
    // the cluster VPC. The default value for this parameter is true, which
    // enables public access for your Kubernetes API server. For more
    // information, see Amazon EKS Cluster Endpoint Access Control in the
    // Amazon EKS User Guide.
    //
    // Required: No
    bool endpoint_public_access = 2;
    // The CIDR blocks that are allowed access to your cluster's public
    // Kubernetes API server endpoint. Communication to the endpoint from
    // addresses outside of the CIDR blocks that you specify is denied. The
    // default value is 0.0.0.0/0. If you've disabled private endpoint access
    // and you have worker nodes or AWS Fargate pods in the cluster, then
    // ensure that you specify the necessary CIDR blocks. For more information,
    // see Amazon EKS Cluster Endpoint Access Control in the Amazon EKS User
    // Guide.
    //
    // Required: No
    repeated string public_access_cidrs = 3;
    // Specify one or more security groups for the cross-account elastic
    // network interfaces that Amazon EKS creates to use to allow communication
    // between your worker nodes and the Kubernetes control plane. If you don't
    // specify a security group, the default security group for your VPC is
    // used.
    //
    // Required: No
    repeated string security_group_ids = 4;
    // Specify subnets for your Amazon EKS worker nodes. Amazon EKS creates
    // cross-account elastic network interfaces in these subnets to allow
    // communication between your worker nodes and the Kubernetes control
    // plane.
    //
    // Required: No
    repeated string subnet_ids = 5;
  }
  // The Amazon Resource Name (ARN) of the IAM role that provides permissions
  // for Amazon EKS to make calls to other AWS API operations on your behalf.
  // For more information, see Amazon EKS Service IAM Role in the Amazon EKS
  // User Guide.
  //
  // Required: Yes
  string role_arn = 6;
  //  metadata to apply to the cluster to assist with categorization and
  //  organization. Each tag consists of a key and an optional value, both of
  //  which you define.
  //
  // Required: No
  repeated Tag tags = 7;
  //  desired Kubernetes version for your cluster. If you don't specify a value
  //  here, the latest version available in Amazon EKS is used.
  //
  // Required: No
  string version = 8;
}

// [API Reference](https://docs.aws.amazon.com/eks/latest/APIReference/API_CreateCluster.html#API_CreateCluster_ResponseSyntax)
message CreateClusterReply {
  // The full description of your new cluster.
  Cluster cluster = 1;
  // An object representing an Amazon EKS cluster.
  //
  // [API Reference](https://docs.aws.amazon.com/eks/latest/APIReference/API_Cluster.html)
  message Cluster {
    // The Amazon Resource Name (ARN) of the cluster.
    //
    // Required: No
    string arn = 1;
    // The certificate-authority-data for your cluster.
    //
    // Required: No
    Certificate certificate_authority = 2;
    // An object representing the certificate-authority-data for your cluster.
    //
    // [API Reference](https://docs.aws.amazon.com/eks/latest/APIReference/API_Certificate.html)
    message Certificate {
      // Base64-encoded certificate data required to communicate with your
      // cluster. Add this to the certificate-authority-data section of the
      // kubeconfig file for your cluster.
      //
      // Required: No
      string data = 1;
    }
    // Unique, case-sensitive identifier that you provide to ensure the
    // idempotency of the request.
    //
    // Required: No
    string client_request_token = 3;
    // The Unix epoch timestamp in seconds for when the cluster was created.
    //
    // Required: No
    string created_at = 4;
    // The endpoint for your Kubernetes API server.
    //
    // Required: No
    string endpoint = 5;
    // The identity provider information for the cluster.
    //
    // Required: No
    Identity identity = 6;
    // An object representing an identity provider for authentication
    // credentials
    //
    // [API Reference](https://docs.aws.amazon.com/eks/latest/APIReference/API_Identity.html)
    message Identity {
      // The OpenID Connect identity provider information for the cluster.
      //
      // Required: No
      Oidc oidc = 1;
      // An object representing the OpenID Connect identity provider
      // information for the cluster.
      //
      // [API Reference](https://docs.aws.amazon.com/eks/latest/APIReference/API_OIDC.html)
      message Oidc {
        // The issuer URL for the OpenID Connect identity provider.
        //
        // Required: No
        string issuer = 1;
      }
    }
    // The logging configuration for your cluster.
    //
    // Required: No
    Logging logging = 7;
    // The name of the cluster.
    //
    // Required: No
    string name = 8;
    // The platform version of your Amazon EKS cluster. For more information,
    // see Platform Versions in the Amazon EKS User Guide.
    //
    // Required: No
    string platform_version = 9;
    // VPC configuration used by the cluster control plane. Amazon EKS VPC
    // resources have specific requirements to work properly with Kubernetes.
    // For more information, see Cluster VPC Considerations and Cluster
    // Security Group Considerations in the Amazon EKS User Guide.
    //
    // Required: No
    VpcConfigResponse resources_vpc_config = 10;
    // An object representing an Amazon EKS cluster VPC configuration response.
    //
    //[API Reference](https://docs.aws.amazon.com/eks/latest/APIReference/API_VpcConfigResponse.html)
    message VpcConfigResponse {
      // The cluster security group that was created by Amazon EKS for the
      // cluster. Managed node groups use this security group for
      // control-plane-to-data-plane communication.
      //
      // Required: No
      string cluster_security_group_id = 1;
      // This parameter indicates whether the Amazon EKS private API server
      // endpoint is enabled. If the Amazon EKS private API server endpoint is
      // enabled, Kubernetes API requests that originate from within your
      // cluster's VPC use the private VPC endpoint instead of traversing the
      // internet. If this value is disabled and you have worker nodes or AWS
      // Fargate pods in the cluster, then ensure that publicAccessCidrs
      // includes the necessary CIDR blocks for communication with the worker
      // nodes or Fargate pods. For more information, see Amazon EKS Cluster
      // Endpoint Access Control in the Amazon EKS User Guide.
      //
      // Required: No
      bool endpoint_private_access = 2;
      // This parameter indicates whether the Amazon EKS public API server
      // endpoint is enabled. If the Amazon EKS public API server endpoint is
      // disabled, your cluster's Kubernetes API server can only receive
      // requests that originate from within the cluster VPC.
      //
      // Required: No
      bool endpoint_public_access = 3;
      // CIDR blocks that are allowed access to your cluster's public
      // Kubernetes API server endpoint. Communication to the endpoint from
      // addresses outside of the listed CIDR blocks is denied. The default
      // value is 0.0.0.0/0. If you've disabled private endpoint access and you
      // have worker nodes or AWS Fargate pods in the cluster, then ensure that
      // the necessary CIDR blocks are listed. For more information, see Amazon
      // EKS Cluster Endpoint Access Control in the Amazon EKS User Guide.
      //
      // Required: No
      repeated string public_access_cidrs = 4;
      // The security groups associated with the cross-account elastic network
      // interfaces that are used to allow communication between your worker
      // nodes and the Kubernetes control plane.
      //
      // Required: No
      repeated string security_group_ids = 5;
      // The subnets associated with your cluster.
      //
      // Required: No
      repeated string subnet_ids = 6;
      // The VPC associated with your cluster.
      //
      // Required: No
      string vpc_id = 7;
    }
    // The Amazon Resource Name (ARN) of the IAM role that provides permissions
    // for the Kubernetes control plane to make calls to AWS API operations on
    // your behalf.
    //
    // Required: No
    string role_arn = 11;
    // The current status of the cluster.
    //
    // Valid Values: `CREATING | ACTIVE | DELETING | FAILED | UPDATING`
    //
    // Required: No
    string status = 12;
    // The metadata that you apply to the cluster to assist with categorization
    // and organization. Each tag consists of a key and an optional value, both
    // of which you define. Cluster tags do not propagate to any other
    // resources associated with the cluster.
    //
    // Required: No
    repeated Tag tags = 13;
    // The Kubernetes server version for the cluster.
    //
    // Required: No
    string version = 14;
  }
  Error error = 2;
}

// An object representing the logging configuration for resources in your
// cluster.
//
// [API Reference](https://docs.aws.amazon.com/eks/latest/APIReference/API_Logging.html)
message Logging {
  // The cluster control plane logging configuration for your cluster.
  //
  // Required: No
  repeated LogSetup cluster_logging = 1;
  // An object representing the enabled or disabled Kubernetes control plane
  // logs for your cluster.
  //
  // [API Reference](https://docs.aws.amazon.com/eks/latest/APIReference/API_LogSetup.html)
  message LogSetup {
    // If a log type is enabled, that log type exports its control plane logs
    // to CloudWatch Logs. If a log type isn't enabled, that log type doesn't
    // export its control plane logs. Each individual log type can be enabled
    // or disabled independently.
    //
    // Required: No
    bool enabled = 1;
    // The available cluster control plane log types.
    //
    // Valid Values: `api | audit | authenticator | controllerManager |
    // scheduler`
    //
    // Required: No
    repeated string types = 2;
  }
}

message Tag {
  string key = 1;
  string value = 2;
}

message Error {
  string code = 1;
  string message = 2;
  string request_id = 3;
}

message Filter {
  string name = 1;
  repeated string values = 2;
}
