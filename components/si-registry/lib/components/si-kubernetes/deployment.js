"use strict";

var _registry = require("../../registry");

_registry.registry.componentAndEntity({
  typeName: "kubernetesDeployment",
  displayTypeName: "Kubernetes Deployment Object",
  siPathName: "si-kubernetes",
  serviceName: "kubernetes",
  options: function options(c) {
    c.entity.associations.belongsTo({
      fromFieldPath: ["siProperties", "billingAccountId"],
      typeName: "billingAccount"
    }); // Constraints

    c.constraints.addEnum({
      name: "kubernetesVersion",
      label: "Kubernetes Version",
      options: function options(p) {
        p.variants = ["v1.12", "v1.13", "v1.14", "v1.15"];
      }
    }); // Properties

    c.properties.addObject({
      name: "kubernetesObject",
      label: "Kubernetes Object",
      options: function options(p) {
        p.properties.addText({
          name: "apiVersion",
          label: "API Version",
          options: function options(p) {
            p.required = true;
          }
        });
        p.properties.addText({
          name: "kind",
          label: "Kind",
          options: function options(p) {
            p.required = true;
            p.baseDefaultValue = "Deployment";
          }
        });
        p.properties.addLink({
          name: "metadata",
          label: "Metadata",
          options: function options(p) {
            p.lookup = {
              typeName: "kubernetesMetadata"
            };
          }
        });
        p.properties.addObject({
          name: "spec",
          label: "Deployment Spec",
          options: function options(p) {
            p.properties.addNumber({
              name: "replicas",
              label: "Replicas",
              options: function options(p) {
                p.numberKind = "uint32";
              }
            });
            p.properties.addLink({
              name: "selector",
              label: "Selector",
              options: function options(p) {
                p.lookup = {
                  typeName: "kubernetesSelector"
                };
              }
            });
            p.properties.addLink({
              name: "template",
              label: "Pod Template Spec",
              options: function options(p) {
                p.lookup = {
                  typeName: "kubernetesPodTemplateSpec"
                };
              }
            });
          }
        });
      }
    });
    c.properties.addCode({
      name: "kubernetesObjectYaml",
      label: "Kubernetes Object YAML",
      options: function options(p) {
        p.language = "yaml";
      }
    });
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3NpLWt1YmVybmV0ZXMvZGVwbG95bWVudC50cyJdLCJuYW1lcyI6WyJyZWdpc3RyeSIsImNvbXBvbmVudEFuZEVudGl0eSIsInR5cGVOYW1lIiwiZGlzcGxheVR5cGVOYW1lIiwic2lQYXRoTmFtZSIsInNlcnZpY2VOYW1lIiwib3B0aW9ucyIsImMiLCJlbnRpdHkiLCJhc3NvY2lhdGlvbnMiLCJiZWxvbmdzVG8iLCJmcm9tRmllbGRQYXRoIiwiY29uc3RyYWludHMiLCJhZGRFbnVtIiwibmFtZSIsImxhYmVsIiwicCIsInZhcmlhbnRzIiwicHJvcGVydGllcyIsImFkZE9iamVjdCIsImFkZFRleHQiLCJyZXF1aXJlZCIsImJhc2VEZWZhdWx0VmFsdWUiLCJhZGRMaW5rIiwibG9va3VwIiwiYWRkTnVtYmVyIiwibnVtYmVyS2luZCIsImFkZENvZGUiLCJsYW5ndWFnZSJdLCJtYXBwaW5ncyI6Ijs7QUFRQTs7QUFFQUEsbUJBQVNDLGtCQUFULENBQTRCO0FBQzFCQyxFQUFBQSxRQUFRLEVBQUUsc0JBRGdCO0FBRTFCQyxFQUFBQSxlQUFlLEVBQUUsOEJBRlM7QUFHMUJDLEVBQUFBLFVBQVUsRUFBRSxlQUhjO0FBSTFCQyxFQUFBQSxXQUFXLEVBQUUsWUFKYTtBQUsxQkMsRUFBQUEsT0FMMEIsbUJBS2xCQyxDQUxrQixFQUtmO0FBQ1RBLElBQUFBLENBQUMsQ0FBQ0MsTUFBRixDQUFTQyxZQUFULENBQXNCQyxTQUF0QixDQUFnQztBQUM5QkMsTUFBQUEsYUFBYSxFQUFFLENBQUMsY0FBRCxFQUFpQixrQkFBakIsQ0FEZTtBQUU5QlQsTUFBQUEsUUFBUSxFQUFFO0FBRm9CLEtBQWhDLEVBRFMsQ0FNVDs7QUFDQUssSUFBQUEsQ0FBQyxDQUFDSyxXQUFGLENBQWNDLE9BQWQsQ0FBc0I7QUFDcEJDLE1BQUFBLElBQUksRUFBRSxtQkFEYztBQUVwQkMsTUFBQUEsS0FBSyxFQUFFLG9CQUZhO0FBR3BCVCxNQUFBQSxPQUhv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LEVBQUUsc0JBRGE7QUFFbkJDLE1BQUFBLEtBQUssRUFBRSx3QkFGWTtBQUduQlQsTUFBQUEsT0FIbUIsbUJBR1hVLENBSFcsRUFHRTtBQUNuQkEsUUFBQUEsQ0FBQyxDQUFDWSxRQUFGLEdBQWEsTUFBYjtBQUNEO0FBTGtCLEtBQXJCO0FBT0Q7QUExRnlCLENBQTVCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgUHJvcE9iamVjdCxcbiAgUHJvcFRleHQsXG4gIFByb3BMaW5rLFxuICBQcm9wTnVtYmVyLFxuICBQcm9wRW51bSxcbiAgUHJvcENvZGUsXG59IGZyb20gXCIuLi8uLi9jb21wb25lbnRzL3ByZWx1ZGVcIjtcbmltcG9ydCB7IHJlZ2lzdHJ5IH0gZnJvbSBcIi4uLy4uL3JlZ2lzdHJ5XCI7XG5cbnJlZ2lzdHJ5LmNvbXBvbmVudEFuZEVudGl0eSh7XG4gIHR5cGVOYW1lOiBcImt1YmVybmV0ZXNEZXBsb3ltZW50XCIsXG4gIGRpc3BsYXlUeXBlTmFtZTogXCJLdWJlcm5ldGVzIERlcGxveW1lbnQgT2JqZWN0XCIsXG4gIHNpUGF0aE5hbWU6IFwic2kta3ViZXJuZXRlc1wiLFxuICBzZXJ2aWNlTmFtZTogXCJrdWJlcm5ldGVzXCIsXG4gIG9wdGlvbnMoYykge1xuICAgIGMuZW50aXR5LmFzc29jaWF0aW9ucy5iZWxvbmdzVG8oe1xuICAgICAgZnJvbUZpZWxkUGF0aDogW1wic2lQcm9wZXJ0aWVzXCIsIFwiYmlsbGluZ0FjY291bnRJZFwiXSxcbiAgICAgIHR5cGVOYW1lOiBcImJpbGxpbmdBY2NvdW50XCIsXG4gICAgfSk7XG5cbiAgICAvLyBDb25zdHJhaW50c1xuICAgIGMuY29uc3RyYWludHMuYWRkRW51bSh7XG4gICAgICBuYW1lOiBcImt1YmVybmV0ZXNWZXJzaW9uXCIsXG4gICAgICBsYWJlbDogXCJLdWJlcm5ldGVzIFZlcnNpb25cIixcbiAgICAgIG9wdGlvbnMocDogUHJvcEVudW0pIHtcbiAgICAgICAgcC52YXJpYW50cyA9IFtcInYxLjEyXCIsIFwidjEuMTNcIiwgXCJ2MS4xNFwiLCBcInYxLjE1XCJdO1xuICAgICAgfSxcbiAgICB9KTtcblxuICAgIC8vIFByb3BlcnRpZXNcbiAgICBjLnByb3BlcnRpZXMuYWRkT2JqZWN0KHtcbiAgICAgIG5hbWU6IFwia3ViZXJuZXRlc09iamVjdFwiLFxuICAgICAgbGFiZWw6IFwiS3ViZXJuZXRlcyBPYmplY3RcIixcbiAgICAgIG9wdGlvbnMocDogUHJvcE9iamVjdCkge1xuICAgICAgICBwLnByb3BlcnRpZXMuYWRkVGV4dCh7XG4gICAgICAgICAgbmFtZTogXCJhcGlWZXJzaW9uXCIsXG4gICAgICAgICAgbGFiZWw6IFwiQVBJIFZlcnNpb25cIixcbiAgICAgICAgICBvcHRpb25zKHA6IFByb3BUZXh0KSB7XG4gICAgICAgICAgICBwLnJlcXVpcmVkID0gdHJ1ZTtcbiAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICAgICAgcC5wcm9wZXJ0aWVzLmFkZFRleHQoe1xuICAgICAgICAgIG5hbWU6IFwia2luZFwiLFxuICAgICAgICAgIGxhYmVsOiBcIktpbmRcIixcbiAgICAgICAgICBvcHRpb25zKHA6IFByb3BUZXh0KSB7XG4gICAgICAgICAgICBwLnJlcXVpcmVkID0gdHJ1ZTtcbiAgICAgICAgICAgIHAuYmFzZURlZmF1bHRWYWx1ZSA9IFwiRGVwbG95bWVudFwiO1xuICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgICAgICBwLnByb3BlcnRpZXMuYWRkTGluayh7XG4gICAgICAgICAgbmFtZTogXCJtZXRhZGF0YVwiLFxuICAgICAgICAgIGxhYmVsOiBcIk1ldGFkYXRhXCIsXG4gICAgICAgICAgb3B0aW9ucyhwOiBQcm9wTGluaykge1xuICAgICAgICAgICAgcC5sb29rdXAgPSB7XG4gICAgICAgICAgICAgIHR5cGVOYW1lOiBcImt1YmVybmV0ZXNNZXRhZGF0YVwiLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICAgICAgcC5wcm9wZXJ0aWVzLmFkZE9iamVjdCh7XG4gICAgICAgICAgbmFtZTogXCJzcGVjXCIsXG4gICAgICAgICAgbGFiZWw6IFwiRGVwbG95bWVudCBTcGVjXCIsXG4gICAgICAgICAgb3B0aW9ucyhwOiBQcm9wT2JqZWN0KSB7XG4gICAgICAgICAgICBwLnByb3BlcnRpZXMuYWRkTnVtYmVyKHtcbiAgICAgICAgICAgICAgbmFtZTogXCJyZXBsaWNhc1wiLFxuICAgICAgICAgICAgICBsYWJlbDogXCJSZXBsaWNhc1wiLFxuICAgICAgICAgICAgICBvcHRpb25zKHA6IFByb3BOdW1iZXIpIHtcbiAgICAgICAgICAgICAgICBwLm51bWJlcktpbmQgPSBcInVpbnQzMlwiO1xuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBwLnByb3BlcnRpZXMuYWRkTGluayh7XG4gICAgICAgICAgICAgIG5hbWU6IFwic2VsZWN0b3JcIixcbiAgICAgICAgICAgICAgbGFiZWw6IFwiU2VsZWN0b3JcIixcbiAgICAgICAgICAgICAgb3B0aW9ucyhwOiBQcm9wTGluaykge1xuICAgICAgICAgICAgICAgIHAubG9va3VwID0ge1xuICAgICAgICAgICAgICAgICAgdHlwZU5hbWU6IFwia3ViZXJuZXRlc1NlbGVjdG9yXCIsXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcC5wcm9wZXJ0aWVzLmFkZExpbmsoe1xuICAgICAgICAgICAgICBuYW1lOiBcInRlbXBsYXRlXCIsXG4gICAgICAgICAgICAgIGxhYmVsOiBcIlBvZCBUZW1wbGF0ZSBTcGVjXCIsXG4gICAgICAgICAgICAgIG9wdGlvbnMocDogUHJvcExpbmspIHtcbiAgICAgICAgICAgICAgICBwLmxvb2t1cCA9IHtcbiAgICAgICAgICAgICAgICAgIHR5cGVOYW1lOiBcImt1YmVybmV0ZXNQb2RUZW1wbGF0ZVNwZWNcIixcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSxcbiAgICAgICAgfSk7XG4gICAgICB9LFxuICAgIH0pO1xuXG4gICAgYy5wcm9wZXJ0aWVzLmFkZENvZGUoe1xuICAgICAgbmFtZTogXCJrdWJlcm5ldGVzT2JqZWN0WWFtbFwiLFxuICAgICAgbGFiZWw6IFwiS3ViZXJuZXRlcyBPYmplY3QgWUFNTFwiLFxuICAgICAgb3B0aW9ucyhwOiBQcm9wQ29kZSkge1xuICAgICAgICBwLmxhbmd1YWdlID0gXCJ5YW1sXCI7XG4gICAgICB9LFxuICAgIH0pO1xuICB9LFxufSk7XG4iXX0=