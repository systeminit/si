"use strict";

var _registry = require("../../registry");

_registry.registry.base({
  typeName: "entitySiProperties",
  displayTypeName: "SI Entity Internal Properties",
  serviceName: "cea",
  options: function options(c) {
    c.fields.addEnum({
      name: "entityState",
      label: "Entity State",
      options: function options(p) {
        p.universal = true;
        p.variants = ["error", "ok", "transition"];
      }
    });
    c.fields.addText({
      name: "integrationId",
      label: "Integration Id",
      options: function options(p) {
        p.readOnly = true;
        p.hidden = true;
        p.required = true;
        p.universal = true;
      }
    });
    c.fields.addText({
      name: "integrationServiceId",
      label: "Integration Service Id",
      options: function options(p) {
        p.readOnly = true;
        p.hidden = true;
        p.required = true;
        p.universal = true;
      }
    });
    c.fields.addText({
      name: "componentId",
      label: "Component Id",
      options: function options(p) {
        p.readOnly = true;
        p.hidden = true;
        p.required = true;
        p.universal = true;
      }
    });
    c.fields.addText({
      name: "workspaceId",
      label: "Workspace ID",
      options: function options(p) {
        p.readOnly = true;
        p.hidden = true;
        p.required = true;
        p.universal = true;
      }
    });
    c.fields.addText({
      name: "organizationId",
      label: "Organization ID",
      options: function options(p) {
        p.readOnly = true;
        p.hidden = true;
        p.required = true;
        p.universal = true;
      }
    });
    c.fields.addText({
      name: "billingAccountId",
      label: "Billing Account ID",
      options: function options(p) {
        p.readOnly = true;
        p.hidden = true;
        p.required = true;
        p.universal = true;
      }
    });
    c.fields.addNumber({
      name: "version",
      label: "Version",
      options: function options(p) {
        p.numberKind = "int32";
        p.readOnly = true;
        p.hidden = true;
        p.required = true;
        p.universal = true;
      }
    });
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3NpLWNlYS9lbnRpdHkudHMiXSwibmFtZXMiOlsicmVnaXN0cnkiLCJiYXNlIiwidHlwZU5hbWUiLCJkaXNwbGF5VHlwZU5hbWUiLCJzZXJ2aWNlTmFtZSIsIm9wdGlvbnMiLCJjIiwiZmllbGRzIiwiYWRkRW51bSIsIm5hbWUiLCJsYWJlbCIsInAiLCJ1bml2ZXJzYWwiLCJ2YXJpYW50cyIsImFkZFRleHQiLCJyZWFkT25seSIsImhpZGRlbiIsInJlcXVpcmVkIiwiYWRkTnVtYmVyIiwibnVtYmVyS2luZCJdLCJtYXBwaW5ncyI6Ijs7QUFFQTs7QUFFQUEsbUJBQVNDLElBQVQsQ0FBYztBQUNaQyxFQUFBQSxRQUFRLEVBQUUsb0JBREU7QUFFWkMsRUFBQUEsZUFBZSxFQUFFLCtCQUZMO0FBR1pDLEVBQUFBLFdBQVcsRUFBRSxLQUhEO0FBSVpDLEVBQUFBLE9BSlksbUJBSUpDLENBSkksRUFJRDtBQUNUQSxJQUFBQSxDQUFDLENBQUNDLE1BQUYsQ0FBU0MsT0FBVCxDQUFpQjtBQUNmQyxNQUFBQSxJQUFJLEVBQUUsYUFEUztBQUVmQyxNQUFBQSxLQUFLLEVBQUUsY0FGUTtBQUdmTCxNQUFBQSxPQUhlLG1CQUdQTSxDQUhPLEVBR007QUFDbkJBLFFBQUFBLENBQUMsQ0FBQ0MsU0FBRixHQUFjLElBQWQ7QUFDQUQsUUFBQUEsQ0FBQyxDQUFDRSxRQUFGLEdBQWEsQ0FBQyxPQUFELEVBQVUsSUFBVixFQUFnQixZQUFoQixDQUFiO0FBQ0Q7QUFOYyxLQUFqQjtBQVFBUCxJQUFBQSxDQUFDLENBQUNDLE1BQUYsQ0FBU08sT0FBVCxDQUFpQjtBQUNmTCxNQUFBQSxJQUFJLEVBQUUsZUFEUztBQUVmQyxNQUFBQSxLQUFLLEVBQUUsZ0JBRlE7QUFHZkwsTUFBQUEsT0FIZSxtQkFHUE0sQ0FITyxFQUdKO0FBQ1RBLFFBQUFBLENBQUMsQ0FBQ0ksUUFBRixHQUFhLElBQWI7QUFDQUosUUFBQUEsQ0FBQyxDQUFDSyxNQUFGLEdB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QUFDLENBQUNJLFFBQUYsR0FBYSxJQUFiO0FBQ0FKLFFBQUFBLENBQUMsQ0FBQ0ssTUFBRixHQUFXLElBQVg7QUFDQUwsUUFBQUEsQ0FBQyxDQUFDTSxRQUFGLEdBQWEsSUFBYjtBQUNBTixRQUFBQSxDQUFDLENBQUNDLFNBQUYsR0FBYyxJQUFkO0FBQ0Q7QUFUZ0IsS0FBbkI7QUFXRDtBQXBGVyxDQUFkIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJvcEVudW0sIFByb3BOdW1iZXIgfSBmcm9tIFwiLi4vLi4vY29tcG9uZW50cy9wcmVsdWRlXCI7XG5cbmltcG9ydCB7IHJlZ2lzdHJ5IH0gZnJvbSBcIi4uLy4uL3JlZ2lzdHJ5XCI7XG5cbnJlZ2lzdHJ5LmJhc2Uoe1xuICB0eXBlTmFtZTogXCJlbnRpdHlTaVByb3BlcnRpZXNcIixcbiAgZGlzcGxheVR5cGVOYW1lOiBcIlNJIEVudGl0eSBJbnRlcm5hbCBQcm9wZXJ0aWVzXCIsXG4gIHNlcnZpY2VOYW1lOiBcImNlYVwiLFxuICBvcHRpb25zKGMpIHtcbiAgICBjLmZpZWxkcy5hZGRFbnVtKHtcbiAgICAgIG5hbWU6IFwiZW50aXR5U3RhdGVcIixcbiAgICAgIGxhYmVsOiBcIkVudGl0eSBTdGF0ZVwiLFxuICAgICAgb3B0aW9ucyhwOiBQcm9wRW51bSkge1xuICAgICAgICBwLnVuaXZlcnNhbCA9IHRydWU7XG4gICAgICAgIHAudmFyaWFudHMgPSBbXCJlcnJvclwiLCBcIm9rXCIsIFwidHJhbnNpdGlvblwiXTtcbiAgICAgIH0sXG4gICAgfSk7XG4gICAgYy5maWVsZHMuYWRkVGV4dCh7XG4gICAgICBuYW1lOiBcImludGVncmF0aW9uSWRcIixcbiAgICAgIGxhYmVsOiBcIkludGVncmF0aW9uIElkXCIsXG4gICAgICBvcHRpb25zKHApIHtcbiAgICAgICAgcC5yZWFkT25seSA9IHRydWU7XG4gICAgICAgIHAuaGlkZGVuID0gdHJ1ZTtcbiAgICAgICAgcC5yZXF1aXJlZCA9IHRydWU7XG4gICAgICAgIHAudW5pdmVyc2FsID0gdHJ1ZTtcbiAgICAgIH0sXG4gICAgfSk7XG4gICAgYy5maWVsZHMuYWRkVGV4dCh7XG4gICAgICBuYW1lOiBcImludGVncmF0aW9uU2VydmljZUlkXCIsXG4gICAgICBsYWJlbDogXCJJbnRlZ3JhdGlvbiBTZXJ2aWNlIElkXCIsXG4gICAgICBvcHRpb25zKHApIHtcbiAgICAgICAgcC5yZWFkT25seSA9IHRydWU7XG4gICAgICAgIHAuaGlkZGVuID0gdHJ1ZTtcbiAgICAgICAgcC5yZXF1aXJlZCA9IHRydWU7XG4gICAgICAgIHAudW5pdmVyc2FsID0gdHJ1ZTtcbiAgICAgIH0sXG4gICAgfSk7XG4gICAgYy5maWVsZHMuYWRkVGV4dCh7XG4gICAgICBuYW1lOiBcImNvbXBvbmVudElkXCIsXG4gICAgICBsYWJlbDogXCJDb21wb25lbnQgSWRcIixcbiAgICAgIG9wdGlvbnMocCkge1xuICAgICAgICBwLnJlYWRPbmx5ID0gdHJ1ZTtcbiAgICAgICAgcC5oaWRkZW4gPSB0cnVlO1xuICAgICAgICBwLnJlcXVpcmVkID0gdHJ1ZTtcbiAgICAgICAgcC51bml2ZXJzYWwgPSB0cnVlO1xuICAgICAgfSxcbiAgICB9KTtcbiAgICBjLmZpZWxkcy5hZGRUZXh0KHtcbiAgICAgIG5hbWU6IFwid29ya3NwYWNlSWRcIixcbiAgICAgIGxhYmVsOiBcIldvcmtzcGFjZSBJRFwiLFxuICAgICAgb3B0aW9ucyhwKSB7XG4gICAgICAgIHAucmVhZE9ubHkgPSB0cnVlO1xuICAgICAgICBwLmhpZGRlbiA9IHRydWU7XG4gICAgICAgIHAucmVxdWlyZWQgPSB0cnVlO1xuICAgICAgICBwLnVuaXZlcnNhbCA9IHRydWU7XG4gICAgICB9LFxuICAgIH0pO1xuICAgIGMuZmllbGRzLmFkZFRleHQoe1xuICAgICAgbmFtZTogXCJvcmdhbml6YXRpb25JZFwiLFxuICAgICAgbGFiZWw6IFwiT3JnYW5pemF0aW9uIElEXCIsXG4gICAgICBvcHRpb25zKHApIHtcbiAgICAgICAgcC5yZWFkT25seSA9IHRydWU7XG4gICAgICAgIHAuaGlkZGVuID0gdHJ1ZTtcbiAgICAgICAgcC5yZXF1aXJlZCA9IHRydWU7XG4gICAgICAgIHAudW5pdmVyc2FsID0gdHJ1ZTtcbiAgICAgIH0sXG4gICAgfSk7XG4gICAgYy5maWVsZHMuYWRkVGV4dCh7XG4gICAgICBuYW1lOiBcImJpbGxpbmdBY2NvdW50SWRcIixcbiAgICAgIGxhYmVsOiBcIkJpbGxpbmcgQWNjb3VudCBJRFwiLFxuICAgICAgb3B0aW9ucyhwKSB7XG4gICAgICAgIHAucmVhZE9ubHkgPSB0cnVlO1xuICAgICAgICBwLmhpZGRlbiA9IHRydWU7XG4gICAgICAgIHAucmVxdWlyZWQgPSB0cnVlO1xuICAgICAgICBwLnVuaXZlcnNhbCA9IHRydWU7XG4gICAgICB9LFxuICAgIH0pO1xuICAgIGMuZmllbGRzLmFkZE51bWJlcih7XG4gICAgICBuYW1lOiBcInZlcnNpb25cIixcbiAgICAgIGxhYmVsOiBcIlZlcnNpb25cIixcbiAgICAgIG9wdGlvbnMocDogUHJvcE51bWJlcikge1xuICAgICAgICBwLm51bWJlcktpbmQgPSBcImludDMyXCI7XG4gICAgICAgIHAucmVhZE9ubHkgPSB0cnVlO1xuICAgICAgICBwLmhpZGRlbiA9IHRydWU7XG4gICAgICAgIHAucmVxdWlyZWQgPSB0cnVlO1xuICAgICAgICBwLnVuaXZlcnNhbCA9IHRydWU7XG4gICAgICB9LFxuICAgIH0pO1xuICB9LFxufSk7XG4iXX0=