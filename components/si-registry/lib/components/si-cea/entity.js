"use strict";

var _registry = require("../../registry");

_registry.registry.base({
  typeName: "entitySiProperties",
  displayTypeName: "SI Entity Internal Properties",
  serviceName: "cea",
  options: function options(c) {
    c.fields.addEnum({
      name: "entityState",
      label: "Entity State",
      options: function options(p) {
        p.universal = true;
        p.variants = ["error", "ok", "transition"];
      }
    });
    c.fields.addText({
      name: "integrationId",
      label: "Integration Id",
      options: function options(p) {
        p.readOnly = true;
        p.hidden = true;
        p.required = true;
        p.universal = true;
      }
    });
    c.fields.addText({
      name: "integrationServiceId",
      label: "Integration Service Id",
      options: function options(p) {
        p.readOnly = true;
        p.hidden = true;
        p.required = true;
        p.universal = true;
      }
    });
    c.fields.addText({
      name: "componentId",
      label: "Component Id",
      options: function options(p) {
        p.readOnly = true;
        p.hidden = true;
        p.required = true;
        p.universal = true;
      }
    });
    c.fields.addText({
      name: "workspaceId",
      label: "Workspace ID",
      options: function options(p) {
        p.readOnly = true;
        p.hidden = true;
        p.required = true;
        p.universal = true;
      }
    });
    c.fields.addText({
      name: "changeSetId",
      label: "Change Set ID",
      options: function options(p) {
        p.readOnly = true;
        p.hidden = true;
        p.universal = true;
      }
    });
    c.fields.addText({
      name: "organizationId",
      label: "Organization ID",
      options: function options(p) {
        p.readOnly = true;
        p.hidden = true;
        p.required = true;
        p.universal = true;
      }
    });
    c.fields.addText({
      name: "billingAccountId",
      label: "Billing Account ID",
      options: function options(p) {
        p.readOnly = true;
        p.hidden = true;
        p.required = true;
        p.universal = true;
      }
    });
    c.fields.addNumber({
      name: "version",
      label: "Version",
      options: function options(p) {
        p.numberKind = "int32";
        p.readOnly = true;
        p.hidden = true;
        p.required = true;
        p.universal = true;
      }
    });
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3NpLWNlYS9lbnRpdHkudHMiXSwibmFtZXMiOlsicmVnaXN0cnkiLCJiYXNlIiwidHlwZU5hbWUiLCJkaXNwbGF5VHlwZU5hbWUiLCJzZXJ2aWNlTmFtZSIsIm9wdGlvbnMiLCJjIiwiZmllbGRzIiwiYWRkRW51bSIsIm5hbWUiLCJsYWJlbCIsInAiLCJ1bml2ZXJzYWwiLCJ2YXJpYW50cyIsImFkZFRleHQiLCJyZWFkT25seSIsImhpZGRlbiIsInJlcXVpcmVkIiwiYWRkTnVtYmVyIiwibnVtYmVyS2luZCJdLCJtYXBwaW5ncyI6Ijs7QUFFQTs7QUFFQUEsbUJBQVNDLElBQVQsQ0FBYztBQUNaQyxFQUFBQSxRQUFRLEVBQUUsb0JBREU7QUFFWkMsRUFBQUEsZUFBZSxFQUFFLCtCQUZMO0FBR1pDLEVBQUFBLFdBQVcsRUFBRSxLQUhEO0FBSVpDLEVBQUFBLE9BSlksbUJBSUpDLENBSkksRUFJRDtBQUNUQSxJQUFBQSxDQUFDLENBQUNDLE1BQUYsQ0FBU0MsT0FBVCxDQUFpQjtBQUNmQyxNQUFBQSxJQUFJLEVBQUUsYUFEUztBQUVmQyxNQUFBQSxLQUFLLEVBQUUsY0FGUTtBQUdmTCxNQUFBQSxPQUhlLG1CQUdQTSxDQUhPLEVBR007QUFDbkJBLFFBQUFBLENBQUMsQ0FBQ0MsU0FBRixHQUFjLElBQWQ7QUFDQUQsUUFBQUEsQ0FBQyxDQUFDRSxRQUFGLEdBQWEsQ0FBQyxPQUFELEVBQVUsSUFBVixFQUFnQixZQUFoQixDQUFiO0FBQ0Q7QUFOYyxLQUFqQjtBQVFBUCxJQUFBQSxDQUFDLENBQUNDLE1BQUYsQ0FBU08sT0FBVCxDQUFpQjtBQUNmTCxNQUFBQSxJQUFJLEVBQUUsZUFEUztBQUVmQyxNQUFBQSxLQUFLLEVBQUUsZ0JBRlE7QUFHZkwsTUFBQUEsT0FIZSxtQkFHUE0sQ0FITyxFQUdKO0FBQ1RBLFFBQUFBLENBQUMsQ0FBQ0ksUUFBRixHQUFhLElBQWI7QUFDQUosUUFBQUEsQ0FBQyxDQUFDSyxNQUFGLEdB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QUFDTSxRQUFGLEdBQWEsSUFBYjtBQUNBTixRQUFBQSxDQUFDLENBQUNDLFNBQUYsR0FBYyxJQUFkO0FBQ0Q7QUFSYyxLQUFqQjtBQVVBTixJQUFBQSxDQUFDLENBQUNDLE1BQUYsQ0FBU1csU0FBVCxDQUFtQjtBQUNqQlQsTUFBQUEsSUFBSSxFQUFFLFNBRFc7QUFFakJDLE1BQUFBLEtBQUssRUFBRSxTQUZVO0FBR2pCTCxNQUFBQSxPQUhpQixtQkFHVE0sQ0FIUyxFQUdNO0FBQ3JCQSxRQUFBQSxDQUFDLENBQUNRLFVBQUYsR0FBZSxPQUFmO0FBQ0FSLFFBQUFBLENBQUMsQ0FBQ0ksUUFBRixHQUFhLElBQWI7QUFDQUosUUFBQUEsQ0FBQyxDQUFDSyxNQUFGLEdBQVcsSUFBWDtBQUNBTCxRQUFBQSxDQUFDLENBQUNNLFFBQUYsR0FBYSxJQUFiO0FBQ0FOLFFBQUFBLENBQUMsQ0FBQ0MsU0FBRixHQUFjLElBQWQ7QUFDRDtBQVRnQixLQUFuQjtBQVdEO0FBN0ZXLENBQWQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQcm9wRW51bSwgUHJvcE51bWJlciB9IGZyb20gXCIuLi8uLi9jb21wb25lbnRzL3ByZWx1ZGVcIjtcblxuaW1wb3J0IHsgcmVnaXN0cnkgfSBmcm9tIFwiLi4vLi4vcmVnaXN0cnlcIjtcblxucmVnaXN0cnkuYmFzZSh7XG4gIHR5cGVOYW1lOiBcImVudGl0eVNpUHJvcGVydGllc1wiLFxuICBkaXNwbGF5VHlwZU5hbWU6IFwiU0kgRW50aXR5IEludGVybmFsIFByb3BlcnRpZXNcIixcbiAgc2VydmljZU5hbWU6IFwiY2VhXCIsXG4gIG9wdGlvbnMoYykge1xuICAgIGMuZmllbGRzLmFkZEVudW0oe1xuICAgICAgbmFtZTogXCJlbnRpdHlTdGF0ZVwiLFxuICAgICAgbGFiZWw6IFwiRW50aXR5IFN0YXRlXCIsXG4gICAgICBvcHRpb25zKHA6IFByb3BFbnVtKSB7XG4gICAgICAgIHAudW5pdmVyc2FsID0gdHJ1ZTtcbiAgICAgICAgcC52YXJpYW50cyA9IFtcImVycm9yXCIsIFwib2tcIiwgXCJ0cmFuc2l0aW9uXCJdO1xuICAgICAgfSxcbiAgICB9KTtcbiAgICBjLmZpZWxkcy5hZGRUZXh0KHtcbiAgICAgIG5hbWU6IFwiaW50ZWdyYXRpb25JZFwiLFxuICAgICAgbGFiZWw6IFwiSW50ZWdyYXRpb24gSWRcIixcbiAgICAgIG9wdGlvbnMocCkge1xuICAgICAgICBwLnJlYWRPbmx5ID0gdHJ1ZTtcbiAgICAgICAgcC5oaWRkZW4gPSB0cnVlO1xuICAgICAgICBwLnJlcXVpcmVkID0gdHJ1ZTtcbiAgICAgICAgcC51bml2ZXJzYWwgPSB0cnVlO1xuICAgICAgfSxcbiAgICB9KTtcbiAgICBjLmZpZWxkcy5hZGRUZXh0KHtcbiAgICAgIG5hbWU6IFwiaW50ZWdyYXRpb25TZXJ2aWNlSWRcIixcbiAgICAgIGxhYmVsOiBcIkludGVncmF0aW9uIFNlcnZpY2UgSWRcIixcbiAgICAgIG9wdGlvbnMocCkge1xuICAgICAgICBwLnJlYWRPbmx5ID0gdHJ1ZTtcbiAgICAgICAgcC5oaWRkZW4gPSB0cnVlO1xuICAgICAgICBwLnJlcXVpcmVkID0gdHJ1ZTtcbiAgICAgICAgcC51bml2ZXJzYWwgPSB0cnVlO1xuICAgICAgfSxcbiAgICB9KTtcbiAgICBjLmZpZWxkcy5hZGRUZXh0KHtcbiAgICAgIG5hbWU6IFwiY29tcG9uZW50SWRcIixcbiAgICAgIGxhYmVsOiBcIkNvbXBvbmVudCBJZFwiLFxuICAgICAgb3B0aW9ucyhwKSB7XG4gICAgICAgIHAucmVhZE9ubHkgPSB0cnVlO1xuICAgICAgICBwLmhpZGRlbiA9IHRydWU7XG4gICAgICAgIHAucmVxdWlyZWQgPSB0cnVlO1xuICAgICAgICBwLnVuaXZlcnNhbCA9IHRydWU7XG4gICAgICB9LFxuICAgIH0pO1xuICAgIGMuZmllbGRzLmFkZFRleHQoe1xuICAgICAgbmFtZTogXCJ3b3Jrc3BhY2VJZFwiLFxuICAgICAgbGFiZWw6IFwiV29ya3NwYWNlIElEXCIsXG4gICAgICBvcHRpb25zKHApIHtcbiAgICAgICAgcC5yZWFkT25seSA9IHRydWU7XG4gICAgICAgIHAuaGlkZGVuID0gdHJ1ZTtcbiAgICAgICAgcC5yZXF1aXJlZCA9IHRydWU7XG4gICAgICAgIHAudW5pdmVyc2FsID0gdHJ1ZTtcbiAgICAgIH0sXG4gICAgfSk7XG4gICAgYy5maWVsZHMuYWRkVGV4dCh7XG4gICAgICBuYW1lOiBcImNoYW5nZVNldElkXCIsXG4gICAgICBsYWJlbDogXCJDaGFuZ2UgU2V0IElEXCIsXG4gICAgICBvcHRpb25zKHApIHtcbiAgICAgICAgcC5yZWFkT25seSA9IHRydWU7XG4gICAgICAgIHAuaGlkZGVuID0gdHJ1ZTtcbiAgICAgICAgcC51bml2ZXJzYWwgPSB0cnVlO1xuICAgICAgfSxcbiAgICB9KTtcbiAgICBjLmZpZWxkcy5hZGRUZXh0KHtcbiAgICAgIG5hbWU6IFwib3JnYW5pemF0aW9uSWRcIixcbiAgICAgIGxhYmVsOiBcIk9yZ2FuaXphdGlvbiBJRFwiLFxuICAgICAgb3B0aW9ucyhwKSB7XG4gICAgICAgIHAucmVhZE9ubHkgPSB0cnVlO1xuICAgICAgICBwLmhpZGRlbiA9IHRydWU7XG4gICAgICAgIHAucmVxdWlyZWQgPSB0cnVlO1xuICAgICAgICBwLnVuaXZlcnNhbCA9IHRydWU7XG4gICAgICB9LFxuICAgIH0pO1xuICAgIGMuZmllbGRzLmFkZFRleHQoe1xuICAgICAgbmFtZTogXCJiaWxsaW5nQWNjb3VudElkXCIsXG4gICAgICBsYWJlbDogXCJCaWxsaW5nIEFjY291bnQgSURcIixcbiAgICAgIG9wdGlvbnMocCkge1xuICAgICAgICBwLnJlYWRPbmx5ID0gdHJ1ZTtcbiAgICAgICAgcC5oaWRkZW4gPSB0cnVlO1xuICAgICAgICBwLnJlcXVpcmVkID0gdHJ1ZTtcbiAgICAgICAgcC51bml2ZXJzYWwgPSB0cnVlO1xuICAgICAgfSxcbiAgICB9KTtcbiAgICBjLmZpZWxkcy5hZGROdW1iZXIoe1xuICAgICAgbmFtZTogXCJ2ZXJzaW9uXCIsXG4gICAgICBsYWJlbDogXCJWZXJzaW9uXCIsXG4gICAgICBvcHRpb25zKHA6IFByb3BOdW1iZXIpIHtcbiAgICAgICAgcC5udW1iZXJLaW5kID0gXCJpbnQzMlwiO1xuICAgICAgICBwLnJlYWRPbmx5ID0gdHJ1ZTtcbiAgICAgICAgcC5oaWRkZW4gPSB0cnVlO1xuICAgICAgICBwLnJlcXVpcmVkID0gdHJ1ZTtcbiAgICAgICAgcC51bml2ZXJzYWwgPSB0cnVlO1xuICAgICAgfSxcbiAgICB9KTtcbiAgfSxcbn0pO1xuIl19