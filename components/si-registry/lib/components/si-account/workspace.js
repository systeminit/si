"use strict";

var _registry = require("../../registry");

_registry.registry.system({
  typeName: "workspace",
  displayTypeName: "A System Initiative Workspace",
  siPathName: "si-account",
  serviceName: "account",
  options: function options(c) {
    c.associations.belongsTo({
      fromFieldPath: ["siProperties", "billingAccountId"],
      typeName: "billingAccount"
    });
    c.associations.belongsTo({
      fromFieldPath: ["siProperties", "organizationId"],
      typeName: "organization"
    });
    c.associations.inList({
      fieldName: "integrationInstances",
      typeName: "integrationInstance",
      toFieldPath: ["siProperties", "enabledWorkspaceIdList"]
    });
    c.fields.addObject({
      name: "siProperties",
      label: "SI Internal Properties",
      options: function options(p) {
        p.required = true;
        p.properties.addText({
          name: "billingAccountId",
          label: "Billing Account ID",
          options: function options(p) {
            p.required = true;
          }
        });
        p.properties.addText({
          name: "organizationId",
          label: "Organization ID",
          options: function options(p) {
            p.required = true;
          }
        });
      }
    });
    c.addListMethod();
    c.addGetMethod();
    c.methods.addMethod({
      name: "create",
      label: "Create an Organization",
      options: function options(p) {
        p.mutation = true;
        p.request.properties.addText({
          name: "name",
          label: "User Name",
          options: function options(p) {
            p.required = true;
          }
        });
        p.request.properties.addText({
          name: "displayName",
          label: "User Display Name",
          options: function options(p) {
            p.required = true;
          }
        });
        p.request.properties.addLink({
          name: "siProperties",
          label: "The SI Properties for this User",
          options: function options(p) {
            p.required = true;
            p.lookup = {
              typeName: "workspace",
              names: ["siProperties"]
            };
          }
        });
        p.reply.properties.addLink({
          name: "item",
          label: "".concat(c.displayTypeName, " Item"),
          options: function options(p) {
            p.lookup = {
              typeName: "workspace"
            };
          }
        });
      }
    });
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3NpLWFjY291bnQvd29ya3NwYWNlLnRzIl0sIm5hbWVzIjpbInJlZ2lzdHJ5Iiwic3lzdGVtIiwidHlwZU5hbWUiLCJkaXNwbGF5VHlwZU5hbWUiLCJzaVBhdGhOYW1lIiwic2VydmljZU5hbWUiLCJvcHRpb25zIiwiYyIsImFzc29jaWF0aW9ucyIsImJlbG9uZ3NUbyIsImZyb21GaWVsZFBhdGgiLCJpbkxpc3QiLCJmaWVsZE5hbWUiLCJ0b0ZpZWxkUGF0aCIsImZpZWxkcyIsImFkZE9iamVjdCIsIm5hbWUiLCJsYWJlbCIsInAiLCJyZXF1aXJlZCIsInByb3BlcnRpZXMiLCJhZGRUZXh0IiwiYWRkTGlzdE1ldGhvZCIsImFkZEdldE1ldGhvZCIsIm1ldGhvZHMiLCJhZGRNZXRob2QiLCJtdXRhdGlvbiIsInJlcXVlc3QiLCJhZGRMaW5rIiwibG9va3VwIiwibmFtZXMiLCJyZXBseSJdLCJtYXBwaW5ncyI6Ijs7QUFDQTs7QUFHQUEsbUJBQVNDLE1BQVQsQ0FBZ0I7QUFDZEMsRUFBQUEsUUFBUSxFQUFFLFdBREk7QUFFZEMsRUFBQUEsZUFBZSxFQUFFLCtCQUZIO0FBR2RDLEVBQUFBLFVBQVUsRUFBRSxZQUhFO0FBSWRDLEVBQUFBLFdBQVcsRUFBRSxTQUpDO0FBS2RDLEVBQUFBLE9BTGMsbUJBS05DLENBTE0sRUFLVztBQUN2QkEsSUFBQUEsQ0FBQyxDQUFDQyxZQUFGLENBQWVDLFNBQWYsQ0FBeUI7QUFDdkJDLE1BQUFBLGFBQWEsRUFBRSxDQUFDLGNBQUQsRUFBaUIsa0JBQWpCLENBRFE7QUFFdkJSLE1BQUFBLFFBQVEsRUFBRTtBQUZhLEtBQXpCO0FBSUFLLElBQUFBLENBQUMsQ0FBQ0MsWUFBRixDQUFlQyxTQUFmLENBQXlCO0FBQ3ZCQyxNQUFBQSxhQUFhLEVBQUUsQ0FBQyxjQUFELEVBQWlCLGdCQUFqQixDQURRO0FBRXZCUixNQUFBQSxRQUFRLEVBQUU7QUFGYSxLQUF6QjtBQUlBSyxJQUFBQSxDQUFD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S0FBSyxZQUFLVixDQUFDLENBQUNKLGVBQVAsVUFGb0I7QUFHekJHLFVBQUFBLE9BSHlCLG1CQUdqQlksQ0FIaUIsRUFHSjtBQUNuQkEsWUFBQUEsQ0FBQyxDQUFDVyxNQUFGLEdBQVc7QUFDVDNCLGNBQUFBLFFBQVEsRUFBRTtBQURELGFBQVg7QUFHRDtBQVB3QixTQUEzQjtBQVNEO0FBdkNpQixLQUFwQjtBQXlDRDtBQXBGYSxDQUFoQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFByb3BPYmplY3QsIFByb3BNZXRob2QsIFByb3BMaW5rIH0gZnJvbSBcIi4uLy4uL2NvbXBvbmVudHMvcHJlbHVkZVwiO1xuaW1wb3J0IHsgcmVnaXN0cnkgfSBmcm9tIFwiLi4vLi4vcmVnaXN0cnlcIjtcbmltcG9ydCB7IFN5c3RlbU9iamVjdCB9IGZyb20gXCIuLi8uLi9zeXN0ZW1Db21wb25lbnRcIjtcblxucmVnaXN0cnkuc3lzdGVtKHtcbiAgdHlwZU5hbWU6IFwid29ya3NwYWNlXCIsXG4gIGRpc3BsYXlUeXBlTmFtZTogXCJBIFN5c3RlbSBJbml0aWF0aXZlIFdvcmtzcGFjZVwiLFxuICBzaVBhdGhOYW1lOiBcInNpLWFjY291bnRcIixcbiAgc2VydmljZU5hbWU6IFwiYWNjb3VudFwiLFxuICBvcHRpb25zKGM6IFN5c3RlbU9iamVjdCkge1xuICAgIGMuYXNzb2NpYXRpb25zLmJlbG9uZ3NUbyh7XG4gICAgICBmcm9tRmllbGRQYXRoOiBbXCJzaVByb3BlcnRpZXNcIiwgXCJiaWxsaW5nQWNjb3VudElkXCJdLFxuICAgICAgdHlwZU5hbWU6IFwiYmlsbGluZ0FjY291bnRcIixcbiAgICB9KTtcbiAgICBjLmFzc29jaWF0aW9ucy5iZWxvbmdzVG8oe1xuICAgICAgZnJvbUZpZWxkUGF0aDogW1wic2lQcm9wZXJ0aWVzXCIsIFwib3JnYW5pemF0aW9uSWRcIl0sXG4gICAgICB0eXBlTmFtZTogXCJvcmdhbml6YXRpb25cIixcbiAgICB9KTtcbiAgICBjLmFzc29jaWF0aW9ucy5pbkxpc3Qoe1xuICAgICAgZmllbGROYW1lOiBcImludGVncmF0aW9uSW5zdGFuY2VzXCIsXG4gICAgICB0eXBlTmFtZTogXCJpbnRlZ3JhdGlvbkluc3RhbmNlXCIsXG4gICAgICB0b0ZpZWxkUGF0aDogW1wic2lQcm9wZXJ0aWVzXCIsIFwiZW5hYmxlZFdvcmtzcGFjZUlkTGlzdFwiXSxcbiAgICB9KTtcblxuICAgIGMuZmllbGRzLmFkZE9iamVjdCh7XG4gICAgICBuYW1lOiBcInNpUHJvcGVydGllc1wiLFxuICAgICAgbGFiZWw6IFwiU0kgSW50ZXJuYWwgUHJvcGVydGllc1wiLFxuICAgICAgb3B0aW9ucyhwOiBQcm9wT2JqZWN0KSB7XG4gICAgICAgIHAucmVxdWlyZWQgPSB0cnVlO1xuICAgICAgICBwLnByb3BlcnRpZXMuYWRkVGV4dCh7XG4gICAgICAgICAgbmFtZTogXCJiaWxsaW5nQWNjb3VudElkXCIsXG4gICAgICAgICAgbGFiZWw6IFwiQmlsbGluZyBBY2NvdW50IElEXCIsXG4gICAgICAgICAgb3B0aW9ucyhwKSB7XG4gICAgICAgICAgICBwLnJlcXVpcmVkID0gdHJ1ZTtcbiAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICAgICAgcC5wcm9wZXJ0aWVzLmFkZFRleHQoe1xuICAgICAgICAgIG5hbWU6IFwib3JnYW5pemF0aW9uSWRcIixcbiAgICAgICAgICBsYWJlbDogXCJPcmdhbml6YXRpb24gSURcIixcbiAgICAgICAgICBvcHRpb25zKHApIHtcbiAgICAgICAgICAgIHAucmVxdWlyZWQgPSB0cnVlO1xuICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgICAgfSxcbiAgICB9KTtcbiAgICBjLmFkZExpc3RNZXRob2QoKTtcbiAgICBjLmFkZEdldE1ldGhvZCgpO1xuICAgIGMubWV0aG9kcy5hZGRNZXRob2Qoe1xuICAgICAgbmFtZTogXCJjcmVhdGVcIixcbiAgICAgIGxhYmVsOiBcIkNyZWF0ZSBhbiBPcmdhbml6YXRpb25cIixcbiAgICAgIG9wdGlvbnMocDogUHJvcE1ldGhvZCkge1xuICAgICAgICBwLm11dGF0aW9uID0gdHJ1ZTtcbiAgICAgICAgcC5yZXF1ZXN0LnByb3BlcnRpZXMuYWRkVGV4dCh7XG4gICAgICAgICAgbmFtZTogXCJuYW1lXCIsXG4gICAgICAgICAgbGFiZWw6IFwiVXNlciBOYW1lXCIsXG4gICAgICAgICAgb3B0aW9ucyhwKSB7XG4gICAgICAgICAgICBwLnJlcXVpcmVkID0gdHJ1ZTtcbiAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICAgICAgcC5yZXF1ZXN0LnByb3BlcnRpZXMuYWRkVGV4dCh7XG4gICAgICAgICAgbmFtZTogXCJkaXNwbGF5TmFtZVwiLFxuICAgICAgICAgIGxhYmVsOiBcIlVzZXIgRGlzcGxheSBOYW1lXCIsXG4gICAgICAgICAgb3B0aW9ucyhwKSB7XG4gICAgICAgICAgICBwLnJlcXVpcmVkID0gdHJ1ZTtcbiAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICAgICAgcC5yZXF1ZXN0LnByb3BlcnRpZXMuYWRkTGluayh7XG4gICAgICAgICAgbmFtZTogXCJzaVByb3BlcnRpZXNcIixcbiAgICAgICAgICBsYWJlbDogXCJUaGUgU0kgUHJvcGVydGllcyBmb3IgdGhpcyBVc2VyXCIsXG4gICAgICAgICAgb3B0aW9ucyhwOiBQcm9wTGluaykge1xuICAgICAgICAgICAgcC5yZXF1aXJlZCA9IHRydWU7XG4gICAgICAgICAgICBwLmxvb2t1cCA9IHtcbiAgICAgICAgICAgICAgdHlwZU5hbWU6IFwid29ya3NwYWNlXCIsXG4gICAgICAgICAgICAgIG5hbWVzOiBbXCJzaVByb3BlcnRpZXNcIl0sXG4gICAgICAgICAgICB9O1xuICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgICAgICBwLnJlcGx5LnByb3BlcnRpZXMuYWRkTGluayh7XG4gICAgICAgICAgbmFtZTogXCJpdGVtXCIsXG4gICAgICAgICAgbGFiZWw6IGAke2MuZGlzcGxheVR5cGVOYW1lfSBJdGVtYCxcbiAgICAgICAgICBvcHRpb25zKHA6IFByb3BMaW5rKSB7XG4gICAgICAgICAgICBwLmxvb2t1cCA9IHtcbiAgICAgICAgICAgICAgdHlwZU5hbWU6IFwid29ya3NwYWNlXCIsXG4gICAgICAgICAgICB9O1xuICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgICAgfSxcbiAgICB9KTtcbiAgfSxcbn0pO1xuXG4iXX0=