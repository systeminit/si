"use strict";

var _registry = require("../../registry");

_registry.registry.system({
  typeName: "integration",
  displayTypeName: "An integration with another system",
  siPathName: "si-account",
  serviceName: "account",
  options: function options(c) {
    c.associations.belongsTo({
      fromFieldPath: ["siProperties", "billingAccountId"],
      typeName: "billingAccount"
    });
    c.associations.hasMany({
      fieldName: "integrationInstances",
      typeName: "integrationInstance"
    });
    c.fields.addNumber({
      name: "version",
      label: "The version of this integration",
      options: function options(p) {
        p.required = true;
        p.hidden = true;
        p.numberKind = "int32";
      }
    });
    c.fields.addObject({
      name: "options",
      label: "Options for this Integration",
      options: function options(p) {
        p.repeated = true;
        p.properties.addText({
          name: "name",
          label: "The name for this option",
          options: function options(p) {
            p.required = true;
          }
        });
        p.properties.addText({
          name: "displayName",
          label: "The display name for this option",
          options: function options(p) {
            p.required = true;
          }
        });
        p.properties.addEnum({
          name: "optionType",
          label: "The type of option",
          options: function options(p) {
            p.required = true;
            p.variants = ["string", "secret"];
          }
        });
      }
    });
    c.addListMethod();
    c.addGetMethod();
    c.methods.addMethod({
      name: "create",
      label: "Create an Integration",
      options: function options(p) {
        p.mutation = true;
        p.hidden = true;
        p.isPrivate = true;
        p.request.properties.addText({
          name: "name",
          label: "Integration Name",
          options: function options(p) {
            p.required = true;
          }
        });
        p.request.properties.addText({
          name: "displayName",
          label: "Integration Display Name",
          options: function options(p) {
            p.required = true;
          }
        });
        p.request.properties.addNumber({
          name: "version",
          label: "Version of this object; for migration",
          options: function options(p) {
            p.required = true;
            p.numberKind = "int32";
          }
        });
        p.request.properties.addLink({
          name: "options",
          label: "Options for this Integration",
          options: function options(p) {
            p.repeated = true;
            p.lookup = {
              typeName: "integration",
              names: ["options"]
            };
          }
        });
        p.reply.properties.addLink({
          name: "object",
          label: "".concat(c.displayTypeName, " Object"),
          options: function options(p) {
            p.lookup = {
              typeName: "integration"
            };
          }
        });
      }
    });
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,