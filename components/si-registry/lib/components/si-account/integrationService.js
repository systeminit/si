"use strict";

var _registry = require("../../registry");

_registry.registry.system({
  typeName: "integrationService",
  displayTypeName: "An service within an integration",
  siPathName: "si-account",
  serviceName: "account",
  options: function options(c) {
    c.associations.belongsTo({
      fromFieldPath: ["siProperties", "integrationId"],
      typeName: "integration"
    });
    c.fields.addNumber({
      name: "version",
      label: "The version of this integration",
      options: function options(p) {
        p.required = true;
        p.hidden = true;
        p.numberKind = "int32";
      }
    });
    c.fields.addObject({
      name: "siProperties",
      label: "SI Internal Properties",
      options: function options(p) {
        p.required = true;
        p.properties.addText({
          name: "integrationId",
          label: "Integration ID",
          options: function options(p) {
            p.required = true;
          }
        });
      }
    });
    c.addListMethod({
      isPrivate: true
    });
    c.addGetMethod();
    c.methods.addMethod({
      name: "create",
      label: "Create an Integration Servcie",
      options: function options(p) {
        p.mutation = true;
        p.hidden = true;
        p.isPrivate = true;
        p.request.properties.addText({
          name: "name",
          label: "Integration Service Name",
          options: function options(p) {
            p.required = true;
          }
        });
        p.request.properties.addText({
          name: "displayName",
          label: "Integration Service Display Name",
          options: function options(p) {
            p.required = true;
          }
        });
        p.request.properties.addNumber({
          name: "version",
          label: "Version of this object; for migration",
          options: function options(p) {
            p.required = true;
            p.numberKind = "int32";
          }
        });
        p.request.properties.addLink({
          name: "siProperties",
          label: "Si Properties",
          options: function options(p) {
            p.required = true;
            p.lookup = {
              typeName: "integrationService",
              names: ["siProperties"]
            };
          }
        });
        p.reply.properties.addLink({
          name: "object",
          label: "".concat(c.displayTypeName, " Object"),
          options: function options(p) {
            p.lookup = {
              typeName: "integrationService"
            };
          }
        });
      }
    });
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3NpLWFjY291bnQvaW50ZWdyYXRpb25TZXJ2aWNlLnRzIl0sIm5hbWVzIjpbInJlZ2lzdHJ5Iiwic3lzdGVtIiwidHlwZU5hbWUiLCJkaXNwbGF5VHlwZU5hbWUiLCJzaVBhdGhOYW1lIiwic2VydmljZU5hbWUiLCJvcHRpb25zIiwiYyIsImFzc29jaWF0aW9ucyIsImJlbG9uZ3NUbyIsImZyb21GaWVsZFBhdGgiLCJmaWVsZHMiLCJhZGROdW1iZXIiLCJuYW1lIiwibGFiZWwiLCJwIiwicmVxdWlyZWQiLCJoaWRkZW4iLCJudW1iZXJLaW5kIiwiYWRkT2JqZWN0IiwicHJvcGVydGllcyIsImFkZFRleHQiLCJhZGRMaXN0TWV0aG9kIiwiaXNQcml2YXRlIiwiYWRkR2V0TWV0aG9kIiwibWV0aG9kcyIsImFkZE1ldGhvZCIsIm11dGF0aW9uIiwicmVxdWVzdCIsImFkZExpbmsiLCJsb29rdXAiLCJuYW1lcyIsInJlcGx5Il0sIm1hcHBpbmdzIjoiOztBQU1BOztBQUdBQSxtQkFBU0MsTUFBVCxDQUFnQjtBQUNkQyxFQUFBQSxRQUFRLEVBQUUsb0JBREk7QUFFZEMsRUFBQUEsZUFBZSxFQUFFLGtDQUZIO0FBR2RDLEVBQUFBLFVBQVUsRUFBRSxZQUhFO0FBSWRDLEVBQUFBLFdBQVcsRUFBRSxTQUpDO0FBS2RDLEVBQUFBLE9BTGMsbUJBS05DLENBTE0sRUFLVztBQUN2QkEsSUFBQUEsQ0FBQyxDQUFDQyxZQUFGLENBQWVDLFNBQWYsQ0FBeUI7QUFDdkJDLE1BQUFBLGFBQWEsRUFBRSxDQUFDLGNBQUQsRUFBaUIsZUFBakIsQ0FEUTtBQUV2QlIsTUFBQUEsUUFBUSxFQUFFO0FBRmEsS0FBekI7QUFJQUssSUFBQUEsQ0FBQyxDQUFDSSxNQUFGLENBQVNDLFNBQVQsQ0FBbUI7QUFDakJDLE1BQUFBLElBQUksRUFBRSxTQURXO0FBRWpCQyxNQUFBQSxLQUFLLEVBQUUsaUNBRlU7QUFHakJSLE1BQUFBLE9BSGlCLG1CQUdU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QUFFLG9CQUREO0FBRVQ2QixjQUFBQSxLQUFLLEVBQUUsQ0FBQyxjQUFEO0FBRkUsYUFBWDtBQUlEO0FBVDBCLFNBQTdCO0FBV0FoQixRQUFBQSxDQUFDLENBQUNpQixLQUFGLENBQVFaLFVBQVIsQ0FBbUJTLE9BQW5CLENBQTJCO0FBQ3pCaEIsVUFBQUEsSUFBSSxFQUFFLFFBRG1CO0FBRXpCQyxVQUFBQSxLQUFLLFlBQUtQLENBQUMsQ0FBQ0osZUFBUCxZQUZvQjtBQUd6QkcsVUFBQUEsT0FIeUIsbUJBR2pCUyxDQUhpQixFQUdKO0FBQ25CQSxZQUFBQSxDQUFDLENBQUNlLE1BQUYsR0FBVztBQUNUNUIsY0FBQUEsUUFBUSxFQUFFO0FBREQsYUFBWDtBQUdEO0FBUHdCLFNBQTNCO0FBU0Q7QUFqRGlCLEtBQXBCO0FBbUREO0FBdkZhLENBQWhCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgUHJvcE9iamVjdCxcbiAgUHJvcE1ldGhvZCxcbiAgUHJvcExpbmssXG4gIFByb3BOdW1iZXIsXG59IGZyb20gXCIuLi8uLi9jb21wb25lbnRzL3ByZWx1ZGVcIjtcbmltcG9ydCB7IHJlZ2lzdHJ5IH0gZnJvbSBcIi4uLy4uL3JlZ2lzdHJ5XCI7XG5pbXBvcnQgeyBTeXN0ZW1PYmplY3QgfSBmcm9tIFwiLi4vLi4vc3lzdGVtQ29tcG9uZW50XCI7XG5cbnJlZ2lzdHJ5LnN5c3RlbSh7XG4gIHR5cGVOYW1lOiBcImludGVncmF0aW9uU2VydmljZVwiLFxuICBkaXNwbGF5VHlwZU5hbWU6IFwiQW4gc2VydmljZSB3aXRoaW4gYW4gaW50ZWdyYXRpb25cIixcbiAgc2lQYXRoTmFtZTogXCJzaS1hY2NvdW50XCIsXG4gIHNlcnZpY2VOYW1lOiBcImFjY291bnRcIixcbiAgb3B0aW9ucyhjOiBTeXN0ZW1PYmplY3QpIHtcbiAgICBjLmFzc29jaWF0aW9ucy5iZWxvbmdzVG8oe1xuICAgICAgZnJvbUZpZWxkUGF0aDogW1wic2lQcm9wZXJ0aWVzXCIsIFwiaW50ZWdyYXRpb25JZFwiXSxcbiAgICAgIHR5cGVOYW1lOiBcImludGVncmF0aW9uXCIsXG4gICAgfSk7XG4gICAgYy5maWVsZHMuYWRkTnVtYmVyKHtcbiAgICAgIG5hbWU6IFwidmVyc2lvblwiLFxuICAgICAgbGFiZWw6IFwiVGhlIHZlcnNpb24gb2YgdGhpcyBpbnRlZ3JhdGlvblwiLFxuICAgICAgb3B0aW9ucyhwOiBQcm9wTnVtYmVyKSB7XG4gICAgICAgIHAucmVxdWlyZWQgPSB0cnVlO1xuICAgICAgICBwLmhpZGRlbiA9IHRydWU7XG4gICAgICAgIHAubnVtYmVyS2luZCA9IFwiaW50MzJcIjtcbiAgICAgIH0sXG4gICAgfSk7XG4gICAgYy5maWVsZHMuYWRkT2JqZWN0KHtcbiAgICAgIG5hbWU6IFwic2lQcm9wZXJ0aWVzXCIsXG4gICAgICBsYWJlbDogXCJTSSBJbnRlcm5hbCBQcm9wZXJ0aWVzXCIsXG4gICAgICBvcHRpb25zKHA6IFByb3BPYmplY3QpIHtcbiAgICAgICAgcC5yZXF1aXJlZCA9IHRydWU7XG4gICAgICAgIHAucHJvcGVydGllcy5hZGRUZXh0KHtcbiAgICAgICAgICBuYW1lOiBcImludGVncmF0aW9uSWRcIixcbiAgICAgICAgICBsYWJlbDogXCJJbnRlZ3JhdGlvbiBJRFwiLFxuICAgICAgICAgIG9wdGlvbnMocCkge1xuICAgICAgICAgICAgcC5yZXF1aXJlZCA9IHRydWU7XG4gICAgICAgICAgfSxcbiAgICAgICAgfSk7XG4gICAgICB9LFxuICAgIH0pO1xuXG4gICAgYy5hZGRMaXN0TWV0aG9kKHsgaXNQcml2YXRlOiB0cnVlIH0pO1xuICAgIGMuYWRkR2V0TWV0aG9kKCk7XG4gICAgYy5tZXRob2RzLmFkZE1ldGhvZCh7XG4gICAgICBuYW1lOiBcImNyZWF0ZVwiLFxuICAgICAgbGFiZWw6IFwiQ3JlYXRlIGFuIEludGVncmF0aW9uIFNlcnZjaWVcIixcbiAgICAgIG9wdGlvbnMocDogUHJvcE1ldGhvZCkge1xuICAgICAgICBwLm11dGF0aW9uID0gdHJ1ZTtcbiAgICAgICAgcC5oaWRkZW4gPSB0cnVlO1xuICAgICAgICBwLmlzUHJpdmF0ZSA9IHRydWU7XG4gICAgICAgIHAucmVxdWVzdC5wcm9wZXJ0aWVzLmFkZFRleHQoe1xuICAgICAgICAgIG5hbWU6IFwibmFtZVwiLFxuICAgICAgICAgIGxhYmVsOiBcIkludGVncmF0aW9uIFNlcnZpY2UgTmFtZVwiLFxuICAgICAgICAgIG9wdGlvbnMocCkge1xuICAgICAgICAgICAgcC5yZXF1aXJlZCA9IHRydWU7XG4gICAgICAgICAgfSxcbiAgICAgICAgfSk7XG4gICAgICAgIHAucmVxdWVzdC5wcm9wZXJ0aWVzLmFkZFRleHQoe1xuICAgICAgICAgIG5hbWU6IFwiZGlzcGxheU5hbWVcIixcbiAgICAgICAgICBsYWJlbDogXCJJbnRlZ3JhdGlvbiBTZXJ2aWNlIERpc3BsYXkgTmFtZVwiLFxuICAgICAgICAgIG9wdGlvbnMocCkge1xuICAgICAgICAgICAgcC5yZXF1aXJlZCA9IHRydWU7XG4gICAgICAgICAgfSxcbiAgICAgICAgfSk7XG4gICAgICAgIHAucmVxdWVzdC5wcm9wZXJ0aWVzLmFkZE51bWJlcih7XG4gICAgICAgICAgbmFtZTogXCJ2ZXJzaW9uXCIsXG4gICAgICAgICAgbGFiZWw6IFwiVmVyc2lvbiBvZiB0aGlzIG9iamVjdDsgZm9yIG1pZ3JhdGlvblwiLFxuICAgICAgICAgIG9wdGlvbnMocDogUHJvcE51bWJlcikge1xuICAgICAgICAgICAgcC5yZXF1aXJlZCA9IHRydWU7XG4gICAgICAgICAgICBwLm51bWJlcktpbmQgPSBcImludDMyXCI7XG4gICAgICAgICAgfSxcbiAgICAgICAgfSk7XG4gICAgICAgIHAucmVxdWVzdC5wcm9wZXJ0aWVzLmFkZExpbmsoe1xuICAgICAgICAgIG5hbWU6IFwic2lQcm9wZXJ0aWVzXCIsXG4gICAgICAgICAgbGFiZWw6IFwiU2kgUHJvcGVydGllc1wiLFxuICAgICAgICAgIG9wdGlvbnMocDogUHJvcExpbmspIHtcbiAgICAgICAgICAgIHAucmVxdWlyZWQgPSB0cnVlO1xuICAgICAgICAgICAgcC5sb29rdXAgPSB7XG4gICAgICAgICAgICAgIHR5cGVOYW1lOiBcImludGVncmF0aW9uU2VydmljZVwiLFxuICAgICAgICAgICAgICBuYW1lczogW1wic2lQcm9wZXJ0aWVzXCJdLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICAgICAgcC5yZXBseS5wcm9wZXJ0aWVzLmFkZExpbmsoe1xuICAgICAgICAgIG5hbWU6IFwib2JqZWN0XCIsXG4gICAgICAgICAgbGFiZWw6IGAke2MuZGlzcGxheVR5cGVOYW1lfSBPYmplY3RgLFxuICAgICAgICAgIG9wdGlvbnMocDogUHJvcExpbmspIHtcbiAgICAgICAgICAgIHAubG9va3VwID0ge1xuICAgICAgICAgICAgICB0eXBlTmFtZTogXCJpbnRlZ3JhdGlvblNlcnZpY2VcIixcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgfSxcbiAgICAgICAgfSk7XG4gICAgICB9LFxuICAgIH0pO1xuICB9LFxufSk7XG4iXX0=