// Auto-generated rust code!
// No-Touchy!

use tracing_futures::Instrument as _;
use tracing_opentelemetry::OpenTelemetrySpanExt as _;
use opentelemetry::api::HttpTextFormat;

pub use <%- fmt.implServerName() %> as Server;

#[derive(Debug)]
pub struct Service {
<%- fmt.implServiceStructBody() %>
}

impl Service {
    pub fn new(<%- fmt.implServiceNewConstructorArgs() %>) -> Service {
        Service { <%- fmt.implServiceStructConstructorReturn() %> }
    }

    <% if (fmt.hasMigratables()) { %>
    pub async fn migrate(&self) -> si_data::Result<()> {
        <%- fmt.implServiceMigrate() %>

        Ok(())
    }
    <%_ } _%>
}

#[tonic::async_trait]
impl <%- fmt.implServiceTraitName() %> for Service {
<%_ for (const objFmt of fmt.systemObjectsAsFormatters()) { _%>
    <%- objFmt.serviceMethods() %>
<%_ } _%>
}
