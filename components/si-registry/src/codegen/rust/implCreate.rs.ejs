pub fn new(<%- fmt.implCreateNewArgs() %>) -> si_data::Result<<%- fmt.structName() %>> {
<%_ if (fmt.isStorable()) { _%>
    let mut si_storable = si_data::protobuf::DataStorable::default();
    <%- fmt.implCreateAddToTenancy() %>
<%_ } _%>

    let mut result_obj = <%- fmt.structName() %> { ..Default::default() };
    <%- fmt.implCreateSetProperties() %>
    result_obj.si_storable = Some(si_storable);

    Ok(result_obj)
}

pub async fn create(db: &si_data::Db, <%- fmt.implCreateNewArgs() %>) -> si_data::Result<<%- fmt.structName() %>> {
    let mut result_obj = <%- fmt.structName() %>::new(<%- fmt.implCreatePassNewArgs() %>)?;
    db.validate_and_insert_as_new(&mut result_obj).await?;
    Ok(result_obj)
}
