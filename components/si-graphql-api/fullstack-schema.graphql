### This file was autogenerated by Nexus 0.11.7
### Do not make changes to this file directly


type AwsEksClusterRuntimeAddNodegroupReply {
  """event"""
  event: AwsEksClusterRuntimeEntityEvent
}

input AwsEksClusterRuntimeAddNodegroupRequest {
  """entityId"""
  entityId: String
}

enum AwsEksClusterRuntimeBool {
  BOOL_UNKNOWN
  FALSE
  TRUE
}

enum AwsEksClusterRuntimeClusterStatus {
  ACTIVE
  CLUSTER_STATUS_UNKNOWN
  CREATING
  DELETING
  FAILED
  UPDATING
}

type AwsEksClusterRuntimeComponent {
  """description"""
  description: String

  """displayName"""
  displayName: String

  """displayTypeName"""
  displayTypeName: String

  """id"""
  id: ID

  """integrationId"""
  integration: Integration

  """integrationId"""
  integrationId: String

  """integrationServiceId"""
  integrationService: IntegrationService

  """integrationServiceId"""
  integrationServiceId: String

  """kubernetesVersion"""
  kubernetesVersion: String

  """name"""
  name: String

  """naturalKey"""
  naturalKey: String

  """tenantIds"""
  tenantIds: [String!]

  """typeName"""
  typeName: String

  """version"""
  version: Int
}

type AwsEksClusterRuntimeConstraints {
  """displayName"""
  displayName: String

  """integrationId"""
  integrationId: String

  """integrationServiceId"""
  integrationServiceId: String

  """kubernetesVersion"""
  kubernetesVersion: String

  """name"""
  name: String
}

type AwsEksClusterRuntimeCreateEntityReply {
  """entity"""
  entity: AwsEksClusterRuntimeEntity

  """event"""
  event: AwsEksClusterRuntimeEntityEvent
}

input AwsEksClusterRuntimeCreateEntityRequest {
  """cloudwatchLogs"""
  cloudwatchLogs: Boolean

  """constraints"""
  constraints: AwsEksClusterRuntimePickComponentRequest

  """description"""
  description: String

  """displayName"""
  displayName: String

  """name"""
  name: String

  """nodegroupDesiredSize"""
  nodegroupDesiredSize: Int

  """nodegroupDiskSize"""
  nodegroupDiskSize: Int

  """nodegroupInstanceType"""
  nodegroupInstanceType: String

  """nodegroupMaxSize"""
  nodegroupMaxSize: Int

  """nodegroupMinSize"""
  nodegroupMinSize: Int

  """nodegroupSshKeyId"""
  nodegroupSshKeyId: String

  """tags"""
  tags: [AwsEksClusterRuntimeTagRequest!]

  """workspaceId"""
  workspaceId: String
}

type AwsEksClusterRuntimeEntity {
  """billingAccountId"""
  billingAccount: BillingAccount

  """billingAccountId"""
  billingAccountId: String

  """certificateAuthority"""
  certificateAuthority: String

  """cloudwatchLogs"""
  cloudwatchLogs: Boolean

  """clusterName"""
  clusterName: String

  """clusterStatus"""
  clusterStatus: AwsEksClusterRuntimeClusterStatus

  """componentId"""
  componentId: String

  """constraints"""
  constraints: AwsEksClusterRuntimeConstraints

  """description"""
  description: String

  """displayName"""
  displayName: String

  """endpoint"""
  endpoint: String

  """endpointPrivateAccess"""
  endpointPrivateAccess: AwsEksClusterRuntimeBool

  """endpointPublicAccess"""
  endpointPublicAccess: AwsEksClusterRuntimeBool

  """id"""
  entityEvents(input: AwsEksClusterRuntimeListEntityEventsRequest): AwsEksClusterRuntimeListEntityEventsReply

  """id"""
  id: ID

  """implicitConstraints"""
  implicitConstraints: [AwsEksClusterRuntimeImplicitConstraint!]

  """integrationId"""
  integration: Integration

  """integrationId"""
  integrationId: String

  """integrationServiceId"""
  integrationService: IntegrationService

  """integrationServiceId"""
  integrationServiceId: String

  """kubernetesVersion"""
  kubernetesVersion: String

  """linkedEntityIds"""
  linkedEntityIds: [String!]

  """name"""
  name: String

  """naturalKey"""
  naturalKey: String

  """nodegroupDesiredSize"""
  nodegroupDesiredSize: Int

  """nodegroupDiskSize"""
  nodegroupDiskSize: Int

  """nodegroupInstanceType"""
  nodegroupInstanceType: String

  """nodegroupMaxSize"""
  nodegroupMaxSize: Int

  """nodegroupMinSize"""
  nodegroupMinSize: Int

  """nodegroupName"""
  nodegroupName: String

  """nodegroupSshKeyId"""
  nodegroupSshKeyId: String

  """nodegroupStatus"""
  nodegroupStatus: AwsEksClusterRuntimeNodegroupStatus

  """organizationId"""
  organization: Organization

  """organizationId"""
  organizationId: String

  """state"""
  state: AwsEksClusterRuntimeState

  """tags"""
  tags: [AwsEksClusterRuntimeTag!]

  """tenantIds"""
  tenantIds: [String!]

  """typeName"""
  typeName: String

  """workspaceId"""
  workspace: Workspace

  """workspaceId"""
  workspaceId: String
}

type AwsEksClusterRuntimeEntityEvent implements EntityEvent {
  """actionName"""
  actionName: String

  """billingAccountId"""
  billingAccountId: String

  """componentId"""
  componentId: String

  """createTime"""
  createTime: String

  """entityId"""
  entity: AwsEksClusterRuntimeEntity

  """entityId"""
  entityId: String

  """errorLines"""
  errorLines: [String!]

  """errorMessage"""
  errorMessage: String

  """finalized"""
  finalized: Boolean

  """finalTime"""
  finalTime: String

  """id"""
  id: ID

  """inputEntity"""
  inputEntity: AwsEksClusterRuntimeEntity

  """integrationId"""
  integrationId: String

  """integrationServiceId"""
  integrationServiceId: String

  """naturalKey"""
  naturalKey: String

  """nextState"""
  nextState: AwsEksClusterRuntimeNextState

  """organizationId"""
  organizationId: String

  """outputEntity"""
  outputEntity: AwsEksClusterRuntimeEntity

  """outputLines"""
  outputLines: [String!]

  """success"""
  success: Boolean

  """tenantIds"""
  tenantIds: [String!]

  """typeName"""
  typeName: String

  """updatedTime"""
  updatedTime: String

  """userId"""
  user: User

  """userId"""
  userId: String

  """workspaceId"""
  workspaceId: String
}

type AwsEksClusterRuntimeGetComponentReply {
  """component"""
  component: AwsEksClusterRuntimeComponent
}

input AwsEksClusterRuntimeGetComponentRequest {
  """componentId"""
  componentId: String
}

type AwsEksClusterRuntimeGetEntityReply {
  """entity"""
  entity: AwsEksClusterRuntimeEntity
}

input AwsEksClusterRuntimeGetEntityRequest {
  """entityId"""
  entityId: String
}

type AwsEksClusterRuntimeImplicitConstraint {
  """field"""
  field: String

  """value"""
  value: String
}

type AwsEksClusterRuntimeListComponentsReply {
  """items"""
  items: [AwsEksClusterRuntimeComponent!]

  """nextPageToken"""
  nextPageToken: String

  """totalCount"""
  totalCount: Int
}

input AwsEksClusterRuntimeListComponentsRequest {
  """orderBy"""
  orderBy: String

  """orderByDirection"""
  orderByDirection: DataOrderByDirection

  """pageSize"""
  pageSize: Int

  """pageToken"""
  pageToken: String

  """query"""
  query: DataQuery

  """scopeByTenantId"""
  scopeByTenantId: String
}

type AwsEksClusterRuntimeListEntitiesReply {
  """items"""
  items: [AwsEksClusterRuntimeEntity!]

  """nextPageToken"""
  nextPageToken: String

  """totalCount"""
  totalCount: Int
}

input AwsEksClusterRuntimeListEntitiesRequest {
  """orderBy"""
  orderBy: String

  """orderByDirection"""
  orderByDirection: DataOrderByDirection

  """pageSize"""
  pageSize: Int

  """pageToken"""
  pageToken: String

  """query"""
  query: DataQuery

  """scopeByTenantId"""
  scopeByTenantId: String
}

type AwsEksClusterRuntimeListEntityEventsReply {
  """items"""
  items: [AwsEksClusterRuntimeEntityEvent!]

  """nextPageToken"""
  nextPageToken: String

  """totalCount"""
  totalCount: Int
}

input AwsEksClusterRuntimeListEntityEventsRequest {
  """orderBy"""
  orderBy: String

  """orderByDirection"""
  orderByDirection: DataOrderByDirection

  """pageSize"""
  pageSize: Int

  """pageToken"""
  pageToken: String

  """query"""
  query: DataQuery

  """scopeByTenantId"""
  scopeByTenantId: String
}

enum AwsEksClusterRuntimeNextState {
  ERROR
  NONE
  OK
  UNINITIALIZED
}

enum AwsEksClusterRuntimeNodegroupStatus {
  NODEGROUP_ACTIVE
  NODEGROUP_CREATE_FAILED
  NODEGROUP_CREATING
  NODEGROUP_DEGRADED
  NODEGROUP_DELETE_FAILED
  NODEGROUP_DELETING
  NODEGROUP_STATUS_UNKNOWN
  NODEGROUP_UPDATING
}

type AwsEksClusterRuntimePickComponentReply {
  """component"""
  component: AwsEksClusterRuntimeComponent

  """implicitConstraints"""
  implicitConstraints: [AwsEksClusterRuntimeImplicitConstraint!]
}

input AwsEksClusterRuntimePickComponentRequest {
  """displayName"""
  displayName: String

  """integrationId"""
  integrationId: String

  """integrationServiceId"""
  integrationServiceId: String

  """kubernetesVersion"""
  kubernetesVersion: String

  """name"""
  name: String
}

enum AwsEksClusterRuntimeState {
  ERROR
  OK
  STATE_UNKNOWN
}

type AwsEksClusterRuntimeSyncEntityReply {
  """event"""
  event: AwsEksClusterRuntimeEntityEvent
}

input AwsEksClusterRuntimeSyncEntityRequest {
  """entityId"""
  entityId: String
}

type AwsEksClusterRuntimeTag {
  """key"""
  key: String

  """value"""
  value: String
}

input AwsEksClusterRuntimeTagRequest {
  """key"""
  key: String

  """value"""
  value: String
}

type BillingAccount {
  """displayName"""
  displayName: String

  """id"""
  id: ID

  """id"""
  integrationInstances(input: ListIntegrationInstancesRequest): ListIntegrationInstancesReply

  """naturalKey"""
  naturalKey: String

  """id"""
  organizations(input: ListOrganizationsRequest): ListOrganizationsReply

  """shortName"""
  shortName: String

  """tenantIds"""
  tenantIds: [String!]

  """typeName"""
  typeName: String

  """id"""
  users(input: ListUsersRequest): ListUsersReply
}

type Capability {
  """actions"""
  actions: [String!]

  """subject"""
  subject: String
}

type CreateAccountReply {
  """billingAccount"""
  billingAccount: BillingAccount

  """user"""
  user: User
}

input CreateAccountRequest {
  """billingAccount"""
  billingAccount: CreateBillingAccountRequest

  """user"""
  user: CreateUserRequest
}

type CreateBillingAccountReply {
  """billingAccount"""
  billingAccount: BillingAccount
}

input CreateBillingAccountRequest {
  """displayName"""
  displayName: String

  """shortName"""
  shortName: String
}

type CreateIntegrationInstanceReply {
  """integrationInstance"""
  integrationInstance: IntegrationInstance
}

input CreateIntegrationInstanceRequest {
  """displayName"""
  displayName: String

  """integrationId"""
  integrationId: String

  """integrationOptionValues"""
  integrationOptionValues: [CreateIntegrationOptionValueRequest!]

  """name"""
  name: String
}

input CreateIntegrationOptionValueRequest {
  """name"""
  name: String

  """optionType"""
  optionType: IntegrationOptionType

  """value"""
  value: String
}

type CreateUserReply {
  """user"""
  user: User
}

input CreateUserRequest {
  """displayName"""
  displayName: String

  """email"""
  email: String

  """familyName"""
  familyName: String

  """givenName"""
  givenName: String

  """password"""
  password: String
}

enum DataOrderByDirection {
  ASC
  DESC
}

input DataPageToken {
  """containedWithin"""
  containedWithin: String

  """itemId"""
  itemId: String

  """orderBy"""
  orderBy: String

  """orderByDirection"""
  orderByDirection: DataOrderByDirection

  """pageSize"""
  pageSize: Int

  """query"""
  query: DataQuery
}

input DataQuery {
  """booleanTerm"""
  booleanTerm: DataQueryBooleanLogic

  """isNot"""
  isNot: Boolean

  """items"""
  items: [DataQueryExpressionOption!]
}

enum DataQueryBooleanLogic {
  AND
  OR
}

enum DataQueryComparison {
  CONTAINS
  EQUALS
  LIKE
  NOTEQUALS
  NOTLIKE
}

input DataQueryExpression {
  """comparison"""
  comparison: DataQueryComparison

  """field"""
  field: String

  """fieldType"""
  fieldType: DataQueryFieldType

  """value"""
  value: String
}

input DataQueryExpressionOption {
  """expression"""
  expression: DataQueryExpression

  """query"""
  query: DataQuery
}

enum DataQueryFieldType {
  INT
  STRING
}

interface EntityEvent {
  actionName: String
  billingAccountId: String
  componentId: String
  createTime: String
  entityId: String
  errorLines: [String!]
  errorMessage: String
  finalized: Boolean
  finalTime: String
  id: ID
  integrationId: String
  integrationServiceId: String
  naturalKey: String
  organizationId: String
  outputLines: [String!]
  success: Boolean
  tenantIds: [String!]
  typeName: String
  updatedTime: String
  userId: String
  workspaceId: String
}

type GetBillingAccountReply {
  """billingAccount"""
  billingAccount: BillingAccount
}

input GetBillingAccountRequest {
  """billingAccountId"""
  billingAccountId: String
}

type GetIntegrationReply {
  """integration"""
  integration: Integration
}

input GetIntegrationRequest {
  """integrationId"""
  integrationId: String
}

type GetIntegrationServiceReply {
  """integrationService"""
  integrationService: IntegrationService
}

input GetIntegrationServiceRequest {
  """integrationServiceId"""
  integrationServiceId: String
}

type GetOrganizationReply {
  """organization"""
  organization: Organization
}

input GetOrganizationRequest {
  """organizationId"""
  organizationId: String
}

type GetUserReply {
  """user"""
  user: User
}

input GetUserRequest {
  """userId"""
  userId: String
}

type Group {
  """billingAccountId"""
  billingAccountId: String

  """capabilities"""
  capabilities: [Capability!]

  """displayName"""
  displayName: String

  """id"""
  id: ID

  """name"""
  name: String

  """naturalKey"""
  naturalKey: String

  """tenantIds"""
  tenantIds: [String!]

  """typeName"""
  typeName: String

  """userIds"""
  userIds: [String!]
}

type Integration {
  """displayName"""
  displayName: String

  """id"""
  id: ID

  """integrationOptions"""
  integrationOptions: [IntegrationOption!]

  """id"""
  integrationServices(input: ListIntegrationServicesRequest): ListIntegrationServicesReply

  """name"""
  name: String

  """naturalKey"""
  naturalKey: String

  """tenantIds"""
  tenantIds: [String!]

  """typeName"""
  typeName: String

  """version"""
  version: Int
}

type IntegrationInstance {
  """billingAccountId"""
  billingAccount: BillingAccount

  """billingAccountId"""
  billingAccountId: String

  """displayName"""
  displayName: String

  """enabledOnOrganizationIds"""
  enabledOnOrganizationIds: [String!]

  """enabledOnOrganizationIds"""
  enabledOnOrganizations(input: ListOrganizationsRequest): ListOrganizationsReply

  """enabledOnWorkspaceIds"""
  enabledOnWorkspaceIds: [String!]

  """enabledOnWorkspaceIds"""
  enabledOnWorkspaces(input: ListWorkspacesRequest): ListWorkspacesReply

  """id"""
  id: ID

  """integrationId"""
  integration: Integration

  """integrationId"""
  integrationId: String

  """integrationOptionValues"""
  integrationOptionValues: [IntegrationOptionValue!]

  """integrationServiceIds"""
  integrationServiceIds: [String!]

  """name"""
  name: String

  """naturalKey"""
  naturalKey: String

  """tenantIds"""
  tenantIds: [String!]

  """typeName"""
  typeName: String
}

type IntegrationOption {
  """displayName"""
  displayName: String

  """name"""
  name: String

  """optionType"""
  optionType: IntegrationOptionType
}

enum IntegrationOptionType {
  SECRET
  STRING
}

type IntegrationOptionValue {
  """name"""
  name: String

  """optionType"""
  optionType: IntegrationOptionType

  """value"""
  value: String
}

type IntegrationService {
  """displayName"""
  displayName: String

  """id"""
  id: ID

  """integrationId"""
  integration: Integration

  """integrationId"""
  integrationId: String

  """name"""
  name: String

  """naturalKey"""
  naturalKey: String

  """tenantIds"""
  tenantIds: [String!]

  """typeName"""
  typeName: String

  """version"""
  version: Int
}

type ListIntegrationInstancesReply {
  """items"""
  items: [IntegrationInstance!]

  """nextPageToken"""
  nextPageToken: String

  """totalCount"""
  totalCount: Int
}

input ListIntegrationInstancesRequest {
  """orderBy"""
  orderBy: String

  """orderByDirection"""
  orderByDirection: DataOrderByDirection

  """pageSize"""
  pageSize: Int

  """pageToken"""
  pageToken: String

  """query"""
  query: DataQuery

  """scopeByTenantId"""
  scopeByTenantId: String
}

type ListIntegrationServicesReply {
  """items"""
  items: [IntegrationService!]

  """nextPageToken"""
  nextPageToken: String

  """totalCount"""
  totalCount: Int
}

input ListIntegrationServicesRequest {
  """orderBy"""
  orderBy: String

  """orderByDirection"""
  orderByDirection: DataOrderByDirection

  """pageSize"""
  pageSize: Int

  """pageToken"""
  pageToken: String

  """query"""
  query: DataQuery

  """scopeByTenantId"""
  scopeByTenantId: String
}

type ListIntegrationsReply {
  """items"""
  items: [Integration!]

  """nextPageToken"""
  nextPageToken: String

  """totalCount"""
  totalCount: Int
}

input ListIntegrationsRequest {
  """orderBy"""
  orderBy: String

  """orderByDirection"""
  orderByDirection: DataOrderByDirection

  """pageSize"""
  pageSize: Int

  """pageToken"""
  pageToken: String

  """query"""
  query: DataQuery

  """scopeByTenantId"""
  scopeByTenantId: String
}

type ListOrganizationsReply {
  """items"""
  items: [Organization!]

  """nextPageToken"""
  nextPageToken: String

  """totalCount"""
  totalCount: Int
}

input ListOrganizationsRequest {
  """orderBy"""
  orderBy: String

  """orderByDirection"""
  orderByDirection: DataOrderByDirection

  """pageSize"""
  pageSize: Int

  """pageToken"""
  pageToken: String

  """query"""
  query: DataQuery

  """scopeByTenantId"""
  scopeByTenantId: String
}

type ListUsersReply {
  """items"""
  items: [User!]

  """nextPageToken"""
  nextPageToken: String

  """totalCount"""
  totalCount: Int
}

input ListUsersRequest {
  """orderBy"""
  orderBy: String

  """orderByDirection"""
  orderByDirection: DataOrderByDirection

  """pageSize"""
  pageSize: Int

  """pageToken"""
  pageToken: String

  """query"""
  query: DataQuery

  """scopeByTenantId"""
  scopeByTenantId: String
}

type ListWorkspacesReply {
  """items"""
  items: [Workspace!]

  """nextPageToken"""
  nextPageToken: String

  """totalCount"""
  totalCount: Int
}

input ListWorkspacesRequest {
  """orderBy"""
  orderBy: String

  """orderByDirection"""
  orderByDirection: DataOrderByDirection

  """pageSize"""
  pageSize: Int

  """pageToken"""
  pageToken: String

  """query"""
  query: DataQuery

  """scopeByTenantId"""
  scopeByTenantId: String
}

type LoginReply {
  billingAccountId: String
  jwt: String
  userId: String
}

input LoginRequest {
  billingAccountShortName: String!
  email: String!
  password: String!
}

type Mutation {
  awsEksClusterRuntimeAddNodegroup(input: AwsEksClusterRuntimeAddNodegroupRequest): AwsEksClusterRuntimeAddNodegroupReply
  awsEksClusterRuntimeCreateEntity(input: AwsEksClusterRuntimeCreateEntityRequest): AwsEksClusterRuntimeCreateEntityReply
  awsEksClusterRuntimeSyncEntity(input: AwsEksClusterRuntimeSyncEntityRequest): AwsEksClusterRuntimeSyncEntityReply
  createAccount(input: CreateAccountRequest): CreateAccountReply
  createIntegrationInstance(input: CreateIntegrationInstanceRequest): CreateIntegrationInstanceReply
  sshKeyCreateEntity(input: SshKeyCreateEntityRequest): SshKeyCreateEntityReply
  sshKeySyncEntity(input: SshKeySyncEntityRequest): SshKeySyncEntityReply
}

type Organization {
  """billingAccountId"""
  billingAccount: BillingAccount

  """billingAccountId"""
  billingAccountId: String

  """id"""
  enabledIntegrationInstances(input: ListIntegrationInstancesRequest): ListIntegrationInstancesReply

  """id"""
  id: ID

  """name"""
  name: String

  """naturalKey"""
  naturalKey: String

  """tenantIds"""
  tenantIds: [String!]

  """typeName"""
  typeName: String

  """id"""
  workspaces(input: ListWorkspacesRequest): ListWorkspacesReply
}

type Query {
  awsEksClusterRuntimeGetComponent(input: AwsEksClusterRuntimeGetComponentRequest): AwsEksClusterRuntimeGetComponentReply
  awsEksClusterRuntimeGetEntity(input: AwsEksClusterRuntimeGetEntityRequest): AwsEksClusterRuntimeGetEntityReply
  awsEksClusterRuntimeListComponents(input: AwsEksClusterRuntimeListComponentsRequest): AwsEksClusterRuntimeListComponentsReply
  awsEksClusterRuntimeListEntities(input: AwsEksClusterRuntimeListEntitiesRequest): AwsEksClusterRuntimeListEntitiesReply
  awsEksClusterRuntimeListEntityEvents(input: AwsEksClusterRuntimeListEntityEventsRequest): AwsEksClusterRuntimeListEntityEventsReply
  awsEksClusterRuntimePickComponent(input: AwsEksClusterRuntimePickComponentRequest): AwsEksClusterRuntimePickComponentReply
  getBillingAccount(input: GetBillingAccountRequest): GetBillingAccountReply
  getUser(input: GetUserRequest): GetUserReply
  listIntegrationInstances(input: ListIntegrationInstancesRequest): ListIntegrationInstancesReply
  listIntegrations(input: ListIntegrationsRequest): ListIntegrationsReply
  listOrganizations(input: ListOrganizationsRequest): ListOrganizationsReply
  listUsers(input: ListUsersRequest): ListUsersReply
  listWorkspaces(input: ListWorkspacesRequest): ListWorkspacesReply
  login(input: LoginRequest): LoginReply
  sshKeyGetComponent(input: SshKeyGetComponentRequest): SshKeyGetComponentReply
  sshKeyGetEntity(input: SshKeyGetEntityRequest): SshKeyGetEntityReply
  sshKeyListComponents(input: SshKeyListComponentsRequest): SshKeyListComponentsReply
  sshKeyListEntities(input: SshKeyListEntitiesRequest): SshKeyListEntitiesReply
  sshKeyListEntityEvents(input: SshKeyListEntityEventsRequest): SshKeyListEntityEventsReply
  sshKeyPickComponent(input: SshKeyPickComponentRequest): SshKeyPickComponentReply
}

type SshKeyComponent {
  """bits"""
  bits: Int

  """description"""
  description: String

  """displayName"""
  displayName: String

  """displayTypeName"""
  displayTypeName: String

  """id"""
  id: ID

  """integrationId"""
  integration: Integration

  """integrationId"""
  integrationId: String

  """integrationServiceId"""
  integrationService: IntegrationService

  """integrationServiceId"""
  integrationServiceId: String

  """keyFormat"""
  keyFormat: SshKeyKeyFormat

  """keyType"""
  keyType: SshKeyKeyType

  """name"""
  name: String

  """naturalKey"""
  naturalKey: String

  """tenantIds"""
  tenantIds: [String!]

  """typeName"""
  typeName: String

  """version"""
  version: Int
}

type SshKeyConstraints {
  """bits"""
  bits: Int

  """displayName"""
  displayName: String

  """integrationId"""
  integrationId: String

  """integrationServiceId"""
  integrationServiceId: String

  """keyFormat"""
  keyFormat: SshKeyKeyFormatRequest

  """keyType"""
  keyType: SshKeyKeyTypeRequest

  """name"""
  name: String
}

type SshKeyCreateEntityReply {
  """entity"""
  entity: SshKeyEntity

  """event"""
  event: SshKeyEntityEvent
}

input SshKeyCreateEntityRequest {
  """constraints"""
  constraints: SshKeyPickComponentRequest

  """description"""
  description: String

  """displayName"""
  displayName: String

  """name"""
  name: String

  """workspaceId"""
  workspaceId: String
}

type SshKeyEntity {
  """billingAccountId"""
  billingAccount: BillingAccount

  """billingAccountId"""
  billingAccountId: String

  """bits"""
  bits: Int

  """bubbleBabble"""
  bubbleBabble: String

  """comment"""
  comment: String

  """componentId"""
  componentId: String

  """constraints"""
  constraints: SshKeyConstraints

  """description"""
  description: String

  """displayName"""
  displayName: String

  """id"""
  entityEvents(input: SshKeyListEntityEventsRequest): SshKeyListEntityEventsReply

  """fingerprint"""
  fingerprint: String

  """id"""
  id: ID

  """implicitConstraints"""
  implicitConstraints: [SshKeyImplicitConstraint!]

  """integrationId"""
  integration: Integration

  """integrationId"""
  integrationId: String

  """integrationServiceId"""
  integrationService: IntegrationService

  """integrationServiceId"""
  integrationServiceId: String

  """keyFormat"""
  keyFormat: SshKeyKeyFormat

  """keyType"""
  keyType: SshKeyKeyType

  """linkedEntityIds"""
  linkedEntityIds: [String!]

  """name"""
  name: String

  """naturalKey"""
  naturalKey: String

  """organizationId"""
  organization: Organization

  """organizationId"""
  organizationId: String

  """privateKey"""
  privateKey: String

  """publicKey"""
  publicKey: String

  """randomArt"""
  randomArt: String

  """state"""
  state: SshKeyState

  """tenantIds"""
  tenantIds: [String!]

  """typeName"""
  typeName: String

  """workspaceId"""
  workspace: Workspace

  """workspaceId"""
  workspaceId: String
}

type SshKeyEntityEvent implements EntityEvent {
  """actionName"""
  actionName: String

  """billingAccountId"""
  billingAccountId: String

  """componentId"""
  componentId: String

  """createTime"""
  createTime: String

  """entityId"""
  entity: SshKeyEntity

  """entityId"""
  entityId: String

  """errorLines"""
  errorLines: [String!]

  """errorMessage"""
  errorMessage: String

  """finalized"""
  finalized: Boolean

  """finalTime"""
  finalTime: String

  """id"""
  id: ID

  """inputEntity"""
  inputEntity: SshKeyEntity

  """integrationId"""
  integrationId: String

  """integrationServiceId"""
  integrationServiceId: String

  """naturalKey"""
  naturalKey: String

  """nextState"""
  nextState: SshKeyNextState

  """organizationId"""
  organizationId: String

  """outputEntity"""
  outputEntity: SshKeyEntity

  """outputLines"""
  outputLines: [String!]

  """success"""
  success: Boolean

  """tenantIds"""
  tenantIds: [String!]

  """typeName"""
  typeName: String

  """updatedTime"""
  updatedTime: String

  """userId"""
  user: User

  """userId"""
  userId: String

  """workspaceId"""
  workspaceId: String
}

type SshKeyGetComponentReply {
  """component"""
  component: SshKeyComponent
}

input SshKeyGetComponentRequest {
  """componentId"""
  componentId: String
}

type SshKeyGetEntityReply {
  """entity"""
  entity: SshKeyEntity
}

input SshKeyGetEntityRequest {
  """entityId"""
  entityId: String
}

type SshKeyImplicitConstraint {
  """field"""
  field: String

  """value"""
  value: String
}

enum SshKeyKeyFormat {
  PEM
  PKCS8
  RFC4716
}

enum SshKeyKeyFormatRequest {
  NOKEYFORMAT
  PEM
  PKCS8
  RFC4716
}

enum SshKeyKeyType {
  DSA
  ECDSA
  ED25519
  RSA
}

enum SshKeyKeyTypeRequest {
  DSA
  ECDSA
  ED25519
  NOKEYTYPE
  RSA
}

type SshKeyListComponentsReply {
  """items"""
  items: [SshKeyComponent!]

  """nextPageToken"""
  nextPageToken: String

  """totalCount"""
  totalCount: Int
}

input SshKeyListComponentsRequest {
  """orderBy"""
  orderBy: String

  """orderByDirection"""
  orderByDirection: DataOrderByDirection

  """pageSize"""
  pageSize: Int

  """pageToken"""
  pageToken: String

  """query"""
  query: DataQuery

  """scopeByTenantId"""
  scopeByTenantId: String
}

type SshKeyListEntitiesReply {
  """items"""
  items: [SshKeyEntity!]

  """nextPageToken"""
  nextPageToken: String

  """totalCount"""
  totalCount: Int
}

input SshKeyListEntitiesRequest {
  """orderBy"""
  orderBy: String

  """orderByDirection"""
  orderByDirection: DataOrderByDirection

  """pageSize"""
  pageSize: Int

  """pageToken"""
  pageToken: String

  """query"""
  query: DataQuery

  """scopeByTenantId"""
  scopeByTenantId: String
}

type SshKeyListEntityEventsReply {
  """items"""
  items: [SshKeyEntityEvent!]

  """nextPageToken"""
  nextPageToken: String

  """totalCount"""
  totalCount: Int
}

input SshKeyListEntityEventsRequest {
  """orderBy"""
  orderBy: String

  """orderByDirection"""
  orderByDirection: DataOrderByDirection

  """pageSize"""
  pageSize: Int

  """pageToken"""
  pageToken: String

  """query"""
  query: DataQuery

  """scopeByTenantId"""
  scopeByTenantId: String
}

enum SshKeyNextState {
  ERROR
  NONE
  OK
  UNINITIALIZED
}

type SshKeyPickComponentReply {
  """component"""
  component: SshKeyComponent

  """implicitConstraints"""
  implicitConstraints: [SshKeyImplicitConstraint!]
}

input SshKeyPickComponentRequest {
  """bits"""
  bits: Int

  """displayName"""
  displayName: String

  """integrationId"""
  integrationId: String

  """integrationServiceId"""
  integrationServiceId: String

  """keyFormat"""
  keyFormat: SshKeyKeyFormatRequest

  """keyType"""
  keyType: SshKeyKeyTypeRequest

  """name"""
  name: String
}

enum SshKeyState {
  ERROR
  OK
  UNINITIALIZED
}

type SshKeySyncEntityReply {
  """event"""
  event: SshKeyEntityEvent
}

input SshKeySyncEntityRequest {
  """entityId"""
  entityId: String
}

input StreamEntityEventsRequest {
  scopeByTenantId: String!
}

type Subscription {
  streamEntityEvents(input: StreamEntityEventsRequest!): EntityEvent
}

type User {
  """billingAccountId"""
  billingAccount: BillingAccount

  """billingAccountId"""
  billingAccountId: String

  """capabilities"""
  capabilities: [Capability!]

  """displayName"""
  displayName: String

  """domain"""
  domain: String

  """email"""
  email: String

  """familyName"""
  familyName: String

  """givenName"""
  givenName: String

  """id"""
  id: ID

  """naturalKey"""
  naturalKey: String

  """picture"""
  picture: String

  """tenantIds"""
  tenantIds: [String!]

  """typeName"""
  typeName: String
}

type Workspace {
  """billingAccountId"""
  billingAccount: BillingAccount

  """billingAccountId"""
  billingAccountId: String

  """id"""
  enabledIntegrationInstances(input: ListIntegrationInstancesRequest): ListIntegrationInstancesReply

  """id"""
  id: ID

  """name"""
  name: String

  """naturalKey"""
  naturalKey: String

  """organizationId"""
  organization: Organization

  """organizationId"""
  organizationId: String

  """tenantIds"""
  tenantIds: [String!]

  """typeName"""
  typeName: String
}
