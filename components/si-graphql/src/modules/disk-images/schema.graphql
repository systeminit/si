"A Disk Image Component"
type DiskImageComponent implements Component {
  "The ID"
  id: ID!
  "The name of the component"
  name: String!
  "Description of the element"
  description: String!
  "Raw data for the component"
  rawDataJson: String!
  "The integration that backs the component"
  integration: Integration!
  "The type of node created by this component type"
  nodeType: String!
  "The format of this disk image"
  format: String!
  "The operating system inside this image"
  operatingSystem: OperatingSystemComponent
  supportedActions: [String]!
}

extend type OperatingSystemComponent {
  diskImages: [DiskImageComponent]!
}

"A Disk Image Component"
type DiskImageEntity {
  "The ID"
  id: ID!
  "The name of the disk image"
  name: String!
  "Description of the disk image"
  description: String!
  "The format of this disk image"
  format: String!
  "The operating system inside this image"
  operatingSystem: OperatingSystemEntity
  "The optional component"
  component: DiskImageComponent
}

extend type Query {
  "Get Operating System Components enabled for this user"
  getDiskImageComponents(where: GetComponentsInput): [DiskImageComponent]!
  findDiskImageComponents(where: FindComponentInput): [DiskImageComponent]!
}

input CreateDiskImageArgs {
  name: String
  description: String
}

input CreateDiskImageInput {
  constraints: String,
  args: CreateDiskImageArgs,
  workspace: String!,
}

type CreateDiskImagePayload {
  diskImage: DiskImageEntity!
}

extend type Mutation {
  createDiskImage(input: CreateDiskImageInput): CreateDiskImagePayload!
}

