"A CPU Component"
type CpuComponent implements Component {
  "The ID"
  id: ID!
  "The name of the component"
  name: String!
  "Description of the element"
  description: String!
  "Raw data for the component"
  rawDataJson: String!
  "The integration that backs the component"
  integration: Integration!
  "The type of node created by this component type"
  nodeType: String!
  supportedActions: [String]!
  cores: Int!
  baseFreqMHz: Int!
  allCoreTurboFreqMHz: Int!
  singleCoreTurboFreqMHz: Int!
  architecture: String!
  manufacturer: String!
}

type CpuEntity {
  "The ID"
  id: ID!
  "The name of the port"
  name: String!
  "A longer description of the port"
  description: String!
  cores: Int!
  baseFreqMHz: Int!
  allCoreTurboFreqMHz: Int!
  singleCoreTurboFreqMHz: Int!
  architecture: String!
  manufacturer: String!
  component: CpuComponent
}

extend type ServerComponent {
  cpu: CpuComponent!
}

extend type Query {
  "Get Operating System Components enabled for this user"
  getCpuComponents(where: GetComponentsInput): [CpuComponent]!
  findCpuComponents(where: FindComponentInput): [CpuComponent]!
}

input CreateCpuArgs {
  name: String,
  description: String,
}

input CreateCpuInput {
  constraints: String,
  args: CreateCpuArgs,
  workspace: String!,
}

type CreateCpuPayload {
  cpu: CpuEntity!
}

extend type Mutation {
  createCpu(input: CreateCpuInput): CreateCpuPayload!
}
