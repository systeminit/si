syntax = "proto3";

package si.account;

import "si-registry/proto/si.data.proto";

service Account {
  rpc CreateAccount(CreateAccountRequest) returns (CreateAccountReply);
  rpc CreateIntegrationInstance(CreateIntegrationInstanceRequest) returns (CreateIntegrationInstanceReply);
  rpc GetBillingAccount(GetBillingAccountRequest) returns (GetBillingAccountReply);
  rpc GetUser(GetUserRequest) returns (GetUserReply);
  rpc GetOrganization(GetOrganizationRequest) returns (GetOrganizationReply);
  rpc GetIntegration(GetIntegrationRequest) returns (GetIntegrationReply);
  rpc GetIntegrationService(GetIntegrationServiceRequest) returns (GetIntegrationServiceReply);
  rpc ListWorkspaces(ListWorkspacesRequest) returns (ListWorkspacesReply);
  rpc ListOrganizations(ListOrganizationsRequest) returns (ListOrganizationsReply);
  rpc ListUsers(ListUsersRequest) returns (ListUsersReply);
  rpc ListIntegrations(ListIntegrationsRequest) returns (ListIntegrationsReply);
  rpc ListIntegrationServices(ListIntegrationServicesRequest) returns (ListIntegrationServicesReply);
  rpc ListIntegrationInstances(ListIntegrationInstancesRequest) returns (ListIntegrationInstancesReply);
  rpc Login(LoginRequest) returns (LoginReply);
}

message ListIntegrationInstancesRequest {
  si.data.Query query = 1;
  int32 page_size = 2;
  string order_by = 3;
  si.data.PageTokenOrderByDirection order_by_direction = 4;
  string page_token = 5;
  string scope_by_tenant_id = 6;
}

message ListIntegrationInstancesReply {
  repeated IntegrationInstance items = 1;
  int32 total_count = 2;
  string next_page_token = 3;
}

message ListIntegrationServicesRequest {
  si.data.Query query = 1;
  int32 page_size = 2;
  string order_by = 3;
  si.data.PageTokenOrderByDirection order_by_direction = 4;
  string page_token = 5;
  string scope_by_tenant_id = 6;
}

message ListIntegrationServicesReply {
  repeated IntegrationService items = 1;
  int32 total_count = 2;
  string next_page_token = 3;
}

message ListIntegrationsRequest {
  si.data.Query query = 1;
  int32 page_size = 2;
  string order_by = 3;
  si.data.PageTokenOrderByDirection order_by_direction = 4;
  string page_token = 5;
  string scope_by_tenant_id = 6;
}

message ListIntegrationsReply {
  repeated Integration items = 1;
  int32 total_count = 2;
  string next_page_token = 3;
}

message ListOrganizationsRequest {
  si.data.Query query = 1;
  int32 page_size = 2;
  string order_by = 3;
  si.data.PageTokenOrderByDirection order_by_direction = 4;
  string page_token = 5;
  string scope_by_tenant_id = 6;
}

message ListOrganizationsReply {
  repeated Organization items = 1;
  int32 total_count = 2;
  string next_page_token = 3;
}

message ListWorkspacesRequest {
  si.data.Query query = 1;
  int32 page_size = 2;
  string order_by = 3;
  si.data.PageTokenOrderByDirection order_by_direction = 4;
  string page_token = 5;
  string scope_by_tenant_id = 6;
}

message ListWorkspacesReply {
  repeated Workspace items = 1;
  int32 total_count = 2;
  string next_page_token = 3;
}

message ListUsersRequest {
  si.data.Query query = 1;
  int32 page_size = 2;
  string order_by = 3;
  si.data.PageTokenOrderByDirection order_by_direction = 4;
  string page_token = 5;
  string scope_by_tenant_id = 6;
}

message ListUsersReply {
  repeated User items = 1;
  int32 total_count = 2;
  string next_page_token = 3;
}

message GetIntegrationRequest {
  string integration_id = 1;
}

message GetIntegrationReply {
  Integration integration = 1;
}

message GetUserRequest {
  string user_id = 1;
}

message GetUserReply {
  User user = 1;
}

message GetBillingAccountRequest {
  string billing_account_id = 1;
}

message GetBillingAccountReply {
  BillingAccount billing_account = 1;
}

message GetOrganizationRequest {
  string organization_id = 1;
}

message GetOrganizationReply {
  Organization organization = 1;
}

message GetIntegrationServiceRequest {
  string integration_service_id = 1;
}

message GetIntegrationServiceReply {
  IntegrationService integration_service = 1;
}

message CreateIntegrationOptionValueRequest {
  string name = 1;
  string value = 2;
  IntegrationOptionType option_type = 3;
}

message CreateIntegrationInstanceRequest {
  string integration_id = 1;
  string name = 2;
  string display_name = 3;
  repeated CreateIntegrationOptionValueRequest integration_option_values = 4;
}

message CreateIntegrationInstanceReply {
  IntegrationInstance integration_instance = 1;
}

message CreateAccountRequest {
  CreateBillingAccountRequest billing_account = 1;
  CreateUserRequest user = 2;
}

message CreateAccountReply {
  BillingAccount billing_account = 1;
  User user = 2;
}

message CreateBillingAccountRequest {
  string display_name = 1;
  string short_name = 2;
}

message CreateBillingAccountReply {
  BillingAccount billing_account = 1;
}

message CreateUserRequest {
  string display_name = 1;
  string given_name = 2;
  string family_name = 3;
  string email = 4;
  string password = 5;
}

message CreateUserReply {
  User user = 1;
}

message LoginRequest {
  string email = 1;
  string password = 2;
  string billing_account_short_name = 3;
}

message LoginReply {
  /// User is authenicated or not
  bool authenticated = 1;
  /// The users id
  string user_id = 2;
  /// The users billing account id
  string billing_account_id = 3;
}

message User {
  string id = 1;
  repeated string tenantIds = 2;
  string natural_key = 3;
  string type_name = 4;
  string email = 5;
  string domain = 6;
  string display_name = 7;
  string given_name = 8;
  string family_name = 9;
  string picture = 10;
  string password_hash = 11;
  repeated Capability capabilities = 12;
  string billing_account_id = 20;
}

message Capability {
  string subject = 1;
  repeated string actions = 2;
}

message Group {
  string id = 1;
  repeated string tenant_ids = 2;
  string natural_key = 3;
  string type_name = 4;
  string name = 5;
  string display_name = 6;
  repeated string user_ids = 7;
  repeated Capability capabilities = 8;
  string billing_account_id = 20;
} 

message BillingAccount {
  string id = 1;
  string natural_key = 2;
  string type_name = 3;
  string display_name = 4;
  string short_name = 5;
  repeated string tenant_ids = 10;
}

message Organization {
  string id = 1;
  string natural_key = 2;
  string type_name = 3;
  string name = 4;
  repeated string tenant_ids = 10;
  string billing_account_id = 20;
}

message Workspace {
  string id = 1;
  string natural_key = 2;
  string type_name = 3;
  string name = 4;
  repeated string tenant_ids = 10;
  string billing_account_id = 20;
  string organization_id = 21;
}

message IntegrationService {
  string id = 1;
  string natural_key = 2;
  string type_name = 3;
  string name = 4;
  string display_name = 5;
  int32 version = 6;
  string integration_id = 7;
  repeated string tenant_ids = 10;
}

enum IntegrationOptionType {
  STRING = 0;
  SECRET = 1;
}

message IntegrationOption {
  string name = 1;
  string display_name = 2;
  IntegrationOptionType option_type = 3;
}

message IntegrationOptionValue {
  string name = 1;
  string value = 2;
  IntegrationOptionType option_type = 3;
}

message Integration {
  string id = 1;
  string natural_key = 2;
  string type_name = 3;
  string name = 4;
  string display_name = 5;
  int32 version = 6;
  repeated string tenant_ids = 10;
  repeated IntegrationOption integration_options = 11;
}

message IntegrationInstance {
  string id = 1;
  string natural_key = 2;
  string type_name = 3;
  repeated string tenant_ids = 4;
  string name = 5;
  string display_name = 6;
  string integration_id = 7;
  repeated string integration_service_ids = 8;
  repeated IntegrationOptionValue integration_option_values = 9;
  string billing_account_id = 10;
  repeated string enabled_on_workspace_ids = 11;
  repeated string enabled_on_organization_ids = 12;
}
