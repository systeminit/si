load(
    "@prelude-si//:macros.bzl",
    "docker_image",
    "rust_binary",
    "nix_omnibus_pkg",
)

rust_binary(
    name = "luminork",
    deps = [
        "//lib/innit-client:innit-client",
        "//lib/luminork-server:luminork-server",
        "//lib/si-service:si-service",
        "//third-party/rust:clap",
    ],
    srcs = glob(["src/**/*.rs"]),
    env = {"CARGO_BIN_NAME": "luminork"},
    resources = {
        "dev.jwt_signing_public_key.pem": "//config/keys:dev.jwt_signing_public_key.pem",
        "prod.jwt_signing_public_key.pem": "//config/keys:prod.jwt_signing_public_key.pem",
        "dev.encryption.key": "//lib/veritech-server:dev.encryption.key",
        "dev.postgres.root.crt": "//config/keys:dev.postgres.root.crt",
        "dev.donkey.key": "//lib/dal:dev.donkey.key",
        "pkgs_path": "//pkgs:pkgs",
    },
)

docker_image(
    name = "image",
    image_name = "luminork",
    flake_lock = "//:flake.lock",
    build_deps = [
        "//bin/luminork:luminork",
        "//pkgs:pkgs",
    ]
)

nix_omnibus_pkg(
    name = "omnibus",
    pkg_name = "luminork",
    build_dep = "//bin/luminork:luminork",
)
