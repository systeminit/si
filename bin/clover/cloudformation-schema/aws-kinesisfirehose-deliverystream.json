{
  "typeName": "AWS::KinesisFirehose::DeliveryStream",
  "description": "Resource Type definition for AWS::KinesisFirehose::DeliveryStream",
  "additionalProperties": false,
  "properties": {
    "Arn": {
      "type": "string"
    },
    "DeliveryStreamEncryptionConfigurationInput": {
      "$ref": "#/definitions/DeliveryStreamEncryptionConfigurationInput"
    },
    "DeliveryStreamName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 64,
      "pattern": "[a-zA-Z0-9._-]+"
    },
    "DeliveryStreamType": {
      "type": "string",
      "enum": [
        "DatabaseAsSource",
        "DirectPut",
        "KinesisStreamAsSource",
        "MSKAsSource"
      ]
    },
    "ElasticsearchDestinationConfiguration": {
      "$ref": "#/definitions/ElasticsearchDestinationConfiguration"
    },
    "AmazonopensearchserviceDestinationConfiguration": {
      "$ref": "#/definitions/AmazonopensearchserviceDestinationConfiguration"
    },
    "AmazonOpenSearchServerlessDestinationConfiguration": {
      "$ref": "#/definitions/AmazonOpenSearchServerlessDestinationConfiguration"
    },
    "ExtendedS3DestinationConfiguration": {
      "$ref": "#/definitions/ExtendedS3DestinationConfiguration"
    },
    "DatabaseSourceConfiguration": {
      "$ref": "#/definitions/DatabaseSourceConfiguration"
    },
    "DirectPutSourceConfiguration": {
      "$ref": "#/definitions/DirectPutSourceConfiguration"
    },
    "KinesisStreamSourceConfiguration": {
      "$ref": "#/definitions/KinesisStreamSourceConfiguration"
    },
    "MSKSourceConfiguration": {
      "$ref": "#/definitions/MSKSourceConfiguration"
    },
    "RedshiftDestinationConfiguration": {
      "$ref": "#/definitions/RedshiftDestinationConfiguration"
    },
    "S3DestinationConfiguration": {
      "$ref": "#/definitions/S3DestinationConfiguration"
    },
    "SplunkDestinationConfiguration": {
      "$ref": "#/definitions/SplunkDestinationConfiguration"
    },
    "HttpEndpointDestinationConfiguration": {
      "$ref": "#/definitions/HttpEndpointDestinationConfiguration"
    },
    "SnowflakeDestinationConfiguration": {
      "$ref": "#/definitions/SnowflakeDestinationConfiguration"
    },
    "IcebergDestinationConfiguration": {
      "$ref": "#/definitions/IcebergDestinationConfiguration"
    },
    "Tags": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "minItems": 1,
      "maxItems": 50
    }
  },
  "definitions": {
    "DeliveryStreamEncryptionConfigurationInput": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "KeyARN": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "pattern": "arn:.*",
          "relationshipRef": {
            "typeName": "AWS::KMS::Key",
            "propertyPath": "/properties/Arn"
          }
        },
        "KeyType": {
          "type": "string",
          "enum": ["AWS_OWNED_CMK", "CUSTOMER_MANAGED_CMK"]
        }
      },
      "required": ["KeyType"]
    },
    "SplunkDestinationConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "CloudWatchLoggingOptions": {
          "$ref": "#/definitions/CloudWatchLoggingOptions"
        },
        "HECAcknowledgmentTimeoutInSeconds": {
          "type": "integer",
          "minimum": 180,
          "maximum": 600
        },
        "HECEndpoint": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2048
        },
        "HECEndpointType": {
          "type": "string",
          "enum": ["Raw", "Event"]
        },
        "HECToken": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2048
        },
        "ProcessingConfiguration": {
          "$ref": "#/definitions/ProcessingConfiguration"
        },
        "RetryOptions": {
          "$ref": "#/definitions/SplunkRetryOptions"
        },
        "S3BackupMode": {
          "type": "string"
        },
        "S3Configuration": {
          "$ref": "#/definitions/S3DestinationConfiguration"
        },
        "SecretsManagerConfiguration": {
          "$ref": "#/definitions/SecretsManagerConfiguration"
        },
        "BufferingHints": {
          "$ref": "#/definitions/SplunkBufferingHints"
        }
      },
      "required": ["HECEndpoint", "S3Configuration", "HECEndpointType"]
    },
    "HttpEndpointDestinationConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "RoleARN": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "pattern": "arn:.*",
          "relationshipRef": {
            "typeName": "AWS::IAM::Role",
            "propertyPath": "/properties/Arn"
          }
        },
        "EndpointConfiguration": {
          "$ref": "#/definitions/HttpEndpointConfiguration"
        },
        "RequestConfiguration": {
          "$ref": "#/definitions/HttpEndpointRequestConfiguration"
        },
        "BufferingHints": {
          "$ref": "#/definitions/BufferingHints"
        },
        "CloudWatchLoggingOptions": {
          "$ref": "#/definitions/CloudWatchLoggingOptions"
        },
        "ProcessingConfiguration": {
          "$ref": "#/definitions/ProcessingConfiguration"
        },
        "RetryOptions": {
          "$ref": "#/definitions/RetryOptions"
        },
        "S3BackupMode": {
          "type": "string"
        },
        "S3Configuration": {
          "$ref": "#/definitions/S3DestinationConfiguration"
        },
        "SecretsManagerConfiguration": {
          "$ref": "#/definitions/SecretsManagerConfiguration"
        }
      },
      "required": ["EndpointConfiguration", "S3Configuration"]
    },
    "DirectPutSourceConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "ThroughputHintInMBs": {
          "type": "integer",
          "minimum": 1,
          "maximum": 100
        }
      }
    },
    "KinesisStreamSourceConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "KinesisStreamARN": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "pattern": "arn:.*",
          "relationshipRef": {
            "typeName": "AWS::Kinesis::Stream",
            "propertyPath": "/properties/Arn"
          }
        },
        "RoleARN": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "pattern": "arn:.*",
          "relationshipRef": {
            "typeName": "AWS::IAM::Role",
            "propertyPath": "/properties/Arn"
          }
        }
      },
      "required": ["RoleARN", "KinesisStreamARN"]
    },
    "DatabaseSourceConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "enum": ["MySQL", "PostgreSQL"]
        },
        "Endpoint": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^(?!\\s*$).+"
        },
        "Port": {
          "type": "integer",
          "minimum": 0,
          "maximum": 65535
        },
        "SSLMode": {
          "type": "string",
          "enum": ["Disabled", "Enabled"]
        },
        "Databases": {
          "$ref": "#/definitions/Databases"
        },
        "Tables": {
          "$ref": "#/definitions/DatabaseTables"
        },
        "Columns": {
          "$ref": "#/definitions/DatabaseColumns"
        },
        "SurrogateKeys": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1,
            "maxLength": 1024,
            "pattern": "^\\S+$"
          }
        },
        "SnapshotWatermarkTable": {
          "$ref": "#/definitions/DatabaseTableName"
        },
        "DatabaseSourceAuthenticationConfiguration": {
          "$ref": "#/definitions/DatabaseSourceAuthenticationConfiguration"
        },
        "DatabaseSourceVPCConfiguration": {
          "$ref": "#/definitions/DatabaseSourceVPCConfiguration"
        },
        "Digest": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "pattern": ".*"
        },
        "PublicCertificate": {
          "type": "string",
          "minLength": 1,
          "maxLength": 4096,
          "pattern": ".*"
        }
      },
      "required": [
        "Type",
        "Endpoint",
        "Port",
        "Databases",
        "Tables",
        "SnapshotWatermarkTable",
        "DatabaseSourceAuthenticationConfiguration",
        "DatabaseSourceVPCConfiguration"
      ]
    },
    "Databases": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Include": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DatabaseName"
          }
        },
        "Exclude": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DatabaseName"
          }
        }
      }
    },
    "DatabaseName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 64,
      "pattern": "[\\u0001-\\uFFFF]*"
    },
    "DatabaseTables": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Include": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DatabaseTableName"
          }
        },
        "Exclude": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DatabaseTableName"
          }
        }
      }
    },
    "DatabaseTableName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 129,
      "pattern": "[\\u0001-\\uFFFF]*"
    },
    "DatabaseColumns": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Include": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DatabaseColumnName"
          }
        },
        "Exclude": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DatabaseColumnName"
          }
        }
      }
    },
    "DatabaseColumnName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 194,
      "pattern": "[\\u0001-\\uFFFF]*"
    },
    "DatabaseSourceAuthenticationConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "SecretsManagerConfiguration": {
          "$ref": "#/definitions/SecretsManagerConfiguration"
        }
      },
      "required": ["SecretsManagerConfiguration"]
    },
    "DatabaseSourceVPCConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "VpcEndpointServiceName": {
          "$ref": "#/definitions/VpcEndpointServiceName"
        }
      },
      "required": ["VpcEndpointServiceName"]
    },
    "VpcEndpointServiceName": {
      "type": "string",
      "minLength": 47,
      "maxLength": 255,
      "pattern": "([a-zA-Z0-9\\-\\_]+\\.){2,3}vpce\\.[a-zA-Z0-9\\-]*\\.vpce-svc\\-[a-zA-Z0-9\\-]{17}$"
    },
    "MSKSourceConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "MSKClusterARN": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "pattern": "arn:.*",
          "relationshipRef": {
            "typeName": "AWS::MSK::Cluster",
            "propertyPath": "/properties/Arn"
          }
        },
        "TopicName": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "[a-zA-Z0-9\\._\\-]+"
        },
        "ReadFromTimestamp": {
          "type": "string"
        },
        "AuthenticationConfiguration": {
          "$ref": "#/definitions/AuthenticationConfiguration"
        }
      },
      "required": ["MSKClusterARN", "TopicName", "AuthenticationConfiguration"]
    },
    "AuthenticationConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "RoleARN": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "pattern": "arn:.*",
          "relationshipRef": {
            "typeName": "AWS::IAM::Role",
            "propertyPath": "/properties/Arn"
          }
        },
        "Connectivity": {
          "type": "string",
          "enum": ["PUBLIC", "PRIVATE"]
        }
      },
      "required": ["RoleARN", "Connectivity"]
    },
    "VpcConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "RoleARN": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "pattern": "arn:.*",
          "relationshipRef": {
            "typeName": "AWS::IAM::Role",
            "propertyPath": "/properties/Arn"
          }
        },
        "SubnetIds": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "minLength": 1,
            "maxLength": 1024,
            "relationshipRef": {
              "typeName": "AWS::EC2::Subnet",
              "propertyPath": "/properties/SubnetId"
            }
          },
          "minItems": 1,
          "maxItems": 16
        },
        "SecurityGroupIds": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "minLength": 1,
            "maxLength": 1024,
            "relationshipRef": {
              "typeName": "AWS::EC2::SecurityGroup",
              "propertyPath": "/properties/GroupId"
            }
          },
          "minItems": 1,
          "maxItems": 5
        }
      },
      "required": ["RoleARN", "SubnetIds", "SecurityGroupIds"]
    },
    "DocumentIdOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "DefaultDocumentIdFormat": {
          "type": "string",
          "enum": ["FIREHOSE_DEFAULT", "NO_DOCUMENT_ID"]
        }
      },
      "required": ["DefaultDocumentIdFormat"]
    },
    "ExtendedS3DestinationConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "BucketARN": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2048,
          "pattern": "arn:.*",
          "relationshipRef": {
            "typeName": "AWS::S3::Bucket",
            "propertyPath": "/properties/Arn"
          }
        },
        "BufferingHints": {
          "$ref": "#/definitions/BufferingHints"
        },
        "CloudWatchLoggingOptions": {
          "$ref": "#/definitions/CloudWatchLoggingOptions"
        },
        "CompressionFormat": {
          "type": "string",
          "enum": ["UNCOMPRESSED", "GZIP", "ZIP", "Snappy", "HADOOP_SNAPPY"]
        },
        "CustomTimeZone": {
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "DataFormatConversionConfiguration": {
          "$ref": "#/definitions/DataFormatConversionConfiguration"
        },
        "DynamicPartitioningConfiguration": {
          "$ref": "#/definitions/DynamicPartitioningConfiguration"
        },
        "EncryptionConfiguration": {
          "$ref": "#/definitions/EncryptionConfiguration"
        },
        "ErrorOutputPrefix": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1024
        },
        "FileExtension": {
          "type": "string",
          "minLength": 0,
          "maxLength": 128,
          "pattern": "^$|\\.[0-9a-z!\\-_.*'()]+"
        },
        "Prefix": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1024
        },
        "ProcessingConfiguration": {
          "$ref": "#/definitions/ProcessingConfiguration"
        },
        "RoleARN": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "pattern": "arn:.*",
          "relationshipRef": {
            "typeName": "AWS::IAM::Role",
            "propertyPath": "/properties/Arn"
          }
        },
        "S3BackupConfiguration": {
          "$ref": "#/definitions/S3DestinationConfiguration"
        },
        "S3BackupMode": {
          "type": "string",
          "enum": ["Disabled", "Enabled"]
        }
      },
      "required": ["BucketARN", "RoleARN"]
    },
    "S3DestinationConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "BucketARN": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2048,
          "pattern": "arn:.*",
          "relationshipRef": {
            "typeName": "AWS::S3::Bucket",
            "propertyPath": "/properties/Arn"
          }
        },
        "BufferingHints": {
          "$ref": "#/definitions/BufferingHints"
        },
        "CloudWatchLoggingOptions": {
          "$ref": "#/definitions/CloudWatchLoggingOptions"
        },
        "CompressionFormat": {
          "type": "string",
          "enum": ["UNCOMPRESSED", "GZIP", "ZIP", "Snappy", "HADOOP_SNAPPY"]
        },
        "EncryptionConfiguration": {
          "$ref": "#/definitions/EncryptionConfiguration"
        },
        "ErrorOutputPrefix": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1024
        },
        "Prefix": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1024
        },
        "RoleARN": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "pattern": "arn:.*",
          "relationshipRef": {
            "typeName": "AWS::IAM::Role",
            "propertyPath": "/properties/Arn"
          }
        }
      },
      "required": ["BucketARN", "RoleARN"]
    },
    "RedshiftDestinationConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "CloudWatchLoggingOptions": {
          "$ref": "#/definitions/CloudWatchLoggingOptions"
        },
        "ClusterJDBCURL": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512
        },
        "CopyCommand": {
          "$ref": "#/definitions/CopyCommand"
        },
        "Password": {
          "type": "string",
          "minLength": 6,
          "maxLength": 512
        },
        "ProcessingConfiguration": {
          "$ref": "#/definitions/ProcessingConfiguration"
        },
        "RetryOptions": {
          "$ref": "#/definitions/RedshiftRetryOptions"
        },
        "RoleARN": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "pattern": "arn:.*",
          "relationshipRef": {
            "typeName": "AWS::IAM::Role",
            "propertyPath": "/properties/Arn"
          }
        },
        "S3BackupConfiguration": {
          "$ref": "#/definitions/S3DestinationConfiguration"
        },
        "S3BackupMode": {
          "type": "string",
          "enum": ["Disabled", "Enabled"]
        },
        "S3Configuration": {
          "$ref": "#/definitions/S3DestinationConfiguration"
        },
        "SecretsManagerConfiguration": {
          "$ref": "#/definitions/SecretsManagerConfiguration"
        },
        "Username": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512
        }
      },
      "required": [
        "S3Configuration",
        "ClusterJDBCURL",
        "CopyCommand",
        "RoleARN"
      ]
    },
    "ElasticsearchDestinationConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "BufferingHints": {
          "$ref": "#/definitions/ElasticsearchBufferingHints"
        },
        "CloudWatchLoggingOptions": {
          "$ref": "#/definitions/CloudWatchLoggingOptions"
        },
        "DomainARN": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "pattern": "arn:.*",
          "anyOf": [{
            "relationshipRef": {
              "typeName": "AWS::Elasticsearch::Domain",
              "propertyPath": "/properties/Arn"
            }
          }, {
            "relationshipRef": {
              "typeName": "AWS::OpenSearchService::Domain",
              "propertyPath": "/properties/Arn"
            }
          }]
        },
        "IndexName": {
          "type": "string",
          "minLength": 1,
          "maxLength": 80
        },
        "IndexRotationPeriod": {
          "type": "string",
          "enum": ["NoRotation", "OneHour", "OneDay", "OneWeek", "OneMonth"]
        },
        "ProcessingConfiguration": {
          "$ref": "#/definitions/ProcessingConfiguration"
        },
        "RetryOptions": {
          "$ref": "#/definitions/ElasticsearchRetryOptions"
        },
        "RoleARN": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "pattern": "arn:.*",
          "relationshipRef": {
            "typeName": "AWS::IAM::Role",
            "propertyPath": "/properties/Arn"
          }
        },
        "S3BackupMode": {
          "type": "string",
          "enum": ["FailedDocumentsOnly", "AllDocuments"]
        },
        "S3Configuration": {
          "$ref": "#/definitions/S3DestinationConfiguration"
        },
        "ClusterEndpoint": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "pattern": "https:.*"
        },
        "TypeName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "VpcConfiguration": {
          "$ref": "#/definitions/VpcConfiguration"
        },
        "DocumentIdOptions": {
          "$ref": "#/definitions/DocumentIdOptions"
        }
      },
      "required": ["IndexName", "S3Configuration", "RoleARN"]
    },
    "AmazonopensearchserviceDestinationConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "BufferingHints": {
          "$ref": "#/definitions/AmazonopensearchserviceBufferingHints"
        },
        "CloudWatchLoggingOptions": {
          "$ref": "#/definitions/CloudWatchLoggingOptions"
        },
        "DomainARN": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "pattern": "arn:.*"
        },
        "IndexName": {
          "type": "string",
          "minLength": 1,
          "maxLength": 80
        },
        "IndexRotationPeriod": {
          "type": "string",
          "enum": ["NoRotation", "OneHour", "OneDay", "OneWeek", "OneMonth"]
        },
        "ProcessingConfiguration": {
          "$ref": "#/definitions/ProcessingConfiguration"
        },
        "RetryOptions": {
          "$ref": "#/definitions/AmazonopensearchserviceRetryOptions"
        },
        "RoleARN": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "pattern": "arn:.*",
          "relationshipRef": {
            "typeName": "AWS::IAM::Role",
            "propertyPath": "/properties/Arn"
          }
        },
        "S3BackupMode": {
          "type": "string",
          "enum": ["FailedDocumentsOnly", "AllDocuments"]
        },
        "S3Configuration": {
          "$ref": "#/definitions/S3DestinationConfiguration"
        },
        "ClusterEndpoint": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "pattern": "https:.*"
        },
        "TypeName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "VpcConfiguration": {
          "$ref": "#/definitions/VpcConfiguration"
        },
        "DocumentIdOptions": {
          "$ref": "#/definitions/DocumentIdOptions"
        }
      },
      "required": ["IndexName", "S3Configuration", "RoleARN"]
    },
    "AmazonOpenSearchServerlessDestinationConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "BufferingHints": {
          "$ref": "#/definitions/AmazonOpenSearchServerlessBufferingHints"
        },
        "CloudWatchLoggingOptions": {
          "$ref": "#/definitions/CloudWatchLoggingOptions"
        },
        "IndexName": {
          "type": "string",
          "minLength": 1,
          "maxLength": 80
        },
        "ProcessingConfiguration": {
          "$ref": "#/definitions/ProcessingConfiguration"
        },
        "RetryOptions": {
          "$ref": "#/definitions/AmazonOpenSearchServerlessRetryOptions"
        },
        "RoleARN": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "pattern": "arn:.*",
          "relationshipRef": {
            "typeName": "AWS::IAM::Role",
            "propertyPath": "/properties/Arn"
          }
        },
        "S3BackupMode": {
          "type": "string",
          "enum": ["FailedDocumentsOnly", "AllDocuments"]
        },
        "S3Configuration": {
          "$ref": "#/definitions/S3DestinationConfiguration"
        },
        "CollectionEndpoint": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "pattern": "https:.*",
          "relationshipRef": {
            "typeName": "AWS::OpenSearchServerless::Collection",
            "propertyPath": "/properties/CollectionEndpoint"
          }
        },
        "VpcConfiguration": {
          "$ref": "#/definitions/VpcConfiguration"
        }
      },
      "required": ["IndexName", "S3Configuration", "RoleARN"]
    },
    "SnowflakeDestinationConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "AccountUrl": {
          "type": "string",
          "minLength": 24,
          "maxLength": 2048,
          "pattern": ".+?\\.snowflakecomputing\\.com"
        },
        "PrivateKey": {
          "type": "string",
          "minLength": 256,
          "maxLength": 4096,
          "pattern": "^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$"
        },
        "KeyPassphrase": {
          "type": "string",
          "minLength": 7,
          "maxLength": 255
        },
        "User": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        },
        "Database": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        },
        "Schema": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        },
        "Table": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        },
        "SnowflakeRoleConfiguration": {
          "$ref": "#/definitions/SnowflakeRoleConfiguration"
        },
        "DataLoadingOption": {
          "type": "string",
          "enum": [
            "JSON_MAPPING",
            "VARIANT_CONTENT_MAPPING",
            "VARIANT_CONTENT_AND_METADATA_MAPPING"
          ]
        },
        "MetaDataColumnName": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        },
        "ContentColumnName": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        },
        "SnowflakeVpcConfiguration": {
          "$ref": "#/definitions/SnowflakeVpcConfiguration"
        },
        "CloudWatchLoggingOptions": {
          "$ref": "#/definitions/CloudWatchLoggingOptions"
        },
        "ProcessingConfiguration": {
          "$ref": "#/definitions/ProcessingConfiguration"
        },
        "RoleARN": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "pattern": "arn:.*",
          "relationshipRef": {
            "typeName": "AWS::IAM::Role",
            "propertyPath": "/properties/Arn"
          }
        },
        "RetryOptions": {
          "$ref": "#/definitions/SnowflakeRetryOptions"
        },
        "S3BackupMode": {
          "type": "string",
          "enum": ["FailedDataOnly", "AllData"]
        },
        "S3Configuration": {
          "$ref": "#/definitions/S3DestinationConfiguration"
        },
        "SecretsManagerConfiguration": {
          "$ref": "#/definitions/SecretsManagerConfiguration"
        },
        "BufferingHints": {
          "$ref": "#/definitions/SnowflakeBufferingHints"
        }
      },
      "required": [
        "AccountUrl",
        "Database",
        "Schema",
        "Table",
        "RoleARN",
        "S3Configuration"
      ]
    },
    "IcebergDestinationConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "DestinationTableConfigurationList": {
          "$ref": "#/definitions/DestinationTableConfigurationList"
        },
        "ProcessingConfiguration": {
          "$ref": "#/definitions/ProcessingConfiguration"
        },
        "CloudWatchLoggingOptions": {
          "$ref": "#/definitions/CloudWatchLoggingOptions"
        },
        "CatalogConfiguration": {
          "$ref": "#/definitions/CatalogConfiguration"
        },
        "RoleARN": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "pattern": "arn:.*",
          "relationshipRef": {
            "typeName": "AWS::IAM::Role",
            "propertyPath": "/properties/Arn"
          }
        },
        "AppendOnly": {
          "type": "boolean"
        },
        "RetryOptions": {
          "$ref": "#/definitions/RetryOptions"
        },
        "s3BackupMode": {
          "type": "string",
          "enum": ["AllData", "FailedDataOnly"]
        },
        "BufferingHints": {
          "$ref": "#/definitions/BufferingHints"
        },
        "S3Configuration": {
          "$ref": "#/definitions/S3DestinationConfiguration"
        }
      },
      "required": ["RoleARN", "CatalogConfiguration", "S3Configuration"]
    },
    "CatalogConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "CatalogArn": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "pattern": "arn:.*"
        }
      }
    },
    "DestinationTableConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "DestinationTableName": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512
        },
        "DestinationDatabaseName": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512
        },
        "S3ErrorOutputPrefix": {
          "type": "string",
          "minLength": 1,
          "maxLength": 1024
        },
        "UniqueKeys": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/UniqueKey"
          }
        }
      },
      "required": ["DestinationDatabaseName", "DestinationTableName"]
    },
    "UniqueKey": {
      "type": "string",
      "minLength": 1,
      "maxLength": 512
    },
    "BufferingHints": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "IntervalInSeconds": {
          "type": "integer"
        },
        "SizeInMBs": {
          "type": "integer"
        }
      }
    },
    "ProcessingConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Enabled": {
          "type": "boolean"
        },
        "Processors": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/Processor"
          }
        }
      }
    },
    "DestinationTableConfigurationList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/DestinationTableConfiguration"
      }
    },
    "SplunkRetryOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "DurationInSeconds": {
          "type": "integer"
        }
      }
    },
    "ElasticsearchRetryOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "DurationInSeconds": {
          "type": "integer"
        }
      }
    },
    "AmazonopensearchserviceRetryOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "DurationInSeconds": {
          "type": "integer"
        }
      }
    },
    "AmazonOpenSearchServerlessRetryOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "DurationInSeconds": {
          "type": "integer"
        }
      }
    },
    "SnowflakeRetryOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "DurationInSeconds": {
          "type": "integer"
        }
      }
    },
    "RedshiftRetryOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "DurationInSeconds": {
          "type": "integer"
        }
      }
    },
    "RetryOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "DurationInSeconds": {
          "type": "integer"
        }
      }
    },
    "DataFormatConversionConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Enabled": {
          "type": "boolean"
        },
        "InputFormatConfiguration": {
          "$ref": "#/definitions/InputFormatConfiguration"
        },
        "OutputFormatConfiguration": {
          "$ref": "#/definitions/OutputFormatConfiguration"
        },
        "SchemaConfiguration": {
          "$ref": "#/definitions/SchemaConfiguration"
        }
      }
    },
    "DynamicPartitioningConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Enabled": {
          "type": "boolean"
        },
        "RetryOptions": {
          "$ref": "#/definitions/RetryOptions"
        }
      }
    },
    "CopyCommand": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "CopyOptions": {
          "type": "string",
          "minLength": 0,
          "maxLength": 204800
        },
        "DataTableColumns": {
          "type": "string",
          "minLength": 0,
          "maxLength": 204800
        },
        "DataTableName": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512
        }
      },
      "required": ["DataTableName"]
    },
    "EncryptionConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "KMSEncryptionConfig": {
          "$ref": "#/definitions/KMSEncryptionConfig"
        },
        "NoEncryptionConfig": {
          "type": "string",
          "enum": ["NoEncryption"]
        }
      }
    },
    "ElasticsearchBufferingHints": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "IntervalInSeconds": {
          "type": "integer"
        },
        "SizeInMBs": {
          "type": "integer"
        }
      }
    },
    "AmazonopensearchserviceBufferingHints": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "IntervalInSeconds": {
          "type": "integer"
        },
        "SizeInMBs": {
          "type": "integer"
        }
      }
    },
    "AmazonOpenSearchServerlessBufferingHints": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "IntervalInSeconds": {
          "type": "integer"
        },
        "SizeInMBs": {
          "type": "integer"
        }
      }
    },
    "SplunkBufferingHints": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "IntervalInSeconds": {
          "type": "integer"
        },
        "SizeInMBs": {
          "type": "integer"
        }
      }
    },
    "SnowflakeBufferingHints": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "IntervalInSeconds": {
          "type": "integer"
        },
        "SizeInMBs": {
          "type": "integer"
        }
      }
    },
    "CloudWatchLoggingOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Enabled": {
          "type": "boolean"
        },
        "LogGroupName": {
          "type": "string",
          "relationshipRef": {
            "typeName": "AWS::Logs::LogGroup",
            "propertyPath": "/properties/LogGroupName"
          }
        },
        "LogStreamName": {
          "type": "string",
          "relationshipRef": {
            "typeName": "AWS::Logs::LogStream",
            "propertyPath": "/properties/LogStreamName"
          }
        }
      }
    },
    "OutputFormatConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Serializer": {
          "$ref": "#/definitions/Serializer"
        }
      }
    },
    "Processor": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Parameters": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/ProcessorParameter"
          }
        },
        "Type": {
          "type": "string",
          "enum": [
            "RecordDeAggregation",
            "Decompression",
            "CloudWatchLogProcessing",
            "Lambda",
            "MetadataExtraction",
            "AppendDelimiterToRecord"
          ]
        }
      },
      "required": ["Type"]
    },
    "KMSEncryptionConfig": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "AWSKMSKeyARN": {
          "type": "string",
          "relationshipRef": {
            "typeName": "AWS::KMS::Key",
            "propertyPath": "/properties/Arn"
          }
        }
      },
      "required": ["AWSKMSKeyARN"]
    },
    "InputFormatConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Deserializer": {
          "$ref": "#/definitions/Deserializer"
        }
      }
    },
    "SchemaConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "CatalogId": {
          "type": "string"
        },
        "DatabaseName": {
          "type": "string",
          "relationshipRef": {
            "typeName": "AWS::Glue::Database",
            "propertyPath": "/properties/Id"
          }
        },
        "Region": {
          "type": "string"
        },
        "RoleARN": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "pattern": "arn:.*",
          "relationshipRef": {
            "typeName": "AWS::IAM::Role",
            "propertyPath": "/properties/Arn"
          }
        },
        "TableName": {
          "type": "string",
          "relationshipRef": {
            "typeName": "AWS::Glue::Table",
            "propertyPath": "/properties/Id"
          }
        },
        "VersionId": {
          "type": "string"
        }
      }
    },
    "Serializer": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "OrcSerDe": {
          "$ref": "#/definitions/OrcSerDe"
        },
        "ParquetSerDe": {
          "$ref": "#/definitions/ParquetSerDe"
        }
      }
    },
    "ProcessorParameter": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "ParameterName": {
          "type": "string"
        },
        "ParameterValue": {
          "type": "string",
          "anyOf": [{
            "relationshipRef": {
              "typeName": "AWS::Lambda::Function",
              "propertyPath": "/properties/Arn"
            }
          }, {
            "relationshipRef": {
              "typeName": "AWS::IAM::Role",
              "propertyPath": "/properties/Arn"
            }
          }, {
            "relationshipRef": {
              "typeName": "AWS::Lambda::Alias",
              "propertyPath": "/properties/Id"
            }
          }]
        }
      },
      "required": ["ParameterValue", "ParameterName"]
    },
    "Deserializer": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "HiveJsonSerDe": {
          "$ref": "#/definitions/HiveJsonSerDe"
        },
        "OpenXJsonSerDe": {
          "$ref": "#/definitions/OpenXJsonSerDe"
        }
      }
    },
    "HiveJsonSerDe": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "TimestampFormats": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "OrcSerDe": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "BlockSizeBytes": {
          "type": "integer"
        },
        "BloomFilterColumns": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "BloomFilterFalsePositiveProbability": {
          "type": "number"
        },
        "Compression": {
          "type": "string"
        },
        "DictionaryKeyThreshold": {
          "type": "number"
        },
        "EnablePadding": {
          "type": "boolean"
        },
        "FormatVersion": {
          "type": "string"
        },
        "PaddingTolerance": {
          "type": "number"
        },
        "RowIndexStride": {
          "type": "integer"
        },
        "StripeSizeBytes": {
          "type": "integer"
        }
      }
    },
    "ParquetSerDe": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "BlockSizeBytes": {
          "type": "integer"
        },
        "Compression": {
          "type": "string"
        },
        "EnableDictionaryCompression": {
          "type": "boolean"
        },
        "MaxPaddingBytes": {
          "type": "integer"
        },
        "PageSizeBytes": {
          "type": "integer"
        },
        "WriterVersion": {
          "type": "string"
        }
      }
    },
    "OpenXJsonSerDe": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "CaseInsensitive": {
          "type": "boolean"
        },
        "ColumnToJsonKeyMappings": {
          "type": "object",
          "additionalProperties": false,
          "patternProperties": {
            "[a-zA-Z0-9]+": {
              "type": "string"
            }
          }
        },
        "ConvertDotsInJsonKeysToUnderscores": {
          "type": "boolean"
        }
      }
    },
    "HttpEndpointRequestConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "ContentEncoding": {
          "type": "string",
          "enum": ["NONE", "GZIP"]
        },
        "CommonAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/HttpEndpointCommonAttribute"
          },
          "minItems": 0,
          "maxItems": 50
        }
      }
    },
    "HttpEndpointCommonAttribute": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "AttributeName": {
          "type": "string",
          "minLength": 1,
          "maxLength": 256
        },
        "AttributeValue": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1024
        }
      },
      "required": ["AttributeName", "AttributeValue"]
    },
    "HttpEndpointConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Url": {
          "type": "string",
          "minLength": 1,
          "maxLength": 1000
        },
        "AccessKey": {
          "type": "string",
          "minLength": 0,
          "maxLength": 4096
        },
        "Name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 256
        }
      },
      "required": ["Url"]
    },
    "SnowflakeRoleConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Enabled": {
          "type": "boolean"
        },
        "SnowflakeRole": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        }
      }
    },
    "SnowflakeVpcConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "PrivateLinkVpceId": {
          "type": "string",
          "minLength": 47,
          "maxLength": 255,
          "pattern": "([a-zA-Z0-9\\-\\_]+\\.){2,3}vpce\\.[a-zA-Z0-9\\-]*\\.vpce-svc\\-[a-zA-Z0-9\\-]{17}$"
        }
      },
      "required": ["PrivateLinkVpceId"]
    },
    "SecretsManagerConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Enabled": {
          "type": "boolean"
        },
        "RoleARN": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "pattern": "arn:.*:iam::\\d{12}:role/[a-zA-Z_0-9+=,.@\\-_/]+",
          "relationshipRef": {
            "typeName": "AWS::IAM::Role",
            "propertyPath": "/properties/Arn"
          }
        },
        "SecretARN": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2048,
          "pattern": "arn:.*:secretsmanager:[a-zA-Z0-9\\-]+:\\d{12}:secret:[a-zA-Z0-9\\-/_+=.@]+",
          "relationshipRef": {
            "typeName": "AWS::SecretsManager::Secret",
            "propertyPath": "/properties/Arn"
          }
        }
      },
      "required": ["Enabled"]
    },
    "Tag": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Key": {
          "type": "string",
          "pattern": "^(?!aws:)[\\p{L}\\p{Z}\\p{N}_.:\\/=+\\-@%]*$",
          "minLength": 1,
          "maxLength": 128
        },
        "Value": {
          "type": "string",
          "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:\\/=+\\-@%]*$",
          "minLength": 0,
          "maxLength": 256
        }
      },
      "required": ["Key"]
    }
  },
  "handlers": {
    "create": {
      "permissions": [
        "firehose:CreateDeliveryStream",
        "firehose:DescribeDeliveryStream",
        "iam:GetRole",
        "iam:PassRole",
        "kms:CreateGrant",
        "kms:DescribeKey"
      ]
    },
    "read": {
      "permissions": [
        "firehose:DescribeDeliveryStream",
        "firehose:ListTagsForDeliveryStream"
      ]
    },
    "update": {
      "permissions": [
        "firehose:UpdateDestination",
        "firehose:DescribeDeliveryStream",
        "firehose:StartDeliveryStreamEncryption",
        "firehose:StopDeliveryStreamEncryption",
        "firehose:ListTagsForDeliveryStream",
        "firehose:TagDeliveryStream",
        "firehose:UntagDeliveryStream",
        "kms:CreateGrant",
        "kms:RevokeGrant",
        "kms:DescribeKey"
      ]
    },
    "delete": {
      "permissions": [
        "firehose:DeleteDeliveryStream",
        "firehose:DescribeDeliveryStream",
        "kms:RevokeGrant",
        "kms:DescribeKey"
      ]
    },
    "list": {
      "permissions": ["firehose:ListDeliveryStreams"]
    }
  },
  "readOnlyProperties": ["/properties/Arn"],
  "createOnlyProperties": [
    "/properties/DeliveryStreamName",
    "/properties/DeliveryStreamType",
    "/properties/ElasticsearchDestinationConfiguration/VpcConfiguration",
    "/properties/AmazonopensearchserviceDestinationConfiguration/VpcConfiguration",
    "/properties/AmazonOpenSearchServerlessDestinationConfiguration/VpcConfiguration",
    "/properties/DatabaseSourceConfiguration",
    "/properties/KinesisStreamSourceConfiguration",
    "/properties/DirectPutSourceConfiguration",
    "/properties/MSKSourceConfiguration",
    "/properties/IcebergDestinationConfiguration",
    "/properties/SnowflakeDestinationConfiguration/SnowflakeVpcConfiguration"
  ],
  "primaryIdentifier": ["/properties/DeliveryStreamName"]
}
