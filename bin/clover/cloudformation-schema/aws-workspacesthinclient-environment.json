{
  "typeName": "AWS::WorkSpacesThinClient::Environment",
  "description": "Resource type definition for AWS::WorkSpacesThinClient::Environment.",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git",
  "definitions": {
    "Hour": {
      "type": "integer",
      "minimum": 0,
      "maximum": 23
    },
    "Minute": {
      "type": "integer",
      "minimum": 0,
      "maximum": 59
    },
    "DayOfWeek": {
      "type": "string",
      "enum": [
        "MONDAY",
        "TUESDAY",
        "WEDNESDAY",
        "THURSDAY",
        "FRIDAY",
        "SATURDAY",
        "SUNDAY"
      ]
    },
    "Tag": {
      "description": "A key-value pair to associate with a resource.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Key": {
          "type": "string",
          "description": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
          "pattern": "^(?!aws:)[a-zA-Z+-=._:/]+$",
          "minLength": 1,
          "maxLength": 128
        },
        "Value": {
          "type": "string",
          "description": "The value for the tag. You can specify a value that is 1 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
          "maxLength": 256
        }
      },
      "required": ["Key", "Value"]
    },
    "MaintenanceWindow": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "description": "The type of maintenance window.",
          "type": "string",
          "enum": ["SYSTEM", "CUSTOM"]
        },
        "StartTimeHour": {
          "description": "The hour start time of maintenance window.",
          "$ref": "#/definitions/Hour"
        },
        "StartTimeMinute": {
          "description": "The minute start time of maintenance window.",
          "$ref": "#/definitions/Minute"
        },
        "EndTimeHour": {
          "description": "The hour end time of maintenance window.",
          "$ref": "#/definitions/Hour"
        },
        "EndTimeMinute": {
          "description": "The minute end time of maintenance window.",
          "$ref": "#/definitions/Minute"
        },
        "DaysOfTheWeek": {
          "description": "The date of maintenance window.",
          "type": "array",
          "minItems": 1,
          "maxItems": 7,
          "uniqueItems": true,
          "insertionOrder": false,
          "items": {
            "$ref": "#/definitions/DayOfWeek"
          }
        },
        "ApplyTimeOf": {
          "description": "The desired time zone maintenance window.",
          "type": "string",
          "enum": ["UTC", "DEVICE"]
        }
      },
      "required": ["Type"]
    }
  },
  "properties": {
    "Id": {
      "description": "Unique identifier of the environment.",
      "type": "string",
      "pattern": "^[a-z0-9]{9}$"
    },
    "Name": {
      "description": "The name of the environment.",
      "type": "string",
      "pattern": "^.+$",
      "minLength": 1,
      "maxLength": 64
    },
    "DesktopArn": {
      "description": "The Amazon Resource Name (ARN) of the desktop to stream from Amazon WorkSpaces, WorkSpaces Web, or AppStream 2.0.",
      "type": "string",
      "pattern": "^arn:[\\w+=\\/,.@-]+:[a-zA-Z0-9\\-]+:[a-zA-Z0-9\\-]*:[0-9]{0,12}:[a-zA-Z0-9\\-\\/\\._]+$",
      "minLength": 20,
      "maxLength": 2048
    },
    "DesktopEndpoint": {
      "description": "The URL for the identity provider login (only for environments that use AppStream 2.0).",
      "type": "string",
      "pattern": "^(https:\\/\\/)[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*\\.[a-z]{2,32}(:[0-9]{1,5})?(\\/.*)?$",
      "minLength": 1,
      "maxLength": 1024
    },
    "DesktopType": {
      "description": "The type of VDI.",
      "type": "string",
      "enum": ["workspaces", "appstream", "workspaces-web"]
    },
    "ActivationCode": {
      "description": "Activation code for devices associated with environment.",
      "type": "string",
      "pattern": "^[a-z]{2}[a-z0-9]{6}$"
    },
    "RegisteredDevicesCount": {
      "description": "Number of devices registered to the environment.",
      "type": "integer",
      "minimum": 0
    },
    "SoftwareSetUpdateSchedule": {
      "description": "An option to define if software updates should be applied within a maintenance window.",
      "type": "string",
      "enum": ["USE_MAINTENANCE_WINDOW", "APPLY_IMMEDIATELY"]
    },
    "MaintenanceWindow": {
      "description": "A specification for a time window to apply software updates.",
      "$ref": "#/definitions/MaintenanceWindow"
    },
    "SoftwareSetUpdateMode": {
      "description": "An option to define which software updates to apply.",
      "type": "string",
      "enum": ["USE_LATEST", "USE_DESIRED"]
    },
    "DesiredSoftwareSetId": {
      "description": "The ID of the software set to apply.",
      "type": "string",
      "pattern": "^[0-9]{1,9}$"
    },
    "PendingSoftwareSetId": {
      "description": "The ID of the software set that is pending to be installed.",
      "type": "string",
      "pattern": "^[0-9]{1,9}$"
    },
    "PendingSoftwareSetVersion": {
      "description": "The version of the software set that is pending to be installed.",
      "type": "string"
    },
    "SoftwareSetComplianceStatus": {
      "description": "Describes if the software currently installed on all devices in the environment is a supported version.",
      "type": "string",
      "enum": ["COMPLIANT", "NOT_COMPLIANT", "NO_REGISTERED_DEVICES"]
    },
    "CreatedAt": {
      "description": "The timestamp in unix epoch format when environment was created.",
      "type": "string"
    },
    "UpdatedAt": {
      "description": "The timestamp in unix epoch format when environment was last updated.",
      "type": "string"
    },
    "Arn": {
      "description": "The environment ARN.",
      "type": "string",
      "pattern": "^arn:[\\w+=\\/,.@-]+:[a-zA-Z0-9\\-]+:[a-zA-Z0-9\\-]*:[0-9]{0,12}:[a-zA-Z0-9\\-\\/\\._]+$",
      "minLength": 20,
      "maxLength": 2048
    },
    "KmsKeyArn": {
      "description": "The Amazon Resource Name (ARN) of the AWS Key Management Service key used to encrypt the environment.",
      "type": "string",
      "pattern": "^arn:[\\w+=\\/,.@-]+:kms:[a-zA-Z0-9\\-]*:[0-9]{0,12}:key\\/[a-zA-Z0-9-]+$",
      "minLength": 20,
      "maxLength": 2048
    },
    "Tags": {
      "type": "array",
      "maxItems": 50,
      "uniqueItems": true,
      "insertionOrder": false,
      "description": "An array of key-value pairs to apply to this resource.",
      "items": {
        "$ref": "#/definitions/Tag"
      }
    },
    "DeviceCreationTags": {
      "type": "array",
      "maxItems": 50,
      "uniqueItems": true,
      "insertionOrder": false,
      "description": "An array of key-value pairs to apply to the newly created devices for this environment.",
      "items": {
        "$ref": "#/definitions/Tag"
      }
    }
  },
  "tagging": {
    "taggable": true,
    "tagOnCreate": true,
    "tagUpdatable": true,
    "cloudFormationSystemTags": true,
    "tagProperty": "/properties/Tags",
    "permissions": [
      "thinclient:UntagResource",
      "thinclient:ListTagsForResource",
      "thinclient:TagResource"
    ]
  },
  "additionalProperties": false,
  "required": ["DesktopArn"],
  "readOnlyProperties": [
    "/properties/Id",
    "/properties/ActivationCode",
    "/properties/Arn",
    "/properties/CreatedAt",
    "/properties/DesktopType",
    "/properties/RegisteredDevicesCount",
    "/properties/UpdatedAt",
    "/properties/PendingSoftwareSetId",
    "/properties/PendingSoftwareSetVersion",
    "/properties/SoftwareSetComplianceStatus"
  ],
  "createOnlyProperties": ["/properties/KmsKeyArn", "/properties/DesktopArn"],
  "primaryIdentifier": ["/properties/Id"],
  "handlers": {
    "create": {
      "permissions": [
        "thinclient:CreateEnvironment",
        "thinclient:TagResource",
        "thinclient:ListTagsForResource",
        "appstream:DescribeStacks",
        "workspaces:DescribeWorkspaceDirectories",
        "workspaces-web:GetPortal",
        "workspaces-web:GetUserSettings",
        "kms:DescribeKey",
        "kms:CreateGrant",
        "kms:GenerateDataKey",
        "kms:Decrypt"
      ]
    },
    "read": {
      "permissions": [
        "thinclient:GetEnvironment",
        "thinclient:ListTagsForResource",
        "kms:Decrypt"
      ]
    },
    "update": {
      "permissions": [
        "appstream:DescribeStacks",
        "workspaces:DescribeWorkspaceDirectories",
        "workspaces-web:GetPortal",
        "workspaces-web:GetUserSettings",
        "thinclient:UpdateEnvironment",
        "thinclient:TagResource",
        "thinclient:UntagResource",
        "kms:Decrypt",
        "kms:GenerateDataKey"
      ]
    },
    "delete": {
      "permissions": [
        "thinclient:DeleteEnvironment",
        "thinclient:UntagResource",
        "kms:Decrypt",
        "kms:RetireGrant"
      ]
    },
    "list": {
      "permissions": [
        "thinclient:ListEnvironments",
        "thinclient:ListTagsForResource",
        "kms:Decrypt"
      ]
    }
  }
}
