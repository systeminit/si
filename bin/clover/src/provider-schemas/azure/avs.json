{
  "swagger": "2.0",
  "info": {
    "title": "Azure avs",
    "version": "2024-09-01",
    "description": "Azure avs service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/providers/Microsoft.AVS/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of operations supported by the resource provider",
                  "items": {
                    "type": "object",
                    "title": "REST API Operation",
                    "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
                        "readOnly": true
                      },
                      "isDataAction": {
                        "type": "boolean",
                        "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
                        "readOnly": true
                      },
                      "display": {
                        "type": "object",
                        "description": "Localized display information for this particular operation.",
                        "properties": {
                          "provider": {
                            "type": "string",
                            "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
                            "readOnly": true
                          },
                          "resource": {
                            "type": "string",
                            "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
                            "readOnly": true
                          },
                          "operation": {
                            "type": "string",
                            "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
                            "readOnly": true
                          },
                          "description": {
                            "type": "string",
                            "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
                            "readOnly": true
                          }
                        }
                      },
                      "origin": {
                        "type": "string",
                        "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
                        "enum": [
                          "user",
                          "system",
                          "user,system"
                        ],
                        "x-ms-enum": {
                          "name": "Origin",
                          "modelAsString": true
                        },
                        "readOnly": true
                      },
                      "actionType": {
                        "type": "string",
                        "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
                        "enum": [
                          "Internal"
                        ],
                        "x-ms-enum": {
                          "name": "ActionType",
                          "modelAsString": true
                        },
                        "readOnly": true
                      }
                    }
                  },
                  "readOnly": true,
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "URL to get the next set of operation list results (if there are any).",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AVS/locations/{location}/checkQuotaAvailability": {
      "post": {
        "operationId": "Locations_CheckQuotaAvailability",
        "tags": [
          "Locations"
        ],
        "description": "Return quota for subscription by region",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of the Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Subscription quotas",
              "properties": {
                "hostsRemaining": {
                  "type": "object",
                  "description": "Remaining hosts quota by sku type",
                  "additionalProperties": {
                    "format": "int32",
                    "type": "integer"
                  },
                  "readOnly": true
                },
                "quotaEnabled": {
                  "description": "Host quota is active for current subscription",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "QuotaEnabled",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled",
                        "description": "is enabled"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled",
                        "description": "is disabled"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AVS/locations/{location}/checkTrialAvailability": {
      "post": {
        "operationId": "Locations_CheckTrialAvailability",
        "tags": [
          "Locations"
        ],
        "description": "Return trial status for subscription by region",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of the Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "sku",
            "in": "body",
            "description": "Optionally, check for a specific SKU",
            "required": false,
            "schema": {
              "type": "object",
              "description": "The resource model definition representing SKU",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
                },
                "tier": {
                  "type": "string",
                  "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
                  "enum": [
                    "Free",
                    "Basic",
                    "Standard",
                    "Premium"
                  ],
                  "x-ms-enum": {
                    "name": "SkuTier",
                    "modelAsString": false
                  }
                },
                "size": {
                  "type": "string",
                  "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                },
                "family": {
                  "type": "string",
                  "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                },
                "capacity": {
                  "type": "integer",
                  "format": "int32",
                  "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                }
              },
              "required": [
                "name"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Subscription trial availability",
              "properties": {
                "status": {
                  "description": "Trial status",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "TrialAvailable",
                    "TrialUsed",
                    "TrialDisabled"
                  ],
                  "x-ms-enum": {
                    "name": "TrialStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "TrialAvailable",
                        "value": "TrialAvailable",
                        "description": "is available"
                      },
                      {
                        "name": "TrialUsed",
                        "value": "TrialUsed",
                        "description": "is used"
                      },
                      {
                        "name": "TrialDisabled",
                        "value": "TrialDisabled",
                        "description": "is disabled"
                      }
                    ]
                  }
                },
                "availableHosts": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of trial hosts available",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AVS/privateClouds": {
      "get": {
        "operationId": "PrivateClouds_ListInSubscription",
        "tags": [
          "PrivateClouds"
        ],
        "description": "List PrivateCloud resources by subscription ID",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a PrivateCloud list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The PrivateCloud items on this page",
                  "items": {
                    "type": "object",
                    "description": "A private cloud resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "managementCluster": {
                            "description": "The default cluster used for management",
                            "type": "object",
                            "properties": {
                              "clusterSize": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The cluster size"
                              },
                              "provisioningState": {
                                "description": "The state of the cluster provisioning",
                                "readOnly": true,
                                "type": "string",
                                "enum": [
                                  "Succeeded",
                                  "Failed",
                                  "Canceled",
                                  "Cancelled",
                                  "Deleting",
                                  "Updating"
                                ],
                                "x-ms-enum": {
                                  "name": "ClusterProvisioningState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Succeeded",
                                      "value": "Succeeded",
                                      "description": "Resource has been created."
                                    },
                                    {
                                      "name": "Failed",
                                      "value": "Failed",
                                      "description": "Resource creation failed."
                                    },
                                    {
                                      "name": "Canceled",
                                      "value": "Canceled",
                                      "description": "Resource creation was canceled."
                                    },
                                    {
                                      "name": "Cancelled",
                                      "value": "Cancelled",
                                      "description": "is cancelled"
                                    },
                                    {
                                      "name": "Deleting",
                                      "value": "Deleting",
                                      "description": "is deleting"
                                    },
                                    {
                                      "name": "Updating",
                                      "value": "Updating",
                                      "description": "is updating"
                                    }
                                  ]
                                }
                              },
                              "clusterId": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The identity",
                                "readOnly": true
                              },
                              "hosts": {
                                "type": "array",
                                "description": "The hosts",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "vsanDatastoreName": {
                                "type": "string",
                                "description": "Name of the vsan datastore associated with the cluster"
                              }
                            }
                          },
                          "internet": {
                            "type": "string",
                            "description": "Connectivity to internet is enabled or disabled",
                            "default": "Disabled",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "InternetEnum",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled",
                                  "description": "is enabled"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled",
                                  "description": "is disabled"
                                }
                              ]
                            }
                          },
                          "identitySources": {
                            "type": "array",
                            "description": "vCenter Single Sign On Identity Sources",
                            "items": {
                              "type": "object",
                              "description": "vCenter Single Sign On Identity Source",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name of the identity source"
                                },
                                "alias": {
                                  "type": "string",
                                  "description": "The domain's NetBIOS name"
                                },
                                "domain": {
                                  "type": "string",
                                  "description": "The domain's DNS name"
                                },
                                "baseUserDN": {
                                  "type": "string",
                                  "description": "The base distinguished name for users"
                                },
                                "baseGroupDN": {
                                  "type": "string",
                                  "description": "The base distinguished name for groups"
                                },
                                "primaryServer": {
                                  "type": "string",
                                  "description": "Primary server URL"
                                },
                                "secondaryServer": {
                                  "type": "string",
                                  "description": "Secondary server URL"
                                },
                                "ssl": {
                                  "description": "Protect LDAP communication using SSL certificate (LDAPS)",
                                  "type": "string",
                                  "enum": [
                                    "Enabled",
                                    "Disabled"
                                  ],
                                  "x-ms-enum": {
                                    "name": "SslEnum",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Enabled",
                                        "value": "Enabled",
                                        "description": "is enabled"
                                      },
                                      {
                                        "name": "Disabled",
                                        "value": "Disabled",
                                        "description": "is disabled"
                                      }
                                    ]
                                  }
                                },
                                "username": {
                                  "type": "string",
                                  "description": "The ID of an Active Directory user with a minimum of read-only access to Base\nDN for users and group"
                                },
                                "password": {
                                  "type": "string",
                                  "format": "password",
                                  "description": "The password of the Active Directory user with a minimum of read-only access to\nBase DN for users and groups.",
                                  "x-ms-secret": true
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "availability": {
                            "description": "Properties describing how the cloud is distributed across availability zones",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "object",
                            "properties": {
                              "strategy": {
                                "description": "The availability strategy for the private cloud",
                                "type": "string",
                                "enum": [
                                  "SingleZone",
                                  "DualZone"
                                ],
                                "x-ms-enum": {
                                  "name": "AvailabilityStrategy",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "SingleZone",
                                      "value": "SingleZone",
                                      "description": "in single zone"
                                    },
                                    {
                                      "name": "DualZone",
                                      "value": "DualZone",
                                      "description": "in two zones"
                                    }
                                  ]
                                }
                              },
                              "zone": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The primary availability zone for the private cloud"
                              },
                              "secondaryZone": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The secondary availability zone for the private cloud"
                              }
                            }
                          },
                          "encryption": {
                            "description": "Customer managed key encryption, can be enabled or disabled",
                            "type": "object",
                            "properties": {
                              "status": {
                                "description": "Status of customer managed encryption key",
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "EncryptionState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled",
                                      "description": "is enabled"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled",
                                      "description": "is disabled"
                                    }
                                  ]
                                }
                              },
                              "keyVaultProperties": {
                                "description": "The key vault where the encryption key is stored",
                                "type": "object",
                                "properties": {
                                  "keyName": {
                                    "type": "string",
                                    "description": "The name of the key."
                                  },
                                  "keyVersion": {
                                    "type": "string",
                                    "description": "The version of the key."
                                  },
                                  "autoDetectedKeyVersion": {
                                    "type": "string",
                                    "description": "The auto-detected version of the key if versionType is auto-detected.",
                                    "readOnly": true
                                  },
                                  "keyVaultUrl": {
                                    "type": "string",
                                    "description": "The URL of the vault."
                                  },
                                  "keyState": {
                                    "description": "The state of key provided",
                                    "readOnly": true,
                                    "type": "string",
                                    "enum": [
                                      "Connected",
                                      "AccessDenied"
                                    ],
                                    "x-ms-enum": {
                                      "name": "EncryptionKeyStatus",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Connected",
                                          "value": "Connected",
                                          "description": "is connected"
                                        },
                                        {
                                          "name": "AccessDenied",
                                          "value": "AccessDenied",
                                          "description": "is access denied"
                                        }
                                      ]
                                    }
                                  },
                                  "versionType": {
                                    "description": "Property of the key if user provided or auto detected",
                                    "readOnly": true,
                                    "type": "string",
                                    "enum": [
                                      "Fixed",
                                      "AutoDetected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "EncryptionVersionType",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Fixed",
                                          "value": "Fixed",
                                          "description": "is fixed"
                                        },
                                        {
                                          "name": "AutoDetected",
                                          "value": "AutoDetected",
                                          "description": "is auto-detected"
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "extendedNetworkBlocks": {
                            "type": "array",
                            "description": "Array of additional networks noncontiguous with networkBlock. Networks must be\nunique and non-overlapping across VNet in your subscription, on-premise, and\nthis privateCloud networkBlock attribute. Make sure the CIDR format conforms to\n(A.B.C.D/X).",
                            "items": {
                              "type": "string"
                            }
                          },
                          "provisioningState": {
                            "description": "The provisioning state",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Cancelled",
                              "Pending",
                              "Building",
                              "Deleting",
                              "Updating"
                            ],
                            "x-ms-enum": {
                              "name": "PrivateCloudProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Cancelled",
                                  "value": "Cancelled",
                                  "description": "is cancelled"
                                },
                                {
                                  "name": "Pending",
                                  "value": "Pending",
                                  "description": "is pending"
                                },
                                {
                                  "name": "Building",
                                  "value": "Building",
                                  "description": "is building"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "is deleting"
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "is updating"
                                }
                              ]
                            }
                          },
                          "circuit": {
                            "description": "An ExpressRoute Circuit",
                            "type": "object",
                            "properties": {
                              "primarySubnet": {
                                "type": "string",
                                "description": "CIDR of primary subnet",
                                "readOnly": true
                              },
                              "secondarySubnet": {
                                "type": "string",
                                "description": "CIDR of secondary subnet",
                                "readOnly": true
                              },
                              "expressRouteID": {
                                "type": "string",
                                "description": "Identifier of the ExpressRoute Circuit (Microsoft Colo only)",
                                "readOnly": true
                              },
                              "expressRoutePrivatePeeringID": {
                                "type": "string",
                                "description": "ExpressRoute Circuit private peering identifier",
                                "readOnly": true
                              }
                            }
                          },
                          "endpoints": {
                            "description": "The endpoints",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "nsxtManager": {
                                "type": "string",
                                "description": "Endpoint FQDN for the NSX-T Data Center manager",
                                "readOnly": true
                              },
                              "vcsa": {
                                "type": "string",
                                "description": "Endpoint FQDN for Virtual Center Server Appliance",
                                "readOnly": true
                              },
                              "hcxCloudManager": {
                                "type": "string",
                                "description": "Endpoint FQDN for the HCX Cloud Manager",
                                "readOnly": true
                              },
                              "nsxtManagerIp": {
                                "type": "string",
                                "description": "Endpoint IP for the NSX-T Data Center manager",
                                "readOnly": true
                              },
                              "vcenterIp": {
                                "type": "string",
                                "description": "Endpoint IP for Virtual Center Server Appliance",
                                "readOnly": true
                              },
                              "hcxCloudManagerIp": {
                                "type": "string",
                                "description": "Endpoint IP for the HCX Cloud Manager",
                                "readOnly": true
                              }
                            }
                          },
                          "networkBlock": {
                            "type": "string",
                            "description": "The block of addresses should be unique across VNet in your subscription as\nwell as on-premise. Make sure the CIDR format is conformed to (A.B.C.D/X) where\nA,B,C,D are between 0 and 255, and X is between 0 and 22"
                          },
                          "managementNetwork": {
                            "type": "string",
                            "description": "Network used to access vCenter Server and NSX-T Manager",
                            "readOnly": true
                          },
                          "provisioningNetwork": {
                            "type": "string",
                            "description": "Used for virtual machine cold migration, cloning, and snapshot migration",
                            "readOnly": true
                          },
                          "vmotionNetwork": {
                            "type": "string",
                            "description": "Used for live migration of virtual machines",
                            "readOnly": true
                          },
                          "vcenterPassword": {
                            "type": "string",
                            "format": "password",
                            "description": "Optionally, set the vCenter admin password when the private cloud is created",
                            "x-ms-secret": true
                          },
                          "nsxtPassword": {
                            "type": "string",
                            "format": "password",
                            "description": "Optionally, set the NSX-T Manager password when the private cloud is created",
                            "x-ms-secret": true
                          },
                          "vcenterCertificateThumbprint": {
                            "type": "string",
                            "description": "Thumbprint of the vCenter Server SSL certificate",
                            "readOnly": true
                          },
                          "nsxtCertificateThumbprint": {
                            "type": "string",
                            "description": "Thumbprint of the NSX-T Manager SSL certificate",
                            "readOnly": true
                          },
                          "externalCloudLinks": {
                            "type": "array",
                            "description": "Array of cloud link IDs from other clouds that connect to this one",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "secondaryCircuit": {
                            "description": "A secondary expressRoute circuit from a separate AZ. Only present in a\nstretched private cloud",
                            "type": "object",
                            "properties": {
                              "primarySubnet": {
                                "type": "string",
                                "description": "CIDR of primary subnet",
                                "readOnly": true
                              },
                              "secondarySubnet": {
                                "type": "string",
                                "description": "CIDR of secondary subnet",
                                "readOnly": true
                              },
                              "expressRouteID": {
                                "type": "string",
                                "description": "Identifier of the ExpressRoute Circuit (Microsoft Colo only)",
                                "readOnly": true
                              },
                              "expressRoutePrivatePeeringID": {
                                "type": "string",
                                "description": "ExpressRoute Circuit private peering identifier",
                                "readOnly": true
                              }
                            }
                          },
                          "nsxPublicIpQuotaRaised": {
                            "description": "Flag to indicate whether the private cloud has the quota for provisioned NSX\nPublic IP count raised from 64 to 1024",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "NsxPublicIpQuotaRaisedEnum",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled",
                                  "description": "is enabled"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled",
                                  "description": "is disabled"
                                }
                              ]
                            }
                          },
                          "virtualNetworkId": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "Azure resource ID of the virtual network",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "\\Microsoft.Network\\vnet"
                                }
                              ]
                            }
                          },
                          "dnsZoneType": {
                            "description": "The type of DNS zone to use.",
                            "type": "string",
                            "enum": [
                              "Public",
                              "Private"
                            ],
                            "x-ms-enum": {
                              "name": "DnsZoneType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Public",
                                  "value": "Public",
                                  "description": "Primary DNS zone."
                                },
                                {
                                  "name": "Private",
                                  "value": "Private",
                                  "description": "Private DNS zone."
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "managementCluster",
                          "networkBlock"
                        ]
                      },
                      "sku": {
                        "type": "object",
                        "description": "The resource model definition representing SKU",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
                          },
                          "tier": {
                            "type": "string",
                            "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
                            "enum": [
                              "Free",
                              "Basic",
                              "Standard",
                              "Premium"
                            ],
                            "x-ms-enum": {
                              "name": "SkuTier",
                              "modelAsString": false
                            }
                          },
                          "size": {
                            "type": "string",
                            "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                          },
                          "family": {
                            "type": "string",
                            "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                          },
                          "capacity": {
                            "type": "integer",
                            "format": "int32",
                            "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "identity": {
                        "description": "The managed service identities assigned to this resource.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "tenantId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of managed service identity (either system assigned, or none).",
                            "enum": [
                              "None",
                              "SystemAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "SystemAssignedServiceIdentityType",
                              "modelAsString": true
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "zones": {
                        "type": "array",
                        "description": "The availability zones.",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "sku"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AVS/skus": {
      "get": {
        "operationId": "Skus_List",
        "description": "A list of SKUs.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Paged collection of ResourceSku items",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The ResourceSku items on this page",
                  "items": {
                    "type": "object",
                    "description": "A SKU for a resource.",
                    "properties": {
                      "resourceType": {
                        "description": "The type of resource the SKU applies to.",
                        "type": "string",
                        "enum": [
                          "privateClouds",
                          "privateClouds/clusters"
                        ],
                        "x-ms-enum": {
                          "name": "ResourceSkuResourceType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "privateClouds",
                              "value": "privateClouds",
                              "description": "The SKU is for a private cloud."
                            },
                            {
                              "name": "privateClouds/clusters",
                              "value": "privateClouds/clusters",
                              "description": "The SKU is for a private cloud cluster."
                            }
                          ]
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the SKU."
                      },
                      "tier": {
                        "type": "string",
                        "description": "The tier of virtual machines in a scale set"
                      },
                      "size": {
                        "type": "string",
                        "description": "The size of the SKU."
                      },
                      "family": {
                        "type": "string",
                        "description": "The family of the SKU."
                      },
                      "locations": {
                        "type": "array",
                        "description": "The set of locations that the SKU is available.",
                        "items": {
                          "type": "string",
                          "description": "Represents an Azure geography region where supported resource providers live."
                        }
                      },
                      "locationInfo": {
                        "type": "array",
                        "description": "A list of locations and availability zones in those locations where the SKU is available",
                        "items": {
                          "type": "object",
                          "description": "Describes an available Compute SKU Location Information.",
                          "properties": {
                            "location": {
                              "type": "string",
                              "description": "Represents an Azure geography region where supported resource providers live."
                            },
                            "zones": {
                              "type": "array",
                              "description": "List of availability zones where the SKU is supported.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "zoneDetails": {
                              "type": "array",
                              "description": "Gets details of capabilities available to a SKU in specific zones.",
                              "items": {
                                "type": "object",
                                "description": "Describes The zonal capabilities of a SKU.",
                                "properties": {
                                  "name": {
                                    "type": "array",
                                    "description": "Gets the set of zones that the SKU is available in with the specified capabilities.",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "capabilities": {
                                    "type": "array",
                                    "description": "A list of capabilities that are available for the SKU in the specified list of zones.",
                                    "items": {
                                      "type": "object",
                                      "description": "Describes The SKU capabilities object.",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the SKU capability."
                                        },
                                        "value": {
                                          "type": "string",
                                          "description": "The value of the SKU capability."
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "value"
                                      ]
                                    },
                                    "x-ms-identifiers": []
                                  }
                                },
                                "required": [
                                  "name",
                                  "capabilities"
                                ]
                              },
                              "x-ms-identifiers": []
                            }
                          },
                          "required": [
                            "location",
                            "zones",
                            "zoneDetails"
                          ]
                        },
                        "x-ms-identifiers": []
                      },
                      "capabilities": {
                        "type": "array",
                        "description": "Name value pairs to describe the capability.",
                        "items": {
                          "type": "object",
                          "description": "Describes The SKU capabilities object.",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of the SKU capability."
                            },
                            "value": {
                              "type": "string",
                              "description": "The value of the SKU capability."
                            }
                          },
                          "required": [
                            "name",
                            "value"
                          ]
                        },
                        "x-ms-identifiers": []
                      },
                      "restrictions": {
                        "type": "array",
                        "description": "The restrictions of the SKU.",
                        "items": {
                          "type": "object",
                          "description": "The restrictions of the SKU.",
                          "properties": {
                            "type": {
                              "description": "the type of restrictions.",
                              "type": "string",
                              "enum": [
                                "Location",
                                "Zone"
                              ],
                              "x-ms-enum": {
                                "name": "ResourceSkuRestrictionsType",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Location",
                                    "value": "Location",
                                    "description": "SKU restricted by location."
                                  },
                                  {
                                    "name": "Zone",
                                    "value": "Zone",
                                    "description": "SKU restricted by availability zone."
                                  }
                                ]
                              }
                            },
                            "values": {
                              "type": "array",
                              "description": "The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "restrictionInfo": {
                              "description": "The information about the restriction where the SKU cannot be used.",
                              "type": "object",
                              "properties": {
                                "locations": {
                                  "type": "array",
                                  "description": "Locations where the SKU is restricted",
                                  "items": {
                                    "type": "string",
                                    "description": "Represents an Azure geography region where supported resource providers live."
                                  }
                                },
                                "zones": {
                                  "type": "array",
                                  "description": "List of availability zones where the SKU is restricted.",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "reasonCode": {
                              "description": "the reason for restriction.",
                              "type": "string",
                              "enum": [
                                "QuotaId",
                                "NotAvailableForSubscription"
                              ],
                              "x-ms-enum": {
                                "name": "ResourceSkuRestrictionsReasonCode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "QuotaId",
                                    "value": "QuotaId",
                                    "description": "The restriction is due to exceeding a quota limitation."
                                  },
                                  {
                                    "name": "NotAvailableForSubscription",
                                    "value": "NotAvailableForSubscription",
                                    "description": "The restriction is not available for this subscription."
                                  }
                                ]
                              }
                            }
                          },
                          "required": [
                            "values",
                            "restrictionInfo"
                          ]
                        },
                        "x-ms-identifiers": []
                      }
                    },
                    "required": [
                      "resourceType",
                      "name",
                      "locations",
                      "locationInfo",
                      "restrictions"
                    ]
                  },
                  "x-ms-identifiers": []
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds": {
      "get": {
        "operationId": "PrivateClouds_List",
        "tags": [
          "PrivateClouds"
        ],
        "description": "List PrivateCloud resources by resource group",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a PrivateCloud list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The PrivateCloud items on this page",
                  "items": {
                    "type": "object",
                    "description": "A private cloud resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "managementCluster": {
                            "description": "The default cluster used for management",
                            "type": "object",
                            "properties": {
                              "clusterSize": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The cluster size"
                              },
                              "provisioningState": {
                                "description": "The state of the cluster provisioning",
                                "readOnly": true,
                                "type": "string",
                                "enum": [
                                  "Succeeded",
                                  "Failed",
                                  "Canceled",
                                  "Cancelled",
                                  "Deleting",
                                  "Updating"
                                ],
                                "x-ms-enum": {
                                  "name": "ClusterProvisioningState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Succeeded",
                                      "value": "Succeeded",
                                      "description": "Resource has been created."
                                    },
                                    {
                                      "name": "Failed",
                                      "value": "Failed",
                                      "description": "Resource creation failed."
                                    },
                                    {
                                      "name": "Canceled",
                                      "value": "Canceled",
                                      "description": "Resource creation was canceled."
                                    },
                                    {
                                      "name": "Cancelled",
                                      "value": "Cancelled",
                                      "description": "is cancelled"
                                    },
                                    {
                                      "name": "Deleting",
                                      "value": "Deleting",
                                      "description": "is deleting"
                                    },
                                    {
                                      "name": "Updating",
                                      "value": "Updating",
                                      "description": "is updating"
                                    }
                                  ]
                                }
                              },
                              "clusterId": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The identity",
                                "readOnly": true
                              },
                              "hosts": {
                                "type": "array",
                                "description": "The hosts",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "vsanDatastoreName": {
                                "type": "string",
                                "description": "Name of the vsan datastore associated with the cluster"
                              }
                            }
                          },
                          "internet": {
                            "type": "string",
                            "description": "Connectivity to internet is enabled or disabled",
                            "default": "Disabled",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "InternetEnum",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled",
                                  "description": "is enabled"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled",
                                  "description": "is disabled"
                                }
                              ]
                            }
                          },
                          "identitySources": {
                            "type": "array",
                            "description": "vCenter Single Sign On Identity Sources",
                            "items": {
                              "type": "object",
                              "description": "vCenter Single Sign On Identity Source",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name of the identity source"
                                },
                                "alias": {
                                  "type": "string",
                                  "description": "The domain's NetBIOS name"
                                },
                                "domain": {
                                  "type": "string",
                                  "description": "The domain's DNS name"
                                },
                                "baseUserDN": {
                                  "type": "string",
                                  "description": "The base distinguished name for users"
                                },
                                "baseGroupDN": {
                                  "type": "string",
                                  "description": "The base distinguished name for groups"
                                },
                                "primaryServer": {
                                  "type": "string",
                                  "description": "Primary server URL"
                                },
                                "secondaryServer": {
                                  "type": "string",
                                  "description": "Secondary server URL"
                                },
                                "ssl": {
                                  "description": "Protect LDAP communication using SSL certificate (LDAPS)",
                                  "type": "string",
                                  "enum": [
                                    "Enabled",
                                    "Disabled"
                                  ],
                                  "x-ms-enum": {
                                    "name": "SslEnum",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Enabled",
                                        "value": "Enabled",
                                        "description": "is enabled"
                                      },
                                      {
                                        "name": "Disabled",
                                        "value": "Disabled",
                                        "description": "is disabled"
                                      }
                                    ]
                                  }
                                },
                                "username": {
                                  "type": "string",
                                  "description": "The ID of an Active Directory user with a minimum of read-only access to Base\nDN for users and group"
                                },
                                "password": {
                                  "type": "string",
                                  "format": "password",
                                  "description": "The password of the Active Directory user with a minimum of read-only access to\nBase DN for users and groups.",
                                  "x-ms-secret": true
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "availability": {
                            "description": "Properties describing how the cloud is distributed across availability zones",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "object",
                            "properties": {
                              "strategy": {
                                "description": "The availability strategy for the private cloud",
                                "type": "string",
                                "enum": [
                                  "SingleZone",
                                  "DualZone"
                                ],
                                "x-ms-enum": {
                                  "name": "AvailabilityStrategy",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "SingleZone",
                                      "value": "SingleZone",
                                      "description": "in single zone"
                                    },
                                    {
                                      "name": "DualZone",
                                      "value": "DualZone",
                                      "description": "in two zones"
                                    }
                                  ]
                                }
                              },
                              "zone": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The primary availability zone for the private cloud"
                              },
                              "secondaryZone": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The secondary availability zone for the private cloud"
                              }
                            }
                          },
                          "encryption": {
                            "description": "Customer managed key encryption, can be enabled or disabled",
                            "type": "object",
                            "properties": {
                              "status": {
                                "description": "Status of customer managed encryption key",
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "EncryptionState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled",
                                      "description": "is enabled"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled",
                                      "description": "is disabled"
                                    }
                                  ]
                                }
                              },
                              "keyVaultProperties": {
                                "description": "The key vault where the encryption key is stored",
                                "type": "object",
                                "properties": {
                                  "keyName": {
                                    "type": "string",
                                    "description": "The name of the key."
                                  },
                                  "keyVersion": {
                                    "type": "string",
                                    "description": "The version of the key."
                                  },
                                  "autoDetectedKeyVersion": {
                                    "type": "string",
                                    "description": "The auto-detected version of the key if versionType is auto-detected.",
                                    "readOnly": true
                                  },
                                  "keyVaultUrl": {
                                    "type": "string",
                                    "description": "The URL of the vault."
                                  },
                                  "keyState": {
                                    "description": "The state of key provided",
                                    "readOnly": true,
                                    "type": "string",
                                    "enum": [
                                      "Connected",
                                      "AccessDenied"
                                    ],
                                    "x-ms-enum": {
                                      "name": "EncryptionKeyStatus",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Connected",
                                          "value": "Connected",
                                          "description": "is connected"
                                        },
                                        {
                                          "name": "AccessDenied",
                                          "value": "AccessDenied",
                                          "description": "is access denied"
                                        }
                                      ]
                                    }
                                  },
                                  "versionType": {
                                    "description": "Property of the key if user provided or auto detected",
                                    "readOnly": true,
                                    "type": "string",
                                    "enum": [
                                      "Fixed",
                                      "AutoDetected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "EncryptionVersionType",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Fixed",
                                          "value": "Fixed",
                                          "description": "is fixed"
                                        },
                                        {
                                          "name": "AutoDetected",
                                          "value": "AutoDetected",
                                          "description": "is auto-detected"
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "extendedNetworkBlocks": {
                            "type": "array",
                            "description": "Array of additional networks noncontiguous with networkBlock. Networks must be\nunique and non-overlapping across VNet in your subscription, on-premise, and\nthis privateCloud networkBlock attribute. Make sure the CIDR format conforms to\n(A.B.C.D/X).",
                            "items": {
                              "type": "string"
                            }
                          },
                          "provisioningState": {
                            "description": "The provisioning state",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Cancelled",
                              "Pending",
                              "Building",
                              "Deleting",
                              "Updating"
                            ],
                            "x-ms-enum": {
                              "name": "PrivateCloudProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Cancelled",
                                  "value": "Cancelled",
                                  "description": "is cancelled"
                                },
                                {
                                  "name": "Pending",
                                  "value": "Pending",
                                  "description": "is pending"
                                },
                                {
                                  "name": "Building",
                                  "value": "Building",
                                  "description": "is building"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "is deleting"
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "is updating"
                                }
                              ]
                            }
                          },
                          "circuit": {
                            "description": "An ExpressRoute Circuit",
                            "type": "object",
                            "properties": {
                              "primarySubnet": {
                                "type": "string",
                                "description": "CIDR of primary subnet",
                                "readOnly": true
                              },
                              "secondarySubnet": {
                                "type": "string",
                                "description": "CIDR of secondary subnet",
                                "readOnly": true
                              },
                              "expressRouteID": {
                                "type": "string",
                                "description": "Identifier of the ExpressRoute Circuit (Microsoft Colo only)",
                                "readOnly": true
                              },
                              "expressRoutePrivatePeeringID": {
                                "type": "string",
                                "description": "ExpressRoute Circuit private peering identifier",
                                "readOnly": true
                              }
                            }
                          },
                          "endpoints": {
                            "description": "The endpoints",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "nsxtManager": {
                                "type": "string",
                                "description": "Endpoint FQDN for the NSX-T Data Center manager",
                                "readOnly": true
                              },
                              "vcsa": {
                                "type": "string",
                                "description": "Endpoint FQDN for Virtual Center Server Appliance",
                                "readOnly": true
                              },
                              "hcxCloudManager": {
                                "type": "string",
                                "description": "Endpoint FQDN for the HCX Cloud Manager",
                                "readOnly": true
                              },
                              "nsxtManagerIp": {
                                "type": "string",
                                "description": "Endpoint IP for the NSX-T Data Center manager",
                                "readOnly": true
                              },
                              "vcenterIp": {
                                "type": "string",
                                "description": "Endpoint IP for Virtual Center Server Appliance",
                                "readOnly": true
                              },
                              "hcxCloudManagerIp": {
                                "type": "string",
                                "description": "Endpoint IP for the HCX Cloud Manager",
                                "readOnly": true
                              }
                            }
                          },
                          "networkBlock": {
                            "type": "string",
                            "description": "The block of addresses should be unique across VNet in your subscription as\nwell as on-premise. Make sure the CIDR format is conformed to (A.B.C.D/X) where\nA,B,C,D are between 0 and 255, and X is between 0 and 22"
                          },
                          "managementNetwork": {
                            "type": "string",
                            "description": "Network used to access vCenter Server and NSX-T Manager",
                            "readOnly": true
                          },
                          "provisioningNetwork": {
                            "type": "string",
                            "description": "Used for virtual machine cold migration, cloning, and snapshot migration",
                            "readOnly": true
                          },
                          "vmotionNetwork": {
                            "type": "string",
                            "description": "Used for live migration of virtual machines",
                            "readOnly": true
                          },
                          "vcenterPassword": {
                            "type": "string",
                            "format": "password",
                            "description": "Optionally, set the vCenter admin password when the private cloud is created",
                            "x-ms-secret": true
                          },
                          "nsxtPassword": {
                            "type": "string",
                            "format": "password",
                            "description": "Optionally, set the NSX-T Manager password when the private cloud is created",
                            "x-ms-secret": true
                          },
                          "vcenterCertificateThumbprint": {
                            "type": "string",
                            "description": "Thumbprint of the vCenter Server SSL certificate",
                            "readOnly": true
                          },
                          "nsxtCertificateThumbprint": {
                            "type": "string",
                            "description": "Thumbprint of the NSX-T Manager SSL certificate",
                            "readOnly": true
                          },
                          "externalCloudLinks": {
                            "type": "array",
                            "description": "Array of cloud link IDs from other clouds that connect to this one",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "secondaryCircuit": {
                            "description": "A secondary expressRoute circuit from a separate AZ. Only present in a\nstretched private cloud",
                            "type": "object",
                            "properties": {
                              "primarySubnet": {
                                "type": "string",
                                "description": "CIDR of primary subnet",
                                "readOnly": true
                              },
                              "secondarySubnet": {
                                "type": "string",
                                "description": "CIDR of secondary subnet",
                                "readOnly": true
                              },
                              "expressRouteID": {
                                "type": "string",
                                "description": "Identifier of the ExpressRoute Circuit (Microsoft Colo only)",
                                "readOnly": true
                              },
                              "expressRoutePrivatePeeringID": {
                                "type": "string",
                                "description": "ExpressRoute Circuit private peering identifier",
                                "readOnly": true
                              }
                            }
                          },
                          "nsxPublicIpQuotaRaised": {
                            "description": "Flag to indicate whether the private cloud has the quota for provisioned NSX\nPublic IP count raised from 64 to 1024",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "NsxPublicIpQuotaRaisedEnum",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled",
                                  "description": "is enabled"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled",
                                  "description": "is disabled"
                                }
                              ]
                            }
                          },
                          "virtualNetworkId": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "Azure resource ID of the virtual network",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "\\Microsoft.Network\\vnet"
                                }
                              ]
                            }
                          },
                          "dnsZoneType": {
                            "description": "The type of DNS zone to use.",
                            "type": "string",
                            "enum": [
                              "Public",
                              "Private"
                            ],
                            "x-ms-enum": {
                              "name": "DnsZoneType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Public",
                                  "value": "Public",
                                  "description": "Primary DNS zone."
                                },
                                {
                                  "name": "Private",
                                  "value": "Private",
                                  "description": "Private DNS zone."
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "managementCluster",
                          "networkBlock"
                        ]
                      },
                      "sku": {
                        "type": "object",
                        "description": "The resource model definition representing SKU",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
                          },
                          "tier": {
                            "type": "string",
                            "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
                            "enum": [
                              "Free",
                              "Basic",
                              "Standard",
                              "Premium"
                            ],
                            "x-ms-enum": {
                              "name": "SkuTier",
                              "modelAsString": false
                            }
                          },
                          "size": {
                            "type": "string",
                            "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                          },
                          "family": {
                            "type": "string",
                            "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                          },
                          "capacity": {
                            "type": "integer",
                            "format": "int32",
                            "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "identity": {
                        "description": "The managed service identities assigned to this resource.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "tenantId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of managed service identity (either system assigned, or none).",
                            "enum": [
                              "None",
                              "SystemAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "SystemAssignedServiceIdentityType",
                              "modelAsString": true
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "zones": {
                        "type": "array",
                        "description": "The availability zones.",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "sku"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}": {
      "get": {
        "operationId": "PrivateClouds_Get",
        "tags": [
          "PrivateClouds"
        ],
        "description": "Get a PrivateCloud",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A private cloud resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "managementCluster": {
                      "description": "The default cluster used for management",
                      "type": "object",
                      "properties": {
                        "clusterSize": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The cluster size"
                        },
                        "provisioningState": {
                          "description": "The state of the cluster provisioning",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Succeeded",
                            "Failed",
                            "Canceled",
                            "Cancelled",
                            "Deleting",
                            "Updating"
                          ],
                          "x-ms-enum": {
                            "name": "ClusterProvisioningState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Succeeded",
                                "value": "Succeeded",
                                "description": "Resource has been created."
                              },
                              {
                                "name": "Failed",
                                "value": "Failed",
                                "description": "Resource creation failed."
                              },
                              {
                                "name": "Canceled",
                                "value": "Canceled",
                                "description": "Resource creation was canceled."
                              },
                              {
                                "name": "Cancelled",
                                "value": "Cancelled",
                                "description": "is cancelled"
                              },
                              {
                                "name": "Deleting",
                                "value": "Deleting",
                                "description": "is deleting"
                              },
                              {
                                "name": "Updating",
                                "value": "Updating",
                                "description": "is updating"
                              }
                            ]
                          }
                        },
                        "clusterId": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The identity",
                          "readOnly": true
                        },
                        "hosts": {
                          "type": "array",
                          "description": "The hosts",
                          "items": {
                            "type": "string"
                          }
                        },
                        "vsanDatastoreName": {
                          "type": "string",
                          "description": "Name of the vsan datastore associated with the cluster"
                        }
                      }
                    },
                    "internet": {
                      "type": "string",
                      "description": "Connectivity to internet is enabled or disabled",
                      "default": "Disabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "InternetEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "is enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "is disabled"
                          }
                        ]
                      }
                    },
                    "identitySources": {
                      "type": "array",
                      "description": "vCenter Single Sign On Identity Sources",
                      "items": {
                        "type": "object",
                        "description": "vCenter Single Sign On Identity Source",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the identity source"
                          },
                          "alias": {
                            "type": "string",
                            "description": "The domain's NetBIOS name"
                          },
                          "domain": {
                            "type": "string",
                            "description": "The domain's DNS name"
                          },
                          "baseUserDN": {
                            "type": "string",
                            "description": "The base distinguished name for users"
                          },
                          "baseGroupDN": {
                            "type": "string",
                            "description": "The base distinguished name for groups"
                          },
                          "primaryServer": {
                            "type": "string",
                            "description": "Primary server URL"
                          },
                          "secondaryServer": {
                            "type": "string",
                            "description": "Secondary server URL"
                          },
                          "ssl": {
                            "description": "Protect LDAP communication using SSL certificate (LDAPS)",
                            "type": "string",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "SslEnum",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled",
                                  "description": "is enabled"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled",
                                  "description": "is disabled"
                                }
                              ]
                            }
                          },
                          "username": {
                            "type": "string",
                            "description": "The ID of an Active Directory user with a minimum of read-only access to Base\nDN for users and group"
                          },
                          "password": {
                            "type": "string",
                            "format": "password",
                            "description": "The password of the Active Directory user with a minimum of read-only access to\nBase DN for users and groups.",
                            "x-ms-secret": true
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "availability": {
                      "description": "Properties describing how the cloud is distributed across availability zones",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "strategy": {
                          "description": "The availability strategy for the private cloud",
                          "type": "string",
                          "enum": [
                            "SingleZone",
                            "DualZone"
                          ],
                          "x-ms-enum": {
                            "name": "AvailabilityStrategy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "SingleZone",
                                "value": "SingleZone",
                                "description": "in single zone"
                              },
                              {
                                "name": "DualZone",
                                "value": "DualZone",
                                "description": "in two zones"
                              }
                            ]
                          }
                        },
                        "zone": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The primary availability zone for the private cloud"
                        },
                        "secondaryZone": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The secondary availability zone for the private cloud"
                        }
                      }
                    },
                    "encryption": {
                      "description": "Customer managed key encryption, can be enabled or disabled",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Status of customer managed encryption key",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EncryptionState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "is enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "is disabled"
                              }
                            ]
                          }
                        },
                        "keyVaultProperties": {
                          "description": "The key vault where the encryption key is stored",
                          "type": "object",
                          "properties": {
                            "keyName": {
                              "type": "string",
                              "description": "The name of the key."
                            },
                            "keyVersion": {
                              "type": "string",
                              "description": "The version of the key."
                            },
                            "autoDetectedKeyVersion": {
                              "type": "string",
                              "description": "The auto-detected version of the key if versionType is auto-detected.",
                              "readOnly": true
                            },
                            "keyVaultUrl": {
                              "type": "string",
                              "description": "The URL of the vault."
                            },
                            "keyState": {
                              "description": "The state of key provided",
                              "readOnly": true,
                              "type": "string",
                              "enum": [
                                "Connected",
                                "AccessDenied"
                              ],
                              "x-ms-enum": {
                                "name": "EncryptionKeyStatus",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Connected",
                                    "value": "Connected",
                                    "description": "is connected"
                                  },
                                  {
                                    "name": "AccessDenied",
                                    "value": "AccessDenied",
                                    "description": "is access denied"
                                  }
                                ]
                              }
                            },
                            "versionType": {
                              "description": "Property of the key if user provided or auto detected",
                              "readOnly": true,
                              "type": "string",
                              "enum": [
                                "Fixed",
                                "AutoDetected"
                              ],
                              "x-ms-enum": {
                                "name": "EncryptionVersionType",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Fixed",
                                    "value": "Fixed",
                                    "description": "is fixed"
                                  },
                                  {
                                    "name": "AutoDetected",
                                    "value": "AutoDetected",
                                    "description": "is auto-detected"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "extendedNetworkBlocks": {
                      "type": "array",
                      "description": "Array of additional networks noncontiguous with networkBlock. Networks must be\nunique and non-overlapping across VNet in your subscription, on-premise, and\nthis privateCloud networkBlock attribute. Make sure the CIDR format conforms to\n(A.B.C.D/X).",
                      "items": {
                        "type": "string"
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Cancelled",
                        "Pending",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "PrivateCloudProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Cancelled",
                            "value": "Cancelled",
                            "description": "is cancelled"
                          },
                          {
                            "name": "Pending",
                            "value": "Pending",
                            "description": "is pending"
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "circuit": {
                      "description": "An ExpressRoute Circuit",
                      "type": "object",
                      "properties": {
                        "primarySubnet": {
                          "type": "string",
                          "description": "CIDR of primary subnet",
                          "readOnly": true
                        },
                        "secondarySubnet": {
                          "type": "string",
                          "description": "CIDR of secondary subnet",
                          "readOnly": true
                        },
                        "expressRouteID": {
                          "type": "string",
                          "description": "Identifier of the ExpressRoute Circuit (Microsoft Colo only)",
                          "readOnly": true
                        },
                        "expressRoutePrivatePeeringID": {
                          "type": "string",
                          "description": "ExpressRoute Circuit private peering identifier",
                          "readOnly": true
                        }
                      }
                    },
                    "endpoints": {
                      "description": "The endpoints",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "nsxtManager": {
                          "type": "string",
                          "description": "Endpoint FQDN for the NSX-T Data Center manager",
                          "readOnly": true
                        },
                        "vcsa": {
                          "type": "string",
                          "description": "Endpoint FQDN for Virtual Center Server Appliance",
                          "readOnly": true
                        },
                        "hcxCloudManager": {
                          "type": "string",
                          "description": "Endpoint FQDN for the HCX Cloud Manager",
                          "readOnly": true
                        },
                        "nsxtManagerIp": {
                          "type": "string",
                          "description": "Endpoint IP for the NSX-T Data Center manager",
                          "readOnly": true
                        },
                        "vcenterIp": {
                          "type": "string",
                          "description": "Endpoint IP for Virtual Center Server Appliance",
                          "readOnly": true
                        },
                        "hcxCloudManagerIp": {
                          "type": "string",
                          "description": "Endpoint IP for the HCX Cloud Manager",
                          "readOnly": true
                        }
                      }
                    },
                    "networkBlock": {
                      "type": "string",
                      "description": "The block of addresses should be unique across VNet in your subscription as\nwell as on-premise. Make sure the CIDR format is conformed to (A.B.C.D/X) where\nA,B,C,D are between 0 and 255, and X is between 0 and 22"
                    },
                    "managementNetwork": {
                      "type": "string",
                      "description": "Network used to access vCenter Server and NSX-T Manager",
                      "readOnly": true
                    },
                    "provisioningNetwork": {
                      "type": "string",
                      "description": "Used for virtual machine cold migration, cloning, and snapshot migration",
                      "readOnly": true
                    },
                    "vmotionNetwork": {
                      "type": "string",
                      "description": "Used for live migration of virtual machines",
                      "readOnly": true
                    },
                    "vcenterPassword": {
                      "type": "string",
                      "format": "password",
                      "description": "Optionally, set the vCenter admin password when the private cloud is created",
                      "x-ms-secret": true
                    },
                    "nsxtPassword": {
                      "type": "string",
                      "format": "password",
                      "description": "Optionally, set the NSX-T Manager password when the private cloud is created",
                      "x-ms-secret": true
                    },
                    "vcenterCertificateThumbprint": {
                      "type": "string",
                      "description": "Thumbprint of the vCenter Server SSL certificate",
                      "readOnly": true
                    },
                    "nsxtCertificateThumbprint": {
                      "type": "string",
                      "description": "Thumbprint of the NSX-T Manager SSL certificate",
                      "readOnly": true
                    },
                    "externalCloudLinks": {
                      "type": "array",
                      "description": "Array of cloud link IDs from other clouds that connect to this one",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "secondaryCircuit": {
                      "description": "A secondary expressRoute circuit from a separate AZ. Only present in a\nstretched private cloud",
                      "type": "object",
                      "properties": {
                        "primarySubnet": {
                          "type": "string",
                          "description": "CIDR of primary subnet",
                          "readOnly": true
                        },
                        "secondarySubnet": {
                          "type": "string",
                          "description": "CIDR of secondary subnet",
                          "readOnly": true
                        },
                        "expressRouteID": {
                          "type": "string",
                          "description": "Identifier of the ExpressRoute Circuit (Microsoft Colo only)",
                          "readOnly": true
                        },
                        "expressRoutePrivatePeeringID": {
                          "type": "string",
                          "description": "ExpressRoute Circuit private peering identifier",
                          "readOnly": true
                        }
                      }
                    },
                    "nsxPublicIpQuotaRaised": {
                      "description": "Flag to indicate whether the private cloud has the quota for provisioned NSX\nPublic IP count raised from 64 to 1024",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "NsxPublicIpQuotaRaisedEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "is enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "is disabled"
                          }
                        ]
                      }
                    },
                    "virtualNetworkId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Azure resource ID of the virtual network",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "\\Microsoft.Network\\vnet"
                          }
                        ]
                      }
                    },
                    "dnsZoneType": {
                      "description": "The type of DNS zone to use.",
                      "type": "string",
                      "enum": [
                        "Public",
                        "Private"
                      ],
                      "x-ms-enum": {
                        "name": "DnsZoneType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Public",
                            "value": "Public",
                            "description": "Primary DNS zone."
                          },
                          {
                            "name": "Private",
                            "value": "Private",
                            "description": "Private DNS zone."
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "managementCluster",
                    "networkBlock"
                  ]
                },
                "sku": {
                  "type": "object",
                  "description": "The resource model definition representing SKU",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
                    },
                    "tier": {
                      "type": "string",
                      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
                      "enum": [
                        "Free",
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": false
                      }
                    },
                    "size": {
                      "type": "string",
                      "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                    },
                    "family": {
                      "type": "string",
                      "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (either system assigned, or none).",
                      "enum": [
                        "None",
                        "SystemAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "SystemAssignedServiceIdentityType",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "zones": {
                  "type": "array",
                  "description": "The availability zones.",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "sku"
              ]
            }
          }
        }
      },
      "put": {
        "operationId": "PrivateClouds_CreateOrUpdate",
        "tags": [
          "PrivateClouds"
        ],
        "description": "Create a PrivateCloud",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "privateCloud",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A private cloud resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "managementCluster": {
                      "description": "The default cluster used for management",
                      "type": "object",
                      "properties": {
                        "clusterSize": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The cluster size"
                        },
                        "provisioningState": {
                          "description": "The state of the cluster provisioning",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Succeeded",
                            "Failed",
                            "Canceled",
                            "Cancelled",
                            "Deleting",
                            "Updating"
                          ],
                          "x-ms-enum": {
                            "name": "ClusterProvisioningState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Succeeded",
                                "value": "Succeeded",
                                "description": "Resource has been created."
                              },
                              {
                                "name": "Failed",
                                "value": "Failed",
                                "description": "Resource creation failed."
                              },
                              {
                                "name": "Canceled",
                                "value": "Canceled",
                                "description": "Resource creation was canceled."
                              },
                              {
                                "name": "Cancelled",
                                "value": "Cancelled",
                                "description": "is cancelled"
                              },
                              {
                                "name": "Deleting",
                                "value": "Deleting",
                                "description": "is deleting"
                              },
                              {
                                "name": "Updating",
                                "value": "Updating",
                                "description": "is updating"
                              }
                            ]
                          }
                        },
                        "clusterId": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The identity",
                          "readOnly": true
                        },
                        "hosts": {
                          "type": "array",
                          "description": "The hosts",
                          "items": {
                            "type": "string"
                          }
                        },
                        "vsanDatastoreName": {
                          "type": "string",
                          "description": "Name of the vsan datastore associated with the cluster"
                        }
                      }
                    },
                    "internet": {
                      "type": "string",
                      "description": "Connectivity to internet is enabled or disabled",
                      "default": "Disabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "InternetEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "is enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "is disabled"
                          }
                        ]
                      }
                    },
                    "identitySources": {
                      "type": "array",
                      "description": "vCenter Single Sign On Identity Sources",
                      "items": {
                        "type": "object",
                        "description": "vCenter Single Sign On Identity Source",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the identity source"
                          },
                          "alias": {
                            "type": "string",
                            "description": "The domain's NetBIOS name"
                          },
                          "domain": {
                            "type": "string",
                            "description": "The domain's DNS name"
                          },
                          "baseUserDN": {
                            "type": "string",
                            "description": "The base distinguished name for users"
                          },
                          "baseGroupDN": {
                            "type": "string",
                            "description": "The base distinguished name for groups"
                          },
                          "primaryServer": {
                            "type": "string",
                            "description": "Primary server URL"
                          },
                          "secondaryServer": {
                            "type": "string",
                            "description": "Secondary server URL"
                          },
                          "ssl": {
                            "description": "Protect LDAP communication using SSL certificate (LDAPS)",
                            "type": "string",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "SslEnum",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled",
                                  "description": "is enabled"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled",
                                  "description": "is disabled"
                                }
                              ]
                            }
                          },
                          "username": {
                            "type": "string",
                            "description": "The ID of an Active Directory user with a minimum of read-only access to Base\nDN for users and group"
                          },
                          "password": {
                            "type": "string",
                            "format": "password",
                            "description": "The password of the Active Directory user with a minimum of read-only access to\nBase DN for users and groups.",
                            "x-ms-secret": true
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "availability": {
                      "description": "Properties describing how the cloud is distributed across availability zones",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "strategy": {
                          "description": "The availability strategy for the private cloud",
                          "type": "string",
                          "enum": [
                            "SingleZone",
                            "DualZone"
                          ],
                          "x-ms-enum": {
                            "name": "AvailabilityStrategy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "SingleZone",
                                "value": "SingleZone",
                                "description": "in single zone"
                              },
                              {
                                "name": "DualZone",
                                "value": "DualZone",
                                "description": "in two zones"
                              }
                            ]
                          }
                        },
                        "zone": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The primary availability zone for the private cloud"
                        },
                        "secondaryZone": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The secondary availability zone for the private cloud"
                        }
                      }
                    },
                    "encryption": {
                      "description": "Customer managed key encryption, can be enabled or disabled",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Status of customer managed encryption key",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EncryptionState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "is enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "is disabled"
                              }
                            ]
                          }
                        },
                        "keyVaultProperties": {
                          "description": "The key vault where the encryption key is stored",
                          "type": "object",
                          "properties": {
                            "keyName": {
                              "type": "string",
                              "description": "The name of the key."
                            },
                            "keyVersion": {
                              "type": "string",
                              "description": "The version of the key."
                            },
                            "autoDetectedKeyVersion": {
                              "type": "string",
                              "description": "The auto-detected version of the key if versionType is auto-detected.",
                              "readOnly": true
                            },
                            "keyVaultUrl": {
                              "type": "string",
                              "description": "The URL of the vault."
                            },
                            "keyState": {
                              "description": "The state of key provided",
                              "readOnly": true,
                              "type": "string",
                              "enum": [
                                "Connected",
                                "AccessDenied"
                              ],
                              "x-ms-enum": {
                                "name": "EncryptionKeyStatus",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Connected",
                                    "value": "Connected",
                                    "description": "is connected"
                                  },
                                  {
                                    "name": "AccessDenied",
                                    "value": "AccessDenied",
                                    "description": "is access denied"
                                  }
                                ]
                              }
                            },
                            "versionType": {
                              "description": "Property of the key if user provided or auto detected",
                              "readOnly": true,
                              "type": "string",
                              "enum": [
                                "Fixed",
                                "AutoDetected"
                              ],
                              "x-ms-enum": {
                                "name": "EncryptionVersionType",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Fixed",
                                    "value": "Fixed",
                                    "description": "is fixed"
                                  },
                                  {
                                    "name": "AutoDetected",
                                    "value": "AutoDetected",
                                    "description": "is auto-detected"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "extendedNetworkBlocks": {
                      "type": "array",
                      "description": "Array of additional networks noncontiguous with networkBlock. Networks must be\nunique and non-overlapping across VNet in your subscription, on-premise, and\nthis privateCloud networkBlock attribute. Make sure the CIDR format conforms to\n(A.B.C.D/X).",
                      "items": {
                        "type": "string"
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Cancelled",
                        "Pending",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "PrivateCloudProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Cancelled",
                            "value": "Cancelled",
                            "description": "is cancelled"
                          },
                          {
                            "name": "Pending",
                            "value": "Pending",
                            "description": "is pending"
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "circuit": {
                      "description": "An ExpressRoute Circuit",
                      "type": "object",
                      "properties": {
                        "primarySubnet": {
                          "type": "string",
                          "description": "CIDR of primary subnet",
                          "readOnly": true
                        },
                        "secondarySubnet": {
                          "type": "string",
                          "description": "CIDR of secondary subnet",
                          "readOnly": true
                        },
                        "expressRouteID": {
                          "type": "string",
                          "description": "Identifier of the ExpressRoute Circuit (Microsoft Colo only)",
                          "readOnly": true
                        },
                        "expressRoutePrivatePeeringID": {
                          "type": "string",
                          "description": "ExpressRoute Circuit private peering identifier",
                          "readOnly": true
                        }
                      }
                    },
                    "endpoints": {
                      "description": "The endpoints",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "nsxtManager": {
                          "type": "string",
                          "description": "Endpoint FQDN for the NSX-T Data Center manager",
                          "readOnly": true
                        },
                        "vcsa": {
                          "type": "string",
                          "description": "Endpoint FQDN for Virtual Center Server Appliance",
                          "readOnly": true
                        },
                        "hcxCloudManager": {
                          "type": "string",
                          "description": "Endpoint FQDN for the HCX Cloud Manager",
                          "readOnly": true
                        },
                        "nsxtManagerIp": {
                          "type": "string",
                          "description": "Endpoint IP for the NSX-T Data Center manager",
                          "readOnly": true
                        },
                        "vcenterIp": {
                          "type": "string",
                          "description": "Endpoint IP for Virtual Center Server Appliance",
                          "readOnly": true
                        },
                        "hcxCloudManagerIp": {
                          "type": "string",
                          "description": "Endpoint IP for the HCX Cloud Manager",
                          "readOnly": true
                        }
                      }
                    },
                    "networkBlock": {
                      "type": "string",
                      "description": "The block of addresses should be unique across VNet in your subscription as\nwell as on-premise. Make sure the CIDR format is conformed to (A.B.C.D/X) where\nA,B,C,D are between 0 and 255, and X is between 0 and 22"
                    },
                    "managementNetwork": {
                      "type": "string",
                      "description": "Network used to access vCenter Server and NSX-T Manager",
                      "readOnly": true
                    },
                    "provisioningNetwork": {
                      "type": "string",
                      "description": "Used for virtual machine cold migration, cloning, and snapshot migration",
                      "readOnly": true
                    },
                    "vmotionNetwork": {
                      "type": "string",
                      "description": "Used for live migration of virtual machines",
                      "readOnly": true
                    },
                    "vcenterPassword": {
                      "type": "string",
                      "format": "password",
                      "description": "Optionally, set the vCenter admin password when the private cloud is created",
                      "x-ms-secret": true
                    },
                    "nsxtPassword": {
                      "type": "string",
                      "format": "password",
                      "description": "Optionally, set the NSX-T Manager password when the private cloud is created",
                      "x-ms-secret": true
                    },
                    "vcenterCertificateThumbprint": {
                      "type": "string",
                      "description": "Thumbprint of the vCenter Server SSL certificate",
                      "readOnly": true
                    },
                    "nsxtCertificateThumbprint": {
                      "type": "string",
                      "description": "Thumbprint of the NSX-T Manager SSL certificate",
                      "readOnly": true
                    },
                    "externalCloudLinks": {
                      "type": "array",
                      "description": "Array of cloud link IDs from other clouds that connect to this one",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "secondaryCircuit": {
                      "description": "A secondary expressRoute circuit from a separate AZ. Only present in a\nstretched private cloud",
                      "type": "object",
                      "properties": {
                        "primarySubnet": {
                          "type": "string",
                          "description": "CIDR of primary subnet",
                          "readOnly": true
                        },
                        "secondarySubnet": {
                          "type": "string",
                          "description": "CIDR of secondary subnet",
                          "readOnly": true
                        },
                        "expressRouteID": {
                          "type": "string",
                          "description": "Identifier of the ExpressRoute Circuit (Microsoft Colo only)",
                          "readOnly": true
                        },
                        "expressRoutePrivatePeeringID": {
                          "type": "string",
                          "description": "ExpressRoute Circuit private peering identifier",
                          "readOnly": true
                        }
                      }
                    },
                    "nsxPublicIpQuotaRaised": {
                      "description": "Flag to indicate whether the private cloud has the quota for provisioned NSX\nPublic IP count raised from 64 to 1024",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "NsxPublicIpQuotaRaisedEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "is enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "is disabled"
                          }
                        ]
                      }
                    },
                    "virtualNetworkId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Azure resource ID of the virtual network",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "\\Microsoft.Network\\vnet"
                          }
                        ]
                      }
                    },
                    "dnsZoneType": {
                      "description": "The type of DNS zone to use.",
                      "type": "string",
                      "enum": [
                        "Public",
                        "Private"
                      ],
                      "x-ms-enum": {
                        "name": "DnsZoneType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Public",
                            "value": "Public",
                            "description": "Primary DNS zone."
                          },
                          {
                            "name": "Private",
                            "value": "Private",
                            "description": "Private DNS zone."
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "managementCluster",
                    "networkBlock"
                  ]
                },
                "sku": {
                  "type": "object",
                  "description": "The resource model definition representing SKU",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
                    },
                    "tier": {
                      "type": "string",
                      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
                      "enum": [
                        "Free",
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": false
                      }
                    },
                    "size": {
                      "type": "string",
                      "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                    },
                    "family": {
                      "type": "string",
                      "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (either system assigned, or none).",
                      "enum": [
                        "None",
                        "SystemAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "SystemAssignedServiceIdentityType",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "zones": {
                  "type": "array",
                  "description": "The availability zones.",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "sku"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'PrivateCloud' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "A private cloud resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "managementCluster": {
                      "description": "The default cluster used for management",
                      "type": "object",
                      "properties": {
                        "clusterSize": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The cluster size"
                        },
                        "provisioningState": {
                          "description": "The state of the cluster provisioning",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Succeeded",
                            "Failed",
                            "Canceled",
                            "Cancelled",
                            "Deleting",
                            "Updating"
                          ],
                          "x-ms-enum": {
                            "name": "ClusterProvisioningState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Succeeded",
                                "value": "Succeeded",
                                "description": "Resource has been created."
                              },
                              {
                                "name": "Failed",
                                "value": "Failed",
                                "description": "Resource creation failed."
                              },
                              {
                                "name": "Canceled",
                                "value": "Canceled",
                                "description": "Resource creation was canceled."
                              },
                              {
                                "name": "Cancelled",
                                "value": "Cancelled",
                                "description": "is cancelled"
                              },
                              {
                                "name": "Deleting",
                                "value": "Deleting",
                                "description": "is deleting"
                              },
                              {
                                "name": "Updating",
                                "value": "Updating",
                                "description": "is updating"
                              }
                            ]
                          }
                        },
                        "clusterId": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The identity",
                          "readOnly": true
                        },
                        "hosts": {
                          "type": "array",
                          "description": "The hosts",
                          "items": {
                            "type": "string"
                          }
                        },
                        "vsanDatastoreName": {
                          "type": "string",
                          "description": "Name of the vsan datastore associated with the cluster"
                        }
                      }
                    },
                    "internet": {
                      "type": "string",
                      "description": "Connectivity to internet is enabled or disabled",
                      "default": "Disabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "InternetEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "is enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "is disabled"
                          }
                        ]
                      }
                    },
                    "identitySources": {
                      "type": "array",
                      "description": "vCenter Single Sign On Identity Sources",
                      "items": {
                        "type": "object",
                        "description": "vCenter Single Sign On Identity Source",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the identity source"
                          },
                          "alias": {
                            "type": "string",
                            "description": "The domain's NetBIOS name"
                          },
                          "domain": {
                            "type": "string",
                            "description": "The domain's DNS name"
                          },
                          "baseUserDN": {
                            "type": "string",
                            "description": "The base distinguished name for users"
                          },
                          "baseGroupDN": {
                            "type": "string",
                            "description": "The base distinguished name for groups"
                          },
                          "primaryServer": {
                            "type": "string",
                            "description": "Primary server URL"
                          },
                          "secondaryServer": {
                            "type": "string",
                            "description": "Secondary server URL"
                          },
                          "ssl": {
                            "description": "Protect LDAP communication using SSL certificate (LDAPS)",
                            "type": "string",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "SslEnum",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled",
                                  "description": "is enabled"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled",
                                  "description": "is disabled"
                                }
                              ]
                            }
                          },
                          "username": {
                            "type": "string",
                            "description": "The ID of an Active Directory user with a minimum of read-only access to Base\nDN for users and group"
                          },
                          "password": {
                            "type": "string",
                            "format": "password",
                            "description": "The password of the Active Directory user with a minimum of read-only access to\nBase DN for users and groups.",
                            "x-ms-secret": true
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "availability": {
                      "description": "Properties describing how the cloud is distributed across availability zones",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "strategy": {
                          "description": "The availability strategy for the private cloud",
                          "type": "string",
                          "enum": [
                            "SingleZone",
                            "DualZone"
                          ],
                          "x-ms-enum": {
                            "name": "AvailabilityStrategy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "SingleZone",
                                "value": "SingleZone",
                                "description": "in single zone"
                              },
                              {
                                "name": "DualZone",
                                "value": "DualZone",
                                "description": "in two zones"
                              }
                            ]
                          }
                        },
                        "zone": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The primary availability zone for the private cloud"
                        },
                        "secondaryZone": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The secondary availability zone for the private cloud"
                        }
                      }
                    },
                    "encryption": {
                      "description": "Customer managed key encryption, can be enabled or disabled",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Status of customer managed encryption key",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EncryptionState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "is enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "is disabled"
                              }
                            ]
                          }
                        },
                        "keyVaultProperties": {
                          "description": "The key vault where the encryption key is stored",
                          "type": "object",
                          "properties": {
                            "keyName": {
                              "type": "string",
                              "description": "The name of the key."
                            },
                            "keyVersion": {
                              "type": "string",
                              "description": "The version of the key."
                            },
                            "autoDetectedKeyVersion": {
                              "type": "string",
                              "description": "The auto-detected version of the key if versionType is auto-detected.",
                              "readOnly": true
                            },
                            "keyVaultUrl": {
                              "type": "string",
                              "description": "The URL of the vault."
                            },
                            "keyState": {
                              "description": "The state of key provided",
                              "readOnly": true,
                              "type": "string",
                              "enum": [
                                "Connected",
                                "AccessDenied"
                              ],
                              "x-ms-enum": {
                                "name": "EncryptionKeyStatus",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Connected",
                                    "value": "Connected",
                                    "description": "is connected"
                                  },
                                  {
                                    "name": "AccessDenied",
                                    "value": "AccessDenied",
                                    "description": "is access denied"
                                  }
                                ]
                              }
                            },
                            "versionType": {
                              "description": "Property of the key if user provided or auto detected",
                              "readOnly": true,
                              "type": "string",
                              "enum": [
                                "Fixed",
                                "AutoDetected"
                              ],
                              "x-ms-enum": {
                                "name": "EncryptionVersionType",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Fixed",
                                    "value": "Fixed",
                                    "description": "is fixed"
                                  },
                                  {
                                    "name": "AutoDetected",
                                    "value": "AutoDetected",
                                    "description": "is auto-detected"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "extendedNetworkBlocks": {
                      "type": "array",
                      "description": "Array of additional networks noncontiguous with networkBlock. Networks must be\nunique and non-overlapping across VNet in your subscription, on-premise, and\nthis privateCloud networkBlock attribute. Make sure the CIDR format conforms to\n(A.B.C.D/X).",
                      "items": {
                        "type": "string"
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Cancelled",
                        "Pending",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "PrivateCloudProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Cancelled",
                            "value": "Cancelled",
                            "description": "is cancelled"
                          },
                          {
                            "name": "Pending",
                            "value": "Pending",
                            "description": "is pending"
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "circuit": {
                      "description": "An ExpressRoute Circuit",
                      "type": "object",
                      "properties": {
                        "primarySubnet": {
                          "type": "string",
                          "description": "CIDR of primary subnet",
                          "readOnly": true
                        },
                        "secondarySubnet": {
                          "type": "string",
                          "description": "CIDR of secondary subnet",
                          "readOnly": true
                        },
                        "expressRouteID": {
                          "type": "string",
                          "description": "Identifier of the ExpressRoute Circuit (Microsoft Colo only)",
                          "readOnly": true
                        },
                        "expressRoutePrivatePeeringID": {
                          "type": "string",
                          "description": "ExpressRoute Circuit private peering identifier",
                          "readOnly": true
                        }
                      }
                    },
                    "endpoints": {
                      "description": "The endpoints",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "nsxtManager": {
                          "type": "string",
                          "description": "Endpoint FQDN for the NSX-T Data Center manager",
                          "readOnly": true
                        },
                        "vcsa": {
                          "type": "string",
                          "description": "Endpoint FQDN for Virtual Center Server Appliance",
                          "readOnly": true
                        },
                        "hcxCloudManager": {
                          "type": "string",
                          "description": "Endpoint FQDN for the HCX Cloud Manager",
                          "readOnly": true
                        },
                        "nsxtManagerIp": {
                          "type": "string",
                          "description": "Endpoint IP for the NSX-T Data Center manager",
                          "readOnly": true
                        },
                        "vcenterIp": {
                          "type": "string",
                          "description": "Endpoint IP for Virtual Center Server Appliance",
                          "readOnly": true
                        },
                        "hcxCloudManagerIp": {
                          "type": "string",
                          "description": "Endpoint IP for the HCX Cloud Manager",
                          "readOnly": true
                        }
                      }
                    },
                    "networkBlock": {
                      "type": "string",
                      "description": "The block of addresses should be unique across VNet in your subscription as\nwell as on-premise. Make sure the CIDR format is conformed to (A.B.C.D/X) where\nA,B,C,D are between 0 and 255, and X is between 0 and 22"
                    },
                    "managementNetwork": {
                      "type": "string",
                      "description": "Network used to access vCenter Server and NSX-T Manager",
                      "readOnly": true
                    },
                    "provisioningNetwork": {
                      "type": "string",
                      "description": "Used for virtual machine cold migration, cloning, and snapshot migration",
                      "readOnly": true
                    },
                    "vmotionNetwork": {
                      "type": "string",
                      "description": "Used for live migration of virtual machines",
                      "readOnly": true
                    },
                    "vcenterPassword": {
                      "type": "string",
                      "format": "password",
                      "description": "Optionally, set the vCenter admin password when the private cloud is created",
                      "x-ms-secret": true
                    },
                    "nsxtPassword": {
                      "type": "string",
                      "format": "password",
                      "description": "Optionally, set the NSX-T Manager password when the private cloud is created",
                      "x-ms-secret": true
                    },
                    "vcenterCertificateThumbprint": {
                      "type": "string",
                      "description": "Thumbprint of the vCenter Server SSL certificate",
                      "readOnly": true
                    },
                    "nsxtCertificateThumbprint": {
                      "type": "string",
                      "description": "Thumbprint of the NSX-T Manager SSL certificate",
                      "readOnly": true
                    },
                    "externalCloudLinks": {
                      "type": "array",
                      "description": "Array of cloud link IDs from other clouds that connect to this one",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "secondaryCircuit": {
                      "description": "A secondary expressRoute circuit from a separate AZ. Only present in a\nstretched private cloud",
                      "type": "object",
                      "properties": {
                        "primarySubnet": {
                          "type": "string",
                          "description": "CIDR of primary subnet",
                          "readOnly": true
                        },
                        "secondarySubnet": {
                          "type": "string",
                          "description": "CIDR of secondary subnet",
                          "readOnly": true
                        },
                        "expressRouteID": {
                          "type": "string",
                          "description": "Identifier of the ExpressRoute Circuit (Microsoft Colo only)",
                          "readOnly": true
                        },
                        "expressRoutePrivatePeeringID": {
                          "type": "string",
                          "description": "ExpressRoute Circuit private peering identifier",
                          "readOnly": true
                        }
                      }
                    },
                    "nsxPublicIpQuotaRaised": {
                      "description": "Flag to indicate whether the private cloud has the quota for provisioned NSX\nPublic IP count raised from 64 to 1024",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "NsxPublicIpQuotaRaisedEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "is enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "is disabled"
                          }
                        ]
                      }
                    },
                    "virtualNetworkId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Azure resource ID of the virtual network",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "\\Microsoft.Network\\vnet"
                          }
                        ]
                      }
                    },
                    "dnsZoneType": {
                      "description": "The type of DNS zone to use.",
                      "type": "string",
                      "enum": [
                        "Public",
                        "Private"
                      ],
                      "x-ms-enum": {
                        "name": "DnsZoneType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Public",
                            "value": "Public",
                            "description": "Primary DNS zone."
                          },
                          {
                            "name": "Private",
                            "value": "Private",
                            "description": "Private DNS zone."
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "managementCluster",
                    "networkBlock"
                  ]
                },
                "sku": {
                  "type": "object",
                  "description": "The resource model definition representing SKU",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
                    },
                    "tier": {
                      "type": "string",
                      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
                      "enum": [
                        "Free",
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": false
                      }
                    },
                    "size": {
                      "type": "string",
                      "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                    },
                    "family": {
                      "type": "string",
                      "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (either system assigned, or none).",
                      "enum": [
                        "None",
                        "SystemAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "SystemAssignedServiceIdentityType",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "zones": {
                  "type": "array",
                  "description": "The availability zones.",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "sku"
              ]
            }
          },
          "201": {
            "description": "Resource 'PrivateCloud' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "A private cloud resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "managementCluster": {
                      "description": "The default cluster used for management",
                      "type": "object",
                      "properties": {
                        "clusterSize": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The cluster size"
                        },
                        "provisioningState": {
                          "description": "The state of the cluster provisioning",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Succeeded",
                            "Failed",
                            "Canceled",
                            "Cancelled",
                            "Deleting",
                            "Updating"
                          ],
                          "x-ms-enum": {
                            "name": "ClusterProvisioningState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Succeeded",
                                "value": "Succeeded",
                                "description": "Resource has been created."
                              },
                              {
                                "name": "Failed",
                                "value": "Failed",
                                "description": "Resource creation failed."
                              },
                              {
                                "name": "Canceled",
                                "value": "Canceled",
                                "description": "Resource creation was canceled."
                              },
                              {
                                "name": "Cancelled",
                                "value": "Cancelled",
                                "description": "is cancelled"
                              },
                              {
                                "name": "Deleting",
                                "value": "Deleting",
                                "description": "is deleting"
                              },
                              {
                                "name": "Updating",
                                "value": "Updating",
                                "description": "is updating"
                              }
                            ]
                          }
                        },
                        "clusterId": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The identity",
                          "readOnly": true
                        },
                        "hosts": {
                          "type": "array",
                          "description": "The hosts",
                          "items": {
                            "type": "string"
                          }
                        },
                        "vsanDatastoreName": {
                          "type": "string",
                          "description": "Name of the vsan datastore associated with the cluster"
                        }
                      }
                    },
                    "internet": {
                      "type": "string",
                      "description": "Connectivity to internet is enabled or disabled",
                      "default": "Disabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "InternetEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "is enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "is disabled"
                          }
                        ]
                      }
                    },
                    "identitySources": {
                      "type": "array",
                      "description": "vCenter Single Sign On Identity Sources",
                      "items": {
                        "type": "object",
                        "description": "vCenter Single Sign On Identity Source",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the identity source"
                          },
                          "alias": {
                            "type": "string",
                            "description": "The domain's NetBIOS name"
                          },
                          "domain": {
                            "type": "string",
                            "description": "The domain's DNS name"
                          },
                          "baseUserDN": {
                            "type": "string",
                            "description": "The base distinguished name for users"
                          },
                          "baseGroupDN": {
                            "type": "string",
                            "description": "The base distinguished name for groups"
                          },
                          "primaryServer": {
                            "type": "string",
                            "description": "Primary server URL"
                          },
                          "secondaryServer": {
                            "type": "string",
                            "description": "Secondary server URL"
                          },
                          "ssl": {
                            "description": "Protect LDAP communication using SSL certificate (LDAPS)",
                            "type": "string",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "SslEnum",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled",
                                  "description": "is enabled"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled",
                                  "description": "is disabled"
                                }
                              ]
                            }
                          },
                          "username": {
                            "type": "string",
                            "description": "The ID of an Active Directory user with a minimum of read-only access to Base\nDN for users and group"
                          },
                          "password": {
                            "type": "string",
                            "format": "password",
                            "description": "The password of the Active Directory user with a minimum of read-only access to\nBase DN for users and groups.",
                            "x-ms-secret": true
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "availability": {
                      "description": "Properties describing how the cloud is distributed across availability zones",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "strategy": {
                          "description": "The availability strategy for the private cloud",
                          "type": "string",
                          "enum": [
                            "SingleZone",
                            "DualZone"
                          ],
                          "x-ms-enum": {
                            "name": "AvailabilityStrategy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "SingleZone",
                                "value": "SingleZone",
                                "description": "in single zone"
                              },
                              {
                                "name": "DualZone",
                                "value": "DualZone",
                                "description": "in two zones"
                              }
                            ]
                          }
                        },
                        "zone": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The primary availability zone for the private cloud"
                        },
                        "secondaryZone": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The secondary availability zone for the private cloud"
                        }
                      }
                    },
                    "encryption": {
                      "description": "Customer managed key encryption, can be enabled or disabled",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Status of customer managed encryption key",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EncryptionState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "is enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "is disabled"
                              }
                            ]
                          }
                        },
                        "keyVaultProperties": {
                          "description": "The key vault where the encryption key is stored",
                          "type": "object",
                          "properties": {
                            "keyName": {
                              "type": "string",
                              "description": "The name of the key."
                            },
                            "keyVersion": {
                              "type": "string",
                              "description": "The version of the key."
                            },
                            "autoDetectedKeyVersion": {
                              "type": "string",
                              "description": "The auto-detected version of the key if versionType is auto-detected.",
                              "readOnly": true
                            },
                            "keyVaultUrl": {
                              "type": "string",
                              "description": "The URL of the vault."
                            },
                            "keyState": {
                              "description": "The state of key provided",
                              "readOnly": true,
                              "type": "string",
                              "enum": [
                                "Connected",
                                "AccessDenied"
                              ],
                              "x-ms-enum": {
                                "name": "EncryptionKeyStatus",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Connected",
                                    "value": "Connected",
                                    "description": "is connected"
                                  },
                                  {
                                    "name": "AccessDenied",
                                    "value": "AccessDenied",
                                    "description": "is access denied"
                                  }
                                ]
                              }
                            },
                            "versionType": {
                              "description": "Property of the key if user provided or auto detected",
                              "readOnly": true,
                              "type": "string",
                              "enum": [
                                "Fixed",
                                "AutoDetected"
                              ],
                              "x-ms-enum": {
                                "name": "EncryptionVersionType",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Fixed",
                                    "value": "Fixed",
                                    "description": "is fixed"
                                  },
                                  {
                                    "name": "AutoDetected",
                                    "value": "AutoDetected",
                                    "description": "is auto-detected"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "extendedNetworkBlocks": {
                      "type": "array",
                      "description": "Array of additional networks noncontiguous with networkBlock. Networks must be\nunique and non-overlapping across VNet in your subscription, on-premise, and\nthis privateCloud networkBlock attribute. Make sure the CIDR format conforms to\n(A.B.C.D/X).",
                      "items": {
                        "type": "string"
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Cancelled",
                        "Pending",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "PrivateCloudProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Cancelled",
                            "value": "Cancelled",
                            "description": "is cancelled"
                          },
                          {
                            "name": "Pending",
                            "value": "Pending",
                            "description": "is pending"
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "circuit": {
                      "description": "An ExpressRoute Circuit",
                      "type": "object",
                      "properties": {
                        "primarySubnet": {
                          "type": "string",
                          "description": "CIDR of primary subnet",
                          "readOnly": true
                        },
                        "secondarySubnet": {
                          "type": "string",
                          "description": "CIDR of secondary subnet",
                          "readOnly": true
                        },
                        "expressRouteID": {
                          "type": "string",
                          "description": "Identifier of the ExpressRoute Circuit (Microsoft Colo only)",
                          "readOnly": true
                        },
                        "expressRoutePrivatePeeringID": {
                          "type": "string",
                          "description": "ExpressRoute Circuit private peering identifier",
                          "readOnly": true
                        }
                      }
                    },
                    "endpoints": {
                      "description": "The endpoints",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "nsxtManager": {
                          "type": "string",
                          "description": "Endpoint FQDN for the NSX-T Data Center manager",
                          "readOnly": true
                        },
                        "vcsa": {
                          "type": "string",
                          "description": "Endpoint FQDN for Virtual Center Server Appliance",
                          "readOnly": true
                        },
                        "hcxCloudManager": {
                          "type": "string",
                          "description": "Endpoint FQDN for the HCX Cloud Manager",
                          "readOnly": true
                        },
                        "nsxtManagerIp": {
                          "type": "string",
                          "description": "Endpoint IP for the NSX-T Data Center manager",
                          "readOnly": true
                        },
                        "vcenterIp": {
                          "type": "string",
                          "description": "Endpoint IP for Virtual Center Server Appliance",
                          "readOnly": true
                        },
                        "hcxCloudManagerIp": {
                          "type": "string",
                          "description": "Endpoint IP for the HCX Cloud Manager",
                          "readOnly": true
                        }
                      }
                    },
                    "networkBlock": {
                      "type": "string",
                      "description": "The block of addresses should be unique across VNet in your subscription as\nwell as on-premise. Make sure the CIDR format is conformed to (A.B.C.D/X) where\nA,B,C,D are between 0 and 255, and X is between 0 and 22"
                    },
                    "managementNetwork": {
                      "type": "string",
                      "description": "Network used to access vCenter Server and NSX-T Manager",
                      "readOnly": true
                    },
                    "provisioningNetwork": {
                      "type": "string",
                      "description": "Used for virtual machine cold migration, cloning, and snapshot migration",
                      "readOnly": true
                    },
                    "vmotionNetwork": {
                      "type": "string",
                      "description": "Used for live migration of virtual machines",
                      "readOnly": true
                    },
                    "vcenterPassword": {
                      "type": "string",
                      "format": "password",
                      "description": "Optionally, set the vCenter admin password when the private cloud is created",
                      "x-ms-secret": true
                    },
                    "nsxtPassword": {
                      "type": "string",
                      "format": "password",
                      "description": "Optionally, set the NSX-T Manager password when the private cloud is created",
                      "x-ms-secret": true
                    },
                    "vcenterCertificateThumbprint": {
                      "type": "string",
                      "description": "Thumbprint of the vCenter Server SSL certificate",
                      "readOnly": true
                    },
                    "nsxtCertificateThumbprint": {
                      "type": "string",
                      "description": "Thumbprint of the NSX-T Manager SSL certificate",
                      "readOnly": true
                    },
                    "externalCloudLinks": {
                      "type": "array",
                      "description": "Array of cloud link IDs from other clouds that connect to this one",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "secondaryCircuit": {
                      "description": "A secondary expressRoute circuit from a separate AZ. Only present in a\nstretched private cloud",
                      "type": "object",
                      "properties": {
                        "primarySubnet": {
                          "type": "string",
                          "description": "CIDR of primary subnet",
                          "readOnly": true
                        },
                        "secondarySubnet": {
                          "type": "string",
                          "description": "CIDR of secondary subnet",
                          "readOnly": true
                        },
                        "expressRouteID": {
                          "type": "string",
                          "description": "Identifier of the ExpressRoute Circuit (Microsoft Colo only)",
                          "readOnly": true
                        },
                        "expressRoutePrivatePeeringID": {
                          "type": "string",
                          "description": "ExpressRoute Circuit private peering identifier",
                          "readOnly": true
                        }
                      }
                    },
                    "nsxPublicIpQuotaRaised": {
                      "description": "Flag to indicate whether the private cloud has the quota for provisioned NSX\nPublic IP count raised from 64 to 1024",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "NsxPublicIpQuotaRaisedEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "is enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "is disabled"
                          }
                        ]
                      }
                    },
                    "virtualNetworkId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Azure resource ID of the virtual network",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "\\Microsoft.Network\\vnet"
                          }
                        ]
                      }
                    },
                    "dnsZoneType": {
                      "description": "The type of DNS zone to use.",
                      "type": "string",
                      "enum": [
                        "Public",
                        "Private"
                      ],
                      "x-ms-enum": {
                        "name": "DnsZoneType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Public",
                            "value": "Public",
                            "description": "Primary DNS zone."
                          },
                          {
                            "name": "Private",
                            "value": "Private",
                            "description": "Private DNS zone."
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "managementCluster",
                    "networkBlock"
                  ]
                },
                "sku": {
                  "type": "object",
                  "description": "The resource model definition representing SKU",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
                    },
                    "tier": {
                      "type": "string",
                      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
                      "enum": [
                        "Free",
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": false
                      }
                    },
                    "size": {
                      "type": "string",
                      "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                    },
                    "family": {
                      "type": "string",
                      "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (either system assigned, or none).",
                      "enum": [
                        "None",
                        "SystemAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "SystemAssignedServiceIdentityType",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "zones": {
                  "type": "array",
                  "description": "The availability zones.",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "sku"
              ]
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "PrivateClouds_Update",
        "tags": [
          "PrivateClouds"
        ],
        "description": "Update a PrivateCloud",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "privateCloudUpdate",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "An update to a private cloud resource",
              "properties": {
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "sku": {
                  "type": "object",
                  "description": "The resource model definition representing SKU",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
                    },
                    "tier": {
                      "type": "string",
                      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
                      "enum": [
                        "Free",
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": false
                      }
                    },
                    "size": {
                      "type": "string",
                      "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                    },
                    "family": {
                      "type": "string",
                      "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (either system assigned, or none).",
                      "enum": [
                        "None",
                        "SystemAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "SystemAssignedServiceIdentityType",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "description": "The updatable properties of a private cloud resource",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "managementCluster": {
                      "description": "The default cluster used for management",
                      "type": "object",
                      "properties": {
                        "clusterSize": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The cluster size"
                        },
                        "provisioningState": {
                          "description": "The state of the cluster provisioning",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Succeeded",
                            "Failed",
                            "Canceled",
                            "Cancelled",
                            "Deleting",
                            "Updating"
                          ],
                          "x-ms-enum": {
                            "name": "ClusterProvisioningState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Succeeded",
                                "value": "Succeeded",
                                "description": "Resource has been created."
                              },
                              {
                                "name": "Failed",
                                "value": "Failed",
                                "description": "Resource creation failed."
                              },
                              {
                                "name": "Canceled",
                                "value": "Canceled",
                                "description": "Resource creation was canceled."
                              },
                              {
                                "name": "Cancelled",
                                "value": "Cancelled",
                                "description": "is cancelled"
                              },
                              {
                                "name": "Deleting",
                                "value": "Deleting",
                                "description": "is deleting"
                              },
                              {
                                "name": "Updating",
                                "value": "Updating",
                                "description": "is updating"
                              }
                            ]
                          }
                        },
                        "clusterId": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The identity",
                          "readOnly": true
                        },
                        "hosts": {
                          "type": "array",
                          "description": "The hosts",
                          "items": {
                            "type": "string"
                          }
                        },
                        "vsanDatastoreName": {
                          "type": "string",
                          "description": "Name of the vsan datastore associated with the cluster"
                        }
                      }
                    },
                    "internet": {
                      "description": "Connectivity to internet is enabled or disabled",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "InternetEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "is enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "is disabled"
                          }
                        ]
                      }
                    },
                    "identitySources": {
                      "type": "array",
                      "description": "vCenter Single Sign On Identity Sources",
                      "items": {
                        "type": "object",
                        "description": "vCenter Single Sign On Identity Source",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the identity source"
                          },
                          "alias": {
                            "type": "string",
                            "description": "The domain's NetBIOS name"
                          },
                          "domain": {
                            "type": "string",
                            "description": "The domain's DNS name"
                          },
                          "baseUserDN": {
                            "type": "string",
                            "description": "The base distinguished name for users"
                          },
                          "baseGroupDN": {
                            "type": "string",
                            "description": "The base distinguished name for groups"
                          },
                          "primaryServer": {
                            "type": "string",
                            "description": "Primary server URL"
                          },
                          "secondaryServer": {
                            "type": "string",
                            "description": "Secondary server URL"
                          },
                          "ssl": {
                            "description": "Protect LDAP communication using SSL certificate (LDAPS)",
                            "type": "string",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "SslEnum",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled",
                                  "description": "is enabled"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled",
                                  "description": "is disabled"
                                }
                              ]
                            }
                          },
                          "username": {
                            "type": "string",
                            "description": "The ID of an Active Directory user with a minimum of read-only access to Base\nDN for users and group"
                          },
                          "password": {
                            "type": "string",
                            "format": "password",
                            "description": "The password of the Active Directory user with a minimum of read-only access to\nBase DN for users and groups.",
                            "x-ms-secret": true
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "availability": {
                      "description": "Properties describing how the cloud is distributed across availability zones",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "strategy": {
                          "description": "The availability strategy for the private cloud",
                          "type": "string",
                          "enum": [
                            "SingleZone",
                            "DualZone"
                          ],
                          "x-ms-enum": {
                            "name": "AvailabilityStrategy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "SingleZone",
                                "value": "SingleZone",
                                "description": "in single zone"
                              },
                              {
                                "name": "DualZone",
                                "value": "DualZone",
                                "description": "in two zones"
                              }
                            ]
                          }
                        },
                        "zone": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The primary availability zone for the private cloud"
                        },
                        "secondaryZone": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The secondary availability zone for the private cloud"
                        }
                      }
                    },
                    "encryption": {
                      "description": "Customer managed key encryption, can be enabled or disabled",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Status of customer managed encryption key",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EncryptionState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "is enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "is disabled"
                              }
                            ]
                          }
                        },
                        "keyVaultProperties": {
                          "description": "The key vault where the encryption key is stored",
                          "type": "object",
                          "properties": {
                            "keyName": {
                              "type": "string",
                              "description": "The name of the key."
                            },
                            "keyVersion": {
                              "type": "string",
                              "description": "The version of the key."
                            },
                            "autoDetectedKeyVersion": {
                              "type": "string",
                              "description": "The auto-detected version of the key if versionType is auto-detected.",
                              "readOnly": true
                            },
                            "keyVaultUrl": {
                              "type": "string",
                              "description": "The URL of the vault."
                            },
                            "keyState": {
                              "description": "The state of key provided",
                              "readOnly": true,
                              "type": "string",
                              "enum": [
                                "Connected",
                                "AccessDenied"
                              ],
                              "x-ms-enum": {
                                "name": "EncryptionKeyStatus",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Connected",
                                    "value": "Connected",
                                    "description": "is connected"
                                  },
                                  {
                                    "name": "AccessDenied",
                                    "value": "AccessDenied",
                                    "description": "is access denied"
                                  }
                                ]
                              }
                            },
                            "versionType": {
                              "description": "Property of the key if user provided or auto detected",
                              "readOnly": true,
                              "type": "string",
                              "enum": [
                                "Fixed",
                                "AutoDetected"
                              ],
                              "x-ms-enum": {
                                "name": "EncryptionVersionType",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Fixed",
                                    "value": "Fixed",
                                    "description": "is fixed"
                                  },
                                  {
                                    "name": "AutoDetected",
                                    "value": "AutoDetected",
                                    "description": "is auto-detected"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "extendedNetworkBlocks": {
                      "type": "array",
                      "description": "Array of additional networks noncontiguous with networkBlock. Networks must be\nunique and non-overlapping across VNet in your subscription, on-premise, and\nthis privateCloud networkBlock attribute. Make sure the CIDR format conforms to\n(A.B.C.D/X).",
                      "items": {
                        "type": "string"
                      }
                    },
                    "dnsZoneType": {
                      "description": "The type of DNS zone to use.",
                      "type": "string",
                      "enum": [
                        "Public",
                        "Private"
                      ],
                      "x-ms-enum": {
                        "name": "DnsZoneType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Public",
                            "value": "Public",
                            "description": "Primary DNS zone."
                          },
                          {
                            "name": "Private",
                            "value": "Private",
                            "description": "Private DNS zone."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "A private cloud resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "managementCluster": {
                      "description": "The default cluster used for management",
                      "type": "object",
                      "properties": {
                        "clusterSize": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The cluster size"
                        },
                        "provisioningState": {
                          "description": "The state of the cluster provisioning",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Succeeded",
                            "Failed",
                            "Canceled",
                            "Cancelled",
                            "Deleting",
                            "Updating"
                          ],
                          "x-ms-enum": {
                            "name": "ClusterProvisioningState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Succeeded",
                                "value": "Succeeded",
                                "description": "Resource has been created."
                              },
                              {
                                "name": "Failed",
                                "value": "Failed",
                                "description": "Resource creation failed."
                              },
                              {
                                "name": "Canceled",
                                "value": "Canceled",
                                "description": "Resource creation was canceled."
                              },
                              {
                                "name": "Cancelled",
                                "value": "Cancelled",
                                "description": "is cancelled"
                              },
                              {
                                "name": "Deleting",
                                "value": "Deleting",
                                "description": "is deleting"
                              },
                              {
                                "name": "Updating",
                                "value": "Updating",
                                "description": "is updating"
                              }
                            ]
                          }
                        },
                        "clusterId": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The identity",
                          "readOnly": true
                        },
                        "hosts": {
                          "type": "array",
                          "description": "The hosts",
                          "items": {
                            "type": "string"
                          }
                        },
                        "vsanDatastoreName": {
                          "type": "string",
                          "description": "Name of the vsan datastore associated with the cluster"
                        }
                      }
                    },
                    "internet": {
                      "type": "string",
                      "description": "Connectivity to internet is enabled or disabled",
                      "default": "Disabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "InternetEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "is enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "is disabled"
                          }
                        ]
                      }
                    },
                    "identitySources": {
                      "type": "array",
                      "description": "vCenter Single Sign On Identity Sources",
                      "items": {
                        "type": "object",
                        "description": "vCenter Single Sign On Identity Source",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the identity source"
                          },
                          "alias": {
                            "type": "string",
                            "description": "The domain's NetBIOS name"
                          },
                          "domain": {
                            "type": "string",
                            "description": "The domain's DNS name"
                          },
                          "baseUserDN": {
                            "type": "string",
                            "description": "The base distinguished name for users"
                          },
                          "baseGroupDN": {
                            "type": "string",
                            "description": "The base distinguished name for groups"
                          },
                          "primaryServer": {
                            "type": "string",
                            "description": "Primary server URL"
                          },
                          "secondaryServer": {
                            "type": "string",
                            "description": "Secondary server URL"
                          },
                          "ssl": {
                            "description": "Protect LDAP communication using SSL certificate (LDAPS)",
                            "type": "string",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "SslEnum",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled",
                                  "description": "is enabled"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled",
                                  "description": "is disabled"
                                }
                              ]
                            }
                          },
                          "username": {
                            "type": "string",
                            "description": "The ID of an Active Directory user with a minimum of read-only access to Base\nDN for users and group"
                          },
                          "password": {
                            "type": "string",
                            "format": "password",
                            "description": "The password of the Active Directory user with a minimum of read-only access to\nBase DN for users and groups.",
                            "x-ms-secret": true
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "availability": {
                      "description": "Properties describing how the cloud is distributed across availability zones",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "strategy": {
                          "description": "The availability strategy for the private cloud",
                          "type": "string",
                          "enum": [
                            "SingleZone",
                            "DualZone"
                          ],
                          "x-ms-enum": {
                            "name": "AvailabilityStrategy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "SingleZone",
                                "value": "SingleZone",
                                "description": "in single zone"
                              },
                              {
                                "name": "DualZone",
                                "value": "DualZone",
                                "description": "in two zones"
                              }
                            ]
                          }
                        },
                        "zone": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The primary availability zone for the private cloud"
                        },
                        "secondaryZone": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The secondary availability zone for the private cloud"
                        }
                      }
                    },
                    "encryption": {
                      "description": "Customer managed key encryption, can be enabled or disabled",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Status of customer managed encryption key",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EncryptionState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "is enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "is disabled"
                              }
                            ]
                          }
                        },
                        "keyVaultProperties": {
                          "description": "The key vault where the encryption key is stored",
                          "type": "object",
                          "properties": {
                            "keyName": {
                              "type": "string",
                              "description": "The name of the key."
                            },
                            "keyVersion": {
                              "type": "string",
                              "description": "The version of the key."
                            },
                            "autoDetectedKeyVersion": {
                              "type": "string",
                              "description": "The auto-detected version of the key if versionType is auto-detected.",
                              "readOnly": true
                            },
                            "keyVaultUrl": {
                              "type": "string",
                              "description": "The URL of the vault."
                            },
                            "keyState": {
                              "description": "The state of key provided",
                              "readOnly": true,
                              "type": "string",
                              "enum": [
                                "Connected",
                                "AccessDenied"
                              ],
                              "x-ms-enum": {
                                "name": "EncryptionKeyStatus",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Connected",
                                    "value": "Connected",
                                    "description": "is connected"
                                  },
                                  {
                                    "name": "AccessDenied",
                                    "value": "AccessDenied",
                                    "description": "is access denied"
                                  }
                                ]
                              }
                            },
                            "versionType": {
                              "description": "Property of the key if user provided or auto detected",
                              "readOnly": true,
                              "type": "string",
                              "enum": [
                                "Fixed",
                                "AutoDetected"
                              ],
                              "x-ms-enum": {
                                "name": "EncryptionVersionType",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Fixed",
                                    "value": "Fixed",
                                    "description": "is fixed"
                                  },
                                  {
                                    "name": "AutoDetected",
                                    "value": "AutoDetected",
                                    "description": "is auto-detected"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "extendedNetworkBlocks": {
                      "type": "array",
                      "description": "Array of additional networks noncontiguous with networkBlock. Networks must be\nunique and non-overlapping across VNet in your subscription, on-premise, and\nthis privateCloud networkBlock attribute. Make sure the CIDR format conforms to\n(A.B.C.D/X).",
                      "items": {
                        "type": "string"
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Cancelled",
                        "Pending",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "PrivateCloudProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Cancelled",
                            "value": "Cancelled",
                            "description": "is cancelled"
                          },
                          {
                            "name": "Pending",
                            "value": "Pending",
                            "description": "is pending"
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "circuit": {
                      "description": "An ExpressRoute Circuit",
                      "type": "object",
                      "properties": {
                        "primarySubnet": {
                          "type": "string",
                          "description": "CIDR of primary subnet",
                          "readOnly": true
                        },
                        "secondarySubnet": {
                          "type": "string",
                          "description": "CIDR of secondary subnet",
                          "readOnly": true
                        },
                        "expressRouteID": {
                          "type": "string",
                          "description": "Identifier of the ExpressRoute Circuit (Microsoft Colo only)",
                          "readOnly": true
                        },
                        "expressRoutePrivatePeeringID": {
                          "type": "string",
                          "description": "ExpressRoute Circuit private peering identifier",
                          "readOnly": true
                        }
                      }
                    },
                    "endpoints": {
                      "description": "The endpoints",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "nsxtManager": {
                          "type": "string",
                          "description": "Endpoint FQDN for the NSX-T Data Center manager",
                          "readOnly": true
                        },
                        "vcsa": {
                          "type": "string",
                          "description": "Endpoint FQDN for Virtual Center Server Appliance",
                          "readOnly": true
                        },
                        "hcxCloudManager": {
                          "type": "string",
                          "description": "Endpoint FQDN for the HCX Cloud Manager",
                          "readOnly": true
                        },
                        "nsxtManagerIp": {
                          "type": "string",
                          "description": "Endpoint IP for the NSX-T Data Center manager",
                          "readOnly": true
                        },
                        "vcenterIp": {
                          "type": "string",
                          "description": "Endpoint IP for Virtual Center Server Appliance",
                          "readOnly": true
                        },
                        "hcxCloudManagerIp": {
                          "type": "string",
                          "description": "Endpoint IP for the HCX Cloud Manager",
                          "readOnly": true
                        }
                      }
                    },
                    "networkBlock": {
                      "type": "string",
                      "description": "The block of addresses should be unique across VNet in your subscription as\nwell as on-premise. Make sure the CIDR format is conformed to (A.B.C.D/X) where\nA,B,C,D are between 0 and 255, and X is between 0 and 22"
                    },
                    "managementNetwork": {
                      "type": "string",
                      "description": "Network used to access vCenter Server and NSX-T Manager",
                      "readOnly": true
                    },
                    "provisioningNetwork": {
                      "type": "string",
                      "description": "Used for virtual machine cold migration, cloning, and snapshot migration",
                      "readOnly": true
                    },
                    "vmotionNetwork": {
                      "type": "string",
                      "description": "Used for live migration of virtual machines",
                      "readOnly": true
                    },
                    "vcenterPassword": {
                      "type": "string",
                      "format": "password",
                      "description": "Optionally, set the vCenter admin password when the private cloud is created",
                      "x-ms-secret": true
                    },
                    "nsxtPassword": {
                      "type": "string",
                      "format": "password",
                      "description": "Optionally, set the NSX-T Manager password when the private cloud is created",
                      "x-ms-secret": true
                    },
                    "vcenterCertificateThumbprint": {
                      "type": "string",
                      "description": "Thumbprint of the vCenter Server SSL certificate",
                      "readOnly": true
                    },
                    "nsxtCertificateThumbprint": {
                      "type": "string",
                      "description": "Thumbprint of the NSX-T Manager SSL certificate",
                      "readOnly": true
                    },
                    "externalCloudLinks": {
                      "type": "array",
                      "description": "Array of cloud link IDs from other clouds that connect to this one",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "secondaryCircuit": {
                      "description": "A secondary expressRoute circuit from a separate AZ. Only present in a\nstretched private cloud",
                      "type": "object",
                      "properties": {
                        "primarySubnet": {
                          "type": "string",
                          "description": "CIDR of primary subnet",
                          "readOnly": true
                        },
                        "secondarySubnet": {
                          "type": "string",
                          "description": "CIDR of secondary subnet",
                          "readOnly": true
                        },
                        "expressRouteID": {
                          "type": "string",
                          "description": "Identifier of the ExpressRoute Circuit (Microsoft Colo only)",
                          "readOnly": true
                        },
                        "expressRoutePrivatePeeringID": {
                          "type": "string",
                          "description": "ExpressRoute Circuit private peering identifier",
                          "readOnly": true
                        }
                      }
                    },
                    "nsxPublicIpQuotaRaised": {
                      "description": "Flag to indicate whether the private cloud has the quota for provisioned NSX\nPublic IP count raised from 64 to 1024",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "NsxPublicIpQuotaRaisedEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "is enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "is disabled"
                          }
                        ]
                      }
                    },
                    "virtualNetworkId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Azure resource ID of the virtual network",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "\\Microsoft.Network\\vnet"
                          }
                        ]
                      }
                    },
                    "dnsZoneType": {
                      "description": "The type of DNS zone to use.",
                      "type": "string",
                      "enum": [
                        "Public",
                        "Private"
                      ],
                      "x-ms-enum": {
                        "name": "DnsZoneType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Public",
                            "value": "Public",
                            "description": "Primary DNS zone."
                          },
                          {
                            "name": "Private",
                            "value": "Private",
                            "description": "Private DNS zone."
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "managementCluster",
                    "networkBlock"
                  ]
                },
                "sku": {
                  "type": "object",
                  "description": "The resource model definition representing SKU",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
                    },
                    "tier": {
                      "type": "string",
                      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
                      "enum": [
                        "Free",
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": false
                      }
                    },
                    "size": {
                      "type": "string",
                      "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                    },
                    "family": {
                      "type": "string",
                      "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (either system assigned, or none).",
                      "enum": [
                        "None",
                        "SystemAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "SystemAssignedServiceIdentityType",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "zones": {
                  "type": "array",
                  "description": "The availability zones.",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "sku"
              ]
            }
          },
          "201": {
            "description": "Resource 'PrivateCloud' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "A private cloud resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "managementCluster": {
                      "description": "The default cluster used for management",
                      "type": "object",
                      "properties": {
                        "clusterSize": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The cluster size"
                        },
                        "provisioningState": {
                          "description": "The state of the cluster provisioning",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Succeeded",
                            "Failed",
                            "Canceled",
                            "Cancelled",
                            "Deleting",
                            "Updating"
                          ],
                          "x-ms-enum": {
                            "name": "ClusterProvisioningState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Succeeded",
                                "value": "Succeeded",
                                "description": "Resource has been created."
                              },
                              {
                                "name": "Failed",
                                "value": "Failed",
                                "description": "Resource creation failed."
                              },
                              {
                                "name": "Canceled",
                                "value": "Canceled",
                                "description": "Resource creation was canceled."
                              },
                              {
                                "name": "Cancelled",
                                "value": "Cancelled",
                                "description": "is cancelled"
                              },
                              {
                                "name": "Deleting",
                                "value": "Deleting",
                                "description": "is deleting"
                              },
                              {
                                "name": "Updating",
                                "value": "Updating",
                                "description": "is updating"
                              }
                            ]
                          }
                        },
                        "clusterId": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The identity",
                          "readOnly": true
                        },
                        "hosts": {
                          "type": "array",
                          "description": "The hosts",
                          "items": {
                            "type": "string"
                          }
                        },
                        "vsanDatastoreName": {
                          "type": "string",
                          "description": "Name of the vsan datastore associated with the cluster"
                        }
                      }
                    },
                    "internet": {
                      "type": "string",
                      "description": "Connectivity to internet is enabled or disabled",
                      "default": "Disabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "InternetEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "is enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "is disabled"
                          }
                        ]
                      }
                    },
                    "identitySources": {
                      "type": "array",
                      "description": "vCenter Single Sign On Identity Sources",
                      "items": {
                        "type": "object",
                        "description": "vCenter Single Sign On Identity Source",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the identity source"
                          },
                          "alias": {
                            "type": "string",
                            "description": "The domain's NetBIOS name"
                          },
                          "domain": {
                            "type": "string",
                            "description": "The domain's DNS name"
                          },
                          "baseUserDN": {
                            "type": "string",
                            "description": "The base distinguished name for users"
                          },
                          "baseGroupDN": {
                            "type": "string",
                            "description": "The base distinguished name for groups"
                          },
                          "primaryServer": {
                            "type": "string",
                            "description": "Primary server URL"
                          },
                          "secondaryServer": {
                            "type": "string",
                            "description": "Secondary server URL"
                          },
                          "ssl": {
                            "description": "Protect LDAP communication using SSL certificate (LDAPS)",
                            "type": "string",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "SslEnum",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled",
                                  "description": "is enabled"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled",
                                  "description": "is disabled"
                                }
                              ]
                            }
                          },
                          "username": {
                            "type": "string",
                            "description": "The ID of an Active Directory user with a minimum of read-only access to Base\nDN for users and group"
                          },
                          "password": {
                            "type": "string",
                            "format": "password",
                            "description": "The password of the Active Directory user with a minimum of read-only access to\nBase DN for users and groups.",
                            "x-ms-secret": true
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "availability": {
                      "description": "Properties describing how the cloud is distributed across availability zones",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "strategy": {
                          "description": "The availability strategy for the private cloud",
                          "type": "string",
                          "enum": [
                            "SingleZone",
                            "DualZone"
                          ],
                          "x-ms-enum": {
                            "name": "AvailabilityStrategy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "SingleZone",
                                "value": "SingleZone",
                                "description": "in single zone"
                              },
                              {
                                "name": "DualZone",
                                "value": "DualZone",
                                "description": "in two zones"
                              }
                            ]
                          }
                        },
                        "zone": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The primary availability zone for the private cloud"
                        },
                        "secondaryZone": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The secondary availability zone for the private cloud"
                        }
                      }
                    },
                    "encryption": {
                      "description": "Customer managed key encryption, can be enabled or disabled",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Status of customer managed encryption key",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EncryptionState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "is enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "is disabled"
                              }
                            ]
                          }
                        },
                        "keyVaultProperties": {
                          "description": "The key vault where the encryption key is stored",
                          "type": "object",
                          "properties": {
                            "keyName": {
                              "type": "string",
                              "description": "The name of the key."
                            },
                            "keyVersion": {
                              "type": "string",
                              "description": "The version of the key."
                            },
                            "autoDetectedKeyVersion": {
                              "type": "string",
                              "description": "The auto-detected version of the key if versionType is auto-detected.",
                              "readOnly": true
                            },
                            "keyVaultUrl": {
                              "type": "string",
                              "description": "The URL of the vault."
                            },
                            "keyState": {
                              "description": "The state of key provided",
                              "readOnly": true,
                              "type": "string",
                              "enum": [
                                "Connected",
                                "AccessDenied"
                              ],
                              "x-ms-enum": {
                                "name": "EncryptionKeyStatus",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Connected",
                                    "value": "Connected",
                                    "description": "is connected"
                                  },
                                  {
                                    "name": "AccessDenied",
                                    "value": "AccessDenied",
                                    "description": "is access denied"
                                  }
                                ]
                              }
                            },
                            "versionType": {
                              "description": "Property of the key if user provided or auto detected",
                              "readOnly": true,
                              "type": "string",
                              "enum": [
                                "Fixed",
                                "AutoDetected"
                              ],
                              "x-ms-enum": {
                                "name": "EncryptionVersionType",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Fixed",
                                    "value": "Fixed",
                                    "description": "is fixed"
                                  },
                                  {
                                    "name": "AutoDetected",
                                    "value": "AutoDetected",
                                    "description": "is auto-detected"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "extendedNetworkBlocks": {
                      "type": "array",
                      "description": "Array of additional networks noncontiguous with networkBlock. Networks must be\nunique and non-overlapping across VNet in your subscription, on-premise, and\nthis privateCloud networkBlock attribute. Make sure the CIDR format conforms to\n(A.B.C.D/X).",
                      "items": {
                        "type": "string"
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Cancelled",
                        "Pending",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "PrivateCloudProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Cancelled",
                            "value": "Cancelled",
                            "description": "is cancelled"
                          },
                          {
                            "name": "Pending",
                            "value": "Pending",
                            "description": "is pending"
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "circuit": {
                      "description": "An ExpressRoute Circuit",
                      "type": "object",
                      "properties": {
                        "primarySubnet": {
                          "type": "string",
                          "description": "CIDR of primary subnet",
                          "readOnly": true
                        },
                        "secondarySubnet": {
                          "type": "string",
                          "description": "CIDR of secondary subnet",
                          "readOnly": true
                        },
                        "expressRouteID": {
                          "type": "string",
                          "description": "Identifier of the ExpressRoute Circuit (Microsoft Colo only)",
                          "readOnly": true
                        },
                        "expressRoutePrivatePeeringID": {
                          "type": "string",
                          "description": "ExpressRoute Circuit private peering identifier",
                          "readOnly": true
                        }
                      }
                    },
                    "endpoints": {
                      "description": "The endpoints",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "nsxtManager": {
                          "type": "string",
                          "description": "Endpoint FQDN for the NSX-T Data Center manager",
                          "readOnly": true
                        },
                        "vcsa": {
                          "type": "string",
                          "description": "Endpoint FQDN for Virtual Center Server Appliance",
                          "readOnly": true
                        },
                        "hcxCloudManager": {
                          "type": "string",
                          "description": "Endpoint FQDN for the HCX Cloud Manager",
                          "readOnly": true
                        },
                        "nsxtManagerIp": {
                          "type": "string",
                          "description": "Endpoint IP for the NSX-T Data Center manager",
                          "readOnly": true
                        },
                        "vcenterIp": {
                          "type": "string",
                          "description": "Endpoint IP for Virtual Center Server Appliance",
                          "readOnly": true
                        },
                        "hcxCloudManagerIp": {
                          "type": "string",
                          "description": "Endpoint IP for the HCX Cloud Manager",
                          "readOnly": true
                        }
                      }
                    },
                    "networkBlock": {
                      "type": "string",
                      "description": "The block of addresses should be unique across VNet in your subscription as\nwell as on-premise. Make sure the CIDR format is conformed to (A.B.C.D/X) where\nA,B,C,D are between 0 and 255, and X is between 0 and 22"
                    },
                    "managementNetwork": {
                      "type": "string",
                      "description": "Network used to access vCenter Server and NSX-T Manager",
                      "readOnly": true
                    },
                    "provisioningNetwork": {
                      "type": "string",
                      "description": "Used for virtual machine cold migration, cloning, and snapshot migration",
                      "readOnly": true
                    },
                    "vmotionNetwork": {
                      "type": "string",
                      "description": "Used for live migration of virtual machines",
                      "readOnly": true
                    },
                    "vcenterPassword": {
                      "type": "string",
                      "format": "password",
                      "description": "Optionally, set the vCenter admin password when the private cloud is created",
                      "x-ms-secret": true
                    },
                    "nsxtPassword": {
                      "type": "string",
                      "format": "password",
                      "description": "Optionally, set the NSX-T Manager password when the private cloud is created",
                      "x-ms-secret": true
                    },
                    "vcenterCertificateThumbprint": {
                      "type": "string",
                      "description": "Thumbprint of the vCenter Server SSL certificate",
                      "readOnly": true
                    },
                    "nsxtCertificateThumbprint": {
                      "type": "string",
                      "description": "Thumbprint of the NSX-T Manager SSL certificate",
                      "readOnly": true
                    },
                    "externalCloudLinks": {
                      "type": "array",
                      "description": "Array of cloud link IDs from other clouds that connect to this one",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "secondaryCircuit": {
                      "description": "A secondary expressRoute circuit from a separate AZ. Only present in a\nstretched private cloud",
                      "type": "object",
                      "properties": {
                        "primarySubnet": {
                          "type": "string",
                          "description": "CIDR of primary subnet",
                          "readOnly": true
                        },
                        "secondarySubnet": {
                          "type": "string",
                          "description": "CIDR of secondary subnet",
                          "readOnly": true
                        },
                        "expressRouteID": {
                          "type": "string",
                          "description": "Identifier of the ExpressRoute Circuit (Microsoft Colo only)",
                          "readOnly": true
                        },
                        "expressRoutePrivatePeeringID": {
                          "type": "string",
                          "description": "ExpressRoute Circuit private peering identifier",
                          "readOnly": true
                        }
                      }
                    },
                    "nsxPublicIpQuotaRaised": {
                      "description": "Flag to indicate whether the private cloud has the quota for provisioned NSX\nPublic IP count raised from 64 to 1024",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "NsxPublicIpQuotaRaisedEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "is enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "is disabled"
                          }
                        ]
                      }
                    },
                    "virtualNetworkId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Azure resource ID of the virtual network",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "\\Microsoft.Network\\vnet"
                          }
                        ]
                      }
                    },
                    "dnsZoneType": {
                      "description": "The type of DNS zone to use.",
                      "type": "string",
                      "enum": [
                        "Public",
                        "Private"
                      ],
                      "x-ms-enum": {
                        "name": "DnsZoneType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Public",
                            "value": "Public",
                            "description": "Primary DNS zone."
                          },
                          {
                            "name": "Private",
                            "value": "Private",
                            "description": "Private DNS zone."
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "managementCluster",
                    "networkBlock"
                  ]
                },
                "sku": {
                  "type": "object",
                  "description": "The resource model definition representing SKU",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
                    },
                    "tier": {
                      "type": "string",
                      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
                      "enum": [
                        "Free",
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": false
                      }
                    },
                    "size": {
                      "type": "string",
                      "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                    },
                    "family": {
                      "type": "string",
                      "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (either system assigned, or none).",
                      "enum": [
                        "None",
                        "SystemAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "SystemAssignedServiceIdentityType",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "zones": {
                  "type": "array",
                  "description": "The availability zones.",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "sku"
              ]
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "PrivateClouds_Delete",
        "tags": [
          "PrivateClouds"
        ],
        "description": "Delete a PrivateCloud",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/addons": {
      "get": {
        "operationId": "Addons_List",
        "tags": [
          "Addons"
        ],
        "description": "List Addon resources by PrivateCloud",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a Addon list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Addon items on this page",
                  "items": {
                    "type": "object",
                    "description": "An addon resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "addonType": {
                            "description": "Addon type",
                            "type": "string",
                            "enum": [
                              "SRM",
                              "VR",
                              "HCX",
                              "Arc"
                            ],
                            "x-ms-enum": {
                              "name": "AddonType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "SRM",
                                  "value": "SRM"
                                },
                                {
                                  "name": "VR",
                                  "value": "VR"
                                },
                                {
                                  "name": "HCX",
                                  "value": "HCX"
                                },
                                {
                                  "name": "Arc",
                                  "value": "Arc"
                                }
                              ]
                            }
                          },
                          "provisioningState": {
                            "description": "The state of the addon provisioning",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Cancelled",
                              "Building",
                              "Deleting",
                              "Updating"
                            ],
                            "x-ms-enum": {
                              "name": "AddonProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Cancelled",
                                  "value": "Cancelled",
                                  "description": "is cancelled"
                                },
                                {
                                  "name": "Building",
                                  "value": "Building",
                                  "description": "is building"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "is deleting"
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "is updating"
                                }
                              ]
                            }
                          }
                        },
                        "discriminator": "addonType",
                        "required": [
                          "addonType"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/addons/{addonName}": {
      "get": {
        "operationId": "Addons_Get",
        "tags": [
          "Addons"
        ],
        "description": "Get a Addon",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "addonName",
            "in": "path",
            "description": "Name of the addon.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "An addon resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "addonType": {
                      "description": "Addon type",
                      "type": "string",
                      "enum": [
                        "SRM",
                        "VR",
                        "HCX",
                        "Arc"
                      ],
                      "x-ms-enum": {
                        "name": "AddonType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "SRM",
                            "value": "SRM"
                          },
                          {
                            "name": "VR",
                            "value": "VR"
                          },
                          {
                            "name": "HCX",
                            "value": "HCX"
                          },
                          {
                            "name": "Arc",
                            "value": "Arc"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "The state of the addon provisioning",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Cancelled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "AddonProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Cancelled",
                            "value": "Cancelled",
                            "description": "is cancelled"
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    }
                  },
                  "discriminator": "addonType",
                  "required": [
                    "addonType"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Addons_CreateOrUpdate",
        "tags": [
          "Addons"
        ],
        "description": "Create a Addon",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "addonName",
            "in": "path",
            "description": "Name of the addon.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "addon",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "An addon resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "addonType": {
                      "description": "Addon type",
                      "type": "string",
                      "enum": [
                        "SRM",
                        "VR",
                        "HCX",
                        "Arc"
                      ],
                      "x-ms-enum": {
                        "name": "AddonType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "SRM",
                            "value": "SRM"
                          },
                          {
                            "name": "VR",
                            "value": "VR"
                          },
                          {
                            "name": "HCX",
                            "value": "HCX"
                          },
                          {
                            "name": "Arc",
                            "value": "Arc"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "The state of the addon provisioning",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Cancelled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "AddonProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Cancelled",
                            "value": "Cancelled",
                            "description": "is cancelled"
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    }
                  },
                  "discriminator": "addonType",
                  "required": [
                    "addonType"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Addon' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "An addon resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "addonType": {
                      "description": "Addon type",
                      "type": "string",
                      "enum": [
                        "SRM",
                        "VR",
                        "HCX",
                        "Arc"
                      ],
                      "x-ms-enum": {
                        "name": "AddonType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "SRM",
                            "value": "SRM"
                          },
                          {
                            "name": "VR",
                            "value": "VR"
                          },
                          {
                            "name": "HCX",
                            "value": "HCX"
                          },
                          {
                            "name": "Arc",
                            "value": "Arc"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "The state of the addon provisioning",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Cancelled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "AddonProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Cancelled",
                            "value": "Cancelled",
                            "description": "is cancelled"
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    }
                  },
                  "discriminator": "addonType",
                  "required": [
                    "addonType"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Resource 'Addon' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "An addon resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "addonType": {
                      "description": "Addon type",
                      "type": "string",
                      "enum": [
                        "SRM",
                        "VR",
                        "HCX",
                        "Arc"
                      ],
                      "x-ms-enum": {
                        "name": "AddonType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "SRM",
                            "value": "SRM"
                          },
                          {
                            "name": "VR",
                            "value": "VR"
                          },
                          {
                            "name": "HCX",
                            "value": "HCX"
                          },
                          {
                            "name": "Arc",
                            "value": "Arc"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "The state of the addon provisioning",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Cancelled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "AddonProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Cancelled",
                            "value": "Cancelled",
                            "description": "is cancelled"
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    }
                  },
                  "discriminator": "addonType",
                  "required": [
                    "addonType"
                  ]
                }
              }
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Addons_Delete",
        "tags": [
          "Addons"
        ],
        "description": "Delete a Addon",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "addonName",
            "in": "path",
            "description": "Name of the addon.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/authorizations": {
      "get": {
        "operationId": "Authorizations_List",
        "tags": [
          "Authorizations"
        ],
        "description": "List ExpressRouteAuthorization resources by PrivateCloud",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a ExpressRouteAuthorization list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The ExpressRouteAuthorization items on this page",
                  "items": {
                    "type": "object",
                    "description": "ExpressRoute Circuit Authorization",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "The state of the ExpressRoute Circuit Authorization provisioning",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Updating"
                            ],
                            "x-ms-enum": {
                              "name": "ExpressRouteAuthorizationProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "is updating"
                                }
                              ]
                            }
                          },
                          "expressRouteAuthorizationId": {
                            "type": "string",
                            "description": "The ID of the ExpressRoute Circuit Authorization",
                            "readOnly": true
                          },
                          "expressRouteAuthorizationKey": {
                            "type": "string",
                            "description": "The key of the ExpressRoute Circuit Authorization",
                            "readOnly": true
                          },
                          "expressRouteId": {
                            "type": "string",
                            "description": "The ID of the ExpressRoute Circuit"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/authorizations/{authorizationName}": {
      "get": {
        "operationId": "Authorizations_Get",
        "tags": [
          "Authorizations"
        ],
        "description": "Get a ExpressRouteAuthorization",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "authorizationName",
            "in": "path",
            "description": "Name of the ExpressRoute Circuit Authorization",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "ExpressRoute Circuit Authorization",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The state of the ExpressRoute Circuit Authorization provisioning",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ExpressRouteAuthorizationProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "expressRouteAuthorizationId": {
                      "type": "string",
                      "description": "The ID of the ExpressRoute Circuit Authorization",
                      "readOnly": true
                    },
                    "expressRouteAuthorizationKey": {
                      "type": "string",
                      "description": "The key of the ExpressRoute Circuit Authorization",
                      "readOnly": true
                    },
                    "expressRouteId": {
                      "type": "string",
                      "description": "The ID of the ExpressRoute Circuit"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Authorizations_CreateOrUpdate",
        "tags": [
          "Authorizations"
        ],
        "description": "Create a ExpressRouteAuthorization",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "authorizationName",
            "in": "path",
            "description": "Name of the ExpressRoute Circuit Authorization",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "authorization",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "ExpressRoute Circuit Authorization",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The state of the ExpressRoute Circuit Authorization provisioning",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ExpressRouteAuthorizationProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "expressRouteAuthorizationId": {
                      "type": "string",
                      "description": "The ID of the ExpressRoute Circuit Authorization",
                      "readOnly": true
                    },
                    "expressRouteAuthorizationKey": {
                      "type": "string",
                      "description": "The key of the ExpressRoute Circuit Authorization",
                      "readOnly": true
                    },
                    "expressRouteId": {
                      "type": "string",
                      "description": "The ID of the ExpressRoute Circuit"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ExpressRouteAuthorization' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "ExpressRoute Circuit Authorization",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The state of the ExpressRoute Circuit Authorization provisioning",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ExpressRouteAuthorizationProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "expressRouteAuthorizationId": {
                      "type": "string",
                      "description": "The ID of the ExpressRoute Circuit Authorization",
                      "readOnly": true
                    },
                    "expressRouteAuthorizationKey": {
                      "type": "string",
                      "description": "The key of the ExpressRoute Circuit Authorization",
                      "readOnly": true
                    },
                    "expressRouteId": {
                      "type": "string",
                      "description": "The ID of the ExpressRoute Circuit"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource 'ExpressRouteAuthorization' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "ExpressRoute Circuit Authorization",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The state of the ExpressRoute Circuit Authorization provisioning",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ExpressRouteAuthorizationProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "expressRouteAuthorizationId": {
                      "type": "string",
                      "description": "The ID of the ExpressRoute Circuit Authorization",
                      "readOnly": true
                    },
                    "expressRouteAuthorizationKey": {
                      "type": "string",
                      "description": "The key of the ExpressRoute Circuit Authorization",
                      "readOnly": true
                    },
                    "expressRouteId": {
                      "type": "string",
                      "description": "The ID of the ExpressRoute Circuit"
                    }
                  }
                }
              }
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Authorizations_Delete",
        "tags": [
          "Authorizations"
        ],
        "description": "Delete a ExpressRouteAuthorization",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "authorizationName",
            "in": "path",
            "description": "Name of the ExpressRoute Circuit Authorization",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/cloudLinks": {
      "get": {
        "operationId": "CloudLinks_List",
        "tags": [
          "CloudLinks"
        ],
        "description": "List CloudLink resources by PrivateCloud",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a CloudLink list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The CloudLink items on this page",
                  "items": {
                    "type": "object",
                    "description": "A cloud link resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "The provisioning state of the resource.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled"
                            ],
                            "x-ms-enum": {
                              "name": "CloudLinkProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                }
                              ]
                            }
                          },
                          "status": {
                            "description": "The state of the cloud link.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Active",
                              "Building",
                              "Deleting",
                              "Failed",
                              "Disconnected"
                            ],
                            "x-ms-enum": {
                              "name": "CloudLinkStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Active",
                                  "value": "Active",
                                  "description": "is active"
                                },
                                {
                                  "name": "Building",
                                  "value": "Building",
                                  "description": "is building"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "is deleting"
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "is failed"
                                },
                                {
                                  "name": "Disconnected",
                                  "value": "Disconnected",
                                  "description": "is disconnected"
                                }
                              ]
                            }
                          },
                          "linkedCloud": {
                            "type": "string",
                            "description": "Identifier of the other private cloud participating in the link."
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/cloudLinks/{cloudLinkName}": {
      "get": {
        "operationId": "CloudLinks_Get",
        "tags": [
          "CloudLinks"
        ],
        "description": "Get a CloudLink",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "cloudLinkName",
            "in": "path",
            "description": "Name of the cloud link.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A cloud link resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "CloudLinkProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "The state of the cloud link.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Active",
                        "Building",
                        "Deleting",
                        "Failed",
                        "Disconnected"
                      ],
                      "x-ms-enum": {
                        "name": "CloudLinkStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Active",
                            "value": "Active",
                            "description": "is active"
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "is failed"
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "is disconnected"
                          }
                        ]
                      }
                    },
                    "linkedCloud": {
                      "type": "string",
                      "description": "Identifier of the other private cloud participating in the link."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "CloudLinks_CreateOrUpdate",
        "tags": [
          "CloudLinks"
        ],
        "description": "Create a CloudLink",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "cloudLinkName",
            "in": "path",
            "description": "Name of the cloud link.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "cloudLink",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A cloud link resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "CloudLinkProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "The state of the cloud link.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Active",
                        "Building",
                        "Deleting",
                        "Failed",
                        "Disconnected"
                      ],
                      "x-ms-enum": {
                        "name": "CloudLinkStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Active",
                            "value": "Active",
                            "description": "is active"
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "is failed"
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "is disconnected"
                          }
                        ]
                      }
                    },
                    "linkedCloud": {
                      "type": "string",
                      "description": "Identifier of the other private cloud participating in the link."
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'CloudLink' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "A cloud link resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "CloudLinkProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "The state of the cloud link.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Active",
                        "Building",
                        "Deleting",
                        "Failed",
                        "Disconnected"
                      ],
                      "x-ms-enum": {
                        "name": "CloudLinkStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Active",
                            "value": "Active",
                            "description": "is active"
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "is failed"
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "is disconnected"
                          }
                        ]
                      }
                    },
                    "linkedCloud": {
                      "type": "string",
                      "description": "Identifier of the other private cloud participating in the link."
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource 'CloudLink' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "A cloud link resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "CloudLinkProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "The state of the cloud link.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Active",
                        "Building",
                        "Deleting",
                        "Failed",
                        "Disconnected"
                      ],
                      "x-ms-enum": {
                        "name": "CloudLinkStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Active",
                            "value": "Active",
                            "description": "is active"
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "is failed"
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "is disconnected"
                          }
                        ]
                      }
                    },
                    "linkedCloud": {
                      "type": "string",
                      "description": "Identifier of the other private cloud participating in the link."
                    }
                  }
                }
              }
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "CloudLinks_Delete",
        "tags": [
          "CloudLinks"
        ],
        "description": "Delete a CloudLink",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "cloudLinkName",
            "in": "path",
            "description": "Name of the cloud link.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/clusters": {
      "get": {
        "operationId": "Clusters_List",
        "tags": [
          "Clusters"
        ],
        "description": "List Cluster resources by PrivateCloud",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a Cluster list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Cluster items on this page",
                  "items": {
                    "type": "object",
                    "description": "A cluster resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "clusterSize": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The cluster size"
                          },
                          "provisioningState": {
                            "description": "The state of the cluster provisioning",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Cancelled",
                              "Deleting",
                              "Updating"
                            ],
                            "x-ms-enum": {
                              "name": "ClusterProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Cancelled",
                                  "value": "Cancelled",
                                  "description": "is cancelled"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "is deleting"
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "is updating"
                                }
                              ]
                            }
                          },
                          "clusterId": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The identity",
                            "readOnly": true
                          },
                          "hosts": {
                            "type": "array",
                            "description": "The hosts",
                            "items": {
                              "type": "string"
                            }
                          },
                          "vsanDatastoreName": {
                            "type": "string",
                            "description": "Name of the vsan datastore associated with the cluster"
                          }
                        }
                      },
                      "sku": {
                        "type": "object",
                        "description": "The resource model definition representing SKU",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
                          },
                          "tier": {
                            "type": "string",
                            "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
                            "enum": [
                              "Free",
                              "Basic",
                              "Standard",
                              "Premium"
                            ],
                            "x-ms-enum": {
                              "name": "SkuTier",
                              "modelAsString": false
                            }
                          },
                          "size": {
                            "type": "string",
                            "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                          },
                          "family": {
                            "type": "string",
                            "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                          },
                          "capacity": {
                            "type": "integer",
                            "format": "int32",
                            "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                          }
                        },
                        "required": [
                          "name"
                        ]
                      }
                    },
                    "required": [
                      "sku"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/clusters/{clusterName}": {
      "get": {
        "operationId": "Clusters_Get",
        "tags": [
          "Clusters"
        ],
        "description": "Get a Cluster",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A cluster resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "clusterSize": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The cluster size"
                    },
                    "provisioningState": {
                      "description": "The state of the cluster provisioning",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Cancelled",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ClusterProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Cancelled",
                            "value": "Cancelled",
                            "description": "is cancelled"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "clusterId": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The identity",
                      "readOnly": true
                    },
                    "hosts": {
                      "type": "array",
                      "description": "The hosts",
                      "items": {
                        "type": "string"
                      }
                    },
                    "vsanDatastoreName": {
                      "type": "string",
                      "description": "Name of the vsan datastore associated with the cluster"
                    }
                  }
                },
                "sku": {
                  "type": "object",
                  "description": "The resource model definition representing SKU",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
                    },
                    "tier": {
                      "type": "string",
                      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
                      "enum": [
                        "Free",
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": false
                      }
                    },
                    "size": {
                      "type": "string",
                      "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                    },
                    "family": {
                      "type": "string",
                      "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              },
              "required": [
                "sku"
              ]
            }
          }
        }
      },
      "put": {
        "operationId": "Clusters_CreateOrUpdate",
        "tags": [
          "Clusters"
        ],
        "description": "Create a Cluster",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "cluster",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A cluster resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "clusterSize": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The cluster size"
                    },
                    "provisioningState": {
                      "description": "The state of the cluster provisioning",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Cancelled",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ClusterProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Cancelled",
                            "value": "Cancelled",
                            "description": "is cancelled"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "clusterId": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The identity",
                      "readOnly": true
                    },
                    "hosts": {
                      "type": "array",
                      "description": "The hosts",
                      "items": {
                        "type": "string"
                      }
                    },
                    "vsanDatastoreName": {
                      "type": "string",
                      "description": "Name of the vsan datastore associated with the cluster"
                    }
                  }
                },
                "sku": {
                  "type": "object",
                  "description": "The resource model definition representing SKU",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
                    },
                    "tier": {
                      "type": "string",
                      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
                      "enum": [
                        "Free",
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": false
                      }
                    },
                    "size": {
                      "type": "string",
                      "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                    },
                    "family": {
                      "type": "string",
                      "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              },
              "required": [
                "sku"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Cluster' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "A cluster resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "clusterSize": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The cluster size"
                    },
                    "provisioningState": {
                      "description": "The state of the cluster provisioning",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Cancelled",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ClusterProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Cancelled",
                            "value": "Cancelled",
                            "description": "is cancelled"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "clusterId": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The identity",
                      "readOnly": true
                    },
                    "hosts": {
                      "type": "array",
                      "description": "The hosts",
                      "items": {
                        "type": "string"
                      }
                    },
                    "vsanDatastoreName": {
                      "type": "string",
                      "description": "Name of the vsan datastore associated with the cluster"
                    }
                  }
                },
                "sku": {
                  "type": "object",
                  "description": "The resource model definition representing SKU",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
                    },
                    "tier": {
                      "type": "string",
                      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
                      "enum": [
                        "Free",
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": false
                      }
                    },
                    "size": {
                      "type": "string",
                      "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                    },
                    "family": {
                      "type": "string",
                      "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              },
              "required": [
                "sku"
              ]
            }
          },
          "201": {
            "description": "Resource 'Cluster' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "A cluster resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "clusterSize": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The cluster size"
                    },
                    "provisioningState": {
                      "description": "The state of the cluster provisioning",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Cancelled",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ClusterProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Cancelled",
                            "value": "Cancelled",
                            "description": "is cancelled"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "clusterId": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The identity",
                      "readOnly": true
                    },
                    "hosts": {
                      "type": "array",
                      "description": "The hosts",
                      "items": {
                        "type": "string"
                      }
                    },
                    "vsanDatastoreName": {
                      "type": "string",
                      "description": "Name of the vsan datastore associated with the cluster"
                    }
                  }
                },
                "sku": {
                  "type": "object",
                  "description": "The resource model definition representing SKU",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
                    },
                    "tier": {
                      "type": "string",
                      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
                      "enum": [
                        "Free",
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": false
                      }
                    },
                    "size": {
                      "type": "string",
                      "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                    },
                    "family": {
                      "type": "string",
                      "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              },
              "required": [
                "sku"
              ]
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Clusters_Update",
        "tags": [
          "Clusters"
        ],
        "description": "Update a Cluster",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterUpdate",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "An update of a cluster resource",
              "properties": {
                "sku": {
                  "type": "object",
                  "description": "The resource model definition representing SKU",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
                    },
                    "tier": {
                      "type": "string",
                      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
                      "enum": [
                        "Free",
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": false
                      }
                    },
                    "size": {
                      "type": "string",
                      "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                    },
                    "family": {
                      "type": "string",
                      "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "properties": {
                  "description": "The properties of a cluster resource that may be updated",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "clusterSize": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The cluster size"
                    },
                    "hosts": {
                      "type": "array",
                      "description": "The hosts",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "A cluster resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "clusterSize": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The cluster size"
                    },
                    "provisioningState": {
                      "description": "The state of the cluster provisioning",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Cancelled",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ClusterProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Cancelled",
                            "value": "Cancelled",
                            "description": "is cancelled"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "clusterId": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The identity",
                      "readOnly": true
                    },
                    "hosts": {
                      "type": "array",
                      "description": "The hosts",
                      "items": {
                        "type": "string"
                      }
                    },
                    "vsanDatastoreName": {
                      "type": "string",
                      "description": "Name of the vsan datastore associated with the cluster"
                    }
                  }
                },
                "sku": {
                  "type": "object",
                  "description": "The resource model definition representing SKU",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
                    },
                    "tier": {
                      "type": "string",
                      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
                      "enum": [
                        "Free",
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": false
                      }
                    },
                    "size": {
                      "type": "string",
                      "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                    },
                    "family": {
                      "type": "string",
                      "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              },
              "required": [
                "sku"
              ]
            }
          },
          "201": {
            "description": "Resource 'Cluster' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "A cluster resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "clusterSize": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The cluster size"
                    },
                    "provisioningState": {
                      "description": "The state of the cluster provisioning",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Cancelled",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "ClusterProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Cancelled",
                            "value": "Cancelled",
                            "description": "is cancelled"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "clusterId": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The identity",
                      "readOnly": true
                    },
                    "hosts": {
                      "type": "array",
                      "description": "The hosts",
                      "items": {
                        "type": "string"
                      }
                    },
                    "vsanDatastoreName": {
                      "type": "string",
                      "description": "Name of the vsan datastore associated with the cluster"
                    }
                  }
                },
                "sku": {
                  "type": "object",
                  "description": "The resource model definition representing SKU",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
                    },
                    "tier": {
                      "type": "string",
                      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
                      "enum": [
                        "Free",
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": false
                      }
                    },
                    "size": {
                      "type": "string",
                      "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                    },
                    "family": {
                      "type": "string",
                      "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              },
              "required": [
                "sku"
              ]
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Clusters_Delete",
        "tags": [
          "Clusters"
        ],
        "description": "Delete a Cluster",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/clusters/{clusterName}/datastores": {
      "get": {
        "operationId": "Datastores_List",
        "tags": [
          "Datastores"
        ],
        "description": "List Datastore resources by Cluster",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a Datastore list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Datastore items on this page",
                  "items": {
                    "type": "object",
                    "description": "A datastore resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "The state of the datastore provisioning",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Cancelled",
                              "Pending",
                              "Creating",
                              "Updating",
                              "Deleting"
                            ],
                            "x-ms-enum": {
                              "name": "DatastoreProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Cancelled",
                                  "value": "Cancelled",
                                  "description": "is cancelled"
                                },
                                {
                                  "name": "Pending",
                                  "value": "Pending",
                                  "description": "is pending"
                                },
                                {
                                  "name": "Creating",
                                  "value": "Creating",
                                  "description": "is creating"
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "is updating"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "is deleting"
                                }
                              ]
                            }
                          },
                          "netAppVolume": {
                            "description": "An Azure NetApp Files volume",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Azure resource ID of the NetApp volume"
                              }
                            },
                            "required": [
                              "id"
                            ]
                          },
                          "diskPoolVolume": {
                            "description": "An iSCSI volume",
                            "type": "object",
                            "properties": {
                              "targetId": {
                                "type": "string",
                                "description": "Azure resource ID of the iSCSI target"
                              },
                              "lunName": {
                                "type": "string",
                                "description": "Name of the LUN to be used for datastore"
                              },
                              "mountOption": {
                                "type": "string",
                                "description": "Mode that describes whether the LUN has to be mounted as a datastore or\nattached as a LUN",
                                "default": "MOUNT",
                                "enum": [
                                  "MOUNT",
                                  "ATTACH"
                                ],
                                "x-ms-enum": {
                                  "name": "MountOptionEnum",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "MOUNT",
                                      "value": "MOUNT",
                                      "description": "is mount"
                                    },
                                    {
                                      "name": "ATTACH",
                                      "value": "ATTACH",
                                      "description": "is attach"
                                    }
                                  ]
                                }
                              },
                              "path": {
                                "type": "string",
                                "description": "Device path",
                                "readOnly": true
                              }
                            },
                            "required": [
                              "targetId",
                              "lunName"
                            ]
                          },
                          "elasticSanVolume": {
                            "description": "An Elastic SAN volume",
                            "type": "object",
                            "properties": {
                              "targetId": {
                                "type": "string",
                                "format": "arm-id",
                                "description": "Azure resource ID of the Elastic SAN Volume",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.ElasticSan/elasticSans/volumeGroups/volumes"
                                    }
                                  ]
                                }
                              }
                            },
                            "required": [
                              "targetId"
                            ]
                          },
                          "pureStorageVolume": {
                            "description": "A Pure Storage volume",
                            "type": "object",
                            "properties": {
                              "storagePoolId": {
                                "type": "string",
                                "format": "arm-id",
                                "description": "Azure resource ID of the Pure Storage Pool",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "PureStorage.Block/storagePools"
                                    }
                                  ]
                                }
                              },
                              "sizeGb": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Volume size to be used to create a Virtual Volumes (vVols) datastore"
                              }
                            },
                            "required": [
                              "storagePoolId",
                              "sizeGb"
                            ]
                          },
                          "status": {
                            "description": "The operational status of the datastore",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Unknown",
                              "Accessible",
                              "Inaccessible",
                              "Attached",
                              "Detached",
                              "LostCommunication",
                              "DeadOrError"
                            ],
                            "x-ms-enum": {
                              "name": "DatastoreStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Unknown",
                                  "value": "Unknown",
                                  "description": "is unknown"
                                },
                                {
                                  "name": "Accessible",
                                  "value": "Accessible",
                                  "description": "is accessible"
                                },
                                {
                                  "name": "Inaccessible",
                                  "value": "Inaccessible",
                                  "description": "is inaccessible"
                                },
                                {
                                  "name": "Attached",
                                  "value": "Attached",
                                  "description": "is attached"
                                },
                                {
                                  "name": "Detached",
                                  "value": "Detached",
                                  "description": "is detached"
                                },
                                {
                                  "name": "LostCommunication",
                                  "value": "LostCommunication",
                                  "description": "is lost communication"
                                },
                                {
                                  "name": "DeadOrError",
                                  "value": "DeadOrError",
                                  "description": "is dead or error"
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/clusters/{clusterName}/datastores/{datastoreName}": {
      "get": {
        "operationId": "Datastores_Get",
        "tags": [
          "Datastores"
        ],
        "description": "Get a Datastore",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "datastoreName",
            "in": "path",
            "description": "Name of the datastore",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A datastore resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The state of the datastore provisioning",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Cancelled",
                        "Pending",
                        "Creating",
                        "Updating",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "DatastoreProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Cancelled",
                            "value": "Cancelled",
                            "description": "is cancelled"
                          },
                          {
                            "name": "Pending",
                            "value": "Pending",
                            "description": "is pending"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "is creating"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          }
                        ]
                      }
                    },
                    "netAppVolume": {
                      "description": "An Azure NetApp Files volume",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Azure resource ID of the NetApp volume"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "diskPoolVolume": {
                      "description": "An iSCSI volume",
                      "type": "object",
                      "properties": {
                        "targetId": {
                          "type": "string",
                          "description": "Azure resource ID of the iSCSI target"
                        },
                        "lunName": {
                          "type": "string",
                          "description": "Name of the LUN to be used for datastore"
                        },
                        "mountOption": {
                          "type": "string",
                          "description": "Mode that describes whether the LUN has to be mounted as a datastore or\nattached as a LUN",
                          "default": "MOUNT",
                          "enum": [
                            "MOUNT",
                            "ATTACH"
                          ],
                          "x-ms-enum": {
                            "name": "MountOptionEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "MOUNT",
                                "value": "MOUNT",
                                "description": "is mount"
                              },
                              {
                                "name": "ATTACH",
                                "value": "ATTACH",
                                "description": "is attach"
                              }
                            ]
                          }
                        },
                        "path": {
                          "type": "string",
                          "description": "Device path",
                          "readOnly": true
                        }
                      },
                      "required": [
                        "targetId",
                        "lunName"
                      ]
                    },
                    "elasticSanVolume": {
                      "description": "An Elastic SAN volume",
                      "type": "object",
                      "properties": {
                        "targetId": {
                          "type": "string",
                          "format": "arm-id",
                          "description": "Azure resource ID of the Elastic SAN Volume",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.ElasticSan/elasticSans/volumeGroups/volumes"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "targetId"
                      ]
                    },
                    "pureStorageVolume": {
                      "description": "A Pure Storage volume",
                      "type": "object",
                      "properties": {
                        "storagePoolId": {
                          "type": "string",
                          "format": "arm-id",
                          "description": "Azure resource ID of the Pure Storage Pool",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "PureStorage.Block/storagePools"
                              }
                            ]
                          }
                        },
                        "sizeGb": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Volume size to be used to create a Virtual Volumes (vVols) datastore"
                        }
                      },
                      "required": [
                        "storagePoolId",
                        "sizeGb"
                      ]
                    },
                    "status": {
                      "description": "The operational status of the datastore",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Unknown",
                        "Accessible",
                        "Inaccessible",
                        "Attached",
                        "Detached",
                        "LostCommunication",
                        "DeadOrError"
                      ],
                      "x-ms-enum": {
                        "name": "DatastoreStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "is unknown"
                          },
                          {
                            "name": "Accessible",
                            "value": "Accessible",
                            "description": "is accessible"
                          },
                          {
                            "name": "Inaccessible",
                            "value": "Inaccessible",
                            "description": "is inaccessible"
                          },
                          {
                            "name": "Attached",
                            "value": "Attached",
                            "description": "is attached"
                          },
                          {
                            "name": "Detached",
                            "value": "Detached",
                            "description": "is detached"
                          },
                          {
                            "name": "LostCommunication",
                            "value": "LostCommunication",
                            "description": "is lost communication"
                          },
                          {
                            "name": "DeadOrError",
                            "value": "DeadOrError",
                            "description": "is dead or error"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Datastores_CreateOrUpdate",
        "tags": [
          "Datastores"
        ],
        "description": "Create a Datastore",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "datastoreName",
            "in": "path",
            "description": "Name of the datastore",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "datastore",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A datastore resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The state of the datastore provisioning",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Cancelled",
                        "Pending",
                        "Creating",
                        "Updating",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "DatastoreProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Cancelled",
                            "value": "Cancelled",
                            "description": "is cancelled"
                          },
                          {
                            "name": "Pending",
                            "value": "Pending",
                            "description": "is pending"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "is creating"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          }
                        ]
                      }
                    },
                    "netAppVolume": {
                      "description": "An Azure NetApp Files volume",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Azure resource ID of the NetApp volume"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "diskPoolVolume": {
                      "description": "An iSCSI volume",
                      "type": "object",
                      "properties": {
                        "targetId": {
                          "type": "string",
                          "description": "Azure resource ID of the iSCSI target"
                        },
                        "lunName": {
                          "type": "string",
                          "description": "Name of the LUN to be used for datastore"
                        },
                        "mountOption": {
                          "type": "string",
                          "description": "Mode that describes whether the LUN has to be mounted as a datastore or\nattached as a LUN",
                          "default": "MOUNT",
                          "enum": [
                            "MOUNT",
                            "ATTACH"
                          ],
                          "x-ms-enum": {
                            "name": "MountOptionEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "MOUNT",
                                "value": "MOUNT",
                                "description": "is mount"
                              },
                              {
                                "name": "ATTACH",
                                "value": "ATTACH",
                                "description": "is attach"
                              }
                            ]
                          }
                        },
                        "path": {
                          "type": "string",
                          "description": "Device path",
                          "readOnly": true
                        }
                      },
                      "required": [
                        "targetId",
                        "lunName"
                      ]
                    },
                    "elasticSanVolume": {
                      "description": "An Elastic SAN volume",
                      "type": "object",
                      "properties": {
                        "targetId": {
                          "type": "string",
                          "format": "arm-id",
                          "description": "Azure resource ID of the Elastic SAN Volume",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.ElasticSan/elasticSans/volumeGroups/volumes"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "targetId"
                      ]
                    },
                    "pureStorageVolume": {
                      "description": "A Pure Storage volume",
                      "type": "object",
                      "properties": {
                        "storagePoolId": {
                          "type": "string",
                          "format": "arm-id",
                          "description": "Azure resource ID of the Pure Storage Pool",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "PureStorage.Block/storagePools"
                              }
                            ]
                          }
                        },
                        "sizeGb": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Volume size to be used to create a Virtual Volumes (vVols) datastore"
                        }
                      },
                      "required": [
                        "storagePoolId",
                        "sizeGb"
                      ]
                    },
                    "status": {
                      "description": "The operational status of the datastore",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Unknown",
                        "Accessible",
                        "Inaccessible",
                        "Attached",
                        "Detached",
                        "LostCommunication",
                        "DeadOrError"
                      ],
                      "x-ms-enum": {
                        "name": "DatastoreStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "is unknown"
                          },
                          {
                            "name": "Accessible",
                            "value": "Accessible",
                            "description": "is accessible"
                          },
                          {
                            "name": "Inaccessible",
                            "value": "Inaccessible",
                            "description": "is inaccessible"
                          },
                          {
                            "name": "Attached",
                            "value": "Attached",
                            "description": "is attached"
                          },
                          {
                            "name": "Detached",
                            "value": "Detached",
                            "description": "is detached"
                          },
                          {
                            "name": "LostCommunication",
                            "value": "LostCommunication",
                            "description": "is lost communication"
                          },
                          {
                            "name": "DeadOrError",
                            "value": "DeadOrError",
                            "description": "is dead or error"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Datastore' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "A datastore resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The state of the datastore provisioning",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Cancelled",
                        "Pending",
                        "Creating",
                        "Updating",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "DatastoreProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Cancelled",
                            "value": "Cancelled",
                            "description": "is cancelled"
                          },
                          {
                            "name": "Pending",
                            "value": "Pending",
                            "description": "is pending"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "is creating"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          }
                        ]
                      }
                    },
                    "netAppVolume": {
                      "description": "An Azure NetApp Files volume",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Azure resource ID of the NetApp volume"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "diskPoolVolume": {
                      "description": "An iSCSI volume",
                      "type": "object",
                      "properties": {
                        "targetId": {
                          "type": "string",
                          "description": "Azure resource ID of the iSCSI target"
                        },
                        "lunName": {
                          "type": "string",
                          "description": "Name of the LUN to be used for datastore"
                        },
                        "mountOption": {
                          "type": "string",
                          "description": "Mode that describes whether the LUN has to be mounted as a datastore or\nattached as a LUN",
                          "default": "MOUNT",
                          "enum": [
                            "MOUNT",
                            "ATTACH"
                          ],
                          "x-ms-enum": {
                            "name": "MountOptionEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "MOUNT",
                                "value": "MOUNT",
                                "description": "is mount"
                              },
                              {
                                "name": "ATTACH",
                                "value": "ATTACH",
                                "description": "is attach"
                              }
                            ]
                          }
                        },
                        "path": {
                          "type": "string",
                          "description": "Device path",
                          "readOnly": true
                        }
                      },
                      "required": [
                        "targetId",
                        "lunName"
                      ]
                    },
                    "elasticSanVolume": {
                      "description": "An Elastic SAN volume",
                      "type": "object",
                      "properties": {
                        "targetId": {
                          "type": "string",
                          "format": "arm-id",
                          "description": "Azure resource ID of the Elastic SAN Volume",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.ElasticSan/elasticSans/volumeGroups/volumes"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "targetId"
                      ]
                    },
                    "pureStorageVolume": {
                      "description": "A Pure Storage volume",
                      "type": "object",
                      "properties": {
                        "storagePoolId": {
                          "type": "string",
                          "format": "arm-id",
                          "description": "Azure resource ID of the Pure Storage Pool",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "PureStorage.Block/storagePools"
                              }
                            ]
                          }
                        },
                        "sizeGb": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Volume size to be used to create a Virtual Volumes (vVols) datastore"
                        }
                      },
                      "required": [
                        "storagePoolId",
                        "sizeGb"
                      ]
                    },
                    "status": {
                      "description": "The operational status of the datastore",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Unknown",
                        "Accessible",
                        "Inaccessible",
                        "Attached",
                        "Detached",
                        "LostCommunication",
                        "DeadOrError"
                      ],
                      "x-ms-enum": {
                        "name": "DatastoreStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "is unknown"
                          },
                          {
                            "name": "Accessible",
                            "value": "Accessible",
                            "description": "is accessible"
                          },
                          {
                            "name": "Inaccessible",
                            "value": "Inaccessible",
                            "description": "is inaccessible"
                          },
                          {
                            "name": "Attached",
                            "value": "Attached",
                            "description": "is attached"
                          },
                          {
                            "name": "Detached",
                            "value": "Detached",
                            "description": "is detached"
                          },
                          {
                            "name": "LostCommunication",
                            "value": "LostCommunication",
                            "description": "is lost communication"
                          },
                          {
                            "name": "DeadOrError",
                            "value": "DeadOrError",
                            "description": "is dead or error"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource 'Datastore' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "A datastore resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The state of the datastore provisioning",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Cancelled",
                        "Pending",
                        "Creating",
                        "Updating",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "DatastoreProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Cancelled",
                            "value": "Cancelled",
                            "description": "is cancelled"
                          },
                          {
                            "name": "Pending",
                            "value": "Pending",
                            "description": "is pending"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "is creating"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          }
                        ]
                      }
                    },
                    "netAppVolume": {
                      "description": "An Azure NetApp Files volume",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Azure resource ID of the NetApp volume"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "diskPoolVolume": {
                      "description": "An iSCSI volume",
                      "type": "object",
                      "properties": {
                        "targetId": {
                          "type": "string",
                          "description": "Azure resource ID of the iSCSI target"
                        },
                        "lunName": {
                          "type": "string",
                          "description": "Name of the LUN to be used for datastore"
                        },
                        "mountOption": {
                          "type": "string",
                          "description": "Mode that describes whether the LUN has to be mounted as a datastore or\nattached as a LUN",
                          "default": "MOUNT",
                          "enum": [
                            "MOUNT",
                            "ATTACH"
                          ],
                          "x-ms-enum": {
                            "name": "MountOptionEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "MOUNT",
                                "value": "MOUNT",
                                "description": "is mount"
                              },
                              {
                                "name": "ATTACH",
                                "value": "ATTACH",
                                "description": "is attach"
                              }
                            ]
                          }
                        },
                        "path": {
                          "type": "string",
                          "description": "Device path",
                          "readOnly": true
                        }
                      },
                      "required": [
                        "targetId",
                        "lunName"
                      ]
                    },
                    "elasticSanVolume": {
                      "description": "An Elastic SAN volume",
                      "type": "object",
                      "properties": {
                        "targetId": {
                          "type": "string",
                          "format": "arm-id",
                          "description": "Azure resource ID of the Elastic SAN Volume",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.ElasticSan/elasticSans/volumeGroups/volumes"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "targetId"
                      ]
                    },
                    "pureStorageVolume": {
                      "description": "A Pure Storage volume",
                      "type": "object",
                      "properties": {
                        "storagePoolId": {
                          "type": "string",
                          "format": "arm-id",
                          "description": "Azure resource ID of the Pure Storage Pool",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "PureStorage.Block/storagePools"
                              }
                            ]
                          }
                        },
                        "sizeGb": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Volume size to be used to create a Virtual Volumes (vVols) datastore"
                        }
                      },
                      "required": [
                        "storagePoolId",
                        "sizeGb"
                      ]
                    },
                    "status": {
                      "description": "The operational status of the datastore",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Unknown",
                        "Accessible",
                        "Inaccessible",
                        "Attached",
                        "Detached",
                        "LostCommunication",
                        "DeadOrError"
                      ],
                      "x-ms-enum": {
                        "name": "DatastoreStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "is unknown"
                          },
                          {
                            "name": "Accessible",
                            "value": "Accessible",
                            "description": "is accessible"
                          },
                          {
                            "name": "Inaccessible",
                            "value": "Inaccessible",
                            "description": "is inaccessible"
                          },
                          {
                            "name": "Attached",
                            "value": "Attached",
                            "description": "is attached"
                          },
                          {
                            "name": "Detached",
                            "value": "Detached",
                            "description": "is detached"
                          },
                          {
                            "name": "LostCommunication",
                            "value": "LostCommunication",
                            "description": "is lost communication"
                          },
                          {
                            "name": "DeadOrError",
                            "value": "DeadOrError",
                            "description": "is dead or error"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Datastores_Delete",
        "tags": [
          "Datastores"
        ],
        "description": "Delete a Datastore",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "datastoreName",
            "in": "path",
            "description": "Name of the datastore",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/clusters/{clusterName}/hosts": {
      "get": {
        "operationId": "Hosts_List",
        "tags": [
          "Hosts"
        ],
        "description": "List Host resources by Cluster",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a Host list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Host items on this page",
                  "items": {
                    "type": "object",
                    "description": "A host resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "kind": {
                            "description": "The kind of host",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "string",
                            "enum": [
                              "General",
                              "Specialized"
                            ],
                            "x-ms-enum": {
                              "name": "HostKind",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "General",
                                  "value": "General"
                                },
                                {
                                  "name": "Specialized",
                                  "value": "Specialized"
                                }
                              ]
                            }
                          },
                          "provisioningState": {
                            "description": "The state of the host provisioning.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled"
                            ],
                            "x-ms-enum": {
                              "name": "HostProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                }
                              ]
                            }
                          },
                          "displayName": {
                            "type": "string",
                            "description": "Display name of the host in VMware vCenter."
                          },
                          "moRefId": {
                            "type": "string",
                            "description": "vCenter managed object reference ID of the host.",
                            "readOnly": true
                          },
                          "fqdn": {
                            "type": "string",
                            "description": "Fully qualified domain name of the host.",
                            "minLength": 1,
                            "maxLength": 255,
                            "readOnly": true
                          },
                          "maintenance": {
                            "description": "If provided, the host is in maintenance. The value is the reason for maintenance.",
                            "type": "string",
                            "enum": [
                              "Replacement",
                              "Upgrade"
                            ],
                            "x-ms-enum": {
                              "name": "HostMaintenance",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Replacement",
                                  "value": "Replacement",
                                  "description": "The host is a replacement host."
                                },
                                {
                                  "name": "Upgrade",
                                  "value": "Upgrade",
                                  "description": "The host is for an upgrade, such as an upgrade to ESXi, NSX-T, or other component."
                                }
                              ]
                            }
                          },
                          "faultDomain": {
                            "type": "string",
                            "readOnly": true
                          }
                        },
                        "discriminator": "kind",
                        "required": [
                          "kind"
                        ]
                      },
                      "zones": {
                        "type": "array",
                        "description": "The availability zones.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "sku": {
                        "type": "object",
                        "description": "The resource model definition representing SKU",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
                          },
                          "tier": {
                            "type": "string",
                            "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
                            "enum": [
                              "Free",
                              "Basic",
                              "Standard",
                              "Premium"
                            ],
                            "x-ms-enum": {
                              "name": "SkuTier",
                              "modelAsString": false
                            }
                          },
                          "size": {
                            "type": "string",
                            "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                          },
                          "family": {
                            "type": "string",
                            "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                          },
                          "capacity": {
                            "type": "integer",
                            "format": "int32",
                            "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                          }
                        },
                        "required": [
                          "name"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/clusters/{clusterName}/hosts/{hostId}": {
      "get": {
        "operationId": "Hosts_Get",
        "tags": [
          "Hosts"
        ],
        "description": "Get a Host",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "hostId",
            "in": "path",
            "description": "The host identifier.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A host resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "kind": {
                      "description": "The kind of host",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string",
                      "enum": [
                        "General",
                        "Specialized"
                      ],
                      "x-ms-enum": {
                        "name": "HostKind",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "General",
                            "value": "General"
                          },
                          {
                            "name": "Specialized",
                            "value": "Specialized"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "The state of the host provisioning.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "HostProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          }
                        ]
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the host in VMware vCenter."
                    },
                    "moRefId": {
                      "type": "string",
                      "description": "vCenter managed object reference ID of the host.",
                      "readOnly": true
                    },
                    "fqdn": {
                      "type": "string",
                      "description": "Fully qualified domain name of the host.",
                      "minLength": 1,
                      "maxLength": 255,
                      "readOnly": true
                    },
                    "maintenance": {
                      "description": "If provided, the host is in maintenance. The value is the reason for maintenance.",
                      "type": "string",
                      "enum": [
                        "Replacement",
                        "Upgrade"
                      ],
                      "x-ms-enum": {
                        "name": "HostMaintenance",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Replacement",
                            "value": "Replacement",
                            "description": "The host is a replacement host."
                          },
                          {
                            "name": "Upgrade",
                            "value": "Upgrade",
                            "description": "The host is for an upgrade, such as an upgrade to ESXi, NSX-T, or other component."
                          }
                        ]
                      }
                    },
                    "faultDomain": {
                      "type": "string",
                      "readOnly": true
                    }
                  },
                  "discriminator": "kind",
                  "required": [
                    "kind"
                  ]
                },
                "zones": {
                  "type": "array",
                  "description": "The availability zones.",
                  "items": {
                    "type": "string"
                  }
                },
                "sku": {
                  "type": "object",
                  "description": "The resource model definition representing SKU",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
                    },
                    "tier": {
                      "type": "string",
                      "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
                      "enum": [
                        "Free",
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": false
                      }
                    },
                    "size": {
                      "type": "string",
                      "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                    },
                    "family": {
                      "type": "string",
                      "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/clusters/{clusterName}/listZones": {
      "post": {
        "operationId": "Clusters_ListZones",
        "tags": [
          "Clusters"
        ],
        "description": "List hosts by zone in a cluster",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "List of all zones and associated hosts for a cluster",
              "properties": {
                "zones": {
                  "type": "array",
                  "description": "Zone and associated hosts info",
                  "items": {
                    "type": "object",
                    "description": "Zone and associated hosts info",
                    "properties": {
                      "hosts": {
                        "type": "array",
                        "description": "List of hosts belonging to the availability zone in a cluster",
                        "items": {
                          "type": "string"
                        },
                        "readOnly": true
                      },
                      "zone": {
                        "type": "string",
                        "description": "Availability zone identifier",
                        "readOnly": true
                      }
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/clusters/{clusterName}/placementPolicies": {
      "get": {
        "operationId": "PlacementPolicies_List",
        "tags": [
          "PlacementPolicies"
        ],
        "description": "List PlacementPolicy resources by Cluster",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a PlacementPolicy list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The PlacementPolicy items on this page",
                  "items": {
                    "type": "object",
                    "description": "A vSphere Distributed Resource Scheduler (DRS) placement policy",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "Placement Policy type",
                            "type": "string",
                            "enum": [
                              "VmVm",
                              "VmHost"
                            ],
                            "x-ms-enum": {
                              "name": "PlacementPolicyType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "VmVm",
                                  "value": "VmVm"
                                },
                                {
                                  "name": "VmHost",
                                  "value": "VmHost"
                                }
                              ]
                            }
                          },
                          "state": {
                            "description": "Whether the placement policy is enabled or disabled",
                            "type": "string",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "PlacementPolicyState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled",
                                  "description": "is enabled"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled",
                                  "description": "is disabled"
                                }
                              ]
                            }
                          },
                          "displayName": {
                            "type": "string",
                            "description": "Display name of the placement policy"
                          },
                          "provisioningState": {
                            "description": "The provisioning state",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Building",
                              "Deleting",
                              "Updating"
                            ],
                            "x-ms-enum": {
                              "name": "PlacementPolicyProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Building",
                                  "value": "Building",
                                  "description": "is building"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "is deleting"
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "is updating"
                                }
                              ]
                            }
                          }
                        },
                        "discriminator": "type",
                        "required": [
                          "type"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/clusters/{clusterName}/placementPolicies/{placementPolicyName}": {
      "get": {
        "operationId": "PlacementPolicies_Get",
        "tags": [
          "PlacementPolicies"
        ],
        "description": "Get a PlacementPolicy",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "placementPolicyName",
            "in": "path",
            "description": "Name of the placement policy.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A vSphere Distributed Resource Scheduler (DRS) placement policy",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "Placement Policy type",
                      "type": "string",
                      "enum": [
                        "VmVm",
                        "VmHost"
                      ],
                      "x-ms-enum": {
                        "name": "PlacementPolicyType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "VmVm",
                            "value": "VmVm"
                          },
                          {
                            "name": "VmHost",
                            "value": "VmHost"
                          }
                        ]
                      }
                    },
                    "state": {
                      "description": "Whether the placement policy is enabled or disabled",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PlacementPolicyState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "is enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "is disabled"
                          }
                        ]
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the placement policy"
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "PlacementPolicyProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    }
                  },
                  "discriminator": "type",
                  "required": [
                    "type"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "PlacementPolicies_CreateOrUpdate",
        "tags": [
          "PlacementPolicies"
        ],
        "description": "Create a PlacementPolicy",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "placementPolicyName",
            "in": "path",
            "description": "Name of the placement policy.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "placementPolicy",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A vSphere Distributed Resource Scheduler (DRS) placement policy",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "Placement Policy type",
                      "type": "string",
                      "enum": [
                        "VmVm",
                        "VmHost"
                      ],
                      "x-ms-enum": {
                        "name": "PlacementPolicyType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "VmVm",
                            "value": "VmVm"
                          },
                          {
                            "name": "VmHost",
                            "value": "VmHost"
                          }
                        ]
                      }
                    },
                    "state": {
                      "description": "Whether the placement policy is enabled or disabled",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PlacementPolicyState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "is enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "is disabled"
                          }
                        ]
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the placement policy"
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "PlacementPolicyProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    }
                  },
                  "discriminator": "type",
                  "required": [
                    "type"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'PlacementPolicy' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "A vSphere Distributed Resource Scheduler (DRS) placement policy",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "Placement Policy type",
                      "type": "string",
                      "enum": [
                        "VmVm",
                        "VmHost"
                      ],
                      "x-ms-enum": {
                        "name": "PlacementPolicyType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "VmVm",
                            "value": "VmVm"
                          },
                          {
                            "name": "VmHost",
                            "value": "VmHost"
                          }
                        ]
                      }
                    },
                    "state": {
                      "description": "Whether the placement policy is enabled or disabled",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PlacementPolicyState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "is enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "is disabled"
                          }
                        ]
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the placement policy"
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "PlacementPolicyProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    }
                  },
                  "discriminator": "type",
                  "required": [
                    "type"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Resource 'PlacementPolicy' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "A vSphere Distributed Resource Scheduler (DRS) placement policy",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "Placement Policy type",
                      "type": "string",
                      "enum": [
                        "VmVm",
                        "VmHost"
                      ],
                      "x-ms-enum": {
                        "name": "PlacementPolicyType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "VmVm",
                            "value": "VmVm"
                          },
                          {
                            "name": "VmHost",
                            "value": "VmHost"
                          }
                        ]
                      }
                    },
                    "state": {
                      "description": "Whether the placement policy is enabled or disabled",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PlacementPolicyState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "is enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "is disabled"
                          }
                        ]
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the placement policy"
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "PlacementPolicyProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    }
                  },
                  "discriminator": "type",
                  "required": [
                    "type"
                  ]
                }
              }
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "PlacementPolicies_Update",
        "tags": [
          "PlacementPolicies"
        ],
        "description": "Update a PlacementPolicy",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "placementPolicyName",
            "in": "path",
            "description": "Name of the placement policy.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "placementPolicyUpdate",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "An update of a DRS placement policy resource",
              "properties": {
                "properties": {
                  "description": "The properties of a placement policy resource that may be updated",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "state": {
                      "description": "Whether the placement policy is enabled or disabled",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PlacementPolicyState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "is enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "is disabled"
                          }
                        ]
                      }
                    },
                    "vmMembers": {
                      "type": "array",
                      "description": "Virtual machine members list",
                      "items": {
                        "type": "string"
                      }
                    },
                    "hostMembers": {
                      "type": "array",
                      "description": "Host members list",
                      "items": {
                        "type": "string"
                      }
                    },
                    "affinityStrength": {
                      "description": "vm-host placement policy affinity strength (should/must)",
                      "type": "string",
                      "enum": [
                        "Should",
                        "Must"
                      ],
                      "x-ms-enum": {
                        "name": "AffinityStrength",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Should",
                            "value": "Should",
                            "description": "is should"
                          },
                          {
                            "name": "Must",
                            "value": "Must",
                            "description": "is must"
                          }
                        ]
                      }
                    },
                    "azureHybridBenefitType": {
                      "description": "placement policy azure hybrid benefit opt-in type",
                      "type": "string",
                      "enum": [
                        "SqlHost",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "AzureHybridBenefitType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "SqlHost",
                            "value": "SqlHost",
                            "description": "is SqlHost"
                          },
                          {
                            "name": "None",
                            "value": "None",
                            "description": "is None"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A vSphere Distributed Resource Scheduler (DRS) placement policy",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "Placement Policy type",
                      "type": "string",
                      "enum": [
                        "VmVm",
                        "VmHost"
                      ],
                      "x-ms-enum": {
                        "name": "PlacementPolicyType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "VmVm",
                            "value": "VmVm"
                          },
                          {
                            "name": "VmHost",
                            "value": "VmHost"
                          }
                        ]
                      }
                    },
                    "state": {
                      "description": "Whether the placement policy is enabled or disabled",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PlacementPolicyState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "is enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "is disabled"
                          }
                        ]
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the placement policy"
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "PlacementPolicyProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    }
                  },
                  "discriminator": "type",
                  "required": [
                    "type"
                  ]
                }
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "schema": {
              "type": "object",
              "description": "A vSphere Distributed Resource Scheduler (DRS) placement policy",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "Placement Policy type",
                      "type": "string",
                      "enum": [
                        "VmVm",
                        "VmHost"
                      ],
                      "x-ms-enum": {
                        "name": "PlacementPolicyType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "VmVm",
                            "value": "VmVm"
                          },
                          {
                            "name": "VmHost",
                            "value": "VmHost"
                          }
                        ]
                      }
                    },
                    "state": {
                      "description": "Whether the placement policy is enabled or disabled",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PlacementPolicyState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "is enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "is disabled"
                          }
                        ]
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the placement policy"
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "PlacementPolicyProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    }
                  },
                  "discriminator": "type",
                  "required": [
                    "type"
                  ]
                }
              }
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "PlacementPolicies_Delete",
        "tags": [
          "PlacementPolicies"
        ],
        "description": "Delete a PlacementPolicy",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "placementPolicyName",
            "in": "path",
            "description": "Name of the placement policy.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/clusters/{clusterName}/virtualMachines": {
      "get": {
        "operationId": "VirtualMachines_List",
        "tags": [
          "VirtualMachines"
        ],
        "description": "List VirtualMachine resources by Cluster",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a VirtualMachine list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The VirtualMachine items on this page",
                  "items": {
                    "type": "object",
                    "description": "Virtual Machine",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "The provisioning state of the resource.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled"
                            ],
                            "x-ms-enum": {
                              "name": "VirtualMachineProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                }
                              ]
                            }
                          },
                          "displayName": {
                            "type": "string",
                            "description": "Display name of the VM.",
                            "readOnly": true
                          },
                          "moRefId": {
                            "type": "string",
                            "description": "vCenter managed object reference ID of the virtual machine",
                            "readOnly": true
                          },
                          "folderPath": {
                            "type": "string",
                            "description": "Path to virtual machine's folder starting from datacenter virtual machine folder",
                            "readOnly": true
                          },
                          "restrictMovement": {
                            "description": "Whether VM DRS-driven movement is restricted (enabled) or not (disabled)",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "VirtualMachineRestrictMovementState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled",
                                  "description": "is enabled"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled",
                                  "description": "is disabled"
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/clusters/{clusterName}/virtualMachines/{virtualMachineId}": {
      "get": {
        "operationId": "VirtualMachines_Get",
        "tags": [
          "VirtualMachines"
        ],
        "description": "Get a VirtualMachine",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "virtualMachineId",
            "in": "path",
            "description": "ID of the virtual machine.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Virtual Machine",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "VirtualMachineProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          }
                        ]
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the VM.",
                      "readOnly": true
                    },
                    "moRefId": {
                      "type": "string",
                      "description": "vCenter managed object reference ID of the virtual machine",
                      "readOnly": true
                    },
                    "folderPath": {
                      "type": "string",
                      "description": "Path to virtual machine's folder starting from datacenter virtual machine folder",
                      "readOnly": true
                    },
                    "restrictMovement": {
                      "description": "Whether VM DRS-driven movement is restricted (enabled) or not (disabled)",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "VirtualMachineRestrictMovementState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "is enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "is disabled"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/clusters/{clusterName}/virtualMachines/{virtualMachineId}/restrictMovement": {
      "post": {
        "operationId": "VirtualMachines_RestrictMovement",
        "tags": [
          "VirtualMachines"
        ],
        "description": "Enable or disable DRS-driven VM movement restriction",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Name of the cluster",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "virtualMachineId",
            "in": "path",
            "description": "ID of the virtual machine.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "restrictMovement",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Set VM DRS-driven movement to restricted (enabled) or not (disabled)",
              "properties": {
                "restrictMovement": {
                  "description": "Whether VM DRS-driven movement is restricted (enabled) or not (disabled)",
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "VirtualMachineRestrictMovementState",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled",
                        "description": "is enabled"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled",
                        "description": "is disabled"
                      }
                    ]
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/globalReachConnections": {
      "get": {
        "operationId": "GlobalReachConnections_List",
        "tags": [
          "GlobalReachConnections"
        ],
        "description": "List GlobalReachConnection resources by PrivateCloud",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a GlobalReachConnection list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The GlobalReachConnection items on this page",
                  "items": {
                    "type": "object",
                    "description": "A global reach connection resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "The state of the  ExpressRoute Circuit Authorization provisioning",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Updating"
                            ],
                            "x-ms-enum": {
                              "name": "GlobalReachConnectionProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "is updating"
                                }
                              ]
                            }
                          },
                          "addressPrefix": {
                            "type": "string",
                            "description": "The network used for global reach carved out from the original network block\nprovided for the private cloud",
                            "readOnly": true
                          },
                          "authorizationKey": {
                            "type": "string",
                            "description": "Authorization key from the peer express route used for the global reach\nconnection"
                          },
                          "circuitConnectionStatus": {
                            "description": "The connection status of the global reach connection",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Connected",
                              "Connecting",
                              "Disconnected"
                            ],
                            "x-ms-enum": {
                              "name": "GlobalReachConnectionStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Connected",
                                  "value": "Connected",
                                  "description": "is connected"
                                },
                                {
                                  "name": "Connecting",
                                  "value": "Connecting",
                                  "description": "is connecting"
                                },
                                {
                                  "name": "Disconnected",
                                  "value": "Disconnected",
                                  "description": "is disconnected"
                                }
                              ]
                            }
                          },
                          "peerExpressRouteCircuit": {
                            "type": "string",
                            "description": "Identifier of the ExpressRoute Circuit to peer with in the global reach\nconnection"
                          },
                          "expressRouteId": {
                            "type": "string",
                            "description": "The ID of the Private Cloud's ExpressRoute Circuit that is participating in the\nglobal reach connection"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/globalReachConnections/{globalReachConnectionName}": {
      "get": {
        "operationId": "GlobalReachConnections_Get",
        "tags": [
          "GlobalReachConnections"
        ],
        "description": "Get a GlobalReachConnection",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "globalReachConnectionName",
            "in": "path",
            "description": "Name of the global reach connection",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A global reach connection resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The state of the  ExpressRoute Circuit Authorization provisioning",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "GlobalReachConnectionProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "addressPrefix": {
                      "type": "string",
                      "description": "The network used for global reach carved out from the original network block\nprovided for the private cloud",
                      "readOnly": true
                    },
                    "authorizationKey": {
                      "type": "string",
                      "description": "Authorization key from the peer express route used for the global reach\nconnection"
                    },
                    "circuitConnectionStatus": {
                      "description": "The connection status of the global reach connection",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Connected",
                        "Connecting",
                        "Disconnected"
                      ],
                      "x-ms-enum": {
                        "name": "GlobalReachConnectionStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Connected",
                            "value": "Connected",
                            "description": "is connected"
                          },
                          {
                            "name": "Connecting",
                            "value": "Connecting",
                            "description": "is connecting"
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "is disconnected"
                          }
                        ]
                      }
                    },
                    "peerExpressRouteCircuit": {
                      "type": "string",
                      "description": "Identifier of the ExpressRoute Circuit to peer with in the global reach\nconnection"
                    },
                    "expressRouteId": {
                      "type": "string",
                      "description": "The ID of the Private Cloud's ExpressRoute Circuit that is participating in the\nglobal reach connection"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "GlobalReachConnections_CreateOrUpdate",
        "tags": [
          "GlobalReachConnections"
        ],
        "description": "Create a GlobalReachConnection",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "globalReachConnectionName",
            "in": "path",
            "description": "Name of the global reach connection",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "globalReachConnection",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A global reach connection resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The state of the  ExpressRoute Circuit Authorization provisioning",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "GlobalReachConnectionProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "addressPrefix": {
                      "type": "string",
                      "description": "The network used for global reach carved out from the original network block\nprovided for the private cloud",
                      "readOnly": true
                    },
                    "authorizationKey": {
                      "type": "string",
                      "description": "Authorization key from the peer express route used for the global reach\nconnection"
                    },
                    "circuitConnectionStatus": {
                      "description": "The connection status of the global reach connection",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Connected",
                        "Connecting",
                        "Disconnected"
                      ],
                      "x-ms-enum": {
                        "name": "GlobalReachConnectionStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Connected",
                            "value": "Connected",
                            "description": "is connected"
                          },
                          {
                            "name": "Connecting",
                            "value": "Connecting",
                            "description": "is connecting"
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "is disconnected"
                          }
                        ]
                      }
                    },
                    "peerExpressRouteCircuit": {
                      "type": "string",
                      "description": "Identifier of the ExpressRoute Circuit to peer with in the global reach\nconnection"
                    },
                    "expressRouteId": {
                      "type": "string",
                      "description": "The ID of the Private Cloud's ExpressRoute Circuit that is participating in the\nglobal reach connection"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'GlobalReachConnection' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "A global reach connection resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The state of the  ExpressRoute Circuit Authorization provisioning",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "GlobalReachConnectionProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "addressPrefix": {
                      "type": "string",
                      "description": "The network used for global reach carved out from the original network block\nprovided for the private cloud",
                      "readOnly": true
                    },
                    "authorizationKey": {
                      "type": "string",
                      "description": "Authorization key from the peer express route used for the global reach\nconnection"
                    },
                    "circuitConnectionStatus": {
                      "description": "The connection status of the global reach connection",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Connected",
                        "Connecting",
                        "Disconnected"
                      ],
                      "x-ms-enum": {
                        "name": "GlobalReachConnectionStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Connected",
                            "value": "Connected",
                            "description": "is connected"
                          },
                          {
                            "name": "Connecting",
                            "value": "Connecting",
                            "description": "is connecting"
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "is disconnected"
                          }
                        ]
                      }
                    },
                    "peerExpressRouteCircuit": {
                      "type": "string",
                      "description": "Identifier of the ExpressRoute Circuit to peer with in the global reach\nconnection"
                    },
                    "expressRouteId": {
                      "type": "string",
                      "description": "The ID of the Private Cloud's ExpressRoute Circuit that is participating in the\nglobal reach connection"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource 'GlobalReachConnection' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "A global reach connection resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The state of the  ExpressRoute Circuit Authorization provisioning",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "GlobalReachConnectionProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "addressPrefix": {
                      "type": "string",
                      "description": "The network used for global reach carved out from the original network block\nprovided for the private cloud",
                      "readOnly": true
                    },
                    "authorizationKey": {
                      "type": "string",
                      "description": "Authorization key from the peer express route used for the global reach\nconnection"
                    },
                    "circuitConnectionStatus": {
                      "description": "The connection status of the global reach connection",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Connected",
                        "Connecting",
                        "Disconnected"
                      ],
                      "x-ms-enum": {
                        "name": "GlobalReachConnectionStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Connected",
                            "value": "Connected",
                            "description": "is connected"
                          },
                          {
                            "name": "Connecting",
                            "value": "Connecting",
                            "description": "is connecting"
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "is disconnected"
                          }
                        ]
                      }
                    },
                    "peerExpressRouteCircuit": {
                      "type": "string",
                      "description": "Identifier of the ExpressRoute Circuit to peer with in the global reach\nconnection"
                    },
                    "expressRouteId": {
                      "type": "string",
                      "description": "The ID of the Private Cloud's ExpressRoute Circuit that is participating in the\nglobal reach connection"
                    }
                  }
                }
              }
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "GlobalReachConnections_Delete",
        "tags": [
          "GlobalReachConnections"
        ],
        "description": "Delete a GlobalReachConnection",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "globalReachConnectionName",
            "in": "path",
            "description": "Name of the global reach connection",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/hcxEnterpriseSites": {
      "get": {
        "operationId": "HcxEnterpriseSites_List",
        "tags": [
          "HcxEnterpriseSites"
        ],
        "description": "List HcxEnterpriseSite resources by PrivateCloud",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a HcxEnterpriseSite list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The HcxEnterpriseSite items on this page",
                  "items": {
                    "type": "object",
                    "description": "An HCX Enterprise Site resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "The provisioning state of the resource.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled"
                            ],
                            "x-ms-enum": {
                              "name": "HcxEnterpriseSiteProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                }
                              ]
                            }
                          },
                          "activationKey": {
                            "type": "string",
                            "description": "The activation key",
                            "readOnly": true
                          },
                          "status": {
                            "description": "The status of the HCX Enterprise Site",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Available",
                              "Consumed",
                              "Deactivated",
                              "Deleted"
                            ],
                            "x-ms-enum": {
                              "name": "HcxEnterpriseSiteStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Available",
                                  "value": "Available",
                                  "description": "is available"
                                },
                                {
                                  "name": "Consumed",
                                  "value": "Consumed",
                                  "description": "is consumed"
                                },
                                {
                                  "name": "Deactivated",
                                  "value": "Deactivated",
                                  "description": "is deactivated"
                                },
                                {
                                  "name": "Deleted",
                                  "value": "Deleted",
                                  "description": "is deleted"
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/hcxEnterpriseSites/{hcxEnterpriseSiteName}": {
      "get": {
        "operationId": "HcxEnterpriseSites_Get",
        "tags": [
          "HcxEnterpriseSites"
        ],
        "description": "Get a HcxEnterpriseSite",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "hcxEnterpriseSiteName",
            "in": "path",
            "description": "Name of the HCX Enterprise Site",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "An HCX Enterprise Site resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "HcxEnterpriseSiteProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          }
                        ]
                      }
                    },
                    "activationKey": {
                      "type": "string",
                      "description": "The activation key",
                      "readOnly": true
                    },
                    "status": {
                      "description": "The status of the HCX Enterprise Site",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Available",
                        "Consumed",
                        "Deactivated",
                        "Deleted"
                      ],
                      "x-ms-enum": {
                        "name": "HcxEnterpriseSiteStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "is available"
                          },
                          {
                            "name": "Consumed",
                            "value": "Consumed",
                            "description": "is consumed"
                          },
                          {
                            "name": "Deactivated",
                            "value": "Deactivated",
                            "description": "is deactivated"
                          },
                          {
                            "name": "Deleted",
                            "value": "Deleted",
                            "description": "is deleted"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "HcxEnterpriseSites_CreateOrUpdate",
        "tags": [
          "HcxEnterpriseSites"
        ],
        "description": "Create a HcxEnterpriseSite",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "hcxEnterpriseSiteName",
            "in": "path",
            "description": "Name of the HCX Enterprise Site",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "hcxEnterpriseSite",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "An HCX Enterprise Site resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "HcxEnterpriseSiteProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          }
                        ]
                      }
                    },
                    "activationKey": {
                      "type": "string",
                      "description": "The activation key",
                      "readOnly": true
                    },
                    "status": {
                      "description": "The status of the HCX Enterprise Site",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Available",
                        "Consumed",
                        "Deactivated",
                        "Deleted"
                      ],
                      "x-ms-enum": {
                        "name": "HcxEnterpriseSiteStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "is available"
                          },
                          {
                            "name": "Consumed",
                            "value": "Consumed",
                            "description": "is consumed"
                          },
                          {
                            "name": "Deactivated",
                            "value": "Deactivated",
                            "description": "is deactivated"
                          },
                          {
                            "name": "Deleted",
                            "value": "Deleted",
                            "description": "is deleted"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'HcxEnterpriseSite' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "An HCX Enterprise Site resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "HcxEnterpriseSiteProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          }
                        ]
                      }
                    },
                    "activationKey": {
                      "type": "string",
                      "description": "The activation key",
                      "readOnly": true
                    },
                    "status": {
                      "description": "The status of the HCX Enterprise Site",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Available",
                        "Consumed",
                        "Deactivated",
                        "Deleted"
                      ],
                      "x-ms-enum": {
                        "name": "HcxEnterpriseSiteStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "is available"
                          },
                          {
                            "name": "Consumed",
                            "value": "Consumed",
                            "description": "is consumed"
                          },
                          {
                            "name": "Deactivated",
                            "value": "Deactivated",
                            "description": "is deactivated"
                          },
                          {
                            "name": "Deleted",
                            "value": "Deleted",
                            "description": "is deleted"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource 'HcxEnterpriseSite' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "An HCX Enterprise Site resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "HcxEnterpriseSiteProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          }
                        ]
                      }
                    },
                    "activationKey": {
                      "type": "string",
                      "description": "The activation key",
                      "readOnly": true
                    },
                    "status": {
                      "description": "The status of the HCX Enterprise Site",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Available",
                        "Consumed",
                        "Deactivated",
                        "Deleted"
                      ],
                      "x-ms-enum": {
                        "name": "HcxEnterpriseSiteStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "is available"
                          },
                          {
                            "name": "Consumed",
                            "value": "Consumed",
                            "description": "is consumed"
                          },
                          {
                            "name": "Deactivated",
                            "value": "Deactivated",
                            "description": "is deactivated"
                          },
                          {
                            "name": "Deleted",
                            "value": "Deleted",
                            "description": "is deleted"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "HcxEnterpriseSites_Delete",
        "tags": [
          "HcxEnterpriseSites"
        ],
        "description": "Delete a HcxEnterpriseSite",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "hcxEnterpriseSiteName",
            "in": "path",
            "description": "Name of the HCX Enterprise Site",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/iscsiPaths": {
      "get": {
        "operationId": "IscsiPaths_ListByPrivateCloud",
        "tags": [
          "IscsiPaths"
        ],
        "description": "List IscsiPath resources by PrivateCloud",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a IscsiPath list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The IscsiPath items on this page",
                  "items": {
                    "type": "object",
                    "description": "An iSCSI path resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "The state of the iSCSI path provisioning",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Pending",
                              "Building",
                              "Deleting",
                              "Updating"
                            ],
                            "x-ms-enum": {
                              "name": "IscsiPathProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Pending",
                                  "value": "Pending",
                                  "description": "is pending"
                                },
                                {
                                  "name": "Building",
                                  "value": "Building",
                                  "description": "is building"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "is deleting"
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "is updating"
                                }
                              ]
                            }
                          },
                          "networkBlock": {
                            "type": "string",
                            "description": "CIDR Block for iSCSI path.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          }
                        },
                        "required": [
                          "networkBlock"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/iscsiPaths/default": {
      "get": {
        "operationId": "IscsiPaths_Get",
        "tags": [
          "IscsiPaths"
        ],
        "description": "Get a IscsiPath",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "An iSCSI path resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The state of the iSCSI path provisioning",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Pending",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "IscsiPathProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Pending",
                            "value": "Pending",
                            "description": "is pending"
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "networkBlock": {
                      "type": "string",
                      "description": "CIDR Block for iSCSI path.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    }
                  },
                  "required": [
                    "networkBlock"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "IscsiPaths_CreateOrUpdate",
        "tags": [
          "IscsiPaths"
        ],
        "description": "Create a IscsiPath",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "An iSCSI path resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The state of the iSCSI path provisioning",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Pending",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "IscsiPathProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Pending",
                            "value": "Pending",
                            "description": "is pending"
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "networkBlock": {
                      "type": "string",
                      "description": "CIDR Block for iSCSI path.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    }
                  },
                  "required": [
                    "networkBlock"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'IscsiPath' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "An iSCSI path resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The state of the iSCSI path provisioning",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Pending",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "IscsiPathProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Pending",
                            "value": "Pending",
                            "description": "is pending"
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "networkBlock": {
                      "type": "string",
                      "description": "CIDR Block for iSCSI path.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    }
                  },
                  "required": [
                    "networkBlock"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Resource 'IscsiPath' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "An iSCSI path resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The state of the iSCSI path provisioning",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Pending",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "IscsiPathProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Pending",
                            "value": "Pending",
                            "description": "is pending"
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "networkBlock": {
                      "type": "string",
                      "description": "CIDR Block for iSCSI path.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    }
                  },
                  "required": [
                    "networkBlock"
                  ]
                }
              }
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "IscsiPaths_Delete",
        "tags": [
          "IscsiPaths"
        ],
        "description": "Delete a IscsiPath",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/listAdminCredentials": {
      "post": {
        "operationId": "PrivateClouds_ListAdminCredentials",
        "tags": [
          "PrivateClouds"
        ],
        "description": "List the admin credentials for the private cloud",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Administrative credentials for accessing vCenter and NSX-T",
              "properties": {
                "nsxtUsername": {
                  "type": "string",
                  "description": "NSX-T Manager username",
                  "readOnly": true
                },
                "nsxtPassword": {
                  "type": "string",
                  "format": "password",
                  "description": "NSX-T Manager password",
                  "readOnly": true,
                  "x-ms-secret": true
                },
                "vcenterUsername": {
                  "type": "string",
                  "description": "vCenter admin username",
                  "readOnly": true
                },
                "vcenterPassword": {
                  "type": "string",
                  "format": "password",
                  "description": "vCenter admin password",
                  "readOnly": true,
                  "x-ms-secret": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/provisionedNetworks": {
      "get": {
        "operationId": "ProvisionedNetworks_List",
        "tags": [
          "ProvisionedNetworks"
        ],
        "description": "List ProvisionedNetwork resources by PrivateCloud",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a ProvisionedNetwork list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The ProvisionedNetwork items on this page",
                  "items": {
                    "type": "object",
                    "description": "A provisioned network resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "The provisioning state of the resource.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisionedNetworkProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                }
                              ]
                            }
                          },
                          "addressPrefix": {
                            "type": "string",
                            "description": "The address prefixes of the provisioned network in CIDR notation.",
                            "readOnly": true
                          },
                          "networkType": {
                            "description": "The type of network provisioned.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "esxManagement",
                              "esxReplication",
                              "hcxManagement",
                              "hcxUplink",
                              "vcenterManagement",
                              "vmotion",
                              "vsan"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisionedNetworkTypes",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "esxManagement",
                                  "value": "esxManagement",
                                  "description": "network for ESX management"
                                },
                                {
                                  "name": "esxReplication",
                                  "value": "esxReplication",
                                  "description": "network for ESX replication"
                                },
                                {
                                  "name": "hcxManagement",
                                  "value": "hcxManagement",
                                  "description": "network for HCX management"
                                },
                                {
                                  "name": "hcxUplink",
                                  "value": "hcxUplink",
                                  "description": "network for HCX uplink"
                                },
                                {
                                  "name": "vcenterManagement",
                                  "value": "vcenterManagement",
                                  "description": "network for vCenter management"
                                },
                                {
                                  "name": "vmotion",
                                  "value": "vmotion",
                                  "description": "network for vmotion"
                                },
                                {
                                  "name": "vsan",
                                  "value": "vsan",
                                  "description": "network for vsan"
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/provisionedNetworks/{provisionedNetworkName}": {
      "get": {
        "operationId": "ProvisionedNetworks_Get",
        "tags": [
          "ProvisionedNetworks"
        ],
        "description": "Get a ProvisionedNetwork",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "provisionedNetworkName",
            "in": "path",
            "description": "Name of the cloud link.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A provisioned network resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisionedNetworkProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          }
                        ]
                      }
                    },
                    "addressPrefix": {
                      "type": "string",
                      "description": "The address prefixes of the provisioned network in CIDR notation.",
                      "readOnly": true
                    },
                    "networkType": {
                      "description": "The type of network provisioned.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "esxManagement",
                        "esxReplication",
                        "hcxManagement",
                        "hcxUplink",
                        "vcenterManagement",
                        "vmotion",
                        "vsan"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisionedNetworkTypes",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "esxManagement",
                            "value": "esxManagement",
                            "description": "network for ESX management"
                          },
                          {
                            "name": "esxReplication",
                            "value": "esxReplication",
                            "description": "network for ESX replication"
                          },
                          {
                            "name": "hcxManagement",
                            "value": "hcxManagement",
                            "description": "network for HCX management"
                          },
                          {
                            "name": "hcxUplink",
                            "value": "hcxUplink",
                            "description": "network for HCX uplink"
                          },
                          {
                            "name": "vcenterManagement",
                            "value": "vcenterManagement",
                            "description": "network for vCenter management"
                          },
                          {
                            "name": "vmotion",
                            "value": "vmotion",
                            "description": "network for vmotion"
                          },
                          {
                            "name": "vsan",
                            "value": "vsan",
                            "description": "network for vsan"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/pureStoragePolicies": {
      "get": {
        "operationId": "PureStoragePolicies_List",
        "tags": [
          "PureStoragePolicies"
        ],
        "description": "List PureStoragePolicy resources by PrivateCloud",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a PureStoragePolicy list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The PureStoragePolicy items on this page",
                  "items": {
                    "type": "object",
                    "description": "An instance describing a Pure Storage Policy Based Management policy",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "storagePolicyDefinition": {
                            "type": "string",
                            "description": "Definition of a Pure Storage Policy Based Management policy"
                          },
                          "storagePoolId": {
                            "type": "string",
                            "description": "Azure resource ID of the Pure Storage Pool associated with the storage policy"
                          },
                          "provisioningState": {
                            "description": "The state of the Pure Storage Policy Based Management policy provisioning",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Deleting",
                              "Updating"
                            ],
                            "x-ms-enum": {
                              "name": "PureStoragePolicyProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "is deleting"
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "is updating"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "storagePolicyDefinition",
                          "storagePoolId"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/pureStoragePolicies/{storagePolicyName}": {
      "get": {
        "operationId": "PureStoragePolicies_Get",
        "tags": [
          "PureStoragePolicies"
        ],
        "description": "Get a PureStoragePolicy",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "storagePolicyName",
            "in": "path",
            "description": "Name of the storage policy.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "An instance describing a Pure Storage Policy Based Management policy",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "storagePolicyDefinition": {
                      "type": "string",
                      "description": "Definition of a Pure Storage Policy Based Management policy"
                    },
                    "storagePoolId": {
                      "type": "string",
                      "description": "Azure resource ID of the Pure Storage Pool associated with the storage policy"
                    },
                    "provisioningState": {
                      "description": "The state of the Pure Storage Policy Based Management policy provisioning",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "PureStoragePolicyProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "storagePolicyDefinition",
                    "storagePoolId"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "PureStoragePolicies_CreateOrUpdate",
        "tags": [
          "PureStoragePolicies"
        ],
        "description": "Create a PureStoragePolicy",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "storagePolicyName",
            "in": "path",
            "description": "Name of the storage policy.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "An instance describing a Pure Storage Policy Based Management policy",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "storagePolicyDefinition": {
                      "type": "string",
                      "description": "Definition of a Pure Storage Policy Based Management policy"
                    },
                    "storagePoolId": {
                      "type": "string",
                      "description": "Azure resource ID of the Pure Storage Pool associated with the storage policy"
                    },
                    "provisioningState": {
                      "description": "The state of the Pure Storage Policy Based Management policy provisioning",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "PureStoragePolicyProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "storagePolicyDefinition",
                    "storagePoolId"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'PureStoragePolicy' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "An instance describing a Pure Storage Policy Based Management policy",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "storagePolicyDefinition": {
                      "type": "string",
                      "description": "Definition of a Pure Storage Policy Based Management policy"
                    },
                    "storagePoolId": {
                      "type": "string",
                      "description": "Azure resource ID of the Pure Storage Pool associated with the storage policy"
                    },
                    "provisioningState": {
                      "description": "The state of the Pure Storage Policy Based Management policy provisioning",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "PureStoragePolicyProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "storagePolicyDefinition",
                    "storagePoolId"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Resource 'PureStoragePolicy' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "An instance describing a Pure Storage Policy Based Management policy",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "storagePolicyDefinition": {
                      "type": "string",
                      "description": "Definition of a Pure Storage Policy Based Management policy"
                    },
                    "storagePoolId": {
                      "type": "string",
                      "description": "Azure resource ID of the Pure Storage Pool associated with the storage policy"
                    },
                    "provisioningState": {
                      "description": "The state of the Pure Storage Policy Based Management policy provisioning",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "PureStoragePolicyProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "storagePolicyDefinition",
                    "storagePoolId"
                  ]
                }
              }
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "PureStoragePolicies_Delete",
        "tags": [
          "PureStoragePolicies"
        ],
        "description": "Delete a PureStoragePolicy",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "storagePolicyName",
            "in": "path",
            "description": "Name of the storage policy.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/rotateNsxtPassword": {
      "post": {
        "operationId": "PrivateClouds_RotateNsxtPassword",
        "tags": [
          "PrivateClouds"
        ],
        "description": "Rotate the NSX-T Manager password",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Action completed successfully."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/rotateVcenterPassword": {
      "post": {
        "operationId": "PrivateClouds_RotateVcenterPassword",
        "tags": [
          "PrivateClouds"
        ],
        "description": "Rotate the vCenter password",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Action completed successfully."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/scriptExecutions": {
      "get": {
        "operationId": "ScriptExecutions_List",
        "tags": [
          "ScriptExecutions"
        ],
        "description": "List ScriptExecution resources by PrivateCloud",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a ScriptExecution list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The ScriptExecution items on this page",
                  "items": {
                    "type": "object",
                    "description": "An instance of a script executed by a user - custom or AVS",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "scriptCmdletId": {
                            "type": "string",
                            "description": "A reference to the script cmdlet resource if user is running a AVS script"
                          },
                          "parameters": {
                            "type": "array",
                            "description": "Parameters the script will accept",
                            "items": {
                              "type": "object",
                              "description": "The arguments passed in to the execution",
                              "properties": {
                                "type": {
                                  "description": "script execution parameter type",
                                  "type": "string",
                                  "enum": [
                                    "Value",
                                    "SecureValue",
                                    "Credential"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ScriptExecutionParameterType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Value",
                                        "value": "Value"
                                      },
                                      {
                                        "name": "SecureValue",
                                        "value": "SecureValue"
                                      },
                                      {
                                        "name": "Credential",
                                        "value": "Credential"
                                      }
                                    ]
                                  }
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The parameter name"
                                }
                              },
                              "discriminator": "type",
                              "required": [
                                "type",
                                "name"
                              ]
                            },
                            "x-ms-identifiers": []
                          },
                          "hiddenParameters": {
                            "type": "array",
                            "description": "Parameters that will be hidden/not visible to ARM, such as passwords and\ncredentials",
                            "items": {
                              "type": "object",
                              "description": "The arguments passed in to the execution",
                              "properties": {
                                "type": {
                                  "description": "script execution parameter type",
                                  "type": "string",
                                  "enum": [
                                    "Value",
                                    "SecureValue",
                                    "Credential"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ScriptExecutionParameterType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Value",
                                        "value": "Value"
                                      },
                                      {
                                        "name": "SecureValue",
                                        "value": "SecureValue"
                                      },
                                      {
                                        "name": "Credential",
                                        "value": "Credential"
                                      }
                                    ]
                                  }
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The parameter name"
                                }
                              },
                              "discriminator": "type",
                              "required": [
                                "type",
                                "name"
                              ]
                            },
                            "x-ms-identifiers": []
                          },
                          "failureReason": {
                            "type": "string",
                            "description": "Error message if the script was able to run, but if the script itself had\nerrors or powershell threw an exception"
                          },
                          "timeout": {
                            "type": "string",
                            "description": "Time limit for execution"
                          },
                          "retention": {
                            "type": "string",
                            "description": "Time to live for the resource. If not provided, will be available for 60 days"
                          },
                          "submittedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Time the script execution was submitted",
                            "readOnly": true
                          },
                          "startedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Time the script execution was started",
                            "readOnly": true
                          },
                          "finishedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Time the script execution was finished",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "The state of the script execution resource",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Pending",
                              "Running",
                              "Cancelling",
                              "Cancelled",
                              "Deleting"
                            ],
                            "x-ms-enum": {
                              "name": "ScriptExecutionProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Pending",
                                  "value": "Pending",
                                  "description": "is pending"
                                },
                                {
                                  "name": "Running",
                                  "value": "Running",
                                  "description": "is running"
                                },
                                {
                                  "name": "Cancelling",
                                  "value": "Cancelling",
                                  "description": "is cancelling"
                                },
                                {
                                  "name": "Cancelled",
                                  "value": "Cancelled",
                                  "description": "is cancelled"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "is deleting"
                                }
                              ]
                            }
                          },
                          "output": {
                            "type": "array",
                            "description": "Standard output stream from the powershell execution",
                            "items": {
                              "type": "string"
                            }
                          },
                          "namedOutputs": {
                            "type": "object",
                            "description": "User-defined dictionary.",
                            "additionalProperties": {
                              "type": "object"
                            }
                          },
                          "information": {
                            "type": "array",
                            "description": "Standard information out stream from the powershell execution",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "warnings": {
                            "type": "array",
                            "description": "Standard warning out stream from the powershell execution",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "errors": {
                            "type": "array",
                            "description": "Standard error output stream from the powershell execution",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          }
                        },
                        "required": [
                          "timeout"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/scriptExecutions/{scriptExecutionName}": {
      "get": {
        "operationId": "ScriptExecutions_Get",
        "tags": [
          "ScriptExecutions"
        ],
        "description": "Get a ScriptExecution",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "scriptExecutionName",
            "in": "path",
            "description": "Name of the script cmdlet.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "An instance of a script executed by a user - custom or AVS",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "scriptCmdletId": {
                      "type": "string",
                      "description": "A reference to the script cmdlet resource if user is running a AVS script"
                    },
                    "parameters": {
                      "type": "array",
                      "description": "Parameters the script will accept",
                      "items": {
                        "type": "object",
                        "description": "The arguments passed in to the execution",
                        "properties": {
                          "type": {
                            "description": "script execution parameter type",
                            "type": "string",
                            "enum": [
                              "Value",
                              "SecureValue",
                              "Credential"
                            ],
                            "x-ms-enum": {
                              "name": "ScriptExecutionParameterType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Value",
                                  "value": "Value"
                                },
                                {
                                  "name": "SecureValue",
                                  "value": "SecureValue"
                                },
                                {
                                  "name": "Credential",
                                  "value": "Credential"
                                }
                              ]
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "The parameter name"
                          }
                        },
                        "discriminator": "type",
                        "required": [
                          "type",
                          "name"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "hiddenParameters": {
                      "type": "array",
                      "description": "Parameters that will be hidden/not visible to ARM, such as passwords and\ncredentials",
                      "items": {
                        "type": "object",
                        "description": "The arguments passed in to the execution",
                        "properties": {
                          "type": {
                            "description": "script execution parameter type",
                            "type": "string",
                            "enum": [
                              "Value",
                              "SecureValue",
                              "Credential"
                            ],
                            "x-ms-enum": {
                              "name": "ScriptExecutionParameterType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Value",
                                  "value": "Value"
                                },
                                {
                                  "name": "SecureValue",
                                  "value": "SecureValue"
                                },
                                {
                                  "name": "Credential",
                                  "value": "Credential"
                                }
                              ]
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "The parameter name"
                          }
                        },
                        "discriminator": "type",
                        "required": [
                          "type",
                          "name"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "failureReason": {
                      "type": "string",
                      "description": "Error message if the script was able to run, but if the script itself had\nerrors or powershell threw an exception"
                    },
                    "timeout": {
                      "type": "string",
                      "description": "Time limit for execution"
                    },
                    "retention": {
                      "type": "string",
                      "description": "Time to live for the resource. If not provided, will be available for 60 days"
                    },
                    "submittedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time the script execution was submitted",
                      "readOnly": true
                    },
                    "startedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time the script execution was started",
                      "readOnly": true
                    },
                    "finishedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time the script execution was finished",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "The state of the script execution resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Pending",
                        "Running",
                        "Cancelling",
                        "Cancelled",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ScriptExecutionProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Pending",
                            "value": "Pending",
                            "description": "is pending"
                          },
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "is running"
                          },
                          {
                            "name": "Cancelling",
                            "value": "Cancelling",
                            "description": "is cancelling"
                          },
                          {
                            "name": "Cancelled",
                            "value": "Cancelled",
                            "description": "is cancelled"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          }
                        ]
                      }
                    },
                    "output": {
                      "type": "array",
                      "description": "Standard output stream from the powershell execution",
                      "items": {
                        "type": "string"
                      }
                    },
                    "namedOutputs": {
                      "type": "object",
                      "description": "User-defined dictionary.",
                      "additionalProperties": {
                        "type": "object"
                      }
                    },
                    "information": {
                      "type": "array",
                      "description": "Standard information out stream from the powershell execution",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "warnings": {
                      "type": "array",
                      "description": "Standard warning out stream from the powershell execution",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "description": "Standard error output stream from the powershell execution",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "timeout"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "ScriptExecutions_CreateOrUpdate",
        "tags": [
          "ScriptExecutions"
        ],
        "description": "Create a ScriptExecution",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "scriptExecutionName",
            "in": "path",
            "description": "Name of the script cmdlet.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "scriptExecution",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "An instance of a script executed by a user - custom or AVS",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "scriptCmdletId": {
                      "type": "string",
                      "description": "A reference to the script cmdlet resource if user is running a AVS script"
                    },
                    "parameters": {
                      "type": "array",
                      "description": "Parameters the script will accept",
                      "items": {
                        "type": "object",
                        "description": "The arguments passed in to the execution",
                        "properties": {
                          "type": {
                            "description": "script execution parameter type",
                            "type": "string",
                            "enum": [
                              "Value",
                              "SecureValue",
                              "Credential"
                            ],
                            "x-ms-enum": {
                              "name": "ScriptExecutionParameterType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Value",
                                  "value": "Value"
                                },
                                {
                                  "name": "SecureValue",
                                  "value": "SecureValue"
                                },
                                {
                                  "name": "Credential",
                                  "value": "Credential"
                                }
                              ]
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "The parameter name"
                          }
                        },
                        "discriminator": "type",
                        "required": [
                          "type",
                          "name"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "hiddenParameters": {
                      "type": "array",
                      "description": "Parameters that will be hidden/not visible to ARM, such as passwords and\ncredentials",
                      "items": {
                        "type": "object",
                        "description": "The arguments passed in to the execution",
                        "properties": {
                          "type": {
                            "description": "script execution parameter type",
                            "type": "string",
                            "enum": [
                              "Value",
                              "SecureValue",
                              "Credential"
                            ],
                            "x-ms-enum": {
                              "name": "ScriptExecutionParameterType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Value",
                                  "value": "Value"
                                },
                                {
                                  "name": "SecureValue",
                                  "value": "SecureValue"
                                },
                                {
                                  "name": "Credential",
                                  "value": "Credential"
                                }
                              ]
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "The parameter name"
                          }
                        },
                        "discriminator": "type",
                        "required": [
                          "type",
                          "name"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "failureReason": {
                      "type": "string",
                      "description": "Error message if the script was able to run, but if the script itself had\nerrors or powershell threw an exception"
                    },
                    "timeout": {
                      "type": "string",
                      "description": "Time limit for execution"
                    },
                    "retention": {
                      "type": "string",
                      "description": "Time to live for the resource. If not provided, will be available for 60 days"
                    },
                    "submittedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time the script execution was submitted",
                      "readOnly": true
                    },
                    "startedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time the script execution was started",
                      "readOnly": true
                    },
                    "finishedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time the script execution was finished",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "The state of the script execution resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Pending",
                        "Running",
                        "Cancelling",
                        "Cancelled",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ScriptExecutionProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Pending",
                            "value": "Pending",
                            "description": "is pending"
                          },
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "is running"
                          },
                          {
                            "name": "Cancelling",
                            "value": "Cancelling",
                            "description": "is cancelling"
                          },
                          {
                            "name": "Cancelled",
                            "value": "Cancelled",
                            "description": "is cancelled"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          }
                        ]
                      }
                    },
                    "output": {
                      "type": "array",
                      "description": "Standard output stream from the powershell execution",
                      "items": {
                        "type": "string"
                      }
                    },
                    "namedOutputs": {
                      "type": "object",
                      "description": "User-defined dictionary.",
                      "additionalProperties": {
                        "type": "object"
                      }
                    },
                    "information": {
                      "type": "array",
                      "description": "Standard information out stream from the powershell execution",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "warnings": {
                      "type": "array",
                      "description": "Standard warning out stream from the powershell execution",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "description": "Standard error output stream from the powershell execution",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "timeout"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ScriptExecution' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "An instance of a script executed by a user - custom or AVS",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "scriptCmdletId": {
                      "type": "string",
                      "description": "A reference to the script cmdlet resource if user is running a AVS script"
                    },
                    "parameters": {
                      "type": "array",
                      "description": "Parameters the script will accept",
                      "items": {
                        "type": "object",
                        "description": "The arguments passed in to the execution",
                        "properties": {
                          "type": {
                            "description": "script execution parameter type",
                            "type": "string",
                            "enum": [
                              "Value",
                              "SecureValue",
                              "Credential"
                            ],
                            "x-ms-enum": {
                              "name": "ScriptExecutionParameterType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Value",
                                  "value": "Value"
                                },
                                {
                                  "name": "SecureValue",
                                  "value": "SecureValue"
                                },
                                {
                                  "name": "Credential",
                                  "value": "Credential"
                                }
                              ]
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "The parameter name"
                          }
                        },
                        "discriminator": "type",
                        "required": [
                          "type",
                          "name"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "hiddenParameters": {
                      "type": "array",
                      "description": "Parameters that will be hidden/not visible to ARM, such as passwords and\ncredentials",
                      "items": {
                        "type": "object",
                        "description": "The arguments passed in to the execution",
                        "properties": {
                          "type": {
                            "description": "script execution parameter type",
                            "type": "string",
                            "enum": [
                              "Value",
                              "SecureValue",
                              "Credential"
                            ],
                            "x-ms-enum": {
                              "name": "ScriptExecutionParameterType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Value",
                                  "value": "Value"
                                },
                                {
                                  "name": "SecureValue",
                                  "value": "SecureValue"
                                },
                                {
                                  "name": "Credential",
                                  "value": "Credential"
                                }
                              ]
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "The parameter name"
                          }
                        },
                        "discriminator": "type",
                        "required": [
                          "type",
                          "name"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "failureReason": {
                      "type": "string",
                      "description": "Error message if the script was able to run, but if the script itself had\nerrors or powershell threw an exception"
                    },
                    "timeout": {
                      "type": "string",
                      "description": "Time limit for execution"
                    },
                    "retention": {
                      "type": "string",
                      "description": "Time to live for the resource. If not provided, will be available for 60 days"
                    },
                    "submittedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time the script execution was submitted",
                      "readOnly": true
                    },
                    "startedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time the script execution was started",
                      "readOnly": true
                    },
                    "finishedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time the script execution was finished",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "The state of the script execution resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Pending",
                        "Running",
                        "Cancelling",
                        "Cancelled",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ScriptExecutionProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Pending",
                            "value": "Pending",
                            "description": "is pending"
                          },
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "is running"
                          },
                          {
                            "name": "Cancelling",
                            "value": "Cancelling",
                            "description": "is cancelling"
                          },
                          {
                            "name": "Cancelled",
                            "value": "Cancelled",
                            "description": "is cancelled"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          }
                        ]
                      }
                    },
                    "output": {
                      "type": "array",
                      "description": "Standard output stream from the powershell execution",
                      "items": {
                        "type": "string"
                      }
                    },
                    "namedOutputs": {
                      "type": "object",
                      "description": "User-defined dictionary.",
                      "additionalProperties": {
                        "type": "object"
                      }
                    },
                    "information": {
                      "type": "array",
                      "description": "Standard information out stream from the powershell execution",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "warnings": {
                      "type": "array",
                      "description": "Standard warning out stream from the powershell execution",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "description": "Standard error output stream from the powershell execution",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "timeout"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Resource 'ScriptExecution' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "An instance of a script executed by a user - custom or AVS",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "scriptCmdletId": {
                      "type": "string",
                      "description": "A reference to the script cmdlet resource if user is running a AVS script"
                    },
                    "parameters": {
                      "type": "array",
                      "description": "Parameters the script will accept",
                      "items": {
                        "type": "object",
                        "description": "The arguments passed in to the execution",
                        "properties": {
                          "type": {
                            "description": "script execution parameter type",
                            "type": "string",
                            "enum": [
                              "Value",
                              "SecureValue",
                              "Credential"
                            ],
                            "x-ms-enum": {
                              "name": "ScriptExecutionParameterType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Value",
                                  "value": "Value"
                                },
                                {
                                  "name": "SecureValue",
                                  "value": "SecureValue"
                                },
                                {
                                  "name": "Credential",
                                  "value": "Credential"
                                }
                              ]
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "The parameter name"
                          }
                        },
                        "discriminator": "type",
                        "required": [
                          "type",
                          "name"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "hiddenParameters": {
                      "type": "array",
                      "description": "Parameters that will be hidden/not visible to ARM, such as passwords and\ncredentials",
                      "items": {
                        "type": "object",
                        "description": "The arguments passed in to the execution",
                        "properties": {
                          "type": {
                            "description": "script execution parameter type",
                            "type": "string",
                            "enum": [
                              "Value",
                              "SecureValue",
                              "Credential"
                            ],
                            "x-ms-enum": {
                              "name": "ScriptExecutionParameterType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Value",
                                  "value": "Value"
                                },
                                {
                                  "name": "SecureValue",
                                  "value": "SecureValue"
                                },
                                {
                                  "name": "Credential",
                                  "value": "Credential"
                                }
                              ]
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "The parameter name"
                          }
                        },
                        "discriminator": "type",
                        "required": [
                          "type",
                          "name"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "failureReason": {
                      "type": "string",
                      "description": "Error message if the script was able to run, but if the script itself had\nerrors or powershell threw an exception"
                    },
                    "timeout": {
                      "type": "string",
                      "description": "Time limit for execution"
                    },
                    "retention": {
                      "type": "string",
                      "description": "Time to live for the resource. If not provided, will be available for 60 days"
                    },
                    "submittedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time the script execution was submitted",
                      "readOnly": true
                    },
                    "startedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time the script execution was started",
                      "readOnly": true
                    },
                    "finishedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time the script execution was finished",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "The state of the script execution resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Pending",
                        "Running",
                        "Cancelling",
                        "Cancelled",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ScriptExecutionProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Pending",
                            "value": "Pending",
                            "description": "is pending"
                          },
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "is running"
                          },
                          {
                            "name": "Cancelling",
                            "value": "Cancelling",
                            "description": "is cancelling"
                          },
                          {
                            "name": "Cancelled",
                            "value": "Cancelled",
                            "description": "is cancelled"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          }
                        ]
                      }
                    },
                    "output": {
                      "type": "array",
                      "description": "Standard output stream from the powershell execution",
                      "items": {
                        "type": "string"
                      }
                    },
                    "namedOutputs": {
                      "type": "object",
                      "description": "User-defined dictionary.",
                      "additionalProperties": {
                        "type": "object"
                      }
                    },
                    "information": {
                      "type": "array",
                      "description": "Standard information out stream from the powershell execution",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "warnings": {
                      "type": "array",
                      "description": "Standard warning out stream from the powershell execution",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "description": "Standard error output stream from the powershell execution",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "timeout"
                  ]
                }
              }
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "ScriptExecutions_Delete",
        "tags": [
          "ScriptExecutions"
        ],
        "description": "Delete a ScriptExecution",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "scriptExecutionName",
            "in": "path",
            "description": "Name of the script cmdlet.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/scriptExecutions/{scriptExecutionName}/getExecutionLogs": {
      "post": {
        "operationId": "ScriptExecutions_GetExecutionLogs",
        "tags": [
          "ScriptExecutions"
        ],
        "description": "Return the logs for a script execution resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "scriptExecutionName",
            "in": "path",
            "description": "Name of the script cmdlet.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "scriptOutputStreamType",
            "in": "body",
            "description": "Name of the desired output stream to return. If not provided, will return all. An empty array will return nothing.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "Script Output Stream type",
                "enum": [
                  "Information",
                  "Warning",
                  "Output",
                  "Error"
                ],
                "x-ms-enum": {
                  "name": "ScriptOutputStreamType",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Information",
                      "value": "Information",
                      "description": "is information"
                    },
                    {
                      "name": "Warning",
                      "value": "Warning",
                      "description": "is warning"
                    },
                    {
                      "name": "Output",
                      "value": "Output",
                      "description": "is output"
                    },
                    {
                      "name": "Error",
                      "value": "Error",
                      "description": "is error"
                    }
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "An instance of a script executed by a user - custom or AVS",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "scriptCmdletId": {
                      "type": "string",
                      "description": "A reference to the script cmdlet resource if user is running a AVS script"
                    },
                    "parameters": {
                      "type": "array",
                      "description": "Parameters the script will accept",
                      "items": {
                        "type": "object",
                        "description": "The arguments passed in to the execution",
                        "properties": {
                          "type": {
                            "description": "script execution parameter type",
                            "type": "string",
                            "enum": [
                              "Value",
                              "SecureValue",
                              "Credential"
                            ],
                            "x-ms-enum": {
                              "name": "ScriptExecutionParameterType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Value",
                                  "value": "Value"
                                },
                                {
                                  "name": "SecureValue",
                                  "value": "SecureValue"
                                },
                                {
                                  "name": "Credential",
                                  "value": "Credential"
                                }
                              ]
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "The parameter name"
                          }
                        },
                        "discriminator": "type",
                        "required": [
                          "type",
                          "name"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "hiddenParameters": {
                      "type": "array",
                      "description": "Parameters that will be hidden/not visible to ARM, such as passwords and\ncredentials",
                      "items": {
                        "type": "object",
                        "description": "The arguments passed in to the execution",
                        "properties": {
                          "type": {
                            "description": "script execution parameter type",
                            "type": "string",
                            "enum": [
                              "Value",
                              "SecureValue",
                              "Credential"
                            ],
                            "x-ms-enum": {
                              "name": "ScriptExecutionParameterType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Value",
                                  "value": "Value"
                                },
                                {
                                  "name": "SecureValue",
                                  "value": "SecureValue"
                                },
                                {
                                  "name": "Credential",
                                  "value": "Credential"
                                }
                              ]
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "The parameter name"
                          }
                        },
                        "discriminator": "type",
                        "required": [
                          "type",
                          "name"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "failureReason": {
                      "type": "string",
                      "description": "Error message if the script was able to run, but if the script itself had\nerrors or powershell threw an exception"
                    },
                    "timeout": {
                      "type": "string",
                      "description": "Time limit for execution"
                    },
                    "retention": {
                      "type": "string",
                      "description": "Time to live for the resource. If not provided, will be available for 60 days"
                    },
                    "submittedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time the script execution was submitted",
                      "readOnly": true
                    },
                    "startedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time the script execution was started",
                      "readOnly": true
                    },
                    "finishedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time the script execution was finished",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "The state of the script execution resource",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Pending",
                        "Running",
                        "Cancelling",
                        "Cancelled",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "ScriptExecutionProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Pending",
                            "value": "Pending",
                            "description": "is pending"
                          },
                          {
                            "name": "Running",
                            "value": "Running",
                            "description": "is running"
                          },
                          {
                            "name": "Cancelling",
                            "value": "Cancelling",
                            "description": "is cancelling"
                          },
                          {
                            "name": "Cancelled",
                            "value": "Cancelled",
                            "description": "is cancelled"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          }
                        ]
                      }
                    },
                    "output": {
                      "type": "array",
                      "description": "Standard output stream from the powershell execution",
                      "items": {
                        "type": "string"
                      }
                    },
                    "namedOutputs": {
                      "type": "object",
                      "description": "User-defined dictionary.",
                      "additionalProperties": {
                        "type": "object"
                      }
                    },
                    "information": {
                      "type": "array",
                      "description": "Standard information out stream from the powershell execution",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "warnings": {
                      "type": "array",
                      "description": "Standard warning out stream from the powershell execution",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "description": "Standard error output stream from the powershell execution",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "timeout"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/scriptPackages": {
      "get": {
        "operationId": "ScriptPackages_List",
        "tags": [
          "ScriptPackages"
        ],
        "description": "List ScriptPackage resources by PrivateCloud",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a ScriptPackage list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The ScriptPackage items on this page",
                  "items": {
                    "type": "object",
                    "description": "Script Package resources available for execution",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "The provisioning state of the resource.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled"
                            ],
                            "x-ms-enum": {
                              "name": "ScriptPackageProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                }
                              ]
                            }
                          },
                          "description": {
                            "type": "string",
                            "description": "User friendly description of the package",
                            "readOnly": true
                          },
                          "version": {
                            "type": "string",
                            "description": "Module version",
                            "readOnly": true
                          },
                          "company": {
                            "type": "string",
                            "description": "Company that created and supports the package",
                            "readOnly": true
                          },
                          "uri": {
                            "type": "string",
                            "description": "Link to support by the package vendor",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/scriptPackages/{scriptPackageName}": {
      "get": {
        "operationId": "ScriptPackages_Get",
        "tags": [
          "ScriptPackages"
        ],
        "description": "Get a ScriptPackage",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "scriptPackageName",
            "in": "path",
            "description": "Name of the script package.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._@]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Script Package resources available for execution",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ScriptPackageProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          }
                        ]
                      }
                    },
                    "description": {
                      "type": "string",
                      "description": "User friendly description of the package",
                      "readOnly": true
                    },
                    "version": {
                      "type": "string",
                      "description": "Module version",
                      "readOnly": true
                    },
                    "company": {
                      "type": "string",
                      "description": "Company that created and supports the package",
                      "readOnly": true
                    },
                    "uri": {
                      "type": "string",
                      "description": "Link to support by the package vendor",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/scriptPackages/{scriptPackageName}/scriptCmdlets": {
      "get": {
        "operationId": "ScriptCmdlets_List",
        "tags": [
          "ScriptCmdlets"
        ],
        "description": "List ScriptCmdlet resources by ScriptPackage",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "scriptPackageName",
            "in": "path",
            "description": "Name of the script package.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._@]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a ScriptCmdlet list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The ScriptCmdlet items on this page",
                  "items": {
                    "type": "object",
                    "description": "A cmdlet available for script execution",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "The provisioning state of the resource.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled"
                            ],
                            "x-ms-enum": {
                              "name": "ScriptCmdletProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                }
                              ]
                            }
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of the scripts functionality",
                            "readOnly": true
                          },
                          "timeout": {
                            "type": "string",
                            "description": "Recommended time limit for execution",
                            "readOnly": true
                          },
                          "audience": {
                            "description": "Specifies whether a script cmdlet is intended to be invoked only through automation or visible to customers",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Automation",
                              "Any"
                            ],
                            "x-ms-enum": {
                              "name": "ScriptCmdletAudience",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Automation",
                                  "value": "Automation",
                                  "description": "is automation"
                                },
                                {
                                  "name": "Any",
                                  "value": "Any",
                                  "description": "is any"
                                }
                              ]
                            }
                          },
                          "parameters": {
                            "type": "array",
                            "description": "Parameters the script will accept",
                            "items": {
                              "type": "object",
                              "description": "An parameter that the script will accept",
                              "properties": {
                                "type": {
                                  "description": "The type of parameter the script is expecting. psCredential is a\nPSCredentialObject",
                                  "readOnly": true,
                                  "type": "string",
                                  "enum": [
                                    "String",
                                    "SecureString",
                                    "Credential",
                                    "Int",
                                    "Bool",
                                    "Float"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ScriptParameterTypes",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "String",
                                        "value": "String",
                                        "description": "is string"
                                      },
                                      {
                                        "name": "SecureString",
                                        "value": "SecureString",
                                        "description": "is secure string"
                                      },
                                      {
                                        "name": "Credential",
                                        "value": "Credential",
                                        "description": "is credential"
                                      },
                                      {
                                        "name": "Int",
                                        "value": "Int",
                                        "description": "is int"
                                      },
                                      {
                                        "name": "Bool",
                                        "value": "Bool",
                                        "description": "is bool"
                                      },
                                      {
                                        "name": "Float",
                                        "value": "Float",
                                        "description": "is float"
                                      }
                                    ]
                                  }
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The parameter name that the script will expect a parameter value for"
                                },
                                "description": {
                                  "type": "string",
                                  "description": "User friendly description of the parameter",
                                  "readOnly": true
                                },
                                "visibility": {
                                  "description": "Should this parameter be visible to arm and passed in the parameters argument\nwhen executing",
                                  "readOnly": true,
                                  "type": "string",
                                  "enum": [
                                    "Visible",
                                    "Hidden"
                                  ],
                                  "x-ms-enum": {
                                    "name": "VisibilityParameterEnum",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Visible",
                                        "value": "Visible",
                                        "description": "is visible"
                                      },
                                      {
                                        "name": "Hidden",
                                        "value": "Hidden",
                                        "description": "is hidden"
                                      }
                                    ]
                                  }
                                },
                                "optional": {
                                  "description": "Is this parameter required or optional",
                                  "readOnly": true,
                                  "type": "string",
                                  "enum": [
                                    "Optional",
                                    "Required"
                                  ],
                                  "x-ms-enum": {
                                    "name": "OptionalParamEnum",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Optional",
                                        "value": "Optional",
                                        "description": "is optional"
                                      },
                                      {
                                        "name": "Required",
                                        "value": "Required",
                                        "description": "is required"
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "readOnly": true,
                            "x-ms-identifiers": []
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/scriptPackages/{scriptPackageName}/scriptCmdlets/{scriptCmdletName}": {
      "get": {
        "operationId": "ScriptCmdlets_Get",
        "tags": [
          "ScriptCmdlets"
        ],
        "description": "Get a ScriptCmdlet",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "scriptPackageName",
            "in": "path",
            "description": "Name of the script package.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._@]+$"
          },
          {
            "name": "scriptCmdletName",
            "in": "path",
            "description": "Name of the script cmdlet.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A cmdlet available for script execution",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ScriptCmdletProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          }
                        ]
                      }
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the scripts functionality",
                      "readOnly": true
                    },
                    "timeout": {
                      "type": "string",
                      "description": "Recommended time limit for execution",
                      "readOnly": true
                    },
                    "audience": {
                      "description": "Specifies whether a script cmdlet is intended to be invoked only through automation or visible to customers",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Automation",
                        "Any"
                      ],
                      "x-ms-enum": {
                        "name": "ScriptCmdletAudience",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Automation",
                            "value": "Automation",
                            "description": "is automation"
                          },
                          {
                            "name": "Any",
                            "value": "Any",
                            "description": "is any"
                          }
                        ]
                      }
                    },
                    "parameters": {
                      "type": "array",
                      "description": "Parameters the script will accept",
                      "items": {
                        "type": "object",
                        "description": "An parameter that the script will accept",
                        "properties": {
                          "type": {
                            "description": "The type of parameter the script is expecting. psCredential is a\nPSCredentialObject",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "String",
                              "SecureString",
                              "Credential",
                              "Int",
                              "Bool",
                              "Float"
                            ],
                            "x-ms-enum": {
                              "name": "ScriptParameterTypes",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "String",
                                  "value": "String",
                                  "description": "is string"
                                },
                                {
                                  "name": "SecureString",
                                  "value": "SecureString",
                                  "description": "is secure string"
                                },
                                {
                                  "name": "Credential",
                                  "value": "Credential",
                                  "description": "is credential"
                                },
                                {
                                  "name": "Int",
                                  "value": "Int",
                                  "description": "is int"
                                },
                                {
                                  "name": "Bool",
                                  "value": "Bool",
                                  "description": "is bool"
                                },
                                {
                                  "name": "Float",
                                  "value": "Float",
                                  "description": "is float"
                                }
                              ]
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "The parameter name that the script will expect a parameter value for"
                          },
                          "description": {
                            "type": "string",
                            "description": "User friendly description of the parameter",
                            "readOnly": true
                          },
                          "visibility": {
                            "description": "Should this parameter be visible to arm and passed in the parameters argument\nwhen executing",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Visible",
                              "Hidden"
                            ],
                            "x-ms-enum": {
                              "name": "VisibilityParameterEnum",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Visible",
                                  "value": "Visible",
                                  "description": "is visible"
                                },
                                {
                                  "name": "Hidden",
                                  "value": "Hidden",
                                  "description": "is hidden"
                                }
                              ]
                            }
                          },
                          "optional": {
                            "description": "Is this parameter required or optional",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Optional",
                              "Required"
                            ],
                            "x-ms-enum": {
                              "name": "OptionalParamEnum",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Optional",
                                  "value": "Optional",
                                  "description": "is optional"
                                },
                                {
                                  "name": "Required",
                                  "value": "Required",
                                  "description": "is required"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": []
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks": {
      "get": {
        "operationId": "WorkloadNetworks_List",
        "tags": [
          "WorkloadNetworks"
        ],
        "description": "List WorkloadNetwork resources by PrivateCloud",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a WorkloadNetwork list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The WorkloadNetwork items on this page",
                  "items": {
                    "type": "object",
                    "description": "Workload Network",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "The provisioning state of the resource.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Building",
                              "Deleting",
                              "Updating"
                            ],
                            "x-ms-enum": {
                              "name": "WorkloadNetworkProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Building",
                                  "value": "Building",
                                  "description": "is building"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "is deleting"
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "is updating"
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default": {
      "get": {
        "operationId": "WorkloadNetworks_Get",
        "tags": [
          "WorkloadNetworks"
        ],
        "description": "Get a WorkloadNetwork",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Workload Network",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "WorkloadNetworkProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/dhcpConfigurations": {
      "get": {
        "operationId": "WorkloadNetworks_ListDhcp",
        "description": "List WorkloadNetworkDhcp resources by WorkloadNetwork",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a WorkloadNetworkDhcp list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The WorkloadNetworkDhcp items on this page",
                  "items": {
                    "type": "object",
                    "description": "NSX DHCP",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "dhcpType": {
                            "description": "Type of DHCP: SERVER or RELAY.",
                            "type": "string",
                            "enum": [
                              "SERVER",
                              "RELAY"
                            ],
                            "x-ms-enum": {
                              "name": "DhcpTypeEnum",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "SERVER",
                                  "value": "SERVER"
                                },
                                {
                                  "name": "RELAY",
                                  "value": "RELAY"
                                }
                              ]
                            }
                          },
                          "displayName": {
                            "type": "string",
                            "description": "Display name of the DHCP entity."
                          },
                          "segments": {
                            "type": "array",
                            "description": "NSX Segments consuming DHCP.",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "The provisioning state",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Building",
                              "Deleting",
                              "Updating"
                            ],
                            "x-ms-enum": {
                              "name": "WorkloadNetworkDhcpProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Building",
                                  "value": "Building",
                                  "description": "is building"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "is deleting"
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "is updating"
                                }
                              ]
                            }
                          },
                          "revision": {
                            "type": "integer",
                            "format": "int64",
                            "description": "NSX revision number."
                          }
                        },
                        "discriminator": "dhcpType",
                        "required": [
                          "dhcpType"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/dhcpConfigurations/{dhcpId}": {
      "get": {
        "operationId": "WorkloadNetworks_GetDhcp",
        "description": "Get a WorkloadNetworkDhcp",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "dhcpId",
            "in": "path",
            "description": "The ID of the DHCP configuration",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "NSX DHCP",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "dhcpType": {
                      "description": "Type of DHCP: SERVER or RELAY.",
                      "type": "string",
                      "enum": [
                        "SERVER",
                        "RELAY"
                      ],
                      "x-ms-enum": {
                        "name": "DhcpTypeEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "SERVER",
                            "value": "SERVER"
                          },
                          {
                            "name": "RELAY",
                            "value": "RELAY"
                          }
                        ]
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the DHCP entity."
                    },
                    "segments": {
                      "type": "array",
                      "description": "NSX Segments consuming DHCP.",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "WorkloadNetworkDhcpProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "revision": {
                      "type": "integer",
                      "format": "int64",
                      "description": "NSX revision number."
                    }
                  },
                  "discriminator": "dhcpType",
                  "required": [
                    "dhcpType"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "WorkloadNetworks_CreateDhcp",
        "description": "Create a WorkloadNetworkDhcp",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "dhcpId",
            "in": "path",
            "description": "The ID of the DHCP configuration",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "workloadNetworkDhcp",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "NSX DHCP",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "dhcpType": {
                      "description": "Type of DHCP: SERVER or RELAY.",
                      "type": "string",
                      "enum": [
                        "SERVER",
                        "RELAY"
                      ],
                      "x-ms-enum": {
                        "name": "DhcpTypeEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "SERVER",
                            "value": "SERVER"
                          },
                          {
                            "name": "RELAY",
                            "value": "RELAY"
                          }
                        ]
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the DHCP entity."
                    },
                    "segments": {
                      "type": "array",
                      "description": "NSX Segments consuming DHCP.",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "WorkloadNetworkDhcpProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "revision": {
                      "type": "integer",
                      "format": "int64",
                      "description": "NSX revision number."
                    }
                  },
                  "discriminator": "dhcpType",
                  "required": [
                    "dhcpType"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'WorkloadNetworkDhcp' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "NSX DHCP",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "dhcpType": {
                      "description": "Type of DHCP: SERVER or RELAY.",
                      "type": "string",
                      "enum": [
                        "SERVER",
                        "RELAY"
                      ],
                      "x-ms-enum": {
                        "name": "DhcpTypeEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "SERVER",
                            "value": "SERVER"
                          },
                          {
                            "name": "RELAY",
                            "value": "RELAY"
                          }
                        ]
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the DHCP entity."
                    },
                    "segments": {
                      "type": "array",
                      "description": "NSX Segments consuming DHCP.",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "WorkloadNetworkDhcpProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "revision": {
                      "type": "integer",
                      "format": "int64",
                      "description": "NSX revision number."
                    }
                  },
                  "discriminator": "dhcpType",
                  "required": [
                    "dhcpType"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Resource 'WorkloadNetworkDhcp' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "NSX DHCP",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "dhcpType": {
                      "description": "Type of DHCP: SERVER or RELAY.",
                      "type": "string",
                      "enum": [
                        "SERVER",
                        "RELAY"
                      ],
                      "x-ms-enum": {
                        "name": "DhcpTypeEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "SERVER",
                            "value": "SERVER"
                          },
                          {
                            "name": "RELAY",
                            "value": "RELAY"
                          }
                        ]
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the DHCP entity."
                    },
                    "segments": {
                      "type": "array",
                      "description": "NSX Segments consuming DHCP.",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "WorkloadNetworkDhcpProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "revision": {
                      "type": "integer",
                      "format": "int64",
                      "description": "NSX revision number."
                    }
                  },
                  "discriminator": "dhcpType",
                  "required": [
                    "dhcpType"
                  ]
                }
              }
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "WorkloadNetworks_UpdateDhcp",
        "description": "Update a WorkloadNetworkDhcp",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "dhcpId",
            "in": "path",
            "description": "The ID of the DHCP configuration",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "workloadNetworkDhcp",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "NSX DHCP",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "dhcpType": {
                      "description": "Type of DHCP: SERVER or RELAY.",
                      "type": "string",
                      "enum": [
                        "SERVER",
                        "RELAY"
                      ],
                      "x-ms-enum": {
                        "name": "DhcpTypeEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "SERVER",
                            "value": "SERVER"
                          },
                          {
                            "name": "RELAY",
                            "value": "RELAY"
                          }
                        ]
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the DHCP entity."
                    },
                    "segments": {
                      "type": "array",
                      "description": "NSX Segments consuming DHCP.",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "WorkloadNetworkDhcpProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "revision": {
                      "type": "integer",
                      "format": "int64",
                      "description": "NSX revision number."
                    }
                  },
                  "discriminator": "dhcpType",
                  "required": [
                    "dhcpType"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "NSX DHCP",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "dhcpType": {
                      "description": "Type of DHCP: SERVER or RELAY.",
                      "type": "string",
                      "enum": [
                        "SERVER",
                        "RELAY"
                      ],
                      "x-ms-enum": {
                        "name": "DhcpTypeEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "SERVER",
                            "value": "SERVER"
                          },
                          {
                            "name": "RELAY",
                            "value": "RELAY"
                          }
                        ]
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the DHCP entity."
                    },
                    "segments": {
                      "type": "array",
                      "description": "NSX Segments consuming DHCP.",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "WorkloadNetworkDhcpProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "revision": {
                      "type": "integer",
                      "format": "int64",
                      "description": "NSX revision number."
                    }
                  },
                  "discriminator": "dhcpType",
                  "required": [
                    "dhcpType"
                  ]
                }
              }
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "WorkloadNetworks_DeleteDhcp",
        "description": "Delete a WorkloadNetworkDhcp",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "dhcpId",
            "in": "path",
            "description": "The ID of the DHCP configuration",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/dnsServices": {
      "get": {
        "operationId": "WorkloadNetworks_ListDnsServices",
        "description": "List WorkloadNetworkDnsService resources by WorkloadNetwork",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a WorkloadNetworkDnsService list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The WorkloadNetworkDnsService items on this page",
                  "items": {
                    "type": "object",
                    "description": "NSX DNS Service",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "displayName": {
                            "type": "string",
                            "description": "Display name of the DNS Service."
                          },
                          "dnsServiceIp": {
                            "type": "string",
                            "description": "DNS service IP of the DNS Service."
                          },
                          "defaultDnsZone": {
                            "type": "string",
                            "description": "Default DNS zone of the DNS Service."
                          },
                          "fqdnZones": {
                            "type": "array",
                            "description": "FQDN zones of the DNS Service.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "logLevel": {
                            "description": "DNS Service log level.",
                            "type": "string",
                            "enum": [
                              "DEBUG",
                              "INFO",
                              "WARNING",
                              "ERROR",
                              "FATAL"
                            ],
                            "x-ms-enum": {
                              "name": "DnsServiceLogLevelEnum",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "DEBUG",
                                  "value": "DEBUG",
                                  "description": "is debug"
                                },
                                {
                                  "name": "INFO",
                                  "value": "INFO",
                                  "description": "is info"
                                },
                                {
                                  "name": "WARNING",
                                  "value": "WARNING",
                                  "description": "is warning"
                                },
                                {
                                  "name": "ERROR",
                                  "value": "ERROR",
                                  "description": "is error"
                                },
                                {
                                  "name": "FATAL",
                                  "value": "FATAL",
                                  "description": "is fatal"
                                }
                              ]
                            }
                          },
                          "status": {
                            "description": "DNS Service status.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "SUCCESS",
                              "FAILURE"
                            ],
                            "x-ms-enum": {
                              "name": "DnsServiceStatusEnum",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "SUCCESS",
                                  "value": "SUCCESS",
                                  "description": "is success"
                                },
                                {
                                  "name": "FAILURE",
                                  "value": "FAILURE",
                                  "description": "is failure"
                                }
                              ]
                            }
                          },
                          "provisioningState": {
                            "description": "The provisioning state",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Building",
                              "Deleting",
                              "Updating"
                            ],
                            "x-ms-enum": {
                              "name": "WorkloadNetworkDnsServiceProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Building",
                                  "value": "Building",
                                  "description": "is building"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "is deleting"
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "is updating"
                                }
                              ]
                            }
                          },
                          "revision": {
                            "type": "integer",
                            "format": "int64",
                            "description": "NSX revision number."
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/dnsServices/{dnsServiceId}": {
      "get": {
        "operationId": "WorkloadNetworks_GetDnsService",
        "description": "Get a WorkloadNetworkDnsService",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "dnsServiceId",
            "in": "path",
            "description": "ID of the DNS service.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "NSX DNS Service",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the DNS Service."
                    },
                    "dnsServiceIp": {
                      "type": "string",
                      "description": "DNS service IP of the DNS Service."
                    },
                    "defaultDnsZone": {
                      "type": "string",
                      "description": "Default DNS zone of the DNS Service."
                    },
                    "fqdnZones": {
                      "type": "array",
                      "description": "FQDN zones of the DNS Service.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "logLevel": {
                      "description": "DNS Service log level.",
                      "type": "string",
                      "enum": [
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "FATAL"
                      ],
                      "x-ms-enum": {
                        "name": "DnsServiceLogLevelEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "DEBUG",
                            "value": "DEBUG",
                            "description": "is debug"
                          },
                          {
                            "name": "INFO",
                            "value": "INFO",
                            "description": "is info"
                          },
                          {
                            "name": "WARNING",
                            "value": "WARNING",
                            "description": "is warning"
                          },
                          {
                            "name": "ERROR",
                            "value": "ERROR",
                            "description": "is error"
                          },
                          {
                            "name": "FATAL",
                            "value": "FATAL",
                            "description": "is fatal"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "DNS Service status.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "SUCCESS",
                        "FAILURE"
                      ],
                      "x-ms-enum": {
                        "name": "DnsServiceStatusEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "SUCCESS",
                            "value": "SUCCESS",
                            "description": "is success"
                          },
                          {
                            "name": "FAILURE",
                            "value": "FAILURE",
                            "description": "is failure"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "WorkloadNetworkDnsServiceProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "revision": {
                      "type": "integer",
                      "format": "int64",
                      "description": "NSX revision number."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "WorkloadNetworks_CreateDnsService",
        "description": "Create a WorkloadNetworkDnsService",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "dnsServiceId",
            "in": "path",
            "description": "ID of the DNS service.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "workloadNetworkDnsService",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "NSX DNS Service",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the DNS Service."
                    },
                    "dnsServiceIp": {
                      "type": "string",
                      "description": "DNS service IP of the DNS Service."
                    },
                    "defaultDnsZone": {
                      "type": "string",
                      "description": "Default DNS zone of the DNS Service."
                    },
                    "fqdnZones": {
                      "type": "array",
                      "description": "FQDN zones of the DNS Service.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "logLevel": {
                      "description": "DNS Service log level.",
                      "type": "string",
                      "enum": [
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "FATAL"
                      ],
                      "x-ms-enum": {
                        "name": "DnsServiceLogLevelEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "DEBUG",
                            "value": "DEBUG",
                            "description": "is debug"
                          },
                          {
                            "name": "INFO",
                            "value": "INFO",
                            "description": "is info"
                          },
                          {
                            "name": "WARNING",
                            "value": "WARNING",
                            "description": "is warning"
                          },
                          {
                            "name": "ERROR",
                            "value": "ERROR",
                            "description": "is error"
                          },
                          {
                            "name": "FATAL",
                            "value": "FATAL",
                            "description": "is fatal"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "DNS Service status.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "SUCCESS",
                        "FAILURE"
                      ],
                      "x-ms-enum": {
                        "name": "DnsServiceStatusEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "SUCCESS",
                            "value": "SUCCESS",
                            "description": "is success"
                          },
                          {
                            "name": "FAILURE",
                            "value": "FAILURE",
                            "description": "is failure"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "WorkloadNetworkDnsServiceProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "revision": {
                      "type": "integer",
                      "format": "int64",
                      "description": "NSX revision number."
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'WorkloadNetworkDnsService' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "NSX DNS Service",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the DNS Service."
                    },
                    "dnsServiceIp": {
                      "type": "string",
                      "description": "DNS service IP of the DNS Service."
                    },
                    "defaultDnsZone": {
                      "type": "string",
                      "description": "Default DNS zone of the DNS Service."
                    },
                    "fqdnZones": {
                      "type": "array",
                      "description": "FQDN zones of the DNS Service.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "logLevel": {
                      "description": "DNS Service log level.",
                      "type": "string",
                      "enum": [
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "FATAL"
                      ],
                      "x-ms-enum": {
                        "name": "DnsServiceLogLevelEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "DEBUG",
                            "value": "DEBUG",
                            "description": "is debug"
                          },
                          {
                            "name": "INFO",
                            "value": "INFO",
                            "description": "is info"
                          },
                          {
                            "name": "WARNING",
                            "value": "WARNING",
                            "description": "is warning"
                          },
                          {
                            "name": "ERROR",
                            "value": "ERROR",
                            "description": "is error"
                          },
                          {
                            "name": "FATAL",
                            "value": "FATAL",
                            "description": "is fatal"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "DNS Service status.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "SUCCESS",
                        "FAILURE"
                      ],
                      "x-ms-enum": {
                        "name": "DnsServiceStatusEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "SUCCESS",
                            "value": "SUCCESS",
                            "description": "is success"
                          },
                          {
                            "name": "FAILURE",
                            "value": "FAILURE",
                            "description": "is failure"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "WorkloadNetworkDnsServiceProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "revision": {
                      "type": "integer",
                      "format": "int64",
                      "description": "NSX revision number."
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource 'WorkloadNetworkDnsService' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "NSX DNS Service",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the DNS Service."
                    },
                    "dnsServiceIp": {
                      "type": "string",
                      "description": "DNS service IP of the DNS Service."
                    },
                    "defaultDnsZone": {
                      "type": "string",
                      "description": "Default DNS zone of the DNS Service."
                    },
                    "fqdnZones": {
                      "type": "array",
                      "description": "FQDN zones of the DNS Service.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "logLevel": {
                      "description": "DNS Service log level.",
                      "type": "string",
                      "enum": [
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "FATAL"
                      ],
                      "x-ms-enum": {
                        "name": "DnsServiceLogLevelEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "DEBUG",
                            "value": "DEBUG",
                            "description": "is debug"
                          },
                          {
                            "name": "INFO",
                            "value": "INFO",
                            "description": "is info"
                          },
                          {
                            "name": "WARNING",
                            "value": "WARNING",
                            "description": "is warning"
                          },
                          {
                            "name": "ERROR",
                            "value": "ERROR",
                            "description": "is error"
                          },
                          {
                            "name": "FATAL",
                            "value": "FATAL",
                            "description": "is fatal"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "DNS Service status.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "SUCCESS",
                        "FAILURE"
                      ],
                      "x-ms-enum": {
                        "name": "DnsServiceStatusEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "SUCCESS",
                            "value": "SUCCESS",
                            "description": "is success"
                          },
                          {
                            "name": "FAILURE",
                            "value": "FAILURE",
                            "description": "is failure"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "WorkloadNetworkDnsServiceProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "revision": {
                      "type": "integer",
                      "format": "int64",
                      "description": "NSX revision number."
                    }
                  }
                }
              }
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "WorkloadNetworks_UpdateDnsService",
        "description": "Update a WorkloadNetworkDnsService",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "dnsServiceId",
            "in": "path",
            "description": "ID of the DNS service.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "workloadNetworkDnsService",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "NSX DNS Service",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the DNS Service."
                    },
                    "dnsServiceIp": {
                      "type": "string",
                      "description": "DNS service IP of the DNS Service."
                    },
                    "defaultDnsZone": {
                      "type": "string",
                      "description": "Default DNS zone of the DNS Service."
                    },
                    "fqdnZones": {
                      "type": "array",
                      "description": "FQDN zones of the DNS Service.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "logLevel": {
                      "description": "DNS Service log level.",
                      "type": "string",
                      "enum": [
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "FATAL"
                      ],
                      "x-ms-enum": {
                        "name": "DnsServiceLogLevelEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "DEBUG",
                            "value": "DEBUG",
                            "description": "is debug"
                          },
                          {
                            "name": "INFO",
                            "value": "INFO",
                            "description": "is info"
                          },
                          {
                            "name": "WARNING",
                            "value": "WARNING",
                            "description": "is warning"
                          },
                          {
                            "name": "ERROR",
                            "value": "ERROR",
                            "description": "is error"
                          },
                          {
                            "name": "FATAL",
                            "value": "FATAL",
                            "description": "is fatal"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "DNS Service status.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "SUCCESS",
                        "FAILURE"
                      ],
                      "x-ms-enum": {
                        "name": "DnsServiceStatusEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "SUCCESS",
                            "value": "SUCCESS",
                            "description": "is success"
                          },
                          {
                            "name": "FAILURE",
                            "value": "FAILURE",
                            "description": "is failure"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "WorkloadNetworkDnsServiceProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "revision": {
                      "type": "integer",
                      "format": "int64",
                      "description": "NSX revision number."
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "NSX DNS Service",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the DNS Service."
                    },
                    "dnsServiceIp": {
                      "type": "string",
                      "description": "DNS service IP of the DNS Service."
                    },
                    "defaultDnsZone": {
                      "type": "string",
                      "description": "Default DNS zone of the DNS Service."
                    },
                    "fqdnZones": {
                      "type": "array",
                      "description": "FQDN zones of the DNS Service.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "logLevel": {
                      "description": "DNS Service log level.",
                      "type": "string",
                      "enum": [
                        "DEBUG",
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "FATAL"
                      ],
                      "x-ms-enum": {
                        "name": "DnsServiceLogLevelEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "DEBUG",
                            "value": "DEBUG",
                            "description": "is debug"
                          },
                          {
                            "name": "INFO",
                            "value": "INFO",
                            "description": "is info"
                          },
                          {
                            "name": "WARNING",
                            "value": "WARNING",
                            "description": "is warning"
                          },
                          {
                            "name": "ERROR",
                            "value": "ERROR",
                            "description": "is error"
                          },
                          {
                            "name": "FATAL",
                            "value": "FATAL",
                            "description": "is fatal"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "DNS Service status.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "SUCCESS",
                        "FAILURE"
                      ],
                      "x-ms-enum": {
                        "name": "DnsServiceStatusEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "SUCCESS",
                            "value": "SUCCESS",
                            "description": "is success"
                          },
                          {
                            "name": "FAILURE",
                            "value": "FAILURE",
                            "description": "is failure"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "WorkloadNetworkDnsServiceProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "revision": {
                      "type": "integer",
                      "format": "int64",
                      "description": "NSX revision number."
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "WorkloadNetworks_DeleteDnsService",
        "description": "Delete a WorkloadNetworkDnsService",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "dnsServiceId",
            "in": "path",
            "description": "ID of the DNS service.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/dnsZones": {
      "get": {
        "operationId": "WorkloadNetworks_ListDnsZones",
        "description": "List WorkloadNetworkDnsZone resources by WorkloadNetwork",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a WorkloadNetworkDnsZone list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The WorkloadNetworkDnsZone items on this page",
                  "items": {
                    "type": "object",
                    "description": "NSX DNS Zone",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "displayName": {
                            "type": "string",
                            "description": "Display name of the DNS Zone."
                          },
                          "domain": {
                            "type": "array",
                            "description": "Domain names of the DNS Zone.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "dnsServerIps": {
                            "type": "array",
                            "description": "DNS Server IP array of the DNS Zone.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "sourceIp": {
                            "type": "string",
                            "description": "Source IP of the DNS Zone."
                          },
                          "dnsServices": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Number of DNS Services using the DNS zone."
                          },
                          "provisioningState": {
                            "description": "The provisioning state",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Building",
                              "Deleting",
                              "Updating"
                            ],
                            "x-ms-enum": {
                              "name": "WorkloadNetworkDnsZoneProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Building",
                                  "value": "Building",
                                  "description": "is building"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "is deleting"
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "is updating"
                                }
                              ]
                            }
                          },
                          "revision": {
                            "type": "integer",
                            "format": "int64",
                            "description": "NSX revision number."
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/dnsZones/{dnsZoneId}": {
      "get": {
        "operationId": "WorkloadNetworks_GetDnsZone",
        "description": "Get a WorkloadNetworkDnsZone",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "dnsZoneId",
            "in": "path",
            "description": "ID of the DNS zone.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "NSX DNS Zone",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the DNS Zone."
                    },
                    "domain": {
                      "type": "array",
                      "description": "Domain names of the DNS Zone.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "dnsServerIps": {
                      "type": "array",
                      "description": "DNS Server IP array of the DNS Zone.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "sourceIp": {
                      "type": "string",
                      "description": "Source IP of the DNS Zone."
                    },
                    "dnsServices": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Number of DNS Services using the DNS zone."
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "WorkloadNetworkDnsZoneProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "revision": {
                      "type": "integer",
                      "format": "int64",
                      "description": "NSX revision number."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "WorkloadNetworks_CreateDnsZone",
        "description": "Create a WorkloadNetworkDnsZone",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "dnsZoneId",
            "in": "path",
            "description": "ID of the DNS zone.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "workloadNetworkDnsZone",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "NSX DNS Zone",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the DNS Zone."
                    },
                    "domain": {
                      "type": "array",
                      "description": "Domain names of the DNS Zone.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "dnsServerIps": {
                      "type": "array",
                      "description": "DNS Server IP array of the DNS Zone.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "sourceIp": {
                      "type": "string",
                      "description": "Source IP of the DNS Zone."
                    },
                    "dnsServices": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Number of DNS Services using the DNS zone."
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "WorkloadNetworkDnsZoneProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "revision": {
                      "type": "integer",
                      "format": "int64",
                      "description": "NSX revision number."
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'WorkloadNetworkDnsZone' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "NSX DNS Zone",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the DNS Zone."
                    },
                    "domain": {
                      "type": "array",
                      "description": "Domain names of the DNS Zone.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "dnsServerIps": {
                      "type": "array",
                      "description": "DNS Server IP array of the DNS Zone.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "sourceIp": {
                      "type": "string",
                      "description": "Source IP of the DNS Zone."
                    },
                    "dnsServices": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Number of DNS Services using the DNS zone."
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "WorkloadNetworkDnsZoneProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "revision": {
                      "type": "integer",
                      "format": "int64",
                      "description": "NSX revision number."
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource 'WorkloadNetworkDnsZone' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "NSX DNS Zone",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the DNS Zone."
                    },
                    "domain": {
                      "type": "array",
                      "description": "Domain names of the DNS Zone.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "dnsServerIps": {
                      "type": "array",
                      "description": "DNS Server IP array of the DNS Zone.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "sourceIp": {
                      "type": "string",
                      "description": "Source IP of the DNS Zone."
                    },
                    "dnsServices": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Number of DNS Services using the DNS zone."
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "WorkloadNetworkDnsZoneProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "revision": {
                      "type": "integer",
                      "format": "int64",
                      "description": "NSX revision number."
                    }
                  }
                }
              }
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "WorkloadNetworks_UpdateDnsZone",
        "description": "Update a WorkloadNetworkDnsZone",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "dnsZoneId",
            "in": "path",
            "description": "ID of the DNS zone.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "workloadNetworkDnsZone",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "NSX DNS Zone",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the DNS Zone."
                    },
                    "domain": {
                      "type": "array",
                      "description": "Domain names of the DNS Zone.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "dnsServerIps": {
                      "type": "array",
                      "description": "DNS Server IP array of the DNS Zone.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "sourceIp": {
                      "type": "string",
                      "description": "Source IP of the DNS Zone."
                    },
                    "dnsServices": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Number of DNS Services using the DNS zone."
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "WorkloadNetworkDnsZoneProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "revision": {
                      "type": "integer",
                      "format": "int64",
                      "description": "NSX revision number."
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "NSX DNS Zone",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the DNS Zone."
                    },
                    "domain": {
                      "type": "array",
                      "description": "Domain names of the DNS Zone.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "dnsServerIps": {
                      "type": "array",
                      "description": "DNS Server IP array of the DNS Zone.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "sourceIp": {
                      "type": "string",
                      "description": "Source IP of the DNS Zone."
                    },
                    "dnsServices": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Number of DNS Services using the DNS zone."
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "WorkloadNetworkDnsZoneProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "revision": {
                      "type": "integer",
                      "format": "int64",
                      "description": "NSX revision number."
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "WorkloadNetworks_DeleteDnsZone",
        "description": "Delete a WorkloadNetworkDnsZone",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "dnsZoneId",
            "in": "path",
            "description": "ID of the DNS zone.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/gateways": {
      "get": {
        "operationId": "WorkloadNetworks_ListGateways",
        "tags": [
          "WorkloadNetworkGateways"
        ],
        "description": "List WorkloadNetworkGateway resources by WorkloadNetwork",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a WorkloadNetworkGateway list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The WorkloadNetworkGateway items on this page",
                  "items": {
                    "type": "object",
                    "description": "NSX Gateway.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "The provisioning state of the resource.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Building",
                              "Deleting",
                              "Updating"
                            ],
                            "x-ms-enum": {
                              "name": "WorkloadNetworkProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Building",
                                  "value": "Building",
                                  "description": "is building"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "is deleting"
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "is updating"
                                }
                              ]
                            }
                          },
                          "displayName": {
                            "type": "string",
                            "description": "Display name of the DHCP entity."
                          },
                          "path": {
                            "type": "string",
                            "description": "NSX Gateway Path.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/gateways/{gatewayId}": {
      "get": {
        "operationId": "WorkloadNetworks_GetGateway",
        "tags": [
          "WorkloadNetworkGateways"
        ],
        "description": "Get a WorkloadNetworkGateway",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "gatewayId",
            "in": "path",
            "description": "The ID of the NSX Gateway",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "NSX Gateway.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "WorkloadNetworkProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the DHCP entity."
                    },
                    "path": {
                      "type": "string",
                      "description": "NSX Gateway Path.",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/portMirroringProfiles": {
      "get": {
        "operationId": "WorkloadNetworks_ListPortMirroring",
        "description": "List WorkloadNetworkPortMirroring resources by WorkloadNetwork",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a WorkloadNetworkPortMirroring list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The WorkloadNetworkPortMirroring items on this page",
                  "items": {
                    "type": "object",
                    "description": "NSX Port Mirroring",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "displayName": {
                            "type": "string",
                            "description": "Display name of the port mirroring profile."
                          },
                          "direction": {
                            "description": "Direction of port mirroring profile.",
                            "type": "string",
                            "enum": [
                              "INGRESS",
                              "EGRESS",
                              "BIDIRECTIONAL"
                            ],
                            "x-ms-enum": {
                              "name": "PortMirroringDirectionEnum",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "INGRESS",
                                  "value": "INGRESS",
                                  "description": "is ingress"
                                },
                                {
                                  "name": "EGRESS",
                                  "value": "EGRESS",
                                  "description": "is egress"
                                },
                                {
                                  "name": "BIDIRECTIONAL",
                                  "value": "BIDIRECTIONAL",
                                  "description": "is bidirectional"
                                }
                              ]
                            }
                          },
                          "source": {
                            "type": "string",
                            "description": "Source VM Group."
                          },
                          "destination": {
                            "type": "string",
                            "description": "Destination VM Group."
                          },
                          "status": {
                            "description": "Port Mirroring Status.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "SUCCESS",
                              "FAILURE"
                            ],
                            "x-ms-enum": {
                              "name": "PortMirroringStatusEnum",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "SUCCESS",
                                  "value": "SUCCESS",
                                  "description": "is success"
                                },
                                {
                                  "name": "FAILURE",
                                  "value": "FAILURE",
                                  "description": "is failure"
                                }
                              ]
                            }
                          },
                          "provisioningState": {
                            "description": "The provisioning state",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Building",
                              "Deleting",
                              "Updating"
                            ],
                            "x-ms-enum": {
                              "name": "WorkloadNetworkPortMirroringProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Building",
                                  "value": "Building",
                                  "description": "is building"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "is deleting"
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "is updating"
                                }
                              ]
                            }
                          },
                          "revision": {
                            "type": "integer",
                            "format": "int64",
                            "description": "NSX revision number."
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/portMirroringProfiles/{portMirroringId}": {
      "get": {
        "operationId": "WorkloadNetworks_GetPortMirroring",
        "description": "Get a WorkloadNetworkPortMirroring",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "portMirroringId",
            "in": "path",
            "description": "ID of the NSX port mirroring profile.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "NSX Port Mirroring",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the port mirroring profile."
                    },
                    "direction": {
                      "description": "Direction of port mirroring profile.",
                      "type": "string",
                      "enum": [
                        "INGRESS",
                        "EGRESS",
                        "BIDIRECTIONAL"
                      ],
                      "x-ms-enum": {
                        "name": "PortMirroringDirectionEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "INGRESS",
                            "value": "INGRESS",
                            "description": "is ingress"
                          },
                          {
                            "name": "EGRESS",
                            "value": "EGRESS",
                            "description": "is egress"
                          },
                          {
                            "name": "BIDIRECTIONAL",
                            "value": "BIDIRECTIONAL",
                            "description": "is bidirectional"
                          }
                        ]
                      }
                    },
                    "source": {
                      "type": "string",
                      "description": "Source VM Group."
                    },
                    "destination": {
                      "type": "string",
                      "description": "Destination VM Group."
                    },
                    "status": {
                      "description": "Port Mirroring Status.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "SUCCESS",
                        "FAILURE"
                      ],
                      "x-ms-enum": {
                        "name": "PortMirroringStatusEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "SUCCESS",
                            "value": "SUCCESS",
                            "description": "is success"
                          },
                          {
                            "name": "FAILURE",
                            "value": "FAILURE",
                            "description": "is failure"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "WorkloadNetworkPortMirroringProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "revision": {
                      "type": "integer",
                      "format": "int64",
                      "description": "NSX revision number."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "WorkloadNetworks_CreatePortMirroring",
        "description": "Create a WorkloadNetworkPortMirroring",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "portMirroringId",
            "in": "path",
            "description": "ID of the NSX port mirroring profile.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "workloadNetworkPortMirroring",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "NSX Port Mirroring",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the port mirroring profile."
                    },
                    "direction": {
                      "description": "Direction of port mirroring profile.",
                      "type": "string",
                      "enum": [
                        "INGRESS",
                        "EGRESS",
                        "BIDIRECTIONAL"
                      ],
                      "x-ms-enum": {
                        "name": "PortMirroringDirectionEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "INGRESS",
                            "value": "INGRESS",
                            "description": "is ingress"
                          },
                          {
                            "name": "EGRESS",
                            "value": "EGRESS",
                            "description": "is egress"
                          },
                          {
                            "name": "BIDIRECTIONAL",
                            "value": "BIDIRECTIONAL",
                            "description": "is bidirectional"
                          }
                        ]
                      }
                    },
                    "source": {
                      "type": "string",
                      "description": "Source VM Group."
                    },
                    "destination": {
                      "type": "string",
                      "description": "Destination VM Group."
                    },
                    "status": {
                      "description": "Port Mirroring Status.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "SUCCESS",
                        "FAILURE"
                      ],
                      "x-ms-enum": {
                        "name": "PortMirroringStatusEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "SUCCESS",
                            "value": "SUCCESS",
                            "description": "is success"
                          },
                          {
                            "name": "FAILURE",
                            "value": "FAILURE",
                            "description": "is failure"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "WorkloadNetworkPortMirroringProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "revision": {
                      "type": "integer",
                      "format": "int64",
                      "description": "NSX revision number."
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'WorkloadNetworkPortMirroring' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "NSX Port Mirroring",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the port mirroring profile."
                    },
                    "direction": {
                      "description": "Direction of port mirroring profile.",
                      "type": "string",
                      "enum": [
                        "INGRESS",
                        "EGRESS",
                        "BIDIRECTIONAL"
                      ],
                      "x-ms-enum": {
                        "name": "PortMirroringDirectionEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "INGRESS",
                            "value": "INGRESS",
                            "description": "is ingress"
                          },
                          {
                            "name": "EGRESS",
                            "value": "EGRESS",
                            "description": "is egress"
                          },
                          {
                            "name": "BIDIRECTIONAL",
                            "value": "BIDIRECTIONAL",
                            "description": "is bidirectional"
                          }
                        ]
                      }
                    },
                    "source": {
                      "type": "string",
                      "description": "Source VM Group."
                    },
                    "destination": {
                      "type": "string",
                      "description": "Destination VM Group."
                    },
                    "status": {
                      "description": "Port Mirroring Status.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "SUCCESS",
                        "FAILURE"
                      ],
                      "x-ms-enum": {
                        "name": "PortMirroringStatusEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "SUCCESS",
                            "value": "SUCCESS",
                            "description": "is success"
                          },
                          {
                            "name": "FAILURE",
                            "value": "FAILURE",
                            "description": "is failure"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "WorkloadNetworkPortMirroringProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "revision": {
                      "type": "integer",
                      "format": "int64",
                      "description": "NSX revision number."
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource 'WorkloadNetworkPortMirroring' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "NSX Port Mirroring",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the port mirroring profile."
                    },
                    "direction": {
                      "description": "Direction of port mirroring profile.",
                      "type": "string",
                      "enum": [
                        "INGRESS",
                        "EGRESS",
                        "BIDIRECTIONAL"
                      ],
                      "x-ms-enum": {
                        "name": "PortMirroringDirectionEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "INGRESS",
                            "value": "INGRESS",
                            "description": "is ingress"
                          },
                          {
                            "name": "EGRESS",
                            "value": "EGRESS",
                            "description": "is egress"
                          },
                          {
                            "name": "BIDIRECTIONAL",
                            "value": "BIDIRECTIONAL",
                            "description": "is bidirectional"
                          }
                        ]
                      }
                    },
                    "source": {
                      "type": "string",
                      "description": "Source VM Group."
                    },
                    "destination": {
                      "type": "string",
                      "description": "Destination VM Group."
                    },
                    "status": {
                      "description": "Port Mirroring Status.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "SUCCESS",
                        "FAILURE"
                      ],
                      "x-ms-enum": {
                        "name": "PortMirroringStatusEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "SUCCESS",
                            "value": "SUCCESS",
                            "description": "is success"
                          },
                          {
                            "name": "FAILURE",
                            "value": "FAILURE",
                            "description": "is failure"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "WorkloadNetworkPortMirroringProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "revision": {
                      "type": "integer",
                      "format": "int64",
                      "description": "NSX revision number."
                    }
                  }
                }
              }
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "WorkloadNetworks_UpdatePortMirroring",
        "description": "Update a WorkloadNetworkPortMirroring",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "portMirroringId",
            "in": "path",
            "description": "ID of the NSX port mirroring profile.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "workloadNetworkPortMirroring",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "NSX Port Mirroring",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the port mirroring profile."
                    },
                    "direction": {
                      "description": "Direction of port mirroring profile.",
                      "type": "string",
                      "enum": [
                        "INGRESS",
                        "EGRESS",
                        "BIDIRECTIONAL"
                      ],
                      "x-ms-enum": {
                        "name": "PortMirroringDirectionEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "INGRESS",
                            "value": "INGRESS",
                            "description": "is ingress"
                          },
                          {
                            "name": "EGRESS",
                            "value": "EGRESS",
                            "description": "is egress"
                          },
                          {
                            "name": "BIDIRECTIONAL",
                            "value": "BIDIRECTIONAL",
                            "description": "is bidirectional"
                          }
                        ]
                      }
                    },
                    "source": {
                      "type": "string",
                      "description": "Source VM Group."
                    },
                    "destination": {
                      "type": "string",
                      "description": "Destination VM Group."
                    },
                    "status": {
                      "description": "Port Mirroring Status.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "SUCCESS",
                        "FAILURE"
                      ],
                      "x-ms-enum": {
                        "name": "PortMirroringStatusEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "SUCCESS",
                            "value": "SUCCESS",
                            "description": "is success"
                          },
                          {
                            "name": "FAILURE",
                            "value": "FAILURE",
                            "description": "is failure"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "WorkloadNetworkPortMirroringProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "revision": {
                      "type": "integer",
                      "format": "int64",
                      "description": "NSX revision number."
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "NSX Port Mirroring",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the port mirroring profile."
                    },
                    "direction": {
                      "description": "Direction of port mirroring profile.",
                      "type": "string",
                      "enum": [
                        "INGRESS",
                        "EGRESS",
                        "BIDIRECTIONAL"
                      ],
                      "x-ms-enum": {
                        "name": "PortMirroringDirectionEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "INGRESS",
                            "value": "INGRESS",
                            "description": "is ingress"
                          },
                          {
                            "name": "EGRESS",
                            "value": "EGRESS",
                            "description": "is egress"
                          },
                          {
                            "name": "BIDIRECTIONAL",
                            "value": "BIDIRECTIONAL",
                            "description": "is bidirectional"
                          }
                        ]
                      }
                    },
                    "source": {
                      "type": "string",
                      "description": "Source VM Group."
                    },
                    "destination": {
                      "type": "string",
                      "description": "Destination VM Group."
                    },
                    "status": {
                      "description": "Port Mirroring Status.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "SUCCESS",
                        "FAILURE"
                      ],
                      "x-ms-enum": {
                        "name": "PortMirroringStatusEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "SUCCESS",
                            "value": "SUCCESS",
                            "description": "is success"
                          },
                          {
                            "name": "FAILURE",
                            "value": "FAILURE",
                            "description": "is failure"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "WorkloadNetworkPortMirroringProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "revision": {
                      "type": "integer",
                      "format": "int64",
                      "description": "NSX revision number."
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "WorkloadNetworks_DeletePortMirroring",
        "description": "Delete a WorkloadNetworkPortMirroring",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "portMirroringId",
            "in": "path",
            "description": "ID of the NSX port mirroring profile.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/publicIPs": {
      "get": {
        "operationId": "WorkloadNetworks_ListPublicIPs",
        "description": "List WorkloadNetworkPublicIP resources by WorkloadNetwork",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a WorkloadNetworkPublicIP list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The WorkloadNetworkPublicIP items on this page",
                  "items": {
                    "type": "object",
                    "description": "NSX Public IP Block",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "displayName": {
                            "type": "string",
                            "description": "Display name of the Public IP Block."
                          },
                          "numberOfPublicIPs": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Number of Public IPs requested."
                          },
                          "publicIPBlock": {
                            "type": "string",
                            "description": "CIDR Block of the Public IP Block.",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "The provisioning state",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Building",
                              "Deleting",
                              "Updating"
                            ],
                            "x-ms-enum": {
                              "name": "WorkloadNetworkPublicIPProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Building",
                                  "value": "Building",
                                  "description": "is building"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "is deleting"
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "is updating"
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/publicIPs/{publicIPId}": {
      "get": {
        "operationId": "WorkloadNetworks_GetPublicIP",
        "description": "Get a WorkloadNetworkPublicIP",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "publicIPId",
            "in": "path",
            "description": "ID of the DNS zone.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "NSX Public IP Block",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the Public IP Block."
                    },
                    "numberOfPublicIPs": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Number of Public IPs requested."
                    },
                    "publicIPBlock": {
                      "type": "string",
                      "description": "CIDR Block of the Public IP Block.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "WorkloadNetworkPublicIPProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "WorkloadNetworks_CreatePublicIP",
        "description": "Create a WorkloadNetworkPublicIP",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "publicIPId",
            "in": "path",
            "description": "ID of the DNS zone.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "workloadNetworkPublicIP",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "NSX Public IP Block",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the Public IP Block."
                    },
                    "numberOfPublicIPs": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Number of Public IPs requested."
                    },
                    "publicIPBlock": {
                      "type": "string",
                      "description": "CIDR Block of the Public IP Block.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "WorkloadNetworkPublicIPProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'WorkloadNetworkPublicIP' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "NSX Public IP Block",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the Public IP Block."
                    },
                    "numberOfPublicIPs": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Number of Public IPs requested."
                    },
                    "publicIPBlock": {
                      "type": "string",
                      "description": "CIDR Block of the Public IP Block.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "WorkloadNetworkPublicIPProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource 'WorkloadNetworkPublicIP' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "NSX Public IP Block",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the Public IP Block."
                    },
                    "numberOfPublicIPs": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Number of Public IPs requested."
                    },
                    "publicIPBlock": {
                      "type": "string",
                      "description": "CIDR Block of the Public IP Block.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "WorkloadNetworkPublicIPProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "WorkloadNetworks_DeletePublicIP",
        "description": "Delete a WorkloadNetworkPublicIP",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "publicIPId",
            "in": "path",
            "description": "ID of the DNS zone.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/segments": {
      "get": {
        "operationId": "WorkloadNetworks_ListSegments",
        "tags": [
          "WorkloadNetworkSegments"
        ],
        "description": "List WorkloadNetworkSegment resources by WorkloadNetwork",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a WorkloadNetworkSegment list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The WorkloadNetworkSegment items on this page",
                  "items": {
                    "type": "object",
                    "description": "NSX Segment",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "displayName": {
                            "type": "string",
                            "description": "Display name of the segment."
                          },
                          "connectedGateway": {
                            "type": "string",
                            "description": "Gateway which to connect segment to."
                          },
                          "subnet": {
                            "description": "Subnet which to connect segment to.",
                            "type": "object",
                            "properties": {
                              "dhcpRanges": {
                                "type": "array",
                                "description": "DHCP Range assigned for subnet.",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "gatewayAddress": {
                                "type": "string",
                                "description": "Gateway address."
                              }
                            }
                          },
                          "portVif": {
                            "type": "array",
                            "description": "Port Vif which segment is associated with.",
                            "items": {
                              "type": "object",
                              "description": "Ports and any VIF attached to segment.",
                              "properties": {
                                "portName": {
                                  "type": "string",
                                  "description": "Name of port or VIF attached to segment."
                                }
                              }
                            },
                            "readOnly": true,
                            "x-ms-identifiers": []
                          },
                          "status": {
                            "description": "Segment status.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "SUCCESS",
                              "FAILURE"
                            ],
                            "x-ms-enum": {
                              "name": "SegmentStatusEnum",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "SUCCESS",
                                  "value": "SUCCESS",
                                  "description": "is success"
                                },
                                {
                                  "name": "FAILURE",
                                  "value": "FAILURE",
                                  "description": "is failure"
                                }
                              ]
                            }
                          },
                          "provisioningState": {
                            "description": "The provisioning state",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Building",
                              "Deleting",
                              "Updating"
                            ],
                            "x-ms-enum": {
                              "name": "WorkloadNetworkSegmentProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Building",
                                  "value": "Building",
                                  "description": "is building"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "is deleting"
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "is updating"
                                }
                              ]
                            }
                          },
                          "revision": {
                            "type": "integer",
                            "format": "int64",
                            "description": "NSX revision number."
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/segments/{segmentId}": {
      "get": {
        "operationId": "WorkloadNetworks_GetSegment",
        "tags": [
          "WorkloadNetworkSegments"
        ],
        "description": "Get a WorkloadNetworkSegment",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "segmentId",
            "in": "path",
            "description": "The ID of the NSX Segment",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "NSX Segment",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the segment."
                    },
                    "connectedGateway": {
                      "type": "string",
                      "description": "Gateway which to connect segment to."
                    },
                    "subnet": {
                      "description": "Subnet which to connect segment to.",
                      "type": "object",
                      "properties": {
                        "dhcpRanges": {
                          "type": "array",
                          "description": "DHCP Range assigned for subnet.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "gatewayAddress": {
                          "type": "string",
                          "description": "Gateway address."
                        }
                      }
                    },
                    "portVif": {
                      "type": "array",
                      "description": "Port Vif which segment is associated with.",
                      "items": {
                        "type": "object",
                        "description": "Ports and any VIF attached to segment.",
                        "properties": {
                          "portName": {
                            "type": "string",
                            "description": "Name of port or VIF attached to segment."
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": []
                    },
                    "status": {
                      "description": "Segment status.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "SUCCESS",
                        "FAILURE"
                      ],
                      "x-ms-enum": {
                        "name": "SegmentStatusEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "SUCCESS",
                            "value": "SUCCESS",
                            "description": "is success"
                          },
                          {
                            "name": "FAILURE",
                            "value": "FAILURE",
                            "description": "is failure"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "WorkloadNetworkSegmentProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "revision": {
                      "type": "integer",
                      "format": "int64",
                      "description": "NSX revision number."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "WorkloadNetworks_CreateSegments",
        "tags": [
          "WorkloadNetworkSegments"
        ],
        "description": "Create a WorkloadNetworkSegment",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "segmentId",
            "in": "path",
            "description": "The ID of the NSX Segment",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "workloadNetworkSegment",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "NSX Segment",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the segment."
                    },
                    "connectedGateway": {
                      "type": "string",
                      "description": "Gateway which to connect segment to."
                    },
                    "subnet": {
                      "description": "Subnet which to connect segment to.",
                      "type": "object",
                      "properties": {
                        "dhcpRanges": {
                          "type": "array",
                          "description": "DHCP Range assigned for subnet.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "gatewayAddress": {
                          "type": "string",
                          "description": "Gateway address."
                        }
                      }
                    },
                    "portVif": {
                      "type": "array",
                      "description": "Port Vif which segment is associated with.",
                      "items": {
                        "type": "object",
                        "description": "Ports and any VIF attached to segment.",
                        "properties": {
                          "portName": {
                            "type": "string",
                            "description": "Name of port or VIF attached to segment."
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": []
                    },
                    "status": {
                      "description": "Segment status.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "SUCCESS",
                        "FAILURE"
                      ],
                      "x-ms-enum": {
                        "name": "SegmentStatusEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "SUCCESS",
                            "value": "SUCCESS",
                            "description": "is success"
                          },
                          {
                            "name": "FAILURE",
                            "value": "FAILURE",
                            "description": "is failure"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "WorkloadNetworkSegmentProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "revision": {
                      "type": "integer",
                      "format": "int64",
                      "description": "NSX revision number."
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'WorkloadNetworkSegment' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "NSX Segment",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the segment."
                    },
                    "connectedGateway": {
                      "type": "string",
                      "description": "Gateway which to connect segment to."
                    },
                    "subnet": {
                      "description": "Subnet which to connect segment to.",
                      "type": "object",
                      "properties": {
                        "dhcpRanges": {
                          "type": "array",
                          "description": "DHCP Range assigned for subnet.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "gatewayAddress": {
                          "type": "string",
                          "description": "Gateway address."
                        }
                      }
                    },
                    "portVif": {
                      "type": "array",
                      "description": "Port Vif which segment is associated with.",
                      "items": {
                        "type": "object",
                        "description": "Ports and any VIF attached to segment.",
                        "properties": {
                          "portName": {
                            "type": "string",
                            "description": "Name of port or VIF attached to segment."
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": []
                    },
                    "status": {
                      "description": "Segment status.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "SUCCESS",
                        "FAILURE"
                      ],
                      "x-ms-enum": {
                        "name": "SegmentStatusEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "SUCCESS",
                            "value": "SUCCESS",
                            "description": "is success"
                          },
                          {
                            "name": "FAILURE",
                            "value": "FAILURE",
                            "description": "is failure"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "WorkloadNetworkSegmentProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "revision": {
                      "type": "integer",
                      "format": "int64",
                      "description": "NSX revision number."
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource 'WorkloadNetworkSegment' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "NSX Segment",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the segment."
                    },
                    "connectedGateway": {
                      "type": "string",
                      "description": "Gateway which to connect segment to."
                    },
                    "subnet": {
                      "description": "Subnet which to connect segment to.",
                      "type": "object",
                      "properties": {
                        "dhcpRanges": {
                          "type": "array",
                          "description": "DHCP Range assigned for subnet.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "gatewayAddress": {
                          "type": "string",
                          "description": "Gateway address."
                        }
                      }
                    },
                    "portVif": {
                      "type": "array",
                      "description": "Port Vif which segment is associated with.",
                      "items": {
                        "type": "object",
                        "description": "Ports and any VIF attached to segment.",
                        "properties": {
                          "portName": {
                            "type": "string",
                            "description": "Name of port or VIF attached to segment."
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": []
                    },
                    "status": {
                      "description": "Segment status.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "SUCCESS",
                        "FAILURE"
                      ],
                      "x-ms-enum": {
                        "name": "SegmentStatusEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "SUCCESS",
                            "value": "SUCCESS",
                            "description": "is success"
                          },
                          {
                            "name": "FAILURE",
                            "value": "FAILURE",
                            "description": "is failure"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "WorkloadNetworkSegmentProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "revision": {
                      "type": "integer",
                      "format": "int64",
                      "description": "NSX revision number."
                    }
                  }
                }
              }
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "WorkloadNetworks_UpdateSegments",
        "tags": [
          "WorkloadNetworkSegments"
        ],
        "description": "Update a WorkloadNetworkSegment",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "segmentId",
            "in": "path",
            "description": "The ID of the NSX Segment",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "workloadNetworkSegment",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "NSX Segment",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the segment."
                    },
                    "connectedGateway": {
                      "type": "string",
                      "description": "Gateway which to connect segment to."
                    },
                    "subnet": {
                      "description": "Subnet which to connect segment to.",
                      "type": "object",
                      "properties": {
                        "dhcpRanges": {
                          "type": "array",
                          "description": "DHCP Range assigned for subnet.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "gatewayAddress": {
                          "type": "string",
                          "description": "Gateway address."
                        }
                      }
                    },
                    "portVif": {
                      "type": "array",
                      "description": "Port Vif which segment is associated with.",
                      "items": {
                        "type": "object",
                        "description": "Ports and any VIF attached to segment.",
                        "properties": {
                          "portName": {
                            "type": "string",
                            "description": "Name of port or VIF attached to segment."
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": []
                    },
                    "status": {
                      "description": "Segment status.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "SUCCESS",
                        "FAILURE"
                      ],
                      "x-ms-enum": {
                        "name": "SegmentStatusEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "SUCCESS",
                            "value": "SUCCESS",
                            "description": "is success"
                          },
                          {
                            "name": "FAILURE",
                            "value": "FAILURE",
                            "description": "is failure"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "WorkloadNetworkSegmentProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "revision": {
                      "type": "integer",
                      "format": "int64",
                      "description": "NSX revision number."
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "NSX Segment",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the segment."
                    },
                    "connectedGateway": {
                      "type": "string",
                      "description": "Gateway which to connect segment to."
                    },
                    "subnet": {
                      "description": "Subnet which to connect segment to.",
                      "type": "object",
                      "properties": {
                        "dhcpRanges": {
                          "type": "array",
                          "description": "DHCP Range assigned for subnet.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "gatewayAddress": {
                          "type": "string",
                          "description": "Gateway address."
                        }
                      }
                    },
                    "portVif": {
                      "type": "array",
                      "description": "Port Vif which segment is associated with.",
                      "items": {
                        "type": "object",
                        "description": "Ports and any VIF attached to segment.",
                        "properties": {
                          "portName": {
                            "type": "string",
                            "description": "Name of port or VIF attached to segment."
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": []
                    },
                    "status": {
                      "description": "Segment status.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "SUCCESS",
                        "FAILURE"
                      ],
                      "x-ms-enum": {
                        "name": "SegmentStatusEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "SUCCESS",
                            "value": "SUCCESS",
                            "description": "is success"
                          },
                          {
                            "name": "FAILURE",
                            "value": "FAILURE",
                            "description": "is failure"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "WorkloadNetworkSegmentProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "revision": {
                      "type": "integer",
                      "format": "int64",
                      "description": "NSX revision number."
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "WorkloadNetworks_DeleteSegment",
        "tags": [
          "WorkloadNetworkSegments"
        ],
        "description": "Delete a WorkloadNetworkSegment",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "segmentId",
            "in": "path",
            "description": "The ID of the NSX Segment",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/virtualMachines": {
      "get": {
        "operationId": "WorkloadNetworks_ListVirtualMachines",
        "tags": [
          "WorkloadNetworkVirtualMachines"
        ],
        "description": "List WorkloadNetworkVirtualMachine resources by WorkloadNetwork",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a WorkloadNetworkVirtualMachine list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The WorkloadNetworkVirtualMachine items on this page",
                  "items": {
                    "type": "object",
                    "description": "NSX Virtual Machine",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "The provisioning state of the resource.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Building",
                              "Deleting",
                              "Updating"
                            ],
                            "x-ms-enum": {
                              "name": "WorkloadNetworkProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Building",
                                  "value": "Building",
                                  "description": "is building"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "is deleting"
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "is updating"
                                }
                              ]
                            }
                          },
                          "displayName": {
                            "type": "string",
                            "description": "Display name of the VM."
                          },
                          "vmType": {
                            "description": "Virtual machine type.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "REGULAR",
                              "EDGE",
                              "SERVICE"
                            ],
                            "x-ms-enum": {
                              "name": "VMTypeEnum",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "REGULAR",
                                  "value": "REGULAR",
                                  "description": "is regular"
                                },
                                {
                                  "name": "EDGE",
                                  "value": "EDGE",
                                  "description": "is edge"
                                },
                                {
                                  "name": "SERVICE",
                                  "value": "SERVICE",
                                  "description": "is service"
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/virtualMachines/{virtualMachineId}": {
      "get": {
        "operationId": "WorkloadNetworks_GetVirtualMachine",
        "tags": [
          "WorkloadNetworkVirtualMachines"
        ],
        "description": "Get a WorkloadNetworkVirtualMachine",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "virtualMachineId",
            "in": "path",
            "description": "ID of the virtual machine.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "NSX Virtual Machine",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "WorkloadNetworkProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the VM."
                    },
                    "vmType": {
                      "description": "Virtual machine type.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "REGULAR",
                        "EDGE",
                        "SERVICE"
                      ],
                      "x-ms-enum": {
                        "name": "VMTypeEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "REGULAR",
                            "value": "REGULAR",
                            "description": "is regular"
                          },
                          {
                            "name": "EDGE",
                            "value": "EDGE",
                            "description": "is edge"
                          },
                          {
                            "name": "SERVICE",
                            "value": "SERVICE",
                            "description": "is service"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/vmGroups": {
      "get": {
        "operationId": "WorkloadNetworks_ListVMGroups",
        "description": "List WorkloadNetworkVMGroup resources by WorkloadNetwork",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a WorkloadNetworkVMGroup list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The WorkloadNetworkVMGroup items on this page",
                  "items": {
                    "type": "object",
                    "description": "NSX VM Group",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "displayName": {
                            "type": "string",
                            "description": "Display name of the VM group."
                          },
                          "members": {
                            "type": "array",
                            "description": "Virtual machine members of this group.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "status": {
                            "description": "VM Group status.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "SUCCESS",
                              "FAILURE"
                            ],
                            "x-ms-enum": {
                              "name": "VMGroupStatusEnum",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "SUCCESS",
                                  "value": "SUCCESS",
                                  "description": "is success"
                                },
                                {
                                  "name": "FAILURE",
                                  "value": "FAILURE",
                                  "description": "is failure"
                                }
                              ]
                            }
                          },
                          "provisioningState": {
                            "description": "The provisioning state",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Building",
                              "Deleting",
                              "Updating"
                            ],
                            "x-ms-enum": {
                              "name": "WorkloadNetworkVMGroupProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Building",
                                  "value": "Building",
                                  "description": "is building"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "is deleting"
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "is updating"
                                }
                              ]
                            }
                          },
                          "revision": {
                            "type": "integer",
                            "format": "int64",
                            "description": "NSX revision number."
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/workloadNetworks/default/vmGroups/{vmGroupId}": {
      "get": {
        "operationId": "WorkloadNetworks_GetVMGroup",
        "description": "Get a WorkloadNetworkVMGroup",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "vmGroupId",
            "in": "path",
            "description": "ID of the VM group.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "NSX VM Group",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the VM group."
                    },
                    "members": {
                      "type": "array",
                      "description": "Virtual machine members of this group.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "description": "VM Group status.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "SUCCESS",
                        "FAILURE"
                      ],
                      "x-ms-enum": {
                        "name": "VMGroupStatusEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "SUCCESS",
                            "value": "SUCCESS",
                            "description": "is success"
                          },
                          {
                            "name": "FAILURE",
                            "value": "FAILURE",
                            "description": "is failure"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "WorkloadNetworkVMGroupProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "revision": {
                      "type": "integer",
                      "format": "int64",
                      "description": "NSX revision number."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "WorkloadNetworks_CreateVMGroup",
        "description": "Create a WorkloadNetworkVMGroup",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "vmGroupId",
            "in": "path",
            "description": "ID of the VM group.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "workloadNetworkVMGroup",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "NSX VM Group",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the VM group."
                    },
                    "members": {
                      "type": "array",
                      "description": "Virtual machine members of this group.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "description": "VM Group status.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "SUCCESS",
                        "FAILURE"
                      ],
                      "x-ms-enum": {
                        "name": "VMGroupStatusEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "SUCCESS",
                            "value": "SUCCESS",
                            "description": "is success"
                          },
                          {
                            "name": "FAILURE",
                            "value": "FAILURE",
                            "description": "is failure"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "WorkloadNetworkVMGroupProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "revision": {
                      "type": "integer",
                      "format": "int64",
                      "description": "NSX revision number."
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'WorkloadNetworkVMGroup' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "NSX VM Group",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the VM group."
                    },
                    "members": {
                      "type": "array",
                      "description": "Virtual machine members of this group.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "description": "VM Group status.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "SUCCESS",
                        "FAILURE"
                      ],
                      "x-ms-enum": {
                        "name": "VMGroupStatusEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "SUCCESS",
                            "value": "SUCCESS",
                            "description": "is success"
                          },
                          {
                            "name": "FAILURE",
                            "value": "FAILURE",
                            "description": "is failure"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "WorkloadNetworkVMGroupProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "revision": {
                      "type": "integer",
                      "format": "int64",
                      "description": "NSX revision number."
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource 'WorkloadNetworkVMGroup' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "NSX VM Group",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the VM group."
                    },
                    "members": {
                      "type": "array",
                      "description": "Virtual machine members of this group.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "description": "VM Group status.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "SUCCESS",
                        "FAILURE"
                      ],
                      "x-ms-enum": {
                        "name": "VMGroupStatusEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "SUCCESS",
                            "value": "SUCCESS",
                            "description": "is success"
                          },
                          {
                            "name": "FAILURE",
                            "value": "FAILURE",
                            "description": "is failure"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "WorkloadNetworkVMGroupProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "revision": {
                      "type": "integer",
                      "format": "int64",
                      "description": "NSX revision number."
                    }
                  }
                }
              }
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "WorkloadNetworks_UpdateVMGroup",
        "description": "Update a WorkloadNetworkVMGroup",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "vmGroupId",
            "in": "path",
            "description": "ID of the VM group.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "workloadNetworkVMGroup",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "NSX VM Group",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the VM group."
                    },
                    "members": {
                      "type": "array",
                      "description": "Virtual machine members of this group.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "description": "VM Group status.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "SUCCESS",
                        "FAILURE"
                      ],
                      "x-ms-enum": {
                        "name": "VMGroupStatusEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "SUCCESS",
                            "value": "SUCCESS",
                            "description": "is success"
                          },
                          {
                            "name": "FAILURE",
                            "value": "FAILURE",
                            "description": "is failure"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "WorkloadNetworkVMGroupProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "revision": {
                      "type": "integer",
                      "format": "int64",
                      "description": "NSX revision number."
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "NSX VM Group",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the VM group."
                    },
                    "members": {
                      "type": "array",
                      "description": "Virtual machine members of this group.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "description": "VM Group status.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "SUCCESS",
                        "FAILURE"
                      ],
                      "x-ms-enum": {
                        "name": "VMGroupStatusEnum",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "SUCCESS",
                            "value": "SUCCESS",
                            "description": "is success"
                          },
                          {
                            "name": "FAILURE",
                            "value": "FAILURE",
                            "description": "is failure"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Building",
                        "Deleting",
                        "Updating"
                      ],
                      "x-ms-enum": {
                        "name": "WorkloadNetworkVMGroupProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Building",
                            "value": "Building",
                            "description": "is building"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "is deleting"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "is updating"
                          }
                        ]
                      }
                    },
                    "revision": {
                      "type": "integer",
                      "format": "int64",
                      "description": "NSX revision number."
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "WorkloadNetworks_DeleteVMGroup",
        "description": "Delete a WorkloadNetworkVMGroup",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "vmGroupId",
            "in": "path",
            "description": "ID of the VM group.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateCloudName",
            "in": "path",
            "description": "Name of the private cloud",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    }
  },
  "definitions": {
    "Addon": {
      "type": "object",
      "description": "An addon resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "addonType": {
              "description": "Addon type",
              "type": "string",
              "enum": [
                "SRM",
                "VR",
                "HCX",
                "Arc"
              ],
              "x-ms-enum": {
                "name": "AddonType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "SRM",
                    "value": "SRM"
                  },
                  {
                    "name": "VR",
                    "value": "VR"
                  },
                  {
                    "name": "HCX",
                    "value": "HCX"
                  },
                  {
                    "name": "Arc",
                    "value": "Arc"
                  }
                ]
              }
            },
            "provisioningState": {
              "description": "The state of the addon provisioning",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Cancelled",
                "Building",
                "Deleting",
                "Updating"
              ],
              "x-ms-enum": {
                "name": "AddonProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Cancelled",
                    "value": "Cancelled",
                    "description": "is cancelled"
                  },
                  {
                    "name": "Building",
                    "value": "Building",
                    "description": "is building"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "is deleting"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "is updating"
                  }
                ]
              }
            }
          },
          "discriminator": "addonType",
          "required": [
            "addonType"
          ]
        }
      }
    },
    "AddonArcProperties": {
      "type": "object",
      "description": "The properties of an Arc addon",
      "properties": {
        "vCenter": {
          "type": "string",
          "description": "The VMware vCenter resource ID"
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "The properties of an addon",
          "properties": {
            "addonType": {
              "description": "Addon type",
              "type": "string",
              "enum": [
                "SRM",
                "VR",
                "HCX",
                "Arc"
              ],
              "x-ms-enum": {
                "name": "AddonType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "SRM",
                    "value": "SRM"
                  },
                  {
                    "name": "VR",
                    "value": "VR"
                  },
                  {
                    "name": "HCX",
                    "value": "HCX"
                  },
                  {
                    "name": "Arc",
                    "value": "Arc"
                  }
                ]
              }
            },
            "provisioningState": {
              "description": "The state of the addon provisioning",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Cancelled",
                "Building",
                "Deleting",
                "Updating"
              ],
              "x-ms-enum": {
                "name": "AddonProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Cancelled",
                    "value": "Cancelled",
                    "description": "is cancelled"
                  },
                  {
                    "name": "Building",
                    "value": "Building",
                    "description": "is building"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "is deleting"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "is updating"
                  }
                ]
              }
            }
          },
          "discriminator": "addonType",
          "required": [
            "addonType"
          ]
        }
      ],
      "x-ms-discriminator-value": "Arc"
    },
    "AddonHcxProperties": {
      "type": "object",
      "description": "The properties of an HCX addon",
      "properties": {
        "offer": {
          "type": "string",
          "description": "The HCX offer, example VMware MaaS Cloud Provider (Enterprise)"
        },
        "managementNetwork": {
          "type": "string",
          "description": "HCX management network."
        },
        "uplinkNetwork": {
          "type": "string",
          "description": "HCX uplink network"
        }
      },
      "required": [
        "offer"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "The properties of an addon",
          "properties": {
            "addonType": {
              "description": "Addon type",
              "type": "string",
              "enum": [
                "SRM",
                "VR",
                "HCX",
                "Arc"
              ],
              "x-ms-enum": {
                "name": "AddonType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "SRM",
                    "value": "SRM"
                  },
                  {
                    "name": "VR",
                    "value": "VR"
                  },
                  {
                    "name": "HCX",
                    "value": "HCX"
                  },
                  {
                    "name": "Arc",
                    "value": "Arc"
                  }
                ]
              }
            },
            "provisioningState": {
              "description": "The state of the addon provisioning",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Cancelled",
                "Building",
                "Deleting",
                "Updating"
              ],
              "x-ms-enum": {
                "name": "AddonProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Cancelled",
                    "value": "Cancelled",
                    "description": "is cancelled"
                  },
                  {
                    "name": "Building",
                    "value": "Building",
                    "description": "is building"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "is deleting"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "is updating"
                  }
                ]
              }
            }
          },
          "discriminator": "addonType",
          "required": [
            "addonType"
          ]
        }
      ],
      "x-ms-discriminator-value": "HCX"
    },
    "AddonList": {
      "type": "object",
      "description": "The response of a Addon list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Addon items on this page",
          "items": {
            "type": "object",
            "description": "An addon resource",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "addonType": {
                    "description": "Addon type",
                    "type": "string",
                    "enum": [
                      "SRM",
                      "VR",
                      "HCX",
                      "Arc"
                    ],
                    "x-ms-enum": {
                      "name": "AddonType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "SRM",
                          "value": "SRM"
                        },
                        {
                          "name": "VR",
                          "value": "VR"
                        },
                        {
                          "name": "HCX",
                          "value": "HCX"
                        },
                        {
                          "name": "Arc",
                          "value": "Arc"
                        }
                      ]
                    }
                  },
                  "provisioningState": {
                    "description": "The state of the addon provisioning",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Cancelled",
                      "Building",
                      "Deleting",
                      "Updating"
                    ],
                    "x-ms-enum": {
                      "name": "AddonProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Cancelled",
                          "value": "Cancelled",
                          "description": "is cancelled"
                        },
                        {
                          "name": "Building",
                          "value": "Building",
                          "description": "is building"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "is deleting"
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "is updating"
                        }
                      ]
                    }
                  }
                },
                "discriminator": "addonType",
                "required": [
                  "addonType"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "AddonProperties": {
      "type": "object",
      "description": "The properties of an addon",
      "properties": {
        "addonType": {
          "description": "Addon type",
          "type": "string",
          "enum": [
            "SRM",
            "VR",
            "HCX",
            "Arc"
          ],
          "x-ms-enum": {
            "name": "AddonType",
            "modelAsString": true,
            "values": [
              {
                "name": "SRM",
                "value": "SRM"
              },
              {
                "name": "VR",
                "value": "VR"
              },
              {
                "name": "HCX",
                "value": "HCX"
              },
              {
                "name": "Arc",
                "value": "Arc"
              }
            ]
          }
        },
        "provisioningState": {
          "description": "The state of the addon provisioning",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Cancelled",
            "Building",
            "Deleting",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "AddonProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Cancelled",
                "value": "Cancelled",
                "description": "is cancelled"
              },
              {
                "name": "Building",
                "value": "Building",
                "description": "is building"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "is deleting"
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "is updating"
              }
            ]
          }
        }
      },
      "discriminator": "addonType",
      "required": [
        "addonType"
      ]
    },
    "AddonProvisioningState": {
      "type": "string",
      "description": "Addon provisioning state",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Cancelled",
        "Building",
        "Deleting",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "AddonProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Cancelled",
            "value": "Cancelled",
            "description": "is cancelled"
          },
          {
            "name": "Building",
            "value": "Building",
            "description": "is building"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "is deleting"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "is updating"
          }
        ]
      },
      "readOnly": true
    },
    "AddonSrmProperties": {
      "type": "object",
      "description": "The properties of a Site Recovery Manager (SRM) addon",
      "properties": {
        "licenseKey": {
          "type": "string",
          "description": "The Site Recovery Manager (SRM) license"
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "The properties of an addon",
          "properties": {
            "addonType": {
              "description": "Addon type",
              "type": "string",
              "enum": [
                "SRM",
                "VR",
                "HCX",
                "Arc"
              ],
              "x-ms-enum": {
                "name": "AddonType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "SRM",
                    "value": "SRM"
                  },
                  {
                    "name": "VR",
                    "value": "VR"
                  },
                  {
                    "name": "HCX",
                    "value": "HCX"
                  },
                  {
                    "name": "Arc",
                    "value": "Arc"
                  }
                ]
              }
            },
            "provisioningState": {
              "description": "The state of the addon provisioning",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Cancelled",
                "Building",
                "Deleting",
                "Updating"
              ],
              "x-ms-enum": {
                "name": "AddonProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Cancelled",
                    "value": "Cancelled",
                    "description": "is cancelled"
                  },
                  {
                    "name": "Building",
                    "value": "Building",
                    "description": "is building"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "is deleting"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "is updating"
                  }
                ]
              }
            }
          },
          "discriminator": "addonType",
          "required": [
            "addonType"
          ]
        }
      ],
      "x-ms-discriminator-value": "SRM"
    },
    "AddonType": {
      "type": "string",
      "description": "Addon type",
      "enum": [
        "SRM",
        "VR",
        "HCX",
        "Arc"
      ],
      "x-ms-enum": {
        "name": "AddonType",
        "modelAsString": true,
        "values": [
          {
            "name": "SRM",
            "value": "SRM"
          },
          {
            "name": "VR",
            "value": "VR"
          },
          {
            "name": "HCX",
            "value": "HCX"
          },
          {
            "name": "Arc",
            "value": "Arc"
          }
        ]
      }
    },
    "AddonVrProperties": {
      "type": "object",
      "description": "The properties of a vSphere Replication (VR) addon",
      "properties": {
        "vrsCount": {
          "type": "integer",
          "format": "int32",
          "description": "The vSphere Replication Server (VRS) count"
        }
      },
      "required": [
        "vrsCount"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "The properties of an addon",
          "properties": {
            "addonType": {
              "description": "Addon type",
              "type": "string",
              "enum": [
                "SRM",
                "VR",
                "HCX",
                "Arc"
              ],
              "x-ms-enum": {
                "name": "AddonType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "SRM",
                    "value": "SRM"
                  },
                  {
                    "name": "VR",
                    "value": "VR"
                  },
                  {
                    "name": "HCX",
                    "value": "HCX"
                  },
                  {
                    "name": "Arc",
                    "value": "Arc"
                  }
                ]
              }
            },
            "provisioningState": {
              "description": "The state of the addon provisioning",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Cancelled",
                "Building",
                "Deleting",
                "Updating"
              ],
              "x-ms-enum": {
                "name": "AddonProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Cancelled",
                    "value": "Cancelled",
                    "description": "is cancelled"
                  },
                  {
                    "name": "Building",
                    "value": "Building",
                    "description": "is building"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "is deleting"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "is updating"
                  }
                ]
              }
            }
          },
          "discriminator": "addonType",
          "required": [
            "addonType"
          ]
        }
      ],
      "x-ms-discriminator-value": "VR"
    },
    "AdminCredentials": {
      "type": "object",
      "description": "Administrative credentials for accessing vCenter and NSX-T",
      "properties": {
        "nsxtUsername": {
          "type": "string",
          "description": "NSX-T Manager username",
          "readOnly": true
        },
        "nsxtPassword": {
          "type": "string",
          "format": "password",
          "description": "NSX-T Manager password",
          "readOnly": true,
          "x-ms-secret": true
        },
        "vcenterUsername": {
          "type": "string",
          "description": "vCenter admin username",
          "readOnly": true
        },
        "vcenterPassword": {
          "type": "string",
          "format": "password",
          "description": "vCenter admin password",
          "readOnly": true,
          "x-ms-secret": true
        }
      }
    },
    "AffinityStrength": {
      "type": "string",
      "description": "Affinity Strength",
      "enum": [
        "Should",
        "Must"
      ],
      "x-ms-enum": {
        "name": "AffinityStrength",
        "modelAsString": true,
        "values": [
          {
            "name": "Should",
            "value": "Should",
            "description": "is should"
          },
          {
            "name": "Must",
            "value": "Must",
            "description": "is must"
          }
        ]
      }
    },
    "AffinityType": {
      "type": "string",
      "description": "Affinity type",
      "enum": [
        "Affinity",
        "AntiAffinity"
      ],
      "x-ms-enum": {
        "name": "AffinityType",
        "modelAsString": true,
        "values": [
          {
            "name": "Affinity",
            "value": "Affinity",
            "description": "is affinity"
          },
          {
            "name": "AntiAffinity",
            "value": "AntiAffinity",
            "description": "is anti-affinity"
          }
        ]
      }
    },
    "AvailabilityProperties": {
      "type": "object",
      "description": "The properties describing private cloud availability zone distribution",
      "properties": {
        "strategy": {
          "description": "The availability strategy for the private cloud",
          "type": "string",
          "enum": [
            "SingleZone",
            "DualZone"
          ],
          "x-ms-enum": {
            "name": "AvailabilityStrategy",
            "modelAsString": true,
            "values": [
              {
                "name": "SingleZone",
                "value": "SingleZone",
                "description": "in single zone"
              },
              {
                "name": "DualZone",
                "value": "DualZone",
                "description": "in two zones"
              }
            ]
          }
        },
        "zone": {
          "type": "integer",
          "format": "int32",
          "description": "The primary availability zone for the private cloud"
        },
        "secondaryZone": {
          "type": "integer",
          "format": "int32",
          "description": "The secondary availability zone for the private cloud"
        }
      }
    },
    "AvailabilityStrategy": {
      "type": "string",
      "description": "Whether the private clouds is available in a single zone or two zones",
      "enum": [
        "SingleZone",
        "DualZone"
      ],
      "x-ms-enum": {
        "name": "AvailabilityStrategy",
        "modelAsString": true,
        "values": [
          {
            "name": "SingleZone",
            "value": "SingleZone",
            "description": "in single zone"
          },
          {
            "name": "DualZone",
            "value": "DualZone",
            "description": "in two zones"
          }
        ]
      }
    },
    "Azure.Core.azureLocation": {
      "type": "string",
      "description": "Represents an Azure geography region where supported resource providers live."
    },
    "AzureHybridBenefitType": {
      "type": "string",
      "description": "Azure Hybrid Benefit type",
      "enum": [
        "SqlHost",
        "None"
      ],
      "x-ms-enum": {
        "name": "AzureHybridBenefitType",
        "modelAsString": true,
        "values": [
          {
            "name": "SqlHost",
            "value": "SqlHost",
            "description": "is SqlHost"
          },
          {
            "name": "None",
            "value": "None",
            "description": "is None"
          }
        ]
      }
    },
    "Circuit": {
      "type": "object",
      "description": "An ExpressRoute Circuit",
      "properties": {
        "primarySubnet": {
          "type": "string",
          "description": "CIDR of primary subnet",
          "readOnly": true
        },
        "secondarySubnet": {
          "type": "string",
          "description": "CIDR of secondary subnet",
          "readOnly": true
        },
        "expressRouteID": {
          "type": "string",
          "description": "Identifier of the ExpressRoute Circuit (Microsoft Colo only)",
          "readOnly": true
        },
        "expressRoutePrivatePeeringID": {
          "type": "string",
          "description": "ExpressRoute Circuit private peering identifier",
          "readOnly": true
        }
      }
    },
    "CloudLink": {
      "type": "object",
      "description": "A cloud link resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "The provisioning state of the resource.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled"
              ],
              "x-ms-enum": {
                "name": "CloudLinkProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  }
                ]
              }
            },
            "status": {
              "description": "The state of the cloud link.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Active",
                "Building",
                "Deleting",
                "Failed",
                "Disconnected"
              ],
              "x-ms-enum": {
                "name": "CloudLinkStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Active",
                    "value": "Active",
                    "description": "is active"
                  },
                  {
                    "name": "Building",
                    "value": "Building",
                    "description": "is building"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "is deleting"
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "is failed"
                  },
                  {
                    "name": "Disconnected",
                    "value": "Disconnected",
                    "description": "is disconnected"
                  }
                ]
              }
            },
            "linkedCloud": {
              "type": "string",
              "description": "Identifier of the other private cloud participating in the link."
            }
          }
        }
      }
    },
    "CloudLinkList": {
      "type": "object",
      "description": "The response of a CloudLink list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The CloudLink items on this page",
          "items": {
            "type": "object",
            "description": "A cloud link resource",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "The provisioning state of the resource.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled"
                    ],
                    "x-ms-enum": {
                      "name": "CloudLinkProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        }
                      ]
                    }
                  },
                  "status": {
                    "description": "The state of the cloud link.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Active",
                      "Building",
                      "Deleting",
                      "Failed",
                      "Disconnected"
                    ],
                    "x-ms-enum": {
                      "name": "CloudLinkStatus",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Active",
                          "value": "Active",
                          "description": "is active"
                        },
                        {
                          "name": "Building",
                          "value": "Building",
                          "description": "is building"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "is deleting"
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "is failed"
                        },
                        {
                          "name": "Disconnected",
                          "value": "Disconnected",
                          "description": "is disconnected"
                        }
                      ]
                    }
                  },
                  "linkedCloud": {
                    "type": "string",
                    "description": "Identifier of the other private cloud participating in the link."
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "CloudLinkProperties": {
      "type": "object",
      "description": "The properties of a cloud link.",
      "properties": {
        "provisioningState": {
          "description": "The provisioning state of the resource.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "CloudLinkProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              }
            ]
          }
        },
        "status": {
          "description": "The state of the cloud link.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Active",
            "Building",
            "Deleting",
            "Failed",
            "Disconnected"
          ],
          "x-ms-enum": {
            "name": "CloudLinkStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Active",
                "value": "Active",
                "description": "is active"
              },
              {
                "name": "Building",
                "value": "Building",
                "description": "is building"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "is deleting"
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "is failed"
              },
              {
                "name": "Disconnected",
                "value": "Disconnected",
                "description": "is disconnected"
              }
            ]
          }
        },
        "linkedCloud": {
          "type": "string",
          "description": "Identifier of the other private cloud participating in the link."
        }
      }
    },
    "CloudLinkProvisioningState": {
      "type": "string",
      "description": "cloud link provisioning state",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "CloudLinkProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          }
        ]
      },
      "readOnly": true
    },
    "CloudLinkStatus": {
      "type": "string",
      "description": "Cloud Link status",
      "enum": [
        "Active",
        "Building",
        "Deleting",
        "Failed",
        "Disconnected"
      ],
      "x-ms-enum": {
        "name": "CloudLinkStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Active",
            "value": "Active",
            "description": "is active"
          },
          {
            "name": "Building",
            "value": "Building",
            "description": "is building"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "is deleting"
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "is failed"
          },
          {
            "name": "Disconnected",
            "value": "Disconnected",
            "description": "is disconnected"
          }
        ]
      }
    },
    "Cluster": {
      "type": "object",
      "description": "A cluster resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "clusterSize": {
              "type": "integer",
              "format": "int32",
              "description": "The cluster size"
            },
            "provisioningState": {
              "description": "The state of the cluster provisioning",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Cancelled",
                "Deleting",
                "Updating"
              ],
              "x-ms-enum": {
                "name": "ClusterProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Cancelled",
                    "value": "Cancelled",
                    "description": "is cancelled"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "is deleting"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "is updating"
                  }
                ]
              }
            },
            "clusterId": {
              "type": "integer",
              "format": "int32",
              "description": "The identity",
              "readOnly": true
            },
            "hosts": {
              "type": "array",
              "description": "The hosts",
              "items": {
                "type": "string"
              }
            },
            "vsanDatastoreName": {
              "type": "string",
              "description": "Name of the vsan datastore associated with the cluster"
            }
          }
        },
        "sku": {
          "type": "object",
          "description": "The resource model definition representing SKU",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
            },
            "tier": {
              "type": "string",
              "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
              "enum": [
                "Free",
                "Basic",
                "Standard",
                "Premium"
              ],
              "x-ms-enum": {
                "name": "SkuTier",
                "modelAsString": false
              }
            },
            "size": {
              "type": "string",
              "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
            },
            "family": {
              "type": "string",
              "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
            },
            "capacity": {
              "type": "integer",
              "format": "int32",
              "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      "required": [
        "sku"
      ]
    },
    "ClusterList": {
      "type": "object",
      "description": "The response of a Cluster list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Cluster items on this page",
          "items": {
            "type": "object",
            "description": "A cluster resource",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "clusterSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The cluster size"
                  },
                  "provisioningState": {
                    "description": "The state of the cluster provisioning",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Cancelled",
                      "Deleting",
                      "Updating"
                    ],
                    "x-ms-enum": {
                      "name": "ClusterProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Cancelled",
                          "value": "Cancelled",
                          "description": "is cancelled"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "is deleting"
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "is updating"
                        }
                      ]
                    }
                  },
                  "clusterId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The identity",
                    "readOnly": true
                  },
                  "hosts": {
                    "type": "array",
                    "description": "The hosts",
                    "items": {
                      "type": "string"
                    }
                  },
                  "vsanDatastoreName": {
                    "type": "string",
                    "description": "Name of the vsan datastore associated with the cluster"
                  }
                }
              },
              "sku": {
                "type": "object",
                "description": "The resource model definition representing SKU",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
                  },
                  "tier": {
                    "type": "string",
                    "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
                    "enum": [
                      "Free",
                      "Basic",
                      "Standard",
                      "Premium"
                    ],
                    "x-ms-enum": {
                      "name": "SkuTier",
                      "modelAsString": false
                    }
                  },
                  "size": {
                    "type": "string",
                    "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                  },
                  "family": {
                    "type": "string",
                    "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                  },
                  "capacity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                  }
                },
                "required": [
                  "name"
                ]
              }
            },
            "required": [
              "sku"
            ]
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ClusterProperties": {
      "type": "object",
      "description": "The properties of a cluster",
      "properties": {
        "clusterSize": {
          "type": "integer",
          "format": "int32",
          "description": "The cluster size"
        },
        "provisioningState": {
          "description": "The state of the cluster provisioning",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Cancelled",
            "Deleting",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "ClusterProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Cancelled",
                "value": "Cancelled",
                "description": "is cancelled"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "is deleting"
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "is updating"
              }
            ]
          }
        },
        "clusterId": {
          "type": "integer",
          "format": "int32",
          "description": "The identity",
          "readOnly": true
        },
        "hosts": {
          "type": "array",
          "description": "The hosts",
          "items": {
            "type": "string"
          }
        },
        "vsanDatastoreName": {
          "type": "string",
          "description": "Name of the vsan datastore associated with the cluster"
        }
      }
    },
    "ClusterProvisioningState": {
      "type": "string",
      "description": "Cluster provisioning state",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Cancelled",
        "Deleting",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "ClusterProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Cancelled",
            "value": "Cancelled",
            "description": "is cancelled"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "is deleting"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "is updating"
          }
        ]
      },
      "readOnly": true
    },
    "ClusterUpdate": {
      "type": "object",
      "description": "An update of a cluster resource",
      "properties": {
        "sku": {
          "type": "object",
          "description": "The resource model definition representing SKU",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
            },
            "tier": {
              "type": "string",
              "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
              "enum": [
                "Free",
                "Basic",
                "Standard",
                "Premium"
              ],
              "x-ms-enum": {
                "name": "SkuTier",
                "modelAsString": false
              }
            },
            "size": {
              "type": "string",
              "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
            },
            "family": {
              "type": "string",
              "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
            },
            "capacity": {
              "type": "integer",
              "format": "int32",
              "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
            }
          },
          "required": [
            "name"
          ]
        },
        "properties": {
          "description": "The properties of a cluster resource that may be updated",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "clusterSize": {
              "type": "integer",
              "format": "int32",
              "description": "The cluster size"
            },
            "hosts": {
              "type": "array",
              "description": "The hosts",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "ClusterUpdateProperties": {
      "type": "object",
      "description": "The properties of a cluster that may be updated",
      "properties": {
        "clusterSize": {
          "type": "integer",
          "format": "int32",
          "description": "The cluster size"
        },
        "hosts": {
          "type": "array",
          "description": "The hosts",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ClusterZone": {
      "type": "object",
      "description": "Zone and associated hosts info",
      "properties": {
        "hosts": {
          "type": "array",
          "description": "List of hosts belonging to the availability zone in a cluster",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "zone": {
          "type": "string",
          "description": "Availability zone identifier",
          "readOnly": true
        }
      }
    },
    "ClusterZoneList": {
      "type": "object",
      "description": "List of all zones and associated hosts for a cluster",
      "properties": {
        "zones": {
          "type": "array",
          "description": "Zone and associated hosts info",
          "items": {
            "type": "object",
            "description": "Zone and associated hosts info",
            "properties": {
              "hosts": {
                "type": "array",
                "description": "List of hosts belonging to the availability zone in a cluster",
                "items": {
                  "type": "string"
                },
                "readOnly": true
              },
              "zone": {
                "type": "string",
                "description": "Availability zone identifier",
                "readOnly": true
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "Datastore": {
      "type": "object",
      "description": "A datastore resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "The state of the datastore provisioning",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Cancelled",
                "Pending",
                "Creating",
                "Updating",
                "Deleting"
              ],
              "x-ms-enum": {
                "name": "DatastoreProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Cancelled",
                    "value": "Cancelled",
                    "description": "is cancelled"
                  },
                  {
                    "name": "Pending",
                    "value": "Pending",
                    "description": "is pending"
                  },
                  {
                    "name": "Creating",
                    "value": "Creating",
                    "description": "is creating"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "is updating"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "is deleting"
                  }
                ]
              }
            },
            "netAppVolume": {
              "description": "An Azure NetApp Files volume",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Azure resource ID of the NetApp volume"
                }
              },
              "required": [
                "id"
              ]
            },
            "diskPoolVolume": {
              "description": "An iSCSI volume",
              "type": "object",
              "properties": {
                "targetId": {
                  "type": "string",
                  "description": "Azure resource ID of the iSCSI target"
                },
                "lunName": {
                  "type": "string",
                  "description": "Name of the LUN to be used for datastore"
                },
                "mountOption": {
                  "type": "string",
                  "description": "Mode that describes whether the LUN has to be mounted as a datastore or\nattached as a LUN",
                  "default": "MOUNT",
                  "enum": [
                    "MOUNT",
                    "ATTACH"
                  ],
                  "x-ms-enum": {
                    "name": "MountOptionEnum",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "MOUNT",
                        "value": "MOUNT",
                        "description": "is mount"
                      },
                      {
                        "name": "ATTACH",
                        "value": "ATTACH",
                        "description": "is attach"
                      }
                    ]
                  }
                },
                "path": {
                  "type": "string",
                  "description": "Device path",
                  "readOnly": true
                }
              },
              "required": [
                "targetId",
                "lunName"
              ]
            },
            "elasticSanVolume": {
              "description": "An Elastic SAN volume",
              "type": "object",
              "properties": {
                "targetId": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Azure resource ID of the Elastic SAN Volume",
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "Microsoft.ElasticSan/elasticSans/volumeGroups/volumes"
                      }
                    ]
                  }
                }
              },
              "required": [
                "targetId"
              ]
            },
            "pureStorageVolume": {
              "description": "A Pure Storage volume",
              "type": "object",
              "properties": {
                "storagePoolId": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Azure resource ID of the Pure Storage Pool",
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "PureStorage.Block/storagePools"
                      }
                    ]
                  }
                },
                "sizeGb": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Volume size to be used to create a Virtual Volumes (vVols) datastore"
                }
              },
              "required": [
                "storagePoolId",
                "sizeGb"
              ]
            },
            "status": {
              "description": "The operational status of the datastore",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Unknown",
                "Accessible",
                "Inaccessible",
                "Attached",
                "Detached",
                "LostCommunication",
                "DeadOrError"
              ],
              "x-ms-enum": {
                "name": "DatastoreStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Unknown",
                    "value": "Unknown",
                    "description": "is unknown"
                  },
                  {
                    "name": "Accessible",
                    "value": "Accessible",
                    "description": "is accessible"
                  },
                  {
                    "name": "Inaccessible",
                    "value": "Inaccessible",
                    "description": "is inaccessible"
                  },
                  {
                    "name": "Attached",
                    "value": "Attached",
                    "description": "is attached"
                  },
                  {
                    "name": "Detached",
                    "value": "Detached",
                    "description": "is detached"
                  },
                  {
                    "name": "LostCommunication",
                    "value": "LostCommunication",
                    "description": "is lost communication"
                  },
                  {
                    "name": "DeadOrError",
                    "value": "DeadOrError",
                    "description": "is dead or error"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "DatastoreList": {
      "type": "object",
      "description": "The response of a Datastore list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Datastore items on this page",
          "items": {
            "type": "object",
            "description": "A datastore resource",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "The state of the datastore provisioning",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Cancelled",
                      "Pending",
                      "Creating",
                      "Updating",
                      "Deleting"
                    ],
                    "x-ms-enum": {
                      "name": "DatastoreProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Cancelled",
                          "value": "Cancelled",
                          "description": "is cancelled"
                        },
                        {
                          "name": "Pending",
                          "value": "Pending",
                          "description": "is pending"
                        },
                        {
                          "name": "Creating",
                          "value": "Creating",
                          "description": "is creating"
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "is updating"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "is deleting"
                        }
                      ]
                    }
                  },
                  "netAppVolume": {
                    "description": "An Azure NetApp Files volume",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Azure resource ID of the NetApp volume"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  },
                  "diskPoolVolume": {
                    "description": "An iSCSI volume",
                    "type": "object",
                    "properties": {
                      "targetId": {
                        "type": "string",
                        "description": "Azure resource ID of the iSCSI target"
                      },
                      "lunName": {
                        "type": "string",
                        "description": "Name of the LUN to be used for datastore"
                      },
                      "mountOption": {
                        "type": "string",
                        "description": "Mode that describes whether the LUN has to be mounted as a datastore or\nattached as a LUN",
                        "default": "MOUNT",
                        "enum": [
                          "MOUNT",
                          "ATTACH"
                        ],
                        "x-ms-enum": {
                          "name": "MountOptionEnum",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "MOUNT",
                              "value": "MOUNT",
                              "description": "is mount"
                            },
                            {
                              "name": "ATTACH",
                              "value": "ATTACH",
                              "description": "is attach"
                            }
                          ]
                        }
                      },
                      "path": {
                        "type": "string",
                        "description": "Device path",
                        "readOnly": true
                      }
                    },
                    "required": [
                      "targetId",
                      "lunName"
                    ]
                  },
                  "elasticSanVolume": {
                    "description": "An Elastic SAN volume",
                    "type": "object",
                    "properties": {
                      "targetId": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Azure resource ID of the Elastic SAN Volume",
                        "x-ms-arm-id-details": {
                          "allowedResources": [
                            {
                              "type": "Microsoft.ElasticSan/elasticSans/volumeGroups/volumes"
                            }
                          ]
                        }
                      }
                    },
                    "required": [
                      "targetId"
                    ]
                  },
                  "pureStorageVolume": {
                    "description": "A Pure Storage volume",
                    "type": "object",
                    "properties": {
                      "storagePoolId": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Azure resource ID of the Pure Storage Pool",
                        "x-ms-arm-id-details": {
                          "allowedResources": [
                            {
                              "type": "PureStorage.Block/storagePools"
                            }
                          ]
                        }
                      },
                      "sizeGb": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Volume size to be used to create a Virtual Volumes (vVols) datastore"
                      }
                    },
                    "required": [
                      "storagePoolId",
                      "sizeGb"
                    ]
                  },
                  "status": {
                    "description": "The operational status of the datastore",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Unknown",
                      "Accessible",
                      "Inaccessible",
                      "Attached",
                      "Detached",
                      "LostCommunication",
                      "DeadOrError"
                    ],
                    "x-ms-enum": {
                      "name": "DatastoreStatus",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Unknown",
                          "value": "Unknown",
                          "description": "is unknown"
                        },
                        {
                          "name": "Accessible",
                          "value": "Accessible",
                          "description": "is accessible"
                        },
                        {
                          "name": "Inaccessible",
                          "value": "Inaccessible",
                          "description": "is inaccessible"
                        },
                        {
                          "name": "Attached",
                          "value": "Attached",
                          "description": "is attached"
                        },
                        {
                          "name": "Detached",
                          "value": "Detached",
                          "description": "is detached"
                        },
                        {
                          "name": "LostCommunication",
                          "value": "LostCommunication",
                          "description": "is lost communication"
                        },
                        {
                          "name": "DeadOrError",
                          "value": "DeadOrError",
                          "description": "is dead or error"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DatastoreProperties": {
      "type": "object",
      "description": "The properties of a datastore",
      "properties": {
        "provisioningState": {
          "description": "The state of the datastore provisioning",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Cancelled",
            "Pending",
            "Creating",
            "Updating",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "DatastoreProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Cancelled",
                "value": "Cancelled",
                "description": "is cancelled"
              },
              {
                "name": "Pending",
                "value": "Pending",
                "description": "is pending"
              },
              {
                "name": "Creating",
                "value": "Creating",
                "description": "is creating"
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "is updating"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "is deleting"
              }
            ]
          }
        },
        "netAppVolume": {
          "description": "An Azure NetApp Files volume",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Azure resource ID of the NetApp volume"
            }
          },
          "required": [
            "id"
          ]
        },
        "diskPoolVolume": {
          "description": "An iSCSI volume",
          "type": "object",
          "properties": {
            "targetId": {
              "type": "string",
              "description": "Azure resource ID of the iSCSI target"
            },
            "lunName": {
              "type": "string",
              "description": "Name of the LUN to be used for datastore"
            },
            "mountOption": {
              "type": "string",
              "description": "Mode that describes whether the LUN has to be mounted as a datastore or\nattached as a LUN",
              "default": "MOUNT",
              "enum": [
                "MOUNT",
                "ATTACH"
              ],
              "x-ms-enum": {
                "name": "MountOptionEnum",
                "modelAsString": true,
                "values": [
                  {
                    "name": "MOUNT",
                    "value": "MOUNT",
                    "description": "is mount"
                  },
                  {
                    "name": "ATTACH",
                    "value": "ATTACH",
                    "description": "is attach"
                  }
                ]
              }
            },
            "path": {
              "type": "string",
              "description": "Device path",
              "readOnly": true
            }
          },
          "required": [
            "targetId",
            "lunName"
          ]
        },
        "elasticSanVolume": {
          "description": "An Elastic SAN volume",
          "type": "object",
          "properties": {
            "targetId": {
              "type": "string",
              "format": "arm-id",
              "description": "Azure resource ID of the Elastic SAN Volume",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.ElasticSan/elasticSans/volumeGroups/volumes"
                  }
                ]
              }
            }
          },
          "required": [
            "targetId"
          ]
        },
        "pureStorageVolume": {
          "description": "A Pure Storage volume",
          "type": "object",
          "properties": {
            "storagePoolId": {
              "type": "string",
              "format": "arm-id",
              "description": "Azure resource ID of the Pure Storage Pool",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "PureStorage.Block/storagePools"
                  }
                ]
              }
            },
            "sizeGb": {
              "type": "integer",
              "format": "int32",
              "description": "Volume size to be used to create a Virtual Volumes (vVols) datastore"
            }
          },
          "required": [
            "storagePoolId",
            "sizeGb"
          ]
        },
        "status": {
          "description": "The operational status of the datastore",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Unknown",
            "Accessible",
            "Inaccessible",
            "Attached",
            "Detached",
            "LostCommunication",
            "DeadOrError"
          ],
          "x-ms-enum": {
            "name": "DatastoreStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Unknown",
                "value": "Unknown",
                "description": "is unknown"
              },
              {
                "name": "Accessible",
                "value": "Accessible",
                "description": "is accessible"
              },
              {
                "name": "Inaccessible",
                "value": "Inaccessible",
                "description": "is inaccessible"
              },
              {
                "name": "Attached",
                "value": "Attached",
                "description": "is attached"
              },
              {
                "name": "Detached",
                "value": "Detached",
                "description": "is detached"
              },
              {
                "name": "LostCommunication",
                "value": "LostCommunication",
                "description": "is lost communication"
              },
              {
                "name": "DeadOrError",
                "value": "DeadOrError",
                "description": "is dead or error"
              }
            ]
          }
        }
      }
    },
    "DatastoreProvisioningState": {
      "type": "string",
      "description": "datastore provisioning state",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Cancelled",
        "Pending",
        "Creating",
        "Updating",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "DatastoreProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Cancelled",
            "value": "Cancelled",
            "description": "is cancelled"
          },
          {
            "name": "Pending",
            "value": "Pending",
            "description": "is pending"
          },
          {
            "name": "Creating",
            "value": "Creating",
            "description": "is creating"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "is updating"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "is deleting"
          }
        ]
      },
      "readOnly": true
    },
    "DatastoreStatus": {
      "type": "string",
      "description": "datastore status",
      "enum": [
        "Unknown",
        "Accessible",
        "Inaccessible",
        "Attached",
        "Detached",
        "LostCommunication",
        "DeadOrError"
      ],
      "x-ms-enum": {
        "name": "DatastoreStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Unknown",
            "value": "Unknown",
            "description": "is unknown"
          },
          {
            "name": "Accessible",
            "value": "Accessible",
            "description": "is accessible"
          },
          {
            "name": "Inaccessible",
            "value": "Inaccessible",
            "description": "is inaccessible"
          },
          {
            "name": "Attached",
            "value": "Attached",
            "description": "is attached"
          },
          {
            "name": "Detached",
            "value": "Detached",
            "description": "is detached"
          },
          {
            "name": "LostCommunication",
            "value": "LostCommunication",
            "description": "is lost communication"
          },
          {
            "name": "DeadOrError",
            "value": "DeadOrError",
            "description": "is dead or error"
          }
        ]
      }
    },
    "DhcpTypeEnum": {
      "type": "string",
      "description": "Type of DHCP: SERVER or RELAY.",
      "enum": [
        "SERVER",
        "RELAY"
      ],
      "x-ms-enum": {
        "name": "DhcpTypeEnum",
        "modelAsString": true,
        "values": [
          {
            "name": "SERVER",
            "value": "SERVER"
          },
          {
            "name": "RELAY",
            "value": "RELAY"
          }
        ]
      }
    },
    "DiskPoolVolume": {
      "type": "object",
      "description": "An iSCSI volume from Microsoft.StoragePool provider",
      "properties": {
        "targetId": {
          "type": "string",
          "description": "Azure resource ID of the iSCSI target"
        },
        "lunName": {
          "type": "string",
          "description": "Name of the LUN to be used for datastore"
        },
        "mountOption": {
          "type": "string",
          "description": "Mode that describes whether the LUN has to be mounted as a datastore or\nattached as a LUN",
          "default": "MOUNT",
          "enum": [
            "MOUNT",
            "ATTACH"
          ],
          "x-ms-enum": {
            "name": "MountOptionEnum",
            "modelAsString": true,
            "values": [
              {
                "name": "MOUNT",
                "value": "MOUNT",
                "description": "is mount"
              },
              {
                "name": "ATTACH",
                "value": "ATTACH",
                "description": "is attach"
              }
            ]
          }
        },
        "path": {
          "type": "string",
          "description": "Device path",
          "readOnly": true
        }
      },
      "required": [
        "targetId",
        "lunName"
      ]
    },
    "DnsServiceLogLevelEnum": {
      "type": "string",
      "description": "DNS service log level",
      "enum": [
        "DEBUG",
        "INFO",
        "WARNING",
        "ERROR",
        "FATAL"
      ],
      "x-ms-enum": {
        "name": "DnsServiceLogLevelEnum",
        "modelAsString": true,
        "values": [
          {
            "name": "DEBUG",
            "value": "DEBUG",
            "description": "is debug"
          },
          {
            "name": "INFO",
            "value": "INFO",
            "description": "is info"
          },
          {
            "name": "WARNING",
            "value": "WARNING",
            "description": "is warning"
          },
          {
            "name": "ERROR",
            "value": "ERROR",
            "description": "is error"
          },
          {
            "name": "FATAL",
            "value": "FATAL",
            "description": "is fatal"
          }
        ]
      }
    },
    "DnsServiceStatusEnum": {
      "type": "string",
      "description": "DNS service status",
      "enum": [
        "SUCCESS",
        "FAILURE"
      ],
      "x-ms-enum": {
        "name": "DnsServiceStatusEnum",
        "modelAsString": true,
        "values": [
          {
            "name": "SUCCESS",
            "value": "SUCCESS",
            "description": "is success"
          },
          {
            "name": "FAILURE",
            "value": "FAILURE",
            "description": "is failure"
          }
        ]
      }
    },
    "DnsZoneType": {
      "type": "string",
      "description": "The type of DNS zone.",
      "enum": [
        "Public",
        "Private"
      ],
      "x-ms-enum": {
        "name": "DnsZoneType",
        "modelAsString": true,
        "values": [
          {
            "name": "Public",
            "value": "Public",
            "description": "Primary DNS zone."
          },
          {
            "name": "Private",
            "value": "Private",
            "description": "Private DNS zone."
          }
        ]
      }
    },
    "ElasticSanVolume": {
      "type": "object",
      "description": "An Elastic SAN volume from Microsoft.ElasticSan provider",
      "properties": {
        "targetId": {
          "type": "string",
          "format": "arm-id",
          "description": "Azure resource ID of the Elastic SAN Volume",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ElasticSan/elasticSans/volumeGroups/volumes"
              }
            ]
          }
        }
      },
      "required": [
        "targetId"
      ]
    },
    "Encryption": {
      "type": "object",
      "description": "The properties of customer managed encryption key",
      "properties": {
        "status": {
          "description": "Status of customer managed encryption key",
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "EncryptionState",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "is enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "is disabled"
              }
            ]
          }
        },
        "keyVaultProperties": {
          "description": "The key vault where the encryption key is stored",
          "type": "object",
          "properties": {
            "keyName": {
              "type": "string",
              "description": "The name of the key."
            },
            "keyVersion": {
              "type": "string",
              "description": "The version of the key."
            },
            "autoDetectedKeyVersion": {
              "type": "string",
              "description": "The auto-detected version of the key if versionType is auto-detected.",
              "readOnly": true
            },
            "keyVaultUrl": {
              "type": "string",
              "description": "The URL of the vault."
            },
            "keyState": {
              "description": "The state of key provided",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Connected",
                "AccessDenied"
              ],
              "x-ms-enum": {
                "name": "EncryptionKeyStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Connected",
                    "value": "Connected",
                    "description": "is connected"
                  },
                  {
                    "name": "AccessDenied",
                    "value": "AccessDenied",
                    "description": "is access denied"
                  }
                ]
              }
            },
            "versionType": {
              "description": "Property of the key if user provided or auto detected",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Fixed",
                "AutoDetected"
              ],
              "x-ms-enum": {
                "name": "EncryptionVersionType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Fixed",
                    "value": "Fixed",
                    "description": "is fixed"
                  },
                  {
                    "name": "AutoDetected",
                    "value": "AutoDetected",
                    "description": "is auto-detected"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "EncryptionKeyStatus": {
      "type": "string",
      "description": "Whether the the encryption key is connected or access denied",
      "enum": [
        "Connected",
        "AccessDenied"
      ],
      "x-ms-enum": {
        "name": "EncryptionKeyStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Connected",
            "value": "Connected",
            "description": "is connected"
          },
          {
            "name": "AccessDenied",
            "value": "AccessDenied",
            "description": "is access denied"
          }
        ]
      }
    },
    "EncryptionKeyVaultProperties": {
      "type": "object",
      "description": "An Encryption Key",
      "properties": {
        "keyName": {
          "type": "string",
          "description": "The name of the key."
        },
        "keyVersion": {
          "type": "string",
          "description": "The version of the key."
        },
        "autoDetectedKeyVersion": {
          "type": "string",
          "description": "The auto-detected version of the key if versionType is auto-detected.",
          "readOnly": true
        },
        "keyVaultUrl": {
          "type": "string",
          "description": "The URL of the vault."
        },
        "keyState": {
          "description": "The state of key provided",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Connected",
            "AccessDenied"
          ],
          "x-ms-enum": {
            "name": "EncryptionKeyStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Connected",
                "value": "Connected",
                "description": "is connected"
              },
              {
                "name": "AccessDenied",
                "value": "AccessDenied",
                "description": "is access denied"
              }
            ]
          }
        },
        "versionType": {
          "description": "Property of the key if user provided or auto detected",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Fixed",
            "AutoDetected"
          ],
          "x-ms-enum": {
            "name": "EncryptionVersionType",
            "modelAsString": true,
            "values": [
              {
                "name": "Fixed",
                "value": "Fixed",
                "description": "is fixed"
              },
              {
                "name": "AutoDetected",
                "value": "AutoDetected",
                "description": "is auto-detected"
              }
            ]
          }
        }
      }
    },
    "EncryptionState": {
      "type": "string",
      "description": "Whether encryption is enabled or disabled",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "EncryptionState",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "is enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "is disabled"
          }
        ]
      }
    },
    "EncryptionVersionType": {
      "type": "string",
      "description": "Whether the encryption version is fixed or auto-detected",
      "enum": [
        "Fixed",
        "AutoDetected"
      ],
      "x-ms-enum": {
        "name": "EncryptionVersionType",
        "modelAsString": true,
        "values": [
          {
            "name": "Fixed",
            "value": "Fixed",
            "description": "is fixed"
          },
          {
            "name": "AutoDetected",
            "value": "AutoDetected",
            "description": "is auto-detected"
          }
        ]
      }
    },
    "Endpoints": {
      "type": "object",
      "description": "Endpoint addresses",
      "properties": {
        "nsxtManager": {
          "type": "string",
          "description": "Endpoint FQDN for the NSX-T Data Center manager",
          "readOnly": true
        },
        "vcsa": {
          "type": "string",
          "description": "Endpoint FQDN for Virtual Center Server Appliance",
          "readOnly": true
        },
        "hcxCloudManager": {
          "type": "string",
          "description": "Endpoint FQDN for the HCX Cloud Manager",
          "readOnly": true
        },
        "nsxtManagerIp": {
          "type": "string",
          "description": "Endpoint IP for the NSX-T Data Center manager",
          "readOnly": true
        },
        "vcenterIp": {
          "type": "string",
          "description": "Endpoint IP for Virtual Center Server Appliance",
          "readOnly": true
        },
        "hcxCloudManagerIp": {
          "type": "string",
          "description": "Endpoint IP for the HCX Cloud Manager",
          "readOnly": true
        }
      }
    },
    "ExpressRouteAuthorization": {
      "type": "object",
      "description": "ExpressRoute Circuit Authorization",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "The state of the ExpressRoute Circuit Authorization provisioning",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Updating"
              ],
              "x-ms-enum": {
                "name": "ExpressRouteAuthorizationProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "is updating"
                  }
                ]
              }
            },
            "expressRouteAuthorizationId": {
              "type": "string",
              "description": "The ID of the ExpressRoute Circuit Authorization",
              "readOnly": true
            },
            "expressRouteAuthorizationKey": {
              "type": "string",
              "description": "The key of the ExpressRoute Circuit Authorization",
              "readOnly": true
            },
            "expressRouteId": {
              "type": "string",
              "description": "The ID of the ExpressRoute Circuit"
            }
          }
        }
      }
    },
    "ExpressRouteAuthorizationList": {
      "type": "object",
      "description": "The response of a ExpressRouteAuthorization list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ExpressRouteAuthorization items on this page",
          "items": {
            "type": "object",
            "description": "ExpressRoute Circuit Authorization",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "The state of the ExpressRoute Circuit Authorization provisioning",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Updating"
                    ],
                    "x-ms-enum": {
                      "name": "ExpressRouteAuthorizationProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "is updating"
                        }
                      ]
                    }
                  },
                  "expressRouteAuthorizationId": {
                    "type": "string",
                    "description": "The ID of the ExpressRoute Circuit Authorization",
                    "readOnly": true
                  },
                  "expressRouteAuthorizationKey": {
                    "type": "string",
                    "description": "The key of the ExpressRoute Circuit Authorization",
                    "readOnly": true
                  },
                  "expressRouteId": {
                    "type": "string",
                    "description": "The ID of the ExpressRoute Circuit"
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ExpressRouteAuthorizationProperties": {
      "type": "object",
      "description": "The properties of an ExpressRoute Circuit Authorization resource",
      "properties": {
        "provisioningState": {
          "description": "The state of the ExpressRoute Circuit Authorization provisioning",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "ExpressRouteAuthorizationProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "is updating"
              }
            ]
          }
        },
        "expressRouteAuthorizationId": {
          "type": "string",
          "description": "The ID of the ExpressRoute Circuit Authorization",
          "readOnly": true
        },
        "expressRouteAuthorizationKey": {
          "type": "string",
          "description": "The key of the ExpressRoute Circuit Authorization",
          "readOnly": true
        },
        "expressRouteId": {
          "type": "string",
          "description": "The ID of the ExpressRoute Circuit"
        }
      }
    },
    "ExpressRouteAuthorizationProvisioningState": {
      "type": "string",
      "description": "Express Route Circuit Authorization provisioning state",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "ExpressRouteAuthorizationProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "is updating"
          }
        ]
      },
      "readOnly": true
    },
    "GeneralHostProperties": {
      "type": "object",
      "description": "The properties of a general host.",
      "allOf": [
        {
          "type": "object",
          "description": "The properties of a host.",
          "properties": {
            "kind": {
              "description": "The kind of host",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "string",
              "enum": [
                "General",
                "Specialized"
              ],
              "x-ms-enum": {
                "name": "HostKind",
                "modelAsString": true,
                "values": [
                  {
                    "name": "General",
                    "value": "General"
                  },
                  {
                    "name": "Specialized",
                    "value": "Specialized"
                  }
                ]
              }
            },
            "provisioningState": {
              "description": "The state of the host provisioning.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled"
              ],
              "x-ms-enum": {
                "name": "HostProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  }
                ]
              }
            },
            "displayName": {
              "type": "string",
              "description": "Display name of the host in VMware vCenter."
            },
            "moRefId": {
              "type": "string",
              "description": "vCenter managed object reference ID of the host.",
              "readOnly": true
            },
            "fqdn": {
              "type": "string",
              "description": "Fully qualified domain name of the host.",
              "minLength": 1,
              "maxLength": 255,
              "readOnly": true
            },
            "maintenance": {
              "description": "If provided, the host is in maintenance. The value is the reason for maintenance.",
              "type": "string",
              "enum": [
                "Replacement",
                "Upgrade"
              ],
              "x-ms-enum": {
                "name": "HostMaintenance",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Replacement",
                    "value": "Replacement",
                    "description": "The host is a replacement host."
                  },
                  {
                    "name": "Upgrade",
                    "value": "Upgrade",
                    "description": "The host is for an upgrade, such as an upgrade to ESXi, NSX-T, or other component."
                  }
                ]
              }
            },
            "faultDomain": {
              "type": "string",
              "readOnly": true
            }
          },
          "discriminator": "kind",
          "required": [
            "kind"
          ]
        }
      ],
      "x-ms-discriminator-value": "General"
    },
    "GlobalReachConnection": {
      "type": "object",
      "description": "A global reach connection resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "The state of the  ExpressRoute Circuit Authorization provisioning",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Updating"
              ],
              "x-ms-enum": {
                "name": "GlobalReachConnectionProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "is updating"
                  }
                ]
              }
            },
            "addressPrefix": {
              "type": "string",
              "description": "The network used for global reach carved out from the original network block\nprovided for the private cloud",
              "readOnly": true
            },
            "authorizationKey": {
              "type": "string",
              "description": "Authorization key from the peer express route used for the global reach\nconnection"
            },
            "circuitConnectionStatus": {
              "description": "The connection status of the global reach connection",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Connected",
                "Connecting",
                "Disconnected"
              ],
              "x-ms-enum": {
                "name": "GlobalReachConnectionStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Connected",
                    "value": "Connected",
                    "description": "is connected"
                  },
                  {
                    "name": "Connecting",
                    "value": "Connecting",
                    "description": "is connecting"
                  },
                  {
                    "name": "Disconnected",
                    "value": "Disconnected",
                    "description": "is disconnected"
                  }
                ]
              }
            },
            "peerExpressRouteCircuit": {
              "type": "string",
              "description": "Identifier of the ExpressRoute Circuit to peer with in the global reach\nconnection"
            },
            "expressRouteId": {
              "type": "string",
              "description": "The ID of the Private Cloud's ExpressRoute Circuit that is participating in the\nglobal reach connection"
            }
          }
        }
      }
    },
    "GlobalReachConnectionList": {
      "type": "object",
      "description": "The response of a GlobalReachConnection list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The GlobalReachConnection items on this page",
          "items": {
            "type": "object",
            "description": "A global reach connection resource",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "The state of the  ExpressRoute Circuit Authorization provisioning",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Updating"
                    ],
                    "x-ms-enum": {
                      "name": "GlobalReachConnectionProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "is updating"
                        }
                      ]
                    }
                  },
                  "addressPrefix": {
                    "type": "string",
                    "description": "The network used for global reach carved out from the original network block\nprovided for the private cloud",
                    "readOnly": true
                  },
                  "authorizationKey": {
                    "type": "string",
                    "description": "Authorization key from the peer express route used for the global reach\nconnection"
                  },
                  "circuitConnectionStatus": {
                    "description": "The connection status of the global reach connection",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Connected",
                      "Connecting",
                      "Disconnected"
                    ],
                    "x-ms-enum": {
                      "name": "GlobalReachConnectionStatus",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Connected",
                          "value": "Connected",
                          "description": "is connected"
                        },
                        {
                          "name": "Connecting",
                          "value": "Connecting",
                          "description": "is connecting"
                        },
                        {
                          "name": "Disconnected",
                          "value": "Disconnected",
                          "description": "is disconnected"
                        }
                      ]
                    }
                  },
                  "peerExpressRouteCircuit": {
                    "type": "string",
                    "description": "Identifier of the ExpressRoute Circuit to peer with in the global reach\nconnection"
                  },
                  "expressRouteId": {
                    "type": "string",
                    "description": "The ID of the Private Cloud's ExpressRoute Circuit that is participating in the\nglobal reach connection"
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "GlobalReachConnectionProperties": {
      "type": "object",
      "description": "The properties of a global reach connection",
      "properties": {
        "provisioningState": {
          "description": "The state of the  ExpressRoute Circuit Authorization provisioning",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "GlobalReachConnectionProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "is updating"
              }
            ]
          }
        },
        "addressPrefix": {
          "type": "string",
          "description": "The network used for global reach carved out from the original network block\nprovided for the private cloud",
          "readOnly": true
        },
        "authorizationKey": {
          "type": "string",
          "description": "Authorization key from the peer express route used for the global reach\nconnection"
        },
        "circuitConnectionStatus": {
          "description": "The connection status of the global reach connection",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Connected",
            "Connecting",
            "Disconnected"
          ],
          "x-ms-enum": {
            "name": "GlobalReachConnectionStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Connected",
                "value": "Connected",
                "description": "is connected"
              },
              {
                "name": "Connecting",
                "value": "Connecting",
                "description": "is connecting"
              },
              {
                "name": "Disconnected",
                "value": "Disconnected",
                "description": "is disconnected"
              }
            ]
          }
        },
        "peerExpressRouteCircuit": {
          "type": "string",
          "description": "Identifier of the ExpressRoute Circuit to peer with in the global reach\nconnection"
        },
        "expressRouteId": {
          "type": "string",
          "description": "The ID of the Private Cloud's ExpressRoute Circuit that is participating in the\nglobal reach connection"
        }
      }
    },
    "GlobalReachConnectionProvisioningState": {
      "type": "string",
      "description": "Global Reach Connection provisioning state",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "GlobalReachConnectionProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "is updating"
          }
        ]
      },
      "readOnly": true
    },
    "GlobalReachConnectionStatus": {
      "type": "string",
      "description": "Global Reach Connection status",
      "enum": [
        "Connected",
        "Connecting",
        "Disconnected"
      ],
      "x-ms-enum": {
        "name": "GlobalReachConnectionStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Connected",
            "value": "Connected",
            "description": "is connected"
          },
          {
            "name": "Connecting",
            "value": "Connecting",
            "description": "is connecting"
          },
          {
            "name": "Disconnected",
            "value": "Disconnected",
            "description": "is disconnected"
          }
        ]
      }
    },
    "HcxEnterpriseSite": {
      "type": "object",
      "description": "An HCX Enterprise Site resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "The provisioning state of the resource.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled"
              ],
              "x-ms-enum": {
                "name": "HcxEnterpriseSiteProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  }
                ]
              }
            },
            "activationKey": {
              "type": "string",
              "description": "The activation key",
              "readOnly": true
            },
            "status": {
              "description": "The status of the HCX Enterprise Site",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Available",
                "Consumed",
                "Deactivated",
                "Deleted"
              ],
              "x-ms-enum": {
                "name": "HcxEnterpriseSiteStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Available",
                    "value": "Available",
                    "description": "is available"
                  },
                  {
                    "name": "Consumed",
                    "value": "Consumed",
                    "description": "is consumed"
                  },
                  {
                    "name": "Deactivated",
                    "value": "Deactivated",
                    "description": "is deactivated"
                  },
                  {
                    "name": "Deleted",
                    "value": "Deleted",
                    "description": "is deleted"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "HcxEnterpriseSiteList": {
      "type": "object",
      "description": "The response of a HcxEnterpriseSite list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The HcxEnterpriseSite items on this page",
          "items": {
            "type": "object",
            "description": "An HCX Enterprise Site resource",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "The provisioning state of the resource.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled"
                    ],
                    "x-ms-enum": {
                      "name": "HcxEnterpriseSiteProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        }
                      ]
                    }
                  },
                  "activationKey": {
                    "type": "string",
                    "description": "The activation key",
                    "readOnly": true
                  },
                  "status": {
                    "description": "The status of the HCX Enterprise Site",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Available",
                      "Consumed",
                      "Deactivated",
                      "Deleted"
                    ],
                    "x-ms-enum": {
                      "name": "HcxEnterpriseSiteStatus",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Available",
                          "value": "Available",
                          "description": "is available"
                        },
                        {
                          "name": "Consumed",
                          "value": "Consumed",
                          "description": "is consumed"
                        },
                        {
                          "name": "Deactivated",
                          "value": "Deactivated",
                          "description": "is deactivated"
                        },
                        {
                          "name": "Deleted",
                          "value": "Deleted",
                          "description": "is deleted"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "HcxEnterpriseSiteProperties": {
      "type": "object",
      "description": "The properties of an HCX Enterprise Site",
      "properties": {
        "provisioningState": {
          "description": "The provisioning state of the resource.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "HcxEnterpriseSiteProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              }
            ]
          }
        },
        "activationKey": {
          "type": "string",
          "description": "The activation key",
          "readOnly": true
        },
        "status": {
          "description": "The status of the HCX Enterprise Site",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Available",
            "Consumed",
            "Deactivated",
            "Deleted"
          ],
          "x-ms-enum": {
            "name": "HcxEnterpriseSiteStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Available",
                "value": "Available",
                "description": "is available"
              },
              {
                "name": "Consumed",
                "value": "Consumed",
                "description": "is consumed"
              },
              {
                "name": "Deactivated",
                "value": "Deactivated",
                "description": "is deactivated"
              },
              {
                "name": "Deleted",
                "value": "Deleted",
                "description": "is deleted"
              }
            ]
          }
        }
      }
    },
    "HcxEnterpriseSiteProvisioningState": {
      "type": "string",
      "description": "HCX Enterprise Site provisioning state",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "HcxEnterpriseSiteProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          }
        ]
      },
      "readOnly": true
    },
    "HcxEnterpriseSiteStatus": {
      "type": "string",
      "description": "HCX Enterprise Site status",
      "enum": [
        "Available",
        "Consumed",
        "Deactivated",
        "Deleted"
      ],
      "x-ms-enum": {
        "name": "HcxEnterpriseSiteStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Available",
            "value": "Available",
            "description": "is available"
          },
          {
            "name": "Consumed",
            "value": "Consumed",
            "description": "is consumed"
          },
          {
            "name": "Deactivated",
            "value": "Deactivated",
            "description": "is deactivated"
          },
          {
            "name": "Deleted",
            "value": "Deleted",
            "description": "is deleted"
          }
        ]
      }
    },
    "Host": {
      "type": "object",
      "description": "A host resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "kind": {
              "description": "The kind of host",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "string",
              "enum": [
                "General",
                "Specialized"
              ],
              "x-ms-enum": {
                "name": "HostKind",
                "modelAsString": true,
                "values": [
                  {
                    "name": "General",
                    "value": "General"
                  },
                  {
                    "name": "Specialized",
                    "value": "Specialized"
                  }
                ]
              }
            },
            "provisioningState": {
              "description": "The state of the host provisioning.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled"
              ],
              "x-ms-enum": {
                "name": "HostProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  }
                ]
              }
            },
            "displayName": {
              "type": "string",
              "description": "Display name of the host in VMware vCenter."
            },
            "moRefId": {
              "type": "string",
              "description": "vCenter managed object reference ID of the host.",
              "readOnly": true
            },
            "fqdn": {
              "type": "string",
              "description": "Fully qualified domain name of the host.",
              "minLength": 1,
              "maxLength": 255,
              "readOnly": true
            },
            "maintenance": {
              "description": "If provided, the host is in maintenance. The value is the reason for maintenance.",
              "type": "string",
              "enum": [
                "Replacement",
                "Upgrade"
              ],
              "x-ms-enum": {
                "name": "HostMaintenance",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Replacement",
                    "value": "Replacement",
                    "description": "The host is a replacement host."
                  },
                  {
                    "name": "Upgrade",
                    "value": "Upgrade",
                    "description": "The host is for an upgrade, such as an upgrade to ESXi, NSX-T, or other component."
                  }
                ]
              }
            },
            "faultDomain": {
              "type": "string",
              "readOnly": true
            }
          },
          "discriminator": "kind",
          "required": [
            "kind"
          ]
        },
        "zones": {
          "type": "array",
          "description": "The availability zones.",
          "items": {
            "type": "string"
          }
        },
        "sku": {
          "type": "object",
          "description": "The resource model definition representing SKU",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
            },
            "tier": {
              "type": "string",
              "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
              "enum": [
                "Free",
                "Basic",
                "Standard",
                "Premium"
              ],
              "x-ms-enum": {
                "name": "SkuTier",
                "modelAsString": false
              }
            },
            "size": {
              "type": "string",
              "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
            },
            "family": {
              "type": "string",
              "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
            },
            "capacity": {
              "type": "integer",
              "format": "int32",
              "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
            }
          },
          "required": [
            "name"
          ]
        }
      }
    },
    "HostKind": {
      "type": "string",
      "description": "The kind of host.",
      "enum": [
        "General",
        "Specialized"
      ],
      "x-ms-enum": {
        "name": "HostKind",
        "modelAsString": true,
        "values": [
          {
            "name": "General",
            "value": "General"
          },
          {
            "name": "Specialized",
            "value": "Specialized"
          }
        ]
      }
    },
    "HostListResult": {
      "type": "object",
      "description": "The response of a Host list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Host items on this page",
          "items": {
            "type": "object",
            "description": "A host resource",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "kind": {
                    "description": "The kind of host",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "type": "string",
                    "enum": [
                      "General",
                      "Specialized"
                    ],
                    "x-ms-enum": {
                      "name": "HostKind",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "General",
                          "value": "General"
                        },
                        {
                          "name": "Specialized",
                          "value": "Specialized"
                        }
                      ]
                    }
                  },
                  "provisioningState": {
                    "description": "The state of the host provisioning.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled"
                    ],
                    "x-ms-enum": {
                      "name": "HostProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        }
                      ]
                    }
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Display name of the host in VMware vCenter."
                  },
                  "moRefId": {
                    "type": "string",
                    "description": "vCenter managed object reference ID of the host.",
                    "readOnly": true
                  },
                  "fqdn": {
                    "type": "string",
                    "description": "Fully qualified domain name of the host.",
                    "minLength": 1,
                    "maxLength": 255,
                    "readOnly": true
                  },
                  "maintenance": {
                    "description": "If provided, the host is in maintenance. The value is the reason for maintenance.",
                    "type": "string",
                    "enum": [
                      "Replacement",
                      "Upgrade"
                    ],
                    "x-ms-enum": {
                      "name": "HostMaintenance",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Replacement",
                          "value": "Replacement",
                          "description": "The host is a replacement host."
                        },
                        {
                          "name": "Upgrade",
                          "value": "Upgrade",
                          "description": "The host is for an upgrade, such as an upgrade to ESXi, NSX-T, or other component."
                        }
                      ]
                    }
                  },
                  "faultDomain": {
                    "type": "string",
                    "readOnly": true
                  }
                },
                "discriminator": "kind",
                "required": [
                  "kind"
                ]
              },
              "zones": {
                "type": "array",
                "description": "The availability zones.",
                "items": {
                  "type": "string"
                }
              },
              "sku": {
                "type": "object",
                "description": "The resource model definition representing SKU",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
                  },
                  "tier": {
                    "type": "string",
                    "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
                    "enum": [
                      "Free",
                      "Basic",
                      "Standard",
                      "Premium"
                    ],
                    "x-ms-enum": {
                      "name": "SkuTier",
                      "modelAsString": false
                    }
                  },
                  "size": {
                    "type": "string",
                    "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                  },
                  "family": {
                    "type": "string",
                    "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                  },
                  "capacity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "HostMaintenance": {
      "type": "string",
      "description": "The reason for host maintenance.",
      "enum": [
        "Replacement",
        "Upgrade"
      ],
      "x-ms-enum": {
        "name": "HostMaintenance",
        "modelAsString": true,
        "values": [
          {
            "name": "Replacement",
            "value": "Replacement",
            "description": "The host is a replacement host."
          },
          {
            "name": "Upgrade",
            "value": "Upgrade",
            "description": "The host is for an upgrade, such as an upgrade to ESXi, NSX-T, or other component."
          }
        ]
      }
    },
    "HostProperties": {
      "type": "object",
      "description": "The properties of a host.",
      "properties": {
        "kind": {
          "description": "The kind of host",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "string",
          "enum": [
            "General",
            "Specialized"
          ],
          "x-ms-enum": {
            "name": "HostKind",
            "modelAsString": true,
            "values": [
              {
                "name": "General",
                "value": "General"
              },
              {
                "name": "Specialized",
                "value": "Specialized"
              }
            ]
          }
        },
        "provisioningState": {
          "description": "The state of the host provisioning.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "HostProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              }
            ]
          }
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the host in VMware vCenter."
        },
        "moRefId": {
          "type": "string",
          "description": "vCenter managed object reference ID of the host.",
          "readOnly": true
        },
        "fqdn": {
          "type": "string",
          "description": "Fully qualified domain name of the host.",
          "minLength": 1,
          "maxLength": 255,
          "readOnly": true
        },
        "maintenance": {
          "description": "If provided, the host is in maintenance. The value is the reason for maintenance.",
          "type": "string",
          "enum": [
            "Replacement",
            "Upgrade"
          ],
          "x-ms-enum": {
            "name": "HostMaintenance",
            "modelAsString": true,
            "values": [
              {
                "name": "Replacement",
                "value": "Replacement",
                "description": "The host is a replacement host."
              },
              {
                "name": "Upgrade",
                "value": "Upgrade",
                "description": "The host is for an upgrade, such as an upgrade to ESXi, NSX-T, or other component."
              }
            ]
          }
        },
        "faultDomain": {
          "type": "string",
          "readOnly": true
        }
      },
      "discriminator": "kind",
      "required": [
        "kind"
      ]
    },
    "HostProvisioningState": {
      "type": "string",
      "description": "provisioning state of the host",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "HostProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          }
        ]
      },
      "readOnly": true
    },
    "IdentitySource": {
      "type": "object",
      "description": "vCenter Single Sign On Identity Source",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the identity source"
        },
        "alias": {
          "type": "string",
          "description": "The domain's NetBIOS name"
        },
        "domain": {
          "type": "string",
          "description": "The domain's DNS name"
        },
        "baseUserDN": {
          "type": "string",
          "description": "The base distinguished name for users"
        },
        "baseGroupDN": {
          "type": "string",
          "description": "The base distinguished name for groups"
        },
        "primaryServer": {
          "type": "string",
          "description": "Primary server URL"
        },
        "secondaryServer": {
          "type": "string",
          "description": "Secondary server URL"
        },
        "ssl": {
          "description": "Protect LDAP communication using SSL certificate (LDAPS)",
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "SslEnum",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "is enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "is disabled"
              }
            ]
          }
        },
        "username": {
          "type": "string",
          "description": "The ID of an Active Directory user with a minimum of read-only access to Base\nDN for users and group"
        },
        "password": {
          "type": "string",
          "format": "password",
          "description": "The password of the Active Directory user with a minimum of read-only access to\nBase DN for users and groups.",
          "x-ms-secret": true
        }
      }
    },
    "InternetEnum": {
      "type": "string",
      "description": "Whether internet is enabled or disabled",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "InternetEnum",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "is enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "is disabled"
          }
        ]
      }
    },
    "IscsiPath": {
      "type": "object",
      "description": "An iSCSI path resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "The state of the iSCSI path provisioning",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Pending",
                "Building",
                "Deleting",
                "Updating"
              ],
              "x-ms-enum": {
                "name": "IscsiPathProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Pending",
                    "value": "Pending",
                    "description": "is pending"
                  },
                  {
                    "name": "Building",
                    "value": "Building",
                    "description": "is building"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "is deleting"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "is updating"
                  }
                ]
              }
            },
            "networkBlock": {
              "type": "string",
              "description": "CIDR Block for iSCSI path.",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            }
          },
          "required": [
            "networkBlock"
          ]
        }
      }
    },
    "IscsiPathListResult": {
      "type": "object",
      "description": "The response of a IscsiPath list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The IscsiPath items on this page",
          "items": {
            "type": "object",
            "description": "An iSCSI path resource",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "The state of the iSCSI path provisioning",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Pending",
                      "Building",
                      "Deleting",
                      "Updating"
                    ],
                    "x-ms-enum": {
                      "name": "IscsiPathProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Pending",
                          "value": "Pending",
                          "description": "is pending"
                        },
                        {
                          "name": "Building",
                          "value": "Building",
                          "description": "is building"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "is deleting"
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "is updating"
                        }
                      ]
                    }
                  },
                  "networkBlock": {
                    "type": "string",
                    "description": "CIDR Block for iSCSI path.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  }
                },
                "required": [
                  "networkBlock"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "IscsiPathProperties": {
      "type": "object",
      "description": "The properties of an iSCSI path resource",
      "properties": {
        "provisioningState": {
          "description": "The state of the iSCSI path provisioning",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Pending",
            "Building",
            "Deleting",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "IscsiPathProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Pending",
                "value": "Pending",
                "description": "is pending"
              },
              {
                "name": "Building",
                "value": "Building",
                "description": "is building"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "is deleting"
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "is updating"
              }
            ]
          }
        },
        "networkBlock": {
          "type": "string",
          "description": "CIDR Block for iSCSI path.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "networkBlock"
      ]
    },
    "IscsiPathProvisioningState": {
      "type": "string",
      "description": "private cloud provisioning state",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Pending",
        "Building",
        "Deleting",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "IscsiPathProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Pending",
            "value": "Pending",
            "description": "is pending"
          },
          {
            "name": "Building",
            "value": "Building",
            "description": "is building"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "is deleting"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "is updating"
          }
        ]
      },
      "readOnly": true
    },
    "ManagementCluster": {
      "type": "object",
      "description": "The properties of a management cluster",
      "properties": {
        "clusterSize": {
          "type": "integer",
          "format": "int32",
          "description": "The cluster size"
        },
        "provisioningState": {
          "description": "The state of the cluster provisioning",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Cancelled",
            "Deleting",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "ClusterProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Cancelled",
                "value": "Cancelled",
                "description": "is cancelled"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "is deleting"
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "is updating"
              }
            ]
          }
        },
        "clusterId": {
          "type": "integer",
          "format": "int32",
          "description": "The identity",
          "readOnly": true
        },
        "hosts": {
          "type": "array",
          "description": "The hosts",
          "items": {
            "type": "string"
          }
        },
        "vsanDatastoreName": {
          "type": "string",
          "description": "Name of the vsan datastore associated with the cluster"
        }
      }
    },
    "NetAppVolume": {
      "type": "object",
      "description": "An Azure NetApp Files volume from Microsoft.NetApp provider",
      "properties": {
        "id": {
          "type": "string",
          "description": "Azure resource ID of the NetApp volume"
        }
      },
      "required": [
        "id"
      ]
    },
    "NsxPublicIpQuotaRaisedEnum": {
      "type": "string",
      "description": "NSX public IP quota raised",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "NsxPublicIpQuotaRaisedEnum",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "is enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "is disabled"
          }
        ]
      }
    },
    "OptionalParamEnum": {
      "type": "string",
      "description": "Optional Param",
      "enum": [
        "Optional",
        "Required"
      ],
      "x-ms-enum": {
        "name": "OptionalParamEnum",
        "modelAsString": true,
        "values": [
          {
            "name": "Optional",
            "value": "Optional",
            "description": "is optional"
          },
          {
            "name": "Required",
            "value": "Required",
            "description": "is required"
          }
        ]
      }
    },
    "PSCredentialExecutionParameter": {
      "type": "object",
      "description": "a powershell credential object",
      "properties": {
        "username": {
          "type": "string",
          "description": "username for login"
        },
        "password": {
          "type": "string",
          "format": "password",
          "description": "password for login",
          "x-ms-secret": true
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "The arguments passed in to the execution",
          "properties": {
            "type": {
              "description": "script execution parameter type",
              "type": "string",
              "enum": [
                "Value",
                "SecureValue",
                "Credential"
              ],
              "x-ms-enum": {
                "name": "ScriptExecutionParameterType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Value",
                    "value": "Value"
                  },
                  {
                    "name": "SecureValue",
                    "value": "SecureValue"
                  },
                  {
                    "name": "Credential",
                    "value": "Credential"
                  }
                ]
              }
            },
            "name": {
              "type": "string",
              "description": "The parameter name"
            }
          },
          "discriminator": "type",
          "required": [
            "type",
            "name"
          ]
        }
      ],
      "x-ms-discriminator-value": "Credential"
    },
    "PagedResourceSku": {
      "type": "object",
      "description": "Paged collection of ResourceSku items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ResourceSku items on this page",
          "items": {
            "type": "object",
            "description": "A SKU for a resource.",
            "properties": {
              "resourceType": {
                "description": "The type of resource the SKU applies to.",
                "type": "string",
                "enum": [
                  "privateClouds",
                  "privateClouds/clusters"
                ],
                "x-ms-enum": {
                  "name": "ResourceSkuResourceType",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "privateClouds",
                      "value": "privateClouds",
                      "description": "The SKU is for a private cloud."
                    },
                    {
                      "name": "privateClouds/clusters",
                      "value": "privateClouds/clusters",
                      "description": "The SKU is for a private cloud cluster."
                    }
                  ]
                }
              },
              "name": {
                "type": "string",
                "description": "The name of the SKU."
              },
              "tier": {
                "type": "string",
                "description": "The tier of virtual machines in a scale set"
              },
              "size": {
                "type": "string",
                "description": "The size of the SKU."
              },
              "family": {
                "type": "string",
                "description": "The family of the SKU."
              },
              "locations": {
                "type": "array",
                "description": "The set of locations that the SKU is available.",
                "items": {
                  "type": "string",
                  "description": "Represents an Azure geography region where supported resource providers live."
                }
              },
              "locationInfo": {
                "type": "array",
                "description": "A list of locations and availability zones in those locations where the SKU is available",
                "items": {
                  "type": "object",
                  "description": "Describes an available Compute SKU Location Information.",
                  "properties": {
                    "location": {
                      "type": "string",
                      "description": "Represents an Azure geography region where supported resource providers live."
                    },
                    "zones": {
                      "type": "array",
                      "description": "List of availability zones where the SKU is supported.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "zoneDetails": {
                      "type": "array",
                      "description": "Gets details of capabilities available to a SKU in specific zones.",
                      "items": {
                        "type": "object",
                        "description": "Describes The zonal capabilities of a SKU.",
                        "properties": {
                          "name": {
                            "type": "array",
                            "description": "Gets the set of zones that the SKU is available in with the specified capabilities.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "capabilities": {
                            "type": "array",
                            "description": "A list of capabilities that are available for the SKU in the specified list of zones.",
                            "items": {
                              "type": "object",
                              "description": "Describes The SKU capabilities object.",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name of the SKU capability."
                                },
                                "value": {
                                  "type": "string",
                                  "description": "The value of the SKU capability."
                                }
                              },
                              "required": [
                                "name",
                                "value"
                              ]
                            },
                            "x-ms-identifiers": []
                          }
                        },
                        "required": [
                          "name",
                          "capabilities"
                        ]
                      },
                      "x-ms-identifiers": []
                    }
                  },
                  "required": [
                    "location",
                    "zones",
                    "zoneDetails"
                  ]
                },
                "x-ms-identifiers": []
              },
              "capabilities": {
                "type": "array",
                "description": "Name value pairs to describe the capability.",
                "items": {
                  "type": "object",
                  "description": "Describes The SKU capabilities object.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the SKU capability."
                    },
                    "value": {
                      "type": "string",
                      "description": "The value of the SKU capability."
                    }
                  },
                  "required": [
                    "name",
                    "value"
                  ]
                },
                "x-ms-identifiers": []
              },
              "restrictions": {
                "type": "array",
                "description": "The restrictions of the SKU.",
                "items": {
                  "type": "object",
                  "description": "The restrictions of the SKU.",
                  "properties": {
                    "type": {
                      "description": "the type of restrictions.",
                      "type": "string",
                      "enum": [
                        "Location",
                        "Zone"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceSkuRestrictionsType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Location",
                            "value": "Location",
                            "description": "SKU restricted by location."
                          },
                          {
                            "name": "Zone",
                            "value": "Zone",
                            "description": "SKU restricted by availability zone."
                          }
                        ]
                      }
                    },
                    "values": {
                      "type": "array",
                      "description": "The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "restrictionInfo": {
                      "description": "The information about the restriction where the SKU cannot be used.",
                      "type": "object",
                      "properties": {
                        "locations": {
                          "type": "array",
                          "description": "Locations where the SKU is restricted",
                          "items": {
                            "type": "string",
                            "description": "Represents an Azure geography region where supported resource providers live."
                          }
                        },
                        "zones": {
                          "type": "array",
                          "description": "List of availability zones where the SKU is restricted.",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "reasonCode": {
                      "description": "the reason for restriction.",
                      "type": "string",
                      "enum": [
                        "QuotaId",
                        "NotAvailableForSubscription"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceSkuRestrictionsReasonCode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "QuotaId",
                            "value": "QuotaId",
                            "description": "The restriction is due to exceeding a quota limitation."
                          },
                          {
                            "name": "NotAvailableForSubscription",
                            "value": "NotAvailableForSubscription",
                            "description": "The restriction is not available for this subscription."
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "values",
                    "restrictionInfo"
                  ]
                },
                "x-ms-identifiers": []
              }
            },
            "required": [
              "resourceType",
              "name",
              "locations",
              "locationInfo",
              "restrictions"
            ]
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PlacementPoliciesList": {
      "type": "object",
      "description": "The response of a PlacementPolicy list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The PlacementPolicy items on this page",
          "items": {
            "type": "object",
            "description": "A vSphere Distributed Resource Scheduler (DRS) placement policy",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "type": {
                    "description": "Placement Policy type",
                    "type": "string",
                    "enum": [
                      "VmVm",
                      "VmHost"
                    ],
                    "x-ms-enum": {
                      "name": "PlacementPolicyType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "VmVm",
                          "value": "VmVm"
                        },
                        {
                          "name": "VmHost",
                          "value": "VmHost"
                        }
                      ]
                    }
                  },
                  "state": {
                    "description": "Whether the placement policy is enabled or disabled",
                    "type": "string",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "name": "PlacementPolicyState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Enabled",
                          "value": "Enabled",
                          "description": "is enabled"
                        },
                        {
                          "name": "Disabled",
                          "value": "Disabled",
                          "description": "is disabled"
                        }
                      ]
                    }
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Display name of the placement policy"
                  },
                  "provisioningState": {
                    "description": "The provisioning state",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Building",
                      "Deleting",
                      "Updating"
                    ],
                    "x-ms-enum": {
                      "name": "PlacementPolicyProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Building",
                          "value": "Building",
                          "description": "is building"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "is deleting"
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "is updating"
                        }
                      ]
                    }
                  }
                },
                "discriminator": "type",
                "required": [
                  "type"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PlacementPolicy": {
      "type": "object",
      "description": "A vSphere Distributed Resource Scheduler (DRS) placement policy",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "type": {
              "description": "Placement Policy type",
              "type": "string",
              "enum": [
                "VmVm",
                "VmHost"
              ],
              "x-ms-enum": {
                "name": "PlacementPolicyType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "VmVm",
                    "value": "VmVm"
                  },
                  {
                    "name": "VmHost",
                    "value": "VmHost"
                  }
                ]
              }
            },
            "state": {
              "description": "Whether the placement policy is enabled or disabled",
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "PlacementPolicyState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled",
                    "description": "is enabled"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "is disabled"
                  }
                ]
              }
            },
            "displayName": {
              "type": "string",
              "description": "Display name of the placement policy"
            },
            "provisioningState": {
              "description": "The provisioning state",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Building",
                "Deleting",
                "Updating"
              ],
              "x-ms-enum": {
                "name": "PlacementPolicyProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Building",
                    "value": "Building",
                    "description": "is building"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "is deleting"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "is updating"
                  }
                ]
              }
            }
          },
          "discriminator": "type",
          "required": [
            "type"
          ]
        }
      }
    },
    "PlacementPolicyProperties": {
      "type": "object",
      "description": "Abstract placement policy properties",
      "properties": {
        "type": {
          "description": "Placement Policy type",
          "type": "string",
          "enum": [
            "VmVm",
            "VmHost"
          ],
          "x-ms-enum": {
            "name": "PlacementPolicyType",
            "modelAsString": true,
            "values": [
              {
                "name": "VmVm",
                "value": "VmVm"
              },
              {
                "name": "VmHost",
                "value": "VmHost"
              }
            ]
          }
        },
        "state": {
          "description": "Whether the placement policy is enabled or disabled",
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "PlacementPolicyState",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "is enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "is disabled"
              }
            ]
          }
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the placement policy"
        },
        "provisioningState": {
          "description": "The provisioning state",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Building",
            "Deleting",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "PlacementPolicyProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Building",
                "value": "Building",
                "description": "is building"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "is deleting"
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "is updating"
              }
            ]
          }
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "PlacementPolicyProvisioningState": {
      "type": "string",
      "description": "Placement Policy provisioning state",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Building",
        "Deleting",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "PlacementPolicyProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Building",
            "value": "Building",
            "description": "is building"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "is deleting"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "is updating"
          }
        ]
      },
      "readOnly": true
    },
    "PlacementPolicyState": {
      "type": "string",
      "description": "Placement Policy state",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "PlacementPolicyState",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "is enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "is disabled"
          }
        ]
      }
    },
    "PlacementPolicyType": {
      "type": "string",
      "description": "Placement Policy type",
      "enum": [
        "VmVm",
        "VmHost"
      ],
      "x-ms-enum": {
        "name": "PlacementPolicyType",
        "modelAsString": true,
        "values": [
          {
            "name": "VmVm",
            "value": "VmVm"
          },
          {
            "name": "VmHost",
            "value": "VmHost"
          }
        ]
      }
    },
    "PlacementPolicyUpdate": {
      "type": "object",
      "description": "An update of a DRS placement policy resource",
      "properties": {
        "properties": {
          "description": "The properties of a placement policy resource that may be updated",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "state": {
              "description": "Whether the placement policy is enabled or disabled",
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "PlacementPolicyState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled",
                    "description": "is enabled"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "is disabled"
                  }
                ]
              }
            },
            "vmMembers": {
              "type": "array",
              "description": "Virtual machine members list",
              "items": {
                "type": "string"
              }
            },
            "hostMembers": {
              "type": "array",
              "description": "Host members list",
              "items": {
                "type": "string"
              }
            },
            "affinityStrength": {
              "description": "vm-host placement policy affinity strength (should/must)",
              "type": "string",
              "enum": [
                "Should",
                "Must"
              ],
              "x-ms-enum": {
                "name": "AffinityStrength",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Should",
                    "value": "Should",
                    "description": "is should"
                  },
                  {
                    "name": "Must",
                    "value": "Must",
                    "description": "is must"
                  }
                ]
              }
            },
            "azureHybridBenefitType": {
              "description": "placement policy azure hybrid benefit opt-in type",
              "type": "string",
              "enum": [
                "SqlHost",
                "None"
              ],
              "x-ms-enum": {
                "name": "AzureHybridBenefitType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "SqlHost",
                    "value": "SqlHost",
                    "description": "is SqlHost"
                  },
                  {
                    "name": "None",
                    "value": "None",
                    "description": "is None"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "PlacementPolicyUpdateProperties": {
      "type": "object",
      "description": "The properties of a placement policy resource that may be updated",
      "properties": {
        "state": {
          "description": "Whether the placement policy is enabled or disabled",
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "PlacementPolicyState",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "is enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "is disabled"
              }
            ]
          }
        },
        "vmMembers": {
          "type": "array",
          "description": "Virtual machine members list",
          "items": {
            "type": "string"
          }
        },
        "hostMembers": {
          "type": "array",
          "description": "Host members list",
          "items": {
            "type": "string"
          }
        },
        "affinityStrength": {
          "description": "vm-host placement policy affinity strength (should/must)",
          "type": "string",
          "enum": [
            "Should",
            "Must"
          ],
          "x-ms-enum": {
            "name": "AffinityStrength",
            "modelAsString": true,
            "values": [
              {
                "name": "Should",
                "value": "Should",
                "description": "is should"
              },
              {
                "name": "Must",
                "value": "Must",
                "description": "is must"
              }
            ]
          }
        },
        "azureHybridBenefitType": {
          "description": "placement policy azure hybrid benefit opt-in type",
          "type": "string",
          "enum": [
            "SqlHost",
            "None"
          ],
          "x-ms-enum": {
            "name": "AzureHybridBenefitType",
            "modelAsString": true,
            "values": [
              {
                "name": "SqlHost",
                "value": "SqlHost",
                "description": "is SqlHost"
              },
              {
                "name": "None",
                "value": "None",
                "description": "is None"
              }
            ]
          }
        }
      }
    },
    "PortMirroringDirectionEnum": {
      "type": "string",
      "description": "Port Mirroring Direction",
      "enum": [
        "INGRESS",
        "EGRESS",
        "BIDIRECTIONAL"
      ],
      "x-ms-enum": {
        "name": "PortMirroringDirectionEnum",
        "modelAsString": true,
        "values": [
          {
            "name": "INGRESS",
            "value": "INGRESS",
            "description": "is ingress"
          },
          {
            "name": "EGRESS",
            "value": "EGRESS",
            "description": "is egress"
          },
          {
            "name": "BIDIRECTIONAL",
            "value": "BIDIRECTIONAL",
            "description": "is bidirectional"
          }
        ]
      }
    },
    "PortMirroringStatusEnum": {
      "type": "string",
      "description": "Port Mirroring status",
      "enum": [
        "SUCCESS",
        "FAILURE"
      ],
      "x-ms-enum": {
        "name": "PortMirroringStatusEnum",
        "modelAsString": true,
        "values": [
          {
            "name": "SUCCESS",
            "value": "SUCCESS",
            "description": "is success"
          },
          {
            "name": "FAILURE",
            "value": "FAILURE",
            "description": "is failure"
          }
        ]
      }
    },
    "PrivateCloud": {
      "type": "object",
      "description": "A private cloud resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "managementCluster": {
              "description": "The default cluster used for management",
              "type": "object",
              "properties": {
                "clusterSize": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The cluster size"
                },
                "provisioningState": {
                  "description": "The state of the cluster provisioning",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Succeeded",
                    "Failed",
                    "Canceled",
                    "Cancelled",
                    "Deleting",
                    "Updating"
                  ],
                  "x-ms-enum": {
                    "name": "ClusterProvisioningState",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Succeeded",
                        "value": "Succeeded",
                        "description": "Resource has been created."
                      },
                      {
                        "name": "Failed",
                        "value": "Failed",
                        "description": "Resource creation failed."
                      },
                      {
                        "name": "Canceled",
                        "value": "Canceled",
                        "description": "Resource creation was canceled."
                      },
                      {
                        "name": "Cancelled",
                        "value": "Cancelled",
                        "description": "is cancelled"
                      },
                      {
                        "name": "Deleting",
                        "value": "Deleting",
                        "description": "is deleting"
                      },
                      {
                        "name": "Updating",
                        "value": "Updating",
                        "description": "is updating"
                      }
                    ]
                  }
                },
                "clusterId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The identity",
                  "readOnly": true
                },
                "hosts": {
                  "type": "array",
                  "description": "The hosts",
                  "items": {
                    "type": "string"
                  }
                },
                "vsanDatastoreName": {
                  "type": "string",
                  "description": "Name of the vsan datastore associated with the cluster"
                }
              }
            },
            "internet": {
              "type": "string",
              "description": "Connectivity to internet is enabled or disabled",
              "default": "Disabled",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "InternetEnum",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled",
                    "description": "is enabled"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "is disabled"
                  }
                ]
              }
            },
            "identitySources": {
              "type": "array",
              "description": "vCenter Single Sign On Identity Sources",
              "items": {
                "type": "object",
                "description": "vCenter Single Sign On Identity Source",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the identity source"
                  },
                  "alias": {
                    "type": "string",
                    "description": "The domain's NetBIOS name"
                  },
                  "domain": {
                    "type": "string",
                    "description": "The domain's DNS name"
                  },
                  "baseUserDN": {
                    "type": "string",
                    "description": "The base distinguished name for users"
                  },
                  "baseGroupDN": {
                    "type": "string",
                    "description": "The base distinguished name for groups"
                  },
                  "primaryServer": {
                    "type": "string",
                    "description": "Primary server URL"
                  },
                  "secondaryServer": {
                    "type": "string",
                    "description": "Secondary server URL"
                  },
                  "ssl": {
                    "description": "Protect LDAP communication using SSL certificate (LDAPS)",
                    "type": "string",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "name": "SslEnum",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Enabled",
                          "value": "Enabled",
                          "description": "is enabled"
                        },
                        {
                          "name": "Disabled",
                          "value": "Disabled",
                          "description": "is disabled"
                        }
                      ]
                    }
                  },
                  "username": {
                    "type": "string",
                    "description": "The ID of an Active Directory user with a minimum of read-only access to Base\nDN for users and group"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "description": "The password of the Active Directory user with a minimum of read-only access to\nBase DN for users and groups.",
                    "x-ms-secret": true
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "availability": {
              "description": "Properties describing how the cloud is distributed across availability zones",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "object",
              "properties": {
                "strategy": {
                  "description": "The availability strategy for the private cloud",
                  "type": "string",
                  "enum": [
                    "SingleZone",
                    "DualZone"
                  ],
                  "x-ms-enum": {
                    "name": "AvailabilityStrategy",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "SingleZone",
                        "value": "SingleZone",
                        "description": "in single zone"
                      },
                      {
                        "name": "DualZone",
                        "value": "DualZone",
                        "description": "in two zones"
                      }
                    ]
                  }
                },
                "zone": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The primary availability zone for the private cloud"
                },
                "secondaryZone": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The secondary availability zone for the private cloud"
                }
              }
            },
            "encryption": {
              "description": "Customer managed key encryption, can be enabled or disabled",
              "type": "object",
              "properties": {
                "status": {
                  "description": "Status of customer managed encryption key",
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "EncryptionState",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled",
                        "description": "is enabled"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled",
                        "description": "is disabled"
                      }
                    ]
                  }
                },
                "keyVaultProperties": {
                  "description": "The key vault where the encryption key is stored",
                  "type": "object",
                  "properties": {
                    "keyName": {
                      "type": "string",
                      "description": "The name of the key."
                    },
                    "keyVersion": {
                      "type": "string",
                      "description": "The version of the key."
                    },
                    "autoDetectedKeyVersion": {
                      "type": "string",
                      "description": "The auto-detected version of the key if versionType is auto-detected.",
                      "readOnly": true
                    },
                    "keyVaultUrl": {
                      "type": "string",
                      "description": "The URL of the vault."
                    },
                    "keyState": {
                      "description": "The state of key provided",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Connected",
                        "AccessDenied"
                      ],
                      "x-ms-enum": {
                        "name": "EncryptionKeyStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Connected",
                            "value": "Connected",
                            "description": "is connected"
                          },
                          {
                            "name": "AccessDenied",
                            "value": "AccessDenied",
                            "description": "is access denied"
                          }
                        ]
                      }
                    },
                    "versionType": {
                      "description": "Property of the key if user provided or auto detected",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Fixed",
                        "AutoDetected"
                      ],
                      "x-ms-enum": {
                        "name": "EncryptionVersionType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Fixed",
                            "value": "Fixed",
                            "description": "is fixed"
                          },
                          {
                            "name": "AutoDetected",
                            "value": "AutoDetected",
                            "description": "is auto-detected"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "extendedNetworkBlocks": {
              "type": "array",
              "description": "Array of additional networks noncontiguous with networkBlock. Networks must be\nunique and non-overlapping across VNet in your subscription, on-premise, and\nthis privateCloud networkBlock attribute. Make sure the CIDR format conforms to\n(A.B.C.D/X).",
              "items": {
                "type": "string"
              }
            },
            "provisioningState": {
              "description": "The provisioning state",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Cancelled",
                "Pending",
                "Building",
                "Deleting",
                "Updating"
              ],
              "x-ms-enum": {
                "name": "PrivateCloudProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Cancelled",
                    "value": "Cancelled",
                    "description": "is cancelled"
                  },
                  {
                    "name": "Pending",
                    "value": "Pending",
                    "description": "is pending"
                  },
                  {
                    "name": "Building",
                    "value": "Building",
                    "description": "is building"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "is deleting"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "is updating"
                  }
                ]
              }
            },
            "circuit": {
              "description": "An ExpressRoute Circuit",
              "type": "object",
              "properties": {
                "primarySubnet": {
                  "type": "string",
                  "description": "CIDR of primary subnet",
                  "readOnly": true
                },
                "secondarySubnet": {
                  "type": "string",
                  "description": "CIDR of secondary subnet",
                  "readOnly": true
                },
                "expressRouteID": {
                  "type": "string",
                  "description": "Identifier of the ExpressRoute Circuit (Microsoft Colo only)",
                  "readOnly": true
                },
                "expressRoutePrivatePeeringID": {
                  "type": "string",
                  "description": "ExpressRoute Circuit private peering identifier",
                  "readOnly": true
                }
              }
            },
            "endpoints": {
              "description": "The endpoints",
              "readOnly": true,
              "type": "object",
              "properties": {
                "nsxtManager": {
                  "type": "string",
                  "description": "Endpoint FQDN for the NSX-T Data Center manager",
                  "readOnly": true
                },
                "vcsa": {
                  "type": "string",
                  "description": "Endpoint FQDN for Virtual Center Server Appliance",
                  "readOnly": true
                },
                "hcxCloudManager": {
                  "type": "string",
                  "description": "Endpoint FQDN for the HCX Cloud Manager",
                  "readOnly": true
                },
                "nsxtManagerIp": {
                  "type": "string",
                  "description": "Endpoint IP for the NSX-T Data Center manager",
                  "readOnly": true
                },
                "vcenterIp": {
                  "type": "string",
                  "description": "Endpoint IP for Virtual Center Server Appliance",
                  "readOnly": true
                },
                "hcxCloudManagerIp": {
                  "type": "string",
                  "description": "Endpoint IP for the HCX Cloud Manager",
                  "readOnly": true
                }
              }
            },
            "networkBlock": {
              "type": "string",
              "description": "The block of addresses should be unique across VNet in your subscription as\nwell as on-premise. Make sure the CIDR format is conformed to (A.B.C.D/X) where\nA,B,C,D are between 0 and 255, and X is between 0 and 22"
            },
            "managementNetwork": {
              "type": "string",
              "description": "Network used to access vCenter Server and NSX-T Manager",
              "readOnly": true
            },
            "provisioningNetwork": {
              "type": "string",
              "description": "Used for virtual machine cold migration, cloning, and snapshot migration",
              "readOnly": true
            },
            "vmotionNetwork": {
              "type": "string",
              "description": "Used for live migration of virtual machines",
              "readOnly": true
            },
            "vcenterPassword": {
              "type": "string",
              "format": "password",
              "description": "Optionally, set the vCenter admin password when the private cloud is created",
              "x-ms-secret": true
            },
            "nsxtPassword": {
              "type": "string",
              "format": "password",
              "description": "Optionally, set the NSX-T Manager password when the private cloud is created",
              "x-ms-secret": true
            },
            "vcenterCertificateThumbprint": {
              "type": "string",
              "description": "Thumbprint of the vCenter Server SSL certificate",
              "readOnly": true
            },
            "nsxtCertificateThumbprint": {
              "type": "string",
              "description": "Thumbprint of the NSX-T Manager SSL certificate",
              "readOnly": true
            },
            "externalCloudLinks": {
              "type": "array",
              "description": "Array of cloud link IDs from other clouds that connect to this one",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "secondaryCircuit": {
              "description": "A secondary expressRoute circuit from a separate AZ. Only present in a\nstretched private cloud",
              "type": "object",
              "properties": {
                "primarySubnet": {
                  "type": "string",
                  "description": "CIDR of primary subnet",
                  "readOnly": true
                },
                "secondarySubnet": {
                  "type": "string",
                  "description": "CIDR of secondary subnet",
                  "readOnly": true
                },
                "expressRouteID": {
                  "type": "string",
                  "description": "Identifier of the ExpressRoute Circuit (Microsoft Colo only)",
                  "readOnly": true
                },
                "expressRoutePrivatePeeringID": {
                  "type": "string",
                  "description": "ExpressRoute Circuit private peering identifier",
                  "readOnly": true
                }
              }
            },
            "nsxPublicIpQuotaRaised": {
              "description": "Flag to indicate whether the private cloud has the quota for provisioned NSX\nPublic IP count raised from 64 to 1024",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "NsxPublicIpQuotaRaisedEnum",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled",
                    "description": "is enabled"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "is disabled"
                  }
                ]
              }
            },
            "virtualNetworkId": {
              "type": "string",
              "format": "arm-id",
              "description": "Azure resource ID of the virtual network",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "\\Microsoft.Network\\vnet"
                  }
                ]
              }
            },
            "dnsZoneType": {
              "description": "The type of DNS zone to use.",
              "type": "string",
              "enum": [
                "Public",
                "Private"
              ],
              "x-ms-enum": {
                "name": "DnsZoneType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Public",
                    "value": "Public",
                    "description": "Primary DNS zone."
                  },
                  {
                    "name": "Private",
                    "value": "Private",
                    "description": "Private DNS zone."
                  }
                ]
              }
            }
          },
          "required": [
            "managementCluster",
            "networkBlock"
          ]
        },
        "sku": {
          "type": "object",
          "description": "The resource model definition representing SKU",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
            },
            "tier": {
              "type": "string",
              "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
              "enum": [
                "Free",
                "Basic",
                "Standard",
                "Premium"
              ],
              "x-ms-enum": {
                "name": "SkuTier",
                "modelAsString": false
              }
            },
            "size": {
              "type": "string",
              "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
            },
            "family": {
              "type": "string",
              "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
            },
            "capacity": {
              "type": "integer",
              "format": "int32",
              "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
            }
          },
          "required": [
            "name"
          ]
        },
        "identity": {
          "description": "The managed service identities assigned to this resource.",
          "type": "object",
          "properties": {
            "principalId": {
              "type": "string",
              "format": "uuid",
              "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "format": "uuid",
              "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "Type of managed service identity (either system assigned, or none).",
              "enum": [
                "None",
                "SystemAssigned"
              ],
              "x-ms-enum": {
                "name": "SystemAssignedServiceIdentityType",
                "modelAsString": true
              }
            }
          },
          "required": [
            "type"
          ]
        },
        "zones": {
          "type": "array",
          "description": "The availability zones.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "sku"
      ]
    },
    "PrivateCloudList": {
      "type": "object",
      "description": "The response of a PrivateCloud list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The PrivateCloud items on this page",
          "items": {
            "type": "object",
            "description": "A private cloud resource",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "managementCluster": {
                    "description": "The default cluster used for management",
                    "type": "object",
                    "properties": {
                      "clusterSize": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The cluster size"
                      },
                      "provisioningState": {
                        "description": "The state of the cluster provisioning",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "Succeeded",
                          "Failed",
                          "Canceled",
                          "Cancelled",
                          "Deleting",
                          "Updating"
                        ],
                        "x-ms-enum": {
                          "name": "ClusterProvisioningState",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Succeeded",
                              "value": "Succeeded",
                              "description": "Resource has been created."
                            },
                            {
                              "name": "Failed",
                              "value": "Failed",
                              "description": "Resource creation failed."
                            },
                            {
                              "name": "Canceled",
                              "value": "Canceled",
                              "description": "Resource creation was canceled."
                            },
                            {
                              "name": "Cancelled",
                              "value": "Cancelled",
                              "description": "is cancelled"
                            },
                            {
                              "name": "Deleting",
                              "value": "Deleting",
                              "description": "is deleting"
                            },
                            {
                              "name": "Updating",
                              "value": "Updating",
                              "description": "is updating"
                            }
                          ]
                        }
                      },
                      "clusterId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The identity",
                        "readOnly": true
                      },
                      "hosts": {
                        "type": "array",
                        "description": "The hosts",
                        "items": {
                          "type": "string"
                        }
                      },
                      "vsanDatastoreName": {
                        "type": "string",
                        "description": "Name of the vsan datastore associated with the cluster"
                      }
                    }
                  },
                  "internet": {
                    "type": "string",
                    "description": "Connectivity to internet is enabled or disabled",
                    "default": "Disabled",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "name": "InternetEnum",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Enabled",
                          "value": "Enabled",
                          "description": "is enabled"
                        },
                        {
                          "name": "Disabled",
                          "value": "Disabled",
                          "description": "is disabled"
                        }
                      ]
                    }
                  },
                  "identitySources": {
                    "type": "array",
                    "description": "vCenter Single Sign On Identity Sources",
                    "items": {
                      "type": "object",
                      "description": "vCenter Single Sign On Identity Source",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of the identity source"
                        },
                        "alias": {
                          "type": "string",
                          "description": "The domain's NetBIOS name"
                        },
                        "domain": {
                          "type": "string",
                          "description": "The domain's DNS name"
                        },
                        "baseUserDN": {
                          "type": "string",
                          "description": "The base distinguished name for users"
                        },
                        "baseGroupDN": {
                          "type": "string",
                          "description": "The base distinguished name for groups"
                        },
                        "primaryServer": {
                          "type": "string",
                          "description": "Primary server URL"
                        },
                        "secondaryServer": {
                          "type": "string",
                          "description": "Secondary server URL"
                        },
                        "ssl": {
                          "description": "Protect LDAP communication using SSL certificate (LDAPS)",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "SslEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "is enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "is disabled"
                              }
                            ]
                          }
                        },
                        "username": {
                          "type": "string",
                          "description": "The ID of an Active Directory user with a minimum of read-only access to Base\nDN for users and group"
                        },
                        "password": {
                          "type": "string",
                          "format": "password",
                          "description": "The password of the Active Directory user with a minimum of read-only access to\nBase DN for users and groups.",
                          "x-ms-secret": true
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  },
                  "availability": {
                    "description": "Properties describing how the cloud is distributed across availability zones",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "type": "object",
                    "properties": {
                      "strategy": {
                        "description": "The availability strategy for the private cloud",
                        "type": "string",
                        "enum": [
                          "SingleZone",
                          "DualZone"
                        ],
                        "x-ms-enum": {
                          "name": "AvailabilityStrategy",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "SingleZone",
                              "value": "SingleZone",
                              "description": "in single zone"
                            },
                            {
                              "name": "DualZone",
                              "value": "DualZone",
                              "description": "in two zones"
                            }
                          ]
                        }
                      },
                      "zone": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The primary availability zone for the private cloud"
                      },
                      "secondaryZone": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The secondary availability zone for the private cloud"
                      }
                    }
                  },
                  "encryption": {
                    "description": "Customer managed key encryption, can be enabled or disabled",
                    "type": "object",
                    "properties": {
                      "status": {
                        "description": "Status of customer managed encryption key",
                        "type": "string",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "name": "EncryptionState",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Enabled",
                              "value": "Enabled",
                              "description": "is enabled"
                            },
                            {
                              "name": "Disabled",
                              "value": "Disabled",
                              "description": "is disabled"
                            }
                          ]
                        }
                      },
                      "keyVaultProperties": {
                        "description": "The key vault where the encryption key is stored",
                        "type": "object",
                        "properties": {
                          "keyName": {
                            "type": "string",
                            "description": "The name of the key."
                          },
                          "keyVersion": {
                            "type": "string",
                            "description": "The version of the key."
                          },
                          "autoDetectedKeyVersion": {
                            "type": "string",
                            "description": "The auto-detected version of the key if versionType is auto-detected.",
                            "readOnly": true
                          },
                          "keyVaultUrl": {
                            "type": "string",
                            "description": "The URL of the vault."
                          },
                          "keyState": {
                            "description": "The state of key provided",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Connected",
                              "AccessDenied"
                            ],
                            "x-ms-enum": {
                              "name": "EncryptionKeyStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Connected",
                                  "value": "Connected",
                                  "description": "is connected"
                                },
                                {
                                  "name": "AccessDenied",
                                  "value": "AccessDenied",
                                  "description": "is access denied"
                                }
                              ]
                            }
                          },
                          "versionType": {
                            "description": "Property of the key if user provided or auto detected",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Fixed",
                              "AutoDetected"
                            ],
                            "x-ms-enum": {
                              "name": "EncryptionVersionType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Fixed",
                                  "value": "Fixed",
                                  "description": "is fixed"
                                },
                                {
                                  "name": "AutoDetected",
                                  "value": "AutoDetected",
                                  "description": "is auto-detected"
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  },
                  "extendedNetworkBlocks": {
                    "type": "array",
                    "description": "Array of additional networks noncontiguous with networkBlock. Networks must be\nunique and non-overlapping across VNet in your subscription, on-premise, and\nthis privateCloud networkBlock attribute. Make sure the CIDR format conforms to\n(A.B.C.D/X).",
                    "items": {
                      "type": "string"
                    }
                  },
                  "provisioningState": {
                    "description": "The provisioning state",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Cancelled",
                      "Pending",
                      "Building",
                      "Deleting",
                      "Updating"
                    ],
                    "x-ms-enum": {
                      "name": "PrivateCloudProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Cancelled",
                          "value": "Cancelled",
                          "description": "is cancelled"
                        },
                        {
                          "name": "Pending",
                          "value": "Pending",
                          "description": "is pending"
                        },
                        {
                          "name": "Building",
                          "value": "Building",
                          "description": "is building"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "is deleting"
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "is updating"
                        }
                      ]
                    }
                  },
                  "circuit": {
                    "description": "An ExpressRoute Circuit",
                    "type": "object",
                    "properties": {
                      "primarySubnet": {
                        "type": "string",
                        "description": "CIDR of primary subnet",
                        "readOnly": true
                      },
                      "secondarySubnet": {
                        "type": "string",
                        "description": "CIDR of secondary subnet",
                        "readOnly": true
                      },
                      "expressRouteID": {
                        "type": "string",
                        "description": "Identifier of the ExpressRoute Circuit (Microsoft Colo only)",
                        "readOnly": true
                      },
                      "expressRoutePrivatePeeringID": {
                        "type": "string",
                        "description": "ExpressRoute Circuit private peering identifier",
                        "readOnly": true
                      }
                    }
                  },
                  "endpoints": {
                    "description": "The endpoints",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "nsxtManager": {
                        "type": "string",
                        "description": "Endpoint FQDN for the NSX-T Data Center manager",
                        "readOnly": true
                      },
                      "vcsa": {
                        "type": "string",
                        "description": "Endpoint FQDN for Virtual Center Server Appliance",
                        "readOnly": true
                      },
                      "hcxCloudManager": {
                        "type": "string",
                        "description": "Endpoint FQDN for the HCX Cloud Manager",
                        "readOnly": true
                      },
                      "nsxtManagerIp": {
                        "type": "string",
                        "description": "Endpoint IP for the NSX-T Data Center manager",
                        "readOnly": true
                      },
                      "vcenterIp": {
                        "type": "string",
                        "description": "Endpoint IP for Virtual Center Server Appliance",
                        "readOnly": true
                      },
                      "hcxCloudManagerIp": {
                        "type": "string",
                        "description": "Endpoint IP for the HCX Cloud Manager",
                        "readOnly": true
                      }
                    }
                  },
                  "networkBlock": {
                    "type": "string",
                    "description": "The block of addresses should be unique across VNet in your subscription as\nwell as on-premise. Make sure the CIDR format is conformed to (A.B.C.D/X) where\nA,B,C,D are between 0 and 255, and X is between 0 and 22"
                  },
                  "managementNetwork": {
                    "type": "string",
                    "description": "Network used to access vCenter Server and NSX-T Manager",
                    "readOnly": true
                  },
                  "provisioningNetwork": {
                    "type": "string",
                    "description": "Used for virtual machine cold migration, cloning, and snapshot migration",
                    "readOnly": true
                  },
                  "vmotionNetwork": {
                    "type": "string",
                    "description": "Used for live migration of virtual machines",
                    "readOnly": true
                  },
                  "vcenterPassword": {
                    "type": "string",
                    "format": "password",
                    "description": "Optionally, set the vCenter admin password when the private cloud is created",
                    "x-ms-secret": true
                  },
                  "nsxtPassword": {
                    "type": "string",
                    "format": "password",
                    "description": "Optionally, set the NSX-T Manager password when the private cloud is created",
                    "x-ms-secret": true
                  },
                  "vcenterCertificateThumbprint": {
                    "type": "string",
                    "description": "Thumbprint of the vCenter Server SSL certificate",
                    "readOnly": true
                  },
                  "nsxtCertificateThumbprint": {
                    "type": "string",
                    "description": "Thumbprint of the NSX-T Manager SSL certificate",
                    "readOnly": true
                  },
                  "externalCloudLinks": {
                    "type": "array",
                    "description": "Array of cloud link IDs from other clouds that connect to this one",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "secondaryCircuit": {
                    "description": "A secondary expressRoute circuit from a separate AZ. Only present in a\nstretched private cloud",
                    "type": "object",
                    "properties": {
                      "primarySubnet": {
                        "type": "string",
                        "description": "CIDR of primary subnet",
                        "readOnly": true
                      },
                      "secondarySubnet": {
                        "type": "string",
                        "description": "CIDR of secondary subnet",
                        "readOnly": true
                      },
                      "expressRouteID": {
                        "type": "string",
                        "description": "Identifier of the ExpressRoute Circuit (Microsoft Colo only)",
                        "readOnly": true
                      },
                      "expressRoutePrivatePeeringID": {
                        "type": "string",
                        "description": "ExpressRoute Circuit private peering identifier",
                        "readOnly": true
                      }
                    }
                  },
                  "nsxPublicIpQuotaRaised": {
                    "description": "Flag to indicate whether the private cloud has the quota for provisioned NSX\nPublic IP count raised from 64 to 1024",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "name": "NsxPublicIpQuotaRaisedEnum",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Enabled",
                          "value": "Enabled",
                          "description": "is enabled"
                        },
                        {
                          "name": "Disabled",
                          "value": "Disabled",
                          "description": "is disabled"
                        }
                      ]
                    }
                  },
                  "virtualNetworkId": {
                    "type": "string",
                    "format": "arm-id",
                    "description": "Azure resource ID of the virtual network",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "\\Microsoft.Network\\vnet"
                        }
                      ]
                    }
                  },
                  "dnsZoneType": {
                    "description": "The type of DNS zone to use.",
                    "type": "string",
                    "enum": [
                      "Public",
                      "Private"
                    ],
                    "x-ms-enum": {
                      "name": "DnsZoneType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Public",
                          "value": "Public",
                          "description": "Primary DNS zone."
                        },
                        {
                          "name": "Private",
                          "value": "Private",
                          "description": "Private DNS zone."
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "managementCluster",
                  "networkBlock"
                ]
              },
              "sku": {
                "type": "object",
                "description": "The resource model definition representing SKU",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
                  },
                  "tier": {
                    "type": "string",
                    "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
                    "enum": [
                      "Free",
                      "Basic",
                      "Standard",
                      "Premium"
                    ],
                    "x-ms-enum": {
                      "name": "SkuTier",
                      "modelAsString": false
                    }
                  },
                  "size": {
                    "type": "string",
                    "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
                  },
                  "family": {
                    "type": "string",
                    "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
                  },
                  "capacity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
                  }
                },
                "required": [
                  "name"
                ]
              },
              "identity": {
                "description": "The managed service identities assigned to this resource.",
                "type": "object",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                    "readOnly": true
                  },
                  "tenantId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                    "readOnly": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of managed service identity (either system assigned, or none).",
                    "enum": [
                      "None",
                      "SystemAssigned"
                    ],
                    "x-ms-enum": {
                      "name": "SystemAssignedServiceIdentityType",
                      "modelAsString": true
                    }
                  }
                },
                "required": [
                  "type"
                ]
              },
              "zones": {
                "type": "array",
                "description": "The availability zones.",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "sku"
            ]
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PrivateCloudProperties": {
      "type": "object",
      "description": "The properties of a private cloud resource",
      "properties": {
        "managementCluster": {
          "description": "The default cluster used for management",
          "type": "object",
          "properties": {
            "clusterSize": {
              "type": "integer",
              "format": "int32",
              "description": "The cluster size"
            },
            "provisioningState": {
              "description": "The state of the cluster provisioning",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Cancelled",
                "Deleting",
                "Updating"
              ],
              "x-ms-enum": {
                "name": "ClusterProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Cancelled",
                    "value": "Cancelled",
                    "description": "is cancelled"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "is deleting"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "is updating"
                  }
                ]
              }
            },
            "clusterId": {
              "type": "integer",
              "format": "int32",
              "description": "The identity",
              "readOnly": true
            },
            "hosts": {
              "type": "array",
              "description": "The hosts",
              "items": {
                "type": "string"
              }
            },
            "vsanDatastoreName": {
              "type": "string",
              "description": "Name of the vsan datastore associated with the cluster"
            }
          }
        },
        "internet": {
          "type": "string",
          "description": "Connectivity to internet is enabled or disabled",
          "default": "Disabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "InternetEnum",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "is enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "is disabled"
              }
            ]
          }
        },
        "identitySources": {
          "type": "array",
          "description": "vCenter Single Sign On Identity Sources",
          "items": {
            "type": "object",
            "description": "vCenter Single Sign On Identity Source",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the identity source"
              },
              "alias": {
                "type": "string",
                "description": "The domain's NetBIOS name"
              },
              "domain": {
                "type": "string",
                "description": "The domain's DNS name"
              },
              "baseUserDN": {
                "type": "string",
                "description": "The base distinguished name for users"
              },
              "baseGroupDN": {
                "type": "string",
                "description": "The base distinguished name for groups"
              },
              "primaryServer": {
                "type": "string",
                "description": "Primary server URL"
              },
              "secondaryServer": {
                "type": "string",
                "description": "Secondary server URL"
              },
              "ssl": {
                "description": "Protect LDAP communication using SSL certificate (LDAPS)",
                "type": "string",
                "enum": [
                  "Enabled",
                  "Disabled"
                ],
                "x-ms-enum": {
                  "name": "SslEnum",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Enabled",
                      "value": "Enabled",
                      "description": "is enabled"
                    },
                    {
                      "name": "Disabled",
                      "value": "Disabled",
                      "description": "is disabled"
                    }
                  ]
                }
              },
              "username": {
                "type": "string",
                "description": "The ID of an Active Directory user with a minimum of read-only access to Base\nDN for users and group"
              },
              "password": {
                "type": "string",
                "format": "password",
                "description": "The password of the Active Directory user with a minimum of read-only access to\nBase DN for users and groups.",
                "x-ms-secret": true
              }
            }
          },
          "x-ms-identifiers": []
        },
        "availability": {
          "description": "Properties describing how the cloud is distributed across availability zones",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "object",
          "properties": {
            "strategy": {
              "description": "The availability strategy for the private cloud",
              "type": "string",
              "enum": [
                "SingleZone",
                "DualZone"
              ],
              "x-ms-enum": {
                "name": "AvailabilityStrategy",
                "modelAsString": true,
                "values": [
                  {
                    "name": "SingleZone",
                    "value": "SingleZone",
                    "description": "in single zone"
                  },
                  {
                    "name": "DualZone",
                    "value": "DualZone",
                    "description": "in two zones"
                  }
                ]
              }
            },
            "zone": {
              "type": "integer",
              "format": "int32",
              "description": "The primary availability zone for the private cloud"
            },
            "secondaryZone": {
              "type": "integer",
              "format": "int32",
              "description": "The secondary availability zone for the private cloud"
            }
          }
        },
        "encryption": {
          "description": "Customer managed key encryption, can be enabled or disabled",
          "type": "object",
          "properties": {
            "status": {
              "description": "Status of customer managed encryption key",
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "EncryptionState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled",
                    "description": "is enabled"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "is disabled"
                  }
                ]
              }
            },
            "keyVaultProperties": {
              "description": "The key vault where the encryption key is stored",
              "type": "object",
              "properties": {
                "keyName": {
                  "type": "string",
                  "description": "The name of the key."
                },
                "keyVersion": {
                  "type": "string",
                  "description": "The version of the key."
                },
                "autoDetectedKeyVersion": {
                  "type": "string",
                  "description": "The auto-detected version of the key if versionType is auto-detected.",
                  "readOnly": true
                },
                "keyVaultUrl": {
                  "type": "string",
                  "description": "The URL of the vault."
                },
                "keyState": {
                  "description": "The state of key provided",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Connected",
                    "AccessDenied"
                  ],
                  "x-ms-enum": {
                    "name": "EncryptionKeyStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Connected",
                        "value": "Connected",
                        "description": "is connected"
                      },
                      {
                        "name": "AccessDenied",
                        "value": "AccessDenied",
                        "description": "is access denied"
                      }
                    ]
                  }
                },
                "versionType": {
                  "description": "Property of the key if user provided or auto detected",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Fixed",
                    "AutoDetected"
                  ],
                  "x-ms-enum": {
                    "name": "EncryptionVersionType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Fixed",
                        "value": "Fixed",
                        "description": "is fixed"
                      },
                      {
                        "name": "AutoDetected",
                        "value": "AutoDetected",
                        "description": "is auto-detected"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "extendedNetworkBlocks": {
          "type": "array",
          "description": "Array of additional networks noncontiguous with networkBlock. Networks must be\nunique and non-overlapping across VNet in your subscription, on-premise, and\nthis privateCloud networkBlock attribute. Make sure the CIDR format conforms to\n(A.B.C.D/X).",
          "items": {
            "type": "string"
          }
        },
        "provisioningState": {
          "description": "The provisioning state",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Cancelled",
            "Pending",
            "Building",
            "Deleting",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "PrivateCloudProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Cancelled",
                "value": "Cancelled",
                "description": "is cancelled"
              },
              {
                "name": "Pending",
                "value": "Pending",
                "description": "is pending"
              },
              {
                "name": "Building",
                "value": "Building",
                "description": "is building"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "is deleting"
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "is updating"
              }
            ]
          }
        },
        "circuit": {
          "description": "An ExpressRoute Circuit",
          "type": "object",
          "properties": {
            "primarySubnet": {
              "type": "string",
              "description": "CIDR of primary subnet",
              "readOnly": true
            },
            "secondarySubnet": {
              "type": "string",
              "description": "CIDR of secondary subnet",
              "readOnly": true
            },
            "expressRouteID": {
              "type": "string",
              "description": "Identifier of the ExpressRoute Circuit (Microsoft Colo only)",
              "readOnly": true
            },
            "expressRoutePrivatePeeringID": {
              "type": "string",
              "description": "ExpressRoute Circuit private peering identifier",
              "readOnly": true
            }
          }
        },
        "endpoints": {
          "description": "The endpoints",
          "readOnly": true,
          "type": "object",
          "properties": {
            "nsxtManager": {
              "type": "string",
              "description": "Endpoint FQDN for the NSX-T Data Center manager",
              "readOnly": true
            },
            "vcsa": {
              "type": "string",
              "description": "Endpoint FQDN for Virtual Center Server Appliance",
              "readOnly": true
            },
            "hcxCloudManager": {
              "type": "string",
              "description": "Endpoint FQDN for the HCX Cloud Manager",
              "readOnly": true
            },
            "nsxtManagerIp": {
              "type": "string",
              "description": "Endpoint IP for the NSX-T Data Center manager",
              "readOnly": true
            },
            "vcenterIp": {
              "type": "string",
              "description": "Endpoint IP for Virtual Center Server Appliance",
              "readOnly": true
            },
            "hcxCloudManagerIp": {
              "type": "string",
              "description": "Endpoint IP for the HCX Cloud Manager",
              "readOnly": true
            }
          }
        },
        "networkBlock": {
          "type": "string",
          "description": "The block of addresses should be unique across VNet in your subscription as\nwell as on-premise. Make sure the CIDR format is conformed to (A.B.C.D/X) where\nA,B,C,D are between 0 and 255, and X is between 0 and 22"
        },
        "managementNetwork": {
          "type": "string",
          "description": "Network used to access vCenter Server and NSX-T Manager",
          "readOnly": true
        },
        "provisioningNetwork": {
          "type": "string",
          "description": "Used for virtual machine cold migration, cloning, and snapshot migration",
          "readOnly": true
        },
        "vmotionNetwork": {
          "type": "string",
          "description": "Used for live migration of virtual machines",
          "readOnly": true
        },
        "vcenterPassword": {
          "type": "string",
          "format": "password",
          "description": "Optionally, set the vCenter admin password when the private cloud is created",
          "x-ms-secret": true
        },
        "nsxtPassword": {
          "type": "string",
          "format": "password",
          "description": "Optionally, set the NSX-T Manager password when the private cloud is created",
          "x-ms-secret": true
        },
        "vcenterCertificateThumbprint": {
          "type": "string",
          "description": "Thumbprint of the vCenter Server SSL certificate",
          "readOnly": true
        },
        "nsxtCertificateThumbprint": {
          "type": "string",
          "description": "Thumbprint of the NSX-T Manager SSL certificate",
          "readOnly": true
        },
        "externalCloudLinks": {
          "type": "array",
          "description": "Array of cloud link IDs from other clouds that connect to this one",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "secondaryCircuit": {
          "description": "A secondary expressRoute circuit from a separate AZ. Only present in a\nstretched private cloud",
          "type": "object",
          "properties": {
            "primarySubnet": {
              "type": "string",
              "description": "CIDR of primary subnet",
              "readOnly": true
            },
            "secondarySubnet": {
              "type": "string",
              "description": "CIDR of secondary subnet",
              "readOnly": true
            },
            "expressRouteID": {
              "type": "string",
              "description": "Identifier of the ExpressRoute Circuit (Microsoft Colo only)",
              "readOnly": true
            },
            "expressRoutePrivatePeeringID": {
              "type": "string",
              "description": "ExpressRoute Circuit private peering identifier",
              "readOnly": true
            }
          }
        },
        "nsxPublicIpQuotaRaised": {
          "description": "Flag to indicate whether the private cloud has the quota for provisioned NSX\nPublic IP count raised from 64 to 1024",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "NsxPublicIpQuotaRaisedEnum",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "is enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "is disabled"
              }
            ]
          }
        },
        "virtualNetworkId": {
          "type": "string",
          "format": "arm-id",
          "description": "Azure resource ID of the virtual network",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "\\Microsoft.Network\\vnet"
              }
            ]
          }
        },
        "dnsZoneType": {
          "description": "The type of DNS zone to use.",
          "type": "string",
          "enum": [
            "Public",
            "Private"
          ],
          "x-ms-enum": {
            "name": "DnsZoneType",
            "modelAsString": true,
            "values": [
              {
                "name": "Public",
                "value": "Public",
                "description": "Primary DNS zone."
              },
              {
                "name": "Private",
                "value": "Private",
                "description": "Private DNS zone."
              }
            ]
          }
        }
      },
      "required": [
        "managementCluster",
        "networkBlock"
      ]
    },
    "PrivateCloudProvisioningState": {
      "type": "string",
      "description": "private cloud provisioning state",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Cancelled",
        "Pending",
        "Building",
        "Deleting",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "PrivateCloudProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Cancelled",
            "value": "Cancelled",
            "description": "is cancelled"
          },
          {
            "name": "Pending",
            "value": "Pending",
            "description": "is pending"
          },
          {
            "name": "Building",
            "value": "Building",
            "description": "is building"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "is deleting"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "is updating"
          }
        ]
      },
      "readOnly": true
    },
    "PrivateCloudUpdate": {
      "type": "object",
      "description": "An update to a private cloud resource",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sku": {
          "type": "object",
          "description": "The resource model definition representing SKU",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the SKU. E.g. P3. It is typically a letter+number code"
            },
            "tier": {
              "type": "string",
              "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
              "enum": [
                "Free",
                "Basic",
                "Standard",
                "Premium"
              ],
              "x-ms-enum": {
                "name": "SkuTier",
                "modelAsString": false
              }
            },
            "size": {
              "type": "string",
              "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
            },
            "family": {
              "type": "string",
              "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
            },
            "capacity": {
              "type": "integer",
              "format": "int32",
              "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
            }
          },
          "required": [
            "name"
          ]
        },
        "identity": {
          "description": "The managed service identities assigned to this resource.",
          "type": "object",
          "properties": {
            "principalId": {
              "type": "string",
              "format": "uuid",
              "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "format": "uuid",
              "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "Type of managed service identity (either system assigned, or none).",
              "enum": [
                "None",
                "SystemAssigned"
              ],
              "x-ms-enum": {
                "name": "SystemAssignedServiceIdentityType",
                "modelAsString": true
              }
            }
          },
          "required": [
            "type"
          ]
        },
        "properties": {
          "description": "The updatable properties of a private cloud resource",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "managementCluster": {
              "description": "The default cluster used for management",
              "type": "object",
              "properties": {
                "clusterSize": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The cluster size"
                },
                "provisioningState": {
                  "description": "The state of the cluster provisioning",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Succeeded",
                    "Failed",
                    "Canceled",
                    "Cancelled",
                    "Deleting",
                    "Updating"
                  ],
                  "x-ms-enum": {
                    "name": "ClusterProvisioningState",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Succeeded",
                        "value": "Succeeded",
                        "description": "Resource has been created."
                      },
                      {
                        "name": "Failed",
                        "value": "Failed",
                        "description": "Resource creation failed."
                      },
                      {
                        "name": "Canceled",
                        "value": "Canceled",
                        "description": "Resource creation was canceled."
                      },
                      {
                        "name": "Cancelled",
                        "value": "Cancelled",
                        "description": "is cancelled"
                      },
                      {
                        "name": "Deleting",
                        "value": "Deleting",
                        "description": "is deleting"
                      },
                      {
                        "name": "Updating",
                        "value": "Updating",
                        "description": "is updating"
                      }
                    ]
                  }
                },
                "clusterId": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The identity",
                  "readOnly": true
                },
                "hosts": {
                  "type": "array",
                  "description": "The hosts",
                  "items": {
                    "type": "string"
                  }
                },
                "vsanDatastoreName": {
                  "type": "string",
                  "description": "Name of the vsan datastore associated with the cluster"
                }
              }
            },
            "internet": {
              "description": "Connectivity to internet is enabled or disabled",
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "InternetEnum",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled",
                    "description": "is enabled"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "is disabled"
                  }
                ]
              }
            },
            "identitySources": {
              "type": "array",
              "description": "vCenter Single Sign On Identity Sources",
              "items": {
                "type": "object",
                "description": "vCenter Single Sign On Identity Source",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the identity source"
                  },
                  "alias": {
                    "type": "string",
                    "description": "The domain's NetBIOS name"
                  },
                  "domain": {
                    "type": "string",
                    "description": "The domain's DNS name"
                  },
                  "baseUserDN": {
                    "type": "string",
                    "description": "The base distinguished name for users"
                  },
                  "baseGroupDN": {
                    "type": "string",
                    "description": "The base distinguished name for groups"
                  },
                  "primaryServer": {
                    "type": "string",
                    "description": "Primary server URL"
                  },
                  "secondaryServer": {
                    "type": "string",
                    "description": "Secondary server URL"
                  },
                  "ssl": {
                    "description": "Protect LDAP communication using SSL certificate (LDAPS)",
                    "type": "string",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "name": "SslEnum",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Enabled",
                          "value": "Enabled",
                          "description": "is enabled"
                        },
                        {
                          "name": "Disabled",
                          "value": "Disabled",
                          "description": "is disabled"
                        }
                      ]
                    }
                  },
                  "username": {
                    "type": "string",
                    "description": "The ID of an Active Directory user with a minimum of read-only access to Base\nDN for users and group"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "description": "The password of the Active Directory user with a minimum of read-only access to\nBase DN for users and groups.",
                    "x-ms-secret": true
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "availability": {
              "description": "Properties describing how the cloud is distributed across availability zones",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "object",
              "properties": {
                "strategy": {
                  "description": "The availability strategy for the private cloud",
                  "type": "string",
                  "enum": [
                    "SingleZone",
                    "DualZone"
                  ],
                  "x-ms-enum": {
                    "name": "AvailabilityStrategy",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "SingleZone",
                        "value": "SingleZone",
                        "description": "in single zone"
                      },
                      {
                        "name": "DualZone",
                        "value": "DualZone",
                        "description": "in two zones"
                      }
                    ]
                  }
                },
                "zone": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The primary availability zone for the private cloud"
                },
                "secondaryZone": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The secondary availability zone for the private cloud"
                }
              }
            },
            "encryption": {
              "description": "Customer managed key encryption, can be enabled or disabled",
              "type": "object",
              "properties": {
                "status": {
                  "description": "Status of customer managed encryption key",
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "EncryptionState",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled",
                        "description": "is enabled"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled",
                        "description": "is disabled"
                      }
                    ]
                  }
                },
                "keyVaultProperties": {
                  "description": "The key vault where the encryption key is stored",
                  "type": "object",
                  "properties": {
                    "keyName": {
                      "type": "string",
                      "description": "The name of the key."
                    },
                    "keyVersion": {
                      "type": "string",
                      "description": "The version of the key."
                    },
                    "autoDetectedKeyVersion": {
                      "type": "string",
                      "description": "The auto-detected version of the key if versionType is auto-detected.",
                      "readOnly": true
                    },
                    "keyVaultUrl": {
                      "type": "string",
                      "description": "The URL of the vault."
                    },
                    "keyState": {
                      "description": "The state of key provided",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Connected",
                        "AccessDenied"
                      ],
                      "x-ms-enum": {
                        "name": "EncryptionKeyStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Connected",
                            "value": "Connected",
                            "description": "is connected"
                          },
                          {
                            "name": "AccessDenied",
                            "value": "AccessDenied",
                            "description": "is access denied"
                          }
                        ]
                      }
                    },
                    "versionType": {
                      "description": "Property of the key if user provided or auto detected",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Fixed",
                        "AutoDetected"
                      ],
                      "x-ms-enum": {
                        "name": "EncryptionVersionType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Fixed",
                            "value": "Fixed",
                            "description": "is fixed"
                          },
                          {
                            "name": "AutoDetected",
                            "value": "AutoDetected",
                            "description": "is auto-detected"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "extendedNetworkBlocks": {
              "type": "array",
              "description": "Array of additional networks noncontiguous with networkBlock. Networks must be\nunique and non-overlapping across VNet in your subscription, on-premise, and\nthis privateCloud networkBlock attribute. Make sure the CIDR format conforms to\n(A.B.C.D/X).",
              "items": {
                "type": "string"
              }
            },
            "dnsZoneType": {
              "description": "The type of DNS zone to use.",
              "type": "string",
              "enum": [
                "Public",
                "Private"
              ],
              "x-ms-enum": {
                "name": "DnsZoneType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Public",
                    "value": "Public",
                    "description": "Primary DNS zone."
                  },
                  {
                    "name": "Private",
                    "value": "Private",
                    "description": "Private DNS zone."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "PrivateCloudUpdateProperties": {
      "type": "object",
      "description": "The properties of a private cloud resource that may be updated",
      "properties": {
        "managementCluster": {
          "description": "The default cluster used for management",
          "type": "object",
          "properties": {
            "clusterSize": {
              "type": "integer",
              "format": "int32",
              "description": "The cluster size"
            },
            "provisioningState": {
              "description": "The state of the cluster provisioning",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Cancelled",
                "Deleting",
                "Updating"
              ],
              "x-ms-enum": {
                "name": "ClusterProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Cancelled",
                    "value": "Cancelled",
                    "description": "is cancelled"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "is deleting"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "is updating"
                  }
                ]
              }
            },
            "clusterId": {
              "type": "integer",
              "format": "int32",
              "description": "The identity",
              "readOnly": true
            },
            "hosts": {
              "type": "array",
              "description": "The hosts",
              "items": {
                "type": "string"
              }
            },
            "vsanDatastoreName": {
              "type": "string",
              "description": "Name of the vsan datastore associated with the cluster"
            }
          }
        },
        "internet": {
          "description": "Connectivity to internet is enabled or disabled",
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "InternetEnum",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "is enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "is disabled"
              }
            ]
          }
        },
        "identitySources": {
          "type": "array",
          "description": "vCenter Single Sign On Identity Sources",
          "items": {
            "type": "object",
            "description": "vCenter Single Sign On Identity Source",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the identity source"
              },
              "alias": {
                "type": "string",
                "description": "The domain's NetBIOS name"
              },
              "domain": {
                "type": "string",
                "description": "The domain's DNS name"
              },
              "baseUserDN": {
                "type": "string",
                "description": "The base distinguished name for users"
              },
              "baseGroupDN": {
                "type": "string",
                "description": "The base distinguished name for groups"
              },
              "primaryServer": {
                "type": "string",
                "description": "Primary server URL"
              },
              "secondaryServer": {
                "type": "string",
                "description": "Secondary server URL"
              },
              "ssl": {
                "description": "Protect LDAP communication using SSL certificate (LDAPS)",
                "type": "string",
                "enum": [
                  "Enabled",
                  "Disabled"
                ],
                "x-ms-enum": {
                  "name": "SslEnum",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Enabled",
                      "value": "Enabled",
                      "description": "is enabled"
                    },
                    {
                      "name": "Disabled",
                      "value": "Disabled",
                      "description": "is disabled"
                    }
                  ]
                }
              },
              "username": {
                "type": "string",
                "description": "The ID of an Active Directory user with a minimum of read-only access to Base\nDN for users and group"
              },
              "password": {
                "type": "string",
                "format": "password",
                "description": "The password of the Active Directory user with a minimum of read-only access to\nBase DN for users and groups.",
                "x-ms-secret": true
              }
            }
          },
          "x-ms-identifiers": []
        },
        "availability": {
          "description": "Properties describing how the cloud is distributed across availability zones",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "object",
          "properties": {
            "strategy": {
              "description": "The availability strategy for the private cloud",
              "type": "string",
              "enum": [
                "SingleZone",
                "DualZone"
              ],
              "x-ms-enum": {
                "name": "AvailabilityStrategy",
                "modelAsString": true,
                "values": [
                  {
                    "name": "SingleZone",
                    "value": "SingleZone",
                    "description": "in single zone"
                  },
                  {
                    "name": "DualZone",
                    "value": "DualZone",
                    "description": "in two zones"
                  }
                ]
              }
            },
            "zone": {
              "type": "integer",
              "format": "int32",
              "description": "The primary availability zone for the private cloud"
            },
            "secondaryZone": {
              "type": "integer",
              "format": "int32",
              "description": "The secondary availability zone for the private cloud"
            }
          }
        },
        "encryption": {
          "description": "Customer managed key encryption, can be enabled or disabled",
          "type": "object",
          "properties": {
            "status": {
              "description": "Status of customer managed encryption key",
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "EncryptionState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled",
                    "description": "is enabled"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "is disabled"
                  }
                ]
              }
            },
            "keyVaultProperties": {
              "description": "The key vault where the encryption key is stored",
              "type": "object",
              "properties": {
                "keyName": {
                  "type": "string",
                  "description": "The name of the key."
                },
                "keyVersion": {
                  "type": "string",
                  "description": "The version of the key."
                },
                "autoDetectedKeyVersion": {
                  "type": "string",
                  "description": "The auto-detected version of the key if versionType is auto-detected.",
                  "readOnly": true
                },
                "keyVaultUrl": {
                  "type": "string",
                  "description": "The URL of the vault."
                },
                "keyState": {
                  "description": "The state of key provided",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Connected",
                    "AccessDenied"
                  ],
                  "x-ms-enum": {
                    "name": "EncryptionKeyStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Connected",
                        "value": "Connected",
                        "description": "is connected"
                      },
                      {
                        "name": "AccessDenied",
                        "value": "AccessDenied",
                        "description": "is access denied"
                      }
                    ]
                  }
                },
                "versionType": {
                  "description": "Property of the key if user provided or auto detected",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Fixed",
                    "AutoDetected"
                  ],
                  "x-ms-enum": {
                    "name": "EncryptionVersionType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Fixed",
                        "value": "Fixed",
                        "description": "is fixed"
                      },
                      {
                        "name": "AutoDetected",
                        "value": "AutoDetected",
                        "description": "is auto-detected"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "extendedNetworkBlocks": {
          "type": "array",
          "description": "Array of additional networks noncontiguous with networkBlock. Networks must be\nunique and non-overlapping across VNet in your subscription, on-premise, and\nthis privateCloud networkBlock attribute. Make sure the CIDR format conforms to\n(A.B.C.D/X).",
          "items": {
            "type": "string"
          }
        },
        "dnsZoneType": {
          "description": "The type of DNS zone to use.",
          "type": "string",
          "enum": [
            "Public",
            "Private"
          ],
          "x-ms-enum": {
            "name": "DnsZoneType",
            "modelAsString": true,
            "values": [
              {
                "name": "Public",
                "value": "Public",
                "description": "Primary DNS zone."
              },
              {
                "name": "Private",
                "value": "Private",
                "description": "Private DNS zone."
              }
            ]
          }
        }
      }
    },
    "ProvisionedNetwork": {
      "type": "object",
      "description": "A provisioned network resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "The provisioning state of the resource.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled"
              ],
              "x-ms-enum": {
                "name": "ProvisionedNetworkProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  }
                ]
              }
            },
            "addressPrefix": {
              "type": "string",
              "description": "The address prefixes of the provisioned network in CIDR notation.",
              "readOnly": true
            },
            "networkType": {
              "description": "The type of network provisioned.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "esxManagement",
                "esxReplication",
                "hcxManagement",
                "hcxUplink",
                "vcenterManagement",
                "vmotion",
                "vsan"
              ],
              "x-ms-enum": {
                "name": "ProvisionedNetworkTypes",
                "modelAsString": true,
                "values": [
                  {
                    "name": "esxManagement",
                    "value": "esxManagement",
                    "description": "network for ESX management"
                  },
                  {
                    "name": "esxReplication",
                    "value": "esxReplication",
                    "description": "network for ESX replication"
                  },
                  {
                    "name": "hcxManagement",
                    "value": "hcxManagement",
                    "description": "network for HCX management"
                  },
                  {
                    "name": "hcxUplink",
                    "value": "hcxUplink",
                    "description": "network for HCX uplink"
                  },
                  {
                    "name": "vcenterManagement",
                    "value": "vcenterManagement",
                    "description": "network for vCenter management"
                  },
                  {
                    "name": "vmotion",
                    "value": "vmotion",
                    "description": "network for vmotion"
                  },
                  {
                    "name": "vsan",
                    "value": "vsan",
                    "description": "network for vsan"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "ProvisionedNetworkListResult": {
      "type": "object",
      "description": "The response of a ProvisionedNetwork list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ProvisionedNetwork items on this page",
          "items": {
            "type": "object",
            "description": "A provisioned network resource",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "The provisioning state of the resource.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisionedNetworkProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        }
                      ]
                    }
                  },
                  "addressPrefix": {
                    "type": "string",
                    "description": "The address prefixes of the provisioned network in CIDR notation.",
                    "readOnly": true
                  },
                  "networkType": {
                    "description": "The type of network provisioned.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "esxManagement",
                      "esxReplication",
                      "hcxManagement",
                      "hcxUplink",
                      "vcenterManagement",
                      "vmotion",
                      "vsan"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisionedNetworkTypes",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "esxManagement",
                          "value": "esxManagement",
                          "description": "network for ESX management"
                        },
                        {
                          "name": "esxReplication",
                          "value": "esxReplication",
                          "description": "network for ESX replication"
                        },
                        {
                          "name": "hcxManagement",
                          "value": "hcxManagement",
                          "description": "network for HCX management"
                        },
                        {
                          "name": "hcxUplink",
                          "value": "hcxUplink",
                          "description": "network for HCX uplink"
                        },
                        {
                          "name": "vcenterManagement",
                          "value": "vcenterManagement",
                          "description": "network for vCenter management"
                        },
                        {
                          "name": "vmotion",
                          "value": "vmotion",
                          "description": "network for vmotion"
                        },
                        {
                          "name": "vsan",
                          "value": "vsan",
                          "description": "network for vsan"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ProvisionedNetworkProperties": {
      "type": "object",
      "description": "The properties of a provisioned network.",
      "properties": {
        "provisioningState": {
          "description": "The provisioning state of the resource.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisionedNetworkProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              }
            ]
          }
        },
        "addressPrefix": {
          "type": "string",
          "description": "The address prefixes of the provisioned network in CIDR notation.",
          "readOnly": true
        },
        "networkType": {
          "description": "The type of network provisioned.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "esxManagement",
            "esxReplication",
            "hcxManagement",
            "hcxUplink",
            "vcenterManagement",
            "vmotion",
            "vsan"
          ],
          "x-ms-enum": {
            "name": "ProvisionedNetworkTypes",
            "modelAsString": true,
            "values": [
              {
                "name": "esxManagement",
                "value": "esxManagement",
                "description": "network for ESX management"
              },
              {
                "name": "esxReplication",
                "value": "esxReplication",
                "description": "network for ESX replication"
              },
              {
                "name": "hcxManagement",
                "value": "hcxManagement",
                "description": "network for HCX management"
              },
              {
                "name": "hcxUplink",
                "value": "hcxUplink",
                "description": "network for HCX uplink"
              },
              {
                "name": "vcenterManagement",
                "value": "vcenterManagement",
                "description": "network for vCenter management"
              },
              {
                "name": "vmotion",
                "value": "vmotion",
                "description": "network for vmotion"
              },
              {
                "name": "vsan",
                "value": "vsan",
                "description": "network for vsan"
              }
            ]
          }
        }
      }
    },
    "ProvisionedNetworkProvisioningState": {
      "type": "string",
      "description": "provisioned network provisioning state",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "ProvisionedNetworkProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          }
        ]
      },
      "readOnly": true
    },
    "ProvisionedNetworkTypes": {
      "type": "string",
      "description": "The type of network provisioned.",
      "enum": [
        "esxManagement",
        "esxReplication",
        "hcxManagement",
        "hcxUplink",
        "vcenterManagement",
        "vmotion",
        "vsan"
      ],
      "x-ms-enum": {
        "name": "ProvisionedNetworkTypes",
        "modelAsString": true,
        "values": [
          {
            "name": "esxManagement",
            "value": "esxManagement",
            "description": "network for ESX management"
          },
          {
            "name": "esxReplication",
            "value": "esxReplication",
            "description": "network for ESX replication"
          },
          {
            "name": "hcxManagement",
            "value": "hcxManagement",
            "description": "network for HCX management"
          },
          {
            "name": "hcxUplink",
            "value": "hcxUplink",
            "description": "network for HCX uplink"
          },
          {
            "name": "vcenterManagement",
            "value": "vcenterManagement",
            "description": "network for vCenter management"
          },
          {
            "name": "vmotion",
            "value": "vmotion",
            "description": "network for vmotion"
          },
          {
            "name": "vsan",
            "value": "vsan",
            "description": "network for vsan"
          }
        ]
      }
    },
    "PureStoragePolicy": {
      "type": "object",
      "description": "An instance describing a Pure Storage Policy Based Management policy",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "storagePolicyDefinition": {
              "type": "string",
              "description": "Definition of a Pure Storage Policy Based Management policy"
            },
            "storagePoolId": {
              "type": "string",
              "description": "Azure resource ID of the Pure Storage Pool associated with the storage policy"
            },
            "provisioningState": {
              "description": "The state of the Pure Storage Policy Based Management policy provisioning",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Deleting",
                "Updating"
              ],
              "x-ms-enum": {
                "name": "PureStoragePolicyProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "is deleting"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "is updating"
                  }
                ]
              }
            }
          },
          "required": [
            "storagePolicyDefinition",
            "storagePoolId"
          ]
        }
      }
    },
    "PureStoragePolicyListResult": {
      "type": "object",
      "description": "The response of a PureStoragePolicy list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The PureStoragePolicy items on this page",
          "items": {
            "type": "object",
            "description": "An instance describing a Pure Storage Policy Based Management policy",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "storagePolicyDefinition": {
                    "type": "string",
                    "description": "Definition of a Pure Storage Policy Based Management policy"
                  },
                  "storagePoolId": {
                    "type": "string",
                    "description": "Azure resource ID of the Pure Storage Pool associated with the storage policy"
                  },
                  "provisioningState": {
                    "description": "The state of the Pure Storage Policy Based Management policy provisioning",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Deleting",
                      "Updating"
                    ],
                    "x-ms-enum": {
                      "name": "PureStoragePolicyProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "is deleting"
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "is updating"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "storagePolicyDefinition",
                  "storagePoolId"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PureStoragePolicyProperties": {
      "type": "object",
      "description": "Properties of a Pure Storage Policy Based Management policy",
      "properties": {
        "storagePolicyDefinition": {
          "type": "string",
          "description": "Definition of a Pure Storage Policy Based Management policy"
        },
        "storagePoolId": {
          "type": "string",
          "description": "Azure resource ID of the Pure Storage Pool associated with the storage policy"
        },
        "provisioningState": {
          "description": "The state of the Pure Storage Policy Based Management policy provisioning",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Deleting",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "PureStoragePolicyProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "is deleting"
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "is updating"
              }
            ]
          }
        }
      },
      "required": [
        "storagePolicyDefinition",
        "storagePoolId"
      ]
    },
    "PureStoragePolicyProvisioningState": {
      "type": "string",
      "description": "Pure Storage Policy Based Management policy provisioning state",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Deleting",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "PureStoragePolicyProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "is deleting"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "is updating"
          }
        ]
      },
      "readOnly": true
    },
    "PureStorageVolume": {
      "type": "object",
      "description": "A Pure Storage volume from PureStorage.Block provider",
      "properties": {
        "storagePoolId": {
          "type": "string",
          "format": "arm-id",
          "description": "Azure resource ID of the Pure Storage Pool",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "PureStorage.Block/storagePools"
              }
            ]
          }
        },
        "sizeGb": {
          "type": "integer",
          "format": "int32",
          "description": "Volume size to be used to create a Virtual Volumes (vVols) datastore"
        }
      },
      "required": [
        "storagePoolId",
        "sizeGb"
      ]
    },
    "Quota": {
      "type": "object",
      "description": "Subscription quotas",
      "properties": {
        "hostsRemaining": {
          "type": "object",
          "description": "Remaining hosts quota by sku type",
          "additionalProperties": {
            "format": "int32",
            "type": "integer"
          },
          "readOnly": true
        },
        "quotaEnabled": {
          "description": "Host quota is active for current subscription",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "QuotaEnabled",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "is enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "is disabled"
              }
            ]
          }
        }
      }
    },
    "QuotaEnabled": {
      "type": "string",
      "description": "quota enabled",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "QuotaEnabled",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "is enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "is disabled"
          }
        ]
      }
    },
    "ResourceSku": {
      "type": "object",
      "description": "A SKU for a resource.",
      "properties": {
        "resourceType": {
          "description": "The type of resource the SKU applies to.",
          "type": "string",
          "enum": [
            "privateClouds",
            "privateClouds/clusters"
          ],
          "x-ms-enum": {
            "name": "ResourceSkuResourceType",
            "modelAsString": true,
            "values": [
              {
                "name": "privateClouds",
                "value": "privateClouds",
                "description": "The SKU is for a private cloud."
              },
              {
                "name": "privateClouds/clusters",
                "value": "privateClouds/clusters",
                "description": "The SKU is for a private cloud cluster."
              }
            ]
          }
        },
        "name": {
          "type": "string",
          "description": "The name of the SKU."
        },
        "tier": {
          "type": "string",
          "description": "The tier of virtual machines in a scale set"
        },
        "size": {
          "type": "string",
          "description": "The size of the SKU."
        },
        "family": {
          "type": "string",
          "description": "The family of the SKU."
        },
        "locations": {
          "type": "array",
          "description": "The set of locations that the SKU is available.",
          "items": {
            "type": "string",
            "description": "Represents an Azure geography region where supported resource providers live."
          }
        },
        "locationInfo": {
          "type": "array",
          "description": "A list of locations and availability zones in those locations where the SKU is available",
          "items": {
            "type": "object",
            "description": "Describes an available Compute SKU Location Information.",
            "properties": {
              "location": {
                "type": "string",
                "description": "Represents an Azure geography region where supported resource providers live."
              },
              "zones": {
                "type": "array",
                "description": "List of availability zones where the SKU is supported.",
                "items": {
                  "type": "string"
                }
              },
              "zoneDetails": {
                "type": "array",
                "description": "Gets details of capabilities available to a SKU in specific zones.",
                "items": {
                  "type": "object",
                  "description": "Describes The zonal capabilities of a SKU.",
                  "properties": {
                    "name": {
                      "type": "array",
                      "description": "Gets the set of zones that the SKU is available in with the specified capabilities.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "capabilities": {
                      "type": "array",
                      "description": "A list of capabilities that are available for the SKU in the specified list of zones.",
                      "items": {
                        "type": "object",
                        "description": "Describes The SKU capabilities object.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the SKU capability."
                          },
                          "value": {
                            "type": "string",
                            "description": "The value of the SKU capability."
                          }
                        },
                        "required": [
                          "name",
                          "value"
                        ]
                      },
                      "x-ms-identifiers": []
                    }
                  },
                  "required": [
                    "name",
                    "capabilities"
                  ]
                },
                "x-ms-identifiers": []
              }
            },
            "required": [
              "location",
              "zones",
              "zoneDetails"
            ]
          },
          "x-ms-identifiers": []
        },
        "capabilities": {
          "type": "array",
          "description": "Name value pairs to describe the capability.",
          "items": {
            "type": "object",
            "description": "Describes The SKU capabilities object.",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the SKU capability."
              },
              "value": {
                "type": "string",
                "description": "The value of the SKU capability."
              }
            },
            "required": [
              "name",
              "value"
            ]
          },
          "x-ms-identifiers": []
        },
        "restrictions": {
          "type": "array",
          "description": "The restrictions of the SKU.",
          "items": {
            "type": "object",
            "description": "The restrictions of the SKU.",
            "properties": {
              "type": {
                "description": "the type of restrictions.",
                "type": "string",
                "enum": [
                  "Location",
                  "Zone"
                ],
                "x-ms-enum": {
                  "name": "ResourceSkuRestrictionsType",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Location",
                      "value": "Location",
                      "description": "SKU restricted by location."
                    },
                    {
                      "name": "Zone",
                      "value": "Zone",
                      "description": "SKU restricted by availability zone."
                    }
                  ]
                }
              },
              "values": {
                "type": "array",
                "description": "The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted.",
                "items": {
                  "type": "string"
                }
              },
              "restrictionInfo": {
                "description": "The information about the restriction where the SKU cannot be used.",
                "type": "object",
                "properties": {
                  "locations": {
                    "type": "array",
                    "description": "Locations where the SKU is restricted",
                    "items": {
                      "type": "string",
                      "description": "Represents an Azure geography region where supported resource providers live."
                    }
                  },
                  "zones": {
                    "type": "array",
                    "description": "List of availability zones where the SKU is restricted.",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "reasonCode": {
                "description": "the reason for restriction.",
                "type": "string",
                "enum": [
                  "QuotaId",
                  "NotAvailableForSubscription"
                ],
                "x-ms-enum": {
                  "name": "ResourceSkuRestrictionsReasonCode",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "QuotaId",
                      "value": "QuotaId",
                      "description": "The restriction is due to exceeding a quota limitation."
                    },
                    {
                      "name": "NotAvailableForSubscription",
                      "value": "NotAvailableForSubscription",
                      "description": "The restriction is not available for this subscription."
                    }
                  ]
                }
              }
            },
            "required": [
              "values",
              "restrictionInfo"
            ]
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "resourceType",
        "name",
        "locations",
        "locationInfo",
        "restrictions"
      ]
    },
    "ResourceSkuCapabilities": {
      "type": "object",
      "description": "Describes The SKU capabilities object.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU capability."
        },
        "value": {
          "type": "string",
          "description": "The value of the SKU capability."
        }
      },
      "required": [
        "name",
        "value"
      ]
    },
    "ResourceSkuLocationInfo": {
      "type": "object",
      "description": "Describes an available Compute SKU Location Information.",
      "properties": {
        "location": {
          "type": "string",
          "description": "Represents an Azure geography region where supported resource providers live."
        },
        "zones": {
          "type": "array",
          "description": "List of availability zones where the SKU is supported.",
          "items": {
            "type": "string"
          }
        },
        "zoneDetails": {
          "type": "array",
          "description": "Gets details of capabilities available to a SKU in specific zones.",
          "items": {
            "type": "object",
            "description": "Describes The zonal capabilities of a SKU.",
            "properties": {
              "name": {
                "type": "array",
                "description": "Gets the set of zones that the SKU is available in with the specified capabilities.",
                "items": {
                  "type": "string"
                }
              },
              "capabilities": {
                "type": "array",
                "description": "A list of capabilities that are available for the SKU in the specified list of zones.",
                "items": {
                  "type": "object",
                  "description": "Describes The SKU capabilities object.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the SKU capability."
                    },
                    "value": {
                      "type": "string",
                      "description": "The value of the SKU capability."
                    }
                  },
                  "required": [
                    "name",
                    "value"
                  ]
                },
                "x-ms-identifiers": []
              }
            },
            "required": [
              "name",
              "capabilities"
            ]
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "location",
        "zones",
        "zoneDetails"
      ]
    },
    "ResourceSkuResourceType": {
      "type": "string",
      "description": "Describes the type of resource the SKU applies to.",
      "enum": [
        "privateClouds",
        "privateClouds/clusters"
      ],
      "x-ms-enum": {
        "name": "ResourceSkuResourceType",
        "modelAsString": true,
        "values": [
          {
            "name": "privateClouds",
            "value": "privateClouds",
            "description": "The SKU is for a private cloud."
          },
          {
            "name": "privateClouds/clusters",
            "value": "privateClouds/clusters",
            "description": "The SKU is for a private cloud cluster."
          }
        ]
      }
    },
    "ResourceSkuRestrictionInfo": {
      "type": "object",
      "description": "Describes an available Compute SKU Restriction Information.",
      "properties": {
        "locations": {
          "type": "array",
          "description": "Locations where the SKU is restricted",
          "items": {
            "type": "string",
            "description": "Represents an Azure geography region where supported resource providers live."
          }
        },
        "zones": {
          "type": "array",
          "description": "List of availability zones where the SKU is restricted.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ResourceSkuRestrictions": {
      "type": "object",
      "description": "The restrictions of the SKU.",
      "properties": {
        "type": {
          "description": "the type of restrictions.",
          "type": "string",
          "enum": [
            "Location",
            "Zone"
          ],
          "x-ms-enum": {
            "name": "ResourceSkuRestrictionsType",
            "modelAsString": true,
            "values": [
              {
                "name": "Location",
                "value": "Location",
                "description": "SKU restricted by location."
              },
              {
                "name": "Zone",
                "value": "Zone",
                "description": "SKU restricted by availability zone."
              }
            ]
          }
        },
        "values": {
          "type": "array",
          "description": "The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted.",
          "items": {
            "type": "string"
          }
        },
        "restrictionInfo": {
          "description": "The information about the restriction where the SKU cannot be used.",
          "type": "object",
          "properties": {
            "locations": {
              "type": "array",
              "description": "Locations where the SKU is restricted",
              "items": {
                "type": "string",
                "description": "Represents an Azure geography region where supported resource providers live."
              }
            },
            "zones": {
              "type": "array",
              "description": "List of availability zones where the SKU is restricted.",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "reasonCode": {
          "description": "the reason for restriction.",
          "type": "string",
          "enum": [
            "QuotaId",
            "NotAvailableForSubscription"
          ],
          "x-ms-enum": {
            "name": "ResourceSkuRestrictionsReasonCode",
            "modelAsString": true,
            "values": [
              {
                "name": "QuotaId",
                "value": "QuotaId",
                "description": "The restriction is due to exceeding a quota limitation."
              },
              {
                "name": "NotAvailableForSubscription",
                "value": "NotAvailableForSubscription",
                "description": "The restriction is not available for this subscription."
              }
            ]
          }
        }
      },
      "required": [
        "values",
        "restrictionInfo"
      ]
    },
    "ResourceSkuRestrictionsReasonCode": {
      "type": "string",
      "description": "Describes the reason for SKU restriction.",
      "enum": [
        "QuotaId",
        "NotAvailableForSubscription"
      ],
      "x-ms-enum": {
        "name": "ResourceSkuRestrictionsReasonCode",
        "modelAsString": true,
        "values": [
          {
            "name": "QuotaId",
            "value": "QuotaId",
            "description": "The restriction is due to exceeding a quota limitation."
          },
          {
            "name": "NotAvailableForSubscription",
            "value": "NotAvailableForSubscription",
            "description": "The restriction is not available for this subscription."
          }
        ]
      }
    },
    "ResourceSkuRestrictionsType": {
      "type": "string",
      "description": "Describes the kind of SKU restrictions that can exist",
      "enum": [
        "Location",
        "Zone"
      ],
      "x-ms-enum": {
        "name": "ResourceSkuRestrictionsType",
        "modelAsString": true,
        "values": [
          {
            "name": "Location",
            "value": "Location",
            "description": "SKU restricted by location."
          },
          {
            "name": "Zone",
            "value": "Zone",
            "description": "SKU restricted by availability zone."
          }
        ]
      }
    },
    "ResourceSkuZoneDetails": {
      "type": "object",
      "description": "Describes The zonal capabilities of a SKU.",
      "properties": {
        "name": {
          "type": "array",
          "description": "Gets the set of zones that the SKU is available in with the specified capabilities.",
          "items": {
            "type": "string"
          }
        },
        "capabilities": {
          "type": "array",
          "description": "A list of capabilities that are available for the SKU in the specified list of zones.",
          "items": {
            "type": "object",
            "description": "Describes The SKU capabilities object.",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the SKU capability."
              },
              "value": {
                "type": "string",
                "description": "The value of the SKU capability."
              }
            },
            "required": [
              "name",
              "value"
            ]
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "name",
        "capabilities"
      ]
    },
    "ScriptCmdlet": {
      "type": "object",
      "description": "A cmdlet available for script execution",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "The provisioning state of the resource.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled"
              ],
              "x-ms-enum": {
                "name": "ScriptCmdletProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  }
                ]
              }
            },
            "description": {
              "type": "string",
              "description": "Description of the scripts functionality",
              "readOnly": true
            },
            "timeout": {
              "type": "string",
              "description": "Recommended time limit for execution",
              "readOnly": true
            },
            "audience": {
              "description": "Specifies whether a script cmdlet is intended to be invoked only through automation or visible to customers",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Automation",
                "Any"
              ],
              "x-ms-enum": {
                "name": "ScriptCmdletAudience",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Automation",
                    "value": "Automation",
                    "description": "is automation"
                  },
                  {
                    "name": "Any",
                    "value": "Any",
                    "description": "is any"
                  }
                ]
              }
            },
            "parameters": {
              "type": "array",
              "description": "Parameters the script will accept",
              "items": {
                "type": "object",
                "description": "An parameter that the script will accept",
                "properties": {
                  "type": {
                    "description": "The type of parameter the script is expecting. psCredential is a\nPSCredentialObject",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "String",
                      "SecureString",
                      "Credential",
                      "Int",
                      "Bool",
                      "Float"
                    ],
                    "x-ms-enum": {
                      "name": "ScriptParameterTypes",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "String",
                          "value": "String",
                          "description": "is string"
                        },
                        {
                          "name": "SecureString",
                          "value": "SecureString",
                          "description": "is secure string"
                        },
                        {
                          "name": "Credential",
                          "value": "Credential",
                          "description": "is credential"
                        },
                        {
                          "name": "Int",
                          "value": "Int",
                          "description": "is int"
                        },
                        {
                          "name": "Bool",
                          "value": "Bool",
                          "description": "is bool"
                        },
                        {
                          "name": "Float",
                          "value": "Float",
                          "description": "is float"
                        }
                      ]
                    }
                  },
                  "name": {
                    "type": "string",
                    "description": "The parameter name that the script will expect a parameter value for"
                  },
                  "description": {
                    "type": "string",
                    "description": "User friendly description of the parameter",
                    "readOnly": true
                  },
                  "visibility": {
                    "description": "Should this parameter be visible to arm and passed in the parameters argument\nwhen executing",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Visible",
                      "Hidden"
                    ],
                    "x-ms-enum": {
                      "name": "VisibilityParameterEnum",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Visible",
                          "value": "Visible",
                          "description": "is visible"
                        },
                        {
                          "name": "Hidden",
                          "value": "Hidden",
                          "description": "is hidden"
                        }
                      ]
                    }
                  },
                  "optional": {
                    "description": "Is this parameter required or optional",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Optional",
                      "Required"
                    ],
                    "x-ms-enum": {
                      "name": "OptionalParamEnum",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Optional",
                          "value": "Optional",
                          "description": "is optional"
                        },
                        {
                          "name": "Required",
                          "value": "Required",
                          "description": "is required"
                        }
                      ]
                    }
                  }
                }
              },
              "readOnly": true,
              "x-ms-identifiers": []
            }
          }
        }
      }
    },
    "ScriptCmdletAudience": {
      "type": "string",
      "description": "Specifies whether a script cmdlet is intended to be invoked only through automation or visible to customers",
      "enum": [
        "Automation",
        "Any"
      ],
      "x-ms-enum": {
        "name": "ScriptCmdletAudience",
        "modelAsString": true,
        "values": [
          {
            "name": "Automation",
            "value": "Automation",
            "description": "is automation"
          },
          {
            "name": "Any",
            "value": "Any",
            "description": "is any"
          }
        ]
      }
    },
    "ScriptCmdletProperties": {
      "type": "object",
      "description": "Properties of a pre-canned script",
      "properties": {
        "provisioningState": {
          "description": "The provisioning state of the resource.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ScriptCmdletProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              }
            ]
          }
        },
        "description": {
          "type": "string",
          "description": "Description of the scripts functionality",
          "readOnly": true
        },
        "timeout": {
          "type": "string",
          "description": "Recommended time limit for execution",
          "readOnly": true
        },
        "audience": {
          "description": "Specifies whether a script cmdlet is intended to be invoked only through automation or visible to customers",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Automation",
            "Any"
          ],
          "x-ms-enum": {
            "name": "ScriptCmdletAudience",
            "modelAsString": true,
            "values": [
              {
                "name": "Automation",
                "value": "Automation",
                "description": "is automation"
              },
              {
                "name": "Any",
                "value": "Any",
                "description": "is any"
              }
            ]
          }
        },
        "parameters": {
          "type": "array",
          "description": "Parameters the script will accept",
          "items": {
            "type": "object",
            "description": "An parameter that the script will accept",
            "properties": {
              "type": {
                "description": "The type of parameter the script is expecting. psCredential is a\nPSCredentialObject",
                "readOnly": true,
                "type": "string",
                "enum": [
                  "String",
                  "SecureString",
                  "Credential",
                  "Int",
                  "Bool",
                  "Float"
                ],
                "x-ms-enum": {
                  "name": "ScriptParameterTypes",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "String",
                      "value": "String",
                      "description": "is string"
                    },
                    {
                      "name": "SecureString",
                      "value": "SecureString",
                      "description": "is secure string"
                    },
                    {
                      "name": "Credential",
                      "value": "Credential",
                      "description": "is credential"
                    },
                    {
                      "name": "Int",
                      "value": "Int",
                      "description": "is int"
                    },
                    {
                      "name": "Bool",
                      "value": "Bool",
                      "description": "is bool"
                    },
                    {
                      "name": "Float",
                      "value": "Float",
                      "description": "is float"
                    }
                  ]
                }
              },
              "name": {
                "type": "string",
                "description": "The parameter name that the script will expect a parameter value for"
              },
              "description": {
                "type": "string",
                "description": "User friendly description of the parameter",
                "readOnly": true
              },
              "visibility": {
                "description": "Should this parameter be visible to arm and passed in the parameters argument\nwhen executing",
                "readOnly": true,
                "type": "string",
                "enum": [
                  "Visible",
                  "Hidden"
                ],
                "x-ms-enum": {
                  "name": "VisibilityParameterEnum",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Visible",
                      "value": "Visible",
                      "description": "is visible"
                    },
                    {
                      "name": "Hidden",
                      "value": "Hidden",
                      "description": "is hidden"
                    }
                  ]
                }
              },
              "optional": {
                "description": "Is this parameter required or optional",
                "readOnly": true,
                "type": "string",
                "enum": [
                  "Optional",
                  "Required"
                ],
                "x-ms-enum": {
                  "name": "OptionalParamEnum",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Optional",
                      "value": "Optional",
                      "description": "is optional"
                    },
                    {
                      "name": "Required",
                      "value": "Required",
                      "description": "is required"
                    }
                  ]
                }
              }
            }
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ScriptCmdletProvisioningState": {
      "type": "string",
      "description": "A script cmdlet provisioning state",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "ScriptCmdletProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          }
        ]
      },
      "readOnly": true
    },
    "ScriptCmdletsList": {
      "type": "object",
      "description": "The response of a ScriptCmdlet list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ScriptCmdlet items on this page",
          "items": {
            "type": "object",
            "description": "A cmdlet available for script execution",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "The provisioning state of the resource.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled"
                    ],
                    "x-ms-enum": {
                      "name": "ScriptCmdletProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        }
                      ]
                    }
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the scripts functionality",
                    "readOnly": true
                  },
                  "timeout": {
                    "type": "string",
                    "description": "Recommended time limit for execution",
                    "readOnly": true
                  },
                  "audience": {
                    "description": "Specifies whether a script cmdlet is intended to be invoked only through automation or visible to customers",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Automation",
                      "Any"
                    ],
                    "x-ms-enum": {
                      "name": "ScriptCmdletAudience",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Automation",
                          "value": "Automation",
                          "description": "is automation"
                        },
                        {
                          "name": "Any",
                          "value": "Any",
                          "description": "is any"
                        }
                      ]
                    }
                  },
                  "parameters": {
                    "type": "array",
                    "description": "Parameters the script will accept",
                    "items": {
                      "type": "object",
                      "description": "An parameter that the script will accept",
                      "properties": {
                        "type": {
                          "description": "The type of parameter the script is expecting. psCredential is a\nPSCredentialObject",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "String",
                            "SecureString",
                            "Credential",
                            "Int",
                            "Bool",
                            "Float"
                          ],
                          "x-ms-enum": {
                            "name": "ScriptParameterTypes",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "String",
                                "value": "String",
                                "description": "is string"
                              },
                              {
                                "name": "SecureString",
                                "value": "SecureString",
                                "description": "is secure string"
                              },
                              {
                                "name": "Credential",
                                "value": "Credential",
                                "description": "is credential"
                              },
                              {
                                "name": "Int",
                                "value": "Int",
                                "description": "is int"
                              },
                              {
                                "name": "Bool",
                                "value": "Bool",
                                "description": "is bool"
                              },
                              {
                                "name": "Float",
                                "value": "Float",
                                "description": "is float"
                              }
                            ]
                          }
                        },
                        "name": {
                          "type": "string",
                          "description": "The parameter name that the script will expect a parameter value for"
                        },
                        "description": {
                          "type": "string",
                          "description": "User friendly description of the parameter",
                          "readOnly": true
                        },
                        "visibility": {
                          "description": "Should this parameter be visible to arm and passed in the parameters argument\nwhen executing",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Visible",
                            "Hidden"
                          ],
                          "x-ms-enum": {
                            "name": "VisibilityParameterEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Visible",
                                "value": "Visible",
                                "description": "is visible"
                              },
                              {
                                "name": "Hidden",
                                "value": "Hidden",
                                "description": "is hidden"
                              }
                            ]
                          }
                        },
                        "optional": {
                          "description": "Is this parameter required or optional",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Optional",
                            "Required"
                          ],
                          "x-ms-enum": {
                            "name": "OptionalParamEnum",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Optional",
                                "value": "Optional",
                                "description": "is optional"
                              },
                              {
                                "name": "Required",
                                "value": "Required",
                                "description": "is required"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "readOnly": true,
                    "x-ms-identifiers": []
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ScriptExecution": {
      "type": "object",
      "description": "An instance of a script executed by a user - custom or AVS",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "scriptCmdletId": {
              "type": "string",
              "description": "A reference to the script cmdlet resource if user is running a AVS script"
            },
            "parameters": {
              "type": "array",
              "description": "Parameters the script will accept",
              "items": {
                "type": "object",
                "description": "The arguments passed in to the execution",
                "properties": {
                  "type": {
                    "description": "script execution parameter type",
                    "type": "string",
                    "enum": [
                      "Value",
                      "SecureValue",
                      "Credential"
                    ],
                    "x-ms-enum": {
                      "name": "ScriptExecutionParameterType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Value",
                          "value": "Value"
                        },
                        {
                          "name": "SecureValue",
                          "value": "SecureValue"
                        },
                        {
                          "name": "Credential",
                          "value": "Credential"
                        }
                      ]
                    }
                  },
                  "name": {
                    "type": "string",
                    "description": "The parameter name"
                  }
                },
                "discriminator": "type",
                "required": [
                  "type",
                  "name"
                ]
              },
              "x-ms-identifiers": []
            },
            "hiddenParameters": {
              "type": "array",
              "description": "Parameters that will be hidden/not visible to ARM, such as passwords and\ncredentials",
              "items": {
                "type": "object",
                "description": "The arguments passed in to the execution",
                "properties": {
                  "type": {
                    "description": "script execution parameter type",
                    "type": "string",
                    "enum": [
                      "Value",
                      "SecureValue",
                      "Credential"
                    ],
                    "x-ms-enum": {
                      "name": "ScriptExecutionParameterType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Value",
                          "value": "Value"
                        },
                        {
                          "name": "SecureValue",
                          "value": "SecureValue"
                        },
                        {
                          "name": "Credential",
                          "value": "Credential"
                        }
                      ]
                    }
                  },
                  "name": {
                    "type": "string",
                    "description": "The parameter name"
                  }
                },
                "discriminator": "type",
                "required": [
                  "type",
                  "name"
                ]
              },
              "x-ms-identifiers": []
            },
            "failureReason": {
              "type": "string",
              "description": "Error message if the script was able to run, but if the script itself had\nerrors or powershell threw an exception"
            },
            "timeout": {
              "type": "string",
              "description": "Time limit for execution"
            },
            "retention": {
              "type": "string",
              "description": "Time to live for the resource. If not provided, will be available for 60 days"
            },
            "submittedAt": {
              "type": "string",
              "format": "date-time",
              "description": "Time the script execution was submitted",
              "readOnly": true
            },
            "startedAt": {
              "type": "string",
              "format": "date-time",
              "description": "Time the script execution was started",
              "readOnly": true
            },
            "finishedAt": {
              "type": "string",
              "format": "date-time",
              "description": "Time the script execution was finished",
              "readOnly": true
            },
            "provisioningState": {
              "description": "The state of the script execution resource",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Pending",
                "Running",
                "Cancelling",
                "Cancelled",
                "Deleting"
              ],
              "x-ms-enum": {
                "name": "ScriptExecutionProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Pending",
                    "value": "Pending",
                    "description": "is pending"
                  },
                  {
                    "name": "Running",
                    "value": "Running",
                    "description": "is running"
                  },
                  {
                    "name": "Cancelling",
                    "value": "Cancelling",
                    "description": "is cancelling"
                  },
                  {
                    "name": "Cancelled",
                    "value": "Cancelled",
                    "description": "is cancelled"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "is deleting"
                  }
                ]
              }
            },
            "output": {
              "type": "array",
              "description": "Standard output stream from the powershell execution",
              "items": {
                "type": "string"
              }
            },
            "namedOutputs": {
              "type": "object",
              "description": "User-defined dictionary.",
              "additionalProperties": {
                "type": "object"
              }
            },
            "information": {
              "type": "array",
              "description": "Standard information out stream from the powershell execution",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "warnings": {
              "type": "array",
              "description": "Standard warning out stream from the powershell execution",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "errors": {
              "type": "array",
              "description": "Standard error output stream from the powershell execution",
              "items": {
                "type": "string"
              },
              "readOnly": true
            }
          },
          "required": [
            "timeout"
          ]
        }
      }
    },
    "ScriptExecutionParameter": {
      "type": "object",
      "description": "The arguments passed in to the execution",
      "properties": {
        "type": {
          "description": "script execution parameter type",
          "type": "string",
          "enum": [
            "Value",
            "SecureValue",
            "Credential"
          ],
          "x-ms-enum": {
            "name": "ScriptExecutionParameterType",
            "modelAsString": true,
            "values": [
              {
                "name": "Value",
                "value": "Value"
              },
              {
                "name": "SecureValue",
                "value": "SecureValue"
              },
              {
                "name": "Credential",
                "value": "Credential"
              }
            ]
          }
        },
        "name": {
          "type": "string",
          "description": "The parameter name"
        }
      },
      "discriminator": "type",
      "required": [
        "type",
        "name"
      ]
    },
    "ScriptExecutionParameterType": {
      "type": "string",
      "description": "script execution parameter type",
      "enum": [
        "Value",
        "SecureValue",
        "Credential"
      ],
      "x-ms-enum": {
        "name": "ScriptExecutionParameterType",
        "modelAsString": true,
        "values": [
          {
            "name": "Value",
            "value": "Value"
          },
          {
            "name": "SecureValue",
            "value": "SecureValue"
          },
          {
            "name": "Credential",
            "value": "Credential"
          }
        ]
      }
    },
    "ScriptExecutionProperties": {
      "type": "object",
      "description": "Properties of a user-invoked script",
      "properties": {
        "scriptCmdletId": {
          "type": "string",
          "description": "A reference to the script cmdlet resource if user is running a AVS script"
        },
        "parameters": {
          "type": "array",
          "description": "Parameters the script will accept",
          "items": {
            "type": "object",
            "description": "The arguments passed in to the execution",
            "properties": {
              "type": {
                "description": "script execution parameter type",
                "type": "string",
                "enum": [
                  "Value",
                  "SecureValue",
                  "Credential"
                ],
                "x-ms-enum": {
                  "name": "ScriptExecutionParameterType",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Value",
                      "value": "Value"
                    },
                    {
                      "name": "SecureValue",
                      "value": "SecureValue"
                    },
                    {
                      "name": "Credential",
                      "value": "Credential"
                    }
                  ]
                }
              },
              "name": {
                "type": "string",
                "description": "The parameter name"
              }
            },
            "discriminator": "type",
            "required": [
              "type",
              "name"
            ]
          },
          "x-ms-identifiers": []
        },
        "hiddenParameters": {
          "type": "array",
          "description": "Parameters that will be hidden/not visible to ARM, such as passwords and\ncredentials",
          "items": {
            "type": "object",
            "description": "The arguments passed in to the execution",
            "properties": {
              "type": {
                "description": "script execution parameter type",
                "type": "string",
                "enum": [
                  "Value",
                  "SecureValue",
                  "Credential"
                ],
                "x-ms-enum": {
                  "name": "ScriptExecutionParameterType",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Value",
                      "value": "Value"
                    },
                    {
                      "name": "SecureValue",
                      "value": "SecureValue"
                    },
                    {
                      "name": "Credential",
                      "value": "Credential"
                    }
                  ]
                }
              },
              "name": {
                "type": "string",
                "description": "The parameter name"
              }
            },
            "discriminator": "type",
            "required": [
              "type",
              "name"
            ]
          },
          "x-ms-identifiers": []
        },
        "failureReason": {
          "type": "string",
          "description": "Error message if the script was able to run, but if the script itself had\nerrors or powershell threw an exception"
        },
        "timeout": {
          "type": "string",
          "description": "Time limit for execution"
        },
        "retention": {
          "type": "string",
          "description": "Time to live for the resource. If not provided, will be available for 60 days"
        },
        "submittedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Time the script execution was submitted",
          "readOnly": true
        },
        "startedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Time the script execution was started",
          "readOnly": true
        },
        "finishedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Time the script execution was finished",
          "readOnly": true
        },
        "provisioningState": {
          "description": "The state of the script execution resource",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Pending",
            "Running",
            "Cancelling",
            "Cancelled",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "ScriptExecutionProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Pending",
                "value": "Pending",
                "description": "is pending"
              },
              {
                "name": "Running",
                "value": "Running",
                "description": "is running"
              },
              {
                "name": "Cancelling",
                "value": "Cancelling",
                "description": "is cancelling"
              },
              {
                "name": "Cancelled",
                "value": "Cancelled",
                "description": "is cancelled"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "is deleting"
              }
            ]
          }
        },
        "output": {
          "type": "array",
          "description": "Standard output stream from the powershell execution",
          "items": {
            "type": "string"
          }
        },
        "namedOutputs": {
          "type": "object",
          "description": "User-defined dictionary.",
          "additionalProperties": {
            "type": "object"
          }
        },
        "information": {
          "type": "array",
          "description": "Standard information out stream from the powershell execution",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "warnings": {
          "type": "array",
          "description": "Standard warning out stream from the powershell execution",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "errors": {
          "type": "array",
          "description": "Standard error output stream from the powershell execution",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      },
      "required": [
        "timeout"
      ]
    },
    "ScriptExecutionProvisioningState": {
      "type": "string",
      "description": "Script Execution provisioning state",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Pending",
        "Running",
        "Cancelling",
        "Cancelled",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "ScriptExecutionProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Pending",
            "value": "Pending",
            "description": "is pending"
          },
          {
            "name": "Running",
            "value": "Running",
            "description": "is running"
          },
          {
            "name": "Cancelling",
            "value": "Cancelling",
            "description": "is cancelling"
          },
          {
            "name": "Cancelled",
            "value": "Cancelled",
            "description": "is cancelled"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "is deleting"
          }
        ]
      },
      "readOnly": true
    },
    "ScriptExecutionsList": {
      "type": "object",
      "description": "The response of a ScriptExecution list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ScriptExecution items on this page",
          "items": {
            "type": "object",
            "description": "An instance of a script executed by a user - custom or AVS",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "scriptCmdletId": {
                    "type": "string",
                    "description": "A reference to the script cmdlet resource if user is running a AVS script"
                  },
                  "parameters": {
                    "type": "array",
                    "description": "Parameters the script will accept",
                    "items": {
                      "type": "object",
                      "description": "The arguments passed in to the execution",
                      "properties": {
                        "type": {
                          "description": "script execution parameter type",
                          "type": "string",
                          "enum": [
                            "Value",
                            "SecureValue",
                            "Credential"
                          ],
                          "x-ms-enum": {
                            "name": "ScriptExecutionParameterType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Value",
                                "value": "Value"
                              },
                              {
                                "name": "SecureValue",
                                "value": "SecureValue"
                              },
                              {
                                "name": "Credential",
                                "value": "Credential"
                              }
                            ]
                          }
                        },
                        "name": {
                          "type": "string",
                          "description": "The parameter name"
                        }
                      },
                      "discriminator": "type",
                      "required": [
                        "type",
                        "name"
                      ]
                    },
                    "x-ms-identifiers": []
                  },
                  "hiddenParameters": {
                    "type": "array",
                    "description": "Parameters that will be hidden/not visible to ARM, such as passwords and\ncredentials",
                    "items": {
                      "type": "object",
                      "description": "The arguments passed in to the execution",
                      "properties": {
                        "type": {
                          "description": "script execution parameter type",
                          "type": "string",
                          "enum": [
                            "Value",
                            "SecureValue",
                            "Credential"
                          ],
                          "x-ms-enum": {
                            "name": "ScriptExecutionParameterType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Value",
                                "value": "Value"
                              },
                              {
                                "name": "SecureValue",
                                "value": "SecureValue"
                              },
                              {
                                "name": "Credential",
                                "value": "Credential"
                              }
                            ]
                          }
                        },
                        "name": {
                          "type": "string",
                          "description": "The parameter name"
                        }
                      },
                      "discriminator": "type",
                      "required": [
                        "type",
                        "name"
                      ]
                    },
                    "x-ms-identifiers": []
                  },
                  "failureReason": {
                    "type": "string",
                    "description": "Error message if the script was able to run, but if the script itself had\nerrors or powershell threw an exception"
                  },
                  "timeout": {
                    "type": "string",
                    "description": "Time limit for execution"
                  },
                  "retention": {
                    "type": "string",
                    "description": "Time to live for the resource. If not provided, will be available for 60 days"
                  },
                  "submittedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Time the script execution was submitted",
                    "readOnly": true
                  },
                  "startedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Time the script execution was started",
                    "readOnly": true
                  },
                  "finishedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Time the script execution was finished",
                    "readOnly": true
                  },
                  "provisioningState": {
                    "description": "The state of the script execution resource",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Pending",
                      "Running",
                      "Cancelling",
                      "Cancelled",
                      "Deleting"
                    ],
                    "x-ms-enum": {
                      "name": "ScriptExecutionProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Pending",
                          "value": "Pending",
                          "description": "is pending"
                        },
                        {
                          "name": "Running",
                          "value": "Running",
                          "description": "is running"
                        },
                        {
                          "name": "Cancelling",
                          "value": "Cancelling",
                          "description": "is cancelling"
                        },
                        {
                          "name": "Cancelled",
                          "value": "Cancelled",
                          "description": "is cancelled"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "is deleting"
                        }
                      ]
                    }
                  },
                  "output": {
                    "type": "array",
                    "description": "Standard output stream from the powershell execution",
                    "items": {
                      "type": "string"
                    }
                  },
                  "namedOutputs": {
                    "type": "object",
                    "description": "User-defined dictionary.",
                    "additionalProperties": {
                      "type": "object"
                    }
                  },
                  "information": {
                    "type": "array",
                    "description": "Standard information out stream from the powershell execution",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "warnings": {
                    "type": "array",
                    "description": "Standard warning out stream from the powershell execution",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "errors": {
                    "type": "array",
                    "description": "Standard error output stream from the powershell execution",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  }
                },
                "required": [
                  "timeout"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ScriptOutputStreamType": {
      "type": "string",
      "description": "Script Output Stream type",
      "enum": [
        "Information",
        "Warning",
        "Output",
        "Error"
      ],
      "x-ms-enum": {
        "name": "ScriptOutputStreamType",
        "modelAsString": true,
        "values": [
          {
            "name": "Information",
            "value": "Information",
            "description": "is information"
          },
          {
            "name": "Warning",
            "value": "Warning",
            "description": "is warning"
          },
          {
            "name": "Output",
            "value": "Output",
            "description": "is output"
          },
          {
            "name": "Error",
            "value": "Error",
            "description": "is error"
          }
        ]
      }
    },
    "ScriptPackage": {
      "type": "object",
      "description": "Script Package resources available for execution",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "The provisioning state of the resource.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled"
              ],
              "x-ms-enum": {
                "name": "ScriptPackageProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  }
                ]
              }
            },
            "description": {
              "type": "string",
              "description": "User friendly description of the package",
              "readOnly": true
            },
            "version": {
              "type": "string",
              "description": "Module version",
              "readOnly": true
            },
            "company": {
              "type": "string",
              "description": "Company that created and supports the package",
              "readOnly": true
            },
            "uri": {
              "type": "string",
              "description": "Link to support by the package vendor",
              "readOnly": true
            }
          }
        }
      }
    },
    "ScriptPackageProperties": {
      "type": "object",
      "description": "Properties of a Script Package subresource",
      "properties": {
        "provisioningState": {
          "description": "The provisioning state of the resource.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ScriptPackageProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              }
            ]
          }
        },
        "description": {
          "type": "string",
          "description": "User friendly description of the package",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "Module version",
          "readOnly": true
        },
        "company": {
          "type": "string",
          "description": "Company that created and supports the package",
          "readOnly": true
        },
        "uri": {
          "type": "string",
          "description": "Link to support by the package vendor",
          "readOnly": true
        }
      }
    },
    "ScriptPackageProvisioningState": {
      "type": "string",
      "description": "Script Package provisioning state",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "ScriptPackageProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          }
        ]
      },
      "readOnly": true
    },
    "ScriptPackagesList": {
      "type": "object",
      "description": "The response of a ScriptPackage list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ScriptPackage items on this page",
          "items": {
            "type": "object",
            "description": "Script Package resources available for execution",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "The provisioning state of the resource.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled"
                    ],
                    "x-ms-enum": {
                      "name": "ScriptPackageProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        }
                      ]
                    }
                  },
                  "description": {
                    "type": "string",
                    "description": "User friendly description of the package",
                    "readOnly": true
                  },
                  "version": {
                    "type": "string",
                    "description": "Module version",
                    "readOnly": true
                  },
                  "company": {
                    "type": "string",
                    "description": "Company that created and supports the package",
                    "readOnly": true
                  },
                  "uri": {
                    "type": "string",
                    "description": "Link to support by the package vendor",
                    "readOnly": true
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ScriptParameter": {
      "type": "object",
      "description": "An parameter that the script will accept",
      "properties": {
        "type": {
          "description": "The type of parameter the script is expecting. psCredential is a\nPSCredentialObject",
          "readOnly": true,
          "type": "string",
          "enum": [
            "String",
            "SecureString",
            "Credential",
            "Int",
            "Bool",
            "Float"
          ],
          "x-ms-enum": {
            "name": "ScriptParameterTypes",
            "modelAsString": true,
            "values": [
              {
                "name": "String",
                "value": "String",
                "description": "is string"
              },
              {
                "name": "SecureString",
                "value": "SecureString",
                "description": "is secure string"
              },
              {
                "name": "Credential",
                "value": "Credential",
                "description": "is credential"
              },
              {
                "name": "Int",
                "value": "Int",
                "description": "is int"
              },
              {
                "name": "Bool",
                "value": "Bool",
                "description": "is bool"
              },
              {
                "name": "Float",
                "value": "Float",
                "description": "is float"
              }
            ]
          }
        },
        "name": {
          "type": "string",
          "description": "The parameter name that the script will expect a parameter value for"
        },
        "description": {
          "type": "string",
          "description": "User friendly description of the parameter",
          "readOnly": true
        },
        "visibility": {
          "description": "Should this parameter be visible to arm and passed in the parameters argument\nwhen executing",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Visible",
            "Hidden"
          ],
          "x-ms-enum": {
            "name": "VisibilityParameterEnum",
            "modelAsString": true,
            "values": [
              {
                "name": "Visible",
                "value": "Visible",
                "description": "is visible"
              },
              {
                "name": "Hidden",
                "value": "Hidden",
                "description": "is hidden"
              }
            ]
          }
        },
        "optional": {
          "description": "Is this parameter required or optional",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Optional",
            "Required"
          ],
          "x-ms-enum": {
            "name": "OptionalParamEnum",
            "modelAsString": true,
            "values": [
              {
                "name": "Optional",
                "value": "Optional",
                "description": "is optional"
              },
              {
                "name": "Required",
                "value": "Required",
                "description": "is required"
              }
            ]
          }
        }
      }
    },
    "ScriptParameterTypes": {
      "type": "string",
      "description": "Script Parameter types",
      "enum": [
        "String",
        "SecureString",
        "Credential",
        "Int",
        "Bool",
        "Float"
      ],
      "x-ms-enum": {
        "name": "ScriptParameterTypes",
        "modelAsString": true,
        "values": [
          {
            "name": "String",
            "value": "String",
            "description": "is string"
          },
          {
            "name": "SecureString",
            "value": "SecureString",
            "description": "is secure string"
          },
          {
            "name": "Credential",
            "value": "Credential",
            "description": "is credential"
          },
          {
            "name": "Int",
            "value": "Int",
            "description": "is int"
          },
          {
            "name": "Bool",
            "value": "Bool",
            "description": "is bool"
          },
          {
            "name": "Float",
            "value": "Float",
            "description": "is float"
          }
        ]
      }
    },
    "ScriptSecureStringExecutionParameter": {
      "type": "object",
      "description": "a plain text value execution parameter",
      "properties": {
        "secureValue": {
          "type": "string",
          "format": "password",
          "description": "A secure value for the passed parameter, not to be stored in logs",
          "x-ms-secret": true
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "The arguments passed in to the execution",
          "properties": {
            "type": {
              "description": "script execution parameter type",
              "type": "string",
              "enum": [
                "Value",
                "SecureValue",
                "Credential"
              ],
              "x-ms-enum": {
                "name": "ScriptExecutionParameterType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Value",
                    "value": "Value"
                  },
                  {
                    "name": "SecureValue",
                    "value": "SecureValue"
                  },
                  {
                    "name": "Credential",
                    "value": "Credential"
                  }
                ]
              }
            },
            "name": {
              "type": "string",
              "description": "The parameter name"
            }
          },
          "discriminator": "type",
          "required": [
            "type",
            "name"
          ]
        }
      ],
      "x-ms-discriminator-value": "SecureValue"
    },
    "ScriptStringExecutionParameter": {
      "type": "object",
      "description": "a plain text value execution parameter",
      "properties": {
        "value": {
          "type": "string",
          "description": "The value for the passed parameter"
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "The arguments passed in to the execution",
          "properties": {
            "type": {
              "description": "script execution parameter type",
              "type": "string",
              "enum": [
                "Value",
                "SecureValue",
                "Credential"
              ],
              "x-ms-enum": {
                "name": "ScriptExecutionParameterType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Value",
                    "value": "Value"
                  },
                  {
                    "name": "SecureValue",
                    "value": "SecureValue"
                  },
                  {
                    "name": "Credential",
                    "value": "Credential"
                  }
                ]
              }
            },
            "name": {
              "type": "string",
              "description": "The parameter name"
            }
          },
          "discriminator": "type",
          "required": [
            "type",
            "name"
          ]
        }
      ],
      "x-ms-discriminator-value": "Value"
    },
    "SegmentStatusEnum": {
      "type": "string",
      "description": "Segment status",
      "enum": [
        "SUCCESS",
        "FAILURE"
      ],
      "x-ms-enum": {
        "name": "SegmentStatusEnum",
        "modelAsString": true,
        "values": [
          {
            "name": "SUCCESS",
            "value": "SUCCESS",
            "description": "is success"
          },
          {
            "name": "FAILURE",
            "value": "FAILURE",
            "description": "is failure"
          }
        ]
      }
    },
    "SpecializedHostProperties": {
      "type": "object",
      "description": "The properties of a specialized host.",
      "allOf": [
        {
          "type": "object",
          "description": "The properties of a host.",
          "properties": {
            "kind": {
              "description": "The kind of host",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "string",
              "enum": [
                "General",
                "Specialized"
              ],
              "x-ms-enum": {
                "name": "HostKind",
                "modelAsString": true,
                "values": [
                  {
                    "name": "General",
                    "value": "General"
                  },
                  {
                    "name": "Specialized",
                    "value": "Specialized"
                  }
                ]
              }
            },
            "provisioningState": {
              "description": "The state of the host provisioning.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled"
              ],
              "x-ms-enum": {
                "name": "HostProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  }
                ]
              }
            },
            "displayName": {
              "type": "string",
              "description": "Display name of the host in VMware vCenter."
            },
            "moRefId": {
              "type": "string",
              "description": "vCenter managed object reference ID of the host.",
              "readOnly": true
            },
            "fqdn": {
              "type": "string",
              "description": "Fully qualified domain name of the host.",
              "minLength": 1,
              "maxLength": 255,
              "readOnly": true
            },
            "maintenance": {
              "description": "If provided, the host is in maintenance. The value is the reason for maintenance.",
              "type": "string",
              "enum": [
                "Replacement",
                "Upgrade"
              ],
              "x-ms-enum": {
                "name": "HostMaintenance",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Replacement",
                    "value": "Replacement",
                    "description": "The host is a replacement host."
                  },
                  {
                    "name": "Upgrade",
                    "value": "Upgrade",
                    "description": "The host is for an upgrade, such as an upgrade to ESXi, NSX-T, or other component."
                  }
                ]
              }
            },
            "faultDomain": {
              "type": "string",
              "readOnly": true
            }
          },
          "discriminator": "kind",
          "required": [
            "kind"
          ]
        }
      ],
      "x-ms-discriminator-value": "Specialized"
    },
    "SslEnum": {
      "type": "string",
      "description": "Whether SSL is enabled or disabled",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "SslEnum",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "is enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "is disabled"
          }
        ]
      }
    },
    "Trial": {
      "type": "object",
      "description": "Subscription trial availability",
      "properties": {
        "status": {
          "description": "Trial status",
          "readOnly": true,
          "type": "string",
          "enum": [
            "TrialAvailable",
            "TrialUsed",
            "TrialDisabled"
          ],
          "x-ms-enum": {
            "name": "TrialStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "TrialAvailable",
                "value": "TrialAvailable",
                "description": "is available"
              },
              {
                "name": "TrialUsed",
                "value": "TrialUsed",
                "description": "is used"
              },
              {
                "name": "TrialDisabled",
                "value": "TrialDisabled",
                "description": "is disabled"
              }
            ]
          }
        },
        "availableHosts": {
          "type": "integer",
          "format": "int32",
          "description": "Number of trial hosts available",
          "readOnly": true
        }
      }
    },
    "TrialStatus": {
      "type": "string",
      "description": "trial status",
      "enum": [
        "TrialAvailable",
        "TrialUsed",
        "TrialDisabled"
      ],
      "x-ms-enum": {
        "name": "TrialStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "TrialAvailable",
            "value": "TrialAvailable",
            "description": "is available"
          },
          {
            "name": "TrialUsed",
            "value": "TrialUsed",
            "description": "is used"
          },
          {
            "name": "TrialDisabled",
            "value": "TrialDisabled",
            "description": "is disabled"
          }
        ]
      }
    },
    "VMGroupStatusEnum": {
      "type": "string",
      "description": "VM group status",
      "enum": [
        "SUCCESS",
        "FAILURE"
      ],
      "x-ms-enum": {
        "name": "VMGroupStatusEnum",
        "modelAsString": true,
        "values": [
          {
            "name": "SUCCESS",
            "value": "SUCCESS",
            "description": "is success"
          },
          {
            "name": "FAILURE",
            "value": "FAILURE",
            "description": "is failure"
          }
        ]
      }
    },
    "VMTypeEnum": {
      "type": "string",
      "description": "VM type",
      "enum": [
        "REGULAR",
        "EDGE",
        "SERVICE"
      ],
      "x-ms-enum": {
        "name": "VMTypeEnum",
        "modelAsString": true,
        "values": [
          {
            "name": "REGULAR",
            "value": "REGULAR",
            "description": "is regular"
          },
          {
            "name": "EDGE",
            "value": "EDGE",
            "description": "is edge"
          },
          {
            "name": "SERVICE",
            "value": "SERVICE",
            "description": "is service"
          }
        ]
      }
    },
    "VirtualMachine": {
      "type": "object",
      "description": "Virtual Machine",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "The provisioning state of the resource.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled"
              ],
              "x-ms-enum": {
                "name": "VirtualMachineProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  }
                ]
              }
            },
            "displayName": {
              "type": "string",
              "description": "Display name of the VM.",
              "readOnly": true
            },
            "moRefId": {
              "type": "string",
              "description": "vCenter managed object reference ID of the virtual machine",
              "readOnly": true
            },
            "folderPath": {
              "type": "string",
              "description": "Path to virtual machine's folder starting from datacenter virtual machine folder",
              "readOnly": true
            },
            "restrictMovement": {
              "description": "Whether VM DRS-driven movement is restricted (enabled) or not (disabled)",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "VirtualMachineRestrictMovementState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled",
                    "description": "is enabled"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "is disabled"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "VirtualMachineProperties": {
      "type": "object",
      "description": "Virtual Machine Properties",
      "properties": {
        "provisioningState": {
          "description": "The provisioning state of the resource.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "VirtualMachineProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              }
            ]
          }
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the VM.",
          "readOnly": true
        },
        "moRefId": {
          "type": "string",
          "description": "vCenter managed object reference ID of the virtual machine",
          "readOnly": true
        },
        "folderPath": {
          "type": "string",
          "description": "Path to virtual machine's folder starting from datacenter virtual machine folder",
          "readOnly": true
        },
        "restrictMovement": {
          "description": "Whether VM DRS-driven movement is restricted (enabled) or not (disabled)",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "VirtualMachineRestrictMovementState",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "is enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "is disabled"
              }
            ]
          }
        }
      }
    },
    "VirtualMachineProvisioningState": {
      "type": "string",
      "description": "Virtual Machine provisioning state",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "VirtualMachineProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          }
        ]
      },
      "readOnly": true
    },
    "VirtualMachineRestrictMovement": {
      "type": "object",
      "description": "Set VM DRS-driven movement to restricted (enabled) or not (disabled)",
      "properties": {
        "restrictMovement": {
          "description": "Whether VM DRS-driven movement is restricted (enabled) or not (disabled)",
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "VirtualMachineRestrictMovementState",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "is enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "is disabled"
              }
            ]
          }
        }
      }
    },
    "VirtualMachineRestrictMovementState": {
      "type": "string",
      "description": "Virtual Machine Restrict Movement state",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "VirtualMachineRestrictMovementState",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "is enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "is disabled"
          }
        ]
      }
    },
    "VirtualMachinesList": {
      "type": "object",
      "description": "The response of a VirtualMachine list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The VirtualMachine items on this page",
          "items": {
            "type": "object",
            "description": "Virtual Machine",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "The provisioning state of the resource.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled"
                    ],
                    "x-ms-enum": {
                      "name": "VirtualMachineProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        }
                      ]
                    }
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Display name of the VM.",
                    "readOnly": true
                  },
                  "moRefId": {
                    "type": "string",
                    "description": "vCenter managed object reference ID of the virtual machine",
                    "readOnly": true
                  },
                  "folderPath": {
                    "type": "string",
                    "description": "Path to virtual machine's folder starting from datacenter virtual machine folder",
                    "readOnly": true
                  },
                  "restrictMovement": {
                    "description": "Whether VM DRS-driven movement is restricted (enabled) or not (disabled)",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "name": "VirtualMachineRestrictMovementState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Enabled",
                          "value": "Enabled",
                          "description": "is enabled"
                        },
                        {
                          "name": "Disabled",
                          "value": "Disabled",
                          "description": "is disabled"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "VisibilityParameterEnum": {
      "type": "string",
      "description": "Visibility Parameter",
      "enum": [
        "Visible",
        "Hidden"
      ],
      "x-ms-enum": {
        "name": "VisibilityParameterEnum",
        "modelAsString": true,
        "values": [
          {
            "name": "Visible",
            "value": "Visible",
            "description": "is visible"
          },
          {
            "name": "Hidden",
            "value": "Hidden",
            "description": "is hidden"
          }
        ]
      }
    },
    "VmHostPlacementPolicyProperties": {
      "type": "object",
      "description": "VM-Host placement policy properties",
      "properties": {
        "vmMembers": {
          "type": "array",
          "description": "Virtual machine members list",
          "items": {
            "type": "string"
          }
        },
        "hostMembers": {
          "type": "array",
          "description": "Host members list",
          "items": {
            "type": "string"
          }
        },
        "affinityType": {
          "description": "placement policy affinity type",
          "type": "string",
          "enum": [
            "Affinity",
            "AntiAffinity"
          ],
          "x-ms-enum": {
            "name": "AffinityType",
            "modelAsString": true,
            "values": [
              {
                "name": "Affinity",
                "value": "Affinity",
                "description": "is affinity"
              },
              {
                "name": "AntiAffinity",
                "value": "AntiAffinity",
                "description": "is anti-affinity"
              }
            ]
          }
        },
        "affinityStrength": {
          "description": "vm-host placement policy affinity strength (should/must)",
          "type": "string",
          "enum": [
            "Should",
            "Must"
          ],
          "x-ms-enum": {
            "name": "AffinityStrength",
            "modelAsString": true,
            "values": [
              {
                "name": "Should",
                "value": "Should",
                "description": "is should"
              },
              {
                "name": "Must",
                "value": "Must",
                "description": "is must"
              }
            ]
          }
        },
        "azureHybridBenefitType": {
          "description": "placement policy azure hybrid benefit opt-in type",
          "type": "string",
          "enum": [
            "SqlHost",
            "None"
          ],
          "x-ms-enum": {
            "name": "AzureHybridBenefitType",
            "modelAsString": true,
            "values": [
              {
                "name": "SqlHost",
                "value": "SqlHost",
                "description": "is SqlHost"
              },
              {
                "name": "None",
                "value": "None",
                "description": "is None"
              }
            ]
          }
        }
      },
      "required": [
        "vmMembers",
        "hostMembers",
        "affinityType"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "Abstract placement policy properties",
          "properties": {
            "type": {
              "description": "Placement Policy type",
              "type": "string",
              "enum": [
                "VmVm",
                "VmHost"
              ],
              "x-ms-enum": {
                "name": "PlacementPolicyType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "VmVm",
                    "value": "VmVm"
                  },
                  {
                    "name": "VmHost",
                    "value": "VmHost"
                  }
                ]
              }
            },
            "state": {
              "description": "Whether the placement policy is enabled or disabled",
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "PlacementPolicyState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled",
                    "description": "is enabled"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "is disabled"
                  }
                ]
              }
            },
            "displayName": {
              "type": "string",
              "description": "Display name of the placement policy"
            },
            "provisioningState": {
              "description": "The provisioning state",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Building",
                "Deleting",
                "Updating"
              ],
              "x-ms-enum": {
                "name": "PlacementPolicyProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Building",
                    "value": "Building",
                    "description": "is building"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "is deleting"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "is updating"
                  }
                ]
              }
            }
          },
          "discriminator": "type",
          "required": [
            "type"
          ]
        }
      ],
      "x-ms-discriminator-value": "VmHost"
    },
    "VmVmPlacementPolicyProperties": {
      "type": "object",
      "description": "VM-VM placement policy properties",
      "properties": {
        "vmMembers": {
          "type": "array",
          "description": "Virtual machine members list",
          "items": {
            "type": "string"
          }
        },
        "affinityType": {
          "description": "placement policy affinity type",
          "type": "string",
          "enum": [
            "Affinity",
            "AntiAffinity"
          ],
          "x-ms-enum": {
            "name": "AffinityType",
            "modelAsString": true,
            "values": [
              {
                "name": "Affinity",
                "value": "Affinity",
                "description": "is affinity"
              },
              {
                "name": "AntiAffinity",
                "value": "AntiAffinity",
                "description": "is anti-affinity"
              }
            ]
          }
        }
      },
      "required": [
        "vmMembers",
        "affinityType"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "Abstract placement policy properties",
          "properties": {
            "type": {
              "description": "Placement Policy type",
              "type": "string",
              "enum": [
                "VmVm",
                "VmHost"
              ],
              "x-ms-enum": {
                "name": "PlacementPolicyType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "VmVm",
                    "value": "VmVm"
                  },
                  {
                    "name": "VmHost",
                    "value": "VmHost"
                  }
                ]
              }
            },
            "state": {
              "description": "Whether the placement policy is enabled or disabled",
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "PlacementPolicyState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled",
                    "description": "is enabled"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "is disabled"
                  }
                ]
              }
            },
            "displayName": {
              "type": "string",
              "description": "Display name of the placement policy"
            },
            "provisioningState": {
              "description": "The provisioning state",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Building",
                "Deleting",
                "Updating"
              ],
              "x-ms-enum": {
                "name": "PlacementPolicyProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Building",
                    "value": "Building",
                    "description": "is building"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "is deleting"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "is updating"
                  }
                ]
              }
            }
          },
          "discriminator": "type",
          "required": [
            "type"
          ]
        }
      ],
      "x-ms-discriminator-value": "VmVm"
    },
    "WorkloadNetwork": {
      "type": "object",
      "description": "Workload Network",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "The provisioning state of the resource.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Building",
                "Deleting",
                "Updating"
              ],
              "x-ms-enum": {
                "name": "WorkloadNetworkProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Building",
                    "value": "Building",
                    "description": "is building"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "is deleting"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "is updating"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "WorkloadNetworkDhcp": {
      "type": "object",
      "description": "NSX DHCP",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "dhcpType": {
              "description": "Type of DHCP: SERVER or RELAY.",
              "type": "string",
              "enum": [
                "SERVER",
                "RELAY"
              ],
              "x-ms-enum": {
                "name": "DhcpTypeEnum",
                "modelAsString": true,
                "values": [
                  {
                    "name": "SERVER",
                    "value": "SERVER"
                  },
                  {
                    "name": "RELAY",
                    "value": "RELAY"
                  }
                ]
              }
            },
            "displayName": {
              "type": "string",
              "description": "Display name of the DHCP entity."
            },
            "segments": {
              "type": "array",
              "description": "NSX Segments consuming DHCP.",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "provisioningState": {
              "description": "The provisioning state",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Building",
                "Deleting",
                "Updating"
              ],
              "x-ms-enum": {
                "name": "WorkloadNetworkDhcpProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Building",
                    "value": "Building",
                    "description": "is building"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "is deleting"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "is updating"
                  }
                ]
              }
            },
            "revision": {
              "type": "integer",
              "format": "int64",
              "description": "NSX revision number."
            }
          },
          "discriminator": "dhcpType",
          "required": [
            "dhcpType"
          ]
        }
      }
    },
    "WorkloadNetworkDhcpEntity": {
      "type": "object",
      "description": "Base class for WorkloadNetworkDhcpServer and WorkloadNetworkDhcpRelay to\ninherit from",
      "properties": {
        "dhcpType": {
          "description": "Type of DHCP: SERVER or RELAY.",
          "type": "string",
          "enum": [
            "SERVER",
            "RELAY"
          ],
          "x-ms-enum": {
            "name": "DhcpTypeEnum",
            "modelAsString": true,
            "values": [
              {
                "name": "SERVER",
                "value": "SERVER"
              },
              {
                "name": "RELAY",
                "value": "RELAY"
              }
            ]
          }
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the DHCP entity."
        },
        "segments": {
          "type": "array",
          "description": "NSX Segments consuming DHCP.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "provisioningState": {
          "description": "The provisioning state",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Building",
            "Deleting",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "WorkloadNetworkDhcpProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Building",
                "value": "Building",
                "description": "is building"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "is deleting"
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "is updating"
              }
            ]
          }
        },
        "revision": {
          "type": "integer",
          "format": "int64",
          "description": "NSX revision number."
        }
      },
      "discriminator": "dhcpType",
      "required": [
        "dhcpType"
      ]
    },
    "WorkloadNetworkDhcpList": {
      "type": "object",
      "description": "The response of a WorkloadNetworkDhcp list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The WorkloadNetworkDhcp items on this page",
          "items": {
            "type": "object",
            "description": "NSX DHCP",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "dhcpType": {
                    "description": "Type of DHCP: SERVER or RELAY.",
                    "type": "string",
                    "enum": [
                      "SERVER",
                      "RELAY"
                    ],
                    "x-ms-enum": {
                      "name": "DhcpTypeEnum",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "SERVER",
                          "value": "SERVER"
                        },
                        {
                          "name": "RELAY",
                          "value": "RELAY"
                        }
                      ]
                    }
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Display name of the DHCP entity."
                  },
                  "segments": {
                    "type": "array",
                    "description": "NSX Segments consuming DHCP.",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "provisioningState": {
                    "description": "The provisioning state",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Building",
                      "Deleting",
                      "Updating"
                    ],
                    "x-ms-enum": {
                      "name": "WorkloadNetworkDhcpProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Building",
                          "value": "Building",
                          "description": "is building"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "is deleting"
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "is updating"
                        }
                      ]
                    }
                  },
                  "revision": {
                    "type": "integer",
                    "format": "int64",
                    "description": "NSX revision number."
                  }
                },
                "discriminator": "dhcpType",
                "required": [
                  "dhcpType"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkloadNetworkDhcpProvisioningState": {
      "type": "string",
      "description": "Workload Network DHCP provisioning state",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Building",
        "Deleting",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "WorkloadNetworkDhcpProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Building",
            "value": "Building",
            "description": "is building"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "is deleting"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "is updating"
          }
        ]
      },
      "readOnly": true
    },
    "WorkloadNetworkDhcpRelay": {
      "type": "object",
      "description": "NSX DHCP Relay",
      "properties": {
        "serverAddresses": {
          "type": "array",
          "description": "DHCP Relay Addresses. Max 3.",
          "minItems": 1,
          "maxItems": 3,
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Base class for WorkloadNetworkDhcpServer and WorkloadNetworkDhcpRelay to\ninherit from",
          "properties": {
            "dhcpType": {
              "description": "Type of DHCP: SERVER or RELAY.",
              "type": "string",
              "enum": [
                "SERVER",
                "RELAY"
              ],
              "x-ms-enum": {
                "name": "DhcpTypeEnum",
                "modelAsString": true,
                "values": [
                  {
                    "name": "SERVER",
                    "value": "SERVER"
                  },
                  {
                    "name": "RELAY",
                    "value": "RELAY"
                  }
                ]
              }
            },
            "displayName": {
              "type": "string",
              "description": "Display name of the DHCP entity."
            },
            "segments": {
              "type": "array",
              "description": "NSX Segments consuming DHCP.",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "provisioningState": {
              "description": "The provisioning state",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Building",
                "Deleting",
                "Updating"
              ],
              "x-ms-enum": {
                "name": "WorkloadNetworkDhcpProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Building",
                    "value": "Building",
                    "description": "is building"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "is deleting"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "is updating"
                  }
                ]
              }
            },
            "revision": {
              "type": "integer",
              "format": "int64",
              "description": "NSX revision number."
            }
          },
          "discriminator": "dhcpType",
          "required": [
            "dhcpType"
          ]
        }
      ],
      "x-ms-discriminator-value": "RELAY"
    },
    "WorkloadNetworkDhcpServer": {
      "type": "object",
      "description": "NSX DHCP Server",
      "properties": {
        "serverAddress": {
          "type": "string",
          "description": "DHCP Server Address."
        },
        "leaseTime": {
          "type": "integer",
          "format": "int64",
          "description": "DHCP Server Lease Time."
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Base class for WorkloadNetworkDhcpServer and WorkloadNetworkDhcpRelay to\ninherit from",
          "properties": {
            "dhcpType": {
              "description": "Type of DHCP: SERVER or RELAY.",
              "type": "string",
              "enum": [
                "SERVER",
                "RELAY"
              ],
              "x-ms-enum": {
                "name": "DhcpTypeEnum",
                "modelAsString": true,
                "values": [
                  {
                    "name": "SERVER",
                    "value": "SERVER"
                  },
                  {
                    "name": "RELAY",
                    "value": "RELAY"
                  }
                ]
              }
            },
            "displayName": {
              "type": "string",
              "description": "Display name of the DHCP entity."
            },
            "segments": {
              "type": "array",
              "description": "NSX Segments consuming DHCP.",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "provisioningState": {
              "description": "The provisioning state",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Building",
                "Deleting",
                "Updating"
              ],
              "x-ms-enum": {
                "name": "WorkloadNetworkDhcpProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Building",
                    "value": "Building",
                    "description": "is building"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "is deleting"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "is updating"
                  }
                ]
              }
            },
            "revision": {
              "type": "integer",
              "format": "int64",
              "description": "NSX revision number."
            }
          },
          "discriminator": "dhcpType",
          "required": [
            "dhcpType"
          ]
        }
      ],
      "x-ms-discriminator-value": "SERVER"
    },
    "WorkloadNetworkDnsService": {
      "type": "object",
      "description": "NSX DNS Service",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string",
              "description": "Display name of the DNS Service."
            },
            "dnsServiceIp": {
              "type": "string",
              "description": "DNS service IP of the DNS Service."
            },
            "defaultDnsZone": {
              "type": "string",
              "description": "Default DNS zone of the DNS Service."
            },
            "fqdnZones": {
              "type": "array",
              "description": "FQDN zones of the DNS Service.",
              "items": {
                "type": "string"
              }
            },
            "logLevel": {
              "description": "DNS Service log level.",
              "type": "string",
              "enum": [
                "DEBUG",
                "INFO",
                "WARNING",
                "ERROR",
                "FATAL"
              ],
              "x-ms-enum": {
                "name": "DnsServiceLogLevelEnum",
                "modelAsString": true,
                "values": [
                  {
                    "name": "DEBUG",
                    "value": "DEBUG",
                    "description": "is debug"
                  },
                  {
                    "name": "INFO",
                    "value": "INFO",
                    "description": "is info"
                  },
                  {
                    "name": "WARNING",
                    "value": "WARNING",
                    "description": "is warning"
                  },
                  {
                    "name": "ERROR",
                    "value": "ERROR",
                    "description": "is error"
                  },
                  {
                    "name": "FATAL",
                    "value": "FATAL",
                    "description": "is fatal"
                  }
                ]
              }
            },
            "status": {
              "description": "DNS Service status.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "SUCCESS",
                "FAILURE"
              ],
              "x-ms-enum": {
                "name": "DnsServiceStatusEnum",
                "modelAsString": true,
                "values": [
                  {
                    "name": "SUCCESS",
                    "value": "SUCCESS",
                    "description": "is success"
                  },
                  {
                    "name": "FAILURE",
                    "value": "FAILURE",
                    "description": "is failure"
                  }
                ]
              }
            },
            "provisioningState": {
              "description": "The provisioning state",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Building",
                "Deleting",
                "Updating"
              ],
              "x-ms-enum": {
                "name": "WorkloadNetworkDnsServiceProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Building",
                    "value": "Building",
                    "description": "is building"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "is deleting"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "is updating"
                  }
                ]
              }
            },
            "revision": {
              "type": "integer",
              "format": "int64",
              "description": "NSX revision number."
            }
          }
        }
      }
    },
    "WorkloadNetworkDnsServiceProperties": {
      "type": "object",
      "description": "NSX DNS Service Properties",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Display name of the DNS Service."
        },
        "dnsServiceIp": {
          "type": "string",
          "description": "DNS service IP of the DNS Service."
        },
        "defaultDnsZone": {
          "type": "string",
          "description": "Default DNS zone of the DNS Service."
        },
        "fqdnZones": {
          "type": "array",
          "description": "FQDN zones of the DNS Service.",
          "items": {
            "type": "string"
          }
        },
        "logLevel": {
          "description": "DNS Service log level.",
          "type": "string",
          "enum": [
            "DEBUG",
            "INFO",
            "WARNING",
            "ERROR",
            "FATAL"
          ],
          "x-ms-enum": {
            "name": "DnsServiceLogLevelEnum",
            "modelAsString": true,
            "values": [
              {
                "name": "DEBUG",
                "value": "DEBUG",
                "description": "is debug"
              },
              {
                "name": "INFO",
                "value": "INFO",
                "description": "is info"
              },
              {
                "name": "WARNING",
                "value": "WARNING",
                "description": "is warning"
              },
              {
                "name": "ERROR",
                "value": "ERROR",
                "description": "is error"
              },
              {
                "name": "FATAL",
                "value": "FATAL",
                "description": "is fatal"
              }
            ]
          }
        },
        "status": {
          "description": "DNS Service status.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "SUCCESS",
            "FAILURE"
          ],
          "x-ms-enum": {
            "name": "DnsServiceStatusEnum",
            "modelAsString": true,
            "values": [
              {
                "name": "SUCCESS",
                "value": "SUCCESS",
                "description": "is success"
              },
              {
                "name": "FAILURE",
                "value": "FAILURE",
                "description": "is failure"
              }
            ]
          }
        },
        "provisioningState": {
          "description": "The provisioning state",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Building",
            "Deleting",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "WorkloadNetworkDnsServiceProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Building",
                "value": "Building",
                "description": "is building"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "is deleting"
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "is updating"
              }
            ]
          }
        },
        "revision": {
          "type": "integer",
          "format": "int64",
          "description": "NSX revision number."
        }
      }
    },
    "WorkloadNetworkDnsServiceProvisioningState": {
      "type": "string",
      "description": "Workload Network DNS Service provisioning state",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Building",
        "Deleting",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "WorkloadNetworkDnsServiceProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Building",
            "value": "Building",
            "description": "is building"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "is deleting"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "is updating"
          }
        ]
      },
      "readOnly": true
    },
    "WorkloadNetworkDnsServicesList": {
      "type": "object",
      "description": "The response of a WorkloadNetworkDnsService list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The WorkloadNetworkDnsService items on this page",
          "items": {
            "type": "object",
            "description": "NSX DNS Service",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "displayName": {
                    "type": "string",
                    "description": "Display name of the DNS Service."
                  },
                  "dnsServiceIp": {
                    "type": "string",
                    "description": "DNS service IP of the DNS Service."
                  },
                  "defaultDnsZone": {
                    "type": "string",
                    "description": "Default DNS zone of the DNS Service."
                  },
                  "fqdnZones": {
                    "type": "array",
                    "description": "FQDN zones of the DNS Service.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "logLevel": {
                    "description": "DNS Service log level.",
                    "type": "string",
                    "enum": [
                      "DEBUG",
                      "INFO",
                      "WARNING",
                      "ERROR",
                      "FATAL"
                    ],
                    "x-ms-enum": {
                      "name": "DnsServiceLogLevelEnum",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "DEBUG",
                          "value": "DEBUG",
                          "description": "is debug"
                        },
                        {
                          "name": "INFO",
                          "value": "INFO",
                          "description": "is info"
                        },
                        {
                          "name": "WARNING",
                          "value": "WARNING",
                          "description": "is warning"
                        },
                        {
                          "name": "ERROR",
                          "value": "ERROR",
                          "description": "is error"
                        },
                        {
                          "name": "FATAL",
                          "value": "FATAL",
                          "description": "is fatal"
                        }
                      ]
                    }
                  },
                  "status": {
                    "description": "DNS Service status.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "SUCCESS",
                      "FAILURE"
                    ],
                    "x-ms-enum": {
                      "name": "DnsServiceStatusEnum",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "SUCCESS",
                          "value": "SUCCESS",
                          "description": "is success"
                        },
                        {
                          "name": "FAILURE",
                          "value": "FAILURE",
                          "description": "is failure"
                        }
                      ]
                    }
                  },
                  "provisioningState": {
                    "description": "The provisioning state",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Building",
                      "Deleting",
                      "Updating"
                    ],
                    "x-ms-enum": {
                      "name": "WorkloadNetworkDnsServiceProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Building",
                          "value": "Building",
                          "description": "is building"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "is deleting"
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "is updating"
                        }
                      ]
                    }
                  },
                  "revision": {
                    "type": "integer",
                    "format": "int64",
                    "description": "NSX revision number."
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkloadNetworkDnsZone": {
      "type": "object",
      "description": "NSX DNS Zone",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string",
              "description": "Display name of the DNS Zone."
            },
            "domain": {
              "type": "array",
              "description": "Domain names of the DNS Zone.",
              "items": {
                "type": "string"
              }
            },
            "dnsServerIps": {
              "type": "array",
              "description": "DNS Server IP array of the DNS Zone.",
              "items": {
                "type": "string"
              }
            },
            "sourceIp": {
              "type": "string",
              "description": "Source IP of the DNS Zone."
            },
            "dnsServices": {
              "type": "integer",
              "format": "int64",
              "description": "Number of DNS Services using the DNS zone."
            },
            "provisioningState": {
              "description": "The provisioning state",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Building",
                "Deleting",
                "Updating"
              ],
              "x-ms-enum": {
                "name": "WorkloadNetworkDnsZoneProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Building",
                    "value": "Building",
                    "description": "is building"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "is deleting"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "is updating"
                  }
                ]
              }
            },
            "revision": {
              "type": "integer",
              "format": "int64",
              "description": "NSX revision number."
            }
          }
        }
      }
    },
    "WorkloadNetworkDnsZoneProperties": {
      "type": "object",
      "description": "NSX DNS Zone Properties",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Display name of the DNS Zone."
        },
        "domain": {
          "type": "array",
          "description": "Domain names of the DNS Zone.",
          "items": {
            "type": "string"
          }
        },
        "dnsServerIps": {
          "type": "array",
          "description": "DNS Server IP array of the DNS Zone.",
          "items": {
            "type": "string"
          }
        },
        "sourceIp": {
          "type": "string",
          "description": "Source IP of the DNS Zone."
        },
        "dnsServices": {
          "type": "integer",
          "format": "int64",
          "description": "Number of DNS Services using the DNS zone."
        },
        "provisioningState": {
          "description": "The provisioning state",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Building",
            "Deleting",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "WorkloadNetworkDnsZoneProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Building",
                "value": "Building",
                "description": "is building"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "is deleting"
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "is updating"
              }
            ]
          }
        },
        "revision": {
          "type": "integer",
          "format": "int64",
          "description": "NSX revision number."
        }
      }
    },
    "WorkloadNetworkDnsZoneProvisioningState": {
      "type": "string",
      "description": "Workload Network DNS Zone provisioning state",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Building",
        "Deleting",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "WorkloadNetworkDnsZoneProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Building",
            "value": "Building",
            "description": "is building"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "is deleting"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "is updating"
          }
        ]
      },
      "readOnly": true
    },
    "WorkloadNetworkDnsZonesList": {
      "type": "object",
      "description": "The response of a WorkloadNetworkDnsZone list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The WorkloadNetworkDnsZone items on this page",
          "items": {
            "type": "object",
            "description": "NSX DNS Zone",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "displayName": {
                    "type": "string",
                    "description": "Display name of the DNS Zone."
                  },
                  "domain": {
                    "type": "array",
                    "description": "Domain names of the DNS Zone.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "dnsServerIps": {
                    "type": "array",
                    "description": "DNS Server IP array of the DNS Zone.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "sourceIp": {
                    "type": "string",
                    "description": "Source IP of the DNS Zone."
                  },
                  "dnsServices": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Number of DNS Services using the DNS zone."
                  },
                  "provisioningState": {
                    "description": "The provisioning state",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Building",
                      "Deleting",
                      "Updating"
                    ],
                    "x-ms-enum": {
                      "name": "WorkloadNetworkDnsZoneProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Building",
                          "value": "Building",
                          "description": "is building"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "is deleting"
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "is updating"
                        }
                      ]
                    }
                  },
                  "revision": {
                    "type": "integer",
                    "format": "int64",
                    "description": "NSX revision number."
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkloadNetworkGateway": {
      "type": "object",
      "description": "NSX Gateway.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "The provisioning state of the resource.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Building",
                "Deleting",
                "Updating"
              ],
              "x-ms-enum": {
                "name": "WorkloadNetworkProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Building",
                    "value": "Building",
                    "description": "is building"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "is deleting"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "is updating"
                  }
                ]
              }
            },
            "displayName": {
              "type": "string",
              "description": "Display name of the DHCP entity."
            },
            "path": {
              "type": "string",
              "description": "NSX Gateway Path.",
              "readOnly": true
            }
          }
        }
      }
    },
    "WorkloadNetworkGatewayList": {
      "type": "object",
      "description": "The response of a WorkloadNetworkGateway list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The WorkloadNetworkGateway items on this page",
          "items": {
            "type": "object",
            "description": "NSX Gateway.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "The provisioning state of the resource.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Building",
                      "Deleting",
                      "Updating"
                    ],
                    "x-ms-enum": {
                      "name": "WorkloadNetworkProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Building",
                          "value": "Building",
                          "description": "is building"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "is deleting"
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "is updating"
                        }
                      ]
                    }
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Display name of the DHCP entity."
                  },
                  "path": {
                    "type": "string",
                    "description": "NSX Gateway Path.",
                    "readOnly": true
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkloadNetworkGatewayProperties": {
      "type": "object",
      "description": "Properties of a NSX Gateway.",
      "properties": {
        "provisioningState": {
          "description": "The provisioning state of the resource.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Building",
            "Deleting",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "WorkloadNetworkProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Building",
                "value": "Building",
                "description": "is building"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "is deleting"
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "is updating"
              }
            ]
          }
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the DHCP entity."
        },
        "path": {
          "type": "string",
          "description": "NSX Gateway Path.",
          "readOnly": true
        }
      }
    },
    "WorkloadNetworkList": {
      "type": "object",
      "description": "The response of a WorkloadNetwork list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The WorkloadNetwork items on this page",
          "items": {
            "type": "object",
            "description": "Workload Network",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "The provisioning state of the resource.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Building",
                      "Deleting",
                      "Updating"
                    ],
                    "x-ms-enum": {
                      "name": "WorkloadNetworkProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Building",
                          "value": "Building",
                          "description": "is building"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "is deleting"
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "is updating"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkloadNetworkPortMirroring": {
      "type": "object",
      "description": "NSX Port Mirroring",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string",
              "description": "Display name of the port mirroring profile."
            },
            "direction": {
              "description": "Direction of port mirroring profile.",
              "type": "string",
              "enum": [
                "INGRESS",
                "EGRESS",
                "BIDIRECTIONAL"
              ],
              "x-ms-enum": {
                "name": "PortMirroringDirectionEnum",
                "modelAsString": true,
                "values": [
                  {
                    "name": "INGRESS",
                    "value": "INGRESS",
                    "description": "is ingress"
                  },
                  {
                    "name": "EGRESS",
                    "value": "EGRESS",
                    "description": "is egress"
                  },
                  {
                    "name": "BIDIRECTIONAL",
                    "value": "BIDIRECTIONAL",
                    "description": "is bidirectional"
                  }
                ]
              }
            },
            "source": {
              "type": "string",
              "description": "Source VM Group."
            },
            "destination": {
              "type": "string",
              "description": "Destination VM Group."
            },
            "status": {
              "description": "Port Mirroring Status.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "SUCCESS",
                "FAILURE"
              ],
              "x-ms-enum": {
                "name": "PortMirroringStatusEnum",
                "modelAsString": true,
                "values": [
                  {
                    "name": "SUCCESS",
                    "value": "SUCCESS",
                    "description": "is success"
                  },
                  {
                    "name": "FAILURE",
                    "value": "FAILURE",
                    "description": "is failure"
                  }
                ]
              }
            },
            "provisioningState": {
              "description": "The provisioning state",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Building",
                "Deleting",
                "Updating"
              ],
              "x-ms-enum": {
                "name": "WorkloadNetworkPortMirroringProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Building",
                    "value": "Building",
                    "description": "is building"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "is deleting"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "is updating"
                  }
                ]
              }
            },
            "revision": {
              "type": "integer",
              "format": "int64",
              "description": "NSX revision number."
            }
          }
        }
      }
    },
    "WorkloadNetworkPortMirroringList": {
      "type": "object",
      "description": "The response of a WorkloadNetworkPortMirroring list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The WorkloadNetworkPortMirroring items on this page",
          "items": {
            "type": "object",
            "description": "NSX Port Mirroring",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "displayName": {
                    "type": "string",
                    "description": "Display name of the port mirroring profile."
                  },
                  "direction": {
                    "description": "Direction of port mirroring profile.",
                    "type": "string",
                    "enum": [
                      "INGRESS",
                      "EGRESS",
                      "BIDIRECTIONAL"
                    ],
                    "x-ms-enum": {
                      "name": "PortMirroringDirectionEnum",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "INGRESS",
                          "value": "INGRESS",
                          "description": "is ingress"
                        },
                        {
                          "name": "EGRESS",
                          "value": "EGRESS",
                          "description": "is egress"
                        },
                        {
                          "name": "BIDIRECTIONAL",
                          "value": "BIDIRECTIONAL",
                          "description": "is bidirectional"
                        }
                      ]
                    }
                  },
                  "source": {
                    "type": "string",
                    "description": "Source VM Group."
                  },
                  "destination": {
                    "type": "string",
                    "description": "Destination VM Group."
                  },
                  "status": {
                    "description": "Port Mirroring Status.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "SUCCESS",
                      "FAILURE"
                    ],
                    "x-ms-enum": {
                      "name": "PortMirroringStatusEnum",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "SUCCESS",
                          "value": "SUCCESS",
                          "description": "is success"
                        },
                        {
                          "name": "FAILURE",
                          "value": "FAILURE",
                          "description": "is failure"
                        }
                      ]
                    }
                  },
                  "provisioningState": {
                    "description": "The provisioning state",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Building",
                      "Deleting",
                      "Updating"
                    ],
                    "x-ms-enum": {
                      "name": "WorkloadNetworkPortMirroringProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Building",
                          "value": "Building",
                          "description": "is building"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "is deleting"
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "is updating"
                        }
                      ]
                    }
                  },
                  "revision": {
                    "type": "integer",
                    "format": "int64",
                    "description": "NSX revision number."
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkloadNetworkPortMirroringProperties": {
      "type": "object",
      "description": "NSX Port Mirroring Properties",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Display name of the port mirroring profile."
        },
        "direction": {
          "description": "Direction of port mirroring profile.",
          "type": "string",
          "enum": [
            "INGRESS",
            "EGRESS",
            "BIDIRECTIONAL"
          ],
          "x-ms-enum": {
            "name": "PortMirroringDirectionEnum",
            "modelAsString": true,
            "values": [
              {
                "name": "INGRESS",
                "value": "INGRESS",
                "description": "is ingress"
              },
              {
                "name": "EGRESS",
                "value": "EGRESS",
                "description": "is egress"
              },
              {
                "name": "BIDIRECTIONAL",
                "value": "BIDIRECTIONAL",
                "description": "is bidirectional"
              }
            ]
          }
        },
        "source": {
          "type": "string",
          "description": "Source VM Group."
        },
        "destination": {
          "type": "string",
          "description": "Destination VM Group."
        },
        "status": {
          "description": "Port Mirroring Status.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "SUCCESS",
            "FAILURE"
          ],
          "x-ms-enum": {
            "name": "PortMirroringStatusEnum",
            "modelAsString": true,
            "values": [
              {
                "name": "SUCCESS",
                "value": "SUCCESS",
                "description": "is success"
              },
              {
                "name": "FAILURE",
                "value": "FAILURE",
                "description": "is failure"
              }
            ]
          }
        },
        "provisioningState": {
          "description": "The provisioning state",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Building",
            "Deleting",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "WorkloadNetworkPortMirroringProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Building",
                "value": "Building",
                "description": "is building"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "is deleting"
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "is updating"
              }
            ]
          }
        },
        "revision": {
          "type": "integer",
          "format": "int64",
          "description": "NSX revision number."
        }
      }
    },
    "WorkloadNetworkPortMirroringProvisioningState": {
      "type": "string",
      "description": "Workload Network Port Mirroring provisioning state",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Building",
        "Deleting",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "WorkloadNetworkPortMirroringProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Building",
            "value": "Building",
            "description": "is building"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "is deleting"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "is updating"
          }
        ]
      },
      "readOnly": true
    },
    "WorkloadNetworkProperties": {
      "type": "object",
      "description": "The properties of a workload network",
      "properties": {
        "provisioningState": {
          "description": "The provisioning state of the resource.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Building",
            "Deleting",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "WorkloadNetworkProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Building",
                "value": "Building",
                "description": "is building"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "is deleting"
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "is updating"
              }
            ]
          }
        }
      }
    },
    "WorkloadNetworkProvisioningState": {
      "type": "string",
      "description": "base Workload Network provisioning state",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Building",
        "Deleting",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "WorkloadNetworkProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Building",
            "value": "Building",
            "description": "is building"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "is deleting"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "is updating"
          }
        ]
      },
      "readOnly": true
    },
    "WorkloadNetworkPublicIP": {
      "type": "object",
      "description": "NSX Public IP Block",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string",
              "description": "Display name of the Public IP Block."
            },
            "numberOfPublicIPs": {
              "type": "integer",
              "format": "int64",
              "description": "Number of Public IPs requested."
            },
            "publicIPBlock": {
              "type": "string",
              "description": "CIDR Block of the Public IP Block.",
              "readOnly": true
            },
            "provisioningState": {
              "description": "The provisioning state",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Building",
                "Deleting",
                "Updating"
              ],
              "x-ms-enum": {
                "name": "WorkloadNetworkPublicIPProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Building",
                    "value": "Building",
                    "description": "is building"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "is deleting"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "is updating"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "WorkloadNetworkPublicIPProperties": {
      "type": "object",
      "description": "NSX Public IP Block Properties",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Display name of the Public IP Block."
        },
        "numberOfPublicIPs": {
          "type": "integer",
          "format": "int64",
          "description": "Number of Public IPs requested."
        },
        "publicIPBlock": {
          "type": "string",
          "description": "CIDR Block of the Public IP Block.",
          "readOnly": true
        },
        "provisioningState": {
          "description": "The provisioning state",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Building",
            "Deleting",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "WorkloadNetworkPublicIPProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Building",
                "value": "Building",
                "description": "is building"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "is deleting"
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "is updating"
              }
            ]
          }
        }
      }
    },
    "WorkloadNetworkPublicIPProvisioningState": {
      "type": "string",
      "description": "Workload Network Public IP provisioning state",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Building",
        "Deleting",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "WorkloadNetworkPublicIPProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Building",
            "value": "Building",
            "description": "is building"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "is deleting"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "is updating"
          }
        ]
      },
      "readOnly": true
    },
    "WorkloadNetworkPublicIPsList": {
      "type": "object",
      "description": "The response of a WorkloadNetworkPublicIP list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The WorkloadNetworkPublicIP items on this page",
          "items": {
            "type": "object",
            "description": "NSX Public IP Block",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "displayName": {
                    "type": "string",
                    "description": "Display name of the Public IP Block."
                  },
                  "numberOfPublicIPs": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Number of Public IPs requested."
                  },
                  "publicIPBlock": {
                    "type": "string",
                    "description": "CIDR Block of the Public IP Block.",
                    "readOnly": true
                  },
                  "provisioningState": {
                    "description": "The provisioning state",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Building",
                      "Deleting",
                      "Updating"
                    ],
                    "x-ms-enum": {
                      "name": "WorkloadNetworkPublicIPProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Building",
                          "value": "Building",
                          "description": "is building"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "is deleting"
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "is updating"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkloadNetworkSegment": {
      "type": "object",
      "description": "NSX Segment",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string",
              "description": "Display name of the segment."
            },
            "connectedGateway": {
              "type": "string",
              "description": "Gateway which to connect segment to."
            },
            "subnet": {
              "description": "Subnet which to connect segment to.",
              "type": "object",
              "properties": {
                "dhcpRanges": {
                  "type": "array",
                  "description": "DHCP Range assigned for subnet.",
                  "items": {
                    "type": "string"
                  }
                },
                "gatewayAddress": {
                  "type": "string",
                  "description": "Gateway address."
                }
              }
            },
            "portVif": {
              "type": "array",
              "description": "Port Vif which segment is associated with.",
              "items": {
                "type": "object",
                "description": "Ports and any VIF attached to segment.",
                "properties": {
                  "portName": {
                    "type": "string",
                    "description": "Name of port or VIF attached to segment."
                  }
                }
              },
              "readOnly": true,
              "x-ms-identifiers": []
            },
            "status": {
              "description": "Segment status.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "SUCCESS",
                "FAILURE"
              ],
              "x-ms-enum": {
                "name": "SegmentStatusEnum",
                "modelAsString": true,
                "values": [
                  {
                    "name": "SUCCESS",
                    "value": "SUCCESS",
                    "description": "is success"
                  },
                  {
                    "name": "FAILURE",
                    "value": "FAILURE",
                    "description": "is failure"
                  }
                ]
              }
            },
            "provisioningState": {
              "description": "The provisioning state",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Building",
                "Deleting",
                "Updating"
              ],
              "x-ms-enum": {
                "name": "WorkloadNetworkSegmentProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Building",
                    "value": "Building",
                    "description": "is building"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "is deleting"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "is updating"
                  }
                ]
              }
            },
            "revision": {
              "type": "integer",
              "format": "int64",
              "description": "NSX revision number."
            }
          }
        }
      }
    },
    "WorkloadNetworkSegmentPortVif": {
      "type": "object",
      "description": "Ports and any VIF attached to segment.",
      "properties": {
        "portName": {
          "type": "string",
          "description": "Name of port or VIF attached to segment."
        }
      }
    },
    "WorkloadNetworkSegmentProperties": {
      "type": "object",
      "description": "NSX Segment Properties",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Display name of the segment."
        },
        "connectedGateway": {
          "type": "string",
          "description": "Gateway which to connect segment to."
        },
        "subnet": {
          "description": "Subnet which to connect segment to.",
          "type": "object",
          "properties": {
            "dhcpRanges": {
              "type": "array",
              "description": "DHCP Range assigned for subnet.",
              "items": {
                "type": "string"
              }
            },
            "gatewayAddress": {
              "type": "string",
              "description": "Gateway address."
            }
          }
        },
        "portVif": {
          "type": "array",
          "description": "Port Vif which segment is associated with.",
          "items": {
            "type": "object",
            "description": "Ports and any VIF attached to segment.",
            "properties": {
              "portName": {
                "type": "string",
                "description": "Name of port or VIF attached to segment."
              }
            }
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "status": {
          "description": "Segment status.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "SUCCESS",
            "FAILURE"
          ],
          "x-ms-enum": {
            "name": "SegmentStatusEnum",
            "modelAsString": true,
            "values": [
              {
                "name": "SUCCESS",
                "value": "SUCCESS",
                "description": "is success"
              },
              {
                "name": "FAILURE",
                "value": "FAILURE",
                "description": "is failure"
              }
            ]
          }
        },
        "provisioningState": {
          "description": "The provisioning state",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Building",
            "Deleting",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "WorkloadNetworkSegmentProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Building",
                "value": "Building",
                "description": "is building"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "is deleting"
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "is updating"
              }
            ]
          }
        },
        "revision": {
          "type": "integer",
          "format": "int64",
          "description": "NSX revision number."
        }
      }
    },
    "WorkloadNetworkSegmentProvisioningState": {
      "type": "string",
      "description": "Workload Network Segment provisioning state",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Building",
        "Deleting",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "WorkloadNetworkSegmentProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Building",
            "value": "Building",
            "description": "is building"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "is deleting"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "is updating"
          }
        ]
      },
      "readOnly": true
    },
    "WorkloadNetworkSegmentSubnet": {
      "type": "object",
      "description": "Subnet configuration for segment",
      "properties": {
        "dhcpRanges": {
          "type": "array",
          "description": "DHCP Range assigned for subnet.",
          "items": {
            "type": "string"
          }
        },
        "gatewayAddress": {
          "type": "string",
          "description": "Gateway address."
        }
      }
    },
    "WorkloadNetworkSegmentsList": {
      "type": "object",
      "description": "The response of a WorkloadNetworkSegment list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The WorkloadNetworkSegment items on this page",
          "items": {
            "type": "object",
            "description": "NSX Segment",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "displayName": {
                    "type": "string",
                    "description": "Display name of the segment."
                  },
                  "connectedGateway": {
                    "type": "string",
                    "description": "Gateway which to connect segment to."
                  },
                  "subnet": {
                    "description": "Subnet which to connect segment to.",
                    "type": "object",
                    "properties": {
                      "dhcpRanges": {
                        "type": "array",
                        "description": "DHCP Range assigned for subnet.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "gatewayAddress": {
                        "type": "string",
                        "description": "Gateway address."
                      }
                    }
                  },
                  "portVif": {
                    "type": "array",
                    "description": "Port Vif which segment is associated with.",
                    "items": {
                      "type": "object",
                      "description": "Ports and any VIF attached to segment.",
                      "properties": {
                        "portName": {
                          "type": "string",
                          "description": "Name of port or VIF attached to segment."
                        }
                      }
                    },
                    "readOnly": true,
                    "x-ms-identifiers": []
                  },
                  "status": {
                    "description": "Segment status.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "SUCCESS",
                      "FAILURE"
                    ],
                    "x-ms-enum": {
                      "name": "SegmentStatusEnum",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "SUCCESS",
                          "value": "SUCCESS",
                          "description": "is success"
                        },
                        {
                          "name": "FAILURE",
                          "value": "FAILURE",
                          "description": "is failure"
                        }
                      ]
                    }
                  },
                  "provisioningState": {
                    "description": "The provisioning state",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Building",
                      "Deleting",
                      "Updating"
                    ],
                    "x-ms-enum": {
                      "name": "WorkloadNetworkSegmentProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Building",
                          "value": "Building",
                          "description": "is building"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "is deleting"
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "is updating"
                        }
                      ]
                    }
                  },
                  "revision": {
                    "type": "integer",
                    "format": "int64",
                    "description": "NSX revision number."
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkloadNetworkVMGroup": {
      "type": "object",
      "description": "NSX VM Group",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string",
              "description": "Display name of the VM group."
            },
            "members": {
              "type": "array",
              "description": "Virtual machine members of this group.",
              "items": {
                "type": "string"
              }
            },
            "status": {
              "description": "VM Group status.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "SUCCESS",
                "FAILURE"
              ],
              "x-ms-enum": {
                "name": "VMGroupStatusEnum",
                "modelAsString": true,
                "values": [
                  {
                    "name": "SUCCESS",
                    "value": "SUCCESS",
                    "description": "is success"
                  },
                  {
                    "name": "FAILURE",
                    "value": "FAILURE",
                    "description": "is failure"
                  }
                ]
              }
            },
            "provisioningState": {
              "description": "The provisioning state",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Building",
                "Deleting",
                "Updating"
              ],
              "x-ms-enum": {
                "name": "WorkloadNetworkVMGroupProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Building",
                    "value": "Building",
                    "description": "is building"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "is deleting"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "is updating"
                  }
                ]
              }
            },
            "revision": {
              "type": "integer",
              "format": "int64",
              "description": "NSX revision number."
            }
          }
        }
      }
    },
    "WorkloadNetworkVMGroupProperties": {
      "type": "object",
      "description": "NSX VM Group Properties",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Display name of the VM group."
        },
        "members": {
          "type": "array",
          "description": "Virtual machine members of this group.",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "description": "VM Group status.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "SUCCESS",
            "FAILURE"
          ],
          "x-ms-enum": {
            "name": "VMGroupStatusEnum",
            "modelAsString": true,
            "values": [
              {
                "name": "SUCCESS",
                "value": "SUCCESS",
                "description": "is success"
              },
              {
                "name": "FAILURE",
                "value": "FAILURE",
                "description": "is failure"
              }
            ]
          }
        },
        "provisioningState": {
          "description": "The provisioning state",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Building",
            "Deleting",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "WorkloadNetworkVMGroupProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Building",
                "value": "Building",
                "description": "is building"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "is deleting"
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "is updating"
              }
            ]
          }
        },
        "revision": {
          "type": "integer",
          "format": "int64",
          "description": "NSX revision number."
        }
      }
    },
    "WorkloadNetworkVMGroupProvisioningState": {
      "type": "string",
      "description": "Workload Network VM Group provisioning state",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Building",
        "Deleting",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "WorkloadNetworkVMGroupProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Building",
            "value": "Building",
            "description": "is building"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "is deleting"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "is updating"
          }
        ]
      },
      "readOnly": true
    },
    "WorkloadNetworkVMGroupsList": {
      "type": "object",
      "description": "The response of a WorkloadNetworkVMGroup list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The WorkloadNetworkVMGroup items on this page",
          "items": {
            "type": "object",
            "description": "NSX VM Group",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "displayName": {
                    "type": "string",
                    "description": "Display name of the VM group."
                  },
                  "members": {
                    "type": "array",
                    "description": "Virtual machine members of this group.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "status": {
                    "description": "VM Group status.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "SUCCESS",
                      "FAILURE"
                    ],
                    "x-ms-enum": {
                      "name": "VMGroupStatusEnum",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "SUCCESS",
                          "value": "SUCCESS",
                          "description": "is success"
                        },
                        {
                          "name": "FAILURE",
                          "value": "FAILURE",
                          "description": "is failure"
                        }
                      ]
                    }
                  },
                  "provisioningState": {
                    "description": "The provisioning state",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Building",
                      "Deleting",
                      "Updating"
                    ],
                    "x-ms-enum": {
                      "name": "WorkloadNetworkVMGroupProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Building",
                          "value": "Building",
                          "description": "is building"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "is deleting"
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "is updating"
                        }
                      ]
                    }
                  },
                  "revision": {
                    "type": "integer",
                    "format": "int64",
                    "description": "NSX revision number."
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkloadNetworkVirtualMachine": {
      "type": "object",
      "description": "NSX Virtual Machine",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "The provisioning state of the resource.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Building",
                "Deleting",
                "Updating"
              ],
              "x-ms-enum": {
                "name": "WorkloadNetworkProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Building",
                    "value": "Building",
                    "description": "is building"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "is deleting"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "is updating"
                  }
                ]
              }
            },
            "displayName": {
              "type": "string",
              "description": "Display name of the VM."
            },
            "vmType": {
              "description": "Virtual machine type.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "REGULAR",
                "EDGE",
                "SERVICE"
              ],
              "x-ms-enum": {
                "name": "VMTypeEnum",
                "modelAsString": true,
                "values": [
                  {
                    "name": "REGULAR",
                    "value": "REGULAR",
                    "description": "is regular"
                  },
                  {
                    "name": "EDGE",
                    "value": "EDGE",
                    "description": "is edge"
                  },
                  {
                    "name": "SERVICE",
                    "value": "SERVICE",
                    "description": "is service"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "WorkloadNetworkVirtualMachineProperties": {
      "type": "object",
      "description": "NSX Virtual Machine Properties",
      "properties": {
        "provisioningState": {
          "description": "The provisioning state of the resource.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Building",
            "Deleting",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "WorkloadNetworkProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Building",
                "value": "Building",
                "description": "is building"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "is deleting"
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "is updating"
              }
            ]
          }
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the VM."
        },
        "vmType": {
          "description": "Virtual machine type.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "REGULAR",
            "EDGE",
            "SERVICE"
          ],
          "x-ms-enum": {
            "name": "VMTypeEnum",
            "modelAsString": true,
            "values": [
              {
                "name": "REGULAR",
                "value": "REGULAR",
                "description": "is regular"
              },
              {
                "name": "EDGE",
                "value": "EDGE",
                "description": "is edge"
              },
              {
                "name": "SERVICE",
                "value": "SERVICE",
                "description": "is service"
              }
            ]
          }
        }
      }
    },
    "WorkloadNetworkVirtualMachinesList": {
      "type": "object",
      "description": "The response of a WorkloadNetworkVirtualMachine list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The WorkloadNetworkVirtualMachine items on this page",
          "items": {
            "type": "object",
            "description": "NSX Virtual Machine",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "The provisioning state of the resource.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Building",
                      "Deleting",
                      "Updating"
                    ],
                    "x-ms-enum": {
                      "name": "WorkloadNetworkProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Building",
                          "value": "Building",
                          "description": "is building"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "is deleting"
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "is updating"
                        }
                      ]
                    }
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Display name of the VM."
                  },
                  "vmType": {
                    "description": "Virtual machine type.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "REGULAR",
                      "EDGE",
                      "SERVICE"
                    ],
                    "x-ms-enum": {
                      "name": "VMTypeEnum",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "REGULAR",
                          "value": "REGULAR",
                          "description": "is regular"
                        },
                        {
                          "name": "EDGE",
                          "value": "EDGE",
                          "description": "is edge"
                        },
                        {
                          "name": "SERVICE",
                          "value": "SERVICE",
                          "description": "is service"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    }
  },
  "parameters": {
    "DhcpIdParameter": {
      "name": "dhcpId",
      "in": "path",
      "description": "The ID of the DHCP configuration",
      "required": true,
      "type": "string",
      "pattern": "^[-\\w\\._]+$",
      "x-ms-parameter-location": "method"
    },
    "DnsServiceIdParameter": {
      "name": "dnsServiceId",
      "in": "path",
      "description": "ID of the DNS service.",
      "required": true,
      "type": "string",
      "pattern": "^[-\\w\\._]+$",
      "x-ms-parameter-location": "method"
    },
    "DnsZoneIdParameter": {
      "name": "dnsZoneId",
      "in": "path",
      "description": "ID of the DNS zone.",
      "required": true,
      "type": "string",
      "pattern": "^[-\\w\\._]+$",
      "x-ms-parameter-location": "method"
    },
    "PortMirroringProfileParameter": {
      "name": "portMirroringId",
      "in": "path",
      "description": "ID of the NSX port mirroring profile.",
      "required": true,
      "type": "string",
      "pattern": "^[-\\w\\._]+$",
      "x-ms-parameter-location": "method"
    },
    "PrivateCloudNameParameter": {
      "name": "privateCloudName",
      "in": "path",
      "description": "Name of the private cloud",
      "required": true,
      "type": "string",
      "pattern": "^[-\\w\\._]+$",
      "x-ms-parameter-location": "method"
    },
    "PublicIPIdParameter": {
      "name": "publicIPId",
      "in": "path",
      "description": "ID of the DNS zone.",
      "required": true,
      "type": "string",
      "pattern": "^[-\\w\\._]+$",
      "x-ms-parameter-location": "method"
    },
    "VmGroupIdParameter": {
      "name": "vmGroupId",
      "in": "path",
      "description": "ID of the VM group.",
      "required": true,
      "type": "string",
      "pattern": "^[-\\w\\._]+$",
      "x-ms-parameter-location": "method"
    }
  }
}