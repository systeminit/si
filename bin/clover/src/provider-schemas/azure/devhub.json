{
  "swagger": "2.0",
  "info": {
    "title": "Azure devhub",
    "version": "2023-08-01",
    "description": "Azure devhub service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/providers/Microsoft.DevHub/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "description": "Returns list of operations.",
        "summary": "Gets a list of operations.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Operation details.",
            "schema": {
              "type": "object",
              "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of operations supported by the resource provider",
                  "items": {
                    "type": "object",
                    "title": "REST API Operation",
                    "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
                        "readOnly": true
                      },
                      "isDataAction": {
                        "type": "boolean",
                        "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
                        "readOnly": true
                      },
                      "display": {
                        "type": "object",
                        "description": "Localized display information for this particular operation.",
                        "properties": {
                          "provider": {
                            "type": "string",
                            "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
                            "readOnly": true
                          },
                          "resource": {
                            "type": "string",
                            "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
                            "readOnly": true
                          },
                          "operation": {
                            "type": "string",
                            "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
                            "readOnly": true
                          },
                          "description": {
                            "type": "string",
                            "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
                            "readOnly": true
                          }
                        }
                      },
                      "origin": {
                        "type": "string",
                        "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
                        "enum": [
                          "user",
                          "system",
                          "user,system"
                        ],
                        "x-ms-enum": {
                          "name": "Origin",
                          "modelAsString": true
                        },
                        "readOnly": true
                      },
                      "actionType": {
                        "type": "string",
                        "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
                        "enum": [
                          "Internal"
                        ],
                        "x-ms-enum": {
                          "name": "ActionType",
                          "modelAsString": true
                        },
                        "readOnly": true
                      }
                    }
                  },
                  "readOnly": true,
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "nextLink": {
                  "type": "string",
                  "description": "URL to get the next set of operation list results (if there are any).",
                  "readOnly": true
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DevHub/locations/{location}/githuboauth/default/getGitHubOAuthInfo": {
      "post": {
        "tags": [
          "GitHubOAuth"
        ],
        "operationId": "GitHubOAuth",
        "summary": "Gets GitHubOAuth info used to authenticate users with the Developer Hub GitHub App.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "required": false,
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "redirectUrl": {
                  "type": "string",
                  "description": "The URL the client will redirect to on successful authentication. If empty, no redirect will occur."
                }
              },
              "description": "GitHubOAuth request object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "description": "URL used to authorize the Developer Hub GitHub App",
              "properties": {
                "authURL": {
                  "type": "string",
                  "description": "URL for authorizing the Developer Hub GitHub App"
                },
                "token": {
                  "type": "string",
                  "description": "OAuth token used to make calls to GitHub"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DevHub/locations/{location}/githuboauth/default": {
      "get": {
        "tags": [
          "GitHubOAuth"
        ],
        "operationId": "GitHubOAuthCallback",
        "summary": "Callback URL to hit once authenticated with GitHub App to have the service store the OAuth token.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "code",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The code response from authenticating the GitHub App.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "state",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The state response from authenticating the GitHub App.",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Properties of a workflow.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string",
                      "description": "user making request"
                    }
                  }
                }
              },
              "description": "Singleton response of GitHubOAuth containing "
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DevHub/locations/{location}/githuboauth": {
      "get": {
        "tags": [
          "GitHubOAuth"
        ],
        "operationId": "ListGitHubOAuth",
        "summary": "Callback URL to hit once authenticated with GitHub App to have the service store the OAuth token.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "Properties of a workflow.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "username": {
                            "type": "string",
                            "description": "user making request"
                          }
                        }
                      }
                    },
                    "description": "Singleton response of GitHubOAuth containing "
                  },
                  "description": "Singleton list response containing one GitHubOAuthResponse response"
                }
              },
              "description": "The response from List GitHubOAuth operation."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DevHub/workflows": {
      "get": {
        "tags": [
          "Workflow"
        ],
        "operationId": "Workflow_List",
        "summary": "Gets a list of workflows associated with the specified subscription.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Describe the result of a successful operation.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "title": "Workflow",
                    "description": "Resource representation of a workflow",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "Properties of a workflow.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "githubWorkflowProfile": {
                            "description": "Profile of a github workflow.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "repositoryOwner": {
                                "type": "string",
                                "title": "The owner of the repository the workflow is associated with.",
                                "description": "Repository Owner"
                              },
                              "repositoryName": {
                                "type": "string",
                                "title": "The name of the repository the workflow is associated with.",
                                "description": "Repository Name"
                              },
                              "branchName": {
                                "type": "string",
                                "title": "The name of the branch the workflow is associated with.",
                                "description": "Repository Branch Name"
                              },
                              "dockerfile": {
                                "type": "string",
                                "title": "Path to Dockerfile within the repository.",
                                "description": "Path to the Dockerfile within the repository."
                              },
                              "dockerBuildContext": {
                                "type": "string",
                                "title": "Path to Dockerfile Build Context within the repository.",
                                "description": "Path to Dockerfile Build Context within the repository."
                              },
                              "deploymentProperties": {
                                "type": "object",
                                "properties": {
                                  "manifestType": {
                                    "type": "string",
                                    "enum": [
                                      "helm",
                                      "kube",
                                      "kustomize"
                                    ],
                                    "x-ms-enum": {
                                      "name": "ManifestType",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "value": "helm",
                                          "description": "Repositories using helm"
                                        },
                                        {
                                          "value": "kube",
                                          "description": "Repositories using kubernetes manifests"
                                        }
                                      ]
                                    },
                                    "description": "Determines the type of manifests within the repository."
                                  },
                                  "kubeManifestLocations": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "helmChartPath": {
                                    "type": "string",
                                    "description": "Helm chart directory path in repository."
                                  },
                                  "helmValues": {
                                    "type": "string",
                                    "description": "Helm Values.yaml file location in repository."
                                  },
                                  "overrides": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "title": "Manifest override values.",
                                    "description": "Manifest override values."
                                  }
                                }
                              },
                              "namespace": {
                                "type": "string",
                                "description": "Kubernetes namespace the application is deployed to.",
                                "title": "The Kubernetes namespace the application is deployed to"
                              },
                              "acr": {
                                "type": "object",
                                "description": "Information on the azure container registry",
                                "properties": {
                                  "acrSubscriptionId": {
                                    "type": "string",
                                    "description": "ACR subscription id"
                                  },
                                  "acrResourceGroup": {
                                    "type": "string",
                                    "description": "ACR resource group"
                                  },
                                  "acrRegistryName": {
                                    "type": "string",
                                    "description": "ACR registry"
                                  },
                                  "acrRepositoryName": {
                                    "type": "string",
                                    "description": "ACR repository"
                                  }
                                }
                              },
                              "oidcCredentials": {
                                "type": "object",
                                "description": "The fields needed for OIDC with GitHub.",
                                "properties": {
                                  "azureClientId": {
                                    "type": "string",
                                    "description": "Azure Application Client ID"
                                  },
                                  "azureTenantId": {
                                    "type": "string",
                                    "description": "Azure Directory (tenant) ID"
                                  }
                                }
                              },
                              "aksResourceId": {
                                "type": "string",
                                "description": "The Azure Kubernetes Cluster Resource the application will be deployed to.",
                                "title": "The Azure Kubernetes Managed Cluster resource."
                              },
                              "prURL": {
                                "type": "string",
                                "description": "The URL to the Pull Request submitted against the users repository.",
                                "readOnly": true
                              },
                              "pullNumber": {
                                "type": "integer",
                                "format": "int32",
                                "readOnly": true,
                                "description": "The number associated with the submitted pull request."
                              },
                              "prStatus": {
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "unknown",
                                  "submitted",
                                  "merged",
                                  "removed"
                                ],
                                "x-ms-enum": {
                                  "name": "PullRequestStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "unknown",
                                      "description": "Pull Request state unknown."
                                    },
                                    {
                                      "value": "submitted",
                                      "description": "Pull Request submitted to repository."
                                    },
                                    {
                                      "value": "merged",
                                      "description": "Pull Request merged into repository."
                                    },
                                    {
                                      "value": "removed",
                                      "description": "Workflow no longer found within repository."
                                    }
                                  ]
                                },
                                "description": "The status of the Pull Request submitted against the users repository."
                              },
                              "lastWorkflowRun": {
                                "type": "object",
                                "properties": {
                                  "succeeded": {
                                    "type": "boolean",
                                    "readOnly": true,
                                    "description": "Describes if the workflow run succeeded."
                                  },
                                  "workflowRunURL": {
                                    "type": "string",
                                    "readOnly": true,
                                    "description": "URL to the run of the workflow."
                                  },
                                  "lastRunAt": {
                                    "type": "string",
                                    "readOnly": true,
                                    "format": "date-time",
                                    "description": "The timestamp of the last workflow run."
                                  },
                                  "workflowRunStatus": {
                                    "type": "string",
                                    "enum": [
                                      "queued",
                                      "inprogress",
                                      "completed"
                                    ],
                                    "x-ms-enum": {
                                      "name": "WorkflowRunStatus",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "value": "queued",
                                          "description": "Workflow run is queued"
                                        },
                                        {
                                          "value": "inprogress",
                                          "description": "Workflow run is inprogress"
                                        },
                                        {
                                          "value": "completed",
                                          "description": "Workflow run is completed"
                                        }
                                      ]
                                    },
                                    "description": "Describes the status of the workflow run"
                                  }
                                }
                              },
                              "authStatus": {
                                "type": "string",
                                "enum": [
                                  "Authorized",
                                  "NotFound",
                                  "Error"
                                ],
                                "readOnly": true,
                                "x-ms-enum": {
                                  "name": "AuthorizationStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Authorized",
                                      "description": "Requests authorized successfully"
                                    },
                                    {
                                      "value": "NotFound",
                                      "description": "Requests returned NotFound response"
                                    },
                                    {
                                      "value": "Error",
                                      "description": "Requests returned other error response"
                                    }
                                  ]
                                },
                                "description": "Determines the authorization status of requests."
                              }
                            }
                          },
                          "artifactGenerationProperties": {
                            "description": "Properties for generating artifacts like dockerfile and manifests.",
                            "x-ms-client-flatten": true,
                            "title": "Artifact Generation Properties",
                            "type": "object",
                            "properties": {
                              "generationLanguage": {
                                "type": "string",
                                "enum": [
                                  "clojure",
                                  "csharp",
                                  "erlang",
                                  "go",
                                  "gomodule",
                                  "gradle",
                                  "java",
                                  "javascript",
                                  "php",
                                  "python",
                                  "ruby",
                                  "rust",
                                  "swift"
                                ],
                                "x-ms-enum": {
                                  "name": "GenerationLanguage",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "clojure",
                                      "description": "clojure language"
                                    },
                                    {
                                      "value": "csharp",
                                      "description": "csharp language"
                                    },
                                    {
                                      "value": "erlang",
                                      "description": "erlang language"
                                    },
                                    {
                                      "value": "go",
                                      "description": "go language"
                                    },
                                    {
                                      "value": "gomodule",
                                      "description": "gomodule language"
                                    },
                                    {
                                      "value": "gradle",
                                      "description": "gradle language"
                                    },
                                    {
                                      "value": "java",
                                      "description": "java language"
                                    },
                                    {
                                      "value": "javascript",
                                      "description": "javascript language"
                                    },
                                    {
                                      "value": "php",
                                      "description": "php language"
                                    },
                                    {
                                      "value": "python",
                                      "description": "python language"
                                    },
                                    {
                                      "value": "ruby",
                                      "description": "ruby language"
                                    },
                                    {
                                      "value": "rust",
                                      "description": "rust language"
                                    },
                                    {
                                      "value": "swift",
                                      "description": "swift language"
                                    }
                                  ]
                                },
                                "description": "The programming language used."
                              },
                              "languageVersion": {
                                "type": "string",
                                "description": "The version of the language image used for execution in the generated dockerfile."
                              },
                              "builderVersion": {
                                "type": "string",
                                "description": "The version of the language image used for building the code in the generated dockerfile."
                              },
                              "port": {
                                "type": "string",
                                "description": "The port the application is exposed on."
                              },
                              "appName": {
                                "type": "string",
                                "description": "The name of the app."
                              },
                              "dockerfileOutputDirectory": {
                                "type": "string",
                                "description": "The directory to output the generated Dockerfile to."
                              },
                              "manifestOutputDirectory": {
                                "type": "string",
                                "description": "The directory to output the generated manifests to."
                              },
                              "dockerfileGenerationMode": {
                                "type": "string",
                                "enum": [
                                  "enabled",
                                  "disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "DockerfileGenerationMode",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "enabled",
                                      "description": "Dockerfiles will be generated"
                                    },
                                    {
                                      "value": "disabled",
                                      "description": "Dockerfiles will not be generated"
                                    }
                                  ]
                                },
                                "description": "The mode of generation to be used for generating Dockerfiles."
                              },
                              "manifestGenerationMode": {
                                "type": "string",
                                "enum": [
                                  "enabled",
                                  "disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "ManifestGenerationMode",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "enabled",
                                      "description": "Manifests will be generated"
                                    },
                                    {
                                      "value": "disabled",
                                      "description": "Manifests will not be generated"
                                    }
                                  ]
                                },
                                "description": "The mode of generation to be used for generating Manifest."
                              },
                              "manifestType": {
                                "type": "string",
                                "enum": [
                                  "helm",
                                  "kube"
                                ],
                                "x-ms-enum": {
                                  "name": "GenerationManifestType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "helm",
                                      "description": "Helm manifests"
                                    },
                                    {
                                      "value": "kube",
                                      "description": "Kubernetes manifests"
                                    }
                                  ]
                                },
                                "description": "Determines the type of manifests to be generated."
                              },
                              "imageName": {
                                "type": "string",
                                "description": "The name of the image to be generated."
                              },
                              "namespace": {
                                "type": "string",
                                "description": "The namespace to deploy the application to."
                              },
                              "imageTag": {
                                "type": "string",
                                "description": "The tag to apply to the generated image."
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "The list of workflows."
                },
                "nextLink": {
                  "type": "string",
                  "description": "The URL to the next set of workflow results.",
                  "readOnly": true
                }
              },
              "description": "The response from List Workflows operation."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevHub/workflows": {
      "get": {
        "tags": [
          "Workflow"
        ],
        "operationId": "Workflow_ListByResourceGroup",
        "summary": "Gets a list of workflows within a resource group.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "managedClusterResource",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The ManagedCluster resource associated with the workflows.",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Describe the result of a successful operation.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "title": "Workflow",
                    "description": "Resource representation of a workflow",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "Properties of a workflow.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "githubWorkflowProfile": {
                            "description": "Profile of a github workflow.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "repositoryOwner": {
                                "type": "string",
                                "title": "The owner of the repository the workflow is associated with.",
                                "description": "Repository Owner"
                              },
                              "repositoryName": {
                                "type": "string",
                                "title": "The name of the repository the workflow is associated with.",
                                "description": "Repository Name"
                              },
                              "branchName": {
                                "type": "string",
                                "title": "The name of the branch the workflow is associated with.",
                                "description": "Repository Branch Name"
                              },
                              "dockerfile": {
                                "type": "string",
                                "title": "Path to Dockerfile within the repository.",
                                "description": "Path to the Dockerfile within the repository."
                              },
                              "dockerBuildContext": {
                                "type": "string",
                                "title": "Path to Dockerfile Build Context within the repository.",
                                "description": "Path to Dockerfile Build Context within the repository."
                              },
                              "deploymentProperties": {
                                "type": "object",
                                "properties": {
                                  "manifestType": {
                                    "type": "string",
                                    "enum": [
                                      "helm",
                                      "kube",
                                      "kustomize"
                                    ],
                                    "x-ms-enum": {
                                      "name": "ManifestType",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "value": "helm",
                                          "description": "Repositories using helm"
                                        },
                                        {
                                          "value": "kube",
                                          "description": "Repositories using kubernetes manifests"
                                        }
                                      ]
                                    },
                                    "description": "Determines the type of manifests within the repository."
                                  },
                                  "kubeManifestLocations": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "helmChartPath": {
                                    "type": "string",
                                    "description": "Helm chart directory path in repository."
                                  },
                                  "helmValues": {
                                    "type": "string",
                                    "description": "Helm Values.yaml file location in repository."
                                  },
                                  "overrides": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "title": "Manifest override values.",
                                    "description": "Manifest override values."
                                  }
                                }
                              },
                              "namespace": {
                                "type": "string",
                                "description": "Kubernetes namespace the application is deployed to.",
                                "title": "The Kubernetes namespace the application is deployed to"
                              },
                              "acr": {
                                "type": "object",
                                "description": "Information on the azure container registry",
                                "properties": {
                                  "acrSubscriptionId": {
                                    "type": "string",
                                    "description": "ACR subscription id"
                                  },
                                  "acrResourceGroup": {
                                    "type": "string",
                                    "description": "ACR resource group"
                                  },
                                  "acrRegistryName": {
                                    "type": "string",
                                    "description": "ACR registry"
                                  },
                                  "acrRepositoryName": {
                                    "type": "string",
                                    "description": "ACR repository"
                                  }
                                }
                              },
                              "oidcCredentials": {
                                "type": "object",
                                "description": "The fields needed for OIDC with GitHub.",
                                "properties": {
                                  "azureClientId": {
                                    "type": "string",
                                    "description": "Azure Application Client ID"
                                  },
                                  "azureTenantId": {
                                    "type": "string",
                                    "description": "Azure Directory (tenant) ID"
                                  }
                                }
                              },
                              "aksResourceId": {
                                "type": "string",
                                "description": "The Azure Kubernetes Cluster Resource the application will be deployed to.",
                                "title": "The Azure Kubernetes Managed Cluster resource."
                              },
                              "prURL": {
                                "type": "string",
                                "description": "The URL to the Pull Request submitted against the users repository.",
                                "readOnly": true
                              },
                              "pullNumber": {
                                "type": "integer",
                                "format": "int32",
                                "readOnly": true,
                                "description": "The number associated with the submitted pull request."
                              },
                              "prStatus": {
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "unknown",
                                  "submitted",
                                  "merged",
                                  "removed"
                                ],
                                "x-ms-enum": {
                                  "name": "PullRequestStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "unknown",
                                      "description": "Pull Request state unknown."
                                    },
                                    {
                                      "value": "submitted",
                                      "description": "Pull Request submitted to repository."
                                    },
                                    {
                                      "value": "merged",
                                      "description": "Pull Request merged into repository."
                                    },
                                    {
                                      "value": "removed",
                                      "description": "Workflow no longer found within repository."
                                    }
                                  ]
                                },
                                "description": "The status of the Pull Request submitted against the users repository."
                              },
                              "lastWorkflowRun": {
                                "type": "object",
                                "properties": {
                                  "succeeded": {
                                    "type": "boolean",
                                    "readOnly": true,
                                    "description": "Describes if the workflow run succeeded."
                                  },
                                  "workflowRunURL": {
                                    "type": "string",
                                    "readOnly": true,
                                    "description": "URL to the run of the workflow."
                                  },
                                  "lastRunAt": {
                                    "type": "string",
                                    "readOnly": true,
                                    "format": "date-time",
                                    "description": "The timestamp of the last workflow run."
                                  },
                                  "workflowRunStatus": {
                                    "type": "string",
                                    "enum": [
                                      "queued",
                                      "inprogress",
                                      "completed"
                                    ],
                                    "x-ms-enum": {
                                      "name": "WorkflowRunStatus",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "value": "queued",
                                          "description": "Workflow run is queued"
                                        },
                                        {
                                          "value": "inprogress",
                                          "description": "Workflow run is inprogress"
                                        },
                                        {
                                          "value": "completed",
                                          "description": "Workflow run is completed"
                                        }
                                      ]
                                    },
                                    "description": "Describes the status of the workflow run"
                                  }
                                }
                              },
                              "authStatus": {
                                "type": "string",
                                "enum": [
                                  "Authorized",
                                  "NotFound",
                                  "Error"
                                ],
                                "readOnly": true,
                                "x-ms-enum": {
                                  "name": "AuthorizationStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Authorized",
                                      "description": "Requests authorized successfully"
                                    },
                                    {
                                      "value": "NotFound",
                                      "description": "Requests returned NotFound response"
                                    },
                                    {
                                      "value": "Error",
                                      "description": "Requests returned other error response"
                                    }
                                  ]
                                },
                                "description": "Determines the authorization status of requests."
                              }
                            }
                          },
                          "artifactGenerationProperties": {
                            "description": "Properties for generating artifacts like dockerfile and manifests.",
                            "x-ms-client-flatten": true,
                            "title": "Artifact Generation Properties",
                            "type": "object",
                            "properties": {
                              "generationLanguage": {
                                "type": "string",
                                "enum": [
                                  "clojure",
                                  "csharp",
                                  "erlang",
                                  "go",
                                  "gomodule",
                                  "gradle",
                                  "java",
                                  "javascript",
                                  "php",
                                  "python",
                                  "ruby",
                                  "rust",
                                  "swift"
                                ],
                                "x-ms-enum": {
                                  "name": "GenerationLanguage",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "clojure",
                                      "description": "clojure language"
                                    },
                                    {
                                      "value": "csharp",
                                      "description": "csharp language"
                                    },
                                    {
                                      "value": "erlang",
                                      "description": "erlang language"
                                    },
                                    {
                                      "value": "go",
                                      "description": "go language"
                                    },
                                    {
                                      "value": "gomodule",
                                      "description": "gomodule language"
                                    },
                                    {
                                      "value": "gradle",
                                      "description": "gradle language"
                                    },
                                    {
                                      "value": "java",
                                      "description": "java language"
                                    },
                                    {
                                      "value": "javascript",
                                      "description": "javascript language"
                                    },
                                    {
                                      "value": "php",
                                      "description": "php language"
                                    },
                                    {
                                      "value": "python",
                                      "description": "python language"
                                    },
                                    {
                                      "value": "ruby",
                                      "description": "ruby language"
                                    },
                                    {
                                      "value": "rust",
                                      "description": "rust language"
                                    },
                                    {
                                      "value": "swift",
                                      "description": "swift language"
                                    }
                                  ]
                                },
                                "description": "The programming language used."
                              },
                              "languageVersion": {
                                "type": "string",
                                "description": "The version of the language image used for execution in the generated dockerfile."
                              },
                              "builderVersion": {
                                "type": "string",
                                "description": "The version of the language image used for building the code in the generated dockerfile."
                              },
                              "port": {
                                "type": "string",
                                "description": "The port the application is exposed on."
                              },
                              "appName": {
                                "type": "string",
                                "description": "The name of the app."
                              },
                              "dockerfileOutputDirectory": {
                                "type": "string",
                                "description": "The directory to output the generated Dockerfile to."
                              },
                              "manifestOutputDirectory": {
                                "type": "string",
                                "description": "The directory to output the generated manifests to."
                              },
                              "dockerfileGenerationMode": {
                                "type": "string",
                                "enum": [
                                  "enabled",
                                  "disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "DockerfileGenerationMode",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "enabled",
                                      "description": "Dockerfiles will be generated"
                                    },
                                    {
                                      "value": "disabled",
                                      "description": "Dockerfiles will not be generated"
                                    }
                                  ]
                                },
                                "description": "The mode of generation to be used for generating Dockerfiles."
                              },
                              "manifestGenerationMode": {
                                "type": "string",
                                "enum": [
                                  "enabled",
                                  "disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "ManifestGenerationMode",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "enabled",
                                      "description": "Manifests will be generated"
                                    },
                                    {
                                      "value": "disabled",
                                      "description": "Manifests will not be generated"
                                    }
                                  ]
                                },
                                "description": "The mode of generation to be used for generating Manifest."
                              },
                              "manifestType": {
                                "type": "string",
                                "enum": [
                                  "helm",
                                  "kube"
                                ],
                                "x-ms-enum": {
                                  "name": "GenerationManifestType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "helm",
                                      "description": "Helm manifests"
                                    },
                                    {
                                      "value": "kube",
                                      "description": "Kubernetes manifests"
                                    }
                                  ]
                                },
                                "description": "Determines the type of manifests to be generated."
                              },
                              "imageName": {
                                "type": "string",
                                "description": "The name of the image to be generated."
                              },
                              "namespace": {
                                "type": "string",
                                "description": "The namespace to deploy the application to."
                              },
                              "imageTag": {
                                "type": "string",
                                "description": "The tag to apply to the generated image."
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "The list of workflows."
                },
                "nextLink": {
                  "type": "string",
                  "description": "The URL to the next set of workflow results.",
                  "readOnly": true
                }
              },
              "description": "The response from List Workflows operation."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevHub/workflows/{workflowName}": {
      "get": {
        "tags": [
          "Workflow"
        ],
        "operationId": "Workflow_Get",
        "summary": "Gets a workflow.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workflowName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$",
            "description": "The name of the workflow resource.",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "title": "Workflow",
              "description": "Resource representation of a workflow",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Properties of a workflow.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "githubWorkflowProfile": {
                      "description": "Profile of a github workflow.",
                      "x-ms-client-flatten": true,
                      "type": "object",
                      "properties": {
                        "repositoryOwner": {
                          "type": "string",
                          "title": "The owner of the repository the workflow is associated with.",
                          "description": "Repository Owner"
                        },
                        "repositoryName": {
                          "type": "string",
                          "title": "The name of the repository the workflow is associated with.",
                          "description": "Repository Name"
                        },
                        "branchName": {
                          "type": "string",
                          "title": "The name of the branch the workflow is associated with.",
                          "description": "Repository Branch Name"
                        },
                        "dockerfile": {
                          "type": "string",
                          "title": "Path to Dockerfile within the repository.",
                          "description": "Path to the Dockerfile within the repository."
                        },
                        "dockerBuildContext": {
                          "type": "string",
                          "title": "Path to Dockerfile Build Context within the repository.",
                          "description": "Path to Dockerfile Build Context within the repository."
                        },
                        "deploymentProperties": {
                          "type": "object",
                          "properties": {
                            "manifestType": {
                              "type": "string",
                              "enum": [
                                "helm",
                                "kube",
                                "kustomize"
                              ],
                              "x-ms-enum": {
                                "name": "ManifestType",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "value": "helm",
                                    "description": "Repositories using helm"
                                  },
                                  {
                                    "value": "kube",
                                    "description": "Repositories using kubernetes manifests"
                                  }
                                ]
                              },
                              "description": "Determines the type of manifests within the repository."
                            },
                            "kubeManifestLocations": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "helmChartPath": {
                              "type": "string",
                              "description": "Helm chart directory path in repository."
                            },
                            "helmValues": {
                              "type": "string",
                              "description": "Helm Values.yaml file location in repository."
                            },
                            "overrides": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              },
                              "title": "Manifest override values.",
                              "description": "Manifest override values."
                            }
                          }
                        },
                        "namespace": {
                          "type": "string",
                          "description": "Kubernetes namespace the application is deployed to.",
                          "title": "The Kubernetes namespace the application is deployed to"
                        },
                        "acr": {
                          "type": "object",
                          "description": "Information on the azure container registry",
                          "properties": {
                            "acrSubscriptionId": {
                              "type": "string",
                              "description": "ACR subscription id"
                            },
                            "acrResourceGroup": {
                              "type": "string",
                              "description": "ACR resource group"
                            },
                            "acrRegistryName": {
                              "type": "string",
                              "description": "ACR registry"
                            },
                            "acrRepositoryName": {
                              "type": "string",
                              "description": "ACR repository"
                            }
                          }
                        },
                        "oidcCredentials": {
                          "type": "object",
                          "description": "The fields needed for OIDC with GitHub.",
                          "properties": {
                            "azureClientId": {
                              "type": "string",
                              "description": "Azure Application Client ID"
                            },
                            "azureTenantId": {
                              "type": "string",
                              "description": "Azure Directory (tenant) ID"
                            }
                          }
                        },
                        "aksResourceId": {
                          "type": "string",
                          "description": "The Azure Kubernetes Cluster Resource the application will be deployed to.",
                          "title": "The Azure Kubernetes Managed Cluster resource."
                        },
                        "prURL": {
                          "type": "string",
                          "description": "The URL to the Pull Request submitted against the users repository.",
                          "readOnly": true
                        },
                        "pullNumber": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": true,
                          "description": "The number associated with the submitted pull request."
                        },
                        "prStatus": {
                          "type": "string",
                          "readOnly": true,
                          "enum": [
                            "unknown",
                            "submitted",
                            "merged",
                            "removed"
                          ],
                          "x-ms-enum": {
                            "name": "PullRequestStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "unknown",
                                "description": "Pull Request state unknown."
                              },
                              {
                                "value": "submitted",
                                "description": "Pull Request submitted to repository."
                              },
                              {
                                "value": "merged",
                                "description": "Pull Request merged into repository."
                              },
                              {
                                "value": "removed",
                                "description": "Workflow no longer found within repository."
                              }
                            ]
                          },
                          "description": "The status of the Pull Request submitted against the users repository."
                        },
                        "lastWorkflowRun": {
                          "type": "object",
                          "properties": {
                            "succeeded": {
                              "type": "boolean",
                              "readOnly": true,
                              "description": "Describes if the workflow run succeeded."
                            },
                            "workflowRunURL": {
                              "type": "string",
                              "readOnly": true,
                              "description": "URL to the run of the workflow."
                            },
                            "lastRunAt": {
                              "type": "string",
                              "readOnly": true,
                              "format": "date-time",
                              "description": "The timestamp of the last workflow run."
                            },
                            "workflowRunStatus": {
                              "type": "string",
                              "enum": [
                                "queued",
                                "inprogress",
                                "completed"
                              ],
                              "x-ms-enum": {
                                "name": "WorkflowRunStatus",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "value": "queued",
                                    "description": "Workflow run is queued"
                                  },
                                  {
                                    "value": "inprogress",
                                    "description": "Workflow run is inprogress"
                                  },
                                  {
                                    "value": "completed",
                                    "description": "Workflow run is completed"
                                  }
                                ]
                              },
                              "description": "Describes the status of the workflow run"
                            }
                          }
                        },
                        "authStatus": {
                          "type": "string",
                          "enum": [
                            "Authorized",
                            "NotFound",
                            "Error"
                          ],
                          "readOnly": true,
                          "x-ms-enum": {
                            "name": "AuthorizationStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Authorized",
                                "description": "Requests authorized successfully"
                              },
                              {
                                "value": "NotFound",
                                "description": "Requests returned NotFound response"
                              },
                              {
                                "value": "Error",
                                "description": "Requests returned other error response"
                              }
                            ]
                          },
                          "description": "Determines the authorization status of requests."
                        }
                      }
                    },
                    "artifactGenerationProperties": {
                      "description": "Properties for generating artifacts like dockerfile and manifests.",
                      "x-ms-client-flatten": true,
                      "title": "Artifact Generation Properties",
                      "type": "object",
                      "properties": {
                        "generationLanguage": {
                          "type": "string",
                          "enum": [
                            "clojure",
                            "csharp",
                            "erlang",
                            "go",
                            "gomodule",
                            "gradle",
                            "java",
                            "javascript",
                            "php",
                            "python",
                            "ruby",
                            "rust",
                            "swift"
                          ],
                          "x-ms-enum": {
                            "name": "GenerationLanguage",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "clojure",
                                "description": "clojure language"
                              },
                              {
                                "value": "csharp",
                                "description": "csharp language"
                              },
                              {
                                "value": "erlang",
                                "description": "erlang language"
                              },
                              {
                                "value": "go",
                                "description": "go language"
                              },
                              {
                                "value": "gomodule",
                                "description": "gomodule language"
                              },
                              {
                                "value": "gradle",
                                "description": "gradle language"
                              },
                              {
                                "value": "java",
                                "description": "java language"
                              },
                              {
                                "value": "javascript",
                                "description": "javascript language"
                              },
                              {
                                "value": "php",
                                "description": "php language"
                              },
                              {
                                "value": "python",
                                "description": "python language"
                              },
                              {
                                "value": "ruby",
                                "description": "ruby language"
                              },
                              {
                                "value": "rust",
                                "description": "rust language"
                              },
                              {
                                "value": "swift",
                                "description": "swift language"
                              }
                            ]
                          },
                          "description": "The programming language used."
                        },
                        "languageVersion": {
                          "type": "string",
                          "description": "The version of the language image used for execution in the generated dockerfile."
                        },
                        "builderVersion": {
                          "type": "string",
                          "description": "The version of the language image used for building the code in the generated dockerfile."
                        },
                        "port": {
                          "type": "string",
                          "description": "The port the application is exposed on."
                        },
                        "appName": {
                          "type": "string",
                          "description": "The name of the app."
                        },
                        "dockerfileOutputDirectory": {
                          "type": "string",
                          "description": "The directory to output the generated Dockerfile to."
                        },
                        "manifestOutputDirectory": {
                          "type": "string",
                          "description": "The directory to output the generated manifests to."
                        },
                        "dockerfileGenerationMode": {
                          "type": "string",
                          "enum": [
                            "enabled",
                            "disabled"
                          ],
                          "x-ms-enum": {
                            "name": "DockerfileGenerationMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "enabled",
                                "description": "Dockerfiles will be generated"
                              },
                              {
                                "value": "disabled",
                                "description": "Dockerfiles will not be generated"
                              }
                            ]
                          },
                          "description": "The mode of generation to be used for generating Dockerfiles."
                        },
                        "manifestGenerationMode": {
                          "type": "string",
                          "enum": [
                            "enabled",
                            "disabled"
                          ],
                          "x-ms-enum": {
                            "name": "ManifestGenerationMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "enabled",
                                "description": "Manifests will be generated"
                              },
                              {
                                "value": "disabled",
                                "description": "Manifests will not be generated"
                              }
                            ]
                          },
                          "description": "The mode of generation to be used for generating Manifest."
                        },
                        "manifestType": {
                          "type": "string",
                          "enum": [
                            "helm",
                            "kube"
                          ],
                          "x-ms-enum": {
                            "name": "GenerationManifestType",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "helm",
                                "description": "Helm manifests"
                              },
                              {
                                "value": "kube",
                                "description": "Kubernetes manifests"
                              }
                            ]
                          },
                          "description": "Determines the type of manifests to be generated."
                        },
                        "imageName": {
                          "type": "string",
                          "description": "The name of the image to be generated."
                        },
                        "namespace": {
                          "type": "string",
                          "description": "The namespace to deploy the application to."
                        },
                        "imageTag": {
                          "type": "string",
                          "description": "The tag to apply to the generated image."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Workflow"
        ],
        "operationId": "Workflow_CreateOrUpdate",
        "summary": "Creates or updates a workflow",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workflowName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$",
            "description": "The name of the workflow resource.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "title": "Workflow",
              "description": "Resource representation of a workflow",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Properties of a workflow.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "githubWorkflowProfile": {
                      "description": "Profile of a github workflow.",
                      "x-ms-client-flatten": true,
                      "type": "object",
                      "properties": {
                        "repositoryOwner": {
                          "type": "string",
                          "title": "The owner of the repository the workflow is associated with.",
                          "description": "Repository Owner"
                        },
                        "repositoryName": {
                          "type": "string",
                          "title": "The name of the repository the workflow is associated with.",
                          "description": "Repository Name"
                        },
                        "branchName": {
                          "type": "string",
                          "title": "The name of the branch the workflow is associated with.",
                          "description": "Repository Branch Name"
                        },
                        "dockerfile": {
                          "type": "string",
                          "title": "Path to Dockerfile within the repository.",
                          "description": "Path to the Dockerfile within the repository."
                        },
                        "dockerBuildContext": {
                          "type": "string",
                          "title": "Path to Dockerfile Build Context within the repository.",
                          "description": "Path to Dockerfile Build Context within the repository."
                        },
                        "deploymentProperties": {
                          "type": "object",
                          "properties": {
                            "manifestType": {
                              "type": "string",
                              "enum": [
                                "helm",
                                "kube",
                                "kustomize"
                              ],
                              "x-ms-enum": {
                                "name": "ManifestType",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "value": "helm",
                                    "description": "Repositories using helm"
                                  },
                                  {
                                    "value": "kube",
                                    "description": "Repositories using kubernetes manifests"
                                  }
                                ]
                              },
                              "description": "Determines the type of manifests within the repository."
                            },
                            "kubeManifestLocations": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "helmChartPath": {
                              "type": "string",
                              "description": "Helm chart directory path in repository."
                            },
                            "helmValues": {
                              "type": "string",
                              "description": "Helm Values.yaml file location in repository."
                            },
                            "overrides": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              },
                              "title": "Manifest override values.",
                              "description": "Manifest override values."
                            }
                          }
                        },
                        "namespace": {
                          "type": "string",
                          "description": "Kubernetes namespace the application is deployed to.",
                          "title": "The Kubernetes namespace the application is deployed to"
                        },
                        "acr": {
                          "type": "object",
                          "description": "Information on the azure container registry",
                          "properties": {
                            "acrSubscriptionId": {
                              "type": "string",
                              "description": "ACR subscription id"
                            },
                            "acrResourceGroup": {
                              "type": "string",
                              "description": "ACR resource group"
                            },
                            "acrRegistryName": {
                              "type": "string",
                              "description": "ACR registry"
                            },
                            "acrRepositoryName": {
                              "type": "string",
                              "description": "ACR repository"
                            }
                          }
                        },
                        "oidcCredentials": {
                          "type": "object",
                          "description": "The fields needed for OIDC with GitHub.",
                          "properties": {
                            "azureClientId": {
                              "type": "string",
                              "description": "Azure Application Client ID"
                            },
                            "azureTenantId": {
                              "type": "string",
                              "description": "Azure Directory (tenant) ID"
                            }
                          }
                        },
                        "aksResourceId": {
                          "type": "string",
                          "description": "The Azure Kubernetes Cluster Resource the application will be deployed to.",
                          "title": "The Azure Kubernetes Managed Cluster resource."
                        },
                        "prURL": {
                          "type": "string",
                          "description": "The URL to the Pull Request submitted against the users repository.",
                          "readOnly": true
                        },
                        "pullNumber": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": true,
                          "description": "The number associated with the submitted pull request."
                        },
                        "prStatus": {
                          "type": "string",
                          "readOnly": true,
                          "enum": [
                            "unknown",
                            "submitted",
                            "merged",
                            "removed"
                          ],
                          "x-ms-enum": {
                            "name": "PullRequestStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "unknown",
                                "description": "Pull Request state unknown."
                              },
                              {
                                "value": "submitted",
                                "description": "Pull Request submitted to repository."
                              },
                              {
                                "value": "merged",
                                "description": "Pull Request merged into repository."
                              },
                              {
                                "value": "removed",
                                "description": "Workflow no longer found within repository."
                              }
                            ]
                          },
                          "description": "The status of the Pull Request submitted against the users repository."
                        },
                        "lastWorkflowRun": {
                          "type": "object",
                          "properties": {
                            "succeeded": {
                              "type": "boolean",
                              "readOnly": true,
                              "description": "Describes if the workflow run succeeded."
                            },
                            "workflowRunURL": {
                              "type": "string",
                              "readOnly": true,
                              "description": "URL to the run of the workflow."
                            },
                            "lastRunAt": {
                              "type": "string",
                              "readOnly": true,
                              "format": "date-time",
                              "description": "The timestamp of the last workflow run."
                            },
                            "workflowRunStatus": {
                              "type": "string",
                              "enum": [
                                "queued",
                                "inprogress",
                                "completed"
                              ],
                              "x-ms-enum": {
                                "name": "WorkflowRunStatus",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "value": "queued",
                                    "description": "Workflow run is queued"
                                  },
                                  {
                                    "value": "inprogress",
                                    "description": "Workflow run is inprogress"
                                  },
                                  {
                                    "value": "completed",
                                    "description": "Workflow run is completed"
                                  }
                                ]
                              },
                              "description": "Describes the status of the workflow run"
                            }
                          }
                        },
                        "authStatus": {
                          "type": "string",
                          "enum": [
                            "Authorized",
                            "NotFound",
                            "Error"
                          ],
                          "readOnly": true,
                          "x-ms-enum": {
                            "name": "AuthorizationStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Authorized",
                                "description": "Requests authorized successfully"
                              },
                              {
                                "value": "NotFound",
                                "description": "Requests returned NotFound response"
                              },
                              {
                                "value": "Error",
                                "description": "Requests returned other error response"
                              }
                            ]
                          },
                          "description": "Determines the authorization status of requests."
                        }
                      }
                    },
                    "artifactGenerationProperties": {
                      "description": "Properties for generating artifacts like dockerfile and manifests.",
                      "x-ms-client-flatten": true,
                      "title": "Artifact Generation Properties",
                      "type": "object",
                      "properties": {
                        "generationLanguage": {
                          "type": "string",
                          "enum": [
                            "clojure",
                            "csharp",
                            "erlang",
                            "go",
                            "gomodule",
                            "gradle",
                            "java",
                            "javascript",
                            "php",
                            "python",
                            "ruby",
                            "rust",
                            "swift"
                          ],
                          "x-ms-enum": {
                            "name": "GenerationLanguage",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "clojure",
                                "description": "clojure language"
                              },
                              {
                                "value": "csharp",
                                "description": "csharp language"
                              },
                              {
                                "value": "erlang",
                                "description": "erlang language"
                              },
                              {
                                "value": "go",
                                "description": "go language"
                              },
                              {
                                "value": "gomodule",
                                "description": "gomodule language"
                              },
                              {
                                "value": "gradle",
                                "description": "gradle language"
                              },
                              {
                                "value": "java",
                                "description": "java language"
                              },
                              {
                                "value": "javascript",
                                "description": "javascript language"
                              },
                              {
                                "value": "php",
                                "description": "php language"
                              },
                              {
                                "value": "python",
                                "description": "python language"
                              },
                              {
                                "value": "ruby",
                                "description": "ruby language"
                              },
                              {
                                "value": "rust",
                                "description": "rust language"
                              },
                              {
                                "value": "swift",
                                "description": "swift language"
                              }
                            ]
                          },
                          "description": "The programming language used."
                        },
                        "languageVersion": {
                          "type": "string",
                          "description": "The version of the language image used for execution in the generated dockerfile."
                        },
                        "builderVersion": {
                          "type": "string",
                          "description": "The version of the language image used for building the code in the generated dockerfile."
                        },
                        "port": {
                          "type": "string",
                          "description": "The port the application is exposed on."
                        },
                        "appName": {
                          "type": "string",
                          "description": "The name of the app."
                        },
                        "dockerfileOutputDirectory": {
                          "type": "string",
                          "description": "The directory to output the generated Dockerfile to."
                        },
                        "manifestOutputDirectory": {
                          "type": "string",
                          "description": "The directory to output the generated manifests to."
                        },
                        "dockerfileGenerationMode": {
                          "type": "string",
                          "enum": [
                            "enabled",
                            "disabled"
                          ],
                          "x-ms-enum": {
                            "name": "DockerfileGenerationMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "enabled",
                                "description": "Dockerfiles will be generated"
                              },
                              {
                                "value": "disabled",
                                "description": "Dockerfiles will not be generated"
                              }
                            ]
                          },
                          "description": "The mode of generation to be used for generating Dockerfiles."
                        },
                        "manifestGenerationMode": {
                          "type": "string",
                          "enum": [
                            "enabled",
                            "disabled"
                          ],
                          "x-ms-enum": {
                            "name": "ManifestGenerationMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "enabled",
                                "description": "Manifests will be generated"
                              },
                              {
                                "value": "disabled",
                                "description": "Manifests will not be generated"
                              }
                            ]
                          },
                          "description": "The mode of generation to be used for generating Manifest."
                        },
                        "manifestType": {
                          "type": "string",
                          "enum": [
                            "helm",
                            "kube"
                          ],
                          "x-ms-enum": {
                            "name": "GenerationManifestType",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "helm",
                                "description": "Helm manifests"
                              },
                              {
                                "value": "kube",
                                "description": "Kubernetes manifests"
                              }
                            ]
                          },
                          "description": "Determines the type of manifests to be generated."
                        },
                        "imageName": {
                          "type": "string",
                          "description": "The name of the image to be generated."
                        },
                        "namespace": {
                          "type": "string",
                          "description": "The namespace to deploy the application to."
                        },
                        "imageTag": {
                          "type": "string",
                          "description": "The tag to apply to the generated image."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "title": "Workflow",
              "description": "Resource representation of a workflow",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Properties of a workflow.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "githubWorkflowProfile": {
                      "description": "Profile of a github workflow.",
                      "x-ms-client-flatten": true,
                      "type": "object",
                      "properties": {
                        "repositoryOwner": {
                          "type": "string",
                          "title": "The owner of the repository the workflow is associated with.",
                          "description": "Repository Owner"
                        },
                        "repositoryName": {
                          "type": "string",
                          "title": "The name of the repository the workflow is associated with.",
                          "description": "Repository Name"
                        },
                        "branchName": {
                          "type": "string",
                          "title": "The name of the branch the workflow is associated with.",
                          "description": "Repository Branch Name"
                        },
                        "dockerfile": {
                          "type": "string",
                          "title": "Path to Dockerfile within the repository.",
                          "description": "Path to the Dockerfile within the repository."
                        },
                        "dockerBuildContext": {
                          "type": "string",
                          "title": "Path to Dockerfile Build Context within the repository.",
                          "description": "Path to Dockerfile Build Context within the repository."
                        },
                        "deploymentProperties": {
                          "type": "object",
                          "properties": {
                            "manifestType": {
                              "type": "string",
                              "enum": [
                                "helm",
                                "kube",
                                "kustomize"
                              ],
                              "x-ms-enum": {
                                "name": "ManifestType",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "value": "helm",
                                    "description": "Repositories using helm"
                                  },
                                  {
                                    "value": "kube",
                                    "description": "Repositories using kubernetes manifests"
                                  }
                                ]
                              },
                              "description": "Determines the type of manifests within the repository."
                            },
                            "kubeManifestLocations": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "helmChartPath": {
                              "type": "string",
                              "description": "Helm chart directory path in repository."
                            },
                            "helmValues": {
                              "type": "string",
                              "description": "Helm Values.yaml file location in repository."
                            },
                            "overrides": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              },
                              "title": "Manifest override values.",
                              "description": "Manifest override values."
                            }
                          }
                        },
                        "namespace": {
                          "type": "string",
                          "description": "Kubernetes namespace the application is deployed to.",
                          "title": "The Kubernetes namespace the application is deployed to"
                        },
                        "acr": {
                          "type": "object",
                          "description": "Information on the azure container registry",
                          "properties": {
                            "acrSubscriptionId": {
                              "type": "string",
                              "description": "ACR subscription id"
                            },
                            "acrResourceGroup": {
                              "type": "string",
                              "description": "ACR resource group"
                            },
                            "acrRegistryName": {
                              "type": "string",
                              "description": "ACR registry"
                            },
                            "acrRepositoryName": {
                              "type": "string",
                              "description": "ACR repository"
                            }
                          }
                        },
                        "oidcCredentials": {
                          "type": "object",
                          "description": "The fields needed for OIDC with GitHub.",
                          "properties": {
                            "azureClientId": {
                              "type": "string",
                              "description": "Azure Application Client ID"
                            },
                            "azureTenantId": {
                              "type": "string",
                              "description": "Azure Directory (tenant) ID"
                            }
                          }
                        },
                        "aksResourceId": {
                          "type": "string",
                          "description": "The Azure Kubernetes Cluster Resource the application will be deployed to.",
                          "title": "The Azure Kubernetes Managed Cluster resource."
                        },
                        "prURL": {
                          "type": "string",
                          "description": "The URL to the Pull Request submitted against the users repository.",
                          "readOnly": true
                        },
                        "pullNumber": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": true,
                          "description": "The number associated with the submitted pull request."
                        },
                        "prStatus": {
                          "type": "string",
                          "readOnly": true,
                          "enum": [
                            "unknown",
                            "submitted",
                            "merged",
                            "removed"
                          ],
                          "x-ms-enum": {
                            "name": "PullRequestStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "unknown",
                                "description": "Pull Request state unknown."
                              },
                              {
                                "value": "submitted",
                                "description": "Pull Request submitted to repository."
                              },
                              {
                                "value": "merged",
                                "description": "Pull Request merged into repository."
                              },
                              {
                                "value": "removed",
                                "description": "Workflow no longer found within repository."
                              }
                            ]
                          },
                          "description": "The status of the Pull Request submitted against the users repository."
                        },
                        "lastWorkflowRun": {
                          "type": "object",
                          "properties": {
                            "succeeded": {
                              "type": "boolean",
                              "readOnly": true,
                              "description": "Describes if the workflow run succeeded."
                            },
                            "workflowRunURL": {
                              "type": "string",
                              "readOnly": true,
                              "description": "URL to the run of the workflow."
                            },
                            "lastRunAt": {
                              "type": "string",
                              "readOnly": true,
                              "format": "date-time",
                              "description": "The timestamp of the last workflow run."
                            },
                            "workflowRunStatus": {
                              "type": "string",
                              "enum": [
                                "queued",
                                "inprogress",
                                "completed"
                              ],
                              "x-ms-enum": {
                                "name": "WorkflowRunStatus",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "value": "queued",
                                    "description": "Workflow run is queued"
                                  },
                                  {
                                    "value": "inprogress",
                                    "description": "Workflow run is inprogress"
                                  },
                                  {
                                    "value": "completed",
                                    "description": "Workflow run is completed"
                                  }
                                ]
                              },
                              "description": "Describes the status of the workflow run"
                            }
                          }
                        },
                        "authStatus": {
                          "type": "string",
                          "enum": [
                            "Authorized",
                            "NotFound",
                            "Error"
                          ],
                          "readOnly": true,
                          "x-ms-enum": {
                            "name": "AuthorizationStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Authorized",
                                "description": "Requests authorized successfully"
                              },
                              {
                                "value": "NotFound",
                                "description": "Requests returned NotFound response"
                              },
                              {
                                "value": "Error",
                                "description": "Requests returned other error response"
                              }
                            ]
                          },
                          "description": "Determines the authorization status of requests."
                        }
                      }
                    },
                    "artifactGenerationProperties": {
                      "description": "Properties for generating artifacts like dockerfile and manifests.",
                      "x-ms-client-flatten": true,
                      "title": "Artifact Generation Properties",
                      "type": "object",
                      "properties": {
                        "generationLanguage": {
                          "type": "string",
                          "enum": [
                            "clojure",
                            "csharp",
                            "erlang",
                            "go",
                            "gomodule",
                            "gradle",
                            "java",
                            "javascript",
                            "php",
                            "python",
                            "ruby",
                            "rust",
                            "swift"
                          ],
                          "x-ms-enum": {
                            "name": "GenerationLanguage",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "clojure",
                                "description": "clojure language"
                              },
                              {
                                "value": "csharp",
                                "description": "csharp language"
                              },
                              {
                                "value": "erlang",
                                "description": "erlang language"
                              },
                              {
                                "value": "go",
                                "description": "go language"
                              },
                              {
                                "value": "gomodule",
                                "description": "gomodule language"
                              },
                              {
                                "value": "gradle",
                                "description": "gradle language"
                              },
                              {
                                "value": "java",
                                "description": "java language"
                              },
                              {
                                "value": "javascript",
                                "description": "javascript language"
                              },
                              {
                                "value": "php",
                                "description": "php language"
                              },
                              {
                                "value": "python",
                                "description": "python language"
                              },
                              {
                                "value": "ruby",
                                "description": "ruby language"
                              },
                              {
                                "value": "rust",
                                "description": "rust language"
                              },
                              {
                                "value": "swift",
                                "description": "swift language"
                              }
                            ]
                          },
                          "description": "The programming language used."
                        },
                        "languageVersion": {
                          "type": "string",
                          "description": "The version of the language image used for execution in the generated dockerfile."
                        },
                        "builderVersion": {
                          "type": "string",
                          "description": "The version of the language image used for building the code in the generated dockerfile."
                        },
                        "port": {
                          "type": "string",
                          "description": "The port the application is exposed on."
                        },
                        "appName": {
                          "type": "string",
                          "description": "The name of the app."
                        },
                        "dockerfileOutputDirectory": {
                          "type": "string",
                          "description": "The directory to output the generated Dockerfile to."
                        },
                        "manifestOutputDirectory": {
                          "type": "string",
                          "description": "The directory to output the generated manifests to."
                        },
                        "dockerfileGenerationMode": {
                          "type": "string",
                          "enum": [
                            "enabled",
                            "disabled"
                          ],
                          "x-ms-enum": {
                            "name": "DockerfileGenerationMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "enabled",
                                "description": "Dockerfiles will be generated"
                              },
                              {
                                "value": "disabled",
                                "description": "Dockerfiles will not be generated"
                              }
                            ]
                          },
                          "description": "The mode of generation to be used for generating Dockerfiles."
                        },
                        "manifestGenerationMode": {
                          "type": "string",
                          "enum": [
                            "enabled",
                            "disabled"
                          ],
                          "x-ms-enum": {
                            "name": "ManifestGenerationMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "enabled",
                                "description": "Manifests will be generated"
                              },
                              {
                                "value": "disabled",
                                "description": "Manifests will not be generated"
                              }
                            ]
                          },
                          "description": "The mode of generation to be used for generating Manifest."
                        },
                        "manifestType": {
                          "type": "string",
                          "enum": [
                            "helm",
                            "kube"
                          ],
                          "x-ms-enum": {
                            "name": "GenerationManifestType",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "helm",
                                "description": "Helm manifests"
                              },
                              {
                                "value": "kube",
                                "description": "Kubernetes manifests"
                              }
                            ]
                          },
                          "description": "Determines the type of manifests to be generated."
                        },
                        "imageName": {
                          "type": "string",
                          "description": "The name of the image to be generated."
                        },
                        "namespace": {
                          "type": "string",
                          "description": "The namespace to deploy the application to."
                        },
                        "imageTag": {
                          "type": "string",
                          "description": "The tag to apply to the generated image."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "title": "Workflow",
              "description": "Resource representation of a workflow",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Properties of a workflow.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "githubWorkflowProfile": {
                      "description": "Profile of a github workflow.",
                      "x-ms-client-flatten": true,
                      "type": "object",
                      "properties": {
                        "repositoryOwner": {
                          "type": "string",
                          "title": "The owner of the repository the workflow is associated with.",
                          "description": "Repository Owner"
                        },
                        "repositoryName": {
                          "type": "string",
                          "title": "The name of the repository the workflow is associated with.",
                          "description": "Repository Name"
                        },
                        "branchName": {
                          "type": "string",
                          "title": "The name of the branch the workflow is associated with.",
                          "description": "Repository Branch Name"
                        },
                        "dockerfile": {
                          "type": "string",
                          "title": "Path to Dockerfile within the repository.",
                          "description": "Path to the Dockerfile within the repository."
                        },
                        "dockerBuildContext": {
                          "type": "string",
                          "title": "Path to Dockerfile Build Context within the repository.",
                          "description": "Path to Dockerfile Build Context within the repository."
                        },
                        "deploymentProperties": {
                          "type": "object",
                          "properties": {
                            "manifestType": {
                              "type": "string",
                              "enum": [
                                "helm",
                                "kube",
                                "kustomize"
                              ],
                              "x-ms-enum": {
                                "name": "ManifestType",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "value": "helm",
                                    "description": "Repositories using helm"
                                  },
                                  {
                                    "value": "kube",
                                    "description": "Repositories using kubernetes manifests"
                                  }
                                ]
                              },
                              "description": "Determines the type of manifests within the repository."
                            },
                            "kubeManifestLocations": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "helmChartPath": {
                              "type": "string",
                              "description": "Helm chart directory path in repository."
                            },
                            "helmValues": {
                              "type": "string",
                              "description": "Helm Values.yaml file location in repository."
                            },
                            "overrides": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              },
                              "title": "Manifest override values.",
                              "description": "Manifest override values."
                            }
                          }
                        },
                        "namespace": {
                          "type": "string",
                          "description": "Kubernetes namespace the application is deployed to.",
                          "title": "The Kubernetes namespace the application is deployed to"
                        },
                        "acr": {
                          "type": "object",
                          "description": "Information on the azure container registry",
                          "properties": {
                            "acrSubscriptionId": {
                              "type": "string",
                              "description": "ACR subscription id"
                            },
                            "acrResourceGroup": {
                              "type": "string",
                              "description": "ACR resource group"
                            },
                            "acrRegistryName": {
                              "type": "string",
                              "description": "ACR registry"
                            },
                            "acrRepositoryName": {
                              "type": "string",
                              "description": "ACR repository"
                            }
                          }
                        },
                        "oidcCredentials": {
                          "type": "object",
                          "description": "The fields needed for OIDC with GitHub.",
                          "properties": {
                            "azureClientId": {
                              "type": "string",
                              "description": "Azure Application Client ID"
                            },
                            "azureTenantId": {
                              "type": "string",
                              "description": "Azure Directory (tenant) ID"
                            }
                          }
                        },
                        "aksResourceId": {
                          "type": "string",
                          "description": "The Azure Kubernetes Cluster Resource the application will be deployed to.",
                          "title": "The Azure Kubernetes Managed Cluster resource."
                        },
                        "prURL": {
                          "type": "string",
                          "description": "The URL to the Pull Request submitted against the users repository.",
                          "readOnly": true
                        },
                        "pullNumber": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": true,
                          "description": "The number associated with the submitted pull request."
                        },
                        "prStatus": {
                          "type": "string",
                          "readOnly": true,
                          "enum": [
                            "unknown",
                            "submitted",
                            "merged",
                            "removed"
                          ],
                          "x-ms-enum": {
                            "name": "PullRequestStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "unknown",
                                "description": "Pull Request state unknown."
                              },
                              {
                                "value": "submitted",
                                "description": "Pull Request submitted to repository."
                              },
                              {
                                "value": "merged",
                                "description": "Pull Request merged into repository."
                              },
                              {
                                "value": "removed",
                                "description": "Workflow no longer found within repository."
                              }
                            ]
                          },
                          "description": "The status of the Pull Request submitted against the users repository."
                        },
                        "lastWorkflowRun": {
                          "type": "object",
                          "properties": {
                            "succeeded": {
                              "type": "boolean",
                              "readOnly": true,
                              "description": "Describes if the workflow run succeeded."
                            },
                            "workflowRunURL": {
                              "type": "string",
                              "readOnly": true,
                              "description": "URL to the run of the workflow."
                            },
                            "lastRunAt": {
                              "type": "string",
                              "readOnly": true,
                              "format": "date-time",
                              "description": "The timestamp of the last workflow run."
                            },
                            "workflowRunStatus": {
                              "type": "string",
                              "enum": [
                                "queued",
                                "inprogress",
                                "completed"
                              ],
                              "x-ms-enum": {
                                "name": "WorkflowRunStatus",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "value": "queued",
                                    "description": "Workflow run is queued"
                                  },
                                  {
                                    "value": "inprogress",
                                    "description": "Workflow run is inprogress"
                                  },
                                  {
                                    "value": "completed",
                                    "description": "Workflow run is completed"
                                  }
                                ]
                              },
                              "description": "Describes the status of the workflow run"
                            }
                          }
                        },
                        "authStatus": {
                          "type": "string",
                          "enum": [
                            "Authorized",
                            "NotFound",
                            "Error"
                          ],
                          "readOnly": true,
                          "x-ms-enum": {
                            "name": "AuthorizationStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Authorized",
                                "description": "Requests authorized successfully"
                              },
                              {
                                "value": "NotFound",
                                "description": "Requests returned NotFound response"
                              },
                              {
                                "value": "Error",
                                "description": "Requests returned other error response"
                              }
                            ]
                          },
                          "description": "Determines the authorization status of requests."
                        }
                      }
                    },
                    "artifactGenerationProperties": {
                      "description": "Properties for generating artifacts like dockerfile and manifests.",
                      "x-ms-client-flatten": true,
                      "title": "Artifact Generation Properties",
                      "type": "object",
                      "properties": {
                        "generationLanguage": {
                          "type": "string",
                          "enum": [
                            "clojure",
                            "csharp",
                            "erlang",
                            "go",
                            "gomodule",
                            "gradle",
                            "java",
                            "javascript",
                            "php",
                            "python",
                            "ruby",
                            "rust",
                            "swift"
                          ],
                          "x-ms-enum": {
                            "name": "GenerationLanguage",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "clojure",
                                "description": "clojure language"
                              },
                              {
                                "value": "csharp",
                                "description": "csharp language"
                              },
                              {
                                "value": "erlang",
                                "description": "erlang language"
                              },
                              {
                                "value": "go",
                                "description": "go language"
                              },
                              {
                                "value": "gomodule",
                                "description": "gomodule language"
                              },
                              {
                                "value": "gradle",
                                "description": "gradle language"
                              },
                              {
                                "value": "java",
                                "description": "java language"
                              },
                              {
                                "value": "javascript",
                                "description": "javascript language"
                              },
                              {
                                "value": "php",
                                "description": "php language"
                              },
                              {
                                "value": "python",
                                "description": "python language"
                              },
                              {
                                "value": "ruby",
                                "description": "ruby language"
                              },
                              {
                                "value": "rust",
                                "description": "rust language"
                              },
                              {
                                "value": "swift",
                                "description": "swift language"
                              }
                            ]
                          },
                          "description": "The programming language used."
                        },
                        "languageVersion": {
                          "type": "string",
                          "description": "The version of the language image used for execution in the generated dockerfile."
                        },
                        "builderVersion": {
                          "type": "string",
                          "description": "The version of the language image used for building the code in the generated dockerfile."
                        },
                        "port": {
                          "type": "string",
                          "description": "The port the application is exposed on."
                        },
                        "appName": {
                          "type": "string",
                          "description": "The name of the app."
                        },
                        "dockerfileOutputDirectory": {
                          "type": "string",
                          "description": "The directory to output the generated Dockerfile to."
                        },
                        "manifestOutputDirectory": {
                          "type": "string",
                          "description": "The directory to output the generated manifests to."
                        },
                        "dockerfileGenerationMode": {
                          "type": "string",
                          "enum": [
                            "enabled",
                            "disabled"
                          ],
                          "x-ms-enum": {
                            "name": "DockerfileGenerationMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "enabled",
                                "description": "Dockerfiles will be generated"
                              },
                              {
                                "value": "disabled",
                                "description": "Dockerfiles will not be generated"
                              }
                            ]
                          },
                          "description": "The mode of generation to be used for generating Dockerfiles."
                        },
                        "manifestGenerationMode": {
                          "type": "string",
                          "enum": [
                            "enabled",
                            "disabled"
                          ],
                          "x-ms-enum": {
                            "name": "ManifestGenerationMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "enabled",
                                "description": "Manifests will be generated"
                              },
                              {
                                "value": "disabled",
                                "description": "Manifests will not be generated"
                              }
                            ]
                          },
                          "description": "The mode of generation to be used for generating Manifest."
                        },
                        "manifestType": {
                          "type": "string",
                          "enum": [
                            "helm",
                            "kube"
                          ],
                          "x-ms-enum": {
                            "name": "GenerationManifestType",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "helm",
                                "description": "Helm manifests"
                              },
                              {
                                "value": "kube",
                                "description": "Kubernetes manifests"
                              }
                            ]
                          },
                          "description": "Determines the type of manifests to be generated."
                        },
                        "imageName": {
                          "type": "string",
                          "description": "The name of the image to be generated."
                        },
                        "namespace": {
                          "type": "string",
                          "description": "The namespace to deploy the application to."
                        },
                        "imageTag": {
                          "type": "string",
                          "description": "The tag to apply to the generated image."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Workflow"
        ],
        "operationId": "Workflow_Delete",
        "summary": "Deletes a workflow",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workflowName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$",
            "description": "The name of the workflow resource.",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "successful delete with response",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "delete status message"
                }
              },
              "description": "delete response if content must be provided on delete operation"
            }
          },
          "204": {
            "description": "Successfully deleted the resource"
          }
        }
      },
      "patch": {
        "tags": [
          "Workflow"
        ],
        "operationId": "Workflow_UpdateTags",
        "summary": "Updates tags on a workflow.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workflowName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$",
            "description": "The name of the workflow resource.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "x-ms-mutability": [
                "read",
                "create",
                "update"
              ],
              "description": "Resource tags."
            },
            "description": "Parameters supplied to the Update Workflow Tags operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "title": "Workflow",
              "description": "Resource representation of a workflow",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Properties of a workflow.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "githubWorkflowProfile": {
                      "description": "Profile of a github workflow.",
                      "x-ms-client-flatten": true,
                      "type": "object",
                      "properties": {
                        "repositoryOwner": {
                          "type": "string",
                          "title": "The owner of the repository the workflow is associated with.",
                          "description": "Repository Owner"
                        },
                        "repositoryName": {
                          "type": "string",
                          "title": "The name of the repository the workflow is associated with.",
                          "description": "Repository Name"
                        },
                        "branchName": {
                          "type": "string",
                          "title": "The name of the branch the workflow is associated with.",
                          "description": "Repository Branch Name"
                        },
                        "dockerfile": {
                          "type": "string",
                          "title": "Path to Dockerfile within the repository.",
                          "description": "Path to the Dockerfile within the repository."
                        },
                        "dockerBuildContext": {
                          "type": "string",
                          "title": "Path to Dockerfile Build Context within the repository.",
                          "description": "Path to Dockerfile Build Context within the repository."
                        },
                        "deploymentProperties": {
                          "type": "object",
                          "properties": {
                            "manifestType": {
                              "type": "string",
                              "enum": [
                                "helm",
                                "kube",
                                "kustomize"
                              ],
                              "x-ms-enum": {
                                "name": "ManifestType",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "value": "helm",
                                    "description": "Repositories using helm"
                                  },
                                  {
                                    "value": "kube",
                                    "description": "Repositories using kubernetes manifests"
                                  }
                                ]
                              },
                              "description": "Determines the type of manifests within the repository."
                            },
                            "kubeManifestLocations": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "helmChartPath": {
                              "type": "string",
                              "description": "Helm chart directory path in repository."
                            },
                            "helmValues": {
                              "type": "string",
                              "description": "Helm Values.yaml file location in repository."
                            },
                            "overrides": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              },
                              "title": "Manifest override values.",
                              "description": "Manifest override values."
                            }
                          }
                        },
                        "namespace": {
                          "type": "string",
                          "description": "Kubernetes namespace the application is deployed to.",
                          "title": "The Kubernetes namespace the application is deployed to"
                        },
                        "acr": {
                          "type": "object",
                          "description": "Information on the azure container registry",
                          "properties": {
                            "acrSubscriptionId": {
                              "type": "string",
                              "description": "ACR subscription id"
                            },
                            "acrResourceGroup": {
                              "type": "string",
                              "description": "ACR resource group"
                            },
                            "acrRegistryName": {
                              "type": "string",
                              "description": "ACR registry"
                            },
                            "acrRepositoryName": {
                              "type": "string",
                              "description": "ACR repository"
                            }
                          }
                        },
                        "oidcCredentials": {
                          "type": "object",
                          "description": "The fields needed for OIDC with GitHub.",
                          "properties": {
                            "azureClientId": {
                              "type": "string",
                              "description": "Azure Application Client ID"
                            },
                            "azureTenantId": {
                              "type": "string",
                              "description": "Azure Directory (tenant) ID"
                            }
                          }
                        },
                        "aksResourceId": {
                          "type": "string",
                          "description": "The Azure Kubernetes Cluster Resource the application will be deployed to.",
                          "title": "The Azure Kubernetes Managed Cluster resource."
                        },
                        "prURL": {
                          "type": "string",
                          "description": "The URL to the Pull Request submitted against the users repository.",
                          "readOnly": true
                        },
                        "pullNumber": {
                          "type": "integer",
                          "format": "int32",
                          "readOnly": true,
                          "description": "The number associated with the submitted pull request."
                        },
                        "prStatus": {
                          "type": "string",
                          "readOnly": true,
                          "enum": [
                            "unknown",
                            "submitted",
                            "merged",
                            "removed"
                          ],
                          "x-ms-enum": {
                            "name": "PullRequestStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "unknown",
                                "description": "Pull Request state unknown."
                              },
                              {
                                "value": "submitted",
                                "description": "Pull Request submitted to repository."
                              },
                              {
                                "value": "merged",
                                "description": "Pull Request merged into repository."
                              },
                              {
                                "value": "removed",
                                "description": "Workflow no longer found within repository."
                              }
                            ]
                          },
                          "description": "The status of the Pull Request submitted against the users repository."
                        },
                        "lastWorkflowRun": {
                          "type": "object",
                          "properties": {
                            "succeeded": {
                              "type": "boolean",
                              "readOnly": true,
                              "description": "Describes if the workflow run succeeded."
                            },
                            "workflowRunURL": {
                              "type": "string",
                              "readOnly": true,
                              "description": "URL to the run of the workflow."
                            },
                            "lastRunAt": {
                              "type": "string",
                              "readOnly": true,
                              "format": "date-time",
                              "description": "The timestamp of the last workflow run."
                            },
                            "workflowRunStatus": {
                              "type": "string",
                              "enum": [
                                "queued",
                                "inprogress",
                                "completed"
                              ],
                              "x-ms-enum": {
                                "name": "WorkflowRunStatus",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "value": "queued",
                                    "description": "Workflow run is queued"
                                  },
                                  {
                                    "value": "inprogress",
                                    "description": "Workflow run is inprogress"
                                  },
                                  {
                                    "value": "completed",
                                    "description": "Workflow run is completed"
                                  }
                                ]
                              },
                              "description": "Describes the status of the workflow run"
                            }
                          }
                        },
                        "authStatus": {
                          "type": "string",
                          "enum": [
                            "Authorized",
                            "NotFound",
                            "Error"
                          ],
                          "readOnly": true,
                          "x-ms-enum": {
                            "name": "AuthorizationStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Authorized",
                                "description": "Requests authorized successfully"
                              },
                              {
                                "value": "NotFound",
                                "description": "Requests returned NotFound response"
                              },
                              {
                                "value": "Error",
                                "description": "Requests returned other error response"
                              }
                            ]
                          },
                          "description": "Determines the authorization status of requests."
                        }
                      }
                    },
                    "artifactGenerationProperties": {
                      "description": "Properties for generating artifacts like dockerfile and manifests.",
                      "x-ms-client-flatten": true,
                      "title": "Artifact Generation Properties",
                      "type": "object",
                      "properties": {
                        "generationLanguage": {
                          "type": "string",
                          "enum": [
                            "clojure",
                            "csharp",
                            "erlang",
                            "go",
                            "gomodule",
                            "gradle",
                            "java",
                            "javascript",
                            "php",
                            "python",
                            "ruby",
                            "rust",
                            "swift"
                          ],
                          "x-ms-enum": {
                            "name": "GenerationLanguage",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "clojure",
                                "description": "clojure language"
                              },
                              {
                                "value": "csharp",
                                "description": "csharp language"
                              },
                              {
                                "value": "erlang",
                                "description": "erlang language"
                              },
                              {
                                "value": "go",
                                "description": "go language"
                              },
                              {
                                "value": "gomodule",
                                "description": "gomodule language"
                              },
                              {
                                "value": "gradle",
                                "description": "gradle language"
                              },
                              {
                                "value": "java",
                                "description": "java language"
                              },
                              {
                                "value": "javascript",
                                "description": "javascript language"
                              },
                              {
                                "value": "php",
                                "description": "php language"
                              },
                              {
                                "value": "python",
                                "description": "python language"
                              },
                              {
                                "value": "ruby",
                                "description": "ruby language"
                              },
                              {
                                "value": "rust",
                                "description": "rust language"
                              },
                              {
                                "value": "swift",
                                "description": "swift language"
                              }
                            ]
                          },
                          "description": "The programming language used."
                        },
                        "languageVersion": {
                          "type": "string",
                          "description": "The version of the language image used for execution in the generated dockerfile."
                        },
                        "builderVersion": {
                          "type": "string",
                          "description": "The version of the language image used for building the code in the generated dockerfile."
                        },
                        "port": {
                          "type": "string",
                          "description": "The port the application is exposed on."
                        },
                        "appName": {
                          "type": "string",
                          "description": "The name of the app."
                        },
                        "dockerfileOutputDirectory": {
                          "type": "string",
                          "description": "The directory to output the generated Dockerfile to."
                        },
                        "manifestOutputDirectory": {
                          "type": "string",
                          "description": "The directory to output the generated manifests to."
                        },
                        "dockerfileGenerationMode": {
                          "type": "string",
                          "enum": [
                            "enabled",
                            "disabled"
                          ],
                          "x-ms-enum": {
                            "name": "DockerfileGenerationMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "enabled",
                                "description": "Dockerfiles will be generated"
                              },
                              {
                                "value": "disabled",
                                "description": "Dockerfiles will not be generated"
                              }
                            ]
                          },
                          "description": "The mode of generation to be used for generating Dockerfiles."
                        },
                        "manifestGenerationMode": {
                          "type": "string",
                          "enum": [
                            "enabled",
                            "disabled"
                          ],
                          "x-ms-enum": {
                            "name": "ManifestGenerationMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "enabled",
                                "description": "Manifests will be generated"
                              },
                              {
                                "value": "disabled",
                                "description": "Manifests will not be generated"
                              }
                            ]
                          },
                          "description": "The mode of generation to be used for generating Manifest."
                        },
                        "manifestType": {
                          "type": "string",
                          "enum": [
                            "helm",
                            "kube"
                          ],
                          "x-ms-enum": {
                            "name": "GenerationManifestType",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "helm",
                                "description": "Helm manifests"
                              },
                              {
                                "value": "kube",
                                "description": "Kubernetes manifests"
                              }
                            ]
                          },
                          "description": "Determines the type of manifests to be generated."
                        },
                        "imageName": {
                          "type": "string",
                          "description": "The name of the image to be generated."
                        },
                        "namespace": {
                          "type": "string",
                          "description": "The namespace to deploy the application to."
                        },
                        "imageTag": {
                          "type": "string",
                          "description": "The tag to apply to the generated image."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DevHub/locations/{location}/generatePreviewArtifacts": {
      "post": {
        "tags": [
          "Artifacts"
        ],
        "operationId": "GeneratePreviewArtifacts",
        "summary": "Generate preview dockerfile and manifests.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "required": true,
            "in": "body",
            "schema": {
              "description": "Properties used for generating artifacts such as Dockerfiles and manifests.",
              "title": "Artifact Generation Properties",
              "type": "object",
              "properties": {
                "generationLanguage": {
                  "type": "string",
                  "enum": [
                    "clojure",
                    "csharp",
                    "erlang",
                    "go",
                    "gomodule",
                    "gradle",
                    "java",
                    "javascript",
                    "php",
                    "python",
                    "ruby",
                    "rust",
                    "swift"
                  ],
                  "x-ms-enum": {
                    "name": "GenerationLanguage",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "clojure",
                        "description": "clojure language"
                      },
                      {
                        "value": "csharp",
                        "description": "csharp language"
                      },
                      {
                        "value": "erlang",
                        "description": "erlang language"
                      },
                      {
                        "value": "go",
                        "description": "go language"
                      },
                      {
                        "value": "gomodule",
                        "description": "gomodule language"
                      },
                      {
                        "value": "gradle",
                        "description": "gradle language"
                      },
                      {
                        "value": "java",
                        "description": "java language"
                      },
                      {
                        "value": "javascript",
                        "description": "javascript language"
                      },
                      {
                        "value": "php",
                        "description": "php language"
                      },
                      {
                        "value": "python",
                        "description": "python language"
                      },
                      {
                        "value": "ruby",
                        "description": "ruby language"
                      },
                      {
                        "value": "rust",
                        "description": "rust language"
                      },
                      {
                        "value": "swift",
                        "description": "swift language"
                      }
                    ]
                  },
                  "description": "The programming language used."
                },
                "languageVersion": {
                  "type": "string",
                  "description": "The version of the language image used for execution in the generated dockerfile."
                },
                "builderVersion": {
                  "type": "string",
                  "description": "The version of the language image used for building the code in the generated dockerfile."
                },
                "port": {
                  "type": "string",
                  "description": "The port the application is exposed on."
                },
                "appName": {
                  "type": "string",
                  "description": "The name of the app."
                },
                "dockerfileOutputDirectory": {
                  "type": "string",
                  "description": "The directory to output the generated Dockerfile to."
                },
                "manifestOutputDirectory": {
                  "type": "string",
                  "description": "The directory to output the generated manifests to."
                },
                "dockerfileGenerationMode": {
                  "type": "string",
                  "enum": [
                    "enabled",
                    "disabled"
                  ],
                  "x-ms-enum": {
                    "name": "DockerfileGenerationMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "enabled",
                        "description": "Dockerfiles will be generated"
                      },
                      {
                        "value": "disabled",
                        "description": "Dockerfiles will not be generated"
                      }
                    ]
                  },
                  "description": "The mode of generation to be used for generating Dockerfiles."
                },
                "manifestGenerationMode": {
                  "type": "string",
                  "enum": [
                    "enabled",
                    "disabled"
                  ],
                  "x-ms-enum": {
                    "name": "ManifestGenerationMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "enabled",
                        "description": "Manifests will be generated"
                      },
                      {
                        "value": "disabled",
                        "description": "Manifests will not be generated"
                      }
                    ]
                  },
                  "description": "The mode of generation to be used for generating Manifest."
                },
                "manifestType": {
                  "type": "string",
                  "enum": [
                    "helm",
                    "kube"
                  ],
                  "x-ms-enum": {
                    "name": "GenerationManifestType",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "helm",
                        "description": "Helm manifests"
                      },
                      {
                        "value": "kube",
                        "description": "Kubernetes manifests"
                      }
                    ]
                  },
                  "description": "Determines the type of manifests to be generated."
                },
                "imageName": {
                  "type": "string",
                  "description": "The name of the image to be generated."
                },
                "namespace": {
                  "type": "string",
                  "description": "The namespace to deploy the application to."
                },
                "imageTag": {
                  "type": "string",
                  "description": "The tag to apply to the generated image."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "description": "Dockerfile and manifest artifacts generated as a preview are returned as a map<path string,content string>",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Workflow": {
      "title": "Workflow",
      "description": "Resource representation of a workflow",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "description": "Properties of a workflow.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "githubWorkflowProfile": {
              "description": "Profile of a github workflow.",
              "x-ms-client-flatten": true,
              "type": "object",
              "properties": {
                "repositoryOwner": {
                  "type": "string",
                  "title": "The owner of the repository the workflow is associated with.",
                  "description": "Repository Owner"
                },
                "repositoryName": {
                  "type": "string",
                  "title": "The name of the repository the workflow is associated with.",
                  "description": "Repository Name"
                },
                "branchName": {
                  "type": "string",
                  "title": "The name of the branch the workflow is associated with.",
                  "description": "Repository Branch Name"
                },
                "dockerfile": {
                  "type": "string",
                  "title": "Path to Dockerfile within the repository.",
                  "description": "Path to the Dockerfile within the repository."
                },
                "dockerBuildContext": {
                  "type": "string",
                  "title": "Path to Dockerfile Build Context within the repository.",
                  "description": "Path to Dockerfile Build Context within the repository."
                },
                "deploymentProperties": {
                  "type": "object",
                  "properties": {
                    "manifestType": {
                      "type": "string",
                      "enum": [
                        "helm",
                        "kube",
                        "kustomize"
                      ],
                      "x-ms-enum": {
                        "name": "ManifestType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "helm",
                            "description": "Repositories using helm"
                          },
                          {
                            "value": "kube",
                            "description": "Repositories using kubernetes manifests"
                          }
                        ]
                      },
                      "description": "Determines the type of manifests within the repository."
                    },
                    "kubeManifestLocations": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "helmChartPath": {
                      "type": "string",
                      "description": "Helm chart directory path in repository."
                    },
                    "helmValues": {
                      "type": "string",
                      "description": "Helm Values.yaml file location in repository."
                    },
                    "overrides": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "title": "Manifest override values.",
                      "description": "Manifest override values."
                    }
                  }
                },
                "namespace": {
                  "type": "string",
                  "description": "Kubernetes namespace the application is deployed to.",
                  "title": "The Kubernetes namespace the application is deployed to"
                },
                "acr": {
                  "type": "object",
                  "description": "Information on the azure container registry",
                  "properties": {
                    "acrSubscriptionId": {
                      "type": "string",
                      "description": "ACR subscription id"
                    },
                    "acrResourceGroup": {
                      "type": "string",
                      "description": "ACR resource group"
                    },
                    "acrRegistryName": {
                      "type": "string",
                      "description": "ACR registry"
                    },
                    "acrRepositoryName": {
                      "type": "string",
                      "description": "ACR repository"
                    }
                  }
                },
                "oidcCredentials": {
                  "type": "object",
                  "description": "The fields needed for OIDC with GitHub.",
                  "properties": {
                    "azureClientId": {
                      "type": "string",
                      "description": "Azure Application Client ID"
                    },
                    "azureTenantId": {
                      "type": "string",
                      "description": "Azure Directory (tenant) ID"
                    }
                  }
                },
                "aksResourceId": {
                  "type": "string",
                  "description": "The Azure Kubernetes Cluster Resource the application will be deployed to.",
                  "title": "The Azure Kubernetes Managed Cluster resource."
                },
                "prURL": {
                  "type": "string",
                  "description": "The URL to the Pull Request submitted against the users repository.",
                  "readOnly": true
                },
                "pullNumber": {
                  "type": "integer",
                  "format": "int32",
                  "readOnly": true,
                  "description": "The number associated with the submitted pull request."
                },
                "prStatus": {
                  "type": "string",
                  "readOnly": true,
                  "enum": [
                    "unknown",
                    "submitted",
                    "merged",
                    "removed"
                  ],
                  "x-ms-enum": {
                    "name": "PullRequestStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "unknown",
                        "description": "Pull Request state unknown."
                      },
                      {
                        "value": "submitted",
                        "description": "Pull Request submitted to repository."
                      },
                      {
                        "value": "merged",
                        "description": "Pull Request merged into repository."
                      },
                      {
                        "value": "removed",
                        "description": "Workflow no longer found within repository."
                      }
                    ]
                  },
                  "description": "The status of the Pull Request submitted against the users repository."
                },
                "lastWorkflowRun": {
                  "type": "object",
                  "properties": {
                    "succeeded": {
                      "type": "boolean",
                      "readOnly": true,
                      "description": "Describes if the workflow run succeeded."
                    },
                    "workflowRunURL": {
                      "type": "string",
                      "readOnly": true,
                      "description": "URL to the run of the workflow."
                    },
                    "lastRunAt": {
                      "type": "string",
                      "readOnly": true,
                      "format": "date-time",
                      "description": "The timestamp of the last workflow run."
                    },
                    "workflowRunStatus": {
                      "type": "string",
                      "enum": [
                        "queued",
                        "inprogress",
                        "completed"
                      ],
                      "x-ms-enum": {
                        "name": "WorkflowRunStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "queued",
                            "description": "Workflow run is queued"
                          },
                          {
                            "value": "inprogress",
                            "description": "Workflow run is inprogress"
                          },
                          {
                            "value": "completed",
                            "description": "Workflow run is completed"
                          }
                        ]
                      },
                      "description": "Describes the status of the workflow run"
                    }
                  }
                },
                "authStatus": {
                  "type": "string",
                  "enum": [
                    "Authorized",
                    "NotFound",
                    "Error"
                  ],
                  "readOnly": true,
                  "x-ms-enum": {
                    "name": "AuthorizationStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "Authorized",
                        "description": "Requests authorized successfully"
                      },
                      {
                        "value": "NotFound",
                        "description": "Requests returned NotFound response"
                      },
                      {
                        "value": "Error",
                        "description": "Requests returned other error response"
                      }
                    ]
                  },
                  "description": "Determines the authorization status of requests."
                }
              }
            },
            "artifactGenerationProperties": {
              "description": "Properties for generating artifacts like dockerfile and manifests.",
              "x-ms-client-flatten": true,
              "title": "Artifact Generation Properties",
              "type": "object",
              "properties": {
                "generationLanguage": {
                  "type": "string",
                  "enum": [
                    "clojure",
                    "csharp",
                    "erlang",
                    "go",
                    "gomodule",
                    "gradle",
                    "java",
                    "javascript",
                    "php",
                    "python",
                    "ruby",
                    "rust",
                    "swift"
                  ],
                  "x-ms-enum": {
                    "name": "GenerationLanguage",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "clojure",
                        "description": "clojure language"
                      },
                      {
                        "value": "csharp",
                        "description": "csharp language"
                      },
                      {
                        "value": "erlang",
                        "description": "erlang language"
                      },
                      {
                        "value": "go",
                        "description": "go language"
                      },
                      {
                        "value": "gomodule",
                        "description": "gomodule language"
                      },
                      {
                        "value": "gradle",
                        "description": "gradle language"
                      },
                      {
                        "value": "java",
                        "description": "java language"
                      },
                      {
                        "value": "javascript",
                        "description": "javascript language"
                      },
                      {
                        "value": "php",
                        "description": "php language"
                      },
                      {
                        "value": "python",
                        "description": "python language"
                      },
                      {
                        "value": "ruby",
                        "description": "ruby language"
                      },
                      {
                        "value": "rust",
                        "description": "rust language"
                      },
                      {
                        "value": "swift",
                        "description": "swift language"
                      }
                    ]
                  },
                  "description": "The programming language used."
                },
                "languageVersion": {
                  "type": "string",
                  "description": "The version of the language image used for execution in the generated dockerfile."
                },
                "builderVersion": {
                  "type": "string",
                  "description": "The version of the language image used for building the code in the generated dockerfile."
                },
                "port": {
                  "type": "string",
                  "description": "The port the application is exposed on."
                },
                "appName": {
                  "type": "string",
                  "description": "The name of the app."
                },
                "dockerfileOutputDirectory": {
                  "type": "string",
                  "description": "The directory to output the generated Dockerfile to."
                },
                "manifestOutputDirectory": {
                  "type": "string",
                  "description": "The directory to output the generated manifests to."
                },
                "dockerfileGenerationMode": {
                  "type": "string",
                  "enum": [
                    "enabled",
                    "disabled"
                  ],
                  "x-ms-enum": {
                    "name": "DockerfileGenerationMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "enabled",
                        "description": "Dockerfiles will be generated"
                      },
                      {
                        "value": "disabled",
                        "description": "Dockerfiles will not be generated"
                      }
                    ]
                  },
                  "description": "The mode of generation to be used for generating Dockerfiles."
                },
                "manifestGenerationMode": {
                  "type": "string",
                  "enum": [
                    "enabled",
                    "disabled"
                  ],
                  "x-ms-enum": {
                    "name": "ManifestGenerationMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "enabled",
                        "description": "Manifests will be generated"
                      },
                      {
                        "value": "disabled",
                        "description": "Manifests will not be generated"
                      }
                    ]
                  },
                  "description": "The mode of generation to be used for generating Manifest."
                },
                "manifestType": {
                  "type": "string",
                  "enum": [
                    "helm",
                    "kube"
                  ],
                  "x-ms-enum": {
                    "name": "GenerationManifestType",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "helm",
                        "description": "Helm manifests"
                      },
                      {
                        "value": "kube",
                        "description": "Kubernetes manifests"
                      }
                    ]
                  },
                  "description": "Determines the type of manifests to be generated."
                },
                "imageName": {
                  "type": "string",
                  "description": "The name of the image to be generated."
                },
                "namespace": {
                  "type": "string",
                  "description": "The namespace to deploy the application to."
                },
                "imageTag": {
                  "type": "string",
                  "description": "The tag to apply to the generated image."
                }
              }
            }
          }
        }
      }
    },
    "WorkflowProperties": {
      "type": "object",
      "description": "Workflow properties",
      "properties": {
        "githubWorkflowProfile": {
          "description": "Profile of a github workflow.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "repositoryOwner": {
              "type": "string",
              "title": "The owner of the repository the workflow is associated with.",
              "description": "Repository Owner"
            },
            "repositoryName": {
              "type": "string",
              "title": "The name of the repository the workflow is associated with.",
              "description": "Repository Name"
            },
            "branchName": {
              "type": "string",
              "title": "The name of the branch the workflow is associated with.",
              "description": "Repository Branch Name"
            },
            "dockerfile": {
              "type": "string",
              "title": "Path to Dockerfile within the repository.",
              "description": "Path to the Dockerfile within the repository."
            },
            "dockerBuildContext": {
              "type": "string",
              "title": "Path to Dockerfile Build Context within the repository.",
              "description": "Path to Dockerfile Build Context within the repository."
            },
            "deploymentProperties": {
              "type": "object",
              "properties": {
                "manifestType": {
                  "type": "string",
                  "enum": [
                    "helm",
                    "kube",
                    "kustomize"
                  ],
                  "x-ms-enum": {
                    "name": "ManifestType",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "helm",
                        "description": "Repositories using helm"
                      },
                      {
                        "value": "kube",
                        "description": "Repositories using kubernetes manifests"
                      }
                    ]
                  },
                  "description": "Determines the type of manifests within the repository."
                },
                "kubeManifestLocations": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "helmChartPath": {
                  "type": "string",
                  "description": "Helm chart directory path in repository."
                },
                "helmValues": {
                  "type": "string",
                  "description": "Helm Values.yaml file location in repository."
                },
                "overrides": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Manifest override values.",
                  "description": "Manifest override values."
                }
              }
            },
            "namespace": {
              "type": "string",
              "description": "Kubernetes namespace the application is deployed to.",
              "title": "The Kubernetes namespace the application is deployed to"
            },
            "acr": {
              "type": "object",
              "description": "Information on the azure container registry",
              "properties": {
                "acrSubscriptionId": {
                  "type": "string",
                  "description": "ACR subscription id"
                },
                "acrResourceGroup": {
                  "type": "string",
                  "description": "ACR resource group"
                },
                "acrRegistryName": {
                  "type": "string",
                  "description": "ACR registry"
                },
                "acrRepositoryName": {
                  "type": "string",
                  "description": "ACR repository"
                }
              }
            },
            "oidcCredentials": {
              "type": "object",
              "description": "The fields needed for OIDC with GitHub.",
              "properties": {
                "azureClientId": {
                  "type": "string",
                  "description": "Azure Application Client ID"
                },
                "azureTenantId": {
                  "type": "string",
                  "description": "Azure Directory (tenant) ID"
                }
              }
            },
            "aksResourceId": {
              "type": "string",
              "description": "The Azure Kubernetes Cluster Resource the application will be deployed to.",
              "title": "The Azure Kubernetes Managed Cluster resource."
            },
            "prURL": {
              "type": "string",
              "description": "The URL to the Pull Request submitted against the users repository.",
              "readOnly": true
            },
            "pullNumber": {
              "type": "integer",
              "format": "int32",
              "readOnly": true,
              "description": "The number associated with the submitted pull request."
            },
            "prStatus": {
              "type": "string",
              "readOnly": true,
              "enum": [
                "unknown",
                "submitted",
                "merged",
                "removed"
              ],
              "x-ms-enum": {
                "name": "PullRequestStatus",
                "modelAsString": true,
                "values": [
                  {
                    "value": "unknown",
                    "description": "Pull Request state unknown."
                  },
                  {
                    "value": "submitted",
                    "description": "Pull Request submitted to repository."
                  },
                  {
                    "value": "merged",
                    "description": "Pull Request merged into repository."
                  },
                  {
                    "value": "removed",
                    "description": "Workflow no longer found within repository."
                  }
                ]
              },
              "description": "The status of the Pull Request submitted against the users repository."
            },
            "lastWorkflowRun": {
              "type": "object",
              "properties": {
                "succeeded": {
                  "type": "boolean",
                  "readOnly": true,
                  "description": "Describes if the workflow run succeeded."
                },
                "workflowRunURL": {
                  "type": "string",
                  "readOnly": true,
                  "description": "URL to the run of the workflow."
                },
                "lastRunAt": {
                  "type": "string",
                  "readOnly": true,
                  "format": "date-time",
                  "description": "The timestamp of the last workflow run."
                },
                "workflowRunStatus": {
                  "type": "string",
                  "enum": [
                    "queued",
                    "inprogress",
                    "completed"
                  ],
                  "x-ms-enum": {
                    "name": "WorkflowRunStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "queued",
                        "description": "Workflow run is queued"
                      },
                      {
                        "value": "inprogress",
                        "description": "Workflow run is inprogress"
                      },
                      {
                        "value": "completed",
                        "description": "Workflow run is completed"
                      }
                    ]
                  },
                  "description": "Describes the status of the workflow run"
                }
              }
            },
            "authStatus": {
              "type": "string",
              "enum": [
                "Authorized",
                "NotFound",
                "Error"
              ],
              "readOnly": true,
              "x-ms-enum": {
                "name": "AuthorizationStatus",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Authorized",
                    "description": "Requests authorized successfully"
                  },
                  {
                    "value": "NotFound",
                    "description": "Requests returned NotFound response"
                  },
                  {
                    "value": "Error",
                    "description": "Requests returned other error response"
                  }
                ]
              },
              "description": "Determines the authorization status of requests."
            }
          }
        },
        "artifactGenerationProperties": {
          "description": "Properties for generating artifacts like dockerfile and manifests.",
          "x-ms-client-flatten": true,
          "title": "Artifact Generation Properties",
          "type": "object",
          "properties": {
            "generationLanguage": {
              "type": "string",
              "enum": [
                "clojure",
                "csharp",
                "erlang",
                "go",
                "gomodule",
                "gradle",
                "java",
                "javascript",
                "php",
                "python",
                "ruby",
                "rust",
                "swift"
              ],
              "x-ms-enum": {
                "name": "GenerationLanguage",
                "modelAsString": true,
                "values": [
                  {
                    "value": "clojure",
                    "description": "clojure language"
                  },
                  {
                    "value": "csharp",
                    "description": "csharp language"
                  },
                  {
                    "value": "erlang",
                    "description": "erlang language"
                  },
                  {
                    "value": "go",
                    "description": "go language"
                  },
                  {
                    "value": "gomodule",
                    "description": "gomodule language"
                  },
                  {
                    "value": "gradle",
                    "description": "gradle language"
                  },
                  {
                    "value": "java",
                    "description": "java language"
                  },
                  {
                    "value": "javascript",
                    "description": "javascript language"
                  },
                  {
                    "value": "php",
                    "description": "php language"
                  },
                  {
                    "value": "python",
                    "description": "python language"
                  },
                  {
                    "value": "ruby",
                    "description": "ruby language"
                  },
                  {
                    "value": "rust",
                    "description": "rust language"
                  },
                  {
                    "value": "swift",
                    "description": "swift language"
                  }
                ]
              },
              "description": "The programming language used."
            },
            "languageVersion": {
              "type": "string",
              "description": "The version of the language image used for execution in the generated dockerfile."
            },
            "builderVersion": {
              "type": "string",
              "description": "The version of the language image used for building the code in the generated dockerfile."
            },
            "port": {
              "type": "string",
              "description": "The port the application is exposed on."
            },
            "appName": {
              "type": "string",
              "description": "The name of the app."
            },
            "dockerfileOutputDirectory": {
              "type": "string",
              "description": "The directory to output the generated Dockerfile to."
            },
            "manifestOutputDirectory": {
              "type": "string",
              "description": "The directory to output the generated manifests to."
            },
            "dockerfileGenerationMode": {
              "type": "string",
              "enum": [
                "enabled",
                "disabled"
              ],
              "x-ms-enum": {
                "name": "DockerfileGenerationMode",
                "modelAsString": true,
                "values": [
                  {
                    "value": "enabled",
                    "description": "Dockerfiles will be generated"
                  },
                  {
                    "value": "disabled",
                    "description": "Dockerfiles will not be generated"
                  }
                ]
              },
              "description": "The mode of generation to be used for generating Dockerfiles."
            },
            "manifestGenerationMode": {
              "type": "string",
              "enum": [
                "enabled",
                "disabled"
              ],
              "x-ms-enum": {
                "name": "ManifestGenerationMode",
                "modelAsString": true,
                "values": [
                  {
                    "value": "enabled",
                    "description": "Manifests will be generated"
                  },
                  {
                    "value": "disabled",
                    "description": "Manifests will not be generated"
                  }
                ]
              },
              "description": "The mode of generation to be used for generating Manifest."
            },
            "manifestType": {
              "type": "string",
              "enum": [
                "helm",
                "kube"
              ],
              "x-ms-enum": {
                "name": "GenerationManifestType",
                "modelAsString": true,
                "values": [
                  {
                    "value": "helm",
                    "description": "Helm manifests"
                  },
                  {
                    "value": "kube",
                    "description": "Kubernetes manifests"
                  }
                ]
              },
              "description": "Determines the type of manifests to be generated."
            },
            "imageName": {
              "type": "string",
              "description": "The name of the image to be generated."
            },
            "namespace": {
              "type": "string",
              "description": "The namespace to deploy the application to."
            },
            "imageTag": {
              "type": "string",
              "description": "The tag to apply to the generated image."
            }
          }
        }
      }
    },
    "GitHubWorkflowProfile": {
      "type": "object",
      "description": "GitHub Workflow Profile",
      "properties": {
        "repositoryOwner": {
          "type": "string",
          "title": "The owner of the repository the workflow is associated with.",
          "description": "Repository Owner"
        },
        "repositoryName": {
          "type": "string",
          "title": "The name of the repository the workflow is associated with.",
          "description": "Repository Name"
        },
        "branchName": {
          "type": "string",
          "title": "The name of the branch the workflow is associated with.",
          "description": "Repository Branch Name"
        },
        "dockerfile": {
          "type": "string",
          "title": "Path to Dockerfile within the repository.",
          "description": "Path to the Dockerfile within the repository."
        },
        "dockerBuildContext": {
          "type": "string",
          "title": "Path to Dockerfile Build Context within the repository.",
          "description": "Path to Dockerfile Build Context within the repository."
        },
        "deploymentProperties": {
          "type": "object",
          "properties": {
            "manifestType": {
              "type": "string",
              "enum": [
                "helm",
                "kube",
                "kustomize"
              ],
              "x-ms-enum": {
                "name": "ManifestType",
                "modelAsString": true,
                "values": [
                  {
                    "value": "helm",
                    "description": "Repositories using helm"
                  },
                  {
                    "value": "kube",
                    "description": "Repositories using kubernetes manifests"
                  }
                ]
              },
              "description": "Determines the type of manifests within the repository."
            },
            "kubeManifestLocations": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "helmChartPath": {
              "type": "string",
              "description": "Helm chart directory path in repository."
            },
            "helmValues": {
              "type": "string",
              "description": "Helm Values.yaml file location in repository."
            },
            "overrides": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "title": "Manifest override values.",
              "description": "Manifest override values."
            }
          }
        },
        "namespace": {
          "type": "string",
          "description": "Kubernetes namespace the application is deployed to.",
          "title": "The Kubernetes namespace the application is deployed to"
        },
        "acr": {
          "type": "object",
          "description": "Information on the azure container registry",
          "properties": {
            "acrSubscriptionId": {
              "type": "string",
              "description": "ACR subscription id"
            },
            "acrResourceGroup": {
              "type": "string",
              "description": "ACR resource group"
            },
            "acrRegistryName": {
              "type": "string",
              "description": "ACR registry"
            },
            "acrRepositoryName": {
              "type": "string",
              "description": "ACR repository"
            }
          }
        },
        "oidcCredentials": {
          "type": "object",
          "description": "The fields needed for OIDC with GitHub.",
          "properties": {
            "azureClientId": {
              "type": "string",
              "description": "Azure Application Client ID"
            },
            "azureTenantId": {
              "type": "string",
              "description": "Azure Directory (tenant) ID"
            }
          }
        },
        "aksResourceId": {
          "type": "string",
          "description": "The Azure Kubernetes Cluster Resource the application will be deployed to.",
          "title": "The Azure Kubernetes Managed Cluster resource."
        },
        "prURL": {
          "type": "string",
          "description": "The URL to the Pull Request submitted against the users repository.",
          "readOnly": true
        },
        "pullNumber": {
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "description": "The number associated with the submitted pull request."
        },
        "prStatus": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "unknown",
            "submitted",
            "merged",
            "removed"
          ],
          "x-ms-enum": {
            "name": "PullRequestStatus",
            "modelAsString": true,
            "values": [
              {
                "value": "unknown",
                "description": "Pull Request state unknown."
              },
              {
                "value": "submitted",
                "description": "Pull Request submitted to repository."
              },
              {
                "value": "merged",
                "description": "Pull Request merged into repository."
              },
              {
                "value": "removed",
                "description": "Workflow no longer found within repository."
              }
            ]
          },
          "description": "The status of the Pull Request submitted against the users repository."
        },
        "lastWorkflowRun": {
          "type": "object",
          "properties": {
            "succeeded": {
              "type": "boolean",
              "readOnly": true,
              "description": "Describes if the workflow run succeeded."
            },
            "workflowRunURL": {
              "type": "string",
              "readOnly": true,
              "description": "URL to the run of the workflow."
            },
            "lastRunAt": {
              "type": "string",
              "readOnly": true,
              "format": "date-time",
              "description": "The timestamp of the last workflow run."
            },
            "workflowRunStatus": {
              "type": "string",
              "enum": [
                "queued",
                "inprogress",
                "completed"
              ],
              "x-ms-enum": {
                "name": "WorkflowRunStatus",
                "modelAsString": true,
                "values": [
                  {
                    "value": "queued",
                    "description": "Workflow run is queued"
                  },
                  {
                    "value": "inprogress",
                    "description": "Workflow run is inprogress"
                  },
                  {
                    "value": "completed",
                    "description": "Workflow run is completed"
                  }
                ]
              },
              "description": "Describes the status of the workflow run"
            }
          }
        },
        "authStatus": {
          "type": "string",
          "enum": [
            "Authorized",
            "NotFound",
            "Error"
          ],
          "readOnly": true,
          "x-ms-enum": {
            "name": "AuthorizationStatus",
            "modelAsString": true,
            "values": [
              {
                "value": "Authorized",
                "description": "Requests authorized successfully"
              },
              {
                "value": "NotFound",
                "description": "Requests returned NotFound response"
              },
              {
                "value": "Error",
                "description": "Requests returned other error response"
              }
            ]
          },
          "description": "Determines the authorization status of requests."
        }
      }
    },
    "WorkflowListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "title": "Workflow",
            "description": "Resource representation of a workflow",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "description": "Properties of a workflow.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "githubWorkflowProfile": {
                    "description": "Profile of a github workflow.",
                    "x-ms-client-flatten": true,
                    "type": "object",
                    "properties": {
                      "repositoryOwner": {
                        "type": "string",
                        "title": "The owner of the repository the workflow is associated with.",
                        "description": "Repository Owner"
                      },
                      "repositoryName": {
                        "type": "string",
                        "title": "The name of the repository the workflow is associated with.",
                        "description": "Repository Name"
                      },
                      "branchName": {
                        "type": "string",
                        "title": "The name of the branch the workflow is associated with.",
                        "description": "Repository Branch Name"
                      },
                      "dockerfile": {
                        "type": "string",
                        "title": "Path to Dockerfile within the repository.",
                        "description": "Path to the Dockerfile within the repository."
                      },
                      "dockerBuildContext": {
                        "type": "string",
                        "title": "Path to Dockerfile Build Context within the repository.",
                        "description": "Path to Dockerfile Build Context within the repository."
                      },
                      "deploymentProperties": {
                        "type": "object",
                        "properties": {
                          "manifestType": {
                            "type": "string",
                            "enum": [
                              "helm",
                              "kube",
                              "kustomize"
                            ],
                            "x-ms-enum": {
                              "name": "ManifestType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "helm",
                                  "description": "Repositories using helm"
                                },
                                {
                                  "value": "kube",
                                  "description": "Repositories using kubernetes manifests"
                                }
                              ]
                            },
                            "description": "Determines the type of manifests within the repository."
                          },
                          "kubeManifestLocations": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "helmChartPath": {
                            "type": "string",
                            "description": "Helm chart directory path in repository."
                          },
                          "helmValues": {
                            "type": "string",
                            "description": "Helm Values.yaml file location in repository."
                          },
                          "overrides": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "title": "Manifest override values.",
                            "description": "Manifest override values."
                          }
                        }
                      },
                      "namespace": {
                        "type": "string",
                        "description": "Kubernetes namespace the application is deployed to.",
                        "title": "The Kubernetes namespace the application is deployed to"
                      },
                      "acr": {
                        "type": "object",
                        "description": "Information on the azure container registry",
                        "properties": {
                          "acrSubscriptionId": {
                            "type": "string",
                            "description": "ACR subscription id"
                          },
                          "acrResourceGroup": {
                            "type": "string",
                            "description": "ACR resource group"
                          },
                          "acrRegistryName": {
                            "type": "string",
                            "description": "ACR registry"
                          },
                          "acrRepositoryName": {
                            "type": "string",
                            "description": "ACR repository"
                          }
                        }
                      },
                      "oidcCredentials": {
                        "type": "object",
                        "description": "The fields needed for OIDC with GitHub.",
                        "properties": {
                          "azureClientId": {
                            "type": "string",
                            "description": "Azure Application Client ID"
                          },
                          "azureTenantId": {
                            "type": "string",
                            "description": "Azure Directory (tenant) ID"
                          }
                        }
                      },
                      "aksResourceId": {
                        "type": "string",
                        "description": "The Azure Kubernetes Cluster Resource the application will be deployed to.",
                        "title": "The Azure Kubernetes Managed Cluster resource."
                      },
                      "prURL": {
                        "type": "string",
                        "description": "The URL to the Pull Request submitted against the users repository.",
                        "readOnly": true
                      },
                      "pullNumber": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true,
                        "description": "The number associated with the submitted pull request."
                      },
                      "prStatus": {
                        "type": "string",
                        "readOnly": true,
                        "enum": [
                          "unknown",
                          "submitted",
                          "merged",
                          "removed"
                        ],
                        "x-ms-enum": {
                          "name": "PullRequestStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "unknown",
                              "description": "Pull Request state unknown."
                            },
                            {
                              "value": "submitted",
                              "description": "Pull Request submitted to repository."
                            },
                            {
                              "value": "merged",
                              "description": "Pull Request merged into repository."
                            },
                            {
                              "value": "removed",
                              "description": "Workflow no longer found within repository."
                            }
                          ]
                        },
                        "description": "The status of the Pull Request submitted against the users repository."
                      },
                      "lastWorkflowRun": {
                        "type": "object",
                        "properties": {
                          "succeeded": {
                            "type": "boolean",
                            "readOnly": true,
                            "description": "Describes if the workflow run succeeded."
                          },
                          "workflowRunURL": {
                            "type": "string",
                            "readOnly": true,
                            "description": "URL to the run of the workflow."
                          },
                          "lastRunAt": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "description": "The timestamp of the last workflow run."
                          },
                          "workflowRunStatus": {
                            "type": "string",
                            "enum": [
                              "queued",
                              "inprogress",
                              "completed"
                            ],
                            "x-ms-enum": {
                              "name": "WorkflowRunStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "queued",
                                  "description": "Workflow run is queued"
                                },
                                {
                                  "value": "inprogress",
                                  "description": "Workflow run is inprogress"
                                },
                                {
                                  "value": "completed",
                                  "description": "Workflow run is completed"
                                }
                              ]
                            },
                            "description": "Describes the status of the workflow run"
                          }
                        }
                      },
                      "authStatus": {
                        "type": "string",
                        "enum": [
                          "Authorized",
                          "NotFound",
                          "Error"
                        ],
                        "readOnly": true,
                        "x-ms-enum": {
                          "name": "AuthorizationStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "Authorized",
                              "description": "Requests authorized successfully"
                            },
                            {
                              "value": "NotFound",
                              "description": "Requests returned NotFound response"
                            },
                            {
                              "value": "Error",
                              "description": "Requests returned other error response"
                            }
                          ]
                        },
                        "description": "Determines the authorization status of requests."
                      }
                    }
                  },
                  "artifactGenerationProperties": {
                    "description": "Properties for generating artifacts like dockerfile and manifests.",
                    "x-ms-client-flatten": true,
                    "title": "Artifact Generation Properties",
                    "type": "object",
                    "properties": {
                      "generationLanguage": {
                        "type": "string",
                        "enum": [
                          "clojure",
                          "csharp",
                          "erlang",
                          "go",
                          "gomodule",
                          "gradle",
                          "java",
                          "javascript",
                          "php",
                          "python",
                          "ruby",
                          "rust",
                          "swift"
                        ],
                        "x-ms-enum": {
                          "name": "GenerationLanguage",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "clojure",
                              "description": "clojure language"
                            },
                            {
                              "value": "csharp",
                              "description": "csharp language"
                            },
                            {
                              "value": "erlang",
                              "description": "erlang language"
                            },
                            {
                              "value": "go",
                              "description": "go language"
                            },
                            {
                              "value": "gomodule",
                              "description": "gomodule language"
                            },
                            {
                              "value": "gradle",
                              "description": "gradle language"
                            },
                            {
                              "value": "java",
                              "description": "java language"
                            },
                            {
                              "value": "javascript",
                              "description": "javascript language"
                            },
                            {
                              "value": "php",
                              "description": "php language"
                            },
                            {
                              "value": "python",
                              "description": "python language"
                            },
                            {
                              "value": "ruby",
                              "description": "ruby language"
                            },
                            {
                              "value": "rust",
                              "description": "rust language"
                            },
                            {
                              "value": "swift",
                              "description": "swift language"
                            }
                          ]
                        },
                        "description": "The programming language used."
                      },
                      "languageVersion": {
                        "type": "string",
                        "description": "The version of the language image used for execution in the generated dockerfile."
                      },
                      "builderVersion": {
                        "type": "string",
                        "description": "The version of the language image used for building the code in the generated dockerfile."
                      },
                      "port": {
                        "type": "string",
                        "description": "The port the application is exposed on."
                      },
                      "appName": {
                        "type": "string",
                        "description": "The name of the app."
                      },
                      "dockerfileOutputDirectory": {
                        "type": "string",
                        "description": "The directory to output the generated Dockerfile to."
                      },
                      "manifestOutputDirectory": {
                        "type": "string",
                        "description": "The directory to output the generated manifests to."
                      },
                      "dockerfileGenerationMode": {
                        "type": "string",
                        "enum": [
                          "enabled",
                          "disabled"
                        ],
                        "x-ms-enum": {
                          "name": "DockerfileGenerationMode",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "enabled",
                              "description": "Dockerfiles will be generated"
                            },
                            {
                              "value": "disabled",
                              "description": "Dockerfiles will not be generated"
                            }
                          ]
                        },
                        "description": "The mode of generation to be used for generating Dockerfiles."
                      },
                      "manifestGenerationMode": {
                        "type": "string",
                        "enum": [
                          "enabled",
                          "disabled"
                        ],
                        "x-ms-enum": {
                          "name": "ManifestGenerationMode",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "enabled",
                              "description": "Manifests will be generated"
                            },
                            {
                              "value": "disabled",
                              "description": "Manifests will not be generated"
                            }
                          ]
                        },
                        "description": "The mode of generation to be used for generating Manifest."
                      },
                      "manifestType": {
                        "type": "string",
                        "enum": [
                          "helm",
                          "kube"
                        ],
                        "x-ms-enum": {
                          "name": "GenerationManifestType",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "helm",
                              "description": "Helm manifests"
                            },
                            {
                              "value": "kube",
                              "description": "Kubernetes manifests"
                            }
                          ]
                        },
                        "description": "Determines the type of manifests to be generated."
                      },
                      "imageName": {
                        "type": "string",
                        "description": "The name of the image to be generated."
                      },
                      "namespace": {
                        "type": "string",
                        "description": "The namespace to deploy the application to."
                      },
                      "imageTag": {
                        "type": "string",
                        "description": "The tag to apply to the generated image."
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "The list of workflows."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to the next set of workflow results.",
          "readOnly": true
        }
      },
      "description": "The response from List Workflows operation."
    },
    "PullRequestStatus": {
      "type": "string",
      "readOnly": true,
      "enum": [
        "unknown",
        "submitted",
        "merged",
        "removed"
      ],
      "x-ms-enum": {
        "name": "PullRequestStatus",
        "modelAsString": true,
        "values": [
          {
            "value": "unknown",
            "description": "Pull Request state unknown."
          },
          {
            "value": "submitted",
            "description": "Pull Request submitted to repository."
          },
          {
            "value": "merged",
            "description": "Pull Request merged into repository."
          },
          {
            "value": "removed",
            "description": "Workflow no longer found within repository."
          }
        ]
      },
      "description": "The status of the Pull Request submitted against the users repository."
    },
    "DeploymentProperties": {
      "type": "object",
      "properties": {
        "manifestType": {
          "type": "string",
          "enum": [
            "helm",
            "kube",
            "kustomize"
          ],
          "x-ms-enum": {
            "name": "ManifestType",
            "modelAsString": true,
            "values": [
              {
                "value": "helm",
                "description": "Repositories using helm"
              },
              {
                "value": "kube",
                "description": "Repositories using kubernetes manifests"
              }
            ]
          },
          "description": "Determines the type of manifests within the repository."
        },
        "kubeManifestLocations": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "helmChartPath": {
          "type": "string",
          "description": "Helm chart directory path in repository."
        },
        "helmValues": {
          "type": "string",
          "description": "Helm Values.yaml file location in repository."
        },
        "overrides": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Manifest override values.",
          "description": "Manifest override values."
        }
      }
    },
    "ArtifactGenerationProperties": {
      "description": "Properties used for generating artifacts such as Dockerfiles and manifests.",
      "title": "Artifact Generation Properties",
      "type": "object",
      "properties": {
        "generationLanguage": {
          "type": "string",
          "enum": [
            "clojure",
            "csharp",
            "erlang",
            "go",
            "gomodule",
            "gradle",
            "java",
            "javascript",
            "php",
            "python",
            "ruby",
            "rust",
            "swift"
          ],
          "x-ms-enum": {
            "name": "GenerationLanguage",
            "modelAsString": true,
            "values": [
              {
                "value": "clojure",
                "description": "clojure language"
              },
              {
                "value": "csharp",
                "description": "csharp language"
              },
              {
                "value": "erlang",
                "description": "erlang language"
              },
              {
                "value": "go",
                "description": "go language"
              },
              {
                "value": "gomodule",
                "description": "gomodule language"
              },
              {
                "value": "gradle",
                "description": "gradle language"
              },
              {
                "value": "java",
                "description": "java language"
              },
              {
                "value": "javascript",
                "description": "javascript language"
              },
              {
                "value": "php",
                "description": "php language"
              },
              {
                "value": "python",
                "description": "python language"
              },
              {
                "value": "ruby",
                "description": "ruby language"
              },
              {
                "value": "rust",
                "description": "rust language"
              },
              {
                "value": "swift",
                "description": "swift language"
              }
            ]
          },
          "description": "The programming language used."
        },
        "languageVersion": {
          "type": "string",
          "description": "The version of the language image used for execution in the generated dockerfile."
        },
        "builderVersion": {
          "type": "string",
          "description": "The version of the language image used for building the code in the generated dockerfile."
        },
        "port": {
          "type": "string",
          "description": "The port the application is exposed on."
        },
        "appName": {
          "type": "string",
          "description": "The name of the app."
        },
        "dockerfileOutputDirectory": {
          "type": "string",
          "description": "The directory to output the generated Dockerfile to."
        },
        "manifestOutputDirectory": {
          "type": "string",
          "description": "The directory to output the generated manifests to."
        },
        "dockerfileGenerationMode": {
          "type": "string",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "DockerfileGenerationMode",
            "modelAsString": true,
            "values": [
              {
                "value": "enabled",
                "description": "Dockerfiles will be generated"
              },
              {
                "value": "disabled",
                "description": "Dockerfiles will not be generated"
              }
            ]
          },
          "description": "The mode of generation to be used for generating Dockerfiles."
        },
        "manifestGenerationMode": {
          "type": "string",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-ms-enum": {
            "name": "ManifestGenerationMode",
            "modelAsString": true,
            "values": [
              {
                "value": "enabled",
                "description": "Manifests will be generated"
              },
              {
                "value": "disabled",
                "description": "Manifests will not be generated"
              }
            ]
          },
          "description": "The mode of generation to be used for generating Manifest."
        },
        "manifestType": {
          "type": "string",
          "enum": [
            "helm",
            "kube"
          ],
          "x-ms-enum": {
            "name": "GenerationManifestType",
            "modelAsString": true,
            "values": [
              {
                "value": "helm",
                "description": "Helm manifests"
              },
              {
                "value": "kube",
                "description": "Kubernetes manifests"
              }
            ]
          },
          "description": "Determines the type of manifests to be generated."
        },
        "imageName": {
          "type": "string",
          "description": "The name of the image to be generated."
        },
        "namespace": {
          "type": "string",
          "description": "The namespace to deploy the application to."
        },
        "imageTag": {
          "type": "string",
          "description": "The tag to apply to the generated image."
        }
      }
    },
    "ManifestType": {
      "type": "string",
      "enum": [
        "helm",
        "kube",
        "kustomize"
      ],
      "x-ms-enum": {
        "name": "ManifestType",
        "modelAsString": true,
        "values": [
          {
            "value": "helm",
            "description": "Repositories using helm"
          },
          {
            "value": "kube",
            "description": "Repositories using kubernetes manifests"
          }
        ]
      },
      "description": "Determines the type of manifests within the repository."
    },
    "AuthorizationStatus": {
      "type": "string",
      "enum": [
        "Authorized",
        "NotFound",
        "Error"
      ],
      "readOnly": true,
      "x-ms-enum": {
        "name": "AuthorizationStatus",
        "modelAsString": true,
        "values": [
          {
            "value": "Authorized",
            "description": "Requests authorized successfully"
          },
          {
            "value": "NotFound",
            "description": "Requests returned NotFound response"
          },
          {
            "value": "Error",
            "description": "Requests returned other error response"
          }
        ]
      },
      "description": "Determines the authorization status of requests."
    },
    "GenerationLanguage": {
      "type": "string",
      "enum": [
        "clojure",
        "csharp",
        "erlang",
        "go",
        "gomodule",
        "gradle",
        "java",
        "javascript",
        "php",
        "python",
        "ruby",
        "rust",
        "swift"
      ],
      "x-ms-enum": {
        "name": "GenerationLanguage",
        "modelAsString": true,
        "values": [
          {
            "value": "clojure",
            "description": "clojure language"
          },
          {
            "value": "csharp",
            "description": "csharp language"
          },
          {
            "value": "erlang",
            "description": "erlang language"
          },
          {
            "value": "go",
            "description": "go language"
          },
          {
            "value": "gomodule",
            "description": "gomodule language"
          },
          {
            "value": "gradle",
            "description": "gradle language"
          },
          {
            "value": "java",
            "description": "java language"
          },
          {
            "value": "javascript",
            "description": "javascript language"
          },
          {
            "value": "php",
            "description": "php language"
          },
          {
            "value": "python",
            "description": "python language"
          },
          {
            "value": "ruby",
            "description": "ruby language"
          },
          {
            "value": "rust",
            "description": "rust language"
          },
          {
            "value": "swift",
            "description": "swift language"
          }
        ]
      },
      "description": "The programming language used."
    },
    "ManifestGenerationMode": {
      "type": "string",
      "enum": [
        "enabled",
        "disabled"
      ],
      "x-ms-enum": {
        "name": "ManifestGenerationMode",
        "modelAsString": true,
        "values": [
          {
            "value": "enabled",
            "description": "Manifests will be generated"
          },
          {
            "value": "disabled",
            "description": "Manifests will not be generated"
          }
        ]
      },
      "description": "The mode of generation to be used for generating Manifest."
    },
    "DockerfileGenerationMode": {
      "type": "string",
      "enum": [
        "enabled",
        "disabled"
      ],
      "x-ms-enum": {
        "name": "DockerfileGenerationMode",
        "modelAsString": true,
        "values": [
          {
            "value": "enabled",
            "description": "Dockerfiles will be generated"
          },
          {
            "value": "disabled",
            "description": "Dockerfiles will not be generated"
          }
        ]
      },
      "description": "The mode of generation to be used for generating Dockerfiles."
    },
    "GenerationManifestType": {
      "type": "string",
      "enum": [
        "helm",
        "kube"
      ],
      "x-ms-enum": {
        "name": "GenerationManifestType",
        "modelAsString": true,
        "values": [
          {
            "value": "helm",
            "description": "Helm manifests"
          },
          {
            "value": "kube",
            "description": "Kubernetes manifests"
          }
        ]
      },
      "description": "Determines the type of manifests to be generated."
    },
    "WorkflowRun": {
      "type": "object",
      "properties": {
        "succeeded": {
          "type": "boolean",
          "readOnly": true,
          "description": "Describes if the workflow run succeeded."
        },
        "workflowRunURL": {
          "type": "string",
          "readOnly": true,
          "description": "URL to the run of the workflow."
        },
        "lastRunAt": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "The timestamp of the last workflow run."
        },
        "workflowRunStatus": {
          "type": "string",
          "enum": [
            "queued",
            "inprogress",
            "completed"
          ],
          "x-ms-enum": {
            "name": "WorkflowRunStatus",
            "modelAsString": true,
            "values": [
              {
                "value": "queued",
                "description": "Workflow run is queued"
              },
              {
                "value": "inprogress",
                "description": "Workflow run is inprogress"
              },
              {
                "value": "completed",
                "description": "Workflow run is completed"
              }
            ]
          },
          "description": "Describes the status of the workflow run"
        }
      }
    },
    "WorkflowRunStatus": {
      "type": "string",
      "enum": [
        "queued",
        "inprogress",
        "completed"
      ],
      "x-ms-enum": {
        "name": "WorkflowRunStatus",
        "modelAsString": true,
        "values": [
          {
            "value": "queued",
            "description": "Workflow run is queued"
          },
          {
            "value": "inprogress",
            "description": "Workflow run is inprogress"
          },
          {
            "value": "completed",
            "description": "Workflow run is completed"
          }
        ]
      },
      "description": "Describes the status of the workflow run"
    },
    "ACR": {
      "type": "object",
      "description": "Information on the azure container registry",
      "properties": {
        "acrSubscriptionId": {
          "type": "string",
          "description": "ACR subscription id"
        },
        "acrResourceGroup": {
          "type": "string",
          "description": "ACR resource group"
        },
        "acrRegistryName": {
          "type": "string",
          "description": "ACR registry"
        },
        "acrRepositoryName": {
          "type": "string",
          "description": "ACR repository"
        }
      }
    },
    "GeneratePreviewArtifactsResponse": {
      "type": "object",
      "description": "Dockerfile and manifest artifacts generated as a preview are returned as a map<path string,content string>",
      "additionalProperties": {
        "type": "string"
      }
    },
    "GitHubOAuthInfoResponse": {
      "type": "object",
      "description": "URL used to authorize the Developer Hub GitHub App",
      "properties": {
        "authURL": {
          "type": "string",
          "description": "URL for authorizing the Developer Hub GitHub App"
        },
        "token": {
          "type": "string",
          "description": "OAuth token used to make calls to GitHub"
        }
      }
    },
    "TagsObject": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "x-ms-mutability": [
        "read",
        "create",
        "update"
      ],
      "description": "Resource tags."
    },
    "DeleteWorkflowResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "description": "delete status message"
        }
      },
      "description": "delete response if content must be provided on delete operation"
    },
    "GitHubOAuthCallRequest": {
      "type": "object",
      "properties": {
        "redirectUrl": {
          "type": "string",
          "description": "The URL the client will redirect to on successful authentication. If empty, no redirect will occur."
        }
      },
      "description": "GitHubOAuth request object"
    },
    "GitHubOAuthResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "Properties of a workflow.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "username": {
              "type": "string",
              "description": "user making request"
            }
          }
        }
      },
      "description": "Singleton response of GitHubOAuth containing "
    },
    "GitHubOAuthProperties": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "description": "user making request"
        }
      },
      "description": "The response from List GitHubOAuth operation."
    },
    "GitHubOAuthListResponse": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "Properties of a workflow.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "user making request"
                  }
                }
              }
            },
            "description": "Singleton response of GitHubOAuth containing "
          },
          "description": "Singleton list response containing one GitHubOAuthResponse response"
        }
      },
      "description": "The response from List GitHubOAuth operation."
    }
  },
  "parameters": {
    "ManagedClusterParameter": {
      "name": "managedClusterResource",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "The ManagedCluster resource associated with the workflows.",
      "x-ms-parameter-location": "method"
    },
    "WorkflowNameParameter": {
      "name": "workflowName",
      "in": "path",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 63,
      "pattern": "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$",
      "description": "The name of the workflow resource.",
      "x-ms-parameter-location": "method"
    },
    "GitHubOAuthCodeParameter": {
      "name": "code",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The code response from authenticating the GitHub App.",
      "x-ms-parameter-location": "method"
    },
    "GitHubOAuthStateParameter": {
      "name": "state",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The state response from authenticating the GitHub App.",
      "x-ms-parameter-location": "method"
    }
  }
}