{
  "swagger": "2.0",
  "info": {
    "title": "Azure devtestlab",
    "version": "2018-09-15",
    "description": "Azure devtestlab service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/providers/Microsoft.DevTestLab/operations": {
      "get": {
        "operationId": "ProviderOperations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of operations supported by the resource provider",
                  "items": {
                    "type": "object",
                    "title": "REST API Operation",
                    "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
                        "readOnly": true
                      },
                      "isDataAction": {
                        "type": "boolean",
                        "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
                        "readOnly": true
                      },
                      "display": {
                        "type": "object",
                        "description": "Localized display information for this particular operation.",
                        "properties": {
                          "provider": {
                            "type": "string",
                            "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
                            "readOnly": true
                          },
                          "resource": {
                            "type": "string",
                            "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
                            "readOnly": true
                          },
                          "operation": {
                            "type": "string",
                            "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
                            "readOnly": true
                          },
                          "description": {
                            "type": "string",
                            "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
                            "readOnly": true
                          }
                        }
                      },
                      "origin": {
                        "type": "string",
                        "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
                        "enum": [
                          "user",
                          "system",
                          "user,system"
                        ],
                        "x-ms-enum": {
                          "name": "Origin",
                          "modelAsString": true
                        },
                        "readOnly": true
                      },
                      "actionType": {
                        "type": "string",
                        "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
                        "enum": [
                          "Internal"
                        ],
                        "x-ms-enum": {
                          "name": "ActionType",
                          "modelAsString": true
                        },
                        "readOnly": true
                      }
                    }
                  },
                  "readOnly": true,
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "nextLink": {
                  "type": "string",
                  "description": "URL to get the next set of operation list results (if there are any).",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DevTestLab/labs": {
      "get": {
        "operationId": "Labs_ListBySubscription",
        "tags": [
          "Labs"
        ],
        "description": "List labs in a subscription.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=defaultStorageAccount)'",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply to the operation. Example: '$filter=contains(name,'myName')",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: '$top=10'",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "The ordering expression for the results, using OData notation. Example: '$orderby=name desc'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Lab items on this page",
                  "items": {
                    "type": "object",
                    "description": "A lab.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The identifier of the resource.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource.",
                        "readOnly": true
                      },
                      "location": {
                        "type": "string",
                        "description": "The location of the resource."
                      },
                      "tags": {
                        "type": "object",
                        "description": "The tags of the resource.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "properties": {
                        "description": "The properties of the resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "defaultStorageAccount": {
                            "type": "string",
                            "description": "The lab's default storage account.",
                            "readOnly": true
                          },
                          "defaultPremiumStorageAccount": {
                            "type": "string",
                            "description": "The lab's default premium storage account.",
                            "readOnly": true
                          },
                          "artifactsStorageAccount": {
                            "type": "string",
                            "description": "The lab's artifact storage account.",
                            "readOnly": true
                          },
                          "premiumDataDiskStorageAccount": {
                            "type": "string",
                            "description": "The lab's premium data disk storage account.",
                            "readOnly": true
                          },
                          "vaultName": {
                            "type": "string",
                            "description": "The lab's Key vault.",
                            "readOnly": true
                          },
                          "labStorageType": {
                            "type": "string",
                            "description": "Type of storage used by the lab. It can be either Premium or Standard. Default is Premium.",
                            "default": "Premium",
                            "enum": [
                              "Standard",
                              "Premium",
                              "StandardSSD"
                            ],
                            "x-ms-enum": {
                              "name": "StorageType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Standard",
                                  "value": "Standard"
                                },
                                {
                                  "name": "Premium",
                                  "value": "Premium"
                                },
                                {
                                  "name": "StandardSSD",
                                  "value": "StandardSSD"
                                }
                              ]
                            }
                          },
                          "mandatoryArtifactsResourceIdsLinux": {
                            "type": "array",
                            "description": "The ordered list of artifact resource IDs that should be applied on all Linux VM creations by default, prior to the artifacts specified by the user.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "mandatoryArtifactsResourceIdsWindows": {
                            "type": "array",
                            "description": "The ordered list of artifact resource IDs that should be applied on all Windows VM creations by default, prior to the artifacts specified by the user.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "createdDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The creation date of the lab.",
                            "readOnly": true
                          },
                          "premiumDataDisks": {
                            "description": "The setting to enable usage of premium data disks.\nWhen its value is 'Enabled', creation of standard or premium data disks is allowed.\nWhen its value is 'Disabled', only creation of standard data disks is allowed.",
                            "type": "string",
                            "enum": [
                              "Disabled",
                              "Enabled"
                            ],
                            "x-ms-enum": {
                              "name": "PremiumDataDisk",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Disabled",
                                  "value": "Disabled"
                                },
                                {
                                  "name": "Enabled",
                                  "value": "Enabled"
                                }
                              ]
                            }
                          },
                          "environmentPermission": {
                            "description": "The access rights to be granted to the user when provisioning an environment",
                            "type": "string",
                            "enum": [
                              "Reader",
                              "Contributor"
                            ],
                            "x-ms-enum": {
                              "name": "EnvironmentPermission",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Reader",
                                  "value": "Reader"
                                },
                                {
                                  "name": "Contributor",
                                  "value": "Contributor"
                                }
                              ]
                            }
                          },
                          "announcement": {
                            "description": "The properties of any lab announcement associated with this lab",
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "description": "The plain text title for the lab announcement"
                              },
                              "markdown": {
                                "type": "string",
                                "description": "The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown."
                              },
                              "enabled": {
                                "description": "Is the lab announcement active/enabled at this time?",
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "EnableStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled"
                                    }
                                  ]
                                }
                              },
                              "expirationDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time at which the announcement expires (null for never)"
                              },
                              "expired": {
                                "type": "boolean",
                                "description": "Has this announcement expired?"
                              },
                              "provisioningState": {
                                "type": "string",
                                "description": "The provisioning status of the resource.",
                                "readOnly": true
                              },
                              "uniqueIdentifier": {
                                "type": "string",
                                "description": "The unique immutable identifier of a resource (Guid).",
                                "readOnly": true
                              }
                            }
                          },
                          "support": {
                            "description": "The properties of any lab support message associated with this lab",
                            "type": "object",
                            "properties": {
                              "enabled": {
                                "description": "Is the lab support banner active/enabled at this time?",
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "EnableStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled"
                                    }
                                  ]
                                }
                              },
                              "markdown": {
                                "type": "string",
                                "description": "The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown."
                              }
                            }
                          },
                          "vmCreationResourceGroup": {
                            "type": "string",
                            "description": "The resource group in which all new lab virtual machines will be created. To let DevTest Labs manage resource group creation, set this value to null.",
                            "readOnly": true
                          },
                          "publicIpId": {
                            "type": "string",
                            "description": "The public IP address for the lab's load balancer.",
                            "readOnly": true
                          },
                          "loadBalancerId": {
                            "type": "string",
                            "description": "The load balancer used to for lab VMs that use shared IP address.",
                            "readOnly": true
                          },
                          "networkSecurityGroupId": {
                            "type": "string",
                            "description": "The Network Security Group attached to the lab VMs Network interfaces to restrict open ports.",
                            "readOnly": true
                          },
                          "extendedProperties": {
                            "type": "object",
                            "description": "Extended properties of the lab used for experimental features",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "provisioningState": {
                            "type": "string",
                            "description": "The provisioning status of the resource.",
                            "readOnly": true
                          },
                          "uniqueIdentifier": {
                            "type": "string",
                            "description": "The unique immutable identifier of a resource (Guid).",
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "required": [
                      "properties"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DevTestLab/locations/{locationName}/operations/{name}": {
      "get": {
        "operationId": "Operations_Get",
        "description": "Get operation.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "locationName",
            "in": "path",
            "description": "The name of the location.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the operation.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "An Operation Result",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "The operation status."
                },
                "statusCode": {
                  "description": "The status code for the operation.",
                  "type": "string",
                  "enum": [
                    "Continue",
                    "SwitchingProtocols",
                    "OK",
                    "Created",
                    "Accepted",
                    "NonAuthoritativeInformation",
                    "NoContent",
                    "ResetContent",
                    "PartialContent",
                    "MultipleChoices",
                    "Ambiguous",
                    "MovedPermanently",
                    "Moved",
                    "Found",
                    "Redirect",
                    "SeeOther",
                    "RedirectMethod",
                    "NotModified",
                    "UseProxy",
                    "Unused",
                    "TemporaryRedirect",
                    "RedirectKeepVerb",
                    "BadRequest",
                    "Unauthorized",
                    "PaymentRequired",
                    "Forbidden",
                    "NotFound",
                    "MethodNotAllowed",
                    "NotAcceptable",
                    "ProxyAuthenticationRequired",
                    "RequestTimeout",
                    "Conflict",
                    "Gone",
                    "LengthRequired",
                    "PreconditionFailed",
                    "RequestEntityTooLarge",
                    "RequestUriTooLong",
                    "UnsupportedMediaType",
                    "RequestedRangeNotSatisfiable",
                    "ExpectationFailed",
                    "UpgradeRequired",
                    "InternalServerError",
                    "NotImplemented",
                    "BadGateway",
                    "ServiceUnavailable",
                    "GatewayTimeout",
                    "HttpVersionNotSupported"
                  ],
                  "x-ms-enum": {
                    "name": "HttpStatusCode",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Continue",
                        "value": "Continue"
                      },
                      {
                        "name": "SwitchingProtocols",
                        "value": "SwitchingProtocols"
                      },
                      {
                        "name": "OK",
                        "value": "OK"
                      },
                      {
                        "name": "Created",
                        "value": "Created"
                      },
                      {
                        "name": "Accepted",
                        "value": "Accepted"
                      },
                      {
                        "name": "NonAuthoritativeInformation",
                        "value": "NonAuthoritativeInformation"
                      },
                      {
                        "name": "NoContent",
                        "value": "NoContent"
                      },
                      {
                        "name": "ResetContent",
                        "value": "ResetContent"
                      },
                      {
                        "name": "PartialContent",
                        "value": "PartialContent"
                      },
                      {
                        "name": "MultipleChoices",
                        "value": "MultipleChoices"
                      },
                      {
                        "name": "Ambiguous",
                        "value": "Ambiguous"
                      },
                      {
                        "name": "MovedPermanently",
                        "value": "MovedPermanently"
                      },
                      {
                        "name": "Moved",
                        "value": "Moved"
                      },
                      {
                        "name": "Found",
                        "value": "Found"
                      },
                      {
                        "name": "Redirect",
                        "value": "Redirect"
                      },
                      {
                        "name": "SeeOther",
                        "value": "SeeOther"
                      },
                      {
                        "name": "RedirectMethod",
                        "value": "RedirectMethod"
                      },
                      {
                        "name": "NotModified",
                        "value": "NotModified"
                      },
                      {
                        "name": "UseProxy",
                        "value": "UseProxy"
                      },
                      {
                        "name": "Unused",
                        "value": "Unused"
                      },
                      {
                        "name": "TemporaryRedirect",
                        "value": "TemporaryRedirect"
                      },
                      {
                        "name": "RedirectKeepVerb",
                        "value": "RedirectKeepVerb"
                      },
                      {
                        "name": "BadRequest",
                        "value": "BadRequest"
                      },
                      {
                        "name": "Unauthorized",
                        "value": "Unauthorized"
                      },
                      {
                        "name": "PaymentRequired",
                        "value": "PaymentRequired"
                      },
                      {
                        "name": "Forbidden",
                        "value": "Forbidden"
                      },
                      {
                        "name": "NotFound",
                        "value": "NotFound"
                      },
                      {
                        "name": "MethodNotAllowed",
                        "value": "MethodNotAllowed"
                      },
                      {
                        "name": "NotAcceptable",
                        "value": "NotAcceptable"
                      },
                      {
                        "name": "ProxyAuthenticationRequired",
                        "value": "ProxyAuthenticationRequired"
                      },
                      {
                        "name": "RequestTimeout",
                        "value": "RequestTimeout"
                      },
                      {
                        "name": "Conflict",
                        "value": "Conflict"
                      },
                      {
                        "name": "Gone",
                        "value": "Gone"
                      },
                      {
                        "name": "LengthRequired",
                        "value": "LengthRequired"
                      },
                      {
                        "name": "PreconditionFailed",
                        "value": "PreconditionFailed"
                      },
                      {
                        "name": "RequestEntityTooLarge",
                        "value": "RequestEntityTooLarge"
                      },
                      {
                        "name": "RequestUriTooLong",
                        "value": "RequestUriTooLong"
                      },
                      {
                        "name": "UnsupportedMediaType",
                        "value": "UnsupportedMediaType"
                      },
                      {
                        "name": "RequestedRangeNotSatisfiable",
                        "value": "RequestedRangeNotSatisfiable"
                      },
                      {
                        "name": "ExpectationFailed",
                        "value": "ExpectationFailed"
                      },
                      {
                        "name": "UpgradeRequired",
                        "value": "UpgradeRequired"
                      },
                      {
                        "name": "InternalServerError",
                        "value": "InternalServerError"
                      },
                      {
                        "name": "NotImplemented",
                        "value": "NotImplemented"
                      },
                      {
                        "name": "BadGateway",
                        "value": "BadGateway"
                      },
                      {
                        "name": "ServiceUnavailable",
                        "value": "ServiceUnavailable"
                      },
                      {
                        "name": "GatewayTimeout",
                        "value": "GatewayTimeout"
                      },
                      {
                        "name": "HttpVersionNotSupported",
                        "value": "HttpVersionNotSupported"
                      }
                    ]
                  }
                },
                "error": {
                  "description": "Error details for the operation in case of a failure.",
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "The error code of the operation error."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message of the operation error."
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Response for operations that return with 202 Accepted status code.",
            "schema": {
              "type": "object",
              "description": "An Operation Result",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "The operation status."
                },
                "statusCode": {
                  "description": "The status code for the operation.",
                  "type": "string",
                  "enum": [
                    "Continue",
                    "SwitchingProtocols",
                    "OK",
                    "Created",
                    "Accepted",
                    "NonAuthoritativeInformation",
                    "NoContent",
                    "ResetContent",
                    "PartialContent",
                    "MultipleChoices",
                    "Ambiguous",
                    "MovedPermanently",
                    "Moved",
                    "Found",
                    "Redirect",
                    "SeeOther",
                    "RedirectMethod",
                    "NotModified",
                    "UseProxy",
                    "Unused",
                    "TemporaryRedirect",
                    "RedirectKeepVerb",
                    "BadRequest",
                    "Unauthorized",
                    "PaymentRequired",
                    "Forbidden",
                    "NotFound",
                    "MethodNotAllowed",
                    "NotAcceptable",
                    "ProxyAuthenticationRequired",
                    "RequestTimeout",
                    "Conflict",
                    "Gone",
                    "LengthRequired",
                    "PreconditionFailed",
                    "RequestEntityTooLarge",
                    "RequestUriTooLong",
                    "UnsupportedMediaType",
                    "RequestedRangeNotSatisfiable",
                    "ExpectationFailed",
                    "UpgradeRequired",
                    "InternalServerError",
                    "NotImplemented",
                    "BadGateway",
                    "ServiceUnavailable",
                    "GatewayTimeout",
                    "HttpVersionNotSupported"
                  ],
                  "x-ms-enum": {
                    "name": "HttpStatusCode",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Continue",
                        "value": "Continue"
                      },
                      {
                        "name": "SwitchingProtocols",
                        "value": "SwitchingProtocols"
                      },
                      {
                        "name": "OK",
                        "value": "OK"
                      },
                      {
                        "name": "Created",
                        "value": "Created"
                      },
                      {
                        "name": "Accepted",
                        "value": "Accepted"
                      },
                      {
                        "name": "NonAuthoritativeInformation",
                        "value": "NonAuthoritativeInformation"
                      },
                      {
                        "name": "NoContent",
                        "value": "NoContent"
                      },
                      {
                        "name": "ResetContent",
                        "value": "ResetContent"
                      },
                      {
                        "name": "PartialContent",
                        "value": "PartialContent"
                      },
                      {
                        "name": "MultipleChoices",
                        "value": "MultipleChoices"
                      },
                      {
                        "name": "Ambiguous",
                        "value": "Ambiguous"
                      },
                      {
                        "name": "MovedPermanently",
                        "value": "MovedPermanently"
                      },
                      {
                        "name": "Moved",
                        "value": "Moved"
                      },
                      {
                        "name": "Found",
                        "value": "Found"
                      },
                      {
                        "name": "Redirect",
                        "value": "Redirect"
                      },
                      {
                        "name": "SeeOther",
                        "value": "SeeOther"
                      },
                      {
                        "name": "RedirectMethod",
                        "value": "RedirectMethod"
                      },
                      {
                        "name": "NotModified",
                        "value": "NotModified"
                      },
                      {
                        "name": "UseProxy",
                        "value": "UseProxy"
                      },
                      {
                        "name": "Unused",
                        "value": "Unused"
                      },
                      {
                        "name": "TemporaryRedirect",
                        "value": "TemporaryRedirect"
                      },
                      {
                        "name": "RedirectKeepVerb",
                        "value": "RedirectKeepVerb"
                      },
                      {
                        "name": "BadRequest",
                        "value": "BadRequest"
                      },
                      {
                        "name": "Unauthorized",
                        "value": "Unauthorized"
                      },
                      {
                        "name": "PaymentRequired",
                        "value": "PaymentRequired"
                      },
                      {
                        "name": "Forbidden",
                        "value": "Forbidden"
                      },
                      {
                        "name": "NotFound",
                        "value": "NotFound"
                      },
                      {
                        "name": "MethodNotAllowed",
                        "value": "MethodNotAllowed"
                      },
                      {
                        "name": "NotAcceptable",
                        "value": "NotAcceptable"
                      },
                      {
                        "name": "ProxyAuthenticationRequired",
                        "value": "ProxyAuthenticationRequired"
                      },
                      {
                        "name": "RequestTimeout",
                        "value": "RequestTimeout"
                      },
                      {
                        "name": "Conflict",
                        "value": "Conflict"
                      },
                      {
                        "name": "Gone",
                        "value": "Gone"
                      },
                      {
                        "name": "LengthRequired",
                        "value": "LengthRequired"
                      },
                      {
                        "name": "PreconditionFailed",
                        "value": "PreconditionFailed"
                      },
                      {
                        "name": "RequestEntityTooLarge",
                        "value": "RequestEntityTooLarge"
                      },
                      {
                        "name": "RequestUriTooLong",
                        "value": "RequestUriTooLong"
                      },
                      {
                        "name": "UnsupportedMediaType",
                        "value": "UnsupportedMediaType"
                      },
                      {
                        "name": "RequestedRangeNotSatisfiable",
                        "value": "RequestedRangeNotSatisfiable"
                      },
                      {
                        "name": "ExpectationFailed",
                        "value": "ExpectationFailed"
                      },
                      {
                        "name": "UpgradeRequired",
                        "value": "UpgradeRequired"
                      },
                      {
                        "name": "InternalServerError",
                        "value": "InternalServerError"
                      },
                      {
                        "name": "NotImplemented",
                        "value": "NotImplemented"
                      },
                      {
                        "name": "BadGateway",
                        "value": "BadGateway"
                      },
                      {
                        "name": "ServiceUnavailable",
                        "value": "ServiceUnavailable"
                      },
                      {
                        "name": "GatewayTimeout",
                        "value": "GatewayTimeout"
                      },
                      {
                        "name": "HttpVersionNotSupported",
                        "value": "HttpVersionNotSupported"
                      }
                    ]
                  }
                },
                "error": {
                  "description": "Error details for the operation in case of a failure.",
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "The error code of the operation error."
                    },
                    "message": {
                      "type": "string",
                      "description": "The error message of the operation error."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DevTestLab/schedules": {
      "get": {
        "operationId": "GlobalSchedules_ListBySubscription",
        "tags": [
          "GlobalSchedules"
        ],
        "description": "List schedules in a subscription.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=status)'",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply to the operation. Example: '$filter=contains(name,'myName')",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: '$top=10'",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "The ordering expression for the results, using OData notation. Example: '$orderby=name desc'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Schedule items on this page",
                  "items": {
                    "type": "object",
                    "description": "A schedule.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The identifier of the resource.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource.",
                        "readOnly": true
                      },
                      "location": {
                        "type": "string",
                        "description": "The location of the resource."
                      },
                      "tags": {
                        "type": "object",
                        "description": "The tags of the resource.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "properties": {
                        "description": "The properties of the resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "description": "The status of the schedule (i.e. Enabled, Disabled)",
                            "default": "Disabled",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "EnableStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled"
                                }
                              ]
                            }
                          },
                          "taskType": {
                            "type": "string",
                            "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                          },
                          "weeklyRecurrence": {
                            "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                            "type": "object",
                            "properties": {
                              "weekdays": {
                                "type": "array",
                                "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "time": {
                                "type": "string",
                                "description": "The time of the day the schedule will occur."
                              }
                            }
                          },
                          "dailyRecurrence": {
                            "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                            "type": "object",
                            "properties": {
                              "time": {
                                "type": "string",
                                "description": "The time of day the schedule will occur."
                              }
                            }
                          },
                          "hourlyRecurrence": {
                            "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                            "type": "object",
                            "properties": {
                              "minute": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Minutes of the hour the schedule will run."
                              }
                            }
                          },
                          "timeZoneId": {
                            "type": "string",
                            "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                          },
                          "notificationSettings": {
                            "description": "Notification settings.",
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string",
                                "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                "default": "Disabled",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "EnableStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled"
                                    }
                                  ]
                                }
                              },
                              "timeInMinutes": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Time in minutes before event at which notification will be sent."
                              },
                              "webhookUrl": {
                                "type": "string",
                                "description": "The webhook URL to which the notification will be sent."
                              },
                              "emailRecipient": {
                                "type": "string",
                                "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                              },
                              "notificationLocale": {
                                "type": "string",
                                "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                              }
                            }
                          },
                          "createdDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The creation date of the schedule.",
                            "readOnly": true
                          },
                          "targetResourceId": {
                            "type": "string",
                            "description": "The resource ID to which the schedule belongs"
                          },
                          "provisioningState": {
                            "type": "string",
                            "description": "The provisioning status of the resource.",
                            "readOnly": true
                          },
                          "uniqueIdentifier": {
                            "type": "string",
                            "description": "The unique immutable identifier of a resource (Guid).",
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "required": [
                      "properties"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs": {
      "get": {
        "operationId": "Labs_ListByResourceGroup",
        "tags": [
          "Labs"
        ],
        "description": "List labs in a resource group.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=defaultStorageAccount)'",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply to the operation. Example: '$filter=contains(name,'myName')",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: '$top=10'",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "The ordering expression for the results, using OData notation. Example: '$orderby=name desc'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Lab items on this page",
                  "items": {
                    "type": "object",
                    "description": "A lab.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The identifier of the resource.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource.",
                        "readOnly": true
                      },
                      "location": {
                        "type": "string",
                        "description": "The location of the resource."
                      },
                      "tags": {
                        "type": "object",
                        "description": "The tags of the resource.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "properties": {
                        "description": "The properties of the resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "defaultStorageAccount": {
                            "type": "string",
                            "description": "The lab's default storage account.",
                            "readOnly": true
                          },
                          "defaultPremiumStorageAccount": {
                            "type": "string",
                            "description": "The lab's default premium storage account.",
                            "readOnly": true
                          },
                          "artifactsStorageAccount": {
                            "type": "string",
                            "description": "The lab's artifact storage account.",
                            "readOnly": true
                          },
                          "premiumDataDiskStorageAccount": {
                            "type": "string",
                            "description": "The lab's premium data disk storage account.",
                            "readOnly": true
                          },
                          "vaultName": {
                            "type": "string",
                            "description": "The lab's Key vault.",
                            "readOnly": true
                          },
                          "labStorageType": {
                            "type": "string",
                            "description": "Type of storage used by the lab. It can be either Premium or Standard. Default is Premium.",
                            "default": "Premium",
                            "enum": [
                              "Standard",
                              "Premium",
                              "StandardSSD"
                            ],
                            "x-ms-enum": {
                              "name": "StorageType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Standard",
                                  "value": "Standard"
                                },
                                {
                                  "name": "Premium",
                                  "value": "Premium"
                                },
                                {
                                  "name": "StandardSSD",
                                  "value": "StandardSSD"
                                }
                              ]
                            }
                          },
                          "mandatoryArtifactsResourceIdsLinux": {
                            "type": "array",
                            "description": "The ordered list of artifact resource IDs that should be applied on all Linux VM creations by default, prior to the artifacts specified by the user.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "mandatoryArtifactsResourceIdsWindows": {
                            "type": "array",
                            "description": "The ordered list of artifact resource IDs that should be applied on all Windows VM creations by default, prior to the artifacts specified by the user.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "createdDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The creation date of the lab.",
                            "readOnly": true
                          },
                          "premiumDataDisks": {
                            "description": "The setting to enable usage of premium data disks.\nWhen its value is 'Enabled', creation of standard or premium data disks is allowed.\nWhen its value is 'Disabled', only creation of standard data disks is allowed.",
                            "type": "string",
                            "enum": [
                              "Disabled",
                              "Enabled"
                            ],
                            "x-ms-enum": {
                              "name": "PremiumDataDisk",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Disabled",
                                  "value": "Disabled"
                                },
                                {
                                  "name": "Enabled",
                                  "value": "Enabled"
                                }
                              ]
                            }
                          },
                          "environmentPermission": {
                            "description": "The access rights to be granted to the user when provisioning an environment",
                            "type": "string",
                            "enum": [
                              "Reader",
                              "Contributor"
                            ],
                            "x-ms-enum": {
                              "name": "EnvironmentPermission",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Reader",
                                  "value": "Reader"
                                },
                                {
                                  "name": "Contributor",
                                  "value": "Contributor"
                                }
                              ]
                            }
                          },
                          "announcement": {
                            "description": "The properties of any lab announcement associated with this lab",
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "description": "The plain text title for the lab announcement"
                              },
                              "markdown": {
                                "type": "string",
                                "description": "The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown."
                              },
                              "enabled": {
                                "description": "Is the lab announcement active/enabled at this time?",
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "EnableStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled"
                                    }
                                  ]
                                }
                              },
                              "expirationDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time at which the announcement expires (null for never)"
                              },
                              "expired": {
                                "type": "boolean",
                                "description": "Has this announcement expired?"
                              },
                              "provisioningState": {
                                "type": "string",
                                "description": "The provisioning status of the resource.",
                                "readOnly": true
                              },
                              "uniqueIdentifier": {
                                "type": "string",
                                "description": "The unique immutable identifier of a resource (Guid).",
                                "readOnly": true
                              }
                            }
                          },
                          "support": {
                            "description": "The properties of any lab support message associated with this lab",
                            "type": "object",
                            "properties": {
                              "enabled": {
                                "description": "Is the lab support banner active/enabled at this time?",
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "EnableStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled"
                                    }
                                  ]
                                }
                              },
                              "markdown": {
                                "type": "string",
                                "description": "The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown."
                              }
                            }
                          },
                          "vmCreationResourceGroup": {
                            "type": "string",
                            "description": "The resource group in which all new lab virtual machines will be created. To let DevTest Labs manage resource group creation, set this value to null.",
                            "readOnly": true
                          },
                          "publicIpId": {
                            "type": "string",
                            "description": "The public IP address for the lab's load balancer.",
                            "readOnly": true
                          },
                          "loadBalancerId": {
                            "type": "string",
                            "description": "The load balancer used to for lab VMs that use shared IP address.",
                            "readOnly": true
                          },
                          "networkSecurityGroupId": {
                            "type": "string",
                            "description": "The Network Security Group attached to the lab VMs Network interfaces to restrict open ports.",
                            "readOnly": true
                          },
                          "extendedProperties": {
                            "type": "object",
                            "description": "Extended properties of the lab used for experimental features",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "provisioningState": {
                            "type": "string",
                            "description": "The provisioning status of the resource.",
                            "readOnly": true
                          },
                          "uniqueIdentifier": {
                            "type": "string",
                            "description": "The unique immutable identifier of a resource (Guid).",
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "required": [
                      "properties"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}": {
      "get": {
        "operationId": "Labs_Get",
        "tags": [
          "Labs"
        ],
        "description": "Get lab.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=defaultStorageAccount)'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A lab.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "defaultStorageAccount": {
                      "type": "string",
                      "description": "The lab's default storage account.",
                      "readOnly": true
                    },
                    "defaultPremiumStorageAccount": {
                      "type": "string",
                      "description": "The lab's default premium storage account.",
                      "readOnly": true
                    },
                    "artifactsStorageAccount": {
                      "type": "string",
                      "description": "The lab's artifact storage account.",
                      "readOnly": true
                    },
                    "premiumDataDiskStorageAccount": {
                      "type": "string",
                      "description": "The lab's premium data disk storage account.",
                      "readOnly": true
                    },
                    "vaultName": {
                      "type": "string",
                      "description": "The lab's Key vault.",
                      "readOnly": true
                    },
                    "labStorageType": {
                      "type": "string",
                      "description": "Type of storage used by the lab. It can be either Premium or Standard. Default is Premium.",
                      "default": "Premium",
                      "enum": [
                        "Standard",
                        "Premium",
                        "StandardSSD"
                      ],
                      "x-ms-enum": {
                        "name": "StorageType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Standard",
                            "value": "Standard"
                          },
                          {
                            "name": "Premium",
                            "value": "Premium"
                          },
                          {
                            "name": "StandardSSD",
                            "value": "StandardSSD"
                          }
                        ]
                      }
                    },
                    "mandatoryArtifactsResourceIdsLinux": {
                      "type": "array",
                      "description": "The ordered list of artifact resource IDs that should be applied on all Linux VM creations by default, prior to the artifacts specified by the user.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "mandatoryArtifactsResourceIdsWindows": {
                      "type": "array",
                      "description": "The ordered list of artifact resource IDs that should be applied on all Windows VM creations by default, prior to the artifacts specified by the user.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the lab.",
                      "readOnly": true
                    },
                    "premiumDataDisks": {
                      "description": "The setting to enable usage of premium data disks.\nWhen its value is 'Enabled', creation of standard or premium data disks is allowed.\nWhen its value is 'Disabled', only creation of standard data disks is allowed.",
                      "type": "string",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "name": "PremiumDataDisk",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          },
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          }
                        ]
                      }
                    },
                    "environmentPermission": {
                      "description": "The access rights to be granted to the user when provisioning an environment",
                      "type": "string",
                      "enum": [
                        "Reader",
                        "Contributor"
                      ],
                      "x-ms-enum": {
                        "name": "EnvironmentPermission",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Reader",
                            "value": "Reader"
                          },
                          {
                            "name": "Contributor",
                            "value": "Contributor"
                          }
                        ]
                      }
                    },
                    "announcement": {
                      "description": "The properties of any lab announcement associated with this lab",
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string",
                          "description": "The plain text title for the lab announcement"
                        },
                        "markdown": {
                          "type": "string",
                          "description": "The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown."
                        },
                        "enabled": {
                          "description": "Is the lab announcement active/enabled at this time?",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "expirationDate": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time at which the announcement expires (null for never)"
                        },
                        "expired": {
                          "type": "boolean",
                          "description": "Has this announcement expired?"
                        },
                        "provisioningState": {
                          "type": "string",
                          "description": "The provisioning status of the resource.",
                          "readOnly": true
                        },
                        "uniqueIdentifier": {
                          "type": "string",
                          "description": "The unique immutable identifier of a resource (Guid).",
                          "readOnly": true
                        }
                      }
                    },
                    "support": {
                      "description": "The properties of any lab support message associated with this lab",
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "description": "Is the lab support banner active/enabled at this time?",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "markdown": {
                          "type": "string",
                          "description": "The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown."
                        }
                      }
                    },
                    "vmCreationResourceGroup": {
                      "type": "string",
                      "description": "The resource group in which all new lab virtual machines will be created. To let DevTest Labs manage resource group creation, set this value to null.",
                      "readOnly": true
                    },
                    "publicIpId": {
                      "type": "string",
                      "description": "The public IP address for the lab's load balancer.",
                      "readOnly": true
                    },
                    "loadBalancerId": {
                      "type": "string",
                      "description": "The load balancer used to for lab VMs that use shared IP address.",
                      "readOnly": true
                    },
                    "networkSecurityGroupId": {
                      "type": "string",
                      "description": "The Network Security Group attached to the lab VMs Network interfaces to restrict open ports.",
                      "readOnly": true
                    },
                    "extendedProperties": {
                      "type": "object",
                      "description": "Extended properties of the lab used for experimental features",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "put": {
        "operationId": "Labs_CreateOrUpdate",
        "tags": [
          "Labs"
        ],
        "description": "Create or replace an existing lab. This operation can take a while to complete.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "lab",
            "in": "body",
            "description": "A lab.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A lab.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "defaultStorageAccount": {
                      "type": "string",
                      "description": "The lab's default storage account.",
                      "readOnly": true
                    },
                    "defaultPremiumStorageAccount": {
                      "type": "string",
                      "description": "The lab's default premium storage account.",
                      "readOnly": true
                    },
                    "artifactsStorageAccount": {
                      "type": "string",
                      "description": "The lab's artifact storage account.",
                      "readOnly": true
                    },
                    "premiumDataDiskStorageAccount": {
                      "type": "string",
                      "description": "The lab's premium data disk storage account.",
                      "readOnly": true
                    },
                    "vaultName": {
                      "type": "string",
                      "description": "The lab's Key vault.",
                      "readOnly": true
                    },
                    "labStorageType": {
                      "type": "string",
                      "description": "Type of storage used by the lab. It can be either Premium or Standard. Default is Premium.",
                      "default": "Premium",
                      "enum": [
                        "Standard",
                        "Premium",
                        "StandardSSD"
                      ],
                      "x-ms-enum": {
                        "name": "StorageType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Standard",
                            "value": "Standard"
                          },
                          {
                            "name": "Premium",
                            "value": "Premium"
                          },
                          {
                            "name": "StandardSSD",
                            "value": "StandardSSD"
                          }
                        ]
                      }
                    },
                    "mandatoryArtifactsResourceIdsLinux": {
                      "type": "array",
                      "description": "The ordered list of artifact resource IDs that should be applied on all Linux VM creations by default, prior to the artifacts specified by the user.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "mandatoryArtifactsResourceIdsWindows": {
                      "type": "array",
                      "description": "The ordered list of artifact resource IDs that should be applied on all Windows VM creations by default, prior to the artifacts specified by the user.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the lab.",
                      "readOnly": true
                    },
                    "premiumDataDisks": {
                      "description": "The setting to enable usage of premium data disks.\nWhen its value is 'Enabled', creation of standard or premium data disks is allowed.\nWhen its value is 'Disabled', only creation of standard data disks is allowed.",
                      "type": "string",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "name": "PremiumDataDisk",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          },
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          }
                        ]
                      }
                    },
                    "environmentPermission": {
                      "description": "The access rights to be granted to the user when provisioning an environment",
                      "type": "string",
                      "enum": [
                        "Reader",
                        "Contributor"
                      ],
                      "x-ms-enum": {
                        "name": "EnvironmentPermission",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Reader",
                            "value": "Reader"
                          },
                          {
                            "name": "Contributor",
                            "value": "Contributor"
                          }
                        ]
                      }
                    },
                    "announcement": {
                      "description": "The properties of any lab announcement associated with this lab",
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string",
                          "description": "The plain text title for the lab announcement"
                        },
                        "markdown": {
                          "type": "string",
                          "description": "The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown."
                        },
                        "enabled": {
                          "description": "Is the lab announcement active/enabled at this time?",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "expirationDate": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time at which the announcement expires (null for never)"
                        },
                        "expired": {
                          "type": "boolean",
                          "description": "Has this announcement expired?"
                        },
                        "provisioningState": {
                          "type": "string",
                          "description": "The provisioning status of the resource.",
                          "readOnly": true
                        },
                        "uniqueIdentifier": {
                          "type": "string",
                          "description": "The unique immutable identifier of a resource (Guid).",
                          "readOnly": true
                        }
                      }
                    },
                    "support": {
                      "description": "The properties of any lab support message associated with this lab",
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "description": "Is the lab support banner active/enabled at this time?",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "markdown": {
                          "type": "string",
                          "description": "The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown."
                        }
                      }
                    },
                    "vmCreationResourceGroup": {
                      "type": "string",
                      "description": "The resource group in which all new lab virtual machines will be created. To let DevTest Labs manage resource group creation, set this value to null.",
                      "readOnly": true
                    },
                    "publicIpId": {
                      "type": "string",
                      "description": "The public IP address for the lab's load balancer.",
                      "readOnly": true
                    },
                    "loadBalancerId": {
                      "type": "string",
                      "description": "The load balancer used to for lab VMs that use shared IP address.",
                      "readOnly": true
                    },
                    "networkSecurityGroupId": {
                      "type": "string",
                      "description": "The Network Security Group attached to the lab VMs Network interfaces to restrict open ports.",
                      "readOnly": true
                    },
                    "extendedProperties": {
                      "type": "object",
                      "description": "Extended properties of the lab used for experimental features",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Lab' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "A lab.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "defaultStorageAccount": {
                      "type": "string",
                      "description": "The lab's default storage account.",
                      "readOnly": true
                    },
                    "defaultPremiumStorageAccount": {
                      "type": "string",
                      "description": "The lab's default premium storage account.",
                      "readOnly": true
                    },
                    "artifactsStorageAccount": {
                      "type": "string",
                      "description": "The lab's artifact storage account.",
                      "readOnly": true
                    },
                    "premiumDataDiskStorageAccount": {
                      "type": "string",
                      "description": "The lab's premium data disk storage account.",
                      "readOnly": true
                    },
                    "vaultName": {
                      "type": "string",
                      "description": "The lab's Key vault.",
                      "readOnly": true
                    },
                    "labStorageType": {
                      "type": "string",
                      "description": "Type of storage used by the lab. It can be either Premium or Standard. Default is Premium.",
                      "default": "Premium",
                      "enum": [
                        "Standard",
                        "Premium",
                        "StandardSSD"
                      ],
                      "x-ms-enum": {
                        "name": "StorageType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Standard",
                            "value": "Standard"
                          },
                          {
                            "name": "Premium",
                            "value": "Premium"
                          },
                          {
                            "name": "StandardSSD",
                            "value": "StandardSSD"
                          }
                        ]
                      }
                    },
                    "mandatoryArtifactsResourceIdsLinux": {
                      "type": "array",
                      "description": "The ordered list of artifact resource IDs that should be applied on all Linux VM creations by default, prior to the artifacts specified by the user.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "mandatoryArtifactsResourceIdsWindows": {
                      "type": "array",
                      "description": "The ordered list of artifact resource IDs that should be applied on all Windows VM creations by default, prior to the artifacts specified by the user.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the lab.",
                      "readOnly": true
                    },
                    "premiumDataDisks": {
                      "description": "The setting to enable usage of premium data disks.\nWhen its value is 'Enabled', creation of standard or premium data disks is allowed.\nWhen its value is 'Disabled', only creation of standard data disks is allowed.",
                      "type": "string",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "name": "PremiumDataDisk",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          },
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          }
                        ]
                      }
                    },
                    "environmentPermission": {
                      "description": "The access rights to be granted to the user when provisioning an environment",
                      "type": "string",
                      "enum": [
                        "Reader",
                        "Contributor"
                      ],
                      "x-ms-enum": {
                        "name": "EnvironmentPermission",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Reader",
                            "value": "Reader"
                          },
                          {
                            "name": "Contributor",
                            "value": "Contributor"
                          }
                        ]
                      }
                    },
                    "announcement": {
                      "description": "The properties of any lab announcement associated with this lab",
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string",
                          "description": "The plain text title for the lab announcement"
                        },
                        "markdown": {
                          "type": "string",
                          "description": "The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown."
                        },
                        "enabled": {
                          "description": "Is the lab announcement active/enabled at this time?",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "expirationDate": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time at which the announcement expires (null for never)"
                        },
                        "expired": {
                          "type": "boolean",
                          "description": "Has this announcement expired?"
                        },
                        "provisioningState": {
                          "type": "string",
                          "description": "The provisioning status of the resource.",
                          "readOnly": true
                        },
                        "uniqueIdentifier": {
                          "type": "string",
                          "description": "The unique immutable identifier of a resource (Guid).",
                          "readOnly": true
                        }
                      }
                    },
                    "support": {
                      "description": "The properties of any lab support message associated with this lab",
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "description": "Is the lab support banner active/enabled at this time?",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "markdown": {
                          "type": "string",
                          "description": "The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown."
                        }
                      }
                    },
                    "vmCreationResourceGroup": {
                      "type": "string",
                      "description": "The resource group in which all new lab virtual machines will be created. To let DevTest Labs manage resource group creation, set this value to null.",
                      "readOnly": true
                    },
                    "publicIpId": {
                      "type": "string",
                      "description": "The public IP address for the lab's load balancer.",
                      "readOnly": true
                    },
                    "loadBalancerId": {
                      "type": "string",
                      "description": "The load balancer used to for lab VMs that use shared IP address.",
                      "readOnly": true
                    },
                    "networkSecurityGroupId": {
                      "type": "string",
                      "description": "The Network Security Group attached to the lab VMs Network interfaces to restrict open ports.",
                      "readOnly": true
                    },
                    "extendedProperties": {
                      "type": "object",
                      "description": "Extended properties of the lab used for experimental features",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          },
          "201": {
            "description": "Resource 'Lab' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "A lab.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "defaultStorageAccount": {
                      "type": "string",
                      "description": "The lab's default storage account.",
                      "readOnly": true
                    },
                    "defaultPremiumStorageAccount": {
                      "type": "string",
                      "description": "The lab's default premium storage account.",
                      "readOnly": true
                    },
                    "artifactsStorageAccount": {
                      "type": "string",
                      "description": "The lab's artifact storage account.",
                      "readOnly": true
                    },
                    "premiumDataDiskStorageAccount": {
                      "type": "string",
                      "description": "The lab's premium data disk storage account.",
                      "readOnly": true
                    },
                    "vaultName": {
                      "type": "string",
                      "description": "The lab's Key vault.",
                      "readOnly": true
                    },
                    "labStorageType": {
                      "type": "string",
                      "description": "Type of storage used by the lab. It can be either Premium or Standard. Default is Premium.",
                      "default": "Premium",
                      "enum": [
                        "Standard",
                        "Premium",
                        "StandardSSD"
                      ],
                      "x-ms-enum": {
                        "name": "StorageType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Standard",
                            "value": "Standard"
                          },
                          {
                            "name": "Premium",
                            "value": "Premium"
                          },
                          {
                            "name": "StandardSSD",
                            "value": "StandardSSD"
                          }
                        ]
                      }
                    },
                    "mandatoryArtifactsResourceIdsLinux": {
                      "type": "array",
                      "description": "The ordered list of artifact resource IDs that should be applied on all Linux VM creations by default, prior to the artifacts specified by the user.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "mandatoryArtifactsResourceIdsWindows": {
                      "type": "array",
                      "description": "The ordered list of artifact resource IDs that should be applied on all Windows VM creations by default, prior to the artifacts specified by the user.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the lab.",
                      "readOnly": true
                    },
                    "premiumDataDisks": {
                      "description": "The setting to enable usage of premium data disks.\nWhen its value is 'Enabled', creation of standard or premium data disks is allowed.\nWhen its value is 'Disabled', only creation of standard data disks is allowed.",
                      "type": "string",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "name": "PremiumDataDisk",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          },
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          }
                        ]
                      }
                    },
                    "environmentPermission": {
                      "description": "The access rights to be granted to the user when provisioning an environment",
                      "type": "string",
                      "enum": [
                        "Reader",
                        "Contributor"
                      ],
                      "x-ms-enum": {
                        "name": "EnvironmentPermission",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Reader",
                            "value": "Reader"
                          },
                          {
                            "name": "Contributor",
                            "value": "Contributor"
                          }
                        ]
                      }
                    },
                    "announcement": {
                      "description": "The properties of any lab announcement associated with this lab",
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string",
                          "description": "The plain text title for the lab announcement"
                        },
                        "markdown": {
                          "type": "string",
                          "description": "The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown."
                        },
                        "enabled": {
                          "description": "Is the lab announcement active/enabled at this time?",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "expirationDate": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time at which the announcement expires (null for never)"
                        },
                        "expired": {
                          "type": "boolean",
                          "description": "Has this announcement expired?"
                        },
                        "provisioningState": {
                          "type": "string",
                          "description": "The provisioning status of the resource.",
                          "readOnly": true
                        },
                        "uniqueIdentifier": {
                          "type": "string",
                          "description": "The unique immutable identifier of a resource (Guid).",
                          "readOnly": true
                        }
                      }
                    },
                    "support": {
                      "description": "The properties of any lab support message associated with this lab",
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "description": "Is the lab support banner active/enabled at this time?",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "markdown": {
                          "type": "string",
                          "description": "The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown."
                        }
                      }
                    },
                    "vmCreationResourceGroup": {
                      "type": "string",
                      "description": "The resource group in which all new lab virtual machines will be created. To let DevTest Labs manage resource group creation, set this value to null.",
                      "readOnly": true
                    },
                    "publicIpId": {
                      "type": "string",
                      "description": "The public IP address for the lab's load balancer.",
                      "readOnly": true
                    },
                    "loadBalancerId": {
                      "type": "string",
                      "description": "The load balancer used to for lab VMs that use shared IP address.",
                      "readOnly": true
                    },
                    "networkSecurityGroupId": {
                      "type": "string",
                      "description": "The Network Security Group attached to the lab VMs Network interfaces to restrict open ports.",
                      "readOnly": true
                    },
                    "extendedProperties": {
                      "type": "object",
                      "description": "Extended properties of the lab used for experimental features",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Labs_Update",
        "tags": [
          "Labs"
        ],
        "description": "Allows modifying tags of labs. All other properties will be ignored.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "lab",
            "in": "body",
            "description": "A lab.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A lab.",
              "properties": {
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A lab.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "defaultStorageAccount": {
                      "type": "string",
                      "description": "The lab's default storage account.",
                      "readOnly": true
                    },
                    "defaultPremiumStorageAccount": {
                      "type": "string",
                      "description": "The lab's default premium storage account.",
                      "readOnly": true
                    },
                    "artifactsStorageAccount": {
                      "type": "string",
                      "description": "The lab's artifact storage account.",
                      "readOnly": true
                    },
                    "premiumDataDiskStorageAccount": {
                      "type": "string",
                      "description": "The lab's premium data disk storage account.",
                      "readOnly": true
                    },
                    "vaultName": {
                      "type": "string",
                      "description": "The lab's Key vault.",
                      "readOnly": true
                    },
                    "labStorageType": {
                      "type": "string",
                      "description": "Type of storage used by the lab. It can be either Premium or Standard. Default is Premium.",
                      "default": "Premium",
                      "enum": [
                        "Standard",
                        "Premium",
                        "StandardSSD"
                      ],
                      "x-ms-enum": {
                        "name": "StorageType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Standard",
                            "value": "Standard"
                          },
                          {
                            "name": "Premium",
                            "value": "Premium"
                          },
                          {
                            "name": "StandardSSD",
                            "value": "StandardSSD"
                          }
                        ]
                      }
                    },
                    "mandatoryArtifactsResourceIdsLinux": {
                      "type": "array",
                      "description": "The ordered list of artifact resource IDs that should be applied on all Linux VM creations by default, prior to the artifacts specified by the user.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "mandatoryArtifactsResourceIdsWindows": {
                      "type": "array",
                      "description": "The ordered list of artifact resource IDs that should be applied on all Windows VM creations by default, prior to the artifacts specified by the user.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the lab.",
                      "readOnly": true
                    },
                    "premiumDataDisks": {
                      "description": "The setting to enable usage of premium data disks.\nWhen its value is 'Enabled', creation of standard or premium data disks is allowed.\nWhen its value is 'Disabled', only creation of standard data disks is allowed.",
                      "type": "string",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "name": "PremiumDataDisk",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          },
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          }
                        ]
                      }
                    },
                    "environmentPermission": {
                      "description": "The access rights to be granted to the user when provisioning an environment",
                      "type": "string",
                      "enum": [
                        "Reader",
                        "Contributor"
                      ],
                      "x-ms-enum": {
                        "name": "EnvironmentPermission",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Reader",
                            "value": "Reader"
                          },
                          {
                            "name": "Contributor",
                            "value": "Contributor"
                          }
                        ]
                      }
                    },
                    "announcement": {
                      "description": "The properties of any lab announcement associated with this lab",
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string",
                          "description": "The plain text title for the lab announcement"
                        },
                        "markdown": {
                          "type": "string",
                          "description": "The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown."
                        },
                        "enabled": {
                          "description": "Is the lab announcement active/enabled at this time?",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "expirationDate": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time at which the announcement expires (null for never)"
                        },
                        "expired": {
                          "type": "boolean",
                          "description": "Has this announcement expired?"
                        },
                        "provisioningState": {
                          "type": "string",
                          "description": "The provisioning status of the resource.",
                          "readOnly": true
                        },
                        "uniqueIdentifier": {
                          "type": "string",
                          "description": "The unique immutable identifier of a resource (Guid).",
                          "readOnly": true
                        }
                      }
                    },
                    "support": {
                      "description": "The properties of any lab support message associated with this lab",
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "description": "Is the lab support banner active/enabled at this time?",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "markdown": {
                          "type": "string",
                          "description": "The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown."
                        }
                      }
                    },
                    "vmCreationResourceGroup": {
                      "type": "string",
                      "description": "The resource group in which all new lab virtual machines will be created. To let DevTest Labs manage resource group creation, set this value to null.",
                      "readOnly": true
                    },
                    "publicIpId": {
                      "type": "string",
                      "description": "The public IP address for the lab's load balancer.",
                      "readOnly": true
                    },
                    "loadBalancerId": {
                      "type": "string",
                      "description": "The load balancer used to for lab VMs that use shared IP address.",
                      "readOnly": true
                    },
                    "networkSecurityGroupId": {
                      "type": "string",
                      "description": "The Network Security Group attached to the lab VMs Network interfaces to restrict open ports.",
                      "readOnly": true
                    },
                    "extendedProperties": {
                      "type": "object",
                      "description": "Extended properties of the lab used for experimental features",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "delete": {
        "operationId": "Labs_Delete",
        "tags": [
          "Labs"
        ],
        "description": "Delete lab. This operation can take a while to complete.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/artifactsources": {
      "get": {
        "operationId": "ArtifactSources_List",
        "tags": [
          "ArtifactSources"
        ],
        "description": "List artifact sources in a given lab.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=displayName)'",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply to the operation. Example: '$filter=contains(name,'myName')",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: '$top=10'",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "The ordering expression for the results, using OData notation. Example: '$orderby=name desc'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The ArtifactSource items on this page",
                  "items": {
                    "type": "object",
                    "description": "Properties of an artifact source.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The identifier of the resource.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource.",
                        "readOnly": true
                      },
                      "location": {
                        "type": "string",
                        "description": "The location of the resource."
                      },
                      "tags": {
                        "type": "object",
                        "description": "The tags of the resource.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "properties": {
                        "description": "The properties of the resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "displayName": {
                            "type": "string",
                            "description": "The artifact source's display name."
                          },
                          "uri": {
                            "type": "string",
                            "description": "The artifact source's URI."
                          },
                          "sourceType": {
                            "description": "The artifact source's type.",
                            "type": "string",
                            "enum": [
                              "VsoGit",
                              "GitHub",
                              "StorageAccount"
                            ],
                            "x-ms-enum": {
                              "name": "SourceControlType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "VsoGit",
                                  "value": "VsoGit"
                                },
                                {
                                  "name": "GitHub",
                                  "value": "GitHub"
                                },
                                {
                                  "name": "StorageAccount",
                                  "value": "StorageAccount"
                                }
                              ]
                            }
                          },
                          "folderPath": {
                            "type": "string",
                            "description": "The folder containing artifacts."
                          },
                          "armTemplateFolderPath": {
                            "type": "string",
                            "description": "The folder containing Azure Resource Manager templates."
                          },
                          "branchRef": {
                            "type": "string",
                            "description": "The artifact source's branch reference."
                          },
                          "securityToken": {
                            "type": "string",
                            "description": "The security token to authenticate to the artifact source."
                          },
                          "status": {
                            "description": "Indicates if the artifact source is enabled (values: Enabled, Disabled).",
                            "type": "string",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "EnableStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled"
                                }
                              ]
                            }
                          },
                          "createdDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The artifact source's creation date.",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "type": "string",
                            "description": "The provisioning status of the resource.",
                            "readOnly": true
                          },
                          "uniqueIdentifier": {
                            "type": "string",
                            "description": "The unique immutable identifier of a resource (Guid).",
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "required": [
                      "properties"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/artifactsources/{name}": {
      "get": {
        "operationId": "ArtifactSources_Get",
        "tags": [
          "ArtifactSources"
        ],
        "description": "Get artifact source.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the ArtifactSource",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=displayName)'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Properties of an artifact source.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "The artifact source's display name."
                    },
                    "uri": {
                      "type": "string",
                      "description": "The artifact source's URI."
                    },
                    "sourceType": {
                      "description": "The artifact source's type.",
                      "type": "string",
                      "enum": [
                        "VsoGit",
                        "GitHub",
                        "StorageAccount"
                      ],
                      "x-ms-enum": {
                        "name": "SourceControlType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "VsoGit",
                            "value": "VsoGit"
                          },
                          {
                            "name": "GitHub",
                            "value": "GitHub"
                          },
                          {
                            "name": "StorageAccount",
                            "value": "StorageAccount"
                          }
                        ]
                      }
                    },
                    "folderPath": {
                      "type": "string",
                      "description": "The folder containing artifacts."
                    },
                    "armTemplateFolderPath": {
                      "type": "string",
                      "description": "The folder containing Azure Resource Manager templates."
                    },
                    "branchRef": {
                      "type": "string",
                      "description": "The artifact source's branch reference."
                    },
                    "securityToken": {
                      "type": "string",
                      "description": "The security token to authenticate to the artifact source."
                    },
                    "status": {
                      "description": "Indicates if the artifact source is enabled (values: Enabled, Disabled).",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "EnableStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The artifact source's creation date.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "put": {
        "operationId": "ArtifactSources_CreateOrUpdate",
        "tags": [
          "ArtifactSources"
        ],
        "description": "Create or replace an existing artifact source.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the ArtifactSource",
            "required": true,
            "type": "string"
          },
          {
            "name": "artifactSource",
            "in": "body",
            "description": "Properties of an artifact source.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Properties of an artifact source.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "The artifact source's display name."
                    },
                    "uri": {
                      "type": "string",
                      "description": "The artifact source's URI."
                    },
                    "sourceType": {
                      "description": "The artifact source's type.",
                      "type": "string",
                      "enum": [
                        "VsoGit",
                        "GitHub",
                        "StorageAccount"
                      ],
                      "x-ms-enum": {
                        "name": "SourceControlType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "VsoGit",
                            "value": "VsoGit"
                          },
                          {
                            "name": "GitHub",
                            "value": "GitHub"
                          },
                          {
                            "name": "StorageAccount",
                            "value": "StorageAccount"
                          }
                        ]
                      }
                    },
                    "folderPath": {
                      "type": "string",
                      "description": "The folder containing artifacts."
                    },
                    "armTemplateFolderPath": {
                      "type": "string",
                      "description": "The folder containing Azure Resource Manager templates."
                    },
                    "branchRef": {
                      "type": "string",
                      "description": "The artifact source's branch reference."
                    },
                    "securityToken": {
                      "type": "string",
                      "description": "The security token to authenticate to the artifact source."
                    },
                    "status": {
                      "description": "Indicates if the artifact source is enabled (values: Enabled, Disabled).",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "EnableStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The artifact source's creation date.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ArtifactSource' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Properties of an artifact source.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "The artifact source's display name."
                    },
                    "uri": {
                      "type": "string",
                      "description": "The artifact source's URI."
                    },
                    "sourceType": {
                      "description": "The artifact source's type.",
                      "type": "string",
                      "enum": [
                        "VsoGit",
                        "GitHub",
                        "StorageAccount"
                      ],
                      "x-ms-enum": {
                        "name": "SourceControlType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "VsoGit",
                            "value": "VsoGit"
                          },
                          {
                            "name": "GitHub",
                            "value": "GitHub"
                          },
                          {
                            "name": "StorageAccount",
                            "value": "StorageAccount"
                          }
                        ]
                      }
                    },
                    "folderPath": {
                      "type": "string",
                      "description": "The folder containing artifacts."
                    },
                    "armTemplateFolderPath": {
                      "type": "string",
                      "description": "The folder containing Azure Resource Manager templates."
                    },
                    "branchRef": {
                      "type": "string",
                      "description": "The artifact source's branch reference."
                    },
                    "securityToken": {
                      "type": "string",
                      "description": "The security token to authenticate to the artifact source."
                    },
                    "status": {
                      "description": "Indicates if the artifact source is enabled (values: Enabled, Disabled).",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "EnableStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The artifact source's creation date.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          },
          "201": {
            "description": "Resource 'ArtifactSource' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Properties of an artifact source.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "The artifact source's display name."
                    },
                    "uri": {
                      "type": "string",
                      "description": "The artifact source's URI."
                    },
                    "sourceType": {
                      "description": "The artifact source's type.",
                      "type": "string",
                      "enum": [
                        "VsoGit",
                        "GitHub",
                        "StorageAccount"
                      ],
                      "x-ms-enum": {
                        "name": "SourceControlType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "VsoGit",
                            "value": "VsoGit"
                          },
                          {
                            "name": "GitHub",
                            "value": "GitHub"
                          },
                          {
                            "name": "StorageAccount",
                            "value": "StorageAccount"
                          }
                        ]
                      }
                    },
                    "folderPath": {
                      "type": "string",
                      "description": "The folder containing artifacts."
                    },
                    "armTemplateFolderPath": {
                      "type": "string",
                      "description": "The folder containing Azure Resource Manager templates."
                    },
                    "branchRef": {
                      "type": "string",
                      "description": "The artifact source's branch reference."
                    },
                    "securityToken": {
                      "type": "string",
                      "description": "The security token to authenticate to the artifact source."
                    },
                    "status": {
                      "description": "Indicates if the artifact source is enabled (values: Enabled, Disabled).",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "EnableStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The artifact source's creation date.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "patch": {
        "operationId": "ArtifactSources_Update",
        "tags": [
          "ArtifactSources"
        ],
        "description": "Allows modifying tags of artifact sources. All other properties will be ignored.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the ArtifactSource",
            "required": true,
            "type": "string"
          },
          {
            "name": "artifactSource",
            "in": "body",
            "description": "Properties of an artifact source.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Properties of an artifact source.",
              "properties": {
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Properties of an artifact source.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "The artifact source's display name."
                    },
                    "uri": {
                      "type": "string",
                      "description": "The artifact source's URI."
                    },
                    "sourceType": {
                      "description": "The artifact source's type.",
                      "type": "string",
                      "enum": [
                        "VsoGit",
                        "GitHub",
                        "StorageAccount"
                      ],
                      "x-ms-enum": {
                        "name": "SourceControlType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "VsoGit",
                            "value": "VsoGit"
                          },
                          {
                            "name": "GitHub",
                            "value": "GitHub"
                          },
                          {
                            "name": "StorageAccount",
                            "value": "StorageAccount"
                          }
                        ]
                      }
                    },
                    "folderPath": {
                      "type": "string",
                      "description": "The folder containing artifacts."
                    },
                    "armTemplateFolderPath": {
                      "type": "string",
                      "description": "The folder containing Azure Resource Manager templates."
                    },
                    "branchRef": {
                      "type": "string",
                      "description": "The artifact source's branch reference."
                    },
                    "securityToken": {
                      "type": "string",
                      "description": "The security token to authenticate to the artifact source."
                    },
                    "status": {
                      "description": "Indicates if the artifact source is enabled (values: Enabled, Disabled).",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "EnableStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The artifact source's creation date.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "delete": {
        "operationId": "ArtifactSources_Delete",
        "tags": [
          "ArtifactSources"
        ],
        "description": "Delete artifact source.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the ArtifactSource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/artifactsources/{artifactSourceName}/armtemplates": {
      "get": {
        "operationId": "ArmTemplates_List",
        "tags": [
          "ArmTemplates"
        ],
        "description": "List azure resource manager templates in a given artifact source.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "artifactSourceName",
            "in": "path",
            "description": "The name of the artifact source.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=displayName)'",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply to the operation. Example: '$filter=contains(name,'myName')",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: '$top=10'",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "The ordering expression for the results, using OData notation. Example: '$orderby=name desc'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The ArmTemplate items on this page",
                  "items": {
                    "type": "object",
                    "description": "An Azure Resource Manager template.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The identifier of the resource.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource.",
                        "readOnly": true
                      },
                      "location": {
                        "type": "string",
                        "description": "The location of the resource."
                      },
                      "tags": {
                        "type": "object",
                        "description": "The tags of the resource.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "properties": {
                        "description": "The properties of the resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "displayName": {
                            "type": "string",
                            "description": "The display name of the ARM template.",
                            "readOnly": true
                          },
                          "description": {
                            "type": "string",
                            "description": "The description of the ARM template.",
                            "readOnly": true
                          },
                          "publisher": {
                            "type": "string",
                            "description": "The publisher of the ARM template.",
                            "readOnly": true
                          },
                          "icon": {
                            "type": "string",
                            "description": "The URI to the icon of the ARM template.",
                            "readOnly": true
                          },
                          "contents": {
                            "type": "object",
                            "description": "The contents of the ARM template.",
                            "additionalProperties": {},
                            "readOnly": true
                          },
                          "createdDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The creation date of the armTemplate.",
                            "readOnly": true
                          },
                          "parametersValueFilesInfo": {
                            "type": "array",
                            "description": "File name and parameter values information from all azuredeploy.*.parameters.json for the ARM template.",
                            "items": {
                              "type": "object",
                              "description": "A file containing a set of parameter values for an ARM template.",
                              "properties": {
                                "fileName": {
                                  "type": "string",
                                  "description": "File name."
                                },
                                "parametersValueInfo": {
                                  "type": "object",
                                  "description": "Contents of the file.",
                                  "additionalProperties": {}
                                }
                              }
                            },
                            "readOnly": true,
                            "x-ms-identifiers": []
                          },
                          "enabled": {
                            "type": "boolean",
                            "description": "Whether or not ARM template is enabled for use by lab user.",
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "required": [
                      "properties"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/artifactsources/{artifactSourceName}/armtemplates/{name}": {
      "get": {
        "operationId": "ArmTemplates_Get",
        "tags": [
          "ArmTemplates"
        ],
        "description": "Get azure resource manager template.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "artifactSourceName",
            "in": "path",
            "description": "The name of the artifact source.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the ArmTemplate",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=displayName)'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "An Azure Resource Manager template.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "The display name of the ARM template.",
                      "readOnly": true
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the ARM template.",
                      "readOnly": true
                    },
                    "publisher": {
                      "type": "string",
                      "description": "The publisher of the ARM template.",
                      "readOnly": true
                    },
                    "icon": {
                      "type": "string",
                      "description": "The URI to the icon of the ARM template.",
                      "readOnly": true
                    },
                    "contents": {
                      "type": "object",
                      "description": "The contents of the ARM template.",
                      "additionalProperties": {},
                      "readOnly": true
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the armTemplate.",
                      "readOnly": true
                    },
                    "parametersValueFilesInfo": {
                      "type": "array",
                      "description": "File name and parameter values information from all azuredeploy.*.parameters.json for the ARM template.",
                      "items": {
                        "type": "object",
                        "description": "A file containing a set of parameter values for an ARM template.",
                        "properties": {
                          "fileName": {
                            "type": "string",
                            "description": "File name."
                          },
                          "parametersValueInfo": {
                            "type": "object",
                            "description": "Contents of the file.",
                            "additionalProperties": {}
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": []
                    },
                    "enabled": {
                      "type": "boolean",
                      "description": "Whether or not ARM template is enabled for use by lab user.",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/artifactsources/{artifactSourceName}/artifacts": {
      "get": {
        "operationId": "Artifacts_List",
        "tags": [
          "Artifacts"
        ],
        "description": "List artifacts in a given artifact source.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "artifactSourceName",
            "in": "path",
            "description": "The name of the artifact source.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=title)'",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply to the operation. Example: '$filter=contains(name,'myName')",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: '$top=10'",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "The ordering expression for the results, using OData notation. Example: '$orderby=name desc'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Artifact items on this page",
                  "items": {
                    "type": "object",
                    "description": "An artifact.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The identifier of the resource.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource.",
                        "readOnly": true
                      },
                      "location": {
                        "type": "string",
                        "description": "The location of the resource."
                      },
                      "tags": {
                        "type": "object",
                        "description": "The tags of the resource.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "properties": {
                        "description": "The properties of the resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "The artifact's title.",
                            "readOnly": true
                          },
                          "description": {
                            "type": "string",
                            "description": "The artifact's description.",
                            "readOnly": true
                          },
                          "publisher": {
                            "type": "string",
                            "description": "The artifact's publisher.",
                            "readOnly": true
                          },
                          "filePath": {
                            "type": "string",
                            "description": "The file path to the artifact.",
                            "readOnly": true
                          },
                          "icon": {
                            "type": "string",
                            "description": "The URI to the artifact icon.",
                            "readOnly": true
                          },
                          "targetOsType": {
                            "type": "string",
                            "description": "The artifact's target OS.",
                            "readOnly": true
                          },
                          "parameters": {
                            "type": "object",
                            "description": "The artifact's parameters.",
                            "additionalProperties": {},
                            "readOnly": true
                          },
                          "createdDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The artifact's creation date.",
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "required": [
                      "properties"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/artifactsources/{artifactSourceName}/artifacts/{name}": {
      "get": {
        "operationId": "Artifacts_Get",
        "tags": [
          "Artifacts"
        ],
        "description": "Get artifact.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "artifactSourceName",
            "in": "path",
            "description": "The name of the artifact source.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the Artifact",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=title)'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "An artifact.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "The artifact's title.",
                      "readOnly": true
                    },
                    "description": {
                      "type": "string",
                      "description": "The artifact's description.",
                      "readOnly": true
                    },
                    "publisher": {
                      "type": "string",
                      "description": "The artifact's publisher.",
                      "readOnly": true
                    },
                    "filePath": {
                      "type": "string",
                      "description": "The file path to the artifact.",
                      "readOnly": true
                    },
                    "icon": {
                      "type": "string",
                      "description": "The URI to the artifact icon.",
                      "readOnly": true
                    },
                    "targetOsType": {
                      "type": "string",
                      "description": "The artifact's target OS.",
                      "readOnly": true
                    },
                    "parameters": {
                      "type": "object",
                      "description": "The artifact's parameters.",
                      "additionalProperties": {},
                      "readOnly": true
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The artifact's creation date.",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/artifactsources/{artifactSourceName}/artifacts/{name}/generateArmTemplate": {
      "post": {
        "operationId": "Artifacts_GenerateArmTemplate",
        "tags": [
          "Artifacts"
        ],
        "description": "Generates an ARM template for the given artifact, uploads the required files to a storage account, and validates the generated artifact.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "artifactSourceName",
            "in": "path",
            "description": "The name of the artifact source.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the Artifact",
            "required": true,
            "type": "string"
          },
          {
            "name": "generateArmTemplateRequest",
            "in": "body",
            "description": "Parameters for generating an ARM template for deploying artifacts.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Parameters for generating an ARM template for deploying artifacts.",
              "properties": {
                "virtualMachineName": {
                  "type": "string",
                  "description": "The resource name of the virtual machine."
                },
                "parameters": {
                  "type": "array",
                  "description": "The parameters of the ARM template.",
                  "items": {
                    "type": "object",
                    "description": "Information about an artifact's parameter.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the artifact parameter."
                      },
                      "value": {
                        "type": "string",
                        "description": "The value of the artifact parameter."
                      }
                    }
                  }
                },
                "location": {
                  "type": "string",
                  "description": "The location of the virtual machine."
                },
                "fileUploadOptions": {
                  "description": "Options for uploading the files for the artifact. UploadFilesAndGenerateSasTokens is the default value.",
                  "type": "string",
                  "enum": [
                    "UploadFilesAndGenerateSasTokens",
                    "None"
                  ],
                  "x-ms-enum": {
                    "name": "FileUploadOptions",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "UploadFilesAndGenerateSasTokens",
                        "value": "UploadFilesAndGenerateSasTokens"
                      },
                      {
                        "name": "None",
                        "value": "None"
                      }
                    ]
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Information about a generated ARM template.",
              "properties": {
                "template": {
                  "type": "object",
                  "description": "The template's contents.",
                  "additionalProperties": {}
                },
                "parameters": {
                  "type": "object",
                  "description": "The parameters of the ARM template.",
                  "additionalProperties": {}
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}/claimAnyVm": {
      "post": {
        "operationId": "Labs_ClaimAnyVm",
        "tags": [
          "Labs"
        ],
        "description": "Claim a random claimable virtual machine in the lab. This operation can take a while to complete.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/costs/{name}": {
      "get": {
        "operationId": "Costs_Get",
        "tags": [
          "Costs"
        ],
        "description": "Get cost.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the LabCost",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($expand=labCostDetails)'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A cost item.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "targetCost": {
                      "description": "The target cost properties",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Target cost status",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "TargetCostStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "target": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Lab target cost"
                        },
                        "costThresholds": {
                          "type": "array",
                          "description": "Cost thresholds.",
                          "items": {
                            "type": "object",
                            "description": "Properties of a cost threshold item.",
                            "properties": {
                              "thresholdId": {
                                "type": "string",
                                "description": "The ID of the cost threshold item."
                              },
                              "percentageThreshold": {
                                "description": "The value of the percentage cost threshold.",
                                "type": "object",
                                "properties": {
                                  "thresholdValue": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The cost threshold value."
                                  }
                                }
                              },
                              "displayOnChart": {
                                "description": "Indicates whether this threshold will be displayed on cost charts.",
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "CostThresholdStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled"
                                    }
                                  ]
                                }
                              },
                              "sendNotificationWhenExceeded": {
                                "description": "Indicates whether notifications will be sent when this threshold is exceeded.",
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "CostThresholdStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled"
                                    }
                                  ]
                                }
                              },
                              "notificationSent": {
                                "type": "string",
                                "description": "Indicates the datetime when notifications were last sent for this threshold."
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        },
                        "cycleStartDateTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Reporting cycle start date."
                        },
                        "cycleEndDateTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Reporting cycle end date."
                        },
                        "cycleType": {
                          "description": "Reporting cycle type.",
                          "type": "string",
                          "enum": [
                            "CalendarMonth",
                            "Custom"
                          ],
                          "x-ms-enum": {
                            "name": "ReportingCycleType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "CalendarMonth",
                                "value": "CalendarMonth"
                              },
                              {
                                "name": "Custom",
                                "value": "Custom"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "labCostSummary": {
                      "description": "The lab cost summary component of the cost data.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "estimatedLabCost": {
                          "type": "number",
                          "format": "double",
                          "description": "The cost component of the cost item."
                        }
                      }
                    },
                    "labCostDetails": {
                      "type": "array",
                      "description": "The lab cost details component of the cost data.",
                      "items": {
                        "type": "object",
                        "description": "The properties of a lab cost item.",
                        "properties": {
                          "date": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The date of the cost item."
                          },
                          "cost": {
                            "type": "number",
                            "format": "double",
                            "description": "The cost component of the cost item."
                          },
                          "costType": {
                            "description": "The type of the cost.",
                            "type": "string",
                            "enum": [
                              "Unavailable",
                              "Reported",
                              "Projected"
                            ],
                            "x-ms-enum": {
                              "name": "CostType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Unavailable",
                                  "value": "Unavailable"
                                },
                                {
                                  "name": "Reported",
                                  "value": "Reported"
                                },
                                {
                                  "name": "Projected",
                                  "value": "Projected"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": []
                    },
                    "resourceCosts": {
                      "type": "array",
                      "description": "The resource cost component of the cost data.",
                      "items": {
                        "type": "object",
                        "description": "The properties of a resource cost item.",
                        "properties": {
                          "resourcename": {
                            "type": "string",
                            "description": "The name of the resource."
                          },
                          "resourceUId": {
                            "type": "string",
                            "description": "The unique identifier of the resource."
                          },
                          "resourceCost": {
                            "type": "number",
                            "format": "double",
                            "description": "The cost component of the resource cost item."
                          },
                          "resourceType": {
                            "type": "string",
                            "description": "The logical resource type (ex. virtualmachine, storageaccount)"
                          },
                          "resourceOwner": {
                            "type": "string",
                            "description": "The owner of the resource (ex. janedoe@microsoft.com)"
                          },
                          "resourcePricingTier": {
                            "type": "string",
                            "description": "The category of the resource (ex. Premium_LRS, Standard_DS1)"
                          },
                          "resourceStatus": {
                            "type": "string",
                            "description": "The status of the resource (ex. Active)"
                          },
                          "resourceId": {
                            "type": "string",
                            "description": "The ID of the resource"
                          },
                          "externalResourceId": {
                            "type": "string",
                            "description": "The ID of the external resource"
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": []
                    },
                    "currencyCode": {
                      "type": "string",
                      "description": "The currency code of the cost."
                    },
                    "startDateTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The start time of the cost data."
                    },
                    "endDateTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The end time of the cost data."
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the cost."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "put": {
        "operationId": "Costs_CreateOrUpdate",
        "tags": [
          "Costs"
        ],
        "description": "Create or replace an existing cost.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the LabCost",
            "required": true,
            "type": "string"
          },
          {
            "name": "labCost",
            "in": "body",
            "description": "A cost item.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A cost item.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "targetCost": {
                      "description": "The target cost properties",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Target cost status",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "TargetCostStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "target": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Lab target cost"
                        },
                        "costThresholds": {
                          "type": "array",
                          "description": "Cost thresholds.",
                          "items": {
                            "type": "object",
                            "description": "Properties of a cost threshold item.",
                            "properties": {
                              "thresholdId": {
                                "type": "string",
                                "description": "The ID of the cost threshold item."
                              },
                              "percentageThreshold": {
                                "description": "The value of the percentage cost threshold.",
                                "type": "object",
                                "properties": {
                                  "thresholdValue": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The cost threshold value."
                                  }
                                }
                              },
                              "displayOnChart": {
                                "description": "Indicates whether this threshold will be displayed on cost charts.",
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "CostThresholdStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled"
                                    }
                                  ]
                                }
                              },
                              "sendNotificationWhenExceeded": {
                                "description": "Indicates whether notifications will be sent when this threshold is exceeded.",
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "CostThresholdStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled"
                                    }
                                  ]
                                }
                              },
                              "notificationSent": {
                                "type": "string",
                                "description": "Indicates the datetime when notifications were last sent for this threshold."
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        },
                        "cycleStartDateTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Reporting cycle start date."
                        },
                        "cycleEndDateTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Reporting cycle end date."
                        },
                        "cycleType": {
                          "description": "Reporting cycle type.",
                          "type": "string",
                          "enum": [
                            "CalendarMonth",
                            "Custom"
                          ],
                          "x-ms-enum": {
                            "name": "ReportingCycleType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "CalendarMonth",
                                "value": "CalendarMonth"
                              },
                              {
                                "name": "Custom",
                                "value": "Custom"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "labCostSummary": {
                      "description": "The lab cost summary component of the cost data.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "estimatedLabCost": {
                          "type": "number",
                          "format": "double",
                          "description": "The cost component of the cost item."
                        }
                      }
                    },
                    "labCostDetails": {
                      "type": "array",
                      "description": "The lab cost details component of the cost data.",
                      "items": {
                        "type": "object",
                        "description": "The properties of a lab cost item.",
                        "properties": {
                          "date": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The date of the cost item."
                          },
                          "cost": {
                            "type": "number",
                            "format": "double",
                            "description": "The cost component of the cost item."
                          },
                          "costType": {
                            "description": "The type of the cost.",
                            "type": "string",
                            "enum": [
                              "Unavailable",
                              "Reported",
                              "Projected"
                            ],
                            "x-ms-enum": {
                              "name": "CostType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Unavailable",
                                  "value": "Unavailable"
                                },
                                {
                                  "name": "Reported",
                                  "value": "Reported"
                                },
                                {
                                  "name": "Projected",
                                  "value": "Projected"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": []
                    },
                    "resourceCosts": {
                      "type": "array",
                      "description": "The resource cost component of the cost data.",
                      "items": {
                        "type": "object",
                        "description": "The properties of a resource cost item.",
                        "properties": {
                          "resourcename": {
                            "type": "string",
                            "description": "The name of the resource."
                          },
                          "resourceUId": {
                            "type": "string",
                            "description": "The unique identifier of the resource."
                          },
                          "resourceCost": {
                            "type": "number",
                            "format": "double",
                            "description": "The cost component of the resource cost item."
                          },
                          "resourceType": {
                            "type": "string",
                            "description": "The logical resource type (ex. virtualmachine, storageaccount)"
                          },
                          "resourceOwner": {
                            "type": "string",
                            "description": "The owner of the resource (ex. janedoe@microsoft.com)"
                          },
                          "resourcePricingTier": {
                            "type": "string",
                            "description": "The category of the resource (ex. Premium_LRS, Standard_DS1)"
                          },
                          "resourceStatus": {
                            "type": "string",
                            "description": "The status of the resource (ex. Active)"
                          },
                          "resourceId": {
                            "type": "string",
                            "description": "The ID of the resource"
                          },
                          "externalResourceId": {
                            "type": "string",
                            "description": "The ID of the external resource"
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": []
                    },
                    "currencyCode": {
                      "type": "string",
                      "description": "The currency code of the cost."
                    },
                    "startDateTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The start time of the cost data."
                    },
                    "endDateTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The end time of the cost data."
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the cost."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'LabCost' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "A cost item.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "targetCost": {
                      "description": "The target cost properties",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Target cost status",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "TargetCostStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "target": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Lab target cost"
                        },
                        "costThresholds": {
                          "type": "array",
                          "description": "Cost thresholds.",
                          "items": {
                            "type": "object",
                            "description": "Properties of a cost threshold item.",
                            "properties": {
                              "thresholdId": {
                                "type": "string",
                                "description": "The ID of the cost threshold item."
                              },
                              "percentageThreshold": {
                                "description": "The value of the percentage cost threshold.",
                                "type": "object",
                                "properties": {
                                  "thresholdValue": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The cost threshold value."
                                  }
                                }
                              },
                              "displayOnChart": {
                                "description": "Indicates whether this threshold will be displayed on cost charts.",
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "CostThresholdStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled"
                                    }
                                  ]
                                }
                              },
                              "sendNotificationWhenExceeded": {
                                "description": "Indicates whether notifications will be sent when this threshold is exceeded.",
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "CostThresholdStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled"
                                    }
                                  ]
                                }
                              },
                              "notificationSent": {
                                "type": "string",
                                "description": "Indicates the datetime when notifications were last sent for this threshold."
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        },
                        "cycleStartDateTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Reporting cycle start date."
                        },
                        "cycleEndDateTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Reporting cycle end date."
                        },
                        "cycleType": {
                          "description": "Reporting cycle type.",
                          "type": "string",
                          "enum": [
                            "CalendarMonth",
                            "Custom"
                          ],
                          "x-ms-enum": {
                            "name": "ReportingCycleType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "CalendarMonth",
                                "value": "CalendarMonth"
                              },
                              {
                                "name": "Custom",
                                "value": "Custom"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "labCostSummary": {
                      "description": "The lab cost summary component of the cost data.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "estimatedLabCost": {
                          "type": "number",
                          "format": "double",
                          "description": "The cost component of the cost item."
                        }
                      }
                    },
                    "labCostDetails": {
                      "type": "array",
                      "description": "The lab cost details component of the cost data.",
                      "items": {
                        "type": "object",
                        "description": "The properties of a lab cost item.",
                        "properties": {
                          "date": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The date of the cost item."
                          },
                          "cost": {
                            "type": "number",
                            "format": "double",
                            "description": "The cost component of the cost item."
                          },
                          "costType": {
                            "description": "The type of the cost.",
                            "type": "string",
                            "enum": [
                              "Unavailable",
                              "Reported",
                              "Projected"
                            ],
                            "x-ms-enum": {
                              "name": "CostType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Unavailable",
                                  "value": "Unavailable"
                                },
                                {
                                  "name": "Reported",
                                  "value": "Reported"
                                },
                                {
                                  "name": "Projected",
                                  "value": "Projected"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": []
                    },
                    "resourceCosts": {
                      "type": "array",
                      "description": "The resource cost component of the cost data.",
                      "items": {
                        "type": "object",
                        "description": "The properties of a resource cost item.",
                        "properties": {
                          "resourcename": {
                            "type": "string",
                            "description": "The name of the resource."
                          },
                          "resourceUId": {
                            "type": "string",
                            "description": "The unique identifier of the resource."
                          },
                          "resourceCost": {
                            "type": "number",
                            "format": "double",
                            "description": "The cost component of the resource cost item."
                          },
                          "resourceType": {
                            "type": "string",
                            "description": "The logical resource type (ex. virtualmachine, storageaccount)"
                          },
                          "resourceOwner": {
                            "type": "string",
                            "description": "The owner of the resource (ex. janedoe@microsoft.com)"
                          },
                          "resourcePricingTier": {
                            "type": "string",
                            "description": "The category of the resource (ex. Premium_LRS, Standard_DS1)"
                          },
                          "resourceStatus": {
                            "type": "string",
                            "description": "The status of the resource (ex. Active)"
                          },
                          "resourceId": {
                            "type": "string",
                            "description": "The ID of the resource"
                          },
                          "externalResourceId": {
                            "type": "string",
                            "description": "The ID of the external resource"
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": []
                    },
                    "currencyCode": {
                      "type": "string",
                      "description": "The currency code of the cost."
                    },
                    "startDateTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The start time of the cost data."
                    },
                    "endDateTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The end time of the cost data."
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the cost."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          },
          "201": {
            "description": "Resource 'LabCost' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "A cost item.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "targetCost": {
                      "description": "The target cost properties",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Target cost status",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "TargetCostStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "target": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Lab target cost"
                        },
                        "costThresholds": {
                          "type": "array",
                          "description": "Cost thresholds.",
                          "items": {
                            "type": "object",
                            "description": "Properties of a cost threshold item.",
                            "properties": {
                              "thresholdId": {
                                "type": "string",
                                "description": "The ID of the cost threshold item."
                              },
                              "percentageThreshold": {
                                "description": "The value of the percentage cost threshold.",
                                "type": "object",
                                "properties": {
                                  "thresholdValue": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The cost threshold value."
                                  }
                                }
                              },
                              "displayOnChart": {
                                "description": "Indicates whether this threshold will be displayed on cost charts.",
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "CostThresholdStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled"
                                    }
                                  ]
                                }
                              },
                              "sendNotificationWhenExceeded": {
                                "description": "Indicates whether notifications will be sent when this threshold is exceeded.",
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "CostThresholdStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled"
                                    }
                                  ]
                                }
                              },
                              "notificationSent": {
                                "type": "string",
                                "description": "Indicates the datetime when notifications were last sent for this threshold."
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        },
                        "cycleStartDateTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Reporting cycle start date."
                        },
                        "cycleEndDateTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Reporting cycle end date."
                        },
                        "cycleType": {
                          "description": "Reporting cycle type.",
                          "type": "string",
                          "enum": [
                            "CalendarMonth",
                            "Custom"
                          ],
                          "x-ms-enum": {
                            "name": "ReportingCycleType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "CalendarMonth",
                                "value": "CalendarMonth"
                              },
                              {
                                "name": "Custom",
                                "value": "Custom"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "labCostSummary": {
                      "description": "The lab cost summary component of the cost data.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "estimatedLabCost": {
                          "type": "number",
                          "format": "double",
                          "description": "The cost component of the cost item."
                        }
                      }
                    },
                    "labCostDetails": {
                      "type": "array",
                      "description": "The lab cost details component of the cost data.",
                      "items": {
                        "type": "object",
                        "description": "The properties of a lab cost item.",
                        "properties": {
                          "date": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The date of the cost item."
                          },
                          "cost": {
                            "type": "number",
                            "format": "double",
                            "description": "The cost component of the cost item."
                          },
                          "costType": {
                            "description": "The type of the cost.",
                            "type": "string",
                            "enum": [
                              "Unavailable",
                              "Reported",
                              "Projected"
                            ],
                            "x-ms-enum": {
                              "name": "CostType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Unavailable",
                                  "value": "Unavailable"
                                },
                                {
                                  "name": "Reported",
                                  "value": "Reported"
                                },
                                {
                                  "name": "Projected",
                                  "value": "Projected"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": []
                    },
                    "resourceCosts": {
                      "type": "array",
                      "description": "The resource cost component of the cost data.",
                      "items": {
                        "type": "object",
                        "description": "The properties of a resource cost item.",
                        "properties": {
                          "resourcename": {
                            "type": "string",
                            "description": "The name of the resource."
                          },
                          "resourceUId": {
                            "type": "string",
                            "description": "The unique identifier of the resource."
                          },
                          "resourceCost": {
                            "type": "number",
                            "format": "double",
                            "description": "The cost component of the resource cost item."
                          },
                          "resourceType": {
                            "type": "string",
                            "description": "The logical resource type (ex. virtualmachine, storageaccount)"
                          },
                          "resourceOwner": {
                            "type": "string",
                            "description": "The owner of the resource (ex. janedoe@microsoft.com)"
                          },
                          "resourcePricingTier": {
                            "type": "string",
                            "description": "The category of the resource (ex. Premium_LRS, Standard_DS1)"
                          },
                          "resourceStatus": {
                            "type": "string",
                            "description": "The status of the resource (ex. Active)"
                          },
                          "resourceId": {
                            "type": "string",
                            "description": "The ID of the resource"
                          },
                          "externalResourceId": {
                            "type": "string",
                            "description": "The ID of the external resource"
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": []
                    },
                    "currencyCode": {
                      "type": "string",
                      "description": "The currency code of the cost."
                    },
                    "startDateTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The start time of the cost data."
                    },
                    "endDateTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The end time of the cost data."
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the cost."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}/createEnvironment": {
      "post": {
        "operationId": "Labs_CreateEnvironment",
        "tags": [
          "Labs"
        ],
        "description": "Create virtual machines in a lab. This operation can take a while to complete.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "labVirtualMachineCreationParameter",
            "in": "body",
            "description": "Properties for creating a virtual machine.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Properties for creating a virtual machine.",
              "properties": {
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "bulkCreationParameters": {
                      "description": "The number of virtual machine instances to create.",
                      "type": "object",
                      "properties": {
                        "instanceCount": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The number of virtual machine instances to create."
                        }
                      }
                    },
                    "notes": {
                      "type": "string",
                      "description": "The notes of the virtual machine."
                    },
                    "ownerObjectId": {
                      "type": "string",
                      "description": "The object identifier of the owner of the virtual machine.",
                      "default": "dynamicValue"
                    },
                    "ownerUserPrincipalName": {
                      "type": "string",
                      "description": "The user principal name of the virtual machine owner."
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the virtual machine."
                    },
                    "customImageId": {
                      "type": "string",
                      "description": "The custom image identifier of the virtual machine."
                    },
                    "size": {
                      "type": "string",
                      "description": "The size of the virtual machine."
                    },
                    "userName": {
                      "type": "string",
                      "description": "The user name of the virtual machine."
                    },
                    "password": {
                      "type": "string",
                      "description": "The password of the virtual machine administrator."
                    },
                    "sshKey": {
                      "type": "string",
                      "description": "The SSH key of the virtual machine administrator."
                    },
                    "isAuthenticationWithSshKey": {
                      "type": "boolean",
                      "description": "Indicates whether this virtual machine uses an SSH key for authentication."
                    },
                    "labSubnetName": {
                      "type": "string",
                      "description": "The lab subnet name of the virtual machine."
                    },
                    "labVirtualNetworkId": {
                      "type": "string",
                      "description": "The lab virtual network identifier of the virtual machine."
                    },
                    "disallowPublicIpAddress": {
                      "type": "boolean",
                      "description": "Indicates whether the virtual machine is to be created without a public IP address.",
                      "default": false
                    },
                    "artifacts": {
                      "type": "array",
                      "description": "The artifacts to be installed on the virtual machine.",
                      "items": {
                        "type": "object",
                        "description": "Properties of an artifact.",
                        "properties": {
                          "artifactId": {
                            "type": "string",
                            "description": "The artifact's identifier."
                          },
                          "artifactTitle": {
                            "type": "string",
                            "description": "The artifact's title."
                          },
                          "parameters": {
                            "type": "array",
                            "description": "The parameters of the artifact.",
                            "items": {
                              "type": "object",
                              "description": "Properties of an artifact parameter.",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name of the artifact parameter."
                                },
                                "value": {
                                  "type": "string",
                                  "description": "The value of the artifact parameter."
                                }
                              }
                            }
                          },
                          "status": {
                            "type": "string",
                            "description": "The status of the artifact."
                          },
                          "deploymentStatusMessage": {
                            "type": "string",
                            "description": "The status message from the deployment."
                          },
                          "vmExtensionStatusMessage": {
                            "type": "string",
                            "description": "The status message from the virtual machine extension."
                          },
                          "installTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time that the artifact starts to install on the virtual machine."
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "galleryImageReference": {
                      "description": "The Microsoft Azure Marketplace image reference of the virtual machine.",
                      "type": "object",
                      "properties": {
                        "offer": {
                          "type": "string",
                          "description": "The offer of the gallery image."
                        },
                        "publisher": {
                          "type": "string",
                          "description": "The publisher of the gallery image."
                        },
                        "sku": {
                          "type": "string",
                          "description": "The SKU of the gallery image."
                        },
                        "osType": {
                          "type": "string",
                          "description": "The OS type of the gallery image."
                        },
                        "version": {
                          "type": "string",
                          "description": "The version of the gallery image."
                        }
                      }
                    },
                    "planId": {
                      "type": "string",
                      "description": "The id of the plan associated with the virtual machine image"
                    },
                    "networkInterface": {
                      "description": "The network interface properties.",
                      "type": "object",
                      "properties": {
                        "virtualNetworkId": {
                          "type": "string",
                          "description": "The resource ID of the virtual network."
                        },
                        "subnetId": {
                          "type": "string",
                          "description": "The resource ID of the sub net."
                        },
                        "publicIpAddressId": {
                          "type": "string",
                          "description": "The resource ID of the public IP address."
                        },
                        "publicIpAddress": {
                          "type": "string",
                          "description": "The public IP address."
                        },
                        "privateIpAddress": {
                          "type": "string",
                          "description": "The private IP address."
                        },
                        "dnsName": {
                          "type": "string",
                          "description": "The DNS name."
                        },
                        "rdpAuthority": {
                          "type": "string",
                          "description": "The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol)."
                        },
                        "sshAuthority": {
                          "type": "string",
                          "description": "The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH."
                        },
                        "sharedPublicIpAddressConfiguration": {
                          "description": "The configuration for sharing a public IP address across multiple virtual machines.",
                          "type": "object",
                          "properties": {
                            "inboundNatRules": {
                              "type": "array",
                              "description": "The incoming NAT rules",
                              "items": {
                                "type": "object",
                                "description": "A rule for NAT - exposing a VM's port (backendPort) on the public IP address using a load balancer.",
                                "properties": {
                                  "transportProtocol": {
                                    "description": "The transport protocol for the endpoint.",
                                    "type": "string",
                                    "enum": [
                                      "Tcp",
                                      "Udp"
                                    ],
                                    "x-ms-enum": {
                                      "name": "TransportProtocol",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Tcp",
                                          "value": "Tcp"
                                        },
                                        {
                                          "name": "Udp",
                                          "value": "Udp"
                                        }
                                      ]
                                    }
                                  },
                                  "frontendPort": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The external endpoint port of the inbound connection. Possible values range between 1 and 65535, inclusive. If unspecified, a value will be allocated automatically."
                                  },
                                  "backendPort": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The port to which the external traffic will be redirected."
                                  }
                                }
                              },
                              "x-ms-identifiers": []
                            }
                          }
                        }
                      }
                    },
                    "expirationDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The expiration date for VM."
                    },
                    "allowClaim": {
                      "type": "boolean",
                      "description": "Indicates whether another user can take ownership of the virtual machine",
                      "default": false
                    },
                    "storageType": {
                      "type": "string",
                      "description": "Storage type to use for virtual machine (i.e. Standard, Premium).",
                      "default": "labStorageType"
                    },
                    "environmentId": {
                      "type": "string",
                      "description": "The resource ID of the environment that contains this virtual machine, if any."
                    },
                    "dataDiskParameters": {
                      "type": "array",
                      "description": "New or existing data disks to attach to the virtual machine after creation",
                      "items": {
                        "type": "object",
                        "description": "Request body for adding a new or existing data disk to a virtual machine.",
                        "properties": {
                          "attachNewDataDiskOptions": {
                            "description": "Specifies options to attach a new disk to the virtual machine.",
                            "type": "object",
                            "properties": {
                              "diskSizeGiB": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Size of the disk to be attached in Gibibytes."
                              },
                              "diskName": {
                                "type": "string",
                                "description": "The name of the disk to be attached."
                              },
                              "diskType": {
                                "description": "The storage type for the disk (i.e. Standard, Premium).",
                                "type": "string",
                                "enum": [
                                  "Standard",
                                  "Premium",
                                  "StandardSSD"
                                ],
                                "x-ms-enum": {
                                  "name": "StorageType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Standard",
                                      "value": "Standard"
                                    },
                                    {
                                      "name": "Premium",
                                      "value": "Premium"
                                    },
                                    {
                                      "name": "StandardSSD",
                                      "value": "StandardSSD"
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "existingLabDiskId": {
                            "type": "string",
                            "description": "Specifies the existing lab disk id to attach to virtual machine."
                          },
                          "hostCaching": {
                            "description": "Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).",
                            "type": "string",
                            "enum": [
                              "None",
                              "ReadOnly",
                              "ReadWrite"
                            ],
                            "x-ms-enum": {
                              "name": "HostCachingOptions",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "None",
                                  "value": "None"
                                },
                                {
                                  "name": "ReadOnly",
                                  "value": "ReadOnly"
                                },
                                {
                                  "name": "ReadWrite",
                                  "value": "ReadWrite"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "scheduleParameters": {
                      "type": "array",
                      "description": "Virtual Machine schedules to be created",
                      "items": {
                        "type": "object",
                        "description": "Properties for creating a schedule.",
                        "properties": {
                          "properties": {
                            "description": "The properties of the schedule.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string",
                                "description": "The status of the schedule (i.e. Enabled, Disabled)",
                                "default": "Disabled",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "EnableStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled"
                                    }
                                  ]
                                }
                              },
                              "taskType": {
                                "type": "string",
                                "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                              },
                              "weeklyRecurrence": {
                                "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                                "type": "object",
                                "properties": {
                                  "weekdays": {
                                    "type": "array",
                                    "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "time": {
                                    "type": "string",
                                    "description": "The time of the day the schedule will occur."
                                  }
                                }
                              },
                              "dailyRecurrence": {
                                "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                                "type": "object",
                                "properties": {
                                  "time": {
                                    "type": "string",
                                    "description": "The time of day the schedule will occur."
                                  }
                                }
                              },
                              "hourlyRecurrence": {
                                "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                                "type": "object",
                                "properties": {
                                  "minute": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Minutes of the hour the schedule will run."
                                  }
                                }
                              },
                              "timeZoneId": {
                                "type": "string",
                                "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                              },
                              "notificationSettings": {
                                "description": "Notification settings.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "type": "string",
                                    "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                    "default": "Disabled",
                                    "enum": [
                                      "Enabled",
                                      "Disabled"
                                    ],
                                    "x-ms-enum": {
                                      "name": "EnableStatus",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Enabled",
                                          "value": "Enabled"
                                        },
                                        {
                                          "name": "Disabled",
                                          "value": "Disabled"
                                        }
                                      ]
                                    }
                                  },
                                  "timeInMinutes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Time in minutes before event at which notification will be sent."
                                  },
                                  "webhookUrl": {
                                    "type": "string",
                                    "description": "The webhook URL to which the notification will be sent."
                                  },
                                  "emailRecipient": {
                                    "type": "string",
                                    "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                  },
                                  "notificationLocale": {
                                    "type": "string",
                                    "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                  }
                                }
                              },
                              "targetResourceId": {
                                "type": "string",
                                "description": "The resource ID to which the schedule belongs"
                              }
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the virtual machine or environment"
                          },
                          "location": {
                            "type": "string",
                            "description": "The location of the new virtual machine or environment",
                            "readOnly": true
                          },
                          "tags": {
                            "type": "object",
                            "description": "The tags of the resource.",
                            "additionalProperties": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "name": {
                  "type": "string",
                  "description": "The name of the virtual machine or environment"
                },
                "location": {
                  "type": "string",
                  "description": "The location of the new virtual machine or environment"
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/customimages": {
      "get": {
        "operationId": "CustomImages_List",
        "tags": [
          "CustomImages"
        ],
        "description": "List custom images in a given lab.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=vm)'",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply to the operation. Example: '$filter=contains(name,'myName')",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: '$top=10'",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "The ordering expression for the results, using OData notation. Example: '$orderby=name desc'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The CustomImage items on this page",
                  "items": {
                    "type": "object",
                    "description": "A custom image.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The identifier of the resource.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource.",
                        "readOnly": true
                      },
                      "location": {
                        "type": "string",
                        "description": "The location of the resource."
                      },
                      "tags": {
                        "type": "object",
                        "description": "The tags of the resource.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "properties": {
                        "description": "The properties of the resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "vm": {
                            "description": "The virtual machine from which the image is to be created.",
                            "type": "object",
                            "properties": {
                              "sourceVmId": {
                                "type": "string",
                                "description": "The source vm identifier."
                              },
                              "windowsOsInfo": {
                                "description": "The Windows OS information of the VM.",
                                "type": "object",
                                "properties": {
                                  "windowsOsState": {
                                    "description": "The state of the Windows OS (i.e. NonSysprepped, SysprepRequested, SysprepApplied).",
                                    "type": "string",
                                    "enum": [
                                      "NonSysprepped",
                                      "SysprepRequested",
                                      "SysprepApplied"
                                    ],
                                    "x-ms-enum": {
                                      "name": "WindowsOsState",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "NonSysprepped",
                                          "value": "NonSysprepped"
                                        },
                                        {
                                          "name": "SysprepRequested",
                                          "value": "SysprepRequested"
                                        },
                                        {
                                          "name": "SysprepApplied",
                                          "value": "SysprepApplied"
                                        }
                                      ]
                                    }
                                  }
                                }
                              },
                              "linuxOsInfo": {
                                "description": "The Linux OS information of the VM.",
                                "type": "object",
                                "properties": {
                                  "linuxOsState": {
                                    "description": "The state of the Linux OS (i.e. NonDeprovisioned, DeprovisionRequested, DeprovisionApplied).",
                                    "type": "string",
                                    "enum": [
                                      "NonDeprovisioned",
                                      "DeprovisionRequested",
                                      "DeprovisionApplied"
                                    ],
                                    "x-ms-enum": {
                                      "name": "LinuxOsState",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "NonDeprovisioned",
                                          "value": "NonDeprovisioned"
                                        },
                                        {
                                          "name": "DeprovisionRequested",
                                          "value": "DeprovisionRequested"
                                        },
                                        {
                                          "name": "DeprovisionApplied",
                                          "value": "DeprovisionApplied"
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "vhd": {
                            "description": "The VHD from which the image is to be created.",
                            "type": "object",
                            "properties": {
                              "imageName": {
                                "type": "string",
                                "description": "The image name."
                              },
                              "sysPrep": {
                                "type": "boolean",
                                "description": "Indicates whether sysprep has been run on the VHD."
                              },
                              "osType": {
                                "description": "The OS type of the custom image (i.e. Windows, Linux)",
                                "type": "string",
                                "enum": [
                                  "Windows",
                                  "Linux",
                                  "None"
                                ],
                                "x-ms-enum": {
                                  "name": "CustomImageOsType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Windows",
                                      "value": "Windows"
                                    },
                                    {
                                      "name": "Linux",
                                      "value": "Linux"
                                    },
                                    {
                                      "name": "None",
                                      "value": "None"
                                    }
                                  ]
                                }
                              }
                            },
                            "required": [
                              "osType"
                            ]
                          },
                          "description": {
                            "type": "string",
                            "description": "The description of the custom image."
                          },
                          "author": {
                            "type": "string",
                            "description": "The author of the custom image."
                          },
                          "creationDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The creation date of the custom image.",
                            "readOnly": true
                          },
                          "managedImageId": {
                            "type": "string",
                            "description": "The Managed Image Id backing the custom image."
                          },
                          "managedSnapshotId": {
                            "type": "string",
                            "description": "The Managed Snapshot Id backing the custom image."
                          },
                          "dataDiskStorageInfo": {
                            "type": "array",
                            "description": "Storage information about the data disks present in the custom image",
                            "items": {
                              "type": "object",
                              "description": "Storage information about the data disks present in the custom image",
                              "properties": {
                                "lun": {
                                  "type": "string",
                                  "description": "Disk Lun"
                                },
                                "storageType": {
                                  "description": "Disk Storage Type",
                                  "type": "string",
                                  "enum": [
                                    "Standard",
                                    "Premium",
                                    "StandardSSD"
                                  ],
                                  "x-ms-enum": {
                                    "name": "StorageType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Standard",
                                        "value": "Standard"
                                      },
                                      {
                                        "name": "Premium",
                                        "value": "Premium"
                                      },
                                      {
                                        "name": "StandardSSD",
                                        "value": "StandardSSD"
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "customImagePlan": {
                            "description": "Storage information about the plan related to this custom image",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The id of the plan, equivalent to name of the plan"
                              },
                              "publisher": {
                                "type": "string",
                                "description": "The publisher for the plan from the marketplace image the custom image is derived from"
                              },
                              "offer": {
                                "type": "string",
                                "description": "The offer for the plan from the marketplace image the custom image is derived from"
                              }
                            }
                          },
                          "isPlanAuthorized": {
                            "type": "boolean",
                            "description": "Whether or not the custom images underlying offer/plan has been enabled for programmatic deployment"
                          },
                          "provisioningState": {
                            "type": "string",
                            "description": "The provisioning status of the resource.",
                            "readOnly": true
                          },
                          "uniqueIdentifier": {
                            "type": "string",
                            "description": "The unique immutable identifier of a resource (Guid).",
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "required": [
                      "properties"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/customimages/{name}": {
      "get": {
        "operationId": "CustomImages_Get",
        "tags": [
          "CustomImages"
        ],
        "description": "Get custom image.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the CustomImage",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=vm)'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A custom image.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "vm": {
                      "description": "The virtual machine from which the image is to be created.",
                      "type": "object",
                      "properties": {
                        "sourceVmId": {
                          "type": "string",
                          "description": "The source vm identifier."
                        },
                        "windowsOsInfo": {
                          "description": "The Windows OS information of the VM.",
                          "type": "object",
                          "properties": {
                            "windowsOsState": {
                              "description": "The state of the Windows OS (i.e. NonSysprepped, SysprepRequested, SysprepApplied).",
                              "type": "string",
                              "enum": [
                                "NonSysprepped",
                                "SysprepRequested",
                                "SysprepApplied"
                              ],
                              "x-ms-enum": {
                                "name": "WindowsOsState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "NonSysprepped",
                                    "value": "NonSysprepped"
                                  },
                                  {
                                    "name": "SysprepRequested",
                                    "value": "SysprepRequested"
                                  },
                                  {
                                    "name": "SysprepApplied",
                                    "value": "SysprepApplied"
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "linuxOsInfo": {
                          "description": "The Linux OS information of the VM.",
                          "type": "object",
                          "properties": {
                            "linuxOsState": {
                              "description": "The state of the Linux OS (i.e. NonDeprovisioned, DeprovisionRequested, DeprovisionApplied).",
                              "type": "string",
                              "enum": [
                                "NonDeprovisioned",
                                "DeprovisionRequested",
                                "DeprovisionApplied"
                              ],
                              "x-ms-enum": {
                                "name": "LinuxOsState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "NonDeprovisioned",
                                    "value": "NonDeprovisioned"
                                  },
                                  {
                                    "name": "DeprovisionRequested",
                                    "value": "DeprovisionRequested"
                                  },
                                  {
                                    "name": "DeprovisionApplied",
                                    "value": "DeprovisionApplied"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "vhd": {
                      "description": "The VHD from which the image is to be created.",
                      "type": "object",
                      "properties": {
                        "imageName": {
                          "type": "string",
                          "description": "The image name."
                        },
                        "sysPrep": {
                          "type": "boolean",
                          "description": "Indicates whether sysprep has been run on the VHD."
                        },
                        "osType": {
                          "description": "The OS type of the custom image (i.e. Windows, Linux)",
                          "type": "string",
                          "enum": [
                            "Windows",
                            "Linux",
                            "None"
                          ],
                          "x-ms-enum": {
                            "name": "CustomImageOsType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Windows",
                                "value": "Windows"
                              },
                              {
                                "name": "Linux",
                                "value": "Linux"
                              },
                              {
                                "name": "None",
                                "value": "None"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "osType"
                      ]
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the custom image."
                    },
                    "author": {
                      "type": "string",
                      "description": "The author of the custom image."
                    },
                    "creationDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the custom image.",
                      "readOnly": true
                    },
                    "managedImageId": {
                      "type": "string",
                      "description": "The Managed Image Id backing the custom image."
                    },
                    "managedSnapshotId": {
                      "type": "string",
                      "description": "The Managed Snapshot Id backing the custom image."
                    },
                    "dataDiskStorageInfo": {
                      "type": "array",
                      "description": "Storage information about the data disks present in the custom image",
                      "items": {
                        "type": "object",
                        "description": "Storage information about the data disks present in the custom image",
                        "properties": {
                          "lun": {
                            "type": "string",
                            "description": "Disk Lun"
                          },
                          "storageType": {
                            "description": "Disk Storage Type",
                            "type": "string",
                            "enum": [
                              "Standard",
                              "Premium",
                              "StandardSSD"
                            ],
                            "x-ms-enum": {
                              "name": "StorageType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Standard",
                                  "value": "Standard"
                                },
                                {
                                  "name": "Premium",
                                  "value": "Premium"
                                },
                                {
                                  "name": "StandardSSD",
                                  "value": "StandardSSD"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "customImagePlan": {
                      "description": "Storage information about the plan related to this custom image",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The id of the plan, equivalent to name of the plan"
                        },
                        "publisher": {
                          "type": "string",
                          "description": "The publisher for the plan from the marketplace image the custom image is derived from"
                        },
                        "offer": {
                          "type": "string",
                          "description": "The offer for the plan from the marketplace image the custom image is derived from"
                        }
                      }
                    },
                    "isPlanAuthorized": {
                      "type": "boolean",
                      "description": "Whether or not the custom images underlying offer/plan has been enabled for programmatic deployment"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "put": {
        "operationId": "CustomImages_CreateOrUpdate",
        "tags": [
          "CustomImages"
        ],
        "description": "Create or replace an existing custom image. This operation can take a while to complete.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the CustomImage",
            "required": true,
            "type": "string"
          },
          {
            "name": "customImage",
            "in": "body",
            "description": "A custom image.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A custom image.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "vm": {
                      "description": "The virtual machine from which the image is to be created.",
                      "type": "object",
                      "properties": {
                        "sourceVmId": {
                          "type": "string",
                          "description": "The source vm identifier."
                        },
                        "windowsOsInfo": {
                          "description": "The Windows OS information of the VM.",
                          "type": "object",
                          "properties": {
                            "windowsOsState": {
                              "description": "The state of the Windows OS (i.e. NonSysprepped, SysprepRequested, SysprepApplied).",
                              "type": "string",
                              "enum": [
                                "NonSysprepped",
                                "SysprepRequested",
                                "SysprepApplied"
                              ],
                              "x-ms-enum": {
                                "name": "WindowsOsState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "NonSysprepped",
                                    "value": "NonSysprepped"
                                  },
                                  {
                                    "name": "SysprepRequested",
                                    "value": "SysprepRequested"
                                  },
                                  {
                                    "name": "SysprepApplied",
                                    "value": "SysprepApplied"
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "linuxOsInfo": {
                          "description": "The Linux OS information of the VM.",
                          "type": "object",
                          "properties": {
                            "linuxOsState": {
                              "description": "The state of the Linux OS (i.e. NonDeprovisioned, DeprovisionRequested, DeprovisionApplied).",
                              "type": "string",
                              "enum": [
                                "NonDeprovisioned",
                                "DeprovisionRequested",
                                "DeprovisionApplied"
                              ],
                              "x-ms-enum": {
                                "name": "LinuxOsState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "NonDeprovisioned",
                                    "value": "NonDeprovisioned"
                                  },
                                  {
                                    "name": "DeprovisionRequested",
                                    "value": "DeprovisionRequested"
                                  },
                                  {
                                    "name": "DeprovisionApplied",
                                    "value": "DeprovisionApplied"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "vhd": {
                      "description": "The VHD from which the image is to be created.",
                      "type": "object",
                      "properties": {
                        "imageName": {
                          "type": "string",
                          "description": "The image name."
                        },
                        "sysPrep": {
                          "type": "boolean",
                          "description": "Indicates whether sysprep has been run on the VHD."
                        },
                        "osType": {
                          "description": "The OS type of the custom image (i.e. Windows, Linux)",
                          "type": "string",
                          "enum": [
                            "Windows",
                            "Linux",
                            "None"
                          ],
                          "x-ms-enum": {
                            "name": "CustomImageOsType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Windows",
                                "value": "Windows"
                              },
                              {
                                "name": "Linux",
                                "value": "Linux"
                              },
                              {
                                "name": "None",
                                "value": "None"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "osType"
                      ]
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the custom image."
                    },
                    "author": {
                      "type": "string",
                      "description": "The author of the custom image."
                    },
                    "creationDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the custom image.",
                      "readOnly": true
                    },
                    "managedImageId": {
                      "type": "string",
                      "description": "The Managed Image Id backing the custom image."
                    },
                    "managedSnapshotId": {
                      "type": "string",
                      "description": "The Managed Snapshot Id backing the custom image."
                    },
                    "dataDiskStorageInfo": {
                      "type": "array",
                      "description": "Storage information about the data disks present in the custom image",
                      "items": {
                        "type": "object",
                        "description": "Storage information about the data disks present in the custom image",
                        "properties": {
                          "lun": {
                            "type": "string",
                            "description": "Disk Lun"
                          },
                          "storageType": {
                            "description": "Disk Storage Type",
                            "type": "string",
                            "enum": [
                              "Standard",
                              "Premium",
                              "StandardSSD"
                            ],
                            "x-ms-enum": {
                              "name": "StorageType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Standard",
                                  "value": "Standard"
                                },
                                {
                                  "name": "Premium",
                                  "value": "Premium"
                                },
                                {
                                  "name": "StandardSSD",
                                  "value": "StandardSSD"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "customImagePlan": {
                      "description": "Storage information about the plan related to this custom image",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The id of the plan, equivalent to name of the plan"
                        },
                        "publisher": {
                          "type": "string",
                          "description": "The publisher for the plan from the marketplace image the custom image is derived from"
                        },
                        "offer": {
                          "type": "string",
                          "description": "The offer for the plan from the marketplace image the custom image is derived from"
                        }
                      }
                    },
                    "isPlanAuthorized": {
                      "type": "boolean",
                      "description": "Whether or not the custom images underlying offer/plan has been enabled for programmatic deployment"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'CustomImage' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "A custom image.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "vm": {
                      "description": "The virtual machine from which the image is to be created.",
                      "type": "object",
                      "properties": {
                        "sourceVmId": {
                          "type": "string",
                          "description": "The source vm identifier."
                        },
                        "windowsOsInfo": {
                          "description": "The Windows OS information of the VM.",
                          "type": "object",
                          "properties": {
                            "windowsOsState": {
                              "description": "The state of the Windows OS (i.e. NonSysprepped, SysprepRequested, SysprepApplied).",
                              "type": "string",
                              "enum": [
                                "NonSysprepped",
                                "SysprepRequested",
                                "SysprepApplied"
                              ],
                              "x-ms-enum": {
                                "name": "WindowsOsState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "NonSysprepped",
                                    "value": "NonSysprepped"
                                  },
                                  {
                                    "name": "SysprepRequested",
                                    "value": "SysprepRequested"
                                  },
                                  {
                                    "name": "SysprepApplied",
                                    "value": "SysprepApplied"
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "linuxOsInfo": {
                          "description": "The Linux OS information of the VM.",
                          "type": "object",
                          "properties": {
                            "linuxOsState": {
                              "description": "The state of the Linux OS (i.e. NonDeprovisioned, DeprovisionRequested, DeprovisionApplied).",
                              "type": "string",
                              "enum": [
                                "NonDeprovisioned",
                                "DeprovisionRequested",
                                "DeprovisionApplied"
                              ],
                              "x-ms-enum": {
                                "name": "LinuxOsState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "NonDeprovisioned",
                                    "value": "NonDeprovisioned"
                                  },
                                  {
                                    "name": "DeprovisionRequested",
                                    "value": "DeprovisionRequested"
                                  },
                                  {
                                    "name": "DeprovisionApplied",
                                    "value": "DeprovisionApplied"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "vhd": {
                      "description": "The VHD from which the image is to be created.",
                      "type": "object",
                      "properties": {
                        "imageName": {
                          "type": "string",
                          "description": "The image name."
                        },
                        "sysPrep": {
                          "type": "boolean",
                          "description": "Indicates whether sysprep has been run on the VHD."
                        },
                        "osType": {
                          "description": "The OS type of the custom image (i.e. Windows, Linux)",
                          "type": "string",
                          "enum": [
                            "Windows",
                            "Linux",
                            "None"
                          ],
                          "x-ms-enum": {
                            "name": "CustomImageOsType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Windows",
                                "value": "Windows"
                              },
                              {
                                "name": "Linux",
                                "value": "Linux"
                              },
                              {
                                "name": "None",
                                "value": "None"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "osType"
                      ]
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the custom image."
                    },
                    "author": {
                      "type": "string",
                      "description": "The author of the custom image."
                    },
                    "creationDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the custom image.",
                      "readOnly": true
                    },
                    "managedImageId": {
                      "type": "string",
                      "description": "The Managed Image Id backing the custom image."
                    },
                    "managedSnapshotId": {
                      "type": "string",
                      "description": "The Managed Snapshot Id backing the custom image."
                    },
                    "dataDiskStorageInfo": {
                      "type": "array",
                      "description": "Storage information about the data disks present in the custom image",
                      "items": {
                        "type": "object",
                        "description": "Storage information about the data disks present in the custom image",
                        "properties": {
                          "lun": {
                            "type": "string",
                            "description": "Disk Lun"
                          },
                          "storageType": {
                            "description": "Disk Storage Type",
                            "type": "string",
                            "enum": [
                              "Standard",
                              "Premium",
                              "StandardSSD"
                            ],
                            "x-ms-enum": {
                              "name": "StorageType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Standard",
                                  "value": "Standard"
                                },
                                {
                                  "name": "Premium",
                                  "value": "Premium"
                                },
                                {
                                  "name": "StandardSSD",
                                  "value": "StandardSSD"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "customImagePlan": {
                      "description": "Storage information about the plan related to this custom image",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The id of the plan, equivalent to name of the plan"
                        },
                        "publisher": {
                          "type": "string",
                          "description": "The publisher for the plan from the marketplace image the custom image is derived from"
                        },
                        "offer": {
                          "type": "string",
                          "description": "The offer for the plan from the marketplace image the custom image is derived from"
                        }
                      }
                    },
                    "isPlanAuthorized": {
                      "type": "boolean",
                      "description": "Whether or not the custom images underlying offer/plan has been enabled for programmatic deployment"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          },
          "201": {
            "description": "Resource 'CustomImage' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "A custom image.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "vm": {
                      "description": "The virtual machine from which the image is to be created.",
                      "type": "object",
                      "properties": {
                        "sourceVmId": {
                          "type": "string",
                          "description": "The source vm identifier."
                        },
                        "windowsOsInfo": {
                          "description": "The Windows OS information of the VM.",
                          "type": "object",
                          "properties": {
                            "windowsOsState": {
                              "description": "The state of the Windows OS (i.e. NonSysprepped, SysprepRequested, SysprepApplied).",
                              "type": "string",
                              "enum": [
                                "NonSysprepped",
                                "SysprepRequested",
                                "SysprepApplied"
                              ],
                              "x-ms-enum": {
                                "name": "WindowsOsState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "NonSysprepped",
                                    "value": "NonSysprepped"
                                  },
                                  {
                                    "name": "SysprepRequested",
                                    "value": "SysprepRequested"
                                  },
                                  {
                                    "name": "SysprepApplied",
                                    "value": "SysprepApplied"
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "linuxOsInfo": {
                          "description": "The Linux OS information of the VM.",
                          "type": "object",
                          "properties": {
                            "linuxOsState": {
                              "description": "The state of the Linux OS (i.e. NonDeprovisioned, DeprovisionRequested, DeprovisionApplied).",
                              "type": "string",
                              "enum": [
                                "NonDeprovisioned",
                                "DeprovisionRequested",
                                "DeprovisionApplied"
                              ],
                              "x-ms-enum": {
                                "name": "LinuxOsState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "NonDeprovisioned",
                                    "value": "NonDeprovisioned"
                                  },
                                  {
                                    "name": "DeprovisionRequested",
                                    "value": "DeprovisionRequested"
                                  },
                                  {
                                    "name": "DeprovisionApplied",
                                    "value": "DeprovisionApplied"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "vhd": {
                      "description": "The VHD from which the image is to be created.",
                      "type": "object",
                      "properties": {
                        "imageName": {
                          "type": "string",
                          "description": "The image name."
                        },
                        "sysPrep": {
                          "type": "boolean",
                          "description": "Indicates whether sysprep has been run on the VHD."
                        },
                        "osType": {
                          "description": "The OS type of the custom image (i.e. Windows, Linux)",
                          "type": "string",
                          "enum": [
                            "Windows",
                            "Linux",
                            "None"
                          ],
                          "x-ms-enum": {
                            "name": "CustomImageOsType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Windows",
                                "value": "Windows"
                              },
                              {
                                "name": "Linux",
                                "value": "Linux"
                              },
                              {
                                "name": "None",
                                "value": "None"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "osType"
                      ]
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the custom image."
                    },
                    "author": {
                      "type": "string",
                      "description": "The author of the custom image."
                    },
                    "creationDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the custom image.",
                      "readOnly": true
                    },
                    "managedImageId": {
                      "type": "string",
                      "description": "The Managed Image Id backing the custom image."
                    },
                    "managedSnapshotId": {
                      "type": "string",
                      "description": "The Managed Snapshot Id backing the custom image."
                    },
                    "dataDiskStorageInfo": {
                      "type": "array",
                      "description": "Storage information about the data disks present in the custom image",
                      "items": {
                        "type": "object",
                        "description": "Storage information about the data disks present in the custom image",
                        "properties": {
                          "lun": {
                            "type": "string",
                            "description": "Disk Lun"
                          },
                          "storageType": {
                            "description": "Disk Storage Type",
                            "type": "string",
                            "enum": [
                              "Standard",
                              "Premium",
                              "StandardSSD"
                            ],
                            "x-ms-enum": {
                              "name": "StorageType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Standard",
                                  "value": "Standard"
                                },
                                {
                                  "name": "Premium",
                                  "value": "Premium"
                                },
                                {
                                  "name": "StandardSSD",
                                  "value": "StandardSSD"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "customImagePlan": {
                      "description": "Storage information about the plan related to this custom image",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The id of the plan, equivalent to name of the plan"
                        },
                        "publisher": {
                          "type": "string",
                          "description": "The publisher for the plan from the marketplace image the custom image is derived from"
                        },
                        "offer": {
                          "type": "string",
                          "description": "The offer for the plan from the marketplace image the custom image is derived from"
                        }
                      }
                    },
                    "isPlanAuthorized": {
                      "type": "boolean",
                      "description": "Whether or not the custom images underlying offer/plan has been enabled for programmatic deployment"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "CustomImages_Update",
        "tags": [
          "CustomImages"
        ],
        "description": "Allows modifying tags of custom images. All other properties will be ignored.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the CustomImage",
            "required": true,
            "type": "string"
          },
          {
            "name": "customImage",
            "in": "body",
            "description": "A custom image.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A custom image.",
              "properties": {
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A custom image.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "vm": {
                      "description": "The virtual machine from which the image is to be created.",
                      "type": "object",
                      "properties": {
                        "sourceVmId": {
                          "type": "string",
                          "description": "The source vm identifier."
                        },
                        "windowsOsInfo": {
                          "description": "The Windows OS information of the VM.",
                          "type": "object",
                          "properties": {
                            "windowsOsState": {
                              "description": "The state of the Windows OS (i.e. NonSysprepped, SysprepRequested, SysprepApplied).",
                              "type": "string",
                              "enum": [
                                "NonSysprepped",
                                "SysprepRequested",
                                "SysprepApplied"
                              ],
                              "x-ms-enum": {
                                "name": "WindowsOsState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "NonSysprepped",
                                    "value": "NonSysprepped"
                                  },
                                  {
                                    "name": "SysprepRequested",
                                    "value": "SysprepRequested"
                                  },
                                  {
                                    "name": "SysprepApplied",
                                    "value": "SysprepApplied"
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "linuxOsInfo": {
                          "description": "The Linux OS information of the VM.",
                          "type": "object",
                          "properties": {
                            "linuxOsState": {
                              "description": "The state of the Linux OS (i.e. NonDeprovisioned, DeprovisionRequested, DeprovisionApplied).",
                              "type": "string",
                              "enum": [
                                "NonDeprovisioned",
                                "DeprovisionRequested",
                                "DeprovisionApplied"
                              ],
                              "x-ms-enum": {
                                "name": "LinuxOsState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "NonDeprovisioned",
                                    "value": "NonDeprovisioned"
                                  },
                                  {
                                    "name": "DeprovisionRequested",
                                    "value": "DeprovisionRequested"
                                  },
                                  {
                                    "name": "DeprovisionApplied",
                                    "value": "DeprovisionApplied"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "vhd": {
                      "description": "The VHD from which the image is to be created.",
                      "type": "object",
                      "properties": {
                        "imageName": {
                          "type": "string",
                          "description": "The image name."
                        },
                        "sysPrep": {
                          "type": "boolean",
                          "description": "Indicates whether sysprep has been run on the VHD."
                        },
                        "osType": {
                          "description": "The OS type of the custom image (i.e. Windows, Linux)",
                          "type": "string",
                          "enum": [
                            "Windows",
                            "Linux",
                            "None"
                          ],
                          "x-ms-enum": {
                            "name": "CustomImageOsType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Windows",
                                "value": "Windows"
                              },
                              {
                                "name": "Linux",
                                "value": "Linux"
                              },
                              {
                                "name": "None",
                                "value": "None"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "osType"
                      ]
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the custom image."
                    },
                    "author": {
                      "type": "string",
                      "description": "The author of the custom image."
                    },
                    "creationDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the custom image.",
                      "readOnly": true
                    },
                    "managedImageId": {
                      "type": "string",
                      "description": "The Managed Image Id backing the custom image."
                    },
                    "managedSnapshotId": {
                      "type": "string",
                      "description": "The Managed Snapshot Id backing the custom image."
                    },
                    "dataDiskStorageInfo": {
                      "type": "array",
                      "description": "Storage information about the data disks present in the custom image",
                      "items": {
                        "type": "object",
                        "description": "Storage information about the data disks present in the custom image",
                        "properties": {
                          "lun": {
                            "type": "string",
                            "description": "Disk Lun"
                          },
                          "storageType": {
                            "description": "Disk Storage Type",
                            "type": "string",
                            "enum": [
                              "Standard",
                              "Premium",
                              "StandardSSD"
                            ],
                            "x-ms-enum": {
                              "name": "StorageType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Standard",
                                  "value": "Standard"
                                },
                                {
                                  "name": "Premium",
                                  "value": "Premium"
                                },
                                {
                                  "name": "StandardSSD",
                                  "value": "StandardSSD"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "customImagePlan": {
                      "description": "Storage information about the plan related to this custom image",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The id of the plan, equivalent to name of the plan"
                        },
                        "publisher": {
                          "type": "string",
                          "description": "The publisher for the plan from the marketplace image the custom image is derived from"
                        },
                        "offer": {
                          "type": "string",
                          "description": "The offer for the plan from the marketplace image the custom image is derived from"
                        }
                      }
                    },
                    "isPlanAuthorized": {
                      "type": "boolean",
                      "description": "Whether or not the custom images underlying offer/plan has been enabled for programmatic deployment"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "delete": {
        "operationId": "CustomImages_Delete",
        "tags": [
          "CustomImages"
        ],
        "description": "Delete custom image. This operation can take a while to complete.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the CustomImage",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}/exportResourceUsage": {
      "post": {
        "operationId": "Labs_ExportResourceUsage",
        "tags": [
          "Labs"
        ],
        "description": "Exports the lab resource usage into a storage account This operation can take a while to complete.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "exportResourceUsageParameters",
            "in": "body",
            "description": "The parameters of the export operation.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The parameters of the export operation.",
              "properties": {
                "blobStorageAbsoluteSasUri": {
                  "type": "string",
                  "description": "The blob storage absolute sas uri with write permission to the container which the usage data needs to be uploaded to."
                },
                "usageStartDate": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The start time of the usage. If not provided, usage will be reported since the beginning of data collection."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/formulas": {
      "get": {
        "operationId": "Formulas_List",
        "tags": [
          "Formulas"
        ],
        "description": "List formulas in a given lab.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=description)'",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply to the operation. Example: '$filter=contains(name,'myName')",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: '$top=10'",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "The ordering expression for the results, using OData notation. Example: '$orderby=name desc'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Formula items on this page",
                  "items": {
                    "type": "object",
                    "description": "A formula for creating a VM, specifying an image base and other parameters",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The identifier of the resource.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource.",
                        "readOnly": true
                      },
                      "location": {
                        "type": "string",
                        "description": "The location of the resource."
                      },
                      "tags": {
                        "type": "object",
                        "description": "The tags of the resource.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "properties": {
                        "description": "The properties of the formula.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "The description of the formula."
                          },
                          "author": {
                            "type": "string",
                            "description": "The author of the formula.",
                            "readOnly": true
                          },
                          "osType": {
                            "type": "string",
                            "description": "The OS type of the formula."
                          },
                          "creationDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The creation date of the formula.",
                            "readOnly": true
                          },
                          "formulaContent": {
                            "type": "object",
                            "description": "Properties for creating a virtual machine.",
                            "properties": {
                              "properties": {
                                "description": "The properties of the resource.",
                                "x-ms-client-flatten": true,
                                "type": "object",
                                "properties": {
                                  "bulkCreationParameters": {
                                    "description": "The number of virtual machine instances to create.",
                                    "type": "object",
                                    "properties": {
                                      "instanceCount": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "The number of virtual machine instances to create."
                                      }
                                    }
                                  },
                                  "notes": {
                                    "type": "string",
                                    "description": "The notes of the virtual machine."
                                  },
                                  "ownerObjectId": {
                                    "type": "string",
                                    "description": "The object identifier of the owner of the virtual machine.",
                                    "default": "dynamicValue"
                                  },
                                  "ownerUserPrincipalName": {
                                    "type": "string",
                                    "description": "The user principal name of the virtual machine owner."
                                  },
                                  "createdDate": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The creation date of the virtual machine."
                                  },
                                  "customImageId": {
                                    "type": "string",
                                    "description": "The custom image identifier of the virtual machine."
                                  },
                                  "size": {
                                    "type": "string",
                                    "description": "The size of the virtual machine."
                                  },
                                  "userName": {
                                    "type": "string",
                                    "description": "The user name of the virtual machine."
                                  },
                                  "password": {
                                    "type": "string",
                                    "description": "The password of the virtual machine administrator."
                                  },
                                  "sshKey": {
                                    "type": "string",
                                    "description": "The SSH key of the virtual machine administrator."
                                  },
                                  "isAuthenticationWithSshKey": {
                                    "type": "boolean",
                                    "description": "Indicates whether this virtual machine uses an SSH key for authentication."
                                  },
                                  "labSubnetName": {
                                    "type": "string",
                                    "description": "The lab subnet name of the virtual machine."
                                  },
                                  "labVirtualNetworkId": {
                                    "type": "string",
                                    "description": "The lab virtual network identifier of the virtual machine."
                                  },
                                  "disallowPublicIpAddress": {
                                    "type": "boolean",
                                    "description": "Indicates whether the virtual machine is to be created without a public IP address.",
                                    "default": false
                                  },
                                  "artifacts": {
                                    "type": "array",
                                    "description": "The artifacts to be installed on the virtual machine.",
                                    "items": {
                                      "type": "object",
                                      "description": "Properties of an artifact.",
                                      "properties": {
                                        "artifactId": {
                                          "type": "string",
                                          "description": "The artifact's identifier."
                                        },
                                        "artifactTitle": {
                                          "type": "string",
                                          "description": "The artifact's title."
                                        },
                                        "parameters": {
                                          "type": "array",
                                          "description": "The parameters of the artifact.",
                                          "items": {
                                            "type": "object",
                                            "description": "Properties of an artifact parameter.",
                                            "properties": {
                                              "name": {
                                                "type": "string",
                                                "description": "The name of the artifact parameter."
                                              },
                                              "value": {
                                                "type": "string",
                                                "description": "The value of the artifact parameter."
                                              }
                                            }
                                          }
                                        },
                                        "status": {
                                          "type": "string",
                                          "description": "The status of the artifact."
                                        },
                                        "deploymentStatusMessage": {
                                          "type": "string",
                                          "description": "The status message from the deployment."
                                        },
                                        "vmExtensionStatusMessage": {
                                          "type": "string",
                                          "description": "The status message from the virtual machine extension."
                                        },
                                        "installTime": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The time that the artifact starts to install on the virtual machine."
                                        }
                                      }
                                    },
                                    "x-ms-identifiers": []
                                  },
                                  "galleryImageReference": {
                                    "description": "The Microsoft Azure Marketplace image reference of the virtual machine.",
                                    "type": "object",
                                    "properties": {
                                      "offer": {
                                        "type": "string",
                                        "description": "The offer of the gallery image."
                                      },
                                      "publisher": {
                                        "type": "string",
                                        "description": "The publisher of the gallery image."
                                      },
                                      "sku": {
                                        "type": "string",
                                        "description": "The SKU of the gallery image."
                                      },
                                      "osType": {
                                        "type": "string",
                                        "description": "The OS type of the gallery image."
                                      },
                                      "version": {
                                        "type": "string",
                                        "description": "The version of the gallery image."
                                      }
                                    }
                                  },
                                  "planId": {
                                    "type": "string",
                                    "description": "The id of the plan associated with the virtual machine image"
                                  },
                                  "networkInterface": {
                                    "description": "The network interface properties.",
                                    "type": "object",
                                    "properties": {
                                      "virtualNetworkId": {
                                        "type": "string",
                                        "description": "The resource ID of the virtual network."
                                      },
                                      "subnetId": {
                                        "type": "string",
                                        "description": "The resource ID of the sub net."
                                      },
                                      "publicIpAddressId": {
                                        "type": "string",
                                        "description": "The resource ID of the public IP address."
                                      },
                                      "publicIpAddress": {
                                        "type": "string",
                                        "description": "The public IP address."
                                      },
                                      "privateIpAddress": {
                                        "type": "string",
                                        "description": "The private IP address."
                                      },
                                      "dnsName": {
                                        "type": "string",
                                        "description": "The DNS name."
                                      },
                                      "rdpAuthority": {
                                        "type": "string",
                                        "description": "The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol)."
                                      },
                                      "sshAuthority": {
                                        "type": "string",
                                        "description": "The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH."
                                      },
                                      "sharedPublicIpAddressConfiguration": {
                                        "description": "The configuration for sharing a public IP address across multiple virtual machines.",
                                        "type": "object",
                                        "properties": {
                                          "inboundNatRules": {
                                            "type": "array",
                                            "description": "The incoming NAT rules",
                                            "items": {
                                              "type": "object",
                                              "description": "A rule for NAT - exposing a VM's port (backendPort) on the public IP address using a load balancer.",
                                              "properties": {
                                                "transportProtocol": {
                                                  "description": "The transport protocol for the endpoint.",
                                                  "type": "string",
                                                  "enum": [
                                                    "Tcp",
                                                    "Udp"
                                                  ],
                                                  "x-ms-enum": {
                                                    "name": "TransportProtocol",
                                                    "modelAsString": true,
                                                    "values": [
                                                      {
                                                        "name": "Tcp",
                                                        "value": "Tcp"
                                                      },
                                                      {
                                                        "name": "Udp",
                                                        "value": "Udp"
                                                      }
                                                    ]
                                                  }
                                                },
                                                "frontendPort": {
                                                  "type": "integer",
                                                  "format": "int32",
                                                  "description": "The external endpoint port of the inbound connection. Possible values range between 1 and 65535, inclusive. If unspecified, a value will be allocated automatically."
                                                },
                                                "backendPort": {
                                                  "type": "integer",
                                                  "format": "int32",
                                                  "description": "The port to which the external traffic will be redirected."
                                                }
                                              }
                                            },
                                            "x-ms-identifiers": []
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "expirationDate": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The expiration date for VM."
                                  },
                                  "allowClaim": {
                                    "type": "boolean",
                                    "description": "Indicates whether another user can take ownership of the virtual machine",
                                    "default": false
                                  },
                                  "storageType": {
                                    "type": "string",
                                    "description": "Storage type to use for virtual machine (i.e. Standard, Premium).",
                                    "default": "labStorageType"
                                  },
                                  "environmentId": {
                                    "type": "string",
                                    "description": "The resource ID of the environment that contains this virtual machine, if any."
                                  },
                                  "dataDiskParameters": {
                                    "type": "array",
                                    "description": "New or existing data disks to attach to the virtual machine after creation",
                                    "items": {
                                      "type": "object",
                                      "description": "Request body for adding a new or existing data disk to a virtual machine.",
                                      "properties": {
                                        "attachNewDataDiskOptions": {
                                          "description": "Specifies options to attach a new disk to the virtual machine.",
                                          "type": "object",
                                          "properties": {
                                            "diskSizeGiB": {
                                              "type": "integer",
                                              "format": "int32",
                                              "description": "Size of the disk to be attached in Gibibytes."
                                            },
                                            "diskName": {
                                              "type": "string",
                                              "description": "The name of the disk to be attached."
                                            },
                                            "diskType": {
                                              "description": "The storage type for the disk (i.e. Standard, Premium).",
                                              "type": "string",
                                              "enum": [
                                                "Standard",
                                                "Premium",
                                                "StandardSSD"
                                              ],
                                              "x-ms-enum": {
                                                "name": "StorageType",
                                                "modelAsString": true,
                                                "values": [
                                                  {
                                                    "name": "Standard",
                                                    "value": "Standard"
                                                  },
                                                  {
                                                    "name": "Premium",
                                                    "value": "Premium"
                                                  },
                                                  {
                                                    "name": "StandardSSD",
                                                    "value": "StandardSSD"
                                                  }
                                                ]
                                              }
                                            }
                                          }
                                        },
                                        "existingLabDiskId": {
                                          "type": "string",
                                          "description": "Specifies the existing lab disk id to attach to virtual machine."
                                        },
                                        "hostCaching": {
                                          "description": "Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).",
                                          "type": "string",
                                          "enum": [
                                            "None",
                                            "ReadOnly",
                                            "ReadWrite"
                                          ],
                                          "x-ms-enum": {
                                            "name": "HostCachingOptions",
                                            "modelAsString": true,
                                            "values": [
                                              {
                                                "name": "None",
                                                "value": "None"
                                              },
                                              {
                                                "name": "ReadOnly",
                                                "value": "ReadOnly"
                                              },
                                              {
                                                "name": "ReadWrite",
                                                "value": "ReadWrite"
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    },
                                    "x-ms-identifiers": []
                                  },
                                  "scheduleParameters": {
                                    "type": "array",
                                    "description": "Virtual Machine schedules to be created",
                                    "items": {
                                      "type": "object",
                                      "description": "Properties for creating a schedule.",
                                      "properties": {
                                        "properties": {
                                          "description": "The properties of the schedule.",
                                          "x-ms-client-flatten": true,
                                          "type": "object",
                                          "properties": {
                                            "status": {
                                              "type": "string",
                                              "description": "The status of the schedule (i.e. Enabled, Disabled)",
                                              "default": "Disabled",
                                              "enum": [
                                                "Enabled",
                                                "Disabled"
                                              ],
                                              "x-ms-enum": {
                                                "name": "EnableStatus",
                                                "modelAsString": true,
                                                "values": [
                                                  {
                                                    "name": "Enabled",
                                                    "value": "Enabled"
                                                  },
                                                  {
                                                    "name": "Disabled",
                                                    "value": "Disabled"
                                                  }
                                                ]
                                              }
                                            },
                                            "taskType": {
                                              "type": "string",
                                              "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                                            },
                                            "weeklyRecurrence": {
                                              "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                                              "type": "object",
                                              "properties": {
                                                "weekdays": {
                                                  "type": "array",
                                                  "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "time": {
                                                  "type": "string",
                                                  "description": "The time of the day the schedule will occur."
                                                }
                                              }
                                            },
                                            "dailyRecurrence": {
                                              "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                                              "type": "object",
                                              "properties": {
                                                "time": {
                                                  "type": "string",
                                                  "description": "The time of day the schedule will occur."
                                                }
                                              }
                                            },
                                            "hourlyRecurrence": {
                                              "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                                              "type": "object",
                                              "properties": {
                                                "minute": {
                                                  "type": "integer",
                                                  "format": "int32",
                                                  "description": "Minutes of the hour the schedule will run."
                                                }
                                              }
                                            },
                                            "timeZoneId": {
                                              "type": "string",
                                              "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                                            },
                                            "notificationSettings": {
                                              "description": "Notification settings.",
                                              "type": "object",
                                              "properties": {
                                                "status": {
                                                  "type": "string",
                                                  "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                                  "default": "Disabled",
                                                  "enum": [
                                                    "Enabled",
                                                    "Disabled"
                                                  ],
                                                  "x-ms-enum": {
                                                    "name": "EnableStatus",
                                                    "modelAsString": true,
                                                    "values": [
                                                      {
                                                        "name": "Enabled",
                                                        "value": "Enabled"
                                                      },
                                                      {
                                                        "name": "Disabled",
                                                        "value": "Disabled"
                                                      }
                                                    ]
                                                  }
                                                },
                                                "timeInMinutes": {
                                                  "type": "integer",
                                                  "format": "int32",
                                                  "description": "Time in minutes before event at which notification will be sent."
                                                },
                                                "webhookUrl": {
                                                  "type": "string",
                                                  "description": "The webhook URL to which the notification will be sent."
                                                },
                                                "emailRecipient": {
                                                  "type": "string",
                                                  "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                                },
                                                "notificationLocale": {
                                                  "type": "string",
                                                  "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                                }
                                              }
                                            },
                                            "targetResourceId": {
                                              "type": "string",
                                              "description": "The resource ID to which the schedule belongs"
                                            }
                                          }
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the virtual machine or environment"
                                        },
                                        "location": {
                                          "type": "string",
                                          "description": "The location of the new virtual machine or environment",
                                          "readOnly": true
                                        },
                                        "tags": {
                                          "type": "object",
                                          "description": "The tags of the resource.",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the virtual machine or environment"
                              },
                              "location": {
                                "type": "string",
                                "description": "The location of the new virtual machine or environment"
                              },
                              "tags": {
                                "type": "object",
                                "description": "The tags of the resource.",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "vm": {
                            "description": "Information about a VM from which a formula is to be created.",
                            "type": "object",
                            "properties": {
                              "labVmId": {
                                "type": "string",
                                "description": "The identifier of the VM from which a formula is to be created."
                              }
                            }
                          },
                          "provisioningState": {
                            "type": "string",
                            "description": "The provisioning status of the resource.",
                            "readOnly": true
                          },
                          "uniqueIdentifier": {
                            "type": "string",
                            "description": "The unique immutable identifier of a resource (Guid).",
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "required": [
                      "properties"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/formulas/{name}": {
      "get": {
        "operationId": "Formulas_Get",
        "tags": [
          "Formulas"
        ],
        "description": "Get formula.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the Formula",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=description)'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A formula for creating a VM, specifying an image base and other parameters",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the formula.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "The description of the formula."
                    },
                    "author": {
                      "type": "string",
                      "description": "The author of the formula.",
                      "readOnly": true
                    },
                    "osType": {
                      "type": "string",
                      "description": "The OS type of the formula."
                    },
                    "creationDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the formula.",
                      "readOnly": true
                    },
                    "formulaContent": {
                      "type": "object",
                      "description": "Properties for creating a virtual machine.",
                      "properties": {
                        "properties": {
                          "description": "The properties of the resource.",
                          "x-ms-client-flatten": true,
                          "type": "object",
                          "properties": {
                            "bulkCreationParameters": {
                              "description": "The number of virtual machine instances to create.",
                              "type": "object",
                              "properties": {
                                "instanceCount": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The number of virtual machine instances to create."
                                }
                              }
                            },
                            "notes": {
                              "type": "string",
                              "description": "The notes of the virtual machine."
                            },
                            "ownerObjectId": {
                              "type": "string",
                              "description": "The object identifier of the owner of the virtual machine.",
                              "default": "dynamicValue"
                            },
                            "ownerUserPrincipalName": {
                              "type": "string",
                              "description": "The user principal name of the virtual machine owner."
                            },
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The creation date of the virtual machine."
                            },
                            "customImageId": {
                              "type": "string",
                              "description": "The custom image identifier of the virtual machine."
                            },
                            "size": {
                              "type": "string",
                              "description": "The size of the virtual machine."
                            },
                            "userName": {
                              "type": "string",
                              "description": "The user name of the virtual machine."
                            },
                            "password": {
                              "type": "string",
                              "description": "The password of the virtual machine administrator."
                            },
                            "sshKey": {
                              "type": "string",
                              "description": "The SSH key of the virtual machine administrator."
                            },
                            "isAuthenticationWithSshKey": {
                              "type": "boolean",
                              "description": "Indicates whether this virtual machine uses an SSH key for authentication."
                            },
                            "labSubnetName": {
                              "type": "string",
                              "description": "The lab subnet name of the virtual machine."
                            },
                            "labVirtualNetworkId": {
                              "type": "string",
                              "description": "The lab virtual network identifier of the virtual machine."
                            },
                            "disallowPublicIpAddress": {
                              "type": "boolean",
                              "description": "Indicates whether the virtual machine is to be created without a public IP address.",
                              "default": false
                            },
                            "artifacts": {
                              "type": "array",
                              "description": "The artifacts to be installed on the virtual machine.",
                              "items": {
                                "type": "object",
                                "description": "Properties of an artifact.",
                                "properties": {
                                  "artifactId": {
                                    "type": "string",
                                    "description": "The artifact's identifier."
                                  },
                                  "artifactTitle": {
                                    "type": "string",
                                    "description": "The artifact's title."
                                  },
                                  "parameters": {
                                    "type": "array",
                                    "description": "The parameters of the artifact.",
                                    "items": {
                                      "type": "object",
                                      "description": "Properties of an artifact parameter.",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the artifact parameter."
                                        },
                                        "value": {
                                          "type": "string",
                                          "description": "The value of the artifact parameter."
                                        }
                                      }
                                    }
                                  },
                                  "status": {
                                    "type": "string",
                                    "description": "The status of the artifact."
                                  },
                                  "deploymentStatusMessage": {
                                    "type": "string",
                                    "description": "The status message from the deployment."
                                  },
                                  "vmExtensionStatusMessage": {
                                    "type": "string",
                                    "description": "The status message from the virtual machine extension."
                                  },
                                  "installTime": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The time that the artifact starts to install on the virtual machine."
                                  }
                                }
                              },
                              "x-ms-identifiers": []
                            },
                            "galleryImageReference": {
                              "description": "The Microsoft Azure Marketplace image reference of the virtual machine.",
                              "type": "object",
                              "properties": {
                                "offer": {
                                  "type": "string",
                                  "description": "The offer of the gallery image."
                                },
                                "publisher": {
                                  "type": "string",
                                  "description": "The publisher of the gallery image."
                                },
                                "sku": {
                                  "type": "string",
                                  "description": "The SKU of the gallery image."
                                },
                                "osType": {
                                  "type": "string",
                                  "description": "The OS type of the gallery image."
                                },
                                "version": {
                                  "type": "string",
                                  "description": "The version of the gallery image."
                                }
                              }
                            },
                            "planId": {
                              "type": "string",
                              "description": "The id of the plan associated with the virtual machine image"
                            },
                            "networkInterface": {
                              "description": "The network interface properties.",
                              "type": "object",
                              "properties": {
                                "virtualNetworkId": {
                                  "type": "string",
                                  "description": "The resource ID of the virtual network."
                                },
                                "subnetId": {
                                  "type": "string",
                                  "description": "The resource ID of the sub net."
                                },
                                "publicIpAddressId": {
                                  "type": "string",
                                  "description": "The resource ID of the public IP address."
                                },
                                "publicIpAddress": {
                                  "type": "string",
                                  "description": "The public IP address."
                                },
                                "privateIpAddress": {
                                  "type": "string",
                                  "description": "The private IP address."
                                },
                                "dnsName": {
                                  "type": "string",
                                  "description": "The DNS name."
                                },
                                "rdpAuthority": {
                                  "type": "string",
                                  "description": "The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol)."
                                },
                                "sshAuthority": {
                                  "type": "string",
                                  "description": "The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH."
                                },
                                "sharedPublicIpAddressConfiguration": {
                                  "description": "The configuration for sharing a public IP address across multiple virtual machines.",
                                  "type": "object",
                                  "properties": {
                                    "inboundNatRules": {
                                      "type": "array",
                                      "description": "The incoming NAT rules",
                                      "items": {
                                        "type": "object",
                                        "description": "A rule for NAT - exposing a VM's port (backendPort) on the public IP address using a load balancer.",
                                        "properties": {
                                          "transportProtocol": {
                                            "description": "The transport protocol for the endpoint.",
                                            "type": "string",
                                            "enum": [
                                              "Tcp",
                                              "Udp"
                                            ],
                                            "x-ms-enum": {
                                              "name": "TransportProtocol",
                                              "modelAsString": true,
                                              "values": [
                                                {
                                                  "name": "Tcp",
                                                  "value": "Tcp"
                                                },
                                                {
                                                  "name": "Udp",
                                                  "value": "Udp"
                                                }
                                              ]
                                            }
                                          },
                                          "frontendPort": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "The external endpoint port of the inbound connection. Possible values range between 1 and 65535, inclusive. If unspecified, a value will be allocated automatically."
                                          },
                                          "backendPort": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "The port to which the external traffic will be redirected."
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": []
                                    }
                                  }
                                }
                              }
                            },
                            "expirationDate": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The expiration date for VM."
                            },
                            "allowClaim": {
                              "type": "boolean",
                              "description": "Indicates whether another user can take ownership of the virtual machine",
                              "default": false
                            },
                            "storageType": {
                              "type": "string",
                              "description": "Storage type to use for virtual machine (i.e. Standard, Premium).",
                              "default": "labStorageType"
                            },
                            "environmentId": {
                              "type": "string",
                              "description": "The resource ID of the environment that contains this virtual machine, if any."
                            },
                            "dataDiskParameters": {
                              "type": "array",
                              "description": "New or existing data disks to attach to the virtual machine after creation",
                              "items": {
                                "type": "object",
                                "description": "Request body for adding a new or existing data disk to a virtual machine.",
                                "properties": {
                                  "attachNewDataDiskOptions": {
                                    "description": "Specifies options to attach a new disk to the virtual machine.",
                                    "type": "object",
                                    "properties": {
                                      "diskSizeGiB": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "Size of the disk to be attached in Gibibytes."
                                      },
                                      "diskName": {
                                        "type": "string",
                                        "description": "The name of the disk to be attached."
                                      },
                                      "diskType": {
                                        "description": "The storage type for the disk (i.e. Standard, Premium).",
                                        "type": "string",
                                        "enum": [
                                          "Standard",
                                          "Premium",
                                          "StandardSSD"
                                        ],
                                        "x-ms-enum": {
                                          "name": "StorageType",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "Standard",
                                              "value": "Standard"
                                            },
                                            {
                                              "name": "Premium",
                                              "value": "Premium"
                                            },
                                            {
                                              "name": "StandardSSD",
                                              "value": "StandardSSD"
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "existingLabDiskId": {
                                    "type": "string",
                                    "description": "Specifies the existing lab disk id to attach to virtual machine."
                                  },
                                  "hostCaching": {
                                    "description": "Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).",
                                    "type": "string",
                                    "enum": [
                                      "None",
                                      "ReadOnly",
                                      "ReadWrite"
                                    ],
                                    "x-ms-enum": {
                                      "name": "HostCachingOptions",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "None",
                                          "value": "None"
                                        },
                                        {
                                          "name": "ReadOnly",
                                          "value": "ReadOnly"
                                        },
                                        {
                                          "name": "ReadWrite",
                                          "value": "ReadWrite"
                                        }
                                      ]
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": []
                            },
                            "scheduleParameters": {
                              "type": "array",
                              "description": "Virtual Machine schedules to be created",
                              "items": {
                                "type": "object",
                                "description": "Properties for creating a schedule.",
                                "properties": {
                                  "properties": {
                                    "description": "The properties of the schedule.",
                                    "x-ms-client-flatten": true,
                                    "type": "object",
                                    "properties": {
                                      "status": {
                                        "type": "string",
                                        "description": "The status of the schedule (i.e. Enabled, Disabled)",
                                        "default": "Disabled",
                                        "enum": [
                                          "Enabled",
                                          "Disabled"
                                        ],
                                        "x-ms-enum": {
                                          "name": "EnableStatus",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "Enabled",
                                              "value": "Enabled"
                                            },
                                            {
                                              "name": "Disabled",
                                              "value": "Disabled"
                                            }
                                          ]
                                        }
                                      },
                                      "taskType": {
                                        "type": "string",
                                        "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                                      },
                                      "weeklyRecurrence": {
                                        "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                                        "type": "object",
                                        "properties": {
                                          "weekdays": {
                                            "type": "array",
                                            "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "time": {
                                            "type": "string",
                                            "description": "The time of the day the schedule will occur."
                                          }
                                        }
                                      },
                                      "dailyRecurrence": {
                                        "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                                        "type": "object",
                                        "properties": {
                                          "time": {
                                            "type": "string",
                                            "description": "The time of day the schedule will occur."
                                          }
                                        }
                                      },
                                      "hourlyRecurrence": {
                                        "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                                        "type": "object",
                                        "properties": {
                                          "minute": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Minutes of the hour the schedule will run."
                                          }
                                        }
                                      },
                                      "timeZoneId": {
                                        "type": "string",
                                        "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                                      },
                                      "notificationSettings": {
                                        "description": "Notification settings.",
                                        "type": "object",
                                        "properties": {
                                          "status": {
                                            "type": "string",
                                            "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                            "default": "Disabled",
                                            "enum": [
                                              "Enabled",
                                              "Disabled"
                                            ],
                                            "x-ms-enum": {
                                              "name": "EnableStatus",
                                              "modelAsString": true,
                                              "values": [
                                                {
                                                  "name": "Enabled",
                                                  "value": "Enabled"
                                                },
                                                {
                                                  "name": "Disabled",
                                                  "value": "Disabled"
                                                }
                                              ]
                                            }
                                          },
                                          "timeInMinutes": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Time in minutes before event at which notification will be sent."
                                          },
                                          "webhookUrl": {
                                            "type": "string",
                                            "description": "The webhook URL to which the notification will be sent."
                                          },
                                          "emailRecipient": {
                                            "type": "string",
                                            "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                          },
                                          "notificationLocale": {
                                            "type": "string",
                                            "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                          }
                                        }
                                      },
                                      "targetResourceId": {
                                        "type": "string",
                                        "description": "The resource ID to which the schedule belongs"
                                      }
                                    }
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the virtual machine or environment"
                                  },
                                  "location": {
                                    "type": "string",
                                    "description": "The location of the new virtual machine or environment",
                                    "readOnly": true
                                  },
                                  "tags": {
                                    "type": "object",
                                    "description": "The tags of the resource.",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the virtual machine or environment"
                        },
                        "location": {
                          "type": "string",
                          "description": "The location of the new virtual machine or environment"
                        },
                        "tags": {
                          "type": "object",
                          "description": "The tags of the resource.",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "vm": {
                      "description": "Information about a VM from which a formula is to be created.",
                      "type": "object",
                      "properties": {
                        "labVmId": {
                          "type": "string",
                          "description": "The identifier of the VM from which a formula is to be created."
                        }
                      }
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "put": {
        "operationId": "Formulas_CreateOrUpdate",
        "tags": [
          "Formulas"
        ],
        "description": "Create or replace an existing formula. This operation can take a while to complete.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the Formula",
            "required": true,
            "type": "string"
          },
          {
            "name": "formula",
            "in": "body",
            "description": "A formula for creating a VM, specifying an image base and other parameters",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A formula for creating a VM, specifying an image base and other parameters",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the formula.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "The description of the formula."
                    },
                    "author": {
                      "type": "string",
                      "description": "The author of the formula.",
                      "readOnly": true
                    },
                    "osType": {
                      "type": "string",
                      "description": "The OS type of the formula."
                    },
                    "creationDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the formula.",
                      "readOnly": true
                    },
                    "formulaContent": {
                      "type": "object",
                      "description": "Properties for creating a virtual machine.",
                      "properties": {
                        "properties": {
                          "description": "The properties of the resource.",
                          "x-ms-client-flatten": true,
                          "type": "object",
                          "properties": {
                            "bulkCreationParameters": {
                              "description": "The number of virtual machine instances to create.",
                              "type": "object",
                              "properties": {
                                "instanceCount": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The number of virtual machine instances to create."
                                }
                              }
                            },
                            "notes": {
                              "type": "string",
                              "description": "The notes of the virtual machine."
                            },
                            "ownerObjectId": {
                              "type": "string",
                              "description": "The object identifier of the owner of the virtual machine.",
                              "default": "dynamicValue"
                            },
                            "ownerUserPrincipalName": {
                              "type": "string",
                              "description": "The user principal name of the virtual machine owner."
                            },
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The creation date of the virtual machine."
                            },
                            "customImageId": {
                              "type": "string",
                              "description": "The custom image identifier of the virtual machine."
                            },
                            "size": {
                              "type": "string",
                              "description": "The size of the virtual machine."
                            },
                            "userName": {
                              "type": "string",
                              "description": "The user name of the virtual machine."
                            },
                            "password": {
                              "type": "string",
                              "description": "The password of the virtual machine administrator."
                            },
                            "sshKey": {
                              "type": "string",
                              "description": "The SSH key of the virtual machine administrator."
                            },
                            "isAuthenticationWithSshKey": {
                              "type": "boolean",
                              "description": "Indicates whether this virtual machine uses an SSH key for authentication."
                            },
                            "labSubnetName": {
                              "type": "string",
                              "description": "The lab subnet name of the virtual machine."
                            },
                            "labVirtualNetworkId": {
                              "type": "string",
                              "description": "The lab virtual network identifier of the virtual machine."
                            },
                            "disallowPublicIpAddress": {
                              "type": "boolean",
                              "description": "Indicates whether the virtual machine is to be created without a public IP address.",
                              "default": false
                            },
                            "artifacts": {
                              "type": "array",
                              "description": "The artifacts to be installed on the virtual machine.",
                              "items": {
                                "type": "object",
                                "description": "Properties of an artifact.",
                                "properties": {
                                  "artifactId": {
                                    "type": "string",
                                    "description": "The artifact's identifier."
                                  },
                                  "artifactTitle": {
                                    "type": "string",
                                    "description": "The artifact's title."
                                  },
                                  "parameters": {
                                    "type": "array",
                                    "description": "The parameters of the artifact.",
                                    "items": {
                                      "type": "object",
                                      "description": "Properties of an artifact parameter.",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the artifact parameter."
                                        },
                                        "value": {
                                          "type": "string",
                                          "description": "The value of the artifact parameter."
                                        }
                                      }
                                    }
                                  },
                                  "status": {
                                    "type": "string",
                                    "description": "The status of the artifact."
                                  },
                                  "deploymentStatusMessage": {
                                    "type": "string",
                                    "description": "The status message from the deployment."
                                  },
                                  "vmExtensionStatusMessage": {
                                    "type": "string",
                                    "description": "The status message from the virtual machine extension."
                                  },
                                  "installTime": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The time that the artifact starts to install on the virtual machine."
                                  }
                                }
                              },
                              "x-ms-identifiers": []
                            },
                            "galleryImageReference": {
                              "description": "The Microsoft Azure Marketplace image reference of the virtual machine.",
                              "type": "object",
                              "properties": {
                                "offer": {
                                  "type": "string",
                                  "description": "The offer of the gallery image."
                                },
                                "publisher": {
                                  "type": "string",
                                  "description": "The publisher of the gallery image."
                                },
                                "sku": {
                                  "type": "string",
                                  "description": "The SKU of the gallery image."
                                },
                                "osType": {
                                  "type": "string",
                                  "description": "The OS type of the gallery image."
                                },
                                "version": {
                                  "type": "string",
                                  "description": "The version of the gallery image."
                                }
                              }
                            },
                            "planId": {
                              "type": "string",
                              "description": "The id of the plan associated with the virtual machine image"
                            },
                            "networkInterface": {
                              "description": "The network interface properties.",
                              "type": "object",
                              "properties": {
                                "virtualNetworkId": {
                                  "type": "string",
                                  "description": "The resource ID of the virtual network."
                                },
                                "subnetId": {
                                  "type": "string",
                                  "description": "The resource ID of the sub net."
                                },
                                "publicIpAddressId": {
                                  "type": "string",
                                  "description": "The resource ID of the public IP address."
                                },
                                "publicIpAddress": {
                                  "type": "string",
                                  "description": "The public IP address."
                                },
                                "privateIpAddress": {
                                  "type": "string",
                                  "description": "The private IP address."
                                },
                                "dnsName": {
                                  "type": "string",
                                  "description": "The DNS name."
                                },
                                "rdpAuthority": {
                                  "type": "string",
                                  "description": "The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol)."
                                },
                                "sshAuthority": {
                                  "type": "string",
                                  "description": "The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH."
                                },
                                "sharedPublicIpAddressConfiguration": {
                                  "description": "The configuration for sharing a public IP address across multiple virtual machines.",
                                  "type": "object",
                                  "properties": {
                                    "inboundNatRules": {
                                      "type": "array",
                                      "description": "The incoming NAT rules",
                                      "items": {
                                        "type": "object",
                                        "description": "A rule for NAT - exposing a VM's port (backendPort) on the public IP address using a load balancer.",
                                        "properties": {
                                          "transportProtocol": {
                                            "description": "The transport protocol for the endpoint.",
                                            "type": "string",
                                            "enum": [
                                              "Tcp",
                                              "Udp"
                                            ],
                                            "x-ms-enum": {
                                              "name": "TransportProtocol",
                                              "modelAsString": true,
                                              "values": [
                                                {
                                                  "name": "Tcp",
                                                  "value": "Tcp"
                                                },
                                                {
                                                  "name": "Udp",
                                                  "value": "Udp"
                                                }
                                              ]
                                            }
                                          },
                                          "frontendPort": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "The external endpoint port of the inbound connection. Possible values range between 1 and 65535, inclusive. If unspecified, a value will be allocated automatically."
                                          },
                                          "backendPort": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "The port to which the external traffic will be redirected."
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": []
                                    }
                                  }
                                }
                              }
                            },
                            "expirationDate": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The expiration date for VM."
                            },
                            "allowClaim": {
                              "type": "boolean",
                              "description": "Indicates whether another user can take ownership of the virtual machine",
                              "default": false
                            },
                            "storageType": {
                              "type": "string",
                              "description": "Storage type to use for virtual machine (i.e. Standard, Premium).",
                              "default": "labStorageType"
                            },
                            "environmentId": {
                              "type": "string",
                              "description": "The resource ID of the environment that contains this virtual machine, if any."
                            },
                            "dataDiskParameters": {
                              "type": "array",
                              "description": "New or existing data disks to attach to the virtual machine after creation",
                              "items": {
                                "type": "object",
                                "description": "Request body for adding a new or existing data disk to a virtual machine.",
                                "properties": {
                                  "attachNewDataDiskOptions": {
                                    "description": "Specifies options to attach a new disk to the virtual machine.",
                                    "type": "object",
                                    "properties": {
                                      "diskSizeGiB": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "Size of the disk to be attached in Gibibytes."
                                      },
                                      "diskName": {
                                        "type": "string",
                                        "description": "The name of the disk to be attached."
                                      },
                                      "diskType": {
                                        "description": "The storage type for the disk (i.e. Standard, Premium).",
                                        "type": "string",
                                        "enum": [
                                          "Standard",
                                          "Premium",
                                          "StandardSSD"
                                        ],
                                        "x-ms-enum": {
                                          "name": "StorageType",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "Standard",
                                              "value": "Standard"
                                            },
                                            {
                                              "name": "Premium",
                                              "value": "Premium"
                                            },
                                            {
                                              "name": "StandardSSD",
                                              "value": "StandardSSD"
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "existingLabDiskId": {
                                    "type": "string",
                                    "description": "Specifies the existing lab disk id to attach to virtual machine."
                                  },
                                  "hostCaching": {
                                    "description": "Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).",
                                    "type": "string",
                                    "enum": [
                                      "None",
                                      "ReadOnly",
                                      "ReadWrite"
                                    ],
                                    "x-ms-enum": {
                                      "name": "HostCachingOptions",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "None",
                                          "value": "None"
                                        },
                                        {
                                          "name": "ReadOnly",
                                          "value": "ReadOnly"
                                        },
                                        {
                                          "name": "ReadWrite",
                                          "value": "ReadWrite"
                                        }
                                      ]
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": []
                            },
                            "scheduleParameters": {
                              "type": "array",
                              "description": "Virtual Machine schedules to be created",
                              "items": {
                                "type": "object",
                                "description": "Properties for creating a schedule.",
                                "properties": {
                                  "properties": {
                                    "description": "The properties of the schedule.",
                                    "x-ms-client-flatten": true,
                                    "type": "object",
                                    "properties": {
                                      "status": {
                                        "type": "string",
                                        "description": "The status of the schedule (i.e. Enabled, Disabled)",
                                        "default": "Disabled",
                                        "enum": [
                                          "Enabled",
                                          "Disabled"
                                        ],
                                        "x-ms-enum": {
                                          "name": "EnableStatus",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "Enabled",
                                              "value": "Enabled"
                                            },
                                            {
                                              "name": "Disabled",
                                              "value": "Disabled"
                                            }
                                          ]
                                        }
                                      },
                                      "taskType": {
                                        "type": "string",
                                        "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                                      },
                                      "weeklyRecurrence": {
                                        "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                                        "type": "object",
                                        "properties": {
                                          "weekdays": {
                                            "type": "array",
                                            "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "time": {
                                            "type": "string",
                                            "description": "The time of the day the schedule will occur."
                                          }
                                        }
                                      },
                                      "dailyRecurrence": {
                                        "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                                        "type": "object",
                                        "properties": {
                                          "time": {
                                            "type": "string",
                                            "description": "The time of day the schedule will occur."
                                          }
                                        }
                                      },
                                      "hourlyRecurrence": {
                                        "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                                        "type": "object",
                                        "properties": {
                                          "minute": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Minutes of the hour the schedule will run."
                                          }
                                        }
                                      },
                                      "timeZoneId": {
                                        "type": "string",
                                        "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                                      },
                                      "notificationSettings": {
                                        "description": "Notification settings.",
                                        "type": "object",
                                        "properties": {
                                          "status": {
                                            "type": "string",
                                            "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                            "default": "Disabled",
                                            "enum": [
                                              "Enabled",
                                              "Disabled"
                                            ],
                                            "x-ms-enum": {
                                              "name": "EnableStatus",
                                              "modelAsString": true,
                                              "values": [
                                                {
                                                  "name": "Enabled",
                                                  "value": "Enabled"
                                                },
                                                {
                                                  "name": "Disabled",
                                                  "value": "Disabled"
                                                }
                                              ]
                                            }
                                          },
                                          "timeInMinutes": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Time in minutes before event at which notification will be sent."
                                          },
                                          "webhookUrl": {
                                            "type": "string",
                                            "description": "The webhook URL to which the notification will be sent."
                                          },
                                          "emailRecipient": {
                                            "type": "string",
                                            "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                          },
                                          "notificationLocale": {
                                            "type": "string",
                                            "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                          }
                                        }
                                      },
                                      "targetResourceId": {
                                        "type": "string",
                                        "description": "The resource ID to which the schedule belongs"
                                      }
                                    }
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the virtual machine or environment"
                                  },
                                  "location": {
                                    "type": "string",
                                    "description": "The location of the new virtual machine or environment",
                                    "readOnly": true
                                  },
                                  "tags": {
                                    "type": "object",
                                    "description": "The tags of the resource.",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the virtual machine or environment"
                        },
                        "location": {
                          "type": "string",
                          "description": "The location of the new virtual machine or environment"
                        },
                        "tags": {
                          "type": "object",
                          "description": "The tags of the resource.",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "vm": {
                      "description": "Information about a VM from which a formula is to be created.",
                      "type": "object",
                      "properties": {
                        "labVmId": {
                          "type": "string",
                          "description": "The identifier of the VM from which a formula is to be created."
                        }
                      }
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Formula' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "A formula for creating a VM, specifying an image base and other parameters",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the formula.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "The description of the formula."
                    },
                    "author": {
                      "type": "string",
                      "description": "The author of the formula.",
                      "readOnly": true
                    },
                    "osType": {
                      "type": "string",
                      "description": "The OS type of the formula."
                    },
                    "creationDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the formula.",
                      "readOnly": true
                    },
                    "formulaContent": {
                      "type": "object",
                      "description": "Properties for creating a virtual machine.",
                      "properties": {
                        "properties": {
                          "description": "The properties of the resource.",
                          "x-ms-client-flatten": true,
                          "type": "object",
                          "properties": {
                            "bulkCreationParameters": {
                              "description": "The number of virtual machine instances to create.",
                              "type": "object",
                              "properties": {
                                "instanceCount": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The number of virtual machine instances to create."
                                }
                              }
                            },
                            "notes": {
                              "type": "string",
                              "description": "The notes of the virtual machine."
                            },
                            "ownerObjectId": {
                              "type": "string",
                              "description": "The object identifier of the owner of the virtual machine.",
                              "default": "dynamicValue"
                            },
                            "ownerUserPrincipalName": {
                              "type": "string",
                              "description": "The user principal name of the virtual machine owner."
                            },
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The creation date of the virtual machine."
                            },
                            "customImageId": {
                              "type": "string",
                              "description": "The custom image identifier of the virtual machine."
                            },
                            "size": {
                              "type": "string",
                              "description": "The size of the virtual machine."
                            },
                            "userName": {
                              "type": "string",
                              "description": "The user name of the virtual machine."
                            },
                            "password": {
                              "type": "string",
                              "description": "The password of the virtual machine administrator."
                            },
                            "sshKey": {
                              "type": "string",
                              "description": "The SSH key of the virtual machine administrator."
                            },
                            "isAuthenticationWithSshKey": {
                              "type": "boolean",
                              "description": "Indicates whether this virtual machine uses an SSH key for authentication."
                            },
                            "labSubnetName": {
                              "type": "string",
                              "description": "The lab subnet name of the virtual machine."
                            },
                            "labVirtualNetworkId": {
                              "type": "string",
                              "description": "The lab virtual network identifier of the virtual machine."
                            },
                            "disallowPublicIpAddress": {
                              "type": "boolean",
                              "description": "Indicates whether the virtual machine is to be created without a public IP address.",
                              "default": false
                            },
                            "artifacts": {
                              "type": "array",
                              "description": "The artifacts to be installed on the virtual machine.",
                              "items": {
                                "type": "object",
                                "description": "Properties of an artifact.",
                                "properties": {
                                  "artifactId": {
                                    "type": "string",
                                    "description": "The artifact's identifier."
                                  },
                                  "artifactTitle": {
                                    "type": "string",
                                    "description": "The artifact's title."
                                  },
                                  "parameters": {
                                    "type": "array",
                                    "description": "The parameters of the artifact.",
                                    "items": {
                                      "type": "object",
                                      "description": "Properties of an artifact parameter.",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the artifact parameter."
                                        },
                                        "value": {
                                          "type": "string",
                                          "description": "The value of the artifact parameter."
                                        }
                                      }
                                    }
                                  },
                                  "status": {
                                    "type": "string",
                                    "description": "The status of the artifact."
                                  },
                                  "deploymentStatusMessage": {
                                    "type": "string",
                                    "description": "The status message from the deployment."
                                  },
                                  "vmExtensionStatusMessage": {
                                    "type": "string",
                                    "description": "The status message from the virtual machine extension."
                                  },
                                  "installTime": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The time that the artifact starts to install on the virtual machine."
                                  }
                                }
                              },
                              "x-ms-identifiers": []
                            },
                            "galleryImageReference": {
                              "description": "The Microsoft Azure Marketplace image reference of the virtual machine.",
                              "type": "object",
                              "properties": {
                                "offer": {
                                  "type": "string",
                                  "description": "The offer of the gallery image."
                                },
                                "publisher": {
                                  "type": "string",
                                  "description": "The publisher of the gallery image."
                                },
                                "sku": {
                                  "type": "string",
                                  "description": "The SKU of the gallery image."
                                },
                                "osType": {
                                  "type": "string",
                                  "description": "The OS type of the gallery image."
                                },
                                "version": {
                                  "type": "string",
                                  "description": "The version of the gallery image."
                                }
                              }
                            },
                            "planId": {
                              "type": "string",
                              "description": "The id of the plan associated with the virtual machine image"
                            },
                            "networkInterface": {
                              "description": "The network interface properties.",
                              "type": "object",
                              "properties": {
                                "virtualNetworkId": {
                                  "type": "string",
                                  "description": "The resource ID of the virtual network."
                                },
                                "subnetId": {
                                  "type": "string",
                                  "description": "The resource ID of the sub net."
                                },
                                "publicIpAddressId": {
                                  "type": "string",
                                  "description": "The resource ID of the public IP address."
                                },
                                "publicIpAddress": {
                                  "type": "string",
                                  "description": "The public IP address."
                                },
                                "privateIpAddress": {
                                  "type": "string",
                                  "description": "The private IP address."
                                },
                                "dnsName": {
                                  "type": "string",
                                  "description": "The DNS name."
                                },
                                "rdpAuthority": {
                                  "type": "string",
                                  "description": "The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol)."
                                },
                                "sshAuthority": {
                                  "type": "string",
                                  "description": "The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH."
                                },
                                "sharedPublicIpAddressConfiguration": {
                                  "description": "The configuration for sharing a public IP address across multiple virtual machines.",
                                  "type": "object",
                                  "properties": {
                                    "inboundNatRules": {
                                      "type": "array",
                                      "description": "The incoming NAT rules",
                                      "items": {
                                        "type": "object",
                                        "description": "A rule for NAT - exposing a VM's port (backendPort) on the public IP address using a load balancer.",
                                        "properties": {
                                          "transportProtocol": {
                                            "description": "The transport protocol for the endpoint.",
                                            "type": "string",
                                            "enum": [
                                              "Tcp",
                                              "Udp"
                                            ],
                                            "x-ms-enum": {
                                              "name": "TransportProtocol",
                                              "modelAsString": true,
                                              "values": [
                                                {
                                                  "name": "Tcp",
                                                  "value": "Tcp"
                                                },
                                                {
                                                  "name": "Udp",
                                                  "value": "Udp"
                                                }
                                              ]
                                            }
                                          },
                                          "frontendPort": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "The external endpoint port of the inbound connection. Possible values range between 1 and 65535, inclusive. If unspecified, a value will be allocated automatically."
                                          },
                                          "backendPort": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "The port to which the external traffic will be redirected."
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": []
                                    }
                                  }
                                }
                              }
                            },
                            "expirationDate": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The expiration date for VM."
                            },
                            "allowClaim": {
                              "type": "boolean",
                              "description": "Indicates whether another user can take ownership of the virtual machine",
                              "default": false
                            },
                            "storageType": {
                              "type": "string",
                              "description": "Storage type to use for virtual machine (i.e. Standard, Premium).",
                              "default": "labStorageType"
                            },
                            "environmentId": {
                              "type": "string",
                              "description": "The resource ID of the environment that contains this virtual machine, if any."
                            },
                            "dataDiskParameters": {
                              "type": "array",
                              "description": "New or existing data disks to attach to the virtual machine after creation",
                              "items": {
                                "type": "object",
                                "description": "Request body for adding a new or existing data disk to a virtual machine.",
                                "properties": {
                                  "attachNewDataDiskOptions": {
                                    "description": "Specifies options to attach a new disk to the virtual machine.",
                                    "type": "object",
                                    "properties": {
                                      "diskSizeGiB": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "Size of the disk to be attached in Gibibytes."
                                      },
                                      "diskName": {
                                        "type": "string",
                                        "description": "The name of the disk to be attached."
                                      },
                                      "diskType": {
                                        "description": "The storage type for the disk (i.e. Standard, Premium).",
                                        "type": "string",
                                        "enum": [
                                          "Standard",
                                          "Premium",
                                          "StandardSSD"
                                        ],
                                        "x-ms-enum": {
                                          "name": "StorageType",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "Standard",
                                              "value": "Standard"
                                            },
                                            {
                                              "name": "Premium",
                                              "value": "Premium"
                                            },
                                            {
                                              "name": "StandardSSD",
                                              "value": "StandardSSD"
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "existingLabDiskId": {
                                    "type": "string",
                                    "description": "Specifies the existing lab disk id to attach to virtual machine."
                                  },
                                  "hostCaching": {
                                    "description": "Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).",
                                    "type": "string",
                                    "enum": [
                                      "None",
                                      "ReadOnly",
                                      "ReadWrite"
                                    ],
                                    "x-ms-enum": {
                                      "name": "HostCachingOptions",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "None",
                                          "value": "None"
                                        },
                                        {
                                          "name": "ReadOnly",
                                          "value": "ReadOnly"
                                        },
                                        {
                                          "name": "ReadWrite",
                                          "value": "ReadWrite"
                                        }
                                      ]
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": []
                            },
                            "scheduleParameters": {
                              "type": "array",
                              "description": "Virtual Machine schedules to be created",
                              "items": {
                                "type": "object",
                                "description": "Properties for creating a schedule.",
                                "properties": {
                                  "properties": {
                                    "description": "The properties of the schedule.",
                                    "x-ms-client-flatten": true,
                                    "type": "object",
                                    "properties": {
                                      "status": {
                                        "type": "string",
                                        "description": "The status of the schedule (i.e. Enabled, Disabled)",
                                        "default": "Disabled",
                                        "enum": [
                                          "Enabled",
                                          "Disabled"
                                        ],
                                        "x-ms-enum": {
                                          "name": "EnableStatus",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "Enabled",
                                              "value": "Enabled"
                                            },
                                            {
                                              "name": "Disabled",
                                              "value": "Disabled"
                                            }
                                          ]
                                        }
                                      },
                                      "taskType": {
                                        "type": "string",
                                        "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                                      },
                                      "weeklyRecurrence": {
                                        "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                                        "type": "object",
                                        "properties": {
                                          "weekdays": {
                                            "type": "array",
                                            "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "time": {
                                            "type": "string",
                                            "description": "The time of the day the schedule will occur."
                                          }
                                        }
                                      },
                                      "dailyRecurrence": {
                                        "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                                        "type": "object",
                                        "properties": {
                                          "time": {
                                            "type": "string",
                                            "description": "The time of day the schedule will occur."
                                          }
                                        }
                                      },
                                      "hourlyRecurrence": {
                                        "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                                        "type": "object",
                                        "properties": {
                                          "minute": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Minutes of the hour the schedule will run."
                                          }
                                        }
                                      },
                                      "timeZoneId": {
                                        "type": "string",
                                        "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                                      },
                                      "notificationSettings": {
                                        "description": "Notification settings.",
                                        "type": "object",
                                        "properties": {
                                          "status": {
                                            "type": "string",
                                            "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                            "default": "Disabled",
                                            "enum": [
                                              "Enabled",
                                              "Disabled"
                                            ],
                                            "x-ms-enum": {
                                              "name": "EnableStatus",
                                              "modelAsString": true,
                                              "values": [
                                                {
                                                  "name": "Enabled",
                                                  "value": "Enabled"
                                                },
                                                {
                                                  "name": "Disabled",
                                                  "value": "Disabled"
                                                }
                                              ]
                                            }
                                          },
                                          "timeInMinutes": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Time in minutes before event at which notification will be sent."
                                          },
                                          "webhookUrl": {
                                            "type": "string",
                                            "description": "The webhook URL to which the notification will be sent."
                                          },
                                          "emailRecipient": {
                                            "type": "string",
                                            "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                          },
                                          "notificationLocale": {
                                            "type": "string",
                                            "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                          }
                                        }
                                      },
                                      "targetResourceId": {
                                        "type": "string",
                                        "description": "The resource ID to which the schedule belongs"
                                      }
                                    }
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the virtual machine or environment"
                                  },
                                  "location": {
                                    "type": "string",
                                    "description": "The location of the new virtual machine or environment",
                                    "readOnly": true
                                  },
                                  "tags": {
                                    "type": "object",
                                    "description": "The tags of the resource.",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the virtual machine or environment"
                        },
                        "location": {
                          "type": "string",
                          "description": "The location of the new virtual machine or environment"
                        },
                        "tags": {
                          "type": "object",
                          "description": "The tags of the resource.",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "vm": {
                      "description": "Information about a VM from which a formula is to be created.",
                      "type": "object",
                      "properties": {
                        "labVmId": {
                          "type": "string",
                          "description": "The identifier of the VM from which a formula is to be created."
                        }
                      }
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          },
          "201": {
            "description": "Resource 'Formula' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "A formula for creating a VM, specifying an image base and other parameters",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the formula.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "The description of the formula."
                    },
                    "author": {
                      "type": "string",
                      "description": "The author of the formula.",
                      "readOnly": true
                    },
                    "osType": {
                      "type": "string",
                      "description": "The OS type of the formula."
                    },
                    "creationDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the formula.",
                      "readOnly": true
                    },
                    "formulaContent": {
                      "type": "object",
                      "description": "Properties for creating a virtual machine.",
                      "properties": {
                        "properties": {
                          "description": "The properties of the resource.",
                          "x-ms-client-flatten": true,
                          "type": "object",
                          "properties": {
                            "bulkCreationParameters": {
                              "description": "The number of virtual machine instances to create.",
                              "type": "object",
                              "properties": {
                                "instanceCount": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The number of virtual machine instances to create."
                                }
                              }
                            },
                            "notes": {
                              "type": "string",
                              "description": "The notes of the virtual machine."
                            },
                            "ownerObjectId": {
                              "type": "string",
                              "description": "The object identifier of the owner of the virtual machine.",
                              "default": "dynamicValue"
                            },
                            "ownerUserPrincipalName": {
                              "type": "string",
                              "description": "The user principal name of the virtual machine owner."
                            },
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The creation date of the virtual machine."
                            },
                            "customImageId": {
                              "type": "string",
                              "description": "The custom image identifier of the virtual machine."
                            },
                            "size": {
                              "type": "string",
                              "description": "The size of the virtual machine."
                            },
                            "userName": {
                              "type": "string",
                              "description": "The user name of the virtual machine."
                            },
                            "password": {
                              "type": "string",
                              "description": "The password of the virtual machine administrator."
                            },
                            "sshKey": {
                              "type": "string",
                              "description": "The SSH key of the virtual machine administrator."
                            },
                            "isAuthenticationWithSshKey": {
                              "type": "boolean",
                              "description": "Indicates whether this virtual machine uses an SSH key for authentication."
                            },
                            "labSubnetName": {
                              "type": "string",
                              "description": "The lab subnet name of the virtual machine."
                            },
                            "labVirtualNetworkId": {
                              "type": "string",
                              "description": "The lab virtual network identifier of the virtual machine."
                            },
                            "disallowPublicIpAddress": {
                              "type": "boolean",
                              "description": "Indicates whether the virtual machine is to be created without a public IP address.",
                              "default": false
                            },
                            "artifacts": {
                              "type": "array",
                              "description": "The artifacts to be installed on the virtual machine.",
                              "items": {
                                "type": "object",
                                "description": "Properties of an artifact.",
                                "properties": {
                                  "artifactId": {
                                    "type": "string",
                                    "description": "The artifact's identifier."
                                  },
                                  "artifactTitle": {
                                    "type": "string",
                                    "description": "The artifact's title."
                                  },
                                  "parameters": {
                                    "type": "array",
                                    "description": "The parameters of the artifact.",
                                    "items": {
                                      "type": "object",
                                      "description": "Properties of an artifact parameter.",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the artifact parameter."
                                        },
                                        "value": {
                                          "type": "string",
                                          "description": "The value of the artifact parameter."
                                        }
                                      }
                                    }
                                  },
                                  "status": {
                                    "type": "string",
                                    "description": "The status of the artifact."
                                  },
                                  "deploymentStatusMessage": {
                                    "type": "string",
                                    "description": "The status message from the deployment."
                                  },
                                  "vmExtensionStatusMessage": {
                                    "type": "string",
                                    "description": "The status message from the virtual machine extension."
                                  },
                                  "installTime": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The time that the artifact starts to install on the virtual machine."
                                  }
                                }
                              },
                              "x-ms-identifiers": []
                            },
                            "galleryImageReference": {
                              "description": "The Microsoft Azure Marketplace image reference of the virtual machine.",
                              "type": "object",
                              "properties": {
                                "offer": {
                                  "type": "string",
                                  "description": "The offer of the gallery image."
                                },
                                "publisher": {
                                  "type": "string",
                                  "description": "The publisher of the gallery image."
                                },
                                "sku": {
                                  "type": "string",
                                  "description": "The SKU of the gallery image."
                                },
                                "osType": {
                                  "type": "string",
                                  "description": "The OS type of the gallery image."
                                },
                                "version": {
                                  "type": "string",
                                  "description": "The version of the gallery image."
                                }
                              }
                            },
                            "planId": {
                              "type": "string",
                              "description": "The id of the plan associated with the virtual machine image"
                            },
                            "networkInterface": {
                              "description": "The network interface properties.",
                              "type": "object",
                              "properties": {
                                "virtualNetworkId": {
                                  "type": "string",
                                  "description": "The resource ID of the virtual network."
                                },
                                "subnetId": {
                                  "type": "string",
                                  "description": "The resource ID of the sub net."
                                },
                                "publicIpAddressId": {
                                  "type": "string",
                                  "description": "The resource ID of the public IP address."
                                },
                                "publicIpAddress": {
                                  "type": "string",
                                  "description": "The public IP address."
                                },
                                "privateIpAddress": {
                                  "type": "string",
                                  "description": "The private IP address."
                                },
                                "dnsName": {
                                  "type": "string",
                                  "description": "The DNS name."
                                },
                                "rdpAuthority": {
                                  "type": "string",
                                  "description": "The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol)."
                                },
                                "sshAuthority": {
                                  "type": "string",
                                  "description": "The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH."
                                },
                                "sharedPublicIpAddressConfiguration": {
                                  "description": "The configuration for sharing a public IP address across multiple virtual machines.",
                                  "type": "object",
                                  "properties": {
                                    "inboundNatRules": {
                                      "type": "array",
                                      "description": "The incoming NAT rules",
                                      "items": {
                                        "type": "object",
                                        "description": "A rule for NAT - exposing a VM's port (backendPort) on the public IP address using a load balancer.",
                                        "properties": {
                                          "transportProtocol": {
                                            "description": "The transport protocol for the endpoint.",
                                            "type": "string",
                                            "enum": [
                                              "Tcp",
                                              "Udp"
                                            ],
                                            "x-ms-enum": {
                                              "name": "TransportProtocol",
                                              "modelAsString": true,
                                              "values": [
                                                {
                                                  "name": "Tcp",
                                                  "value": "Tcp"
                                                },
                                                {
                                                  "name": "Udp",
                                                  "value": "Udp"
                                                }
                                              ]
                                            }
                                          },
                                          "frontendPort": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "The external endpoint port of the inbound connection. Possible values range between 1 and 65535, inclusive. If unspecified, a value will be allocated automatically."
                                          },
                                          "backendPort": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "The port to which the external traffic will be redirected."
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": []
                                    }
                                  }
                                }
                              }
                            },
                            "expirationDate": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The expiration date for VM."
                            },
                            "allowClaim": {
                              "type": "boolean",
                              "description": "Indicates whether another user can take ownership of the virtual machine",
                              "default": false
                            },
                            "storageType": {
                              "type": "string",
                              "description": "Storage type to use for virtual machine (i.e. Standard, Premium).",
                              "default": "labStorageType"
                            },
                            "environmentId": {
                              "type": "string",
                              "description": "The resource ID of the environment that contains this virtual machine, if any."
                            },
                            "dataDiskParameters": {
                              "type": "array",
                              "description": "New or existing data disks to attach to the virtual machine after creation",
                              "items": {
                                "type": "object",
                                "description": "Request body for adding a new or existing data disk to a virtual machine.",
                                "properties": {
                                  "attachNewDataDiskOptions": {
                                    "description": "Specifies options to attach a new disk to the virtual machine.",
                                    "type": "object",
                                    "properties": {
                                      "diskSizeGiB": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "Size of the disk to be attached in Gibibytes."
                                      },
                                      "diskName": {
                                        "type": "string",
                                        "description": "The name of the disk to be attached."
                                      },
                                      "diskType": {
                                        "description": "The storage type for the disk (i.e. Standard, Premium).",
                                        "type": "string",
                                        "enum": [
                                          "Standard",
                                          "Premium",
                                          "StandardSSD"
                                        ],
                                        "x-ms-enum": {
                                          "name": "StorageType",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "Standard",
                                              "value": "Standard"
                                            },
                                            {
                                              "name": "Premium",
                                              "value": "Premium"
                                            },
                                            {
                                              "name": "StandardSSD",
                                              "value": "StandardSSD"
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "existingLabDiskId": {
                                    "type": "string",
                                    "description": "Specifies the existing lab disk id to attach to virtual machine."
                                  },
                                  "hostCaching": {
                                    "description": "Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).",
                                    "type": "string",
                                    "enum": [
                                      "None",
                                      "ReadOnly",
                                      "ReadWrite"
                                    ],
                                    "x-ms-enum": {
                                      "name": "HostCachingOptions",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "None",
                                          "value": "None"
                                        },
                                        {
                                          "name": "ReadOnly",
                                          "value": "ReadOnly"
                                        },
                                        {
                                          "name": "ReadWrite",
                                          "value": "ReadWrite"
                                        }
                                      ]
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": []
                            },
                            "scheduleParameters": {
                              "type": "array",
                              "description": "Virtual Machine schedules to be created",
                              "items": {
                                "type": "object",
                                "description": "Properties for creating a schedule.",
                                "properties": {
                                  "properties": {
                                    "description": "The properties of the schedule.",
                                    "x-ms-client-flatten": true,
                                    "type": "object",
                                    "properties": {
                                      "status": {
                                        "type": "string",
                                        "description": "The status of the schedule (i.e. Enabled, Disabled)",
                                        "default": "Disabled",
                                        "enum": [
                                          "Enabled",
                                          "Disabled"
                                        ],
                                        "x-ms-enum": {
                                          "name": "EnableStatus",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "Enabled",
                                              "value": "Enabled"
                                            },
                                            {
                                              "name": "Disabled",
                                              "value": "Disabled"
                                            }
                                          ]
                                        }
                                      },
                                      "taskType": {
                                        "type": "string",
                                        "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                                      },
                                      "weeklyRecurrence": {
                                        "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                                        "type": "object",
                                        "properties": {
                                          "weekdays": {
                                            "type": "array",
                                            "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "time": {
                                            "type": "string",
                                            "description": "The time of the day the schedule will occur."
                                          }
                                        }
                                      },
                                      "dailyRecurrence": {
                                        "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                                        "type": "object",
                                        "properties": {
                                          "time": {
                                            "type": "string",
                                            "description": "The time of day the schedule will occur."
                                          }
                                        }
                                      },
                                      "hourlyRecurrence": {
                                        "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                                        "type": "object",
                                        "properties": {
                                          "minute": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Minutes of the hour the schedule will run."
                                          }
                                        }
                                      },
                                      "timeZoneId": {
                                        "type": "string",
                                        "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                                      },
                                      "notificationSettings": {
                                        "description": "Notification settings.",
                                        "type": "object",
                                        "properties": {
                                          "status": {
                                            "type": "string",
                                            "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                            "default": "Disabled",
                                            "enum": [
                                              "Enabled",
                                              "Disabled"
                                            ],
                                            "x-ms-enum": {
                                              "name": "EnableStatus",
                                              "modelAsString": true,
                                              "values": [
                                                {
                                                  "name": "Enabled",
                                                  "value": "Enabled"
                                                },
                                                {
                                                  "name": "Disabled",
                                                  "value": "Disabled"
                                                }
                                              ]
                                            }
                                          },
                                          "timeInMinutes": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Time in minutes before event at which notification will be sent."
                                          },
                                          "webhookUrl": {
                                            "type": "string",
                                            "description": "The webhook URL to which the notification will be sent."
                                          },
                                          "emailRecipient": {
                                            "type": "string",
                                            "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                          },
                                          "notificationLocale": {
                                            "type": "string",
                                            "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                          }
                                        }
                                      },
                                      "targetResourceId": {
                                        "type": "string",
                                        "description": "The resource ID to which the schedule belongs"
                                      }
                                    }
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the virtual machine or environment"
                                  },
                                  "location": {
                                    "type": "string",
                                    "description": "The location of the new virtual machine or environment",
                                    "readOnly": true
                                  },
                                  "tags": {
                                    "type": "object",
                                    "description": "The tags of the resource.",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the virtual machine or environment"
                        },
                        "location": {
                          "type": "string",
                          "description": "The location of the new virtual machine or environment"
                        },
                        "tags": {
                          "type": "object",
                          "description": "The tags of the resource.",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "vm": {
                      "description": "Information about a VM from which a formula is to be created.",
                      "type": "object",
                      "properties": {
                        "labVmId": {
                          "type": "string",
                          "description": "The identifier of the VM from which a formula is to be created."
                        }
                      }
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Formulas_Update",
        "tags": [
          "Formulas"
        ],
        "description": "Allows modifying tags of formulas. All other properties will be ignored.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the Formula",
            "required": true,
            "type": "string"
          },
          {
            "name": "formula",
            "in": "body",
            "description": "A formula for creating a VM, specifying an image base and other parameters",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A formula for creating a VM, specifying an image base and other parameters",
              "properties": {
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A formula for creating a VM, specifying an image base and other parameters",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the formula.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "The description of the formula."
                    },
                    "author": {
                      "type": "string",
                      "description": "The author of the formula.",
                      "readOnly": true
                    },
                    "osType": {
                      "type": "string",
                      "description": "The OS type of the formula."
                    },
                    "creationDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the formula.",
                      "readOnly": true
                    },
                    "formulaContent": {
                      "type": "object",
                      "description": "Properties for creating a virtual machine.",
                      "properties": {
                        "properties": {
                          "description": "The properties of the resource.",
                          "x-ms-client-flatten": true,
                          "type": "object",
                          "properties": {
                            "bulkCreationParameters": {
                              "description": "The number of virtual machine instances to create.",
                              "type": "object",
                              "properties": {
                                "instanceCount": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The number of virtual machine instances to create."
                                }
                              }
                            },
                            "notes": {
                              "type": "string",
                              "description": "The notes of the virtual machine."
                            },
                            "ownerObjectId": {
                              "type": "string",
                              "description": "The object identifier of the owner of the virtual machine.",
                              "default": "dynamicValue"
                            },
                            "ownerUserPrincipalName": {
                              "type": "string",
                              "description": "The user principal name of the virtual machine owner."
                            },
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The creation date of the virtual machine."
                            },
                            "customImageId": {
                              "type": "string",
                              "description": "The custom image identifier of the virtual machine."
                            },
                            "size": {
                              "type": "string",
                              "description": "The size of the virtual machine."
                            },
                            "userName": {
                              "type": "string",
                              "description": "The user name of the virtual machine."
                            },
                            "password": {
                              "type": "string",
                              "description": "The password of the virtual machine administrator."
                            },
                            "sshKey": {
                              "type": "string",
                              "description": "The SSH key of the virtual machine administrator."
                            },
                            "isAuthenticationWithSshKey": {
                              "type": "boolean",
                              "description": "Indicates whether this virtual machine uses an SSH key for authentication."
                            },
                            "labSubnetName": {
                              "type": "string",
                              "description": "The lab subnet name of the virtual machine."
                            },
                            "labVirtualNetworkId": {
                              "type": "string",
                              "description": "The lab virtual network identifier of the virtual machine."
                            },
                            "disallowPublicIpAddress": {
                              "type": "boolean",
                              "description": "Indicates whether the virtual machine is to be created without a public IP address.",
                              "default": false
                            },
                            "artifacts": {
                              "type": "array",
                              "description": "The artifacts to be installed on the virtual machine.",
                              "items": {
                                "type": "object",
                                "description": "Properties of an artifact.",
                                "properties": {
                                  "artifactId": {
                                    "type": "string",
                                    "description": "The artifact's identifier."
                                  },
                                  "artifactTitle": {
                                    "type": "string",
                                    "description": "The artifact's title."
                                  },
                                  "parameters": {
                                    "type": "array",
                                    "description": "The parameters of the artifact.",
                                    "items": {
                                      "type": "object",
                                      "description": "Properties of an artifact parameter.",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the artifact parameter."
                                        },
                                        "value": {
                                          "type": "string",
                                          "description": "The value of the artifact parameter."
                                        }
                                      }
                                    }
                                  },
                                  "status": {
                                    "type": "string",
                                    "description": "The status of the artifact."
                                  },
                                  "deploymentStatusMessage": {
                                    "type": "string",
                                    "description": "The status message from the deployment."
                                  },
                                  "vmExtensionStatusMessage": {
                                    "type": "string",
                                    "description": "The status message from the virtual machine extension."
                                  },
                                  "installTime": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The time that the artifact starts to install on the virtual machine."
                                  }
                                }
                              },
                              "x-ms-identifiers": []
                            },
                            "galleryImageReference": {
                              "description": "The Microsoft Azure Marketplace image reference of the virtual machine.",
                              "type": "object",
                              "properties": {
                                "offer": {
                                  "type": "string",
                                  "description": "The offer of the gallery image."
                                },
                                "publisher": {
                                  "type": "string",
                                  "description": "The publisher of the gallery image."
                                },
                                "sku": {
                                  "type": "string",
                                  "description": "The SKU of the gallery image."
                                },
                                "osType": {
                                  "type": "string",
                                  "description": "The OS type of the gallery image."
                                },
                                "version": {
                                  "type": "string",
                                  "description": "The version of the gallery image."
                                }
                              }
                            },
                            "planId": {
                              "type": "string",
                              "description": "The id of the plan associated with the virtual machine image"
                            },
                            "networkInterface": {
                              "description": "The network interface properties.",
                              "type": "object",
                              "properties": {
                                "virtualNetworkId": {
                                  "type": "string",
                                  "description": "The resource ID of the virtual network."
                                },
                                "subnetId": {
                                  "type": "string",
                                  "description": "The resource ID of the sub net."
                                },
                                "publicIpAddressId": {
                                  "type": "string",
                                  "description": "The resource ID of the public IP address."
                                },
                                "publicIpAddress": {
                                  "type": "string",
                                  "description": "The public IP address."
                                },
                                "privateIpAddress": {
                                  "type": "string",
                                  "description": "The private IP address."
                                },
                                "dnsName": {
                                  "type": "string",
                                  "description": "The DNS name."
                                },
                                "rdpAuthority": {
                                  "type": "string",
                                  "description": "The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol)."
                                },
                                "sshAuthority": {
                                  "type": "string",
                                  "description": "The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH."
                                },
                                "sharedPublicIpAddressConfiguration": {
                                  "description": "The configuration for sharing a public IP address across multiple virtual machines.",
                                  "type": "object",
                                  "properties": {
                                    "inboundNatRules": {
                                      "type": "array",
                                      "description": "The incoming NAT rules",
                                      "items": {
                                        "type": "object",
                                        "description": "A rule for NAT - exposing a VM's port (backendPort) on the public IP address using a load balancer.",
                                        "properties": {
                                          "transportProtocol": {
                                            "description": "The transport protocol for the endpoint.",
                                            "type": "string",
                                            "enum": [
                                              "Tcp",
                                              "Udp"
                                            ],
                                            "x-ms-enum": {
                                              "name": "TransportProtocol",
                                              "modelAsString": true,
                                              "values": [
                                                {
                                                  "name": "Tcp",
                                                  "value": "Tcp"
                                                },
                                                {
                                                  "name": "Udp",
                                                  "value": "Udp"
                                                }
                                              ]
                                            }
                                          },
                                          "frontendPort": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "The external endpoint port of the inbound connection. Possible values range between 1 and 65535, inclusive. If unspecified, a value will be allocated automatically."
                                          },
                                          "backendPort": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "The port to which the external traffic will be redirected."
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": []
                                    }
                                  }
                                }
                              }
                            },
                            "expirationDate": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The expiration date for VM."
                            },
                            "allowClaim": {
                              "type": "boolean",
                              "description": "Indicates whether another user can take ownership of the virtual machine",
                              "default": false
                            },
                            "storageType": {
                              "type": "string",
                              "description": "Storage type to use for virtual machine (i.e. Standard, Premium).",
                              "default": "labStorageType"
                            },
                            "environmentId": {
                              "type": "string",
                              "description": "The resource ID of the environment that contains this virtual machine, if any."
                            },
                            "dataDiskParameters": {
                              "type": "array",
                              "description": "New or existing data disks to attach to the virtual machine after creation",
                              "items": {
                                "type": "object",
                                "description": "Request body for adding a new or existing data disk to a virtual machine.",
                                "properties": {
                                  "attachNewDataDiskOptions": {
                                    "description": "Specifies options to attach a new disk to the virtual machine.",
                                    "type": "object",
                                    "properties": {
                                      "diskSizeGiB": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "Size of the disk to be attached in Gibibytes."
                                      },
                                      "diskName": {
                                        "type": "string",
                                        "description": "The name of the disk to be attached."
                                      },
                                      "diskType": {
                                        "description": "The storage type for the disk (i.e. Standard, Premium).",
                                        "type": "string",
                                        "enum": [
                                          "Standard",
                                          "Premium",
                                          "StandardSSD"
                                        ],
                                        "x-ms-enum": {
                                          "name": "StorageType",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "Standard",
                                              "value": "Standard"
                                            },
                                            {
                                              "name": "Premium",
                                              "value": "Premium"
                                            },
                                            {
                                              "name": "StandardSSD",
                                              "value": "StandardSSD"
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "existingLabDiskId": {
                                    "type": "string",
                                    "description": "Specifies the existing lab disk id to attach to virtual machine."
                                  },
                                  "hostCaching": {
                                    "description": "Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).",
                                    "type": "string",
                                    "enum": [
                                      "None",
                                      "ReadOnly",
                                      "ReadWrite"
                                    ],
                                    "x-ms-enum": {
                                      "name": "HostCachingOptions",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "None",
                                          "value": "None"
                                        },
                                        {
                                          "name": "ReadOnly",
                                          "value": "ReadOnly"
                                        },
                                        {
                                          "name": "ReadWrite",
                                          "value": "ReadWrite"
                                        }
                                      ]
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": []
                            },
                            "scheduleParameters": {
                              "type": "array",
                              "description": "Virtual Machine schedules to be created",
                              "items": {
                                "type": "object",
                                "description": "Properties for creating a schedule.",
                                "properties": {
                                  "properties": {
                                    "description": "The properties of the schedule.",
                                    "x-ms-client-flatten": true,
                                    "type": "object",
                                    "properties": {
                                      "status": {
                                        "type": "string",
                                        "description": "The status of the schedule (i.e. Enabled, Disabled)",
                                        "default": "Disabled",
                                        "enum": [
                                          "Enabled",
                                          "Disabled"
                                        ],
                                        "x-ms-enum": {
                                          "name": "EnableStatus",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "Enabled",
                                              "value": "Enabled"
                                            },
                                            {
                                              "name": "Disabled",
                                              "value": "Disabled"
                                            }
                                          ]
                                        }
                                      },
                                      "taskType": {
                                        "type": "string",
                                        "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                                      },
                                      "weeklyRecurrence": {
                                        "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                                        "type": "object",
                                        "properties": {
                                          "weekdays": {
                                            "type": "array",
                                            "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "time": {
                                            "type": "string",
                                            "description": "The time of the day the schedule will occur."
                                          }
                                        }
                                      },
                                      "dailyRecurrence": {
                                        "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                                        "type": "object",
                                        "properties": {
                                          "time": {
                                            "type": "string",
                                            "description": "The time of day the schedule will occur."
                                          }
                                        }
                                      },
                                      "hourlyRecurrence": {
                                        "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                                        "type": "object",
                                        "properties": {
                                          "minute": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Minutes of the hour the schedule will run."
                                          }
                                        }
                                      },
                                      "timeZoneId": {
                                        "type": "string",
                                        "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                                      },
                                      "notificationSettings": {
                                        "description": "Notification settings.",
                                        "type": "object",
                                        "properties": {
                                          "status": {
                                            "type": "string",
                                            "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                            "default": "Disabled",
                                            "enum": [
                                              "Enabled",
                                              "Disabled"
                                            ],
                                            "x-ms-enum": {
                                              "name": "EnableStatus",
                                              "modelAsString": true,
                                              "values": [
                                                {
                                                  "name": "Enabled",
                                                  "value": "Enabled"
                                                },
                                                {
                                                  "name": "Disabled",
                                                  "value": "Disabled"
                                                }
                                              ]
                                            }
                                          },
                                          "timeInMinutes": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Time in minutes before event at which notification will be sent."
                                          },
                                          "webhookUrl": {
                                            "type": "string",
                                            "description": "The webhook URL to which the notification will be sent."
                                          },
                                          "emailRecipient": {
                                            "type": "string",
                                            "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                          },
                                          "notificationLocale": {
                                            "type": "string",
                                            "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                          }
                                        }
                                      },
                                      "targetResourceId": {
                                        "type": "string",
                                        "description": "The resource ID to which the schedule belongs"
                                      }
                                    }
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the virtual machine or environment"
                                  },
                                  "location": {
                                    "type": "string",
                                    "description": "The location of the new virtual machine or environment",
                                    "readOnly": true
                                  },
                                  "tags": {
                                    "type": "object",
                                    "description": "The tags of the resource.",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the virtual machine or environment"
                        },
                        "location": {
                          "type": "string",
                          "description": "The location of the new virtual machine or environment"
                        },
                        "tags": {
                          "type": "object",
                          "description": "The tags of the resource.",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "vm": {
                      "description": "Information about a VM from which a formula is to be created.",
                      "type": "object",
                      "properties": {
                        "labVmId": {
                          "type": "string",
                          "description": "The identifier of the VM from which a formula is to be created."
                        }
                      }
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "delete": {
        "operationId": "Formulas_Delete",
        "tags": [
          "Formulas"
        ],
        "description": "Delete formula.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the Formula",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/galleryimages": {
      "get": {
        "operationId": "GalleryImages_List",
        "tags": [
          "GalleryImages"
        ],
        "description": "List gallery images in a given lab.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=displayName)'",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply to the operation. Example: '$filter=contains(name,'myName')",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: '$top=10'",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "The ordering expression for the results, using OData notation. Example: '$orderby=name desc'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The GalleryImage items on this page",
                  "items": {
                    "type": "object",
                    "description": "A gallery image.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The identifier of the resource.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource.",
                        "readOnly": true
                      },
                      "location": {
                        "type": "string",
                        "description": "The location of the resource."
                      },
                      "tags": {
                        "type": "object",
                        "description": "The tags of the resource.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "properties": {
                        "description": "The properties of the gallery image.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "author": {
                            "type": "string",
                            "description": "The author of the gallery image."
                          },
                          "createdDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The creation date of the gallery image.",
                            "readOnly": true
                          },
                          "description": {
                            "type": "string",
                            "description": "The description of the gallery image."
                          },
                          "imageReference": {
                            "description": "The image reference of the gallery image.",
                            "type": "object",
                            "properties": {
                              "offer": {
                                "type": "string",
                                "description": "The offer of the gallery image."
                              },
                              "publisher": {
                                "type": "string",
                                "description": "The publisher of the gallery image."
                              },
                              "sku": {
                                "type": "string",
                                "description": "The SKU of the gallery image."
                              },
                              "osType": {
                                "type": "string",
                                "description": "The OS type of the gallery image."
                              },
                              "version": {
                                "type": "string",
                                "description": "The version of the gallery image."
                              }
                            }
                          },
                          "icon": {
                            "type": "string",
                            "description": "The icon of the gallery image."
                          },
                          "enabled": {
                            "type": "boolean",
                            "description": "Indicates whether this gallery image is enabled."
                          },
                          "planId": {
                            "type": "string",
                            "description": "The third party plan that applies to this image"
                          },
                          "isPlanAuthorized": {
                            "type": "boolean",
                            "description": "Indicates if the plan has been authorized for programmatic deployment."
                          }
                        }
                      }
                    },
                    "required": [
                      "properties"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}/generateUploadUri": {
      "post": {
        "operationId": "Labs_GenerateUploadUri",
        "tags": [
          "Labs"
        ],
        "description": "Generate a URI for uploading custom disk images to a Lab.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "generateUploadUriParameter",
            "in": "body",
            "description": "Properties for generating an upload URI.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Properties for generating an upload URI.",
              "properties": {
                "blobName": {
                  "type": "string",
                  "description": "The blob name of the upload URI."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Response body for generating an upload URI.",
              "properties": {
                "uploadUri": {
                  "type": "string",
                  "description": "The upload URI for the VHD."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}/importVirtualMachine": {
      "post": {
        "operationId": "Labs_ImportVirtualMachine",
        "tags": [
          "Labs"
        ],
        "description": "Import a virtual machine into a different lab. This operation can take a while to complete.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "importLabVirtualMachineRequest",
            "in": "body",
            "description": "This represents the payload required to import a virtual machine from a different lab into the current one",
            "required": true,
            "schema": {
              "type": "object",
              "description": "This represents the payload required to import a virtual machine from a different lab into the current one",
              "properties": {
                "sourceVirtualMachineResourceId": {
                  "type": "string",
                  "description": "The full resource ID of the virtual machine to be imported."
                },
                "destinationVirtualMachineName": {
                  "type": "string",
                  "description": "The name of the virtual machine in the destination lab"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}/listVhds": {
      "post": {
        "operationId": "Labs_ListVhds",
        "tags": [
          "Labs"
        ],
        "description": "List disk images available for custom image creation.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The LabVhd items on this page",
                  "items": {
                    "type": "object",
                    "description": "Properties of a VHD in the lab.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The URI to the VHD."
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/notificationchannels": {
      "get": {
        "operationId": "NotificationChannels_List",
        "tags": [
          "NotificationChannels"
        ],
        "description": "List notification channels in a given lab.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=webHookUrl)'",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply to the operation. Example: '$filter=contains(name,'myName')",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: '$top=10'",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "The ordering expression for the results, using OData notation. Example: '$orderby=name desc'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The NotificationChannel items on this page",
                  "items": {
                    "type": "object",
                    "description": "A notification.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The identifier of the resource.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource.",
                        "readOnly": true
                      },
                      "location": {
                        "type": "string",
                        "description": "The location of the resource."
                      },
                      "tags": {
                        "type": "object",
                        "description": "The tags of the resource.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "properties": {
                        "description": "The properties of the resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "webHookUrl": {
                            "type": "string",
                            "description": "The webhook URL to send notifications to."
                          },
                          "emailRecipient": {
                            "type": "string",
                            "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                          },
                          "notificationLocale": {
                            "type": "string",
                            "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of notification."
                          },
                          "events": {
                            "type": "array",
                            "description": "The list of event for which this notification is enabled.",
                            "items": {
                              "type": "object",
                              "description": "An event to be notified for.",
                              "properties": {
                                "eventName": {
                                  "description": "The event type for which this notification is enabled (i.e. AutoShutdown, Cost)",
                                  "type": "string",
                                  "enum": [
                                    "AutoShutdown",
                                    "Cost"
                                  ],
                                  "x-ms-enum": {
                                    "name": "NotificationChannelEventType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "AutoShutdown",
                                        "value": "AutoShutdown"
                                      },
                                      {
                                        "name": "Cost",
                                        "value": "Cost"
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "createdDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The creation date of the notification channel.",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "type": "string",
                            "description": "The provisioning status of the resource.",
                            "readOnly": true
                          },
                          "uniqueIdentifier": {
                            "type": "string",
                            "description": "The unique immutable identifier of a resource (Guid).",
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "required": [
                      "properties"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/notificationchannels/{name}": {
      "get": {
        "operationId": "NotificationChannels_Get",
        "tags": [
          "NotificationChannels"
        ],
        "description": "Get notification channel.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the NotificationChannel",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=webHookUrl)'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A notification.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "webHookUrl": {
                      "type": "string",
                      "description": "The webhook URL to send notifications to."
                    },
                    "emailRecipient": {
                      "type": "string",
                      "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                    },
                    "notificationLocale": {
                      "type": "string",
                      "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of notification."
                    },
                    "events": {
                      "type": "array",
                      "description": "The list of event for which this notification is enabled.",
                      "items": {
                        "type": "object",
                        "description": "An event to be notified for.",
                        "properties": {
                          "eventName": {
                            "description": "The event type for which this notification is enabled (i.e. AutoShutdown, Cost)",
                            "type": "string",
                            "enum": [
                              "AutoShutdown",
                              "Cost"
                            ],
                            "x-ms-enum": {
                              "name": "NotificationChannelEventType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "AutoShutdown",
                                  "value": "AutoShutdown"
                                },
                                {
                                  "name": "Cost",
                                  "value": "Cost"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the notification channel.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "put": {
        "operationId": "NotificationChannels_CreateOrUpdate",
        "tags": [
          "NotificationChannels"
        ],
        "description": "Create or replace an existing notification channel.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the NotificationChannel",
            "required": true,
            "type": "string"
          },
          {
            "name": "notificationChannel",
            "in": "body",
            "description": "A notification.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A notification.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "webHookUrl": {
                      "type": "string",
                      "description": "The webhook URL to send notifications to."
                    },
                    "emailRecipient": {
                      "type": "string",
                      "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                    },
                    "notificationLocale": {
                      "type": "string",
                      "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of notification."
                    },
                    "events": {
                      "type": "array",
                      "description": "The list of event for which this notification is enabled.",
                      "items": {
                        "type": "object",
                        "description": "An event to be notified for.",
                        "properties": {
                          "eventName": {
                            "description": "The event type for which this notification is enabled (i.e. AutoShutdown, Cost)",
                            "type": "string",
                            "enum": [
                              "AutoShutdown",
                              "Cost"
                            ],
                            "x-ms-enum": {
                              "name": "NotificationChannelEventType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "AutoShutdown",
                                  "value": "AutoShutdown"
                                },
                                {
                                  "name": "Cost",
                                  "value": "Cost"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the notification channel.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'NotificationChannel' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "A notification.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "webHookUrl": {
                      "type": "string",
                      "description": "The webhook URL to send notifications to."
                    },
                    "emailRecipient": {
                      "type": "string",
                      "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                    },
                    "notificationLocale": {
                      "type": "string",
                      "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of notification."
                    },
                    "events": {
                      "type": "array",
                      "description": "The list of event for which this notification is enabled.",
                      "items": {
                        "type": "object",
                        "description": "An event to be notified for.",
                        "properties": {
                          "eventName": {
                            "description": "The event type for which this notification is enabled (i.e. AutoShutdown, Cost)",
                            "type": "string",
                            "enum": [
                              "AutoShutdown",
                              "Cost"
                            ],
                            "x-ms-enum": {
                              "name": "NotificationChannelEventType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "AutoShutdown",
                                  "value": "AutoShutdown"
                                },
                                {
                                  "name": "Cost",
                                  "value": "Cost"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the notification channel.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          },
          "201": {
            "description": "Resource 'NotificationChannel' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "A notification.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "webHookUrl": {
                      "type": "string",
                      "description": "The webhook URL to send notifications to."
                    },
                    "emailRecipient": {
                      "type": "string",
                      "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                    },
                    "notificationLocale": {
                      "type": "string",
                      "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of notification."
                    },
                    "events": {
                      "type": "array",
                      "description": "The list of event for which this notification is enabled.",
                      "items": {
                        "type": "object",
                        "description": "An event to be notified for.",
                        "properties": {
                          "eventName": {
                            "description": "The event type for which this notification is enabled (i.e. AutoShutdown, Cost)",
                            "type": "string",
                            "enum": [
                              "AutoShutdown",
                              "Cost"
                            ],
                            "x-ms-enum": {
                              "name": "NotificationChannelEventType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "AutoShutdown",
                                  "value": "AutoShutdown"
                                },
                                {
                                  "name": "Cost",
                                  "value": "Cost"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the notification channel.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "patch": {
        "operationId": "NotificationChannels_Update",
        "tags": [
          "NotificationChannels"
        ],
        "description": "Allows modifying tags of notification channels. All other properties will be ignored.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the NotificationChannel",
            "required": true,
            "type": "string"
          },
          {
            "name": "notificationChannel",
            "in": "body",
            "description": "A notification.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A notification.",
              "properties": {
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A notification.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "webHookUrl": {
                      "type": "string",
                      "description": "The webhook URL to send notifications to."
                    },
                    "emailRecipient": {
                      "type": "string",
                      "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                    },
                    "notificationLocale": {
                      "type": "string",
                      "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of notification."
                    },
                    "events": {
                      "type": "array",
                      "description": "The list of event for which this notification is enabled.",
                      "items": {
                        "type": "object",
                        "description": "An event to be notified for.",
                        "properties": {
                          "eventName": {
                            "description": "The event type for which this notification is enabled (i.e. AutoShutdown, Cost)",
                            "type": "string",
                            "enum": [
                              "AutoShutdown",
                              "Cost"
                            ],
                            "x-ms-enum": {
                              "name": "NotificationChannelEventType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "AutoShutdown",
                                  "value": "AutoShutdown"
                                },
                                {
                                  "name": "Cost",
                                  "value": "Cost"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the notification channel.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "delete": {
        "operationId": "NotificationChannels_Delete",
        "tags": [
          "NotificationChannels"
        ],
        "description": "Delete notification channel.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the NotificationChannel",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/notificationchannels/{name}/notify": {
      "post": {
        "operationId": "NotificationChannels_Notify",
        "tags": [
          "NotificationChannels"
        ],
        "description": "Send notification to provided channel.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the NotificationChannel",
            "required": true,
            "type": "string"
          },
          {
            "name": "notifyParameters",
            "in": "body",
            "description": "Properties for generating a Notification.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Properties for generating a Notification.",
              "properties": {
                "eventName": {
                  "description": "The type of event (i.e. AutoShutdown, Cost)",
                  "type": "string",
                  "enum": [
                    "AutoShutdown",
                    "Cost"
                  ],
                  "x-ms-enum": {
                    "name": "NotificationChannelEventType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "AutoShutdown",
                        "value": "AutoShutdown"
                      },
                      {
                        "name": "Cost",
                        "value": "Cost"
                      }
                    ]
                  }
                },
                "jsonPayload": {
                  "type": "string",
                  "description": "Properties for the notification in json format."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/policysets/{name}/evaluatePolicies": {
      "post": {
        "operationId": "PolicySets_EvaluatePolicies",
        "tags": [
          "PolicySets"
        ],
        "description": "Evaluates lab policy.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the PolicySet",
            "required": true,
            "type": "string"
          },
          {
            "name": "evaluatePoliciesRequest",
            "in": "body",
            "description": "Request body for evaluating a policy set.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Request body for evaluating a policy set.",
              "properties": {
                "policies": {
                  "type": "array",
                  "description": "Policies to evaluate.",
                  "items": {
                    "type": "object",
                    "description": "Properties for evaluating a policy set.",
                    "properties": {
                      "factName": {
                        "type": "string",
                        "description": "The fact name."
                      },
                      "factData": {
                        "type": "string",
                        "description": "The fact data."
                      },
                      "valueOffset": {
                        "type": "string",
                        "description": "The value offset."
                      },
                      "userObjectId": {
                        "type": "string",
                        "description": "The user for which policies will be evaluated"
                      }
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Response body for evaluating a policy set.",
              "properties": {
                "results": {
                  "type": "array",
                  "description": "Results of evaluating a policy set.",
                  "items": {
                    "type": "object",
                    "description": "Result of a policy set evaluation.",
                    "properties": {
                      "hasError": {
                        "type": "boolean",
                        "description": "A value indicating whether this policy set evaluation has discovered violations."
                      },
                      "policyViolations": {
                        "type": "array",
                        "description": "The list of policy violations.",
                        "items": {
                          "type": "object",
                          "description": "Policy violation.",
                          "properties": {
                            "code": {
                              "type": "string",
                              "description": "The code of the policy violation."
                            },
                            "message": {
                              "type": "string",
                              "description": "The message of the policy violation."
                            }
                          }
                        },
                        "x-ms-identifiers": []
                      }
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/policysets/{policySetName}/policies": {
      "get": {
        "operationId": "Policies_List",
        "tags": [
          "Policies"
        ],
        "description": "List policies in a given policy set.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "labs",
            "required": true,
            "type": "string"
          },
          {
            "name": "policySetName",
            "in": "path",
            "description": "policysets",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=description)'",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply to the operation. Example: '$filter=contains(name,'myName')",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: '$top=10'",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "The ordering expression for the results, using OData notation. Example: '$orderby=name desc'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Policy items on this page",
                  "items": {
                    "type": "object",
                    "description": "A Policy.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The identifier of the resource.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource.",
                        "readOnly": true
                      },
                      "location": {
                        "type": "string",
                        "description": "The location of the resource."
                      },
                      "tags": {
                        "type": "object",
                        "description": "The tags of the resource.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "properties": {
                        "description": "The properties of the resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "The description of the policy."
                          },
                          "status": {
                            "description": "The status of the policy.",
                            "type": "string",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "PolicyStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled"
                                }
                              ]
                            }
                          },
                          "factName": {
                            "description": "The fact name of the policy (e.g. LabVmCount, LabVmSize, MaxVmsAllowedPerLab, etc.",
                            "type": "string",
                            "enum": [
                              "UserOwnedLabVmCount",
                              "UserOwnedLabPremiumVmCount",
                              "LabVmCount",
                              "LabPremiumVmCount",
                              "LabVmSize",
                              "GalleryImage",
                              "UserOwnedLabVmCountInSubnet",
                              "LabTargetCost",
                              "EnvironmentTemplate",
                              "ScheduleEditPermission"
                            ],
                            "x-ms-enum": {
                              "name": "PolicyFactName",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "UserOwnedLabVmCount",
                                  "value": "UserOwnedLabVmCount"
                                },
                                {
                                  "name": "UserOwnedLabPremiumVmCount",
                                  "value": "UserOwnedLabPremiumVmCount"
                                },
                                {
                                  "name": "LabVmCount",
                                  "value": "LabVmCount"
                                },
                                {
                                  "name": "LabPremiumVmCount",
                                  "value": "LabPremiumVmCount"
                                },
                                {
                                  "name": "LabVmSize",
                                  "value": "LabVmSize"
                                },
                                {
                                  "name": "GalleryImage",
                                  "value": "GalleryImage"
                                },
                                {
                                  "name": "UserOwnedLabVmCountInSubnet",
                                  "value": "UserOwnedLabVmCountInSubnet"
                                },
                                {
                                  "name": "LabTargetCost",
                                  "value": "LabTargetCost"
                                },
                                {
                                  "name": "EnvironmentTemplate",
                                  "value": "EnvironmentTemplate"
                                },
                                {
                                  "name": "ScheduleEditPermission",
                                  "value": "ScheduleEditPermission"
                                }
                              ]
                            }
                          },
                          "factData": {
                            "type": "string",
                            "description": "The fact data of the policy."
                          },
                          "threshold": {
                            "type": "string",
                            "description": "The threshold of the policy (i.e. a number for MaxValuePolicy, and a JSON array of values for AllowedValuesPolicy)."
                          },
                          "evaluatorType": {
                            "description": "The evaluator type of the policy (i.e. AllowedValuesPolicy, MaxValuePolicy).",
                            "type": "string",
                            "enum": [
                              "AllowedValuesPolicy",
                              "MaxValuePolicy"
                            ],
                            "x-ms-enum": {
                              "name": "PolicyEvaluatorType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "AllowedValuesPolicy",
                                  "value": "AllowedValuesPolicy"
                                },
                                {
                                  "name": "MaxValuePolicy",
                                  "value": "MaxValuePolicy"
                                }
                              ]
                            }
                          },
                          "createdDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The creation date of the policy.",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "type": "string",
                            "description": "The provisioning status of the resource.",
                            "readOnly": true
                          },
                          "uniqueIdentifier": {
                            "type": "string",
                            "description": "The unique immutable identifier of a resource (Guid).",
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "required": [
                      "properties"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/policysets/{policySetName}/policies/{name}": {
      "get": {
        "operationId": "Policies_Get",
        "tags": [
          "Policies"
        ],
        "description": "Get policy.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "labs",
            "required": true,
            "type": "string"
          },
          {
            "name": "policySetName",
            "in": "path",
            "description": "policysets",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the Schedule",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=description)'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A Policy.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "The description of the policy."
                    },
                    "status": {
                      "description": "The status of the policy.",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PolicyStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "factName": {
                      "description": "The fact name of the policy (e.g. LabVmCount, LabVmSize, MaxVmsAllowedPerLab, etc.",
                      "type": "string",
                      "enum": [
                        "UserOwnedLabVmCount",
                        "UserOwnedLabPremiumVmCount",
                        "LabVmCount",
                        "LabPremiumVmCount",
                        "LabVmSize",
                        "GalleryImage",
                        "UserOwnedLabVmCountInSubnet",
                        "LabTargetCost",
                        "EnvironmentTemplate",
                        "ScheduleEditPermission"
                      ],
                      "x-ms-enum": {
                        "name": "PolicyFactName",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "UserOwnedLabVmCount",
                            "value": "UserOwnedLabVmCount"
                          },
                          {
                            "name": "UserOwnedLabPremiumVmCount",
                            "value": "UserOwnedLabPremiumVmCount"
                          },
                          {
                            "name": "LabVmCount",
                            "value": "LabVmCount"
                          },
                          {
                            "name": "LabPremiumVmCount",
                            "value": "LabPremiumVmCount"
                          },
                          {
                            "name": "LabVmSize",
                            "value": "LabVmSize"
                          },
                          {
                            "name": "GalleryImage",
                            "value": "GalleryImage"
                          },
                          {
                            "name": "UserOwnedLabVmCountInSubnet",
                            "value": "UserOwnedLabVmCountInSubnet"
                          },
                          {
                            "name": "LabTargetCost",
                            "value": "LabTargetCost"
                          },
                          {
                            "name": "EnvironmentTemplate",
                            "value": "EnvironmentTemplate"
                          },
                          {
                            "name": "ScheduleEditPermission",
                            "value": "ScheduleEditPermission"
                          }
                        ]
                      }
                    },
                    "factData": {
                      "type": "string",
                      "description": "The fact data of the policy."
                    },
                    "threshold": {
                      "type": "string",
                      "description": "The threshold of the policy (i.e. a number for MaxValuePolicy, and a JSON array of values for AllowedValuesPolicy)."
                    },
                    "evaluatorType": {
                      "description": "The evaluator type of the policy (i.e. AllowedValuesPolicy, MaxValuePolicy).",
                      "type": "string",
                      "enum": [
                        "AllowedValuesPolicy",
                        "MaxValuePolicy"
                      ],
                      "x-ms-enum": {
                        "name": "PolicyEvaluatorType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "AllowedValuesPolicy",
                            "value": "AllowedValuesPolicy"
                          },
                          {
                            "name": "MaxValuePolicy",
                            "value": "MaxValuePolicy"
                          }
                        ]
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the policy.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "put": {
        "operationId": "Policies_CreateOrUpdate",
        "tags": [
          "Policies"
        ],
        "description": "Create or replace an existing policy.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "labs",
            "required": true,
            "type": "string"
          },
          {
            "name": "policySetName",
            "in": "path",
            "description": "policysets",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the Schedule",
            "required": true,
            "type": "string"
          },
          {
            "name": "policy",
            "in": "body",
            "description": "A Policy.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A Policy.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "The description of the policy."
                    },
                    "status": {
                      "description": "The status of the policy.",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PolicyStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "factName": {
                      "description": "The fact name of the policy (e.g. LabVmCount, LabVmSize, MaxVmsAllowedPerLab, etc.",
                      "type": "string",
                      "enum": [
                        "UserOwnedLabVmCount",
                        "UserOwnedLabPremiumVmCount",
                        "LabVmCount",
                        "LabPremiumVmCount",
                        "LabVmSize",
                        "GalleryImage",
                        "UserOwnedLabVmCountInSubnet",
                        "LabTargetCost",
                        "EnvironmentTemplate",
                        "ScheduleEditPermission"
                      ],
                      "x-ms-enum": {
                        "name": "PolicyFactName",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "UserOwnedLabVmCount",
                            "value": "UserOwnedLabVmCount"
                          },
                          {
                            "name": "UserOwnedLabPremiumVmCount",
                            "value": "UserOwnedLabPremiumVmCount"
                          },
                          {
                            "name": "LabVmCount",
                            "value": "LabVmCount"
                          },
                          {
                            "name": "LabPremiumVmCount",
                            "value": "LabPremiumVmCount"
                          },
                          {
                            "name": "LabVmSize",
                            "value": "LabVmSize"
                          },
                          {
                            "name": "GalleryImage",
                            "value": "GalleryImage"
                          },
                          {
                            "name": "UserOwnedLabVmCountInSubnet",
                            "value": "UserOwnedLabVmCountInSubnet"
                          },
                          {
                            "name": "LabTargetCost",
                            "value": "LabTargetCost"
                          },
                          {
                            "name": "EnvironmentTemplate",
                            "value": "EnvironmentTemplate"
                          },
                          {
                            "name": "ScheduleEditPermission",
                            "value": "ScheduleEditPermission"
                          }
                        ]
                      }
                    },
                    "factData": {
                      "type": "string",
                      "description": "The fact data of the policy."
                    },
                    "threshold": {
                      "type": "string",
                      "description": "The threshold of the policy (i.e. a number for MaxValuePolicy, and a JSON array of values for AllowedValuesPolicy)."
                    },
                    "evaluatorType": {
                      "description": "The evaluator type of the policy (i.e. AllowedValuesPolicy, MaxValuePolicy).",
                      "type": "string",
                      "enum": [
                        "AllowedValuesPolicy",
                        "MaxValuePolicy"
                      ],
                      "x-ms-enum": {
                        "name": "PolicyEvaluatorType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "AllowedValuesPolicy",
                            "value": "AllowedValuesPolicy"
                          },
                          {
                            "name": "MaxValuePolicy",
                            "value": "MaxValuePolicy"
                          }
                        ]
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the policy.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Policy' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "A Policy.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "The description of the policy."
                    },
                    "status": {
                      "description": "The status of the policy.",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PolicyStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "factName": {
                      "description": "The fact name of the policy (e.g. LabVmCount, LabVmSize, MaxVmsAllowedPerLab, etc.",
                      "type": "string",
                      "enum": [
                        "UserOwnedLabVmCount",
                        "UserOwnedLabPremiumVmCount",
                        "LabVmCount",
                        "LabPremiumVmCount",
                        "LabVmSize",
                        "GalleryImage",
                        "UserOwnedLabVmCountInSubnet",
                        "LabTargetCost",
                        "EnvironmentTemplate",
                        "ScheduleEditPermission"
                      ],
                      "x-ms-enum": {
                        "name": "PolicyFactName",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "UserOwnedLabVmCount",
                            "value": "UserOwnedLabVmCount"
                          },
                          {
                            "name": "UserOwnedLabPremiumVmCount",
                            "value": "UserOwnedLabPremiumVmCount"
                          },
                          {
                            "name": "LabVmCount",
                            "value": "LabVmCount"
                          },
                          {
                            "name": "LabPremiumVmCount",
                            "value": "LabPremiumVmCount"
                          },
                          {
                            "name": "LabVmSize",
                            "value": "LabVmSize"
                          },
                          {
                            "name": "GalleryImage",
                            "value": "GalleryImage"
                          },
                          {
                            "name": "UserOwnedLabVmCountInSubnet",
                            "value": "UserOwnedLabVmCountInSubnet"
                          },
                          {
                            "name": "LabTargetCost",
                            "value": "LabTargetCost"
                          },
                          {
                            "name": "EnvironmentTemplate",
                            "value": "EnvironmentTemplate"
                          },
                          {
                            "name": "ScheduleEditPermission",
                            "value": "ScheduleEditPermission"
                          }
                        ]
                      }
                    },
                    "factData": {
                      "type": "string",
                      "description": "The fact data of the policy."
                    },
                    "threshold": {
                      "type": "string",
                      "description": "The threshold of the policy (i.e. a number for MaxValuePolicy, and a JSON array of values for AllowedValuesPolicy)."
                    },
                    "evaluatorType": {
                      "description": "The evaluator type of the policy (i.e. AllowedValuesPolicy, MaxValuePolicy).",
                      "type": "string",
                      "enum": [
                        "AllowedValuesPolicy",
                        "MaxValuePolicy"
                      ],
                      "x-ms-enum": {
                        "name": "PolicyEvaluatorType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "AllowedValuesPolicy",
                            "value": "AllowedValuesPolicy"
                          },
                          {
                            "name": "MaxValuePolicy",
                            "value": "MaxValuePolicy"
                          }
                        ]
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the policy.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          },
          "201": {
            "description": "Resource 'Policy' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "A Policy.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "The description of the policy."
                    },
                    "status": {
                      "description": "The status of the policy.",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PolicyStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "factName": {
                      "description": "The fact name of the policy (e.g. LabVmCount, LabVmSize, MaxVmsAllowedPerLab, etc.",
                      "type": "string",
                      "enum": [
                        "UserOwnedLabVmCount",
                        "UserOwnedLabPremiumVmCount",
                        "LabVmCount",
                        "LabPremiumVmCount",
                        "LabVmSize",
                        "GalleryImage",
                        "UserOwnedLabVmCountInSubnet",
                        "LabTargetCost",
                        "EnvironmentTemplate",
                        "ScheduleEditPermission"
                      ],
                      "x-ms-enum": {
                        "name": "PolicyFactName",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "UserOwnedLabVmCount",
                            "value": "UserOwnedLabVmCount"
                          },
                          {
                            "name": "UserOwnedLabPremiumVmCount",
                            "value": "UserOwnedLabPremiumVmCount"
                          },
                          {
                            "name": "LabVmCount",
                            "value": "LabVmCount"
                          },
                          {
                            "name": "LabPremiumVmCount",
                            "value": "LabPremiumVmCount"
                          },
                          {
                            "name": "LabVmSize",
                            "value": "LabVmSize"
                          },
                          {
                            "name": "GalleryImage",
                            "value": "GalleryImage"
                          },
                          {
                            "name": "UserOwnedLabVmCountInSubnet",
                            "value": "UserOwnedLabVmCountInSubnet"
                          },
                          {
                            "name": "LabTargetCost",
                            "value": "LabTargetCost"
                          },
                          {
                            "name": "EnvironmentTemplate",
                            "value": "EnvironmentTemplate"
                          },
                          {
                            "name": "ScheduleEditPermission",
                            "value": "ScheduleEditPermission"
                          }
                        ]
                      }
                    },
                    "factData": {
                      "type": "string",
                      "description": "The fact data of the policy."
                    },
                    "threshold": {
                      "type": "string",
                      "description": "The threshold of the policy (i.e. a number for MaxValuePolicy, and a JSON array of values for AllowedValuesPolicy)."
                    },
                    "evaluatorType": {
                      "description": "The evaluator type of the policy (i.e. AllowedValuesPolicy, MaxValuePolicy).",
                      "type": "string",
                      "enum": [
                        "AllowedValuesPolicy",
                        "MaxValuePolicy"
                      ],
                      "x-ms-enum": {
                        "name": "PolicyEvaluatorType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "AllowedValuesPolicy",
                            "value": "AllowedValuesPolicy"
                          },
                          {
                            "name": "MaxValuePolicy",
                            "value": "MaxValuePolicy"
                          }
                        ]
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the policy.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "patch": {
        "operationId": "Policies_Update",
        "tags": [
          "Policies"
        ],
        "description": "Allows modifying tags of policies. All other properties will be ignored.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "labs",
            "required": true,
            "type": "string"
          },
          {
            "name": "policySetName",
            "in": "path",
            "description": "policysets",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the Schedule",
            "required": true,
            "type": "string"
          },
          {
            "name": "policy",
            "in": "body",
            "description": "A Policy.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A Policy.",
              "properties": {
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A Policy.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "The description of the policy."
                    },
                    "status": {
                      "description": "The status of the policy.",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "PolicyStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "factName": {
                      "description": "The fact name of the policy (e.g. LabVmCount, LabVmSize, MaxVmsAllowedPerLab, etc.",
                      "type": "string",
                      "enum": [
                        "UserOwnedLabVmCount",
                        "UserOwnedLabPremiumVmCount",
                        "LabVmCount",
                        "LabPremiumVmCount",
                        "LabVmSize",
                        "GalleryImage",
                        "UserOwnedLabVmCountInSubnet",
                        "LabTargetCost",
                        "EnvironmentTemplate",
                        "ScheduleEditPermission"
                      ],
                      "x-ms-enum": {
                        "name": "PolicyFactName",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "UserOwnedLabVmCount",
                            "value": "UserOwnedLabVmCount"
                          },
                          {
                            "name": "UserOwnedLabPremiumVmCount",
                            "value": "UserOwnedLabPremiumVmCount"
                          },
                          {
                            "name": "LabVmCount",
                            "value": "LabVmCount"
                          },
                          {
                            "name": "LabPremiumVmCount",
                            "value": "LabPremiumVmCount"
                          },
                          {
                            "name": "LabVmSize",
                            "value": "LabVmSize"
                          },
                          {
                            "name": "GalleryImage",
                            "value": "GalleryImage"
                          },
                          {
                            "name": "UserOwnedLabVmCountInSubnet",
                            "value": "UserOwnedLabVmCountInSubnet"
                          },
                          {
                            "name": "LabTargetCost",
                            "value": "LabTargetCost"
                          },
                          {
                            "name": "EnvironmentTemplate",
                            "value": "EnvironmentTemplate"
                          },
                          {
                            "name": "ScheduleEditPermission",
                            "value": "ScheduleEditPermission"
                          }
                        ]
                      }
                    },
                    "factData": {
                      "type": "string",
                      "description": "The fact data of the policy."
                    },
                    "threshold": {
                      "type": "string",
                      "description": "The threshold of the policy (i.e. a number for MaxValuePolicy, and a JSON array of values for AllowedValuesPolicy)."
                    },
                    "evaluatorType": {
                      "description": "The evaluator type of the policy (i.e. AllowedValuesPolicy, MaxValuePolicy).",
                      "type": "string",
                      "enum": [
                        "AllowedValuesPolicy",
                        "MaxValuePolicy"
                      ],
                      "x-ms-enum": {
                        "name": "PolicyEvaluatorType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "AllowedValuesPolicy",
                            "value": "AllowedValuesPolicy"
                          },
                          {
                            "name": "MaxValuePolicy",
                            "value": "MaxValuePolicy"
                          }
                        ]
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the policy.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "delete": {
        "operationId": "Policies_Delete",
        "tags": [
          "Policies"
        ],
        "description": "Delete policy.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "labs",
            "required": true,
            "type": "string"
          },
          {
            "name": "policySetName",
            "in": "path",
            "description": "policysets",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the Schedule",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/schedules": {
      "get": {
        "operationId": "Schedules_List",
        "tags": [
          "Schedules"
        ],
        "description": "List schedules in a given lab.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "labs",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=status)'",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply to the operation. Example: '$filter=contains(name,'myName')",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: '$top=10'",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "The ordering expression for the results, using OData notation. Example: '$orderby=name desc'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Schedule items on this page",
                  "items": {
                    "type": "object",
                    "description": "A schedule.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The identifier of the resource.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource.",
                        "readOnly": true
                      },
                      "location": {
                        "type": "string",
                        "description": "The location of the resource."
                      },
                      "tags": {
                        "type": "object",
                        "description": "The tags of the resource.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "properties": {
                        "description": "The properties of the resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "description": "The status of the schedule (i.e. Enabled, Disabled)",
                            "default": "Disabled",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "EnableStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled"
                                }
                              ]
                            }
                          },
                          "taskType": {
                            "type": "string",
                            "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                          },
                          "weeklyRecurrence": {
                            "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                            "type": "object",
                            "properties": {
                              "weekdays": {
                                "type": "array",
                                "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "time": {
                                "type": "string",
                                "description": "The time of the day the schedule will occur."
                              }
                            }
                          },
                          "dailyRecurrence": {
                            "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                            "type": "object",
                            "properties": {
                              "time": {
                                "type": "string",
                                "description": "The time of day the schedule will occur."
                              }
                            }
                          },
                          "hourlyRecurrence": {
                            "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                            "type": "object",
                            "properties": {
                              "minute": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Minutes of the hour the schedule will run."
                              }
                            }
                          },
                          "timeZoneId": {
                            "type": "string",
                            "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                          },
                          "notificationSettings": {
                            "description": "Notification settings.",
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string",
                                "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                "default": "Disabled",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "EnableStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled"
                                    }
                                  ]
                                }
                              },
                              "timeInMinutes": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Time in minutes before event at which notification will be sent."
                              },
                              "webhookUrl": {
                                "type": "string",
                                "description": "The webhook URL to which the notification will be sent."
                              },
                              "emailRecipient": {
                                "type": "string",
                                "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                              },
                              "notificationLocale": {
                                "type": "string",
                                "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                              }
                            }
                          },
                          "createdDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The creation date of the schedule.",
                            "readOnly": true
                          },
                          "targetResourceId": {
                            "type": "string",
                            "description": "The resource ID to which the schedule belongs"
                          },
                          "provisioningState": {
                            "type": "string",
                            "description": "The provisioning status of the resource.",
                            "readOnly": true
                          },
                          "uniqueIdentifier": {
                            "type": "string",
                            "description": "The unique immutable identifier of a resource (Guid).",
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "required": [
                      "properties"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/schedules/{name}": {
      "get": {
        "operationId": "Schedules_Get",
        "tags": [
          "Schedules"
        ],
        "description": "Get schedule.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "labs",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the Schedule",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=status)'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A schedule.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the schedule (i.e. Enabled, Disabled)",
                      "default": "Disabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "EnableStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "taskType": {
                      "type": "string",
                      "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                    },
                    "weeklyRecurrence": {
                      "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                      "type": "object",
                      "properties": {
                        "weekdays": {
                          "type": "array",
                          "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                          "items": {
                            "type": "string"
                          }
                        },
                        "time": {
                          "type": "string",
                          "description": "The time of the day the schedule will occur."
                        }
                      }
                    },
                    "dailyRecurrence": {
                      "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                      "type": "object",
                      "properties": {
                        "time": {
                          "type": "string",
                          "description": "The time of day the schedule will occur."
                        }
                      }
                    },
                    "hourlyRecurrence": {
                      "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                      "type": "object",
                      "properties": {
                        "minute": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Minutes of the hour the schedule will run."
                        }
                      }
                    },
                    "timeZoneId": {
                      "type": "string",
                      "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                    },
                    "notificationSettings": {
                      "description": "Notification settings.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "timeInMinutes": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Time in minutes before event at which notification will be sent."
                        },
                        "webhookUrl": {
                          "type": "string",
                          "description": "The webhook URL to which the notification will be sent."
                        },
                        "emailRecipient": {
                          "type": "string",
                          "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                        },
                        "notificationLocale": {
                          "type": "string",
                          "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                        }
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the schedule.",
                      "readOnly": true
                    },
                    "targetResourceId": {
                      "type": "string",
                      "description": "The resource ID to which the schedule belongs"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "put": {
        "operationId": "Schedules_CreateOrUpdate",
        "tags": [
          "Schedules"
        ],
        "description": "Create or replace an existing schedule.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "labs",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the Schedule",
            "required": true,
            "type": "string"
          },
          {
            "name": "schedule",
            "in": "body",
            "description": "A schedule.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A schedule.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the schedule (i.e. Enabled, Disabled)",
                      "default": "Disabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "EnableStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "taskType": {
                      "type": "string",
                      "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                    },
                    "weeklyRecurrence": {
                      "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                      "type": "object",
                      "properties": {
                        "weekdays": {
                          "type": "array",
                          "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                          "items": {
                            "type": "string"
                          }
                        },
                        "time": {
                          "type": "string",
                          "description": "The time of the day the schedule will occur."
                        }
                      }
                    },
                    "dailyRecurrence": {
                      "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                      "type": "object",
                      "properties": {
                        "time": {
                          "type": "string",
                          "description": "The time of day the schedule will occur."
                        }
                      }
                    },
                    "hourlyRecurrence": {
                      "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                      "type": "object",
                      "properties": {
                        "minute": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Minutes of the hour the schedule will run."
                        }
                      }
                    },
                    "timeZoneId": {
                      "type": "string",
                      "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                    },
                    "notificationSettings": {
                      "description": "Notification settings.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "timeInMinutes": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Time in minutes before event at which notification will be sent."
                        },
                        "webhookUrl": {
                          "type": "string",
                          "description": "The webhook URL to which the notification will be sent."
                        },
                        "emailRecipient": {
                          "type": "string",
                          "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                        },
                        "notificationLocale": {
                          "type": "string",
                          "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                        }
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the schedule.",
                      "readOnly": true
                    },
                    "targetResourceId": {
                      "type": "string",
                      "description": "The resource ID to which the schedule belongs"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Schedule' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "A schedule.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the schedule (i.e. Enabled, Disabled)",
                      "default": "Disabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "EnableStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "taskType": {
                      "type": "string",
                      "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                    },
                    "weeklyRecurrence": {
                      "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                      "type": "object",
                      "properties": {
                        "weekdays": {
                          "type": "array",
                          "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                          "items": {
                            "type": "string"
                          }
                        },
                        "time": {
                          "type": "string",
                          "description": "The time of the day the schedule will occur."
                        }
                      }
                    },
                    "dailyRecurrence": {
                      "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                      "type": "object",
                      "properties": {
                        "time": {
                          "type": "string",
                          "description": "The time of day the schedule will occur."
                        }
                      }
                    },
                    "hourlyRecurrence": {
                      "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                      "type": "object",
                      "properties": {
                        "minute": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Minutes of the hour the schedule will run."
                        }
                      }
                    },
                    "timeZoneId": {
                      "type": "string",
                      "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                    },
                    "notificationSettings": {
                      "description": "Notification settings.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "timeInMinutes": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Time in minutes before event at which notification will be sent."
                        },
                        "webhookUrl": {
                          "type": "string",
                          "description": "The webhook URL to which the notification will be sent."
                        },
                        "emailRecipient": {
                          "type": "string",
                          "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                        },
                        "notificationLocale": {
                          "type": "string",
                          "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                        }
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the schedule.",
                      "readOnly": true
                    },
                    "targetResourceId": {
                      "type": "string",
                      "description": "The resource ID to which the schedule belongs"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          },
          "201": {
            "description": "Resource 'Schedule' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "A schedule.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the schedule (i.e. Enabled, Disabled)",
                      "default": "Disabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "EnableStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "taskType": {
                      "type": "string",
                      "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                    },
                    "weeklyRecurrence": {
                      "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                      "type": "object",
                      "properties": {
                        "weekdays": {
                          "type": "array",
                          "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                          "items": {
                            "type": "string"
                          }
                        },
                        "time": {
                          "type": "string",
                          "description": "The time of the day the schedule will occur."
                        }
                      }
                    },
                    "dailyRecurrence": {
                      "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                      "type": "object",
                      "properties": {
                        "time": {
                          "type": "string",
                          "description": "The time of day the schedule will occur."
                        }
                      }
                    },
                    "hourlyRecurrence": {
                      "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                      "type": "object",
                      "properties": {
                        "minute": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Minutes of the hour the schedule will run."
                        }
                      }
                    },
                    "timeZoneId": {
                      "type": "string",
                      "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                    },
                    "notificationSettings": {
                      "description": "Notification settings.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "timeInMinutes": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Time in minutes before event at which notification will be sent."
                        },
                        "webhookUrl": {
                          "type": "string",
                          "description": "The webhook URL to which the notification will be sent."
                        },
                        "emailRecipient": {
                          "type": "string",
                          "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                        },
                        "notificationLocale": {
                          "type": "string",
                          "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                        }
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the schedule.",
                      "readOnly": true
                    },
                    "targetResourceId": {
                      "type": "string",
                      "description": "The resource ID to which the schedule belongs"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "patch": {
        "operationId": "Schedules_Update",
        "tags": [
          "Schedules"
        ],
        "description": "Allows modifying tags of schedules. All other properties will be ignored.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "labs",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the Schedule",
            "required": true,
            "type": "string"
          },
          {
            "name": "schedule",
            "in": "body",
            "description": "A schedule.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A schedule.",
              "properties": {
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A schedule.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the schedule (i.e. Enabled, Disabled)",
                      "default": "Disabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "EnableStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "taskType": {
                      "type": "string",
                      "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                    },
                    "weeklyRecurrence": {
                      "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                      "type": "object",
                      "properties": {
                        "weekdays": {
                          "type": "array",
                          "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                          "items": {
                            "type": "string"
                          }
                        },
                        "time": {
                          "type": "string",
                          "description": "The time of the day the schedule will occur."
                        }
                      }
                    },
                    "dailyRecurrence": {
                      "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                      "type": "object",
                      "properties": {
                        "time": {
                          "type": "string",
                          "description": "The time of day the schedule will occur."
                        }
                      }
                    },
                    "hourlyRecurrence": {
                      "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                      "type": "object",
                      "properties": {
                        "minute": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Minutes of the hour the schedule will run."
                        }
                      }
                    },
                    "timeZoneId": {
                      "type": "string",
                      "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                    },
                    "notificationSettings": {
                      "description": "Notification settings.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "timeInMinutes": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Time in minutes before event at which notification will be sent."
                        },
                        "webhookUrl": {
                          "type": "string",
                          "description": "The webhook URL to which the notification will be sent."
                        },
                        "emailRecipient": {
                          "type": "string",
                          "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                        },
                        "notificationLocale": {
                          "type": "string",
                          "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                        }
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the schedule.",
                      "readOnly": true
                    },
                    "targetResourceId": {
                      "type": "string",
                      "description": "The resource ID to which the schedule belongs"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "delete": {
        "operationId": "Schedules_Delete",
        "tags": [
          "Schedules"
        ],
        "description": "Delete schedule.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "labs",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the Schedule",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/schedules/{name}/execute": {
      "post": {
        "operationId": "Schedules_Execute",
        "tags": [
          "Schedules"
        ],
        "description": "Execute a schedule. This operation can take a while to complete.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "labs",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the Schedule",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/schedules/{name}/listApplicable": {
      "post": {
        "operationId": "Schedules_ListApplicable",
        "tags": [
          "Schedules"
        ],
        "description": "Lists all applicable schedules",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "labs",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the Schedule",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Schedule items on this page",
                  "items": {
                    "type": "object",
                    "description": "A schedule.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The identifier of the resource.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource.",
                        "readOnly": true
                      },
                      "location": {
                        "type": "string",
                        "description": "The location of the resource."
                      },
                      "tags": {
                        "type": "object",
                        "description": "The tags of the resource.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "properties": {
                        "description": "The properties of the resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "description": "The status of the schedule (i.e. Enabled, Disabled)",
                            "default": "Disabled",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "EnableStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled"
                                }
                              ]
                            }
                          },
                          "taskType": {
                            "type": "string",
                            "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                          },
                          "weeklyRecurrence": {
                            "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                            "type": "object",
                            "properties": {
                              "weekdays": {
                                "type": "array",
                                "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "time": {
                                "type": "string",
                                "description": "The time of the day the schedule will occur."
                              }
                            }
                          },
                          "dailyRecurrence": {
                            "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                            "type": "object",
                            "properties": {
                              "time": {
                                "type": "string",
                                "description": "The time of day the schedule will occur."
                              }
                            }
                          },
                          "hourlyRecurrence": {
                            "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                            "type": "object",
                            "properties": {
                              "minute": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Minutes of the hour the schedule will run."
                              }
                            }
                          },
                          "timeZoneId": {
                            "type": "string",
                            "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                          },
                          "notificationSettings": {
                            "description": "Notification settings.",
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string",
                                "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                "default": "Disabled",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "EnableStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled"
                                    }
                                  ]
                                }
                              },
                              "timeInMinutes": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Time in minutes before event at which notification will be sent."
                              },
                              "webhookUrl": {
                                "type": "string",
                                "description": "The webhook URL to which the notification will be sent."
                              },
                              "emailRecipient": {
                                "type": "string",
                                "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                              },
                              "notificationLocale": {
                                "type": "string",
                                "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                              }
                            }
                          },
                          "createdDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The creation date of the schedule.",
                            "readOnly": true
                          },
                          "targetResourceId": {
                            "type": "string",
                            "description": "The resource ID to which the schedule belongs"
                          },
                          "provisioningState": {
                            "type": "string",
                            "description": "The provisioning status of the resource.",
                            "readOnly": true
                          },
                          "uniqueIdentifier": {
                            "type": "string",
                            "description": "The unique immutable identifier of a resource (Guid).",
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "required": [
                      "properties"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/servicerunners/{name}": {
      "get": {
        "operationId": "ServiceRunners_Get",
        "tags": [
          "ServiceRunners"
        ],
        "description": "Get service runner.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the ServiceRunner",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A container for a managed identity to execute DevTest lab services.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "identity": {
                  "description": "The identity of the resource.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "Managed identity.",
                      "type": "string",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedIdentityType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "None",
                            "value": "None"
                          },
                          {
                            "name": "SystemAssigned",
                            "value": "SystemAssigned"
                          },
                          {
                            "name": "UserAssigned",
                            "value": "UserAssigned"
                          },
                          {
                            "name": "SystemAssigned,UserAssigned",
                            "value": "SystemAssigned,UserAssigned"
                          }
                        ]
                      }
                    },
                    "principalId": {
                      "type": "string",
                      "description": "The principal id of resource identity."
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "The tenant identifier of resource."
                    },
                    "clientSecretUrl": {
                      "type": "string",
                      "description": "The client secret URL of the identity."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "ServiceRunners_CreateOrUpdate",
        "tags": [
          "ServiceRunners"
        ],
        "description": "Create or replace an existing service runner.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the ServiceRunner",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceRunner",
            "in": "body",
            "description": "A container for a managed identity to execute DevTest lab services.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A container for a managed identity to execute DevTest lab services.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "identity": {
                  "description": "The identity of the resource.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "Managed identity.",
                      "type": "string",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedIdentityType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "None",
                            "value": "None"
                          },
                          {
                            "name": "SystemAssigned",
                            "value": "SystemAssigned"
                          },
                          {
                            "name": "UserAssigned",
                            "value": "UserAssigned"
                          },
                          {
                            "name": "SystemAssigned,UserAssigned",
                            "value": "SystemAssigned,UserAssigned"
                          }
                        ]
                      }
                    },
                    "principalId": {
                      "type": "string",
                      "description": "The principal id of resource identity."
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "The tenant identifier of resource."
                    },
                    "clientSecretUrl": {
                      "type": "string",
                      "description": "The client secret URL of the identity."
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ServiceRunner' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "A container for a managed identity to execute DevTest lab services.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "identity": {
                  "description": "The identity of the resource.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "Managed identity.",
                      "type": "string",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedIdentityType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "None",
                            "value": "None"
                          },
                          {
                            "name": "SystemAssigned",
                            "value": "SystemAssigned"
                          },
                          {
                            "name": "UserAssigned",
                            "value": "UserAssigned"
                          },
                          {
                            "name": "SystemAssigned,UserAssigned",
                            "value": "SystemAssigned,UserAssigned"
                          }
                        ]
                      }
                    },
                    "principalId": {
                      "type": "string",
                      "description": "The principal id of resource identity."
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "The tenant identifier of resource."
                    },
                    "clientSecretUrl": {
                      "type": "string",
                      "description": "The client secret URL of the identity."
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource 'ServiceRunner' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "A container for a managed identity to execute DevTest lab services.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "identity": {
                  "description": "The identity of the resource.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "Managed identity.",
                      "type": "string",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedIdentityType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "None",
                            "value": "None"
                          },
                          {
                            "name": "SystemAssigned",
                            "value": "SystemAssigned"
                          },
                          {
                            "name": "UserAssigned",
                            "value": "UserAssigned"
                          },
                          {
                            "name": "SystemAssigned,UserAssigned",
                            "value": "SystemAssigned,UserAssigned"
                          }
                        ]
                      }
                    },
                    "principalId": {
                      "type": "string",
                      "description": "The principal id of resource identity."
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "The tenant identifier of resource."
                    },
                    "clientSecretUrl": {
                      "type": "string",
                      "description": "The client secret URL of the identity."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "ServiceRunners_Delete",
        "tags": [
          "ServiceRunners"
        ],
        "description": "Delete service runner.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the ServiceRunner",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users": {
      "get": {
        "operationId": "Users_List",
        "tags": [
          "Users"
        ],
        "description": "List user profiles in a given lab.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=identity)'",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply to the operation. Example: '$filter=contains(name,'myName')",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: '$top=10'",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "The ordering expression for the results, using OData notation. Example: '$orderby=name desc'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The User items on this page",
                  "items": {
                    "type": "object",
                    "description": "Profile of a lab user.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The identifier of the resource.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource.",
                        "readOnly": true
                      },
                      "location": {
                        "type": "string",
                        "description": "The location of the resource."
                      },
                      "tags": {
                        "type": "object",
                        "description": "The tags of the resource.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "properties": {
                        "description": "The properties of the resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "identity": {
                            "description": "The identity of the user.",
                            "type": "object",
                            "properties": {
                              "principalName": {
                                "type": "string",
                                "description": "Set to the principal name / UPN of the client JWT making the request."
                              },
                              "principalId": {
                                "type": "string",
                                "description": "Set to the principal Id of the client JWT making the request. Service principal will not have the principal Id."
                              },
                              "tenantId": {
                                "type": "string",
                                "description": "Set to the tenant ID of the client JWT making the request."
                              },
                              "objectId": {
                                "type": "string",
                                "description": "Set to the object Id of the client JWT making the request. Not all users have object Id. For CSP (reseller) scenarios for example, object Id is not available."
                              },
                              "appId": {
                                "type": "string",
                                "description": "Set to the app Id of the client JWT making the request."
                              }
                            }
                          },
                          "secretStore": {
                            "description": "The secret store of the user.",
                            "type": "object",
                            "properties": {
                              "keyVaultUri": {
                                "type": "string",
                                "description": "The URI of the user's Key vault."
                              },
                              "keyVaultId": {
                                "type": "string",
                                "description": "The ID of the user's Key vault."
                              }
                            }
                          },
                          "createdDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The creation date of the user profile.",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "type": "string",
                            "description": "The provisioning status of the resource.",
                            "readOnly": true
                          },
                          "uniqueIdentifier": {
                            "type": "string",
                            "description": "The unique immutable identifier of a resource (Guid).",
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "required": [
                      "properties"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{name}": {
      "get": {
        "operationId": "Users_Get",
        "tags": [
          "Users"
        ],
        "description": "Get user profile.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the User",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=identity)'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Profile of a lab user.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "identity": {
                      "description": "The identity of the user.",
                      "type": "object",
                      "properties": {
                        "principalName": {
                          "type": "string",
                          "description": "Set to the principal name / UPN of the client JWT making the request."
                        },
                        "principalId": {
                          "type": "string",
                          "description": "Set to the principal Id of the client JWT making the request. Service principal will not have the principal Id."
                        },
                        "tenantId": {
                          "type": "string",
                          "description": "Set to the tenant ID of the client JWT making the request."
                        },
                        "objectId": {
                          "type": "string",
                          "description": "Set to the object Id of the client JWT making the request. Not all users have object Id. For CSP (reseller) scenarios for example, object Id is not available."
                        },
                        "appId": {
                          "type": "string",
                          "description": "Set to the app Id of the client JWT making the request."
                        }
                      }
                    },
                    "secretStore": {
                      "description": "The secret store of the user.",
                      "type": "object",
                      "properties": {
                        "keyVaultUri": {
                          "type": "string",
                          "description": "The URI of the user's Key vault."
                        },
                        "keyVaultId": {
                          "type": "string",
                          "description": "The ID of the user's Key vault."
                        }
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the user profile.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "put": {
        "operationId": "Users_CreateOrUpdate",
        "tags": [
          "Users"
        ],
        "description": "Create or replace an existing user profile. This operation can take a while to complete.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the User",
            "required": true,
            "type": "string"
          },
          {
            "name": "user",
            "in": "body",
            "description": "Profile of a lab user.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Profile of a lab user.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "identity": {
                      "description": "The identity of the user.",
                      "type": "object",
                      "properties": {
                        "principalName": {
                          "type": "string",
                          "description": "Set to the principal name / UPN of the client JWT making the request."
                        },
                        "principalId": {
                          "type": "string",
                          "description": "Set to the principal Id of the client JWT making the request. Service principal will not have the principal Id."
                        },
                        "tenantId": {
                          "type": "string",
                          "description": "Set to the tenant ID of the client JWT making the request."
                        },
                        "objectId": {
                          "type": "string",
                          "description": "Set to the object Id of the client JWT making the request. Not all users have object Id. For CSP (reseller) scenarios for example, object Id is not available."
                        },
                        "appId": {
                          "type": "string",
                          "description": "Set to the app Id of the client JWT making the request."
                        }
                      }
                    },
                    "secretStore": {
                      "description": "The secret store of the user.",
                      "type": "object",
                      "properties": {
                        "keyVaultUri": {
                          "type": "string",
                          "description": "The URI of the user's Key vault."
                        },
                        "keyVaultId": {
                          "type": "string",
                          "description": "The ID of the user's Key vault."
                        }
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the user profile.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'User' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Profile of a lab user.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "identity": {
                      "description": "The identity of the user.",
                      "type": "object",
                      "properties": {
                        "principalName": {
                          "type": "string",
                          "description": "Set to the principal name / UPN of the client JWT making the request."
                        },
                        "principalId": {
                          "type": "string",
                          "description": "Set to the principal Id of the client JWT making the request. Service principal will not have the principal Id."
                        },
                        "tenantId": {
                          "type": "string",
                          "description": "Set to the tenant ID of the client JWT making the request."
                        },
                        "objectId": {
                          "type": "string",
                          "description": "Set to the object Id of the client JWT making the request. Not all users have object Id. For CSP (reseller) scenarios for example, object Id is not available."
                        },
                        "appId": {
                          "type": "string",
                          "description": "Set to the app Id of the client JWT making the request."
                        }
                      }
                    },
                    "secretStore": {
                      "description": "The secret store of the user.",
                      "type": "object",
                      "properties": {
                        "keyVaultUri": {
                          "type": "string",
                          "description": "The URI of the user's Key vault."
                        },
                        "keyVaultId": {
                          "type": "string",
                          "description": "The ID of the user's Key vault."
                        }
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the user profile.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          },
          "201": {
            "description": "Resource 'User' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Profile of a lab user.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "identity": {
                      "description": "The identity of the user.",
                      "type": "object",
                      "properties": {
                        "principalName": {
                          "type": "string",
                          "description": "Set to the principal name / UPN of the client JWT making the request."
                        },
                        "principalId": {
                          "type": "string",
                          "description": "Set to the principal Id of the client JWT making the request. Service principal will not have the principal Id."
                        },
                        "tenantId": {
                          "type": "string",
                          "description": "Set to the tenant ID of the client JWT making the request."
                        },
                        "objectId": {
                          "type": "string",
                          "description": "Set to the object Id of the client JWT making the request. Not all users have object Id. For CSP (reseller) scenarios for example, object Id is not available."
                        },
                        "appId": {
                          "type": "string",
                          "description": "Set to the app Id of the client JWT making the request."
                        }
                      }
                    },
                    "secretStore": {
                      "description": "The secret store of the user.",
                      "type": "object",
                      "properties": {
                        "keyVaultUri": {
                          "type": "string",
                          "description": "The URI of the user's Key vault."
                        },
                        "keyVaultId": {
                          "type": "string",
                          "description": "The ID of the user's Key vault."
                        }
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the user profile.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Users_Update",
        "tags": [
          "Users"
        ],
        "description": "Allows modifying tags of user profiles. All other properties will be ignored.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the User",
            "required": true,
            "type": "string"
          },
          {
            "name": "user",
            "in": "body",
            "description": "Profile of a lab user.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Profile of a lab user.",
              "properties": {
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Profile of a lab user.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "identity": {
                      "description": "The identity of the user.",
                      "type": "object",
                      "properties": {
                        "principalName": {
                          "type": "string",
                          "description": "Set to the principal name / UPN of the client JWT making the request."
                        },
                        "principalId": {
                          "type": "string",
                          "description": "Set to the principal Id of the client JWT making the request. Service principal will not have the principal Id."
                        },
                        "tenantId": {
                          "type": "string",
                          "description": "Set to the tenant ID of the client JWT making the request."
                        },
                        "objectId": {
                          "type": "string",
                          "description": "Set to the object Id of the client JWT making the request. Not all users have object Id. For CSP (reseller) scenarios for example, object Id is not available."
                        },
                        "appId": {
                          "type": "string",
                          "description": "Set to the app Id of the client JWT making the request."
                        }
                      }
                    },
                    "secretStore": {
                      "description": "The secret store of the user.",
                      "type": "object",
                      "properties": {
                        "keyVaultUri": {
                          "type": "string",
                          "description": "The URI of the user's Key vault."
                        },
                        "keyVaultId": {
                          "type": "string",
                          "description": "The ID of the user's Key vault."
                        }
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the user profile.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "delete": {
        "operationId": "Users_Delete",
        "tags": [
          "Users"
        ],
        "description": "Delete user profile. This operation can take a while to complete.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the User",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/disks": {
      "get": {
        "operationId": "Disks_List",
        "tags": [
          "Disks"
        ],
        "description": "List disks in a given user profile.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "The name of the user profile.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=diskType)'",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply to the operation. Example: '$filter=contains(name,'myName')",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: '$top=10'",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "The ordering expression for the results, using OData notation. Example: '$orderby=name desc'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Disk items on this page",
                  "items": {
                    "type": "object",
                    "description": "A Disk.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The identifier of the resource.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource.",
                        "readOnly": true
                      },
                      "location": {
                        "type": "string",
                        "description": "The location of the resource."
                      },
                      "tags": {
                        "type": "object",
                        "description": "The tags of the resource.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "properties": {
                        "description": "The properties of the disk.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "diskType": {
                            "description": "The storage type for the disk (i.e. Standard, Premium).",
                            "type": "string",
                            "enum": [
                              "Standard",
                              "Premium",
                              "StandardSSD"
                            ],
                            "x-ms-enum": {
                              "name": "StorageType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Standard",
                                  "value": "Standard"
                                },
                                {
                                  "name": "Premium",
                                  "value": "Premium"
                                },
                                {
                                  "name": "StandardSSD",
                                  "value": "StandardSSD"
                                }
                              ]
                            }
                          },
                          "diskSizeGiB": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The size of the disk in Gibibytes."
                          },
                          "leasedByLabVmId": {
                            "type": "string",
                            "description": "The resource ID of the VM to which this disk is leased."
                          },
                          "diskBlobName": {
                            "type": "string",
                            "description": "When backed by a blob, the name of the VHD blob without extension."
                          },
                          "diskUri": {
                            "type": "string",
                            "description": "When backed by a blob, the URI of underlying blob."
                          },
                          "storageAccountId": {
                            "type": "string",
                            "description": "When backed by a blob, the storage account where the blob is."
                          },
                          "createdDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The creation date of the disk.",
                            "readOnly": true
                          },
                          "hostCaching": {
                            "type": "string",
                            "description": "The host caching policy of the disk (i.e. None, ReadOnly, ReadWrite)."
                          },
                          "managedDiskId": {
                            "type": "string",
                            "description": "When backed by managed disk, this is the ID of the compute disk resource."
                          },
                          "provisioningState": {
                            "type": "string",
                            "description": "The provisioning status of the resource.",
                            "readOnly": true
                          },
                          "uniqueIdentifier": {
                            "type": "string",
                            "description": "The unique immutable identifier of a resource (Guid).",
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "required": [
                      "properties"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/disks/{name}": {
      "get": {
        "operationId": "Disks_Get",
        "tags": [
          "Disks"
        ],
        "description": "Get disk.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "The name of the user profile.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the Disk",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=diskType)'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A Disk.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the disk.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "diskType": {
                      "description": "The storage type for the disk (i.e. Standard, Premium).",
                      "type": "string",
                      "enum": [
                        "Standard",
                        "Premium",
                        "StandardSSD"
                      ],
                      "x-ms-enum": {
                        "name": "StorageType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Standard",
                            "value": "Standard"
                          },
                          {
                            "name": "Premium",
                            "value": "Premium"
                          },
                          {
                            "name": "StandardSSD",
                            "value": "StandardSSD"
                          }
                        ]
                      }
                    },
                    "diskSizeGiB": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The size of the disk in Gibibytes."
                    },
                    "leasedByLabVmId": {
                      "type": "string",
                      "description": "The resource ID of the VM to which this disk is leased."
                    },
                    "diskBlobName": {
                      "type": "string",
                      "description": "When backed by a blob, the name of the VHD blob without extension."
                    },
                    "diskUri": {
                      "type": "string",
                      "description": "When backed by a blob, the URI of underlying blob."
                    },
                    "storageAccountId": {
                      "type": "string",
                      "description": "When backed by a blob, the storage account where the blob is."
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the disk.",
                      "readOnly": true
                    },
                    "hostCaching": {
                      "type": "string",
                      "description": "The host caching policy of the disk (i.e. None, ReadOnly, ReadWrite)."
                    },
                    "managedDiskId": {
                      "type": "string",
                      "description": "When backed by managed disk, this is the ID of the compute disk resource."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "put": {
        "operationId": "Disks_CreateOrUpdate",
        "tags": [
          "Disks"
        ],
        "description": "Create or replace an existing disk. This operation can take a while to complete.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "The name of the user profile.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the Disk",
            "required": true,
            "type": "string"
          },
          {
            "name": "disk",
            "in": "body",
            "description": "A Disk.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A Disk.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the disk.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "diskType": {
                      "description": "The storage type for the disk (i.e. Standard, Premium).",
                      "type": "string",
                      "enum": [
                        "Standard",
                        "Premium",
                        "StandardSSD"
                      ],
                      "x-ms-enum": {
                        "name": "StorageType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Standard",
                            "value": "Standard"
                          },
                          {
                            "name": "Premium",
                            "value": "Premium"
                          },
                          {
                            "name": "StandardSSD",
                            "value": "StandardSSD"
                          }
                        ]
                      }
                    },
                    "diskSizeGiB": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The size of the disk in Gibibytes."
                    },
                    "leasedByLabVmId": {
                      "type": "string",
                      "description": "The resource ID of the VM to which this disk is leased."
                    },
                    "diskBlobName": {
                      "type": "string",
                      "description": "When backed by a blob, the name of the VHD blob without extension."
                    },
                    "diskUri": {
                      "type": "string",
                      "description": "When backed by a blob, the URI of underlying blob."
                    },
                    "storageAccountId": {
                      "type": "string",
                      "description": "When backed by a blob, the storage account where the blob is."
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the disk.",
                      "readOnly": true
                    },
                    "hostCaching": {
                      "type": "string",
                      "description": "The host caching policy of the disk (i.e. None, ReadOnly, ReadWrite)."
                    },
                    "managedDiskId": {
                      "type": "string",
                      "description": "When backed by managed disk, this is the ID of the compute disk resource."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Disk' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "A Disk.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the disk.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "diskType": {
                      "description": "The storage type for the disk (i.e. Standard, Premium).",
                      "type": "string",
                      "enum": [
                        "Standard",
                        "Premium",
                        "StandardSSD"
                      ],
                      "x-ms-enum": {
                        "name": "StorageType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Standard",
                            "value": "Standard"
                          },
                          {
                            "name": "Premium",
                            "value": "Premium"
                          },
                          {
                            "name": "StandardSSD",
                            "value": "StandardSSD"
                          }
                        ]
                      }
                    },
                    "diskSizeGiB": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The size of the disk in Gibibytes."
                    },
                    "leasedByLabVmId": {
                      "type": "string",
                      "description": "The resource ID of the VM to which this disk is leased."
                    },
                    "diskBlobName": {
                      "type": "string",
                      "description": "When backed by a blob, the name of the VHD blob without extension."
                    },
                    "diskUri": {
                      "type": "string",
                      "description": "When backed by a blob, the URI of underlying blob."
                    },
                    "storageAccountId": {
                      "type": "string",
                      "description": "When backed by a blob, the storage account where the blob is."
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the disk.",
                      "readOnly": true
                    },
                    "hostCaching": {
                      "type": "string",
                      "description": "The host caching policy of the disk (i.e. None, ReadOnly, ReadWrite)."
                    },
                    "managedDiskId": {
                      "type": "string",
                      "description": "When backed by managed disk, this is the ID of the compute disk resource."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          },
          "201": {
            "description": "Resource 'Disk' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "A Disk.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the disk.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "diskType": {
                      "description": "The storage type for the disk (i.e. Standard, Premium).",
                      "type": "string",
                      "enum": [
                        "Standard",
                        "Premium",
                        "StandardSSD"
                      ],
                      "x-ms-enum": {
                        "name": "StorageType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Standard",
                            "value": "Standard"
                          },
                          {
                            "name": "Premium",
                            "value": "Premium"
                          },
                          {
                            "name": "StandardSSD",
                            "value": "StandardSSD"
                          }
                        ]
                      }
                    },
                    "diskSizeGiB": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The size of the disk in Gibibytes."
                    },
                    "leasedByLabVmId": {
                      "type": "string",
                      "description": "The resource ID of the VM to which this disk is leased."
                    },
                    "diskBlobName": {
                      "type": "string",
                      "description": "When backed by a blob, the name of the VHD blob without extension."
                    },
                    "diskUri": {
                      "type": "string",
                      "description": "When backed by a blob, the URI of underlying blob."
                    },
                    "storageAccountId": {
                      "type": "string",
                      "description": "When backed by a blob, the storage account where the blob is."
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the disk.",
                      "readOnly": true
                    },
                    "hostCaching": {
                      "type": "string",
                      "description": "The host caching policy of the disk (i.e. None, ReadOnly, ReadWrite)."
                    },
                    "managedDiskId": {
                      "type": "string",
                      "description": "When backed by managed disk, this is the ID of the compute disk resource."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Disks_Update",
        "tags": [
          "Disks"
        ],
        "description": "Allows modifying tags of disks. All other properties will be ignored.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "The name of the user profile.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the Disk",
            "required": true,
            "type": "string"
          },
          {
            "name": "disk",
            "in": "body",
            "description": "A Disk.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A Disk.",
              "properties": {
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A Disk.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the disk.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "diskType": {
                      "description": "The storage type for the disk (i.e. Standard, Premium).",
                      "type": "string",
                      "enum": [
                        "Standard",
                        "Premium",
                        "StandardSSD"
                      ],
                      "x-ms-enum": {
                        "name": "StorageType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Standard",
                            "value": "Standard"
                          },
                          {
                            "name": "Premium",
                            "value": "Premium"
                          },
                          {
                            "name": "StandardSSD",
                            "value": "StandardSSD"
                          }
                        ]
                      }
                    },
                    "diskSizeGiB": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The size of the disk in Gibibytes."
                    },
                    "leasedByLabVmId": {
                      "type": "string",
                      "description": "The resource ID of the VM to which this disk is leased."
                    },
                    "diskBlobName": {
                      "type": "string",
                      "description": "When backed by a blob, the name of the VHD blob without extension."
                    },
                    "diskUri": {
                      "type": "string",
                      "description": "When backed by a blob, the URI of underlying blob."
                    },
                    "storageAccountId": {
                      "type": "string",
                      "description": "When backed by a blob, the storage account where the blob is."
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the disk.",
                      "readOnly": true
                    },
                    "hostCaching": {
                      "type": "string",
                      "description": "The host caching policy of the disk (i.e. None, ReadOnly, ReadWrite)."
                    },
                    "managedDiskId": {
                      "type": "string",
                      "description": "When backed by managed disk, this is the ID of the compute disk resource."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "delete": {
        "operationId": "Disks_Delete",
        "tags": [
          "Disks"
        ],
        "description": "Delete disk. This operation can take a while to complete.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "The name of the user profile.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the Disk",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/disks/{name}/attach": {
      "post": {
        "operationId": "Disks_Attach",
        "tags": [
          "Disks"
        ],
        "description": "Attach and create the lease of the disk to the virtual machine. This operation can take a while to complete.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "The name of the user profile.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the Disk",
            "required": true,
            "type": "string"
          },
          {
            "name": "attachDiskProperties",
            "in": "body",
            "description": "Properties of the disk to attach.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Properties of the disk to attach.",
              "properties": {
                "leasedByLabVmId": {
                  "type": "string",
                  "description": "The resource ID of the Lab virtual machine to which the disk is attached."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/disks/{name}/detach": {
      "post": {
        "operationId": "Disks_Detach",
        "tags": [
          "Disks"
        ],
        "description": "Detach and break the lease of the disk attached to the virtual machine. This operation can take a while to complete.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "The name of the user profile.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the Disk",
            "required": true,
            "type": "string"
          },
          {
            "name": "detachDiskProperties",
            "in": "body",
            "description": "Properties of the disk to detach.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Properties of the disk to detach.",
              "properties": {
                "leasedByLabVmId": {
                  "type": "string",
                  "description": "The resource ID of the Lab VM to which the disk is attached."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/environments": {
      "get": {
        "operationId": "Environments_List",
        "tags": [
          "Environments"
        ],
        "description": "List environments in a given user profile.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "The name of the user profile.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=deploymentProperties)'",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply to the operation. Example: '$filter=contains(name,'myName')",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: '$top=10'",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "The ordering expression for the results, using OData notation. Example: '$orderby=name desc'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The DtlEnvironment items on this page",
                  "items": {
                    "type": "object",
                    "description": "An environment, which is essentially an ARM template deployment.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The identifier of the resource.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource.",
                        "readOnly": true
                      },
                      "location": {
                        "type": "string",
                        "description": "The location of the resource."
                      },
                      "tags": {
                        "type": "object",
                        "description": "The tags of the resource.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "properties": {
                        "description": "The properties of the environment.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "deploymentProperties": {
                            "description": "The deployment properties of the environment.",
                            "type": "object",
                            "properties": {
                              "armTemplateId": {
                                "type": "string",
                                "description": "The Azure Resource Manager template's identifier."
                              },
                              "parameters": {
                                "type": "array",
                                "description": "The parameters of the Azure Resource Manager template.",
                                "items": {
                                  "type": "object",
                                  "description": "Properties of an Azure Resource Manager template parameter.",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the template parameter."
                                    },
                                    "value": {
                                      "type": "string",
                                      "description": "The value of the template parameter."
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "armTemplateDisplayName": {
                            "type": "string",
                            "description": "The display name of the Azure Resource Manager template that produced the environment."
                          },
                          "resourceGroupId": {
                            "type": "string",
                            "description": "The identifier of the resource group containing the environment's resources.",
                            "readOnly": true
                          },
                          "createdByUser": {
                            "type": "string",
                            "description": "The creator of the environment.",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "type": "string",
                            "description": "The provisioning status of the resource.",
                            "readOnly": true
                          },
                          "uniqueIdentifier": {
                            "type": "string",
                            "description": "The unique immutable identifier of a resource (Guid).",
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "required": [
                      "properties"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/environments/{name}": {
      "get": {
        "operationId": "Environments_Get",
        "tags": [
          "Environments"
        ],
        "description": "Get environment.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "The name of the user profile.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the DtlEnvironment",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=deploymentProperties)'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "An environment, which is essentially an ARM template deployment.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the environment.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "deploymentProperties": {
                      "description": "The deployment properties of the environment.",
                      "type": "object",
                      "properties": {
                        "armTemplateId": {
                          "type": "string",
                          "description": "The Azure Resource Manager template's identifier."
                        },
                        "parameters": {
                          "type": "array",
                          "description": "The parameters of the Azure Resource Manager template.",
                          "items": {
                            "type": "object",
                            "description": "Properties of an Azure Resource Manager template parameter.",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name of the template parameter."
                              },
                              "value": {
                                "type": "string",
                                "description": "The value of the template parameter."
                              }
                            }
                          }
                        }
                      }
                    },
                    "armTemplateDisplayName": {
                      "type": "string",
                      "description": "The display name of the Azure Resource Manager template that produced the environment."
                    },
                    "resourceGroupId": {
                      "type": "string",
                      "description": "The identifier of the resource group containing the environment's resources.",
                      "readOnly": true
                    },
                    "createdByUser": {
                      "type": "string",
                      "description": "The creator of the environment.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "put": {
        "operationId": "Environments_CreateOrUpdate",
        "tags": [
          "Environments"
        ],
        "description": "Create or replace an existing environment. This operation can take a while to complete.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "The name of the user profile.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the DtlEnvironment",
            "required": true,
            "type": "string"
          },
          {
            "name": "dtlEnvironment",
            "in": "body",
            "description": "An environment, which is essentially an ARM template deployment.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "An environment, which is essentially an ARM template deployment.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the environment.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "deploymentProperties": {
                      "description": "The deployment properties of the environment.",
                      "type": "object",
                      "properties": {
                        "armTemplateId": {
                          "type": "string",
                          "description": "The Azure Resource Manager template's identifier."
                        },
                        "parameters": {
                          "type": "array",
                          "description": "The parameters of the Azure Resource Manager template.",
                          "items": {
                            "type": "object",
                            "description": "Properties of an Azure Resource Manager template parameter.",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name of the template parameter."
                              },
                              "value": {
                                "type": "string",
                                "description": "The value of the template parameter."
                              }
                            }
                          }
                        }
                      }
                    },
                    "armTemplateDisplayName": {
                      "type": "string",
                      "description": "The display name of the Azure Resource Manager template that produced the environment."
                    },
                    "resourceGroupId": {
                      "type": "string",
                      "description": "The identifier of the resource group containing the environment's resources.",
                      "readOnly": true
                    },
                    "createdByUser": {
                      "type": "string",
                      "description": "The creator of the environment.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DtlEnvironment' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "An environment, which is essentially an ARM template deployment.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the environment.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "deploymentProperties": {
                      "description": "The deployment properties of the environment.",
                      "type": "object",
                      "properties": {
                        "armTemplateId": {
                          "type": "string",
                          "description": "The Azure Resource Manager template's identifier."
                        },
                        "parameters": {
                          "type": "array",
                          "description": "The parameters of the Azure Resource Manager template.",
                          "items": {
                            "type": "object",
                            "description": "Properties of an Azure Resource Manager template parameter.",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name of the template parameter."
                              },
                              "value": {
                                "type": "string",
                                "description": "The value of the template parameter."
                              }
                            }
                          }
                        }
                      }
                    },
                    "armTemplateDisplayName": {
                      "type": "string",
                      "description": "The display name of the Azure Resource Manager template that produced the environment."
                    },
                    "resourceGroupId": {
                      "type": "string",
                      "description": "The identifier of the resource group containing the environment's resources.",
                      "readOnly": true
                    },
                    "createdByUser": {
                      "type": "string",
                      "description": "The creator of the environment.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          },
          "201": {
            "description": "Resource 'DtlEnvironment' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "An environment, which is essentially an ARM template deployment.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the environment.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "deploymentProperties": {
                      "description": "The deployment properties of the environment.",
                      "type": "object",
                      "properties": {
                        "armTemplateId": {
                          "type": "string",
                          "description": "The Azure Resource Manager template's identifier."
                        },
                        "parameters": {
                          "type": "array",
                          "description": "The parameters of the Azure Resource Manager template.",
                          "items": {
                            "type": "object",
                            "description": "Properties of an Azure Resource Manager template parameter.",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name of the template parameter."
                              },
                              "value": {
                                "type": "string",
                                "description": "The value of the template parameter."
                              }
                            }
                          }
                        }
                      }
                    },
                    "armTemplateDisplayName": {
                      "type": "string",
                      "description": "The display name of the Azure Resource Manager template that produced the environment."
                    },
                    "resourceGroupId": {
                      "type": "string",
                      "description": "The identifier of the resource group containing the environment's resources.",
                      "readOnly": true
                    },
                    "createdByUser": {
                      "type": "string",
                      "description": "The creator of the environment.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Environments_Update",
        "tags": [
          "Environments"
        ],
        "description": "Allows modifying tags of environments. All other properties will be ignored.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "The name of the user profile.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the DtlEnvironment",
            "required": true,
            "type": "string"
          },
          {
            "name": "dtlEnvironment",
            "in": "body",
            "description": "An environment, which is essentially an ARM template deployment.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "An environment, which is essentially an ARM template deployment.",
              "properties": {
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "An environment, which is essentially an ARM template deployment.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the environment.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "deploymentProperties": {
                      "description": "The deployment properties of the environment.",
                      "type": "object",
                      "properties": {
                        "armTemplateId": {
                          "type": "string",
                          "description": "The Azure Resource Manager template's identifier."
                        },
                        "parameters": {
                          "type": "array",
                          "description": "The parameters of the Azure Resource Manager template.",
                          "items": {
                            "type": "object",
                            "description": "Properties of an Azure Resource Manager template parameter.",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name of the template parameter."
                              },
                              "value": {
                                "type": "string",
                                "description": "The value of the template parameter."
                              }
                            }
                          }
                        }
                      }
                    },
                    "armTemplateDisplayName": {
                      "type": "string",
                      "description": "The display name of the Azure Resource Manager template that produced the environment."
                    },
                    "resourceGroupId": {
                      "type": "string",
                      "description": "The identifier of the resource group containing the environment's resources.",
                      "readOnly": true
                    },
                    "createdByUser": {
                      "type": "string",
                      "description": "The creator of the environment.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "delete": {
        "operationId": "Environments_Delete",
        "tags": [
          "Environments"
        ],
        "description": "Delete environment. This operation can take a while to complete.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "The name of the user profile.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the DtlEnvironment",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/secrets": {
      "get": {
        "operationId": "Secrets_List",
        "tags": [
          "Secrets"
        ],
        "description": "List secrets in a given user profile.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "The name of the user profile.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=value)'",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply to the operation. Example: '$filter=contains(name,'myName')",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: '$top=10'",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "The ordering expression for the results, using OData notation. Example: '$orderby=name desc'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Secret items on this page",
                  "items": {
                    "type": "object",
                    "description": "A secret.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The identifier of the resource.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource.",
                        "readOnly": true
                      },
                      "location": {
                        "type": "string",
                        "description": "The location of the resource."
                      },
                      "tags": {
                        "type": "object",
                        "description": "The tags of the resource.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "properties": {
                        "description": "The properties of the resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value of the secret for secret creation."
                          },
                          "provisioningState": {
                            "type": "string",
                            "description": "The provisioning status of the resource.",
                            "readOnly": true
                          },
                          "uniqueIdentifier": {
                            "type": "string",
                            "description": "The unique immutable identifier of a resource (Guid).",
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "required": [
                      "properties"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/secrets/{name}": {
      "get": {
        "operationId": "Secrets_Get",
        "tags": [
          "Secrets"
        ],
        "description": "Get secret.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "The name of the user profile.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the Secret",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=value)'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A secret.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "The value of the secret for secret creation."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "put": {
        "operationId": "Secrets_CreateOrUpdate",
        "tags": [
          "Secrets"
        ],
        "description": "Create or replace an existing secret. This operation can take a while to complete.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "The name of the user profile.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the Secret",
            "required": true,
            "type": "string"
          },
          {
            "name": "secret",
            "in": "body",
            "description": "A secret.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A secret.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "The value of the secret for secret creation."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Secret' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "A secret.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "The value of the secret for secret creation."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          },
          "201": {
            "description": "Resource 'Secret' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "A secret.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "The value of the secret for secret creation."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Secrets_Update",
        "tags": [
          "Secrets"
        ],
        "description": "Allows modifying tags of secrets. All other properties will be ignored.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "The name of the user profile.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the Secret",
            "required": true,
            "type": "string"
          },
          {
            "name": "secret",
            "in": "body",
            "description": "A secret.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A secret.",
              "properties": {
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A secret.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "The value of the secret for secret creation."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "delete": {
        "operationId": "Secrets_Delete",
        "tags": [
          "Secrets"
        ],
        "description": "Delete secret.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "The name of the user profile.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the Secret",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/servicefabrics": {
      "get": {
        "operationId": "ServiceFabrics_List",
        "tags": [
          "ServiceFabrics"
        ],
        "description": "List service fabrics in a given user profile.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "The name of the user profile.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($expand=applicableSchedule)'",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply to the operation. Example: '$filter=contains(name,'myName')",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: '$top=10'",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "The ordering expression for the results, using OData notation. Example: '$orderby=name desc'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The ServiceFabric items on this page",
                  "items": {
                    "type": "object",
                    "description": "A Service Fabric.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The identifier of the resource.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource.",
                        "readOnly": true
                      },
                      "location": {
                        "type": "string",
                        "description": "The location of the resource."
                      },
                      "tags": {
                        "type": "object",
                        "description": "The tags of the resource.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "properties": {
                        "description": "The properties of the resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "externalServiceFabricId": {
                            "type": "string",
                            "description": "The backing service fabric resource's id"
                          },
                          "environmentId": {
                            "type": "string",
                            "description": "The resource id of the environment under which the service fabric resource is present"
                          },
                          "applicableSchedule": {
                            "description": "The applicable schedule for the virtual machine.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The identifier of the resource.",
                                "readOnly": true
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the resource.",
                                "readOnly": true
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of the resource.",
                                "readOnly": true
                              },
                              "location": {
                                "type": "string",
                                "description": "The location of the resource."
                              },
                              "tags": {
                                "type": "object",
                                "description": "The tags of the resource.",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "properties": {
                                "description": "The properties of the resource.",
                                "x-ms-client-flatten": true,
                                "type": "object",
                                "properties": {
                                  "labVmsShutdown": {
                                    "type": "object",
                                    "description": "A schedule.",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "The identifier of the resource.",
                                        "readOnly": true
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "The name of the resource.",
                                        "readOnly": true
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "The type of the resource.",
                                        "readOnly": true
                                      },
                                      "location": {
                                        "type": "string",
                                        "description": "The location of the resource."
                                      },
                                      "tags": {
                                        "type": "object",
                                        "description": "The tags of the resource.",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      },
                                      "properties": {
                                        "description": "The properties of the resource.",
                                        "x-ms-client-flatten": true,
                                        "type": "object",
                                        "properties": {
                                          "status": {
                                            "type": "string",
                                            "description": "The status of the schedule (i.e. Enabled, Disabled)",
                                            "default": "Disabled",
                                            "enum": [
                                              "Enabled",
                                              "Disabled"
                                            ],
                                            "x-ms-enum": {
                                              "name": "EnableStatus",
                                              "modelAsString": true,
                                              "values": [
                                                {
                                                  "name": "Enabled",
                                                  "value": "Enabled"
                                                },
                                                {
                                                  "name": "Disabled",
                                                  "value": "Disabled"
                                                }
                                              ]
                                            }
                                          },
                                          "taskType": {
                                            "type": "string",
                                            "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                                          },
                                          "weeklyRecurrence": {
                                            "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                                            "type": "object",
                                            "properties": {
                                              "weekdays": {
                                                "type": "array",
                                                "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "time": {
                                                "type": "string",
                                                "description": "The time of the day the schedule will occur."
                                              }
                                            }
                                          },
                                          "dailyRecurrence": {
                                            "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                                            "type": "object",
                                            "properties": {
                                              "time": {
                                                "type": "string",
                                                "description": "The time of day the schedule will occur."
                                              }
                                            }
                                          },
                                          "hourlyRecurrence": {
                                            "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                                            "type": "object",
                                            "properties": {
                                              "minute": {
                                                "type": "integer",
                                                "format": "int32",
                                                "description": "Minutes of the hour the schedule will run."
                                              }
                                            }
                                          },
                                          "timeZoneId": {
                                            "type": "string",
                                            "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                                          },
                                          "notificationSettings": {
                                            "description": "Notification settings.",
                                            "type": "object",
                                            "properties": {
                                              "status": {
                                                "type": "string",
                                                "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                                "default": "Disabled",
                                                "enum": [
                                                  "Enabled",
                                                  "Disabled"
                                                ],
                                                "x-ms-enum": {
                                                  "name": "EnableStatus",
                                                  "modelAsString": true,
                                                  "values": [
                                                    {
                                                      "name": "Enabled",
                                                      "value": "Enabled"
                                                    },
                                                    {
                                                      "name": "Disabled",
                                                      "value": "Disabled"
                                                    }
                                                  ]
                                                }
                                              },
                                              "timeInMinutes": {
                                                "type": "integer",
                                                "format": "int32",
                                                "description": "Time in minutes before event at which notification will be sent."
                                              },
                                              "webhookUrl": {
                                                "type": "string",
                                                "description": "The webhook URL to which the notification will be sent."
                                              },
                                              "emailRecipient": {
                                                "type": "string",
                                                "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                              },
                                              "notificationLocale": {
                                                "type": "string",
                                                "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                              }
                                            }
                                          },
                                          "createdDate": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "The creation date of the schedule.",
                                            "readOnly": true
                                          },
                                          "targetResourceId": {
                                            "type": "string",
                                            "description": "The resource ID to which the schedule belongs"
                                          },
                                          "provisioningState": {
                                            "type": "string",
                                            "description": "The provisioning status of the resource.",
                                            "readOnly": true
                                          },
                                          "uniqueIdentifier": {
                                            "type": "string",
                                            "description": "The unique immutable identifier of a resource (Guid).",
                                            "readOnly": true
                                          }
                                        }
                                      }
                                    },
                                    "required": [
                                      "properties"
                                    ]
                                  },
                                  "labVmsStartup": {
                                    "type": "object",
                                    "description": "A schedule.",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "The identifier of the resource.",
                                        "readOnly": true
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "The name of the resource.",
                                        "readOnly": true
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "The type of the resource.",
                                        "readOnly": true
                                      },
                                      "location": {
                                        "type": "string",
                                        "description": "The location of the resource."
                                      },
                                      "tags": {
                                        "type": "object",
                                        "description": "The tags of the resource.",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      },
                                      "properties": {
                                        "description": "The properties of the resource.",
                                        "x-ms-client-flatten": true,
                                        "type": "object",
                                        "properties": {
                                          "status": {
                                            "type": "string",
                                            "description": "The status of the schedule (i.e. Enabled, Disabled)",
                                            "default": "Disabled",
                                            "enum": [
                                              "Enabled",
                                              "Disabled"
                                            ],
                                            "x-ms-enum": {
                                              "name": "EnableStatus",
                                              "modelAsString": true,
                                              "values": [
                                                {
                                                  "name": "Enabled",
                                                  "value": "Enabled"
                                                },
                                                {
                                                  "name": "Disabled",
                                                  "value": "Disabled"
                                                }
                                              ]
                                            }
                                          },
                                          "taskType": {
                                            "type": "string",
                                            "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                                          },
                                          "weeklyRecurrence": {
                                            "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                                            "type": "object",
                                            "properties": {
                                              "weekdays": {
                                                "type": "array",
                                                "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "time": {
                                                "type": "string",
                                                "description": "The time of the day the schedule will occur."
                                              }
                                            }
                                          },
                                          "dailyRecurrence": {
                                            "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                                            "type": "object",
                                            "properties": {
                                              "time": {
                                                "type": "string",
                                                "description": "The time of day the schedule will occur."
                                              }
                                            }
                                          },
                                          "hourlyRecurrence": {
                                            "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                                            "type": "object",
                                            "properties": {
                                              "minute": {
                                                "type": "integer",
                                                "format": "int32",
                                                "description": "Minutes of the hour the schedule will run."
                                              }
                                            }
                                          },
                                          "timeZoneId": {
                                            "type": "string",
                                            "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                                          },
                                          "notificationSettings": {
                                            "description": "Notification settings.",
                                            "type": "object",
                                            "properties": {
                                              "status": {
                                                "type": "string",
                                                "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                                "default": "Disabled",
                                                "enum": [
                                                  "Enabled",
                                                  "Disabled"
                                                ],
                                                "x-ms-enum": {
                                                  "name": "EnableStatus",
                                                  "modelAsString": true,
                                                  "values": [
                                                    {
                                                      "name": "Enabled",
                                                      "value": "Enabled"
                                                    },
                                                    {
                                                      "name": "Disabled",
                                                      "value": "Disabled"
                                                    }
                                                  ]
                                                }
                                              },
                                              "timeInMinutes": {
                                                "type": "integer",
                                                "format": "int32",
                                                "description": "Time in minutes before event at which notification will be sent."
                                              },
                                              "webhookUrl": {
                                                "type": "string",
                                                "description": "The webhook URL to which the notification will be sent."
                                              },
                                              "emailRecipient": {
                                                "type": "string",
                                                "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                              },
                                              "notificationLocale": {
                                                "type": "string",
                                                "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                              }
                                            }
                                          },
                                          "createdDate": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "The creation date of the schedule.",
                                            "readOnly": true
                                          },
                                          "targetResourceId": {
                                            "type": "string",
                                            "description": "The resource ID to which the schedule belongs"
                                          },
                                          "provisioningState": {
                                            "type": "string",
                                            "description": "The provisioning status of the resource.",
                                            "readOnly": true
                                          },
                                          "uniqueIdentifier": {
                                            "type": "string",
                                            "description": "The unique immutable identifier of a resource (Guid).",
                                            "readOnly": true
                                          }
                                        }
                                      }
                                    },
                                    "required": [
                                      "properties"
                                    ]
                                  }
                                }
                              }
                            },
                            "required": [
                              "properties"
                            ]
                          },
                          "provisioningState": {
                            "type": "string",
                            "description": "The provisioning status of the resource.",
                            "readOnly": true
                          },
                          "uniqueIdentifier": {
                            "type": "string",
                            "description": "The unique immutable identifier of a resource (Guid).",
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "required": [
                      "properties"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/servicefabrics/{name}": {
      "get": {
        "operationId": "ServiceFabrics_Get",
        "tags": [
          "ServiceFabrics"
        ],
        "description": "Get service fabric.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "The name of the user profile.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the ServiceFabric",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($expand=applicableSchedule)'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A Service Fabric.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "externalServiceFabricId": {
                      "type": "string",
                      "description": "The backing service fabric resource's id"
                    },
                    "environmentId": {
                      "type": "string",
                      "description": "The resource id of the environment under which the service fabric resource is present"
                    },
                    "applicableSchedule": {
                      "description": "The applicable schedule for the virtual machine.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The identifier of the resource.",
                          "readOnly": true
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the resource.",
                          "readOnly": true
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of the resource.",
                          "readOnly": true
                        },
                        "location": {
                          "type": "string",
                          "description": "The location of the resource."
                        },
                        "tags": {
                          "type": "object",
                          "description": "The tags of the resource.",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "properties": {
                          "description": "The properties of the resource.",
                          "x-ms-client-flatten": true,
                          "type": "object",
                          "properties": {
                            "labVmsShutdown": {
                              "type": "object",
                              "description": "A schedule.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The identifier of the resource.",
                                  "readOnly": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the resource.",
                                  "readOnly": true
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the resource.",
                                  "readOnly": true
                                },
                                "location": {
                                  "type": "string",
                                  "description": "The location of the resource."
                                },
                                "tags": {
                                  "type": "object",
                                  "description": "The tags of the resource.",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "properties": {
                                  "description": "The properties of the resource.",
                                  "x-ms-client-flatten": true,
                                  "type": "object",
                                  "properties": {
                                    "status": {
                                      "type": "string",
                                      "description": "The status of the schedule (i.e. Enabled, Disabled)",
                                      "default": "Disabled",
                                      "enum": [
                                        "Enabled",
                                        "Disabled"
                                      ],
                                      "x-ms-enum": {
                                        "name": "EnableStatus",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Enabled",
                                            "value": "Enabled"
                                          },
                                          {
                                            "name": "Disabled",
                                            "value": "Disabled"
                                          }
                                        ]
                                      }
                                    },
                                    "taskType": {
                                      "type": "string",
                                      "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                                    },
                                    "weeklyRecurrence": {
                                      "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "weekdays": {
                                          "type": "array",
                                          "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "time": {
                                          "type": "string",
                                          "description": "The time of the day the schedule will occur."
                                        }
                                      }
                                    },
                                    "dailyRecurrence": {
                                      "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "time": {
                                          "type": "string",
                                          "description": "The time of day the schedule will occur."
                                        }
                                      }
                                    },
                                    "hourlyRecurrence": {
                                      "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "minute": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Minutes of the hour the schedule will run."
                                        }
                                      }
                                    },
                                    "timeZoneId": {
                                      "type": "string",
                                      "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                                    },
                                    "notificationSettings": {
                                      "description": "Notification settings.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "type": "string",
                                          "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                          "default": "Disabled",
                                          "enum": [
                                            "Enabled",
                                            "Disabled"
                                          ],
                                          "x-ms-enum": {
                                            "name": "EnableStatus",
                                            "modelAsString": true,
                                            "values": [
                                              {
                                                "name": "Enabled",
                                                "value": "Enabled"
                                              },
                                              {
                                                "name": "Disabled",
                                                "value": "Disabled"
                                              }
                                            ]
                                          }
                                        },
                                        "timeInMinutes": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Time in minutes before event at which notification will be sent."
                                        },
                                        "webhookUrl": {
                                          "type": "string",
                                          "description": "The webhook URL to which the notification will be sent."
                                        },
                                        "emailRecipient": {
                                          "type": "string",
                                          "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                        },
                                        "notificationLocale": {
                                          "type": "string",
                                          "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                        }
                                      }
                                    },
                                    "createdDate": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The creation date of the schedule.",
                                      "readOnly": true
                                    },
                                    "targetResourceId": {
                                      "type": "string",
                                      "description": "The resource ID to which the schedule belongs"
                                    },
                                    "provisioningState": {
                                      "type": "string",
                                      "description": "The provisioning status of the resource.",
                                      "readOnly": true
                                    },
                                    "uniqueIdentifier": {
                                      "type": "string",
                                      "description": "The unique immutable identifier of a resource (Guid).",
                                      "readOnly": true
                                    }
                                  }
                                }
                              },
                              "required": [
                                "properties"
                              ]
                            },
                            "labVmsStartup": {
                              "type": "object",
                              "description": "A schedule.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The identifier of the resource.",
                                  "readOnly": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the resource.",
                                  "readOnly": true
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the resource.",
                                  "readOnly": true
                                },
                                "location": {
                                  "type": "string",
                                  "description": "The location of the resource."
                                },
                                "tags": {
                                  "type": "object",
                                  "description": "The tags of the resource.",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "properties": {
                                  "description": "The properties of the resource.",
                                  "x-ms-client-flatten": true,
                                  "type": "object",
                                  "properties": {
                                    "status": {
                                      "type": "string",
                                      "description": "The status of the schedule (i.e. Enabled, Disabled)",
                                      "default": "Disabled",
                                      "enum": [
                                        "Enabled",
                                        "Disabled"
                                      ],
                                      "x-ms-enum": {
                                        "name": "EnableStatus",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Enabled",
                                            "value": "Enabled"
                                          },
                                          {
                                            "name": "Disabled",
                                            "value": "Disabled"
                                          }
                                        ]
                                      }
                                    },
                                    "taskType": {
                                      "type": "string",
                                      "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                                    },
                                    "weeklyRecurrence": {
                                      "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "weekdays": {
                                          "type": "array",
                                          "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "time": {
                                          "type": "string",
                                          "description": "The time of the day the schedule will occur."
                                        }
                                      }
                                    },
                                    "dailyRecurrence": {
                                      "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "time": {
                                          "type": "string",
                                          "description": "The time of day the schedule will occur."
                                        }
                                      }
                                    },
                                    "hourlyRecurrence": {
                                      "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "minute": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Minutes of the hour the schedule will run."
                                        }
                                      }
                                    },
                                    "timeZoneId": {
                                      "type": "string",
                                      "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                                    },
                                    "notificationSettings": {
                                      "description": "Notification settings.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "type": "string",
                                          "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                          "default": "Disabled",
                                          "enum": [
                                            "Enabled",
                                            "Disabled"
                                          ],
                                          "x-ms-enum": {
                                            "name": "EnableStatus",
                                            "modelAsString": true,
                                            "values": [
                                              {
                                                "name": "Enabled",
                                                "value": "Enabled"
                                              },
                                              {
                                                "name": "Disabled",
                                                "value": "Disabled"
                                              }
                                            ]
                                          }
                                        },
                                        "timeInMinutes": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Time in minutes before event at which notification will be sent."
                                        },
                                        "webhookUrl": {
                                          "type": "string",
                                          "description": "The webhook URL to which the notification will be sent."
                                        },
                                        "emailRecipient": {
                                          "type": "string",
                                          "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                        },
                                        "notificationLocale": {
                                          "type": "string",
                                          "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                        }
                                      }
                                    },
                                    "createdDate": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The creation date of the schedule.",
                                      "readOnly": true
                                    },
                                    "targetResourceId": {
                                      "type": "string",
                                      "description": "The resource ID to which the schedule belongs"
                                    },
                                    "provisioningState": {
                                      "type": "string",
                                      "description": "The provisioning status of the resource.",
                                      "readOnly": true
                                    },
                                    "uniqueIdentifier": {
                                      "type": "string",
                                      "description": "The unique immutable identifier of a resource (Guid).",
                                      "readOnly": true
                                    }
                                  }
                                }
                              },
                              "required": [
                                "properties"
                              ]
                            }
                          }
                        }
                      },
                      "required": [
                        "properties"
                      ]
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "put": {
        "operationId": "ServiceFabrics_CreateOrUpdate",
        "tags": [
          "ServiceFabrics"
        ],
        "description": "Create or replace an existing service fabric. This operation can take a while to complete.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "The name of the user profile.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the ServiceFabric",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceFabric",
            "in": "body",
            "description": "A Service Fabric.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A Service Fabric.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "externalServiceFabricId": {
                      "type": "string",
                      "description": "The backing service fabric resource's id"
                    },
                    "environmentId": {
                      "type": "string",
                      "description": "The resource id of the environment under which the service fabric resource is present"
                    },
                    "applicableSchedule": {
                      "description": "The applicable schedule for the virtual machine.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The identifier of the resource.",
                          "readOnly": true
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the resource.",
                          "readOnly": true
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of the resource.",
                          "readOnly": true
                        },
                        "location": {
                          "type": "string",
                          "description": "The location of the resource."
                        },
                        "tags": {
                          "type": "object",
                          "description": "The tags of the resource.",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "properties": {
                          "description": "The properties of the resource.",
                          "x-ms-client-flatten": true,
                          "type": "object",
                          "properties": {
                            "labVmsShutdown": {
                              "type": "object",
                              "description": "A schedule.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The identifier of the resource.",
                                  "readOnly": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the resource.",
                                  "readOnly": true
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the resource.",
                                  "readOnly": true
                                },
                                "location": {
                                  "type": "string",
                                  "description": "The location of the resource."
                                },
                                "tags": {
                                  "type": "object",
                                  "description": "The tags of the resource.",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "properties": {
                                  "description": "The properties of the resource.",
                                  "x-ms-client-flatten": true,
                                  "type": "object",
                                  "properties": {
                                    "status": {
                                      "type": "string",
                                      "description": "The status of the schedule (i.e. Enabled, Disabled)",
                                      "default": "Disabled",
                                      "enum": [
                                        "Enabled",
                                        "Disabled"
                                      ],
                                      "x-ms-enum": {
                                        "name": "EnableStatus",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Enabled",
                                            "value": "Enabled"
                                          },
                                          {
                                            "name": "Disabled",
                                            "value": "Disabled"
                                          }
                                        ]
                                      }
                                    },
                                    "taskType": {
                                      "type": "string",
                                      "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                                    },
                                    "weeklyRecurrence": {
                                      "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "weekdays": {
                                          "type": "array",
                                          "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "time": {
                                          "type": "string",
                                          "description": "The time of the day the schedule will occur."
                                        }
                                      }
                                    },
                                    "dailyRecurrence": {
                                      "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "time": {
                                          "type": "string",
                                          "description": "The time of day the schedule will occur."
                                        }
                                      }
                                    },
                                    "hourlyRecurrence": {
                                      "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "minute": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Minutes of the hour the schedule will run."
                                        }
                                      }
                                    },
                                    "timeZoneId": {
                                      "type": "string",
                                      "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                                    },
                                    "notificationSettings": {
                                      "description": "Notification settings.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "type": "string",
                                          "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                          "default": "Disabled",
                                          "enum": [
                                            "Enabled",
                                            "Disabled"
                                          ],
                                          "x-ms-enum": {
                                            "name": "EnableStatus",
                                            "modelAsString": true,
                                            "values": [
                                              {
                                                "name": "Enabled",
                                                "value": "Enabled"
                                              },
                                              {
                                                "name": "Disabled",
                                                "value": "Disabled"
                                              }
                                            ]
                                          }
                                        },
                                        "timeInMinutes": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Time in minutes before event at which notification will be sent."
                                        },
                                        "webhookUrl": {
                                          "type": "string",
                                          "description": "The webhook URL to which the notification will be sent."
                                        },
                                        "emailRecipient": {
                                          "type": "string",
                                          "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                        },
                                        "notificationLocale": {
                                          "type": "string",
                                          "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                        }
                                      }
                                    },
                                    "createdDate": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The creation date of the schedule.",
                                      "readOnly": true
                                    },
                                    "targetResourceId": {
                                      "type": "string",
                                      "description": "The resource ID to which the schedule belongs"
                                    },
                                    "provisioningState": {
                                      "type": "string",
                                      "description": "The provisioning status of the resource.",
                                      "readOnly": true
                                    },
                                    "uniqueIdentifier": {
                                      "type": "string",
                                      "description": "The unique immutable identifier of a resource (Guid).",
                                      "readOnly": true
                                    }
                                  }
                                }
                              },
                              "required": [
                                "properties"
                              ]
                            },
                            "labVmsStartup": {
                              "type": "object",
                              "description": "A schedule.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The identifier of the resource.",
                                  "readOnly": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the resource.",
                                  "readOnly": true
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the resource.",
                                  "readOnly": true
                                },
                                "location": {
                                  "type": "string",
                                  "description": "The location of the resource."
                                },
                                "tags": {
                                  "type": "object",
                                  "description": "The tags of the resource.",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "properties": {
                                  "description": "The properties of the resource.",
                                  "x-ms-client-flatten": true,
                                  "type": "object",
                                  "properties": {
                                    "status": {
                                      "type": "string",
                                      "description": "The status of the schedule (i.e. Enabled, Disabled)",
                                      "default": "Disabled",
                                      "enum": [
                                        "Enabled",
                                        "Disabled"
                                      ],
                                      "x-ms-enum": {
                                        "name": "EnableStatus",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Enabled",
                                            "value": "Enabled"
                                          },
                                          {
                                            "name": "Disabled",
                                            "value": "Disabled"
                                          }
                                        ]
                                      }
                                    },
                                    "taskType": {
                                      "type": "string",
                                      "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                                    },
                                    "weeklyRecurrence": {
                                      "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "weekdays": {
                                          "type": "array",
                                          "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "time": {
                                          "type": "string",
                                          "description": "The time of the day the schedule will occur."
                                        }
                                      }
                                    },
                                    "dailyRecurrence": {
                                      "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "time": {
                                          "type": "string",
                                          "description": "The time of day the schedule will occur."
                                        }
                                      }
                                    },
                                    "hourlyRecurrence": {
                                      "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "minute": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Minutes of the hour the schedule will run."
                                        }
                                      }
                                    },
                                    "timeZoneId": {
                                      "type": "string",
                                      "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                                    },
                                    "notificationSettings": {
                                      "description": "Notification settings.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "type": "string",
                                          "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                          "default": "Disabled",
                                          "enum": [
                                            "Enabled",
                                            "Disabled"
                                          ],
                                          "x-ms-enum": {
                                            "name": "EnableStatus",
                                            "modelAsString": true,
                                            "values": [
                                              {
                                                "name": "Enabled",
                                                "value": "Enabled"
                                              },
                                              {
                                                "name": "Disabled",
                                                "value": "Disabled"
                                              }
                                            ]
                                          }
                                        },
                                        "timeInMinutes": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Time in minutes before event at which notification will be sent."
                                        },
                                        "webhookUrl": {
                                          "type": "string",
                                          "description": "The webhook URL to which the notification will be sent."
                                        },
                                        "emailRecipient": {
                                          "type": "string",
                                          "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                        },
                                        "notificationLocale": {
                                          "type": "string",
                                          "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                        }
                                      }
                                    },
                                    "createdDate": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The creation date of the schedule.",
                                      "readOnly": true
                                    },
                                    "targetResourceId": {
                                      "type": "string",
                                      "description": "The resource ID to which the schedule belongs"
                                    },
                                    "provisioningState": {
                                      "type": "string",
                                      "description": "The provisioning status of the resource.",
                                      "readOnly": true
                                    },
                                    "uniqueIdentifier": {
                                      "type": "string",
                                      "description": "The unique immutable identifier of a resource (Guid).",
                                      "readOnly": true
                                    }
                                  }
                                }
                              },
                              "required": [
                                "properties"
                              ]
                            }
                          }
                        }
                      },
                      "required": [
                        "properties"
                      ]
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ServiceFabric' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "A Service Fabric.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "externalServiceFabricId": {
                      "type": "string",
                      "description": "The backing service fabric resource's id"
                    },
                    "environmentId": {
                      "type": "string",
                      "description": "The resource id of the environment under which the service fabric resource is present"
                    },
                    "applicableSchedule": {
                      "description": "The applicable schedule for the virtual machine.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The identifier of the resource.",
                          "readOnly": true
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the resource.",
                          "readOnly": true
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of the resource.",
                          "readOnly": true
                        },
                        "location": {
                          "type": "string",
                          "description": "The location of the resource."
                        },
                        "tags": {
                          "type": "object",
                          "description": "The tags of the resource.",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "properties": {
                          "description": "The properties of the resource.",
                          "x-ms-client-flatten": true,
                          "type": "object",
                          "properties": {
                            "labVmsShutdown": {
                              "type": "object",
                              "description": "A schedule.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The identifier of the resource.",
                                  "readOnly": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the resource.",
                                  "readOnly": true
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the resource.",
                                  "readOnly": true
                                },
                                "location": {
                                  "type": "string",
                                  "description": "The location of the resource."
                                },
                                "tags": {
                                  "type": "object",
                                  "description": "The tags of the resource.",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "properties": {
                                  "description": "The properties of the resource.",
                                  "x-ms-client-flatten": true,
                                  "type": "object",
                                  "properties": {
                                    "status": {
                                      "type": "string",
                                      "description": "The status of the schedule (i.e. Enabled, Disabled)",
                                      "default": "Disabled",
                                      "enum": [
                                        "Enabled",
                                        "Disabled"
                                      ],
                                      "x-ms-enum": {
                                        "name": "EnableStatus",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Enabled",
                                            "value": "Enabled"
                                          },
                                          {
                                            "name": "Disabled",
                                            "value": "Disabled"
                                          }
                                        ]
                                      }
                                    },
                                    "taskType": {
                                      "type": "string",
                                      "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                                    },
                                    "weeklyRecurrence": {
                                      "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "weekdays": {
                                          "type": "array",
                                          "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "time": {
                                          "type": "string",
                                          "description": "The time of the day the schedule will occur."
                                        }
                                      }
                                    },
                                    "dailyRecurrence": {
                                      "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "time": {
                                          "type": "string",
                                          "description": "The time of day the schedule will occur."
                                        }
                                      }
                                    },
                                    "hourlyRecurrence": {
                                      "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "minute": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Minutes of the hour the schedule will run."
                                        }
                                      }
                                    },
                                    "timeZoneId": {
                                      "type": "string",
                                      "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                                    },
                                    "notificationSettings": {
                                      "description": "Notification settings.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "type": "string",
                                          "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                          "default": "Disabled",
                                          "enum": [
                                            "Enabled",
                                            "Disabled"
                                          ],
                                          "x-ms-enum": {
                                            "name": "EnableStatus",
                                            "modelAsString": true,
                                            "values": [
                                              {
                                                "name": "Enabled",
                                                "value": "Enabled"
                                              },
                                              {
                                                "name": "Disabled",
                                                "value": "Disabled"
                                              }
                                            ]
                                          }
                                        },
                                        "timeInMinutes": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Time in minutes before event at which notification will be sent."
                                        },
                                        "webhookUrl": {
                                          "type": "string",
                                          "description": "The webhook URL to which the notification will be sent."
                                        },
                                        "emailRecipient": {
                                          "type": "string",
                                          "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                        },
                                        "notificationLocale": {
                                          "type": "string",
                                          "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                        }
                                      }
                                    },
                                    "createdDate": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The creation date of the schedule.",
                                      "readOnly": true
                                    },
                                    "targetResourceId": {
                                      "type": "string",
                                      "description": "The resource ID to which the schedule belongs"
                                    },
                                    "provisioningState": {
                                      "type": "string",
                                      "description": "The provisioning status of the resource.",
                                      "readOnly": true
                                    },
                                    "uniqueIdentifier": {
                                      "type": "string",
                                      "description": "The unique immutable identifier of a resource (Guid).",
                                      "readOnly": true
                                    }
                                  }
                                }
                              },
                              "required": [
                                "properties"
                              ]
                            },
                            "labVmsStartup": {
                              "type": "object",
                              "description": "A schedule.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The identifier of the resource.",
                                  "readOnly": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the resource.",
                                  "readOnly": true
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the resource.",
                                  "readOnly": true
                                },
                                "location": {
                                  "type": "string",
                                  "description": "The location of the resource."
                                },
                                "tags": {
                                  "type": "object",
                                  "description": "The tags of the resource.",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "properties": {
                                  "description": "The properties of the resource.",
                                  "x-ms-client-flatten": true,
                                  "type": "object",
                                  "properties": {
                                    "status": {
                                      "type": "string",
                                      "description": "The status of the schedule (i.e. Enabled, Disabled)",
                                      "default": "Disabled",
                                      "enum": [
                                        "Enabled",
                                        "Disabled"
                                      ],
                                      "x-ms-enum": {
                                        "name": "EnableStatus",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Enabled",
                                            "value": "Enabled"
                                          },
                                          {
                                            "name": "Disabled",
                                            "value": "Disabled"
                                          }
                                        ]
                                      }
                                    },
                                    "taskType": {
                                      "type": "string",
                                      "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                                    },
                                    "weeklyRecurrence": {
                                      "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "weekdays": {
                                          "type": "array",
                                          "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "time": {
                                          "type": "string",
                                          "description": "The time of the day the schedule will occur."
                                        }
                                      }
                                    },
                                    "dailyRecurrence": {
                                      "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "time": {
                                          "type": "string",
                                          "description": "The time of day the schedule will occur."
                                        }
                                      }
                                    },
                                    "hourlyRecurrence": {
                                      "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "minute": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Minutes of the hour the schedule will run."
                                        }
                                      }
                                    },
                                    "timeZoneId": {
                                      "type": "string",
                                      "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                                    },
                                    "notificationSettings": {
                                      "description": "Notification settings.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "type": "string",
                                          "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                          "default": "Disabled",
                                          "enum": [
                                            "Enabled",
                                            "Disabled"
                                          ],
                                          "x-ms-enum": {
                                            "name": "EnableStatus",
                                            "modelAsString": true,
                                            "values": [
                                              {
                                                "name": "Enabled",
                                                "value": "Enabled"
                                              },
                                              {
                                                "name": "Disabled",
                                                "value": "Disabled"
                                              }
                                            ]
                                          }
                                        },
                                        "timeInMinutes": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Time in minutes before event at which notification will be sent."
                                        },
                                        "webhookUrl": {
                                          "type": "string",
                                          "description": "The webhook URL to which the notification will be sent."
                                        },
                                        "emailRecipient": {
                                          "type": "string",
                                          "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                        },
                                        "notificationLocale": {
                                          "type": "string",
                                          "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                        }
                                      }
                                    },
                                    "createdDate": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The creation date of the schedule.",
                                      "readOnly": true
                                    },
                                    "targetResourceId": {
                                      "type": "string",
                                      "description": "The resource ID to which the schedule belongs"
                                    },
                                    "provisioningState": {
                                      "type": "string",
                                      "description": "The provisioning status of the resource.",
                                      "readOnly": true
                                    },
                                    "uniqueIdentifier": {
                                      "type": "string",
                                      "description": "The unique immutable identifier of a resource (Guid).",
                                      "readOnly": true
                                    }
                                  }
                                }
                              },
                              "required": [
                                "properties"
                              ]
                            }
                          }
                        }
                      },
                      "required": [
                        "properties"
                      ]
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          },
          "201": {
            "description": "Resource 'ServiceFabric' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "A Service Fabric.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "externalServiceFabricId": {
                      "type": "string",
                      "description": "The backing service fabric resource's id"
                    },
                    "environmentId": {
                      "type": "string",
                      "description": "The resource id of the environment under which the service fabric resource is present"
                    },
                    "applicableSchedule": {
                      "description": "The applicable schedule for the virtual machine.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The identifier of the resource.",
                          "readOnly": true
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the resource.",
                          "readOnly": true
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of the resource.",
                          "readOnly": true
                        },
                        "location": {
                          "type": "string",
                          "description": "The location of the resource."
                        },
                        "tags": {
                          "type": "object",
                          "description": "The tags of the resource.",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "properties": {
                          "description": "The properties of the resource.",
                          "x-ms-client-flatten": true,
                          "type": "object",
                          "properties": {
                            "labVmsShutdown": {
                              "type": "object",
                              "description": "A schedule.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The identifier of the resource.",
                                  "readOnly": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the resource.",
                                  "readOnly": true
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the resource.",
                                  "readOnly": true
                                },
                                "location": {
                                  "type": "string",
                                  "description": "The location of the resource."
                                },
                                "tags": {
                                  "type": "object",
                                  "description": "The tags of the resource.",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "properties": {
                                  "description": "The properties of the resource.",
                                  "x-ms-client-flatten": true,
                                  "type": "object",
                                  "properties": {
                                    "status": {
                                      "type": "string",
                                      "description": "The status of the schedule (i.e. Enabled, Disabled)",
                                      "default": "Disabled",
                                      "enum": [
                                        "Enabled",
                                        "Disabled"
                                      ],
                                      "x-ms-enum": {
                                        "name": "EnableStatus",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Enabled",
                                            "value": "Enabled"
                                          },
                                          {
                                            "name": "Disabled",
                                            "value": "Disabled"
                                          }
                                        ]
                                      }
                                    },
                                    "taskType": {
                                      "type": "string",
                                      "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                                    },
                                    "weeklyRecurrence": {
                                      "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "weekdays": {
                                          "type": "array",
                                          "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "time": {
                                          "type": "string",
                                          "description": "The time of the day the schedule will occur."
                                        }
                                      }
                                    },
                                    "dailyRecurrence": {
                                      "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "time": {
                                          "type": "string",
                                          "description": "The time of day the schedule will occur."
                                        }
                                      }
                                    },
                                    "hourlyRecurrence": {
                                      "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "minute": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Minutes of the hour the schedule will run."
                                        }
                                      }
                                    },
                                    "timeZoneId": {
                                      "type": "string",
                                      "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                                    },
                                    "notificationSettings": {
                                      "description": "Notification settings.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "type": "string",
                                          "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                          "default": "Disabled",
                                          "enum": [
                                            "Enabled",
                                            "Disabled"
                                          ],
                                          "x-ms-enum": {
                                            "name": "EnableStatus",
                                            "modelAsString": true,
                                            "values": [
                                              {
                                                "name": "Enabled",
                                                "value": "Enabled"
                                              },
                                              {
                                                "name": "Disabled",
                                                "value": "Disabled"
                                              }
                                            ]
                                          }
                                        },
                                        "timeInMinutes": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Time in minutes before event at which notification will be sent."
                                        },
                                        "webhookUrl": {
                                          "type": "string",
                                          "description": "The webhook URL to which the notification will be sent."
                                        },
                                        "emailRecipient": {
                                          "type": "string",
                                          "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                        },
                                        "notificationLocale": {
                                          "type": "string",
                                          "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                        }
                                      }
                                    },
                                    "createdDate": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The creation date of the schedule.",
                                      "readOnly": true
                                    },
                                    "targetResourceId": {
                                      "type": "string",
                                      "description": "The resource ID to which the schedule belongs"
                                    },
                                    "provisioningState": {
                                      "type": "string",
                                      "description": "The provisioning status of the resource.",
                                      "readOnly": true
                                    },
                                    "uniqueIdentifier": {
                                      "type": "string",
                                      "description": "The unique immutable identifier of a resource (Guid).",
                                      "readOnly": true
                                    }
                                  }
                                }
                              },
                              "required": [
                                "properties"
                              ]
                            },
                            "labVmsStartup": {
                              "type": "object",
                              "description": "A schedule.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The identifier of the resource.",
                                  "readOnly": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the resource.",
                                  "readOnly": true
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the resource.",
                                  "readOnly": true
                                },
                                "location": {
                                  "type": "string",
                                  "description": "The location of the resource."
                                },
                                "tags": {
                                  "type": "object",
                                  "description": "The tags of the resource.",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "properties": {
                                  "description": "The properties of the resource.",
                                  "x-ms-client-flatten": true,
                                  "type": "object",
                                  "properties": {
                                    "status": {
                                      "type": "string",
                                      "description": "The status of the schedule (i.e. Enabled, Disabled)",
                                      "default": "Disabled",
                                      "enum": [
                                        "Enabled",
                                        "Disabled"
                                      ],
                                      "x-ms-enum": {
                                        "name": "EnableStatus",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Enabled",
                                            "value": "Enabled"
                                          },
                                          {
                                            "name": "Disabled",
                                            "value": "Disabled"
                                          }
                                        ]
                                      }
                                    },
                                    "taskType": {
                                      "type": "string",
                                      "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                                    },
                                    "weeklyRecurrence": {
                                      "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "weekdays": {
                                          "type": "array",
                                          "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "time": {
                                          "type": "string",
                                          "description": "The time of the day the schedule will occur."
                                        }
                                      }
                                    },
                                    "dailyRecurrence": {
                                      "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "time": {
                                          "type": "string",
                                          "description": "The time of day the schedule will occur."
                                        }
                                      }
                                    },
                                    "hourlyRecurrence": {
                                      "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "minute": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Minutes of the hour the schedule will run."
                                        }
                                      }
                                    },
                                    "timeZoneId": {
                                      "type": "string",
                                      "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                                    },
                                    "notificationSettings": {
                                      "description": "Notification settings.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "type": "string",
                                          "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                          "default": "Disabled",
                                          "enum": [
                                            "Enabled",
                                            "Disabled"
                                          ],
                                          "x-ms-enum": {
                                            "name": "EnableStatus",
                                            "modelAsString": true,
                                            "values": [
                                              {
                                                "name": "Enabled",
                                                "value": "Enabled"
                                              },
                                              {
                                                "name": "Disabled",
                                                "value": "Disabled"
                                              }
                                            ]
                                          }
                                        },
                                        "timeInMinutes": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Time in minutes before event at which notification will be sent."
                                        },
                                        "webhookUrl": {
                                          "type": "string",
                                          "description": "The webhook URL to which the notification will be sent."
                                        },
                                        "emailRecipient": {
                                          "type": "string",
                                          "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                        },
                                        "notificationLocale": {
                                          "type": "string",
                                          "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                        }
                                      }
                                    },
                                    "createdDate": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The creation date of the schedule.",
                                      "readOnly": true
                                    },
                                    "targetResourceId": {
                                      "type": "string",
                                      "description": "The resource ID to which the schedule belongs"
                                    },
                                    "provisioningState": {
                                      "type": "string",
                                      "description": "The provisioning status of the resource.",
                                      "readOnly": true
                                    },
                                    "uniqueIdentifier": {
                                      "type": "string",
                                      "description": "The unique immutable identifier of a resource (Guid).",
                                      "readOnly": true
                                    }
                                  }
                                }
                              },
                              "required": [
                                "properties"
                              ]
                            }
                          }
                        }
                      },
                      "required": [
                        "properties"
                      ]
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "ServiceFabrics_Update",
        "tags": [
          "ServiceFabrics"
        ],
        "description": "Allows modifying tags of service fabrics. All other properties will be ignored.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "The name of the user profile.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the ServiceFabric",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceFabric",
            "in": "body",
            "description": "A Service Fabric.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A Service Fabric.",
              "properties": {
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A Service Fabric.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "externalServiceFabricId": {
                      "type": "string",
                      "description": "The backing service fabric resource's id"
                    },
                    "environmentId": {
                      "type": "string",
                      "description": "The resource id of the environment under which the service fabric resource is present"
                    },
                    "applicableSchedule": {
                      "description": "The applicable schedule for the virtual machine.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The identifier of the resource.",
                          "readOnly": true
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the resource.",
                          "readOnly": true
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of the resource.",
                          "readOnly": true
                        },
                        "location": {
                          "type": "string",
                          "description": "The location of the resource."
                        },
                        "tags": {
                          "type": "object",
                          "description": "The tags of the resource.",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "properties": {
                          "description": "The properties of the resource.",
                          "x-ms-client-flatten": true,
                          "type": "object",
                          "properties": {
                            "labVmsShutdown": {
                              "type": "object",
                              "description": "A schedule.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The identifier of the resource.",
                                  "readOnly": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the resource.",
                                  "readOnly": true
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the resource.",
                                  "readOnly": true
                                },
                                "location": {
                                  "type": "string",
                                  "description": "The location of the resource."
                                },
                                "tags": {
                                  "type": "object",
                                  "description": "The tags of the resource.",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "properties": {
                                  "description": "The properties of the resource.",
                                  "x-ms-client-flatten": true,
                                  "type": "object",
                                  "properties": {
                                    "status": {
                                      "type": "string",
                                      "description": "The status of the schedule (i.e. Enabled, Disabled)",
                                      "default": "Disabled",
                                      "enum": [
                                        "Enabled",
                                        "Disabled"
                                      ],
                                      "x-ms-enum": {
                                        "name": "EnableStatus",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Enabled",
                                            "value": "Enabled"
                                          },
                                          {
                                            "name": "Disabled",
                                            "value": "Disabled"
                                          }
                                        ]
                                      }
                                    },
                                    "taskType": {
                                      "type": "string",
                                      "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                                    },
                                    "weeklyRecurrence": {
                                      "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "weekdays": {
                                          "type": "array",
                                          "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "time": {
                                          "type": "string",
                                          "description": "The time of the day the schedule will occur."
                                        }
                                      }
                                    },
                                    "dailyRecurrence": {
                                      "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "time": {
                                          "type": "string",
                                          "description": "The time of day the schedule will occur."
                                        }
                                      }
                                    },
                                    "hourlyRecurrence": {
                                      "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "minute": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Minutes of the hour the schedule will run."
                                        }
                                      }
                                    },
                                    "timeZoneId": {
                                      "type": "string",
                                      "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                                    },
                                    "notificationSettings": {
                                      "description": "Notification settings.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "type": "string",
                                          "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                          "default": "Disabled",
                                          "enum": [
                                            "Enabled",
                                            "Disabled"
                                          ],
                                          "x-ms-enum": {
                                            "name": "EnableStatus",
                                            "modelAsString": true,
                                            "values": [
                                              {
                                                "name": "Enabled",
                                                "value": "Enabled"
                                              },
                                              {
                                                "name": "Disabled",
                                                "value": "Disabled"
                                              }
                                            ]
                                          }
                                        },
                                        "timeInMinutes": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Time in minutes before event at which notification will be sent."
                                        },
                                        "webhookUrl": {
                                          "type": "string",
                                          "description": "The webhook URL to which the notification will be sent."
                                        },
                                        "emailRecipient": {
                                          "type": "string",
                                          "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                        },
                                        "notificationLocale": {
                                          "type": "string",
                                          "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                        }
                                      }
                                    },
                                    "createdDate": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The creation date of the schedule.",
                                      "readOnly": true
                                    },
                                    "targetResourceId": {
                                      "type": "string",
                                      "description": "The resource ID to which the schedule belongs"
                                    },
                                    "provisioningState": {
                                      "type": "string",
                                      "description": "The provisioning status of the resource.",
                                      "readOnly": true
                                    },
                                    "uniqueIdentifier": {
                                      "type": "string",
                                      "description": "The unique immutable identifier of a resource (Guid).",
                                      "readOnly": true
                                    }
                                  }
                                }
                              },
                              "required": [
                                "properties"
                              ]
                            },
                            "labVmsStartup": {
                              "type": "object",
                              "description": "A schedule.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The identifier of the resource.",
                                  "readOnly": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the resource.",
                                  "readOnly": true
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the resource.",
                                  "readOnly": true
                                },
                                "location": {
                                  "type": "string",
                                  "description": "The location of the resource."
                                },
                                "tags": {
                                  "type": "object",
                                  "description": "The tags of the resource.",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "properties": {
                                  "description": "The properties of the resource.",
                                  "x-ms-client-flatten": true,
                                  "type": "object",
                                  "properties": {
                                    "status": {
                                      "type": "string",
                                      "description": "The status of the schedule (i.e. Enabled, Disabled)",
                                      "default": "Disabled",
                                      "enum": [
                                        "Enabled",
                                        "Disabled"
                                      ],
                                      "x-ms-enum": {
                                        "name": "EnableStatus",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Enabled",
                                            "value": "Enabled"
                                          },
                                          {
                                            "name": "Disabled",
                                            "value": "Disabled"
                                          }
                                        ]
                                      }
                                    },
                                    "taskType": {
                                      "type": "string",
                                      "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                                    },
                                    "weeklyRecurrence": {
                                      "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "weekdays": {
                                          "type": "array",
                                          "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "time": {
                                          "type": "string",
                                          "description": "The time of the day the schedule will occur."
                                        }
                                      }
                                    },
                                    "dailyRecurrence": {
                                      "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "time": {
                                          "type": "string",
                                          "description": "The time of day the schedule will occur."
                                        }
                                      }
                                    },
                                    "hourlyRecurrence": {
                                      "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "minute": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Minutes of the hour the schedule will run."
                                        }
                                      }
                                    },
                                    "timeZoneId": {
                                      "type": "string",
                                      "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                                    },
                                    "notificationSettings": {
                                      "description": "Notification settings.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "type": "string",
                                          "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                          "default": "Disabled",
                                          "enum": [
                                            "Enabled",
                                            "Disabled"
                                          ],
                                          "x-ms-enum": {
                                            "name": "EnableStatus",
                                            "modelAsString": true,
                                            "values": [
                                              {
                                                "name": "Enabled",
                                                "value": "Enabled"
                                              },
                                              {
                                                "name": "Disabled",
                                                "value": "Disabled"
                                              }
                                            ]
                                          }
                                        },
                                        "timeInMinutes": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Time in minutes before event at which notification will be sent."
                                        },
                                        "webhookUrl": {
                                          "type": "string",
                                          "description": "The webhook URL to which the notification will be sent."
                                        },
                                        "emailRecipient": {
                                          "type": "string",
                                          "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                        },
                                        "notificationLocale": {
                                          "type": "string",
                                          "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                        }
                                      }
                                    },
                                    "createdDate": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The creation date of the schedule.",
                                      "readOnly": true
                                    },
                                    "targetResourceId": {
                                      "type": "string",
                                      "description": "The resource ID to which the schedule belongs"
                                    },
                                    "provisioningState": {
                                      "type": "string",
                                      "description": "The provisioning status of the resource.",
                                      "readOnly": true
                                    },
                                    "uniqueIdentifier": {
                                      "type": "string",
                                      "description": "The unique immutable identifier of a resource (Guid).",
                                      "readOnly": true
                                    }
                                  }
                                }
                              },
                              "required": [
                                "properties"
                              ]
                            }
                          }
                        }
                      },
                      "required": [
                        "properties"
                      ]
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "delete": {
        "operationId": "ServiceFabrics_Delete",
        "tags": [
          "ServiceFabrics"
        ],
        "description": "Delete service fabric. This operation can take a while to complete.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "The name of the user profile.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the ServiceFabric",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/servicefabrics/{name}/listApplicableSchedules": {
      "post": {
        "operationId": "ServiceFabrics_ListApplicableSchedules",
        "tags": [
          "ServiceFabrics"
        ],
        "description": "Lists the applicable start/stop schedules, if any.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "The name of the user profile.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the ServiceFabric",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Schedules applicable to a virtual machine. The schedules may have been defined on a VM or on lab level.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "labVmsShutdown": {
                      "type": "object",
                      "description": "A schedule.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The identifier of the resource.",
                          "readOnly": true
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the resource.",
                          "readOnly": true
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of the resource.",
                          "readOnly": true
                        },
                        "location": {
                          "type": "string",
                          "description": "The location of the resource."
                        },
                        "tags": {
                          "type": "object",
                          "description": "The tags of the resource.",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "properties": {
                          "description": "The properties of the resource.",
                          "x-ms-client-flatten": true,
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "description": "The status of the schedule (i.e. Enabled, Disabled)",
                              "default": "Disabled",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "EnableStatus",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            },
                            "taskType": {
                              "type": "string",
                              "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                            },
                            "weeklyRecurrence": {
                              "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                              "type": "object",
                              "properties": {
                                "weekdays": {
                                  "type": "array",
                                  "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "time": {
                                  "type": "string",
                                  "description": "The time of the day the schedule will occur."
                                }
                              }
                            },
                            "dailyRecurrence": {
                              "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                              "type": "object",
                              "properties": {
                                "time": {
                                  "type": "string",
                                  "description": "The time of day the schedule will occur."
                                }
                              }
                            },
                            "hourlyRecurrence": {
                              "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                              "type": "object",
                              "properties": {
                                "minute": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Minutes of the hour the schedule will run."
                                }
                              }
                            },
                            "timeZoneId": {
                              "type": "string",
                              "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                            },
                            "notificationSettings": {
                              "description": "Notification settings.",
                              "type": "object",
                              "properties": {
                                "status": {
                                  "type": "string",
                                  "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                  "default": "Disabled",
                                  "enum": [
                                    "Enabled",
                                    "Disabled"
                                  ],
                                  "x-ms-enum": {
                                    "name": "EnableStatus",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Enabled",
                                        "value": "Enabled"
                                      },
                                      {
                                        "name": "Disabled",
                                        "value": "Disabled"
                                      }
                                    ]
                                  }
                                },
                                "timeInMinutes": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Time in minutes before event at which notification will be sent."
                                },
                                "webhookUrl": {
                                  "type": "string",
                                  "description": "The webhook URL to which the notification will be sent."
                                },
                                "emailRecipient": {
                                  "type": "string",
                                  "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                },
                                "notificationLocale": {
                                  "type": "string",
                                  "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                }
                              }
                            },
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The creation date of the schedule.",
                              "readOnly": true
                            },
                            "targetResourceId": {
                              "type": "string",
                              "description": "The resource ID to which the schedule belongs"
                            },
                            "provisioningState": {
                              "type": "string",
                              "description": "The provisioning status of the resource.",
                              "readOnly": true
                            },
                            "uniqueIdentifier": {
                              "type": "string",
                              "description": "The unique immutable identifier of a resource (Guid).",
                              "readOnly": true
                            }
                          }
                        }
                      },
                      "required": [
                        "properties"
                      ]
                    },
                    "labVmsStartup": {
                      "type": "object",
                      "description": "A schedule.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The identifier of the resource.",
                          "readOnly": true
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the resource.",
                          "readOnly": true
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of the resource.",
                          "readOnly": true
                        },
                        "location": {
                          "type": "string",
                          "description": "The location of the resource."
                        },
                        "tags": {
                          "type": "object",
                          "description": "The tags of the resource.",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "properties": {
                          "description": "The properties of the resource.",
                          "x-ms-client-flatten": true,
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "description": "The status of the schedule (i.e. Enabled, Disabled)",
                              "default": "Disabled",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "EnableStatus",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            },
                            "taskType": {
                              "type": "string",
                              "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                            },
                            "weeklyRecurrence": {
                              "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                              "type": "object",
                              "properties": {
                                "weekdays": {
                                  "type": "array",
                                  "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "time": {
                                  "type": "string",
                                  "description": "The time of the day the schedule will occur."
                                }
                              }
                            },
                            "dailyRecurrence": {
                              "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                              "type": "object",
                              "properties": {
                                "time": {
                                  "type": "string",
                                  "description": "The time of day the schedule will occur."
                                }
                              }
                            },
                            "hourlyRecurrence": {
                              "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                              "type": "object",
                              "properties": {
                                "minute": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Minutes of the hour the schedule will run."
                                }
                              }
                            },
                            "timeZoneId": {
                              "type": "string",
                              "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                            },
                            "notificationSettings": {
                              "description": "Notification settings.",
                              "type": "object",
                              "properties": {
                                "status": {
                                  "type": "string",
                                  "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                  "default": "Disabled",
                                  "enum": [
                                    "Enabled",
                                    "Disabled"
                                  ],
                                  "x-ms-enum": {
                                    "name": "EnableStatus",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Enabled",
                                        "value": "Enabled"
                                      },
                                      {
                                        "name": "Disabled",
                                        "value": "Disabled"
                                      }
                                    ]
                                  }
                                },
                                "timeInMinutes": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Time in minutes before event at which notification will be sent."
                                },
                                "webhookUrl": {
                                  "type": "string",
                                  "description": "The webhook URL to which the notification will be sent."
                                },
                                "emailRecipient": {
                                  "type": "string",
                                  "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                },
                                "notificationLocale": {
                                  "type": "string",
                                  "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                }
                              }
                            },
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The creation date of the schedule.",
                              "readOnly": true
                            },
                            "targetResourceId": {
                              "type": "string",
                              "description": "The resource ID to which the schedule belongs"
                            },
                            "provisioningState": {
                              "type": "string",
                              "description": "The provisioning status of the resource.",
                              "readOnly": true
                            },
                            "uniqueIdentifier": {
                              "type": "string",
                              "description": "The unique immutable identifier of a resource (Guid).",
                              "readOnly": true
                            }
                          }
                        }
                      },
                      "required": [
                        "properties"
                      ]
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/servicefabrics/{serviceFabricName}/schedules": {
      "get": {
        "operationId": "ServiceFabricSchedules_List",
        "tags": [
          "ServiceFabricSchedules"
        ],
        "description": "List schedules in a given service fabric.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "labs",
            "required": true,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "users",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceFabricName",
            "in": "path",
            "description": "servicefabrics",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=status)'",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply to the operation. Example: '$filter=contains(name,'myName')",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: '$top=10'",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "The ordering expression for the results, using OData notation. Example: '$orderby=name desc'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Schedule items on this page",
                  "items": {
                    "type": "object",
                    "description": "A schedule.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The identifier of the resource.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource.",
                        "readOnly": true
                      },
                      "location": {
                        "type": "string",
                        "description": "The location of the resource."
                      },
                      "tags": {
                        "type": "object",
                        "description": "The tags of the resource.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "properties": {
                        "description": "The properties of the resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "description": "The status of the schedule (i.e. Enabled, Disabled)",
                            "default": "Disabled",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "EnableStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled"
                                }
                              ]
                            }
                          },
                          "taskType": {
                            "type": "string",
                            "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                          },
                          "weeklyRecurrence": {
                            "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                            "type": "object",
                            "properties": {
                              "weekdays": {
                                "type": "array",
                                "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "time": {
                                "type": "string",
                                "description": "The time of the day the schedule will occur."
                              }
                            }
                          },
                          "dailyRecurrence": {
                            "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                            "type": "object",
                            "properties": {
                              "time": {
                                "type": "string",
                                "description": "The time of day the schedule will occur."
                              }
                            }
                          },
                          "hourlyRecurrence": {
                            "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                            "type": "object",
                            "properties": {
                              "minute": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Minutes of the hour the schedule will run."
                              }
                            }
                          },
                          "timeZoneId": {
                            "type": "string",
                            "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                          },
                          "notificationSettings": {
                            "description": "Notification settings.",
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string",
                                "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                "default": "Disabled",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "EnableStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled"
                                    }
                                  ]
                                }
                              },
                              "timeInMinutes": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Time in minutes before event at which notification will be sent."
                              },
                              "webhookUrl": {
                                "type": "string",
                                "description": "The webhook URL to which the notification will be sent."
                              },
                              "emailRecipient": {
                                "type": "string",
                                "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                              },
                              "notificationLocale": {
                                "type": "string",
                                "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                              }
                            }
                          },
                          "createdDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The creation date of the schedule.",
                            "readOnly": true
                          },
                          "targetResourceId": {
                            "type": "string",
                            "description": "The resource ID to which the schedule belongs"
                          },
                          "provisioningState": {
                            "type": "string",
                            "description": "The provisioning status of the resource.",
                            "readOnly": true
                          },
                          "uniqueIdentifier": {
                            "type": "string",
                            "description": "The unique immutable identifier of a resource (Guid).",
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "required": [
                      "properties"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/servicefabrics/{serviceFabricName}/schedules/{name}": {
      "get": {
        "operationId": "ServiceFabricSchedules_Get",
        "tags": [
          "ServiceFabricSchedules"
        ],
        "description": "Get schedule.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "labs",
            "required": true,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "users",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceFabricName",
            "in": "path",
            "description": "servicefabrics",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the Schedule",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=status)'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A schedule.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the schedule (i.e. Enabled, Disabled)",
                      "default": "Disabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "EnableStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "taskType": {
                      "type": "string",
                      "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                    },
                    "weeklyRecurrence": {
                      "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                      "type": "object",
                      "properties": {
                        "weekdays": {
                          "type": "array",
                          "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                          "items": {
                            "type": "string"
                          }
                        },
                        "time": {
                          "type": "string",
                          "description": "The time of the day the schedule will occur."
                        }
                      }
                    },
                    "dailyRecurrence": {
                      "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                      "type": "object",
                      "properties": {
                        "time": {
                          "type": "string",
                          "description": "The time of day the schedule will occur."
                        }
                      }
                    },
                    "hourlyRecurrence": {
                      "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                      "type": "object",
                      "properties": {
                        "minute": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Minutes of the hour the schedule will run."
                        }
                      }
                    },
                    "timeZoneId": {
                      "type": "string",
                      "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                    },
                    "notificationSettings": {
                      "description": "Notification settings.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "timeInMinutes": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Time in minutes before event at which notification will be sent."
                        },
                        "webhookUrl": {
                          "type": "string",
                          "description": "The webhook URL to which the notification will be sent."
                        },
                        "emailRecipient": {
                          "type": "string",
                          "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                        },
                        "notificationLocale": {
                          "type": "string",
                          "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                        }
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the schedule.",
                      "readOnly": true
                    },
                    "targetResourceId": {
                      "type": "string",
                      "description": "The resource ID to which the schedule belongs"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "put": {
        "operationId": "ServiceFabricSchedules_CreateOrUpdate",
        "tags": [
          "ServiceFabricSchedules"
        ],
        "description": "Create or replace an existing schedule.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "labs",
            "required": true,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "users",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceFabricName",
            "in": "path",
            "description": "servicefabrics",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the Schedule",
            "required": true,
            "type": "string"
          },
          {
            "name": "schedule",
            "in": "body",
            "description": "A schedule.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A schedule.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the schedule (i.e. Enabled, Disabled)",
                      "default": "Disabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "EnableStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "taskType": {
                      "type": "string",
                      "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                    },
                    "weeklyRecurrence": {
                      "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                      "type": "object",
                      "properties": {
                        "weekdays": {
                          "type": "array",
                          "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                          "items": {
                            "type": "string"
                          }
                        },
                        "time": {
                          "type": "string",
                          "description": "The time of the day the schedule will occur."
                        }
                      }
                    },
                    "dailyRecurrence": {
                      "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                      "type": "object",
                      "properties": {
                        "time": {
                          "type": "string",
                          "description": "The time of day the schedule will occur."
                        }
                      }
                    },
                    "hourlyRecurrence": {
                      "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                      "type": "object",
                      "properties": {
                        "minute": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Minutes of the hour the schedule will run."
                        }
                      }
                    },
                    "timeZoneId": {
                      "type": "string",
                      "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                    },
                    "notificationSettings": {
                      "description": "Notification settings.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "timeInMinutes": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Time in minutes before event at which notification will be sent."
                        },
                        "webhookUrl": {
                          "type": "string",
                          "description": "The webhook URL to which the notification will be sent."
                        },
                        "emailRecipient": {
                          "type": "string",
                          "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                        },
                        "notificationLocale": {
                          "type": "string",
                          "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                        }
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the schedule.",
                      "readOnly": true
                    },
                    "targetResourceId": {
                      "type": "string",
                      "description": "The resource ID to which the schedule belongs"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Schedule' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "A schedule.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the schedule (i.e. Enabled, Disabled)",
                      "default": "Disabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "EnableStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "taskType": {
                      "type": "string",
                      "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                    },
                    "weeklyRecurrence": {
                      "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                      "type": "object",
                      "properties": {
                        "weekdays": {
                          "type": "array",
                          "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                          "items": {
                            "type": "string"
                          }
                        },
                        "time": {
                          "type": "string",
                          "description": "The time of the day the schedule will occur."
                        }
                      }
                    },
                    "dailyRecurrence": {
                      "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                      "type": "object",
                      "properties": {
                        "time": {
                          "type": "string",
                          "description": "The time of day the schedule will occur."
                        }
                      }
                    },
                    "hourlyRecurrence": {
                      "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                      "type": "object",
                      "properties": {
                        "minute": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Minutes of the hour the schedule will run."
                        }
                      }
                    },
                    "timeZoneId": {
                      "type": "string",
                      "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                    },
                    "notificationSettings": {
                      "description": "Notification settings.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "timeInMinutes": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Time in minutes before event at which notification will be sent."
                        },
                        "webhookUrl": {
                          "type": "string",
                          "description": "The webhook URL to which the notification will be sent."
                        },
                        "emailRecipient": {
                          "type": "string",
                          "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                        },
                        "notificationLocale": {
                          "type": "string",
                          "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                        }
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the schedule.",
                      "readOnly": true
                    },
                    "targetResourceId": {
                      "type": "string",
                      "description": "The resource ID to which the schedule belongs"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          },
          "201": {
            "description": "Resource 'Schedule' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "A schedule.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the schedule (i.e. Enabled, Disabled)",
                      "default": "Disabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "EnableStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "taskType": {
                      "type": "string",
                      "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                    },
                    "weeklyRecurrence": {
                      "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                      "type": "object",
                      "properties": {
                        "weekdays": {
                          "type": "array",
                          "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                          "items": {
                            "type": "string"
                          }
                        },
                        "time": {
                          "type": "string",
                          "description": "The time of the day the schedule will occur."
                        }
                      }
                    },
                    "dailyRecurrence": {
                      "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                      "type": "object",
                      "properties": {
                        "time": {
                          "type": "string",
                          "description": "The time of day the schedule will occur."
                        }
                      }
                    },
                    "hourlyRecurrence": {
                      "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                      "type": "object",
                      "properties": {
                        "minute": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Minutes of the hour the schedule will run."
                        }
                      }
                    },
                    "timeZoneId": {
                      "type": "string",
                      "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                    },
                    "notificationSettings": {
                      "description": "Notification settings.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "timeInMinutes": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Time in minutes before event at which notification will be sent."
                        },
                        "webhookUrl": {
                          "type": "string",
                          "description": "The webhook URL to which the notification will be sent."
                        },
                        "emailRecipient": {
                          "type": "string",
                          "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                        },
                        "notificationLocale": {
                          "type": "string",
                          "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                        }
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the schedule.",
                      "readOnly": true
                    },
                    "targetResourceId": {
                      "type": "string",
                      "description": "The resource ID to which the schedule belongs"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "patch": {
        "operationId": "ServiceFabricSchedules_Update",
        "tags": [
          "ServiceFabricSchedules"
        ],
        "description": "Allows modifying tags of schedules. All other properties will be ignored.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "labs",
            "required": true,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "users",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceFabricName",
            "in": "path",
            "description": "servicefabrics",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the Schedule",
            "required": true,
            "type": "string"
          },
          {
            "name": "schedule",
            "in": "body",
            "description": "A schedule.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A schedule.",
              "properties": {
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A schedule.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the schedule (i.e. Enabled, Disabled)",
                      "default": "Disabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "EnableStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "taskType": {
                      "type": "string",
                      "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                    },
                    "weeklyRecurrence": {
                      "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                      "type": "object",
                      "properties": {
                        "weekdays": {
                          "type": "array",
                          "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                          "items": {
                            "type": "string"
                          }
                        },
                        "time": {
                          "type": "string",
                          "description": "The time of the day the schedule will occur."
                        }
                      }
                    },
                    "dailyRecurrence": {
                      "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                      "type": "object",
                      "properties": {
                        "time": {
                          "type": "string",
                          "description": "The time of day the schedule will occur."
                        }
                      }
                    },
                    "hourlyRecurrence": {
                      "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                      "type": "object",
                      "properties": {
                        "minute": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Minutes of the hour the schedule will run."
                        }
                      }
                    },
                    "timeZoneId": {
                      "type": "string",
                      "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                    },
                    "notificationSettings": {
                      "description": "Notification settings.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "timeInMinutes": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Time in minutes before event at which notification will be sent."
                        },
                        "webhookUrl": {
                          "type": "string",
                          "description": "The webhook URL to which the notification will be sent."
                        },
                        "emailRecipient": {
                          "type": "string",
                          "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                        },
                        "notificationLocale": {
                          "type": "string",
                          "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                        }
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the schedule.",
                      "readOnly": true
                    },
                    "targetResourceId": {
                      "type": "string",
                      "description": "The resource ID to which the schedule belongs"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "delete": {
        "operationId": "ServiceFabricSchedules_Delete",
        "tags": [
          "ServiceFabricSchedules"
        ],
        "description": "Delete schedule.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "labs",
            "required": true,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "users",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceFabricName",
            "in": "path",
            "description": "servicefabrics",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the Schedule",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/servicefabrics/{serviceFabricName}/schedules/{name}/execute": {
      "post": {
        "operationId": "ServiceFabricSchedules_Execute",
        "tags": [
          "ServiceFabricSchedules"
        ],
        "description": "Execute a schedule. This operation can take a while to complete.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "labs",
            "required": true,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "users",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceFabricName",
            "in": "path",
            "description": "servicefabrics",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the Schedule",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/servicefabrics/{name}/start": {
      "post": {
        "operationId": "ServiceFabrics_Start",
        "tags": [
          "ServiceFabrics"
        ],
        "description": "Start a service fabric. This operation can take a while to complete.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "The name of the user profile.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the ServiceFabric",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/servicefabrics/{name}/stop": {
      "post": {
        "operationId": "ServiceFabrics_Stop",
        "tags": [
          "ServiceFabrics"
        ],
        "description": "Stop a service fabric This operation can take a while to complete.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "path",
            "description": "The name of the user profile.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the ServiceFabric",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines": {
      "get": {
        "operationId": "VirtualMachines_List",
        "tags": [
          "VirtualMachines"
        ],
        "description": "List virtual machines in a given lab.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($expand=artifacts,computeVm,networkInterface,applicableSchedule)'",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply to the operation. Example: '$filter=contains(name,'myName')",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: '$top=10'",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "The ordering expression for the results, using OData notation. Example: '$orderby=name desc'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The LabVirtualMachine items on this page",
                  "items": {
                    "type": "object",
                    "description": "A virtual machine.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The identifier of the resource.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource.",
                        "readOnly": true
                      },
                      "location": {
                        "type": "string",
                        "description": "The location of the resource."
                      },
                      "tags": {
                        "type": "object",
                        "description": "The tags of the resource.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "properties": {
                        "description": "The properties of the resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "notes": {
                            "type": "string",
                            "description": "The notes of the virtual machine."
                          },
                          "ownerObjectId": {
                            "type": "string",
                            "description": "The object identifier of the owner of the virtual machine.",
                            "default": "dynamicValue"
                          },
                          "ownerUserPrincipalName": {
                            "type": "string",
                            "description": "The user principal name of the virtual machine owner."
                          },
                          "createdByUserId": {
                            "type": "string",
                            "description": "The object identifier of the creator of the virtual machine.",
                            "readOnly": true
                          },
                          "createdByUser": {
                            "type": "string",
                            "description": "The email address of creator of the virtual machine.",
                            "readOnly": true
                          },
                          "createdDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The creation date of the virtual machine."
                          },
                          "computeId": {
                            "type": "string",
                            "description": "The resource identifier (Microsoft.Compute) of the virtual machine.",
                            "readOnly": true
                          },
                          "customImageId": {
                            "type": "string",
                            "description": "The custom image identifier of the virtual machine."
                          },
                          "osType": {
                            "type": "string",
                            "description": "The OS type of the virtual machine.",
                            "readOnly": true
                          },
                          "size": {
                            "type": "string",
                            "description": "The size of the virtual machine."
                          },
                          "userName": {
                            "type": "string",
                            "description": "The user name of the virtual machine."
                          },
                          "password": {
                            "type": "string",
                            "description": "The password of the virtual machine administrator."
                          },
                          "sshKey": {
                            "type": "string",
                            "description": "The SSH key of the virtual machine administrator."
                          },
                          "isAuthenticationWithSshKey": {
                            "type": "boolean",
                            "description": "Indicates whether this virtual machine uses an SSH key for authentication."
                          },
                          "fqdn": {
                            "type": "string",
                            "description": "The fully-qualified domain name of the virtual machine.",
                            "readOnly": true
                          },
                          "labSubnetName": {
                            "type": "string",
                            "description": "The lab subnet name of the virtual machine."
                          },
                          "labVirtualNetworkId": {
                            "type": "string",
                            "description": "The lab virtual network identifier of the virtual machine."
                          },
                          "disallowPublicIpAddress": {
                            "type": "boolean",
                            "description": "Indicates whether the virtual machine is to be created without a public IP address.",
                            "default": false
                          },
                          "artifacts": {
                            "type": "array",
                            "description": "The artifacts to be installed on the virtual machine.",
                            "items": {
                              "type": "object",
                              "description": "Properties of an artifact.",
                              "properties": {
                                "artifactId": {
                                  "type": "string",
                                  "description": "The artifact's identifier."
                                },
                                "artifactTitle": {
                                  "type": "string",
                                  "description": "The artifact's title."
                                },
                                "parameters": {
                                  "type": "array",
                                  "description": "The parameters of the artifact.",
                                  "items": {
                                    "type": "object",
                                    "description": "Properties of an artifact parameter.",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "The name of the artifact parameter."
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "The value of the artifact parameter."
                                      }
                                    }
                                  }
                                },
                                "status": {
                                  "type": "string",
                                  "description": "The status of the artifact."
                                },
                                "deploymentStatusMessage": {
                                  "type": "string",
                                  "description": "The status message from the deployment."
                                },
                                "vmExtensionStatusMessage": {
                                  "type": "string",
                                  "description": "The status message from the virtual machine extension."
                                },
                                "installTime": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The time that the artifact starts to install on the virtual machine."
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "artifactDeploymentStatus": {
                            "description": "The artifact deployment status for the virtual machine.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "deploymentStatus": {
                                "type": "string",
                                "description": "The deployment status of the artifact."
                              },
                              "artifactsApplied": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The total count of the artifacts that were successfully applied."
                              },
                              "totalArtifacts": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The total count of the artifacts that were tentatively applied."
                              }
                            }
                          },
                          "galleryImageReference": {
                            "description": "The Microsoft Azure Marketplace image reference of the virtual machine.",
                            "type": "object",
                            "properties": {
                              "offer": {
                                "type": "string",
                                "description": "The offer of the gallery image."
                              },
                              "publisher": {
                                "type": "string",
                                "description": "The publisher of the gallery image."
                              },
                              "sku": {
                                "type": "string",
                                "description": "The SKU of the gallery image."
                              },
                              "osType": {
                                "type": "string",
                                "description": "The OS type of the gallery image."
                              },
                              "version": {
                                "type": "string",
                                "description": "The version of the gallery image."
                              }
                            }
                          },
                          "planId": {
                            "type": "string",
                            "description": "The id of the plan associated with the virtual machine image"
                          },
                          "computeVm": {
                            "description": "The compute virtual machine properties.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "statuses": {
                                "type": "array",
                                "description": "Gets the statuses of the virtual machine.",
                                "items": {
                                  "type": "object",
                                  "description": "Status information about a virtual machine.",
                                  "properties": {
                                    "code": {
                                      "type": "string",
                                      "description": "Gets the status Code."
                                    },
                                    "displayStatus": {
                                      "type": "string",
                                      "description": "Gets the short localizable label for the status."
                                    },
                                    "message": {
                                      "type": "string",
                                      "description": "Gets the message associated with the status."
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              },
                              "osType": {
                                "type": "string",
                                "description": "Gets the OS type of the virtual machine."
                              },
                              "vmSize": {
                                "type": "string",
                                "description": "Gets the size of the virtual machine."
                              },
                              "networkInterfaceId": {
                                "type": "string",
                                "description": "Gets the network interface ID of the virtual machine."
                              },
                              "osDiskId": {
                                "type": "string",
                                "description": "Gets OS disk blob uri for the virtual machine."
                              },
                              "dataDiskIds": {
                                "type": "array",
                                "description": "Gets data disks blob uri for the virtual machine.",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "dataDisks": {
                                "type": "array",
                                "description": "Gets all data disks attached to the virtual machine.",
                                "items": {
                                  "type": "object",
                                  "description": "A data disks attached to a virtual machine.",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Gets data disk name."
                                    },
                                    "diskUri": {
                                      "type": "string",
                                      "description": "When backed by a blob, the URI of underlying blob."
                                    },
                                    "managedDiskId": {
                                      "type": "string",
                                      "description": "When backed by managed disk, this is the ID of the compute disk resource."
                                    },
                                    "diskSizeGiB": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Gets data disk size in GiB."
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "networkInterface": {
                            "description": "The network interface properties.",
                            "type": "object",
                            "properties": {
                              "virtualNetworkId": {
                                "type": "string",
                                "description": "The resource ID of the virtual network."
                              },
                              "subnetId": {
                                "type": "string",
                                "description": "The resource ID of the sub net."
                              },
                              "publicIpAddressId": {
                                "type": "string",
                                "description": "The resource ID of the public IP address."
                              },
                              "publicIpAddress": {
                                "type": "string",
                                "description": "The public IP address."
                              },
                              "privateIpAddress": {
                                "type": "string",
                                "description": "The private IP address."
                              },
                              "dnsName": {
                                "type": "string",
                                "description": "The DNS name."
                              },
                              "rdpAuthority": {
                                "type": "string",
                                "description": "The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol)."
                              },
                              "sshAuthority": {
                                "type": "string",
                                "description": "The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH."
                              },
                              "sharedPublicIpAddressConfiguration": {
                                "description": "The configuration for sharing a public IP address across multiple virtual machines.",
                                "type": "object",
                                "properties": {
                                  "inboundNatRules": {
                                    "type": "array",
                                    "description": "The incoming NAT rules",
                                    "items": {
                                      "type": "object",
                                      "description": "A rule for NAT - exposing a VM's port (backendPort) on the public IP address using a load balancer.",
                                      "properties": {
                                        "transportProtocol": {
                                          "description": "The transport protocol for the endpoint.",
                                          "type": "string",
                                          "enum": [
                                            "Tcp",
                                            "Udp"
                                          ],
                                          "x-ms-enum": {
                                            "name": "TransportProtocol",
                                            "modelAsString": true,
                                            "values": [
                                              {
                                                "name": "Tcp",
                                                "value": "Tcp"
                                              },
                                              {
                                                "name": "Udp",
                                                "value": "Udp"
                                              }
                                            ]
                                          }
                                        },
                                        "frontendPort": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "The external endpoint port of the inbound connection. Possible values range between 1 and 65535, inclusive. If unspecified, a value will be allocated automatically."
                                        },
                                        "backendPort": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "The port to which the external traffic will be redirected."
                                        }
                                      }
                                    },
                                    "x-ms-identifiers": []
                                  }
                                }
                              }
                            }
                          },
                          "applicableSchedule": {
                            "type": "object",
                            "description": "Schedules applicable to a virtual machine. The schedules may have been defined on a VM or on lab level.",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The identifier of the resource.",
                                "readOnly": true
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the resource.",
                                "readOnly": true
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of the resource.",
                                "readOnly": true
                              },
                              "location": {
                                "type": "string",
                                "description": "The location of the resource."
                              },
                              "tags": {
                                "type": "object",
                                "description": "The tags of the resource.",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "properties": {
                                "description": "The properties of the resource.",
                                "x-ms-client-flatten": true,
                                "type": "object",
                                "properties": {
                                  "labVmsShutdown": {
                                    "type": "object",
                                    "description": "A schedule.",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "The identifier of the resource.",
                                        "readOnly": true
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "The name of the resource.",
                                        "readOnly": true
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "The type of the resource.",
                                        "readOnly": true
                                      },
                                      "location": {
                                        "type": "string",
                                        "description": "The location of the resource."
                                      },
                                      "tags": {
                                        "type": "object",
                                        "description": "The tags of the resource.",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      },
                                      "properties": {
                                        "description": "The properties of the resource.",
                                        "x-ms-client-flatten": true,
                                        "type": "object",
                                        "properties": {
                                          "status": {
                                            "type": "string",
                                            "description": "The status of the schedule (i.e. Enabled, Disabled)",
                                            "default": "Disabled",
                                            "enum": [
                                              "Enabled",
                                              "Disabled"
                                            ],
                                            "x-ms-enum": {
                                              "name": "EnableStatus",
                                              "modelAsString": true,
                                              "values": [
                                                {
                                                  "name": "Enabled",
                                                  "value": "Enabled"
                                                },
                                                {
                                                  "name": "Disabled",
                                                  "value": "Disabled"
                                                }
                                              ]
                                            }
                                          },
                                          "taskType": {
                                            "type": "string",
                                            "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                                          },
                                          "weeklyRecurrence": {
                                            "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                                            "type": "object",
                                            "properties": {
                                              "weekdays": {
                                                "type": "array",
                                                "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "time": {
                                                "type": "string",
                                                "description": "The time of the day the schedule will occur."
                                              }
                                            }
                                          },
                                          "dailyRecurrence": {
                                            "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                                            "type": "object",
                                            "properties": {
                                              "time": {
                                                "type": "string",
                                                "description": "The time of day the schedule will occur."
                                              }
                                            }
                                          },
                                          "hourlyRecurrence": {
                                            "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                                            "type": "object",
                                            "properties": {
                                              "minute": {
                                                "type": "integer",
                                                "format": "int32",
                                                "description": "Minutes of the hour the schedule will run."
                                              }
                                            }
                                          },
                                          "timeZoneId": {
                                            "type": "string",
                                            "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                                          },
                                          "notificationSettings": {
                                            "description": "Notification settings.",
                                            "type": "object",
                                            "properties": {
                                              "status": {
                                                "type": "string",
                                                "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                                "default": "Disabled",
                                                "enum": [
                                                  "Enabled",
                                                  "Disabled"
                                                ],
                                                "x-ms-enum": {
                                                  "name": "EnableStatus",
                                                  "modelAsString": true,
                                                  "values": [
                                                    {
                                                      "name": "Enabled",
                                                      "value": "Enabled"
                                                    },
                                                    {
                                                      "name": "Disabled",
                                                      "value": "Disabled"
                                                    }
                                                  ]
                                                }
                                              },
                                              "timeInMinutes": {
                                                "type": "integer",
                                                "format": "int32",
                                                "description": "Time in minutes before event at which notification will be sent."
                                              },
                                              "webhookUrl": {
                                                "type": "string",
                                                "description": "The webhook URL to which the notification will be sent."
                                              },
                                              "emailRecipient": {
                                                "type": "string",
                                                "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                              },
                                              "notificationLocale": {
                                                "type": "string",
                                                "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                              }
                                            }
                                          },
                                          "createdDate": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "The creation date of the schedule.",
                                            "readOnly": true
                                          },
                                          "targetResourceId": {
                                            "type": "string",
                                            "description": "The resource ID to which the schedule belongs"
                                          },
                                          "provisioningState": {
                                            "type": "string",
                                            "description": "The provisioning status of the resource.",
                                            "readOnly": true
                                          },
                                          "uniqueIdentifier": {
                                            "type": "string",
                                            "description": "The unique immutable identifier of a resource (Guid).",
                                            "readOnly": true
                                          }
                                        }
                                      }
                                    },
                                    "required": [
                                      "properties"
                                    ]
                                  },
                                  "labVmsStartup": {
                                    "type": "object",
                                    "description": "A schedule.",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "The identifier of the resource.",
                                        "readOnly": true
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "The name of the resource.",
                                        "readOnly": true
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "The type of the resource.",
                                        "readOnly": true
                                      },
                                      "location": {
                                        "type": "string",
                                        "description": "The location of the resource."
                                      },
                                      "tags": {
                                        "type": "object",
                                        "description": "The tags of the resource.",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      },
                                      "properties": {
                                        "description": "The properties of the resource.",
                                        "x-ms-client-flatten": true,
                                        "type": "object",
                                        "properties": {
                                          "status": {
                                            "type": "string",
                                            "description": "The status of the schedule (i.e. Enabled, Disabled)",
                                            "default": "Disabled",
                                            "enum": [
                                              "Enabled",
                                              "Disabled"
                                            ],
                                            "x-ms-enum": {
                                              "name": "EnableStatus",
                                              "modelAsString": true,
                                              "values": [
                                                {
                                                  "name": "Enabled",
                                                  "value": "Enabled"
                                                },
                                                {
                                                  "name": "Disabled",
                                                  "value": "Disabled"
                                                }
                                              ]
                                            }
                                          },
                                          "taskType": {
                                            "type": "string",
                                            "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                                          },
                                          "weeklyRecurrence": {
                                            "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                                            "type": "object",
                                            "properties": {
                                              "weekdays": {
                                                "type": "array",
                                                "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "time": {
                                                "type": "string",
                                                "description": "The time of the day the schedule will occur."
                                              }
                                            }
                                          },
                                          "dailyRecurrence": {
                                            "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                                            "type": "object",
                                            "properties": {
                                              "time": {
                                                "type": "string",
                                                "description": "The time of day the schedule will occur."
                                              }
                                            }
                                          },
                                          "hourlyRecurrence": {
                                            "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                                            "type": "object",
                                            "properties": {
                                              "minute": {
                                                "type": "integer",
                                                "format": "int32",
                                                "description": "Minutes of the hour the schedule will run."
                                              }
                                            }
                                          },
                                          "timeZoneId": {
                                            "type": "string",
                                            "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                                          },
                                          "notificationSettings": {
                                            "description": "Notification settings.",
                                            "type": "object",
                                            "properties": {
                                              "status": {
                                                "type": "string",
                                                "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                                "default": "Disabled",
                                                "enum": [
                                                  "Enabled",
                                                  "Disabled"
                                                ],
                                                "x-ms-enum": {
                                                  "name": "EnableStatus",
                                                  "modelAsString": true,
                                                  "values": [
                                                    {
                                                      "name": "Enabled",
                                                      "value": "Enabled"
                                                    },
                                                    {
                                                      "name": "Disabled",
                                                      "value": "Disabled"
                                                    }
                                                  ]
                                                }
                                              },
                                              "timeInMinutes": {
                                                "type": "integer",
                                                "format": "int32",
                                                "description": "Time in minutes before event at which notification will be sent."
                                              },
                                              "webhookUrl": {
                                                "type": "string",
                                                "description": "The webhook URL to which the notification will be sent."
                                              },
                                              "emailRecipient": {
                                                "type": "string",
                                                "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                              },
                                              "notificationLocale": {
                                                "type": "string",
                                                "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                              }
                                            }
                                          },
                                          "createdDate": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "The creation date of the schedule.",
                                            "readOnly": true
                                          },
                                          "targetResourceId": {
                                            "type": "string",
                                            "description": "The resource ID to which the schedule belongs"
                                          },
                                          "provisioningState": {
                                            "type": "string",
                                            "description": "The provisioning status of the resource.",
                                            "readOnly": true
                                          },
                                          "uniqueIdentifier": {
                                            "type": "string",
                                            "description": "The unique immutable identifier of a resource (Guid).",
                                            "readOnly": true
                                          }
                                        }
                                      }
                                    },
                                    "required": [
                                      "properties"
                                    ]
                                  }
                                }
                              }
                            },
                            "required": [
                              "properties"
                            ],
                            "readOnly": true
                          },
                          "expirationDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The expiration date for VM."
                          },
                          "allowClaim": {
                            "type": "boolean",
                            "description": "Indicates whether another user can take ownership of the virtual machine",
                            "default": false
                          },
                          "storageType": {
                            "type": "string",
                            "description": "Storage type to use for virtual machine (i.e. Standard, Premium).",
                            "default": "labStorageType"
                          },
                          "virtualMachineCreationSource": {
                            "description": "Tells source of creation of lab virtual machine. Output property only.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "FromCustomImage",
                              "FromGalleryImage",
                              "FromSharedGalleryImage"
                            ],
                            "x-ms-enum": {
                              "name": "VirtualMachineCreationSource",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "FromCustomImage",
                                  "value": "FromCustomImage"
                                },
                                {
                                  "name": "FromGalleryImage",
                                  "value": "FromGalleryImage"
                                },
                                {
                                  "name": "FromSharedGalleryImage",
                                  "value": "FromSharedGalleryImage"
                                }
                              ]
                            }
                          },
                          "environmentId": {
                            "type": "string",
                            "description": "The resource ID of the environment that contains this virtual machine, if any."
                          },
                          "dataDiskParameters": {
                            "type": "array",
                            "description": "New or existing data disks to attach to the virtual machine after creation",
                            "items": {
                              "type": "object",
                              "description": "Request body for adding a new or existing data disk to a virtual machine.",
                              "properties": {
                                "attachNewDataDiskOptions": {
                                  "description": "Specifies options to attach a new disk to the virtual machine.",
                                  "type": "object",
                                  "properties": {
                                    "diskSizeGiB": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Size of the disk to be attached in Gibibytes."
                                    },
                                    "diskName": {
                                      "type": "string",
                                      "description": "The name of the disk to be attached."
                                    },
                                    "diskType": {
                                      "description": "The storage type for the disk (i.e. Standard, Premium).",
                                      "type": "string",
                                      "enum": [
                                        "Standard",
                                        "Premium",
                                        "StandardSSD"
                                      ],
                                      "x-ms-enum": {
                                        "name": "StorageType",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Standard",
                                            "value": "Standard"
                                          },
                                          {
                                            "name": "Premium",
                                            "value": "Premium"
                                          },
                                          {
                                            "name": "StandardSSD",
                                            "value": "StandardSSD"
                                          }
                                        ]
                                      }
                                    }
                                  }
                                },
                                "existingLabDiskId": {
                                  "type": "string",
                                  "description": "Specifies the existing lab disk id to attach to virtual machine."
                                },
                                "hostCaching": {
                                  "description": "Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).",
                                  "type": "string",
                                  "enum": [
                                    "None",
                                    "ReadOnly",
                                    "ReadWrite"
                                  ],
                                  "x-ms-enum": {
                                    "name": "HostCachingOptions",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "None",
                                        "value": "None"
                                      },
                                      {
                                        "name": "ReadOnly",
                                        "value": "ReadOnly"
                                      },
                                      {
                                        "name": "ReadWrite",
                                        "value": "ReadWrite"
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "scheduleParameters": {
                            "type": "array",
                            "description": "Virtual Machine schedules to be created",
                            "items": {
                              "type": "object",
                              "description": "Properties for creating a schedule.",
                              "properties": {
                                "properties": {
                                  "description": "The properties of the schedule.",
                                  "x-ms-client-flatten": true,
                                  "type": "object",
                                  "properties": {
                                    "status": {
                                      "type": "string",
                                      "description": "The status of the schedule (i.e. Enabled, Disabled)",
                                      "default": "Disabled",
                                      "enum": [
                                        "Enabled",
                                        "Disabled"
                                      ],
                                      "x-ms-enum": {
                                        "name": "EnableStatus",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Enabled",
                                            "value": "Enabled"
                                          },
                                          {
                                            "name": "Disabled",
                                            "value": "Disabled"
                                          }
                                        ]
                                      }
                                    },
                                    "taskType": {
                                      "type": "string",
                                      "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                                    },
                                    "weeklyRecurrence": {
                                      "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "weekdays": {
                                          "type": "array",
                                          "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "time": {
                                          "type": "string",
                                          "description": "The time of the day the schedule will occur."
                                        }
                                      }
                                    },
                                    "dailyRecurrence": {
                                      "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "time": {
                                          "type": "string",
                                          "description": "The time of day the schedule will occur."
                                        }
                                      }
                                    },
                                    "hourlyRecurrence": {
                                      "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "minute": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Minutes of the hour the schedule will run."
                                        }
                                      }
                                    },
                                    "timeZoneId": {
                                      "type": "string",
                                      "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                                    },
                                    "notificationSettings": {
                                      "description": "Notification settings.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "type": "string",
                                          "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                          "default": "Disabled",
                                          "enum": [
                                            "Enabled",
                                            "Disabled"
                                          ],
                                          "x-ms-enum": {
                                            "name": "EnableStatus",
                                            "modelAsString": true,
                                            "values": [
                                              {
                                                "name": "Enabled",
                                                "value": "Enabled"
                                              },
                                              {
                                                "name": "Disabled",
                                                "value": "Disabled"
                                              }
                                            ]
                                          }
                                        },
                                        "timeInMinutes": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Time in minutes before event at which notification will be sent."
                                        },
                                        "webhookUrl": {
                                          "type": "string",
                                          "description": "The webhook URL to which the notification will be sent."
                                        },
                                        "emailRecipient": {
                                          "type": "string",
                                          "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                        },
                                        "notificationLocale": {
                                          "type": "string",
                                          "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                        }
                                      }
                                    },
                                    "targetResourceId": {
                                      "type": "string",
                                      "description": "The resource ID to which the schedule belongs"
                                    }
                                  }
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the virtual machine or environment"
                                },
                                "location": {
                                  "type": "string",
                                  "description": "The location of the new virtual machine or environment",
                                  "readOnly": true
                                },
                                "tags": {
                                  "type": "object",
                                  "description": "The tags of the resource.",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "lastKnownPowerState": {
                            "type": "string",
                            "description": "Last known compute power state captured in DTL",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "type": "string",
                            "description": "The provisioning status of the resource.",
                            "readOnly": true
                          },
                          "uniqueIdentifier": {
                            "type": "string",
                            "description": "The unique immutable identifier of a resource (Guid).",
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "required": [
                      "properties"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}": {
      "get": {
        "operationId": "VirtualMachines_Get",
        "tags": [
          "VirtualMachines"
        ],
        "description": "Get virtual machine.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the LabVirtualMachine",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($expand=artifacts,computeVm,networkInterface,applicableSchedule)'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A virtual machine.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "notes": {
                      "type": "string",
                      "description": "The notes of the virtual machine."
                    },
                    "ownerObjectId": {
                      "type": "string",
                      "description": "The object identifier of the owner of the virtual machine.",
                      "default": "dynamicValue"
                    },
                    "ownerUserPrincipalName": {
                      "type": "string",
                      "description": "The user principal name of the virtual machine owner."
                    },
                    "createdByUserId": {
                      "type": "string",
                      "description": "The object identifier of the creator of the virtual machine.",
                      "readOnly": true
                    },
                    "createdByUser": {
                      "type": "string",
                      "description": "The email address of creator of the virtual machine.",
                      "readOnly": true
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the virtual machine."
                    },
                    "computeId": {
                      "type": "string",
                      "description": "The resource identifier (Microsoft.Compute) of the virtual machine.",
                      "readOnly": true
                    },
                    "customImageId": {
                      "type": "string",
                      "description": "The custom image identifier of the virtual machine."
                    },
                    "osType": {
                      "type": "string",
                      "description": "The OS type of the virtual machine.",
                      "readOnly": true
                    },
                    "size": {
                      "type": "string",
                      "description": "The size of the virtual machine."
                    },
                    "userName": {
                      "type": "string",
                      "description": "The user name of the virtual machine."
                    },
                    "password": {
                      "type": "string",
                      "description": "The password of the virtual machine administrator."
                    },
                    "sshKey": {
                      "type": "string",
                      "description": "The SSH key of the virtual machine administrator."
                    },
                    "isAuthenticationWithSshKey": {
                      "type": "boolean",
                      "description": "Indicates whether this virtual machine uses an SSH key for authentication."
                    },
                    "fqdn": {
                      "type": "string",
                      "description": "The fully-qualified domain name of the virtual machine.",
                      "readOnly": true
                    },
                    "labSubnetName": {
                      "type": "string",
                      "description": "The lab subnet name of the virtual machine."
                    },
                    "labVirtualNetworkId": {
                      "type": "string",
                      "description": "The lab virtual network identifier of the virtual machine."
                    },
                    "disallowPublicIpAddress": {
                      "type": "boolean",
                      "description": "Indicates whether the virtual machine is to be created without a public IP address.",
                      "default": false
                    },
                    "artifacts": {
                      "type": "array",
                      "description": "The artifacts to be installed on the virtual machine.",
                      "items": {
                        "type": "object",
                        "description": "Properties of an artifact.",
                        "properties": {
                          "artifactId": {
                            "type": "string",
                            "description": "The artifact's identifier."
                          },
                          "artifactTitle": {
                            "type": "string",
                            "description": "The artifact's title."
                          },
                          "parameters": {
                            "type": "array",
                            "description": "The parameters of the artifact.",
                            "items": {
                              "type": "object",
                              "description": "Properties of an artifact parameter.",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name of the artifact parameter."
                                },
                                "value": {
                                  "type": "string",
                                  "description": "The value of the artifact parameter."
                                }
                              }
                            }
                          },
                          "status": {
                            "type": "string",
                            "description": "The status of the artifact."
                          },
                          "deploymentStatusMessage": {
                            "type": "string",
                            "description": "The status message from the deployment."
                          },
                          "vmExtensionStatusMessage": {
                            "type": "string",
                            "description": "The status message from the virtual machine extension."
                          },
                          "installTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time that the artifact starts to install on the virtual machine."
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "artifactDeploymentStatus": {
                      "description": "The artifact deployment status for the virtual machine.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "deploymentStatus": {
                          "type": "string",
                          "description": "The deployment status of the artifact."
                        },
                        "artifactsApplied": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The total count of the artifacts that were successfully applied."
                        },
                        "totalArtifacts": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The total count of the artifacts that were tentatively applied."
                        }
                      }
                    },
                    "galleryImageReference": {
                      "description": "The Microsoft Azure Marketplace image reference of the virtual machine.",
                      "type": "object",
                      "properties": {
                        "offer": {
                          "type": "string",
                          "description": "The offer of the gallery image."
                        },
                        "publisher": {
                          "type": "string",
                          "description": "The publisher of the gallery image."
                        },
                        "sku": {
                          "type": "string",
                          "description": "The SKU of the gallery image."
                        },
                        "osType": {
                          "type": "string",
                          "description": "The OS type of the gallery image."
                        },
                        "version": {
                          "type": "string",
                          "description": "The version of the gallery image."
                        }
                      }
                    },
                    "planId": {
                      "type": "string",
                      "description": "The id of the plan associated with the virtual machine image"
                    },
                    "computeVm": {
                      "description": "The compute virtual machine properties.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "statuses": {
                          "type": "array",
                          "description": "Gets the statuses of the virtual machine.",
                          "items": {
                            "type": "object",
                            "description": "Status information about a virtual machine.",
                            "properties": {
                              "code": {
                                "type": "string",
                                "description": "Gets the status Code."
                              },
                              "displayStatus": {
                                "type": "string",
                                "description": "Gets the short localizable label for the status."
                              },
                              "message": {
                                "type": "string",
                                "description": "Gets the message associated with the status."
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        },
                        "osType": {
                          "type": "string",
                          "description": "Gets the OS type of the virtual machine."
                        },
                        "vmSize": {
                          "type": "string",
                          "description": "Gets the size of the virtual machine."
                        },
                        "networkInterfaceId": {
                          "type": "string",
                          "description": "Gets the network interface ID of the virtual machine."
                        },
                        "osDiskId": {
                          "type": "string",
                          "description": "Gets OS disk blob uri for the virtual machine."
                        },
                        "dataDiskIds": {
                          "type": "array",
                          "description": "Gets data disks blob uri for the virtual machine.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "dataDisks": {
                          "type": "array",
                          "description": "Gets all data disks attached to the virtual machine.",
                          "items": {
                            "type": "object",
                            "description": "A data disks attached to a virtual machine.",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Gets data disk name."
                              },
                              "diskUri": {
                                "type": "string",
                                "description": "When backed by a blob, the URI of underlying blob."
                              },
                              "managedDiskId": {
                                "type": "string",
                                "description": "When backed by managed disk, this is the ID of the compute disk resource."
                              },
                              "diskSizeGiB": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Gets data disk size in GiB."
                              }
                            }
                          }
                        }
                      }
                    },
                    "networkInterface": {
                      "description": "The network interface properties.",
                      "type": "object",
                      "properties": {
                        "virtualNetworkId": {
                          "type": "string",
                          "description": "The resource ID of the virtual network."
                        },
                        "subnetId": {
                          "type": "string",
                          "description": "The resource ID of the sub net."
                        },
                        "publicIpAddressId": {
                          "type": "string",
                          "description": "The resource ID of the public IP address."
                        },
                        "publicIpAddress": {
                          "type": "string",
                          "description": "The public IP address."
                        },
                        "privateIpAddress": {
                          "type": "string",
                          "description": "The private IP address."
                        },
                        "dnsName": {
                          "type": "string",
                          "description": "The DNS name."
                        },
                        "rdpAuthority": {
                          "type": "string",
                          "description": "The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol)."
                        },
                        "sshAuthority": {
                          "type": "string",
                          "description": "The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH."
                        },
                        "sharedPublicIpAddressConfiguration": {
                          "description": "The configuration for sharing a public IP address across multiple virtual machines.",
                          "type": "object",
                          "properties": {
                            "inboundNatRules": {
                              "type": "array",
                              "description": "The incoming NAT rules",
                              "items": {
                                "type": "object",
                                "description": "A rule for NAT - exposing a VM's port (backendPort) on the public IP address using a load balancer.",
                                "properties": {
                                  "transportProtocol": {
                                    "description": "The transport protocol for the endpoint.",
                                    "type": "string",
                                    "enum": [
                                      "Tcp",
                                      "Udp"
                                    ],
                                    "x-ms-enum": {
                                      "name": "TransportProtocol",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Tcp",
                                          "value": "Tcp"
                                        },
                                        {
                                          "name": "Udp",
                                          "value": "Udp"
                                        }
                                      ]
                                    }
                                  },
                                  "frontendPort": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The external endpoint port of the inbound connection. Possible values range between 1 and 65535, inclusive. If unspecified, a value will be allocated automatically."
                                  },
                                  "backendPort": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The port to which the external traffic will be redirected."
                                  }
                                }
                              },
                              "x-ms-identifiers": []
                            }
                          }
                        }
                      }
                    },
                    "applicableSchedule": {
                      "type": "object",
                      "description": "Schedules applicable to a virtual machine. The schedules may have been defined on a VM or on lab level.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The identifier of the resource.",
                          "readOnly": true
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the resource.",
                          "readOnly": true
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of the resource.",
                          "readOnly": true
                        },
                        "location": {
                          "type": "string",
                          "description": "The location of the resource."
                        },
                        "tags": {
                          "type": "object",
                          "description": "The tags of the resource.",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "properties": {
                          "description": "The properties of the resource.",
                          "x-ms-client-flatten": true,
                          "type": "object",
                          "properties": {
                            "labVmsShutdown": {
                              "type": "object",
                              "description": "A schedule.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The identifier of the resource.",
                                  "readOnly": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the resource.",
                                  "readOnly": true
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the resource.",
                                  "readOnly": true
                                },
                                "location": {
                                  "type": "string",
                                  "description": "The location of the resource."
                                },
                                "tags": {
                                  "type": "object",
                                  "description": "The tags of the resource.",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "properties": {
                                  "description": "The properties of the resource.",
                                  "x-ms-client-flatten": true,
                                  "type": "object",
                                  "properties": {
                                    "status": {
                                      "type": "string",
                                      "description": "The status of the schedule (i.e. Enabled, Disabled)",
                                      "default": "Disabled",
                                      "enum": [
                                        "Enabled",
                                        "Disabled"
                                      ],
                                      "x-ms-enum": {
                                        "name": "EnableStatus",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Enabled",
                                            "value": "Enabled"
                                          },
                                          {
                                            "name": "Disabled",
                                            "value": "Disabled"
                                          }
                                        ]
                                      }
                                    },
                                    "taskType": {
                                      "type": "string",
                                      "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                                    },
                                    "weeklyRecurrence": {
                                      "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "weekdays": {
                                          "type": "array",
                                          "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "time": {
                                          "type": "string",
                                          "description": "The time of the day the schedule will occur."
                                        }
                                      }
                                    },
                                    "dailyRecurrence": {
                                      "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "time": {
                                          "type": "string",
                                          "description": "The time of day the schedule will occur."
                                        }
                                      }
                                    },
                                    "hourlyRecurrence": {
                                      "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "minute": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Minutes of the hour the schedule will run."
                                        }
                                      }
                                    },
                                    "timeZoneId": {
                                      "type": "string",
                                      "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                                    },
                                    "notificationSettings": {
                                      "description": "Notification settings.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "type": "string",
                                          "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                          "default": "Disabled",
                                          "enum": [
                                            "Enabled",
                                            "Disabled"
                                          ],
                                          "x-ms-enum": {
                                            "name": "EnableStatus",
                                            "modelAsString": true,
                                            "values": [
                                              {
                                                "name": "Enabled",
                                                "value": "Enabled"
                                              },
                                              {
                                                "name": "Disabled",
                                                "value": "Disabled"
                                              }
                                            ]
                                          }
                                        },
                                        "timeInMinutes": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Time in minutes before event at which notification will be sent."
                                        },
                                        "webhookUrl": {
                                          "type": "string",
                                          "description": "The webhook URL to which the notification will be sent."
                                        },
                                        "emailRecipient": {
                                          "type": "string",
                                          "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                        },
                                        "notificationLocale": {
                                          "type": "string",
                                          "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                        }
                                      }
                                    },
                                    "createdDate": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The creation date of the schedule.",
                                      "readOnly": true
                                    },
                                    "targetResourceId": {
                                      "type": "string",
                                      "description": "The resource ID to which the schedule belongs"
                                    },
                                    "provisioningState": {
                                      "type": "string",
                                      "description": "The provisioning status of the resource.",
                                      "readOnly": true
                                    },
                                    "uniqueIdentifier": {
                                      "type": "string",
                                      "description": "The unique immutable identifier of a resource (Guid).",
                                      "readOnly": true
                                    }
                                  }
                                }
                              },
                              "required": [
                                "properties"
                              ]
                            },
                            "labVmsStartup": {
                              "type": "object",
                              "description": "A schedule.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The identifier of the resource.",
                                  "readOnly": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the resource.",
                                  "readOnly": true
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the resource.",
                                  "readOnly": true
                                },
                                "location": {
                                  "type": "string",
                                  "description": "The location of the resource."
                                },
                                "tags": {
                                  "type": "object",
                                  "description": "The tags of the resource.",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "properties": {
                                  "description": "The properties of the resource.",
                                  "x-ms-client-flatten": true,
                                  "type": "object",
                                  "properties": {
                                    "status": {
                                      "type": "string",
                                      "description": "The status of the schedule (i.e. Enabled, Disabled)",
                                      "default": "Disabled",
                                      "enum": [
                                        "Enabled",
                                        "Disabled"
                                      ],
                                      "x-ms-enum": {
                                        "name": "EnableStatus",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Enabled",
                                            "value": "Enabled"
                                          },
                                          {
                                            "name": "Disabled",
                                            "value": "Disabled"
                                          }
                                        ]
                                      }
                                    },
                                    "taskType": {
                                      "type": "string",
                                      "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                                    },
                                    "weeklyRecurrence": {
                                      "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "weekdays": {
                                          "type": "array",
                                          "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "time": {
                                          "type": "string",
                                          "description": "The time of the day the schedule will occur."
                                        }
                                      }
                                    },
                                    "dailyRecurrence": {
                                      "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "time": {
                                          "type": "string",
                                          "description": "The time of day the schedule will occur."
                                        }
                                      }
                                    },
                                    "hourlyRecurrence": {
                                      "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "minute": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Minutes of the hour the schedule will run."
                                        }
                                      }
                                    },
                                    "timeZoneId": {
                                      "type": "string",
                                      "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                                    },
                                    "notificationSettings": {
                                      "description": "Notification settings.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "type": "string",
                                          "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                          "default": "Disabled",
                                          "enum": [
                                            "Enabled",
                                            "Disabled"
                                          ],
                                          "x-ms-enum": {
                                            "name": "EnableStatus",
                                            "modelAsString": true,
                                            "values": [
                                              {
                                                "name": "Enabled",
                                                "value": "Enabled"
                                              },
                                              {
                                                "name": "Disabled",
                                                "value": "Disabled"
                                              }
                                            ]
                                          }
                                        },
                                        "timeInMinutes": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Time in minutes before event at which notification will be sent."
                                        },
                                        "webhookUrl": {
                                          "type": "string",
                                          "description": "The webhook URL to which the notification will be sent."
                                        },
                                        "emailRecipient": {
                                          "type": "string",
                                          "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                        },
                                        "notificationLocale": {
                                          "type": "string",
                                          "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                        }
                                      }
                                    },
                                    "createdDate": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The creation date of the schedule.",
                                      "readOnly": true
                                    },
                                    "targetResourceId": {
                                      "type": "string",
                                      "description": "The resource ID to which the schedule belongs"
                                    },
                                    "provisioningState": {
                                      "type": "string",
                                      "description": "The provisioning status of the resource.",
                                      "readOnly": true
                                    },
                                    "uniqueIdentifier": {
                                      "type": "string",
                                      "description": "The unique immutable identifier of a resource (Guid).",
                                      "readOnly": true
                                    }
                                  }
                                }
                              },
                              "required": [
                                "properties"
                              ]
                            }
                          }
                        }
                      },
                      "required": [
                        "properties"
                      ],
                      "readOnly": true
                    },
                    "expirationDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The expiration date for VM."
                    },
                    "allowClaim": {
                      "type": "boolean",
                      "description": "Indicates whether another user can take ownership of the virtual machine",
                      "default": false
                    },
                    "storageType": {
                      "type": "string",
                      "description": "Storage type to use for virtual machine (i.e. Standard, Premium).",
                      "default": "labStorageType"
                    },
                    "virtualMachineCreationSource": {
                      "description": "Tells source of creation of lab virtual machine. Output property only.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "FromCustomImage",
                        "FromGalleryImage",
                        "FromSharedGalleryImage"
                      ],
                      "x-ms-enum": {
                        "name": "VirtualMachineCreationSource",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "FromCustomImage",
                            "value": "FromCustomImage"
                          },
                          {
                            "name": "FromGalleryImage",
                            "value": "FromGalleryImage"
                          },
                          {
                            "name": "FromSharedGalleryImage",
                            "value": "FromSharedGalleryImage"
                          }
                        ]
                      }
                    },
                    "environmentId": {
                      "type": "string",
                      "description": "The resource ID of the environment that contains this virtual machine, if any."
                    },
                    "dataDiskParameters": {
                      "type": "array",
                      "description": "New or existing data disks to attach to the virtual machine after creation",
                      "items": {
                        "type": "object",
                        "description": "Request body for adding a new or existing data disk to a virtual machine.",
                        "properties": {
                          "attachNewDataDiskOptions": {
                            "description": "Specifies options to attach a new disk to the virtual machine.",
                            "type": "object",
                            "properties": {
                              "diskSizeGiB": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Size of the disk to be attached in Gibibytes."
                              },
                              "diskName": {
                                "type": "string",
                                "description": "The name of the disk to be attached."
                              },
                              "diskType": {
                                "description": "The storage type for the disk (i.e. Standard, Premium).",
                                "type": "string",
                                "enum": [
                                  "Standard",
                                  "Premium",
                                  "StandardSSD"
                                ],
                                "x-ms-enum": {
                                  "name": "StorageType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Standard",
                                      "value": "Standard"
                                    },
                                    {
                                      "name": "Premium",
                                      "value": "Premium"
                                    },
                                    {
                                      "name": "StandardSSD",
                                      "value": "StandardSSD"
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "existingLabDiskId": {
                            "type": "string",
                            "description": "Specifies the existing lab disk id to attach to virtual machine."
                          },
                          "hostCaching": {
                            "description": "Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).",
                            "type": "string",
                            "enum": [
                              "None",
                              "ReadOnly",
                              "ReadWrite"
                            ],
                            "x-ms-enum": {
                              "name": "HostCachingOptions",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "None",
                                  "value": "None"
                                },
                                {
                                  "name": "ReadOnly",
                                  "value": "ReadOnly"
                                },
                                {
                                  "name": "ReadWrite",
                                  "value": "ReadWrite"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "scheduleParameters": {
                      "type": "array",
                      "description": "Virtual Machine schedules to be created",
                      "items": {
                        "type": "object",
                        "description": "Properties for creating a schedule.",
                        "properties": {
                          "properties": {
                            "description": "The properties of the schedule.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string",
                                "description": "The status of the schedule (i.e. Enabled, Disabled)",
                                "default": "Disabled",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "EnableStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled"
                                    }
                                  ]
                                }
                              },
                              "taskType": {
                                "type": "string",
                                "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                              },
                              "weeklyRecurrence": {
                                "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                                "type": "object",
                                "properties": {
                                  "weekdays": {
                                    "type": "array",
                                    "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "time": {
                                    "type": "string",
                                    "description": "The time of the day the schedule will occur."
                                  }
                                }
                              },
                              "dailyRecurrence": {
                                "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                                "type": "object",
                                "properties": {
                                  "time": {
                                    "type": "string",
                                    "description": "The time of day the schedule will occur."
                                  }
                                }
                              },
                              "hourlyRecurrence": {
                                "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                                "type": "object",
                                "properties": {
                                  "minute": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Minutes of the hour the schedule will run."
                                  }
                                }
                              },
                              "timeZoneId": {
                                "type": "string",
                                "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                              },
                              "notificationSettings": {
                                "description": "Notification settings.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "type": "string",
                                    "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                    "default": "Disabled",
                                    "enum": [
                                      "Enabled",
                                      "Disabled"
                                    ],
                                    "x-ms-enum": {
                                      "name": "EnableStatus",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Enabled",
                                          "value": "Enabled"
                                        },
                                        {
                                          "name": "Disabled",
                                          "value": "Disabled"
                                        }
                                      ]
                                    }
                                  },
                                  "timeInMinutes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Time in minutes before event at which notification will be sent."
                                  },
                                  "webhookUrl": {
                                    "type": "string",
                                    "description": "The webhook URL to which the notification will be sent."
                                  },
                                  "emailRecipient": {
                                    "type": "string",
                                    "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                  },
                                  "notificationLocale": {
                                    "type": "string",
                                    "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                  }
                                }
                              },
                              "targetResourceId": {
                                "type": "string",
                                "description": "The resource ID to which the schedule belongs"
                              }
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the virtual machine or environment"
                          },
                          "location": {
                            "type": "string",
                            "description": "The location of the new virtual machine or environment",
                            "readOnly": true
                          },
                          "tags": {
                            "type": "object",
                            "description": "The tags of the resource.",
                            "additionalProperties": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "lastKnownPowerState": {
                      "type": "string",
                      "description": "Last known compute power state captured in DTL",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "put": {
        "operationId": "VirtualMachines_CreateOrUpdate",
        "tags": [
          "VirtualMachines"
        ],
        "description": "Create or replace an existing virtual machine. This operation can take a while to complete.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the LabVirtualMachine",
            "required": true,
            "type": "string"
          },
          {
            "name": "labVirtualMachine",
            "in": "body",
            "description": "A virtual machine.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A virtual machine.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "notes": {
                      "type": "string",
                      "description": "The notes of the virtual machine."
                    },
                    "ownerObjectId": {
                      "type": "string",
                      "description": "The object identifier of the owner of the virtual machine.",
                      "default": "dynamicValue"
                    },
                    "ownerUserPrincipalName": {
                      "type": "string",
                      "description": "The user principal name of the virtual machine owner."
                    },
                    "createdByUserId": {
                      "type": "string",
                      "description": "The object identifier of the creator of the virtual machine.",
                      "readOnly": true
                    },
                    "createdByUser": {
                      "type": "string",
                      "description": "The email address of creator of the virtual machine.",
                      "readOnly": true
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the virtual machine."
                    },
                    "computeId": {
                      "type": "string",
                      "description": "The resource identifier (Microsoft.Compute) of the virtual machine.",
                      "readOnly": true
                    },
                    "customImageId": {
                      "type": "string",
                      "description": "The custom image identifier of the virtual machine."
                    },
                    "osType": {
                      "type": "string",
                      "description": "The OS type of the virtual machine.",
                      "readOnly": true
                    },
                    "size": {
                      "type": "string",
                      "description": "The size of the virtual machine."
                    },
                    "userName": {
                      "type": "string",
                      "description": "The user name of the virtual machine."
                    },
                    "password": {
                      "type": "string",
                      "description": "The password of the virtual machine administrator."
                    },
                    "sshKey": {
                      "type": "string",
                      "description": "The SSH key of the virtual machine administrator."
                    },
                    "isAuthenticationWithSshKey": {
                      "type": "boolean",
                      "description": "Indicates whether this virtual machine uses an SSH key for authentication."
                    },
                    "fqdn": {
                      "type": "string",
                      "description": "The fully-qualified domain name of the virtual machine.",
                      "readOnly": true
                    },
                    "labSubnetName": {
                      "type": "string",
                      "description": "The lab subnet name of the virtual machine."
                    },
                    "labVirtualNetworkId": {
                      "type": "string",
                      "description": "The lab virtual network identifier of the virtual machine."
                    },
                    "disallowPublicIpAddress": {
                      "type": "boolean",
                      "description": "Indicates whether the virtual machine is to be created without a public IP address.",
                      "default": false
                    },
                    "artifacts": {
                      "type": "array",
                      "description": "The artifacts to be installed on the virtual machine.",
                      "items": {
                        "type": "object",
                        "description": "Properties of an artifact.",
                        "properties": {
                          "artifactId": {
                            "type": "string",
                            "description": "The artifact's identifier."
                          },
                          "artifactTitle": {
                            "type": "string",
                            "description": "The artifact's title."
                          },
                          "parameters": {
                            "type": "array",
                            "description": "The parameters of the artifact.",
                            "items": {
                              "type": "object",
                              "description": "Properties of an artifact parameter.",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name of the artifact parameter."
                                },
                                "value": {
                                  "type": "string",
                                  "description": "The value of the artifact parameter."
                                }
                              }
                            }
                          },
                          "status": {
                            "type": "string",
                            "description": "The status of the artifact."
                          },
                          "deploymentStatusMessage": {
                            "type": "string",
                            "description": "The status message from the deployment."
                          },
                          "vmExtensionStatusMessage": {
                            "type": "string",
                            "description": "The status message from the virtual machine extension."
                          },
                          "installTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time that the artifact starts to install on the virtual machine."
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "artifactDeploymentStatus": {
                      "description": "The artifact deployment status for the virtual machine.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "deploymentStatus": {
                          "type": "string",
                          "description": "The deployment status of the artifact."
                        },
                        "artifactsApplied": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The total count of the artifacts that were successfully applied."
                        },
                        "totalArtifacts": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The total count of the artifacts that were tentatively applied."
                        }
                      }
                    },
                    "galleryImageReference": {
                      "description": "The Microsoft Azure Marketplace image reference of the virtual machine.",
                      "type": "object",
                      "properties": {
                        "offer": {
                          "type": "string",
                          "description": "The offer of the gallery image."
                        },
                        "publisher": {
                          "type": "string",
                          "description": "The publisher of the gallery image."
                        },
                        "sku": {
                          "type": "string",
                          "description": "The SKU of the gallery image."
                        },
                        "osType": {
                          "type": "string",
                          "description": "The OS type of the gallery image."
                        },
                        "version": {
                          "type": "string",
                          "description": "The version of the gallery image."
                        }
                      }
                    },
                    "planId": {
                      "type": "string",
                      "description": "The id of the plan associated with the virtual machine image"
                    },
                    "computeVm": {
                      "description": "The compute virtual machine properties.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "statuses": {
                          "type": "array",
                          "description": "Gets the statuses of the virtual machine.",
                          "items": {
                            "type": "object",
                            "description": "Status information about a virtual machine.",
                            "properties": {
                              "code": {
                                "type": "string",
                                "description": "Gets the status Code."
                              },
                              "displayStatus": {
                                "type": "string",
                                "description": "Gets the short localizable label for the status."
                              },
                              "message": {
                                "type": "string",
                                "description": "Gets the message associated with the status."
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        },
                        "osType": {
                          "type": "string",
                          "description": "Gets the OS type of the virtual machine."
                        },
                        "vmSize": {
                          "type": "string",
                          "description": "Gets the size of the virtual machine."
                        },
                        "networkInterfaceId": {
                          "type": "string",
                          "description": "Gets the network interface ID of the virtual machine."
                        },
                        "osDiskId": {
                          "type": "string",
                          "description": "Gets OS disk blob uri for the virtual machine."
                        },
                        "dataDiskIds": {
                          "type": "array",
                          "description": "Gets data disks blob uri for the virtual machine.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "dataDisks": {
                          "type": "array",
                          "description": "Gets all data disks attached to the virtual machine.",
                          "items": {
                            "type": "object",
                            "description": "A data disks attached to a virtual machine.",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Gets data disk name."
                              },
                              "diskUri": {
                                "type": "string",
                                "description": "When backed by a blob, the URI of underlying blob."
                              },
                              "managedDiskId": {
                                "type": "string",
                                "description": "When backed by managed disk, this is the ID of the compute disk resource."
                              },
                              "diskSizeGiB": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Gets data disk size in GiB."
                              }
                            }
                          }
                        }
                      }
                    },
                    "networkInterface": {
                      "description": "The network interface properties.",
                      "type": "object",
                      "properties": {
                        "virtualNetworkId": {
                          "type": "string",
                          "description": "The resource ID of the virtual network."
                        },
                        "subnetId": {
                          "type": "string",
                          "description": "The resource ID of the sub net."
                        },
                        "publicIpAddressId": {
                          "type": "string",
                          "description": "The resource ID of the public IP address."
                        },
                        "publicIpAddress": {
                          "type": "string",
                          "description": "The public IP address."
                        },
                        "privateIpAddress": {
                          "type": "string",
                          "description": "The private IP address."
                        },
                        "dnsName": {
                          "type": "string",
                          "description": "The DNS name."
                        },
                        "rdpAuthority": {
                          "type": "string",
                          "description": "The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol)."
                        },
                        "sshAuthority": {
                          "type": "string",
                          "description": "The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH."
                        },
                        "sharedPublicIpAddressConfiguration": {
                          "description": "The configuration for sharing a public IP address across multiple virtual machines.",
                          "type": "object",
                          "properties": {
                            "inboundNatRules": {
                              "type": "array",
                              "description": "The incoming NAT rules",
                              "items": {
                                "type": "object",
                                "description": "A rule for NAT - exposing a VM's port (backendPort) on the public IP address using a load balancer.",
                                "properties": {
                                  "transportProtocol": {
                                    "description": "The transport protocol for the endpoint.",
                                    "type": "string",
                                    "enum": [
                                      "Tcp",
                                      "Udp"
                                    ],
                                    "x-ms-enum": {
                                      "name": "TransportProtocol",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Tcp",
                                          "value": "Tcp"
                                        },
                                        {
                                          "name": "Udp",
                                          "value": "Udp"
                                        }
                                      ]
                                    }
                                  },
                                  "frontendPort": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The external endpoint port of the inbound connection. Possible values range between 1 and 65535, inclusive. If unspecified, a value will be allocated automatically."
                                  },
                                  "backendPort": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The port to which the external traffic will be redirected."
                                  }
                                }
                              },
                              "x-ms-identifiers": []
                            }
                          }
                        }
                      }
                    },
                    "applicableSchedule": {
                      "type": "object",
                      "description": "Schedules applicable to a virtual machine. The schedules may have been defined on a VM or on lab level.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The identifier of the resource.",
                          "readOnly": true
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the resource.",
                          "readOnly": true
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of the resource.",
                          "readOnly": true
                        },
                        "location": {
                          "type": "string",
                          "description": "The location of the resource."
                        },
                        "tags": {
                          "type": "object",
                          "description": "The tags of the resource.",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "properties": {
                          "description": "The properties of the resource.",
                          "x-ms-client-flatten": true,
                          "type": "object",
                          "properties": {
                            "labVmsShutdown": {
                              "type": "object",
                              "description": "A schedule.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The identifier of the resource.",
                                  "readOnly": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the resource.",
                                  "readOnly": true
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the resource.",
                                  "readOnly": true
                                },
                                "location": {
                                  "type": "string",
                                  "description": "The location of the resource."
                                },
                                "tags": {
                                  "type": "object",
                                  "description": "The tags of the resource.",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "properties": {
                                  "description": "The properties of the resource.",
                                  "x-ms-client-flatten": true,
                                  "type": "object",
                                  "properties": {
                                    "status": {
                                      "type": "string",
                                      "description": "The status of the schedule (i.e. Enabled, Disabled)",
                                      "default": "Disabled",
                                      "enum": [
                                        "Enabled",
                                        "Disabled"
                                      ],
                                      "x-ms-enum": {
                                        "name": "EnableStatus",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Enabled",
                                            "value": "Enabled"
                                          },
                                          {
                                            "name": "Disabled",
                                            "value": "Disabled"
                                          }
                                        ]
                                      }
                                    },
                                    "taskType": {
                                      "type": "string",
                                      "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                                    },
                                    "weeklyRecurrence": {
                                      "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "weekdays": {
                                          "type": "array",
                                          "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "time": {
                                          "type": "string",
                                          "description": "The time of the day the schedule will occur."
                                        }
                                      }
                                    },
                                    "dailyRecurrence": {
                                      "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "time": {
                                          "type": "string",
                                          "description": "The time of day the schedule will occur."
                                        }
                                      }
                                    },
                                    "hourlyRecurrence": {
                                      "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "minute": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Minutes of the hour the schedule will run."
                                        }
                                      }
                                    },
                                    "timeZoneId": {
                                      "type": "string",
                                      "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                                    },
                                    "notificationSettings": {
                                      "description": "Notification settings.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "type": "string",
                                          "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                          "default": "Disabled",
                                          "enum": [
                                            "Enabled",
                                            "Disabled"
                                          ],
                                          "x-ms-enum": {
                                            "name": "EnableStatus",
                                            "modelAsString": true,
                                            "values": [
                                              {
                                                "name": "Enabled",
                                                "value": "Enabled"
                                              },
                                              {
                                                "name": "Disabled",
                                                "value": "Disabled"
                                              }
                                            ]
                                          }
                                        },
                                        "timeInMinutes": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Time in minutes before event at which notification will be sent."
                                        },
                                        "webhookUrl": {
                                          "type": "string",
                                          "description": "The webhook URL to which the notification will be sent."
                                        },
                                        "emailRecipient": {
                                          "type": "string",
                                          "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                        },
                                        "notificationLocale": {
                                          "type": "string",
                                          "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                        }
                                      }
                                    },
                                    "createdDate": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The creation date of the schedule.",
                                      "readOnly": true
                                    },
                                    "targetResourceId": {
                                      "type": "string",
                                      "description": "The resource ID to which the schedule belongs"
                                    },
                                    "provisioningState": {
                                      "type": "string",
                                      "description": "The provisioning status of the resource.",
                                      "readOnly": true
                                    },
                                    "uniqueIdentifier": {
                                      "type": "string",
                                      "description": "The unique immutable identifier of a resource (Guid).",
                                      "readOnly": true
                                    }
                                  }
                                }
                              },
                              "required": [
                                "properties"
                              ]
                            },
                            "labVmsStartup": {
                              "type": "object",
                              "description": "A schedule.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The identifier of the resource.",
                                  "readOnly": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the resource.",
                                  "readOnly": true
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the resource.",
                                  "readOnly": true
                                },
                                "location": {
                                  "type": "string",
                                  "description": "The location of the resource."
                                },
                                "tags": {
                                  "type": "object",
                                  "description": "The tags of the resource.",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "properties": {
                                  "description": "The properties of the resource.",
                                  "x-ms-client-flatten": true,
                                  "type": "object",
                                  "properties": {
                                    "status": {
                                      "type": "string",
                                      "description": "The status of the schedule (i.e. Enabled, Disabled)",
                                      "default": "Disabled",
                                      "enum": [
                                        "Enabled",
                                        "Disabled"
                                      ],
                                      "x-ms-enum": {
                                        "name": "EnableStatus",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Enabled",
                                            "value": "Enabled"
                                          },
                                          {
                                            "name": "Disabled",
                                            "value": "Disabled"
                                          }
                                        ]
                                      }
                                    },
                                    "taskType": {
                                      "type": "string",
                                      "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                                    },
                                    "weeklyRecurrence": {
                                      "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "weekdays": {
                                          "type": "array",
                                          "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "time": {
                                          "type": "string",
                                          "description": "The time of the day the schedule will occur."
                                        }
                                      }
                                    },
                                    "dailyRecurrence": {
                                      "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "time": {
                                          "type": "string",
                                          "description": "The time of day the schedule will occur."
                                        }
                                      }
                                    },
                                    "hourlyRecurrence": {
                                      "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "minute": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Minutes of the hour the schedule will run."
                                        }
                                      }
                                    },
                                    "timeZoneId": {
                                      "type": "string",
                                      "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                                    },
                                    "notificationSettings": {
                                      "description": "Notification settings.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "type": "string",
                                          "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                          "default": "Disabled",
                                          "enum": [
                                            "Enabled",
                                            "Disabled"
                                          ],
                                          "x-ms-enum": {
                                            "name": "EnableStatus",
                                            "modelAsString": true,
                                            "values": [
                                              {
                                                "name": "Enabled",
                                                "value": "Enabled"
                                              },
                                              {
                                                "name": "Disabled",
                                                "value": "Disabled"
                                              }
                                            ]
                                          }
                                        },
                                        "timeInMinutes": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Time in minutes before event at which notification will be sent."
                                        },
                                        "webhookUrl": {
                                          "type": "string",
                                          "description": "The webhook URL to which the notification will be sent."
                                        },
                                        "emailRecipient": {
                                          "type": "string",
                                          "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                        },
                                        "notificationLocale": {
                                          "type": "string",
                                          "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                        }
                                      }
                                    },
                                    "createdDate": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The creation date of the schedule.",
                                      "readOnly": true
                                    },
                                    "targetResourceId": {
                                      "type": "string",
                                      "description": "The resource ID to which the schedule belongs"
                                    },
                                    "provisioningState": {
                                      "type": "string",
                                      "description": "The provisioning status of the resource.",
                                      "readOnly": true
                                    },
                                    "uniqueIdentifier": {
                                      "type": "string",
                                      "description": "The unique immutable identifier of a resource (Guid).",
                                      "readOnly": true
                                    }
                                  }
                                }
                              },
                              "required": [
                                "properties"
                              ]
                            }
                          }
                        }
                      },
                      "required": [
                        "properties"
                      ],
                      "readOnly": true
                    },
                    "expirationDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The expiration date for VM."
                    },
                    "allowClaim": {
                      "type": "boolean",
                      "description": "Indicates whether another user can take ownership of the virtual machine",
                      "default": false
                    },
                    "storageType": {
                      "type": "string",
                      "description": "Storage type to use for virtual machine (i.e. Standard, Premium).",
                      "default": "labStorageType"
                    },
                    "virtualMachineCreationSource": {
                      "description": "Tells source of creation of lab virtual machine. Output property only.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "FromCustomImage",
                        "FromGalleryImage",
                        "FromSharedGalleryImage"
                      ],
                      "x-ms-enum": {
                        "name": "VirtualMachineCreationSource",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "FromCustomImage",
                            "value": "FromCustomImage"
                          },
                          {
                            "name": "FromGalleryImage",
                            "value": "FromGalleryImage"
                          },
                          {
                            "name": "FromSharedGalleryImage",
                            "value": "FromSharedGalleryImage"
                          }
                        ]
                      }
                    },
                    "environmentId": {
                      "type": "string",
                      "description": "The resource ID of the environment that contains this virtual machine, if any."
                    },
                    "dataDiskParameters": {
                      "type": "array",
                      "description": "New or existing data disks to attach to the virtual machine after creation",
                      "items": {
                        "type": "object",
                        "description": "Request body for adding a new or existing data disk to a virtual machine.",
                        "properties": {
                          "attachNewDataDiskOptions": {
                            "description": "Specifies options to attach a new disk to the virtual machine.",
                            "type": "object",
                            "properties": {
                              "diskSizeGiB": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Size of the disk to be attached in Gibibytes."
                              },
                              "diskName": {
                                "type": "string",
                                "description": "The name of the disk to be attached."
                              },
                              "diskType": {
                                "description": "The storage type for the disk (i.e. Standard, Premium).",
                                "type": "string",
                                "enum": [
                                  "Standard",
                                  "Premium",
                                  "StandardSSD"
                                ],
                                "x-ms-enum": {
                                  "name": "StorageType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Standard",
                                      "value": "Standard"
                                    },
                                    {
                                      "name": "Premium",
                                      "value": "Premium"
                                    },
                                    {
                                      "name": "StandardSSD",
                                      "value": "StandardSSD"
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "existingLabDiskId": {
                            "type": "string",
                            "description": "Specifies the existing lab disk id to attach to virtual machine."
                          },
                          "hostCaching": {
                            "description": "Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).",
                            "type": "string",
                            "enum": [
                              "None",
                              "ReadOnly",
                              "ReadWrite"
                            ],
                            "x-ms-enum": {
                              "name": "HostCachingOptions",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "None",
                                  "value": "None"
                                },
                                {
                                  "name": "ReadOnly",
                                  "value": "ReadOnly"
                                },
                                {
                                  "name": "ReadWrite",
                                  "value": "ReadWrite"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "scheduleParameters": {
                      "type": "array",
                      "description": "Virtual Machine schedules to be created",
                      "items": {
                        "type": "object",
                        "description": "Properties for creating a schedule.",
                        "properties": {
                          "properties": {
                            "description": "The properties of the schedule.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string",
                                "description": "The status of the schedule (i.e. Enabled, Disabled)",
                                "default": "Disabled",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "EnableStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled"
                                    }
                                  ]
                                }
                              },
                              "taskType": {
                                "type": "string",
                                "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                              },
                              "weeklyRecurrence": {
                                "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                                "type": "object",
                                "properties": {
                                  "weekdays": {
                                    "type": "array",
                                    "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "time": {
                                    "type": "string",
                                    "description": "The time of the day the schedule will occur."
                                  }
                                }
                              },
                              "dailyRecurrence": {
                                "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                                "type": "object",
                                "properties": {
                                  "time": {
                                    "type": "string",
                                    "description": "The time of day the schedule will occur."
                                  }
                                }
                              },
                              "hourlyRecurrence": {
                                "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                                "type": "object",
                                "properties": {
                                  "minute": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Minutes of the hour the schedule will run."
                                  }
                                }
                              },
                              "timeZoneId": {
                                "type": "string",
                                "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                              },
                              "notificationSettings": {
                                "description": "Notification settings.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "type": "string",
                                    "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                    "default": "Disabled",
                                    "enum": [
                                      "Enabled",
                                      "Disabled"
                                    ],
                                    "x-ms-enum": {
                                      "name": "EnableStatus",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Enabled",
                                          "value": "Enabled"
                                        },
                                        {
                                          "name": "Disabled",
                                          "value": "Disabled"
                                        }
                                      ]
                                    }
                                  },
                                  "timeInMinutes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Time in minutes before event at which notification will be sent."
                                  },
                                  "webhookUrl": {
                                    "type": "string",
                                    "description": "The webhook URL to which the notification will be sent."
                                  },
                                  "emailRecipient": {
                                    "type": "string",
                                    "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                  },
                                  "notificationLocale": {
                                    "type": "string",
                                    "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                  }
                                }
                              },
                              "targetResourceId": {
                                "type": "string",
                                "description": "The resource ID to which the schedule belongs"
                              }
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the virtual machine or environment"
                          },
                          "location": {
                            "type": "string",
                            "description": "The location of the new virtual machine or environment",
                            "readOnly": true
                          },
                          "tags": {
                            "type": "object",
                            "description": "The tags of the resource.",
                            "additionalProperties": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "lastKnownPowerState": {
                      "type": "string",
                      "description": "Last known compute power state captured in DTL",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'LabVirtualMachine' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "A virtual machine.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "notes": {
                      "type": "string",
                      "description": "The notes of the virtual machine."
                    },
                    "ownerObjectId": {
                      "type": "string",
                      "description": "The object identifier of the owner of the virtual machine.",
                      "default": "dynamicValue"
                    },
                    "ownerUserPrincipalName": {
                      "type": "string",
                      "description": "The user principal name of the virtual machine owner."
                    },
                    "createdByUserId": {
                      "type": "string",
                      "description": "The object identifier of the creator of the virtual machine.",
                      "readOnly": true
                    },
                    "createdByUser": {
                      "type": "string",
                      "description": "The email address of creator of the virtual machine.",
                      "readOnly": true
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the virtual machine."
                    },
                    "computeId": {
                      "type": "string",
                      "description": "The resource identifier (Microsoft.Compute) of the virtual machine.",
                      "readOnly": true
                    },
                    "customImageId": {
                      "type": "string",
                      "description": "The custom image identifier of the virtual machine."
                    },
                    "osType": {
                      "type": "string",
                      "description": "The OS type of the virtual machine.",
                      "readOnly": true
                    },
                    "size": {
                      "type": "string",
                      "description": "The size of the virtual machine."
                    },
                    "userName": {
                      "type": "string",
                      "description": "The user name of the virtual machine."
                    },
                    "password": {
                      "type": "string",
                      "description": "The password of the virtual machine administrator."
                    },
                    "sshKey": {
                      "type": "string",
                      "description": "The SSH key of the virtual machine administrator."
                    },
                    "isAuthenticationWithSshKey": {
                      "type": "boolean",
                      "description": "Indicates whether this virtual machine uses an SSH key for authentication."
                    },
                    "fqdn": {
                      "type": "string",
                      "description": "The fully-qualified domain name of the virtual machine.",
                      "readOnly": true
                    },
                    "labSubnetName": {
                      "type": "string",
                      "description": "The lab subnet name of the virtual machine."
                    },
                    "labVirtualNetworkId": {
                      "type": "string",
                      "description": "The lab virtual network identifier of the virtual machine."
                    },
                    "disallowPublicIpAddress": {
                      "type": "boolean",
                      "description": "Indicates whether the virtual machine is to be created without a public IP address.",
                      "default": false
                    },
                    "artifacts": {
                      "type": "array",
                      "description": "The artifacts to be installed on the virtual machine.",
                      "items": {
                        "type": "object",
                        "description": "Properties of an artifact.",
                        "properties": {
                          "artifactId": {
                            "type": "string",
                            "description": "The artifact's identifier."
                          },
                          "artifactTitle": {
                            "type": "string",
                            "description": "The artifact's title."
                          },
                          "parameters": {
                            "type": "array",
                            "description": "The parameters of the artifact.",
                            "items": {
                              "type": "object",
                              "description": "Properties of an artifact parameter.",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name of the artifact parameter."
                                },
                                "value": {
                                  "type": "string",
                                  "description": "The value of the artifact parameter."
                                }
                              }
                            }
                          },
                          "status": {
                            "type": "string",
                            "description": "The status of the artifact."
                          },
                          "deploymentStatusMessage": {
                            "type": "string",
                            "description": "The status message from the deployment."
                          },
                          "vmExtensionStatusMessage": {
                            "type": "string",
                            "description": "The status message from the virtual machine extension."
                          },
                          "installTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time that the artifact starts to install on the virtual machine."
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "artifactDeploymentStatus": {
                      "description": "The artifact deployment status for the virtual machine.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "deploymentStatus": {
                          "type": "string",
                          "description": "The deployment status of the artifact."
                        },
                        "artifactsApplied": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The total count of the artifacts that were successfully applied."
                        },
                        "totalArtifacts": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The total count of the artifacts that were tentatively applied."
                        }
                      }
                    },
                    "galleryImageReference": {
                      "description": "The Microsoft Azure Marketplace image reference of the virtual machine.",
                      "type": "object",
                      "properties": {
                        "offer": {
                          "type": "string",
                          "description": "The offer of the gallery image."
                        },
                        "publisher": {
                          "type": "string",
                          "description": "The publisher of the gallery image."
                        },
                        "sku": {
                          "type": "string",
                          "description": "The SKU of the gallery image."
                        },
                        "osType": {
                          "type": "string",
                          "description": "The OS type of the gallery image."
                        },
                        "version": {
                          "type": "string",
                          "description": "The version of the gallery image."
                        }
                      }
                    },
                    "planId": {
                      "type": "string",
                      "description": "The id of the plan associated with the virtual machine image"
                    },
                    "computeVm": {
                      "description": "The compute virtual machine properties.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "statuses": {
                          "type": "array",
                          "description": "Gets the statuses of the virtual machine.",
                          "items": {
                            "type": "object",
                            "description": "Status information about a virtual machine.",
                            "properties": {
                              "code": {
                                "type": "string",
                                "description": "Gets the status Code."
                              },
                              "displayStatus": {
                                "type": "string",
                                "description": "Gets the short localizable label for the status."
                              },
                              "message": {
                                "type": "string",
                                "description": "Gets the message associated with the status."
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        },
                        "osType": {
                          "type": "string",
                          "description": "Gets the OS type of the virtual machine."
                        },
                        "vmSize": {
                          "type": "string",
                          "description": "Gets the size of the virtual machine."
                        },
                        "networkInterfaceId": {
                          "type": "string",
                          "description": "Gets the network interface ID of the virtual machine."
                        },
                        "osDiskId": {
                          "type": "string",
                          "description": "Gets OS disk blob uri for the virtual machine."
                        },
                        "dataDiskIds": {
                          "type": "array",
                          "description": "Gets data disks blob uri for the virtual machine.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "dataDisks": {
                          "type": "array",
                          "description": "Gets all data disks attached to the virtual machine.",
                          "items": {
                            "type": "object",
                            "description": "A data disks attached to a virtual machine.",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Gets data disk name."
                              },
                              "diskUri": {
                                "type": "string",
                                "description": "When backed by a blob, the URI of underlying blob."
                              },
                              "managedDiskId": {
                                "type": "string",
                                "description": "When backed by managed disk, this is the ID of the compute disk resource."
                              },
                              "diskSizeGiB": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Gets data disk size in GiB."
                              }
                            }
                          }
                        }
                      }
                    },
                    "networkInterface": {
                      "description": "The network interface properties.",
                      "type": "object",
                      "properties": {
                        "virtualNetworkId": {
                          "type": "string",
                          "description": "The resource ID of the virtual network."
                        },
                        "subnetId": {
                          "type": "string",
                          "description": "The resource ID of the sub net."
                        },
                        "publicIpAddressId": {
                          "type": "string",
                          "description": "The resource ID of the public IP address."
                        },
                        "publicIpAddress": {
                          "type": "string",
                          "description": "The public IP address."
                        },
                        "privateIpAddress": {
                          "type": "string",
                          "description": "The private IP address."
                        },
                        "dnsName": {
                          "type": "string",
                          "description": "The DNS name."
                        },
                        "rdpAuthority": {
                          "type": "string",
                          "description": "The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol)."
                        },
                        "sshAuthority": {
                          "type": "string",
                          "description": "The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH."
                        },
                        "sharedPublicIpAddressConfiguration": {
                          "description": "The configuration for sharing a public IP address across multiple virtual machines.",
                          "type": "object",
                          "properties": {
                            "inboundNatRules": {
                              "type": "array",
                              "description": "The incoming NAT rules",
                              "items": {
                                "type": "object",
                                "description": "A rule for NAT - exposing a VM's port (backendPort) on the public IP address using a load balancer.",
                                "properties": {
                                  "transportProtocol": {
                                    "description": "The transport protocol for the endpoint.",
                                    "type": "string",
                                    "enum": [
                                      "Tcp",
                                      "Udp"
                                    ],
                                    "x-ms-enum": {
                                      "name": "TransportProtocol",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Tcp",
                                          "value": "Tcp"
                                        },
                                        {
                                          "name": "Udp",
                                          "value": "Udp"
                                        }
                                      ]
                                    }
                                  },
                                  "frontendPort": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The external endpoint port of the inbound connection. Possible values range between 1 and 65535, inclusive. If unspecified, a value will be allocated automatically."
                                  },
                                  "backendPort": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The port to which the external traffic will be redirected."
                                  }
                                }
                              },
                              "x-ms-identifiers": []
                            }
                          }
                        }
                      }
                    },
                    "applicableSchedule": {
                      "type": "object",
                      "description": "Schedules applicable to a virtual machine. The schedules may have been defined on a VM or on lab level.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The identifier of the resource.",
                          "readOnly": true
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the resource.",
                          "readOnly": true
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of the resource.",
                          "readOnly": true
                        },
                        "location": {
                          "type": "string",
                          "description": "The location of the resource."
                        },
                        "tags": {
                          "type": "object",
                          "description": "The tags of the resource.",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "properties": {
                          "description": "The properties of the resource.",
                          "x-ms-client-flatten": true,
                          "type": "object",
                          "properties": {
                            "labVmsShutdown": {
                              "type": "object",
                              "description": "A schedule.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The identifier of the resource.",
                                  "readOnly": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the resource.",
                                  "readOnly": true
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the resource.",
                                  "readOnly": true
                                },
                                "location": {
                                  "type": "string",
                                  "description": "The location of the resource."
                                },
                                "tags": {
                                  "type": "object",
                                  "description": "The tags of the resource.",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "properties": {
                                  "description": "The properties of the resource.",
                                  "x-ms-client-flatten": true,
                                  "type": "object",
                                  "properties": {
                                    "status": {
                                      "type": "string",
                                      "description": "The status of the schedule (i.e. Enabled, Disabled)",
                                      "default": "Disabled",
                                      "enum": [
                                        "Enabled",
                                        "Disabled"
                                      ],
                                      "x-ms-enum": {
                                        "name": "EnableStatus",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Enabled",
                                            "value": "Enabled"
                                          },
                                          {
                                            "name": "Disabled",
                                            "value": "Disabled"
                                          }
                                        ]
                                      }
                                    },
                                    "taskType": {
                                      "type": "string",
                                      "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                                    },
                                    "weeklyRecurrence": {
                                      "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "weekdays": {
                                          "type": "array",
                                          "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "time": {
                                          "type": "string",
                                          "description": "The time of the day the schedule will occur."
                                        }
                                      }
                                    },
                                    "dailyRecurrence": {
                                      "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "time": {
                                          "type": "string",
                                          "description": "The time of day the schedule will occur."
                                        }
                                      }
                                    },
                                    "hourlyRecurrence": {
                                      "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "minute": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Minutes of the hour the schedule will run."
                                        }
                                      }
                                    },
                                    "timeZoneId": {
                                      "type": "string",
                                      "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                                    },
                                    "notificationSettings": {
                                      "description": "Notification settings.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "type": "string",
                                          "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                          "default": "Disabled",
                                          "enum": [
                                            "Enabled",
                                            "Disabled"
                                          ],
                                          "x-ms-enum": {
                                            "name": "EnableStatus",
                                            "modelAsString": true,
                                            "values": [
                                              {
                                                "name": "Enabled",
                                                "value": "Enabled"
                                              },
                                              {
                                                "name": "Disabled",
                                                "value": "Disabled"
                                              }
                                            ]
                                          }
                                        },
                                        "timeInMinutes": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Time in minutes before event at which notification will be sent."
                                        },
                                        "webhookUrl": {
                                          "type": "string",
                                          "description": "The webhook URL to which the notification will be sent."
                                        },
                                        "emailRecipient": {
                                          "type": "string",
                                          "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                        },
                                        "notificationLocale": {
                                          "type": "string",
                                          "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                        }
                                      }
                                    },
                                    "createdDate": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The creation date of the schedule.",
                                      "readOnly": true
                                    },
                                    "targetResourceId": {
                                      "type": "string",
                                      "description": "The resource ID to which the schedule belongs"
                                    },
                                    "provisioningState": {
                                      "type": "string",
                                      "description": "The provisioning status of the resource.",
                                      "readOnly": true
                                    },
                                    "uniqueIdentifier": {
                                      "type": "string",
                                      "description": "The unique immutable identifier of a resource (Guid).",
                                      "readOnly": true
                                    }
                                  }
                                }
                              },
                              "required": [
                                "properties"
                              ]
                            },
                            "labVmsStartup": {
                              "type": "object",
                              "description": "A schedule.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The identifier of the resource.",
                                  "readOnly": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the resource.",
                                  "readOnly": true
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the resource.",
                                  "readOnly": true
                                },
                                "location": {
                                  "type": "string",
                                  "description": "The location of the resource."
                                },
                                "tags": {
                                  "type": "object",
                                  "description": "The tags of the resource.",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "properties": {
                                  "description": "The properties of the resource.",
                                  "x-ms-client-flatten": true,
                                  "type": "object",
                                  "properties": {
                                    "status": {
                                      "type": "string",
                                      "description": "The status of the schedule (i.e. Enabled, Disabled)",
                                      "default": "Disabled",
                                      "enum": [
                                        "Enabled",
                                        "Disabled"
                                      ],
                                      "x-ms-enum": {
                                        "name": "EnableStatus",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Enabled",
                                            "value": "Enabled"
                                          },
                                          {
                                            "name": "Disabled",
                                            "value": "Disabled"
                                          }
                                        ]
                                      }
                                    },
                                    "taskType": {
                                      "type": "string",
                                      "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                                    },
                                    "weeklyRecurrence": {
                                      "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "weekdays": {
                                          "type": "array",
                                          "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "time": {
                                          "type": "string",
                                          "description": "The time of the day the schedule will occur."
                                        }
                                      }
                                    },
                                    "dailyRecurrence": {
                                      "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "time": {
                                          "type": "string",
                                          "description": "The time of day the schedule will occur."
                                        }
                                      }
                                    },
                                    "hourlyRecurrence": {
                                      "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "minute": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Minutes of the hour the schedule will run."
                                        }
                                      }
                                    },
                                    "timeZoneId": {
                                      "type": "string",
                                      "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                                    },
                                    "notificationSettings": {
                                      "description": "Notification settings.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "type": "string",
                                          "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                          "default": "Disabled",
                                          "enum": [
                                            "Enabled",
                                            "Disabled"
                                          ],
                                          "x-ms-enum": {
                                            "name": "EnableStatus",
                                            "modelAsString": true,
                                            "values": [
                                              {
                                                "name": "Enabled",
                                                "value": "Enabled"
                                              },
                                              {
                                                "name": "Disabled",
                                                "value": "Disabled"
                                              }
                                            ]
                                          }
                                        },
                                        "timeInMinutes": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Time in minutes before event at which notification will be sent."
                                        },
                                        "webhookUrl": {
                                          "type": "string",
                                          "description": "The webhook URL to which the notification will be sent."
                                        },
                                        "emailRecipient": {
                                          "type": "string",
                                          "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                        },
                                        "notificationLocale": {
                                          "type": "string",
                                          "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                        }
                                      }
                                    },
                                    "createdDate": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The creation date of the schedule.",
                                      "readOnly": true
                                    },
                                    "targetResourceId": {
                                      "type": "string",
                                      "description": "The resource ID to which the schedule belongs"
                                    },
                                    "provisioningState": {
                                      "type": "string",
                                      "description": "The provisioning status of the resource.",
                                      "readOnly": true
                                    },
                                    "uniqueIdentifier": {
                                      "type": "string",
                                      "description": "The unique immutable identifier of a resource (Guid).",
                                      "readOnly": true
                                    }
                                  }
                                }
                              },
                              "required": [
                                "properties"
                              ]
                            }
                          }
                        }
                      },
                      "required": [
                        "properties"
                      ],
                      "readOnly": true
                    },
                    "expirationDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The expiration date for VM."
                    },
                    "allowClaim": {
                      "type": "boolean",
                      "description": "Indicates whether another user can take ownership of the virtual machine",
                      "default": false
                    },
                    "storageType": {
                      "type": "string",
                      "description": "Storage type to use for virtual machine (i.e. Standard, Premium).",
                      "default": "labStorageType"
                    },
                    "virtualMachineCreationSource": {
                      "description": "Tells source of creation of lab virtual machine. Output property only.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "FromCustomImage",
                        "FromGalleryImage",
                        "FromSharedGalleryImage"
                      ],
                      "x-ms-enum": {
                        "name": "VirtualMachineCreationSource",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "FromCustomImage",
                            "value": "FromCustomImage"
                          },
                          {
                            "name": "FromGalleryImage",
                            "value": "FromGalleryImage"
                          },
                          {
                            "name": "FromSharedGalleryImage",
                            "value": "FromSharedGalleryImage"
                          }
                        ]
                      }
                    },
                    "environmentId": {
                      "type": "string",
                      "description": "The resource ID of the environment that contains this virtual machine, if any."
                    },
                    "dataDiskParameters": {
                      "type": "array",
                      "description": "New or existing data disks to attach to the virtual machine after creation",
                      "items": {
                        "type": "object",
                        "description": "Request body for adding a new or existing data disk to a virtual machine.",
                        "properties": {
                          "attachNewDataDiskOptions": {
                            "description": "Specifies options to attach a new disk to the virtual machine.",
                            "type": "object",
                            "properties": {
                              "diskSizeGiB": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Size of the disk to be attached in Gibibytes."
                              },
                              "diskName": {
                                "type": "string",
                                "description": "The name of the disk to be attached."
                              },
                              "diskType": {
                                "description": "The storage type for the disk (i.e. Standard, Premium).",
                                "type": "string",
                                "enum": [
                                  "Standard",
                                  "Premium",
                                  "StandardSSD"
                                ],
                                "x-ms-enum": {
                                  "name": "StorageType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Standard",
                                      "value": "Standard"
                                    },
                                    {
                                      "name": "Premium",
                                      "value": "Premium"
                                    },
                                    {
                                      "name": "StandardSSD",
                                      "value": "StandardSSD"
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "existingLabDiskId": {
                            "type": "string",
                            "description": "Specifies the existing lab disk id to attach to virtual machine."
                          },
                          "hostCaching": {
                            "description": "Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).",
                            "type": "string",
                            "enum": [
                              "None",
                              "ReadOnly",
                              "ReadWrite"
                            ],
                            "x-ms-enum": {
                              "name": "HostCachingOptions",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "None",
                                  "value": "None"
                                },
                                {
                                  "name": "ReadOnly",
                                  "value": "ReadOnly"
                                },
                                {
                                  "name": "ReadWrite",
                                  "value": "ReadWrite"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "scheduleParameters": {
                      "type": "array",
                      "description": "Virtual Machine schedules to be created",
                      "items": {
                        "type": "object",
                        "description": "Properties for creating a schedule.",
                        "properties": {
                          "properties": {
                            "description": "The properties of the schedule.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string",
                                "description": "The status of the schedule (i.e. Enabled, Disabled)",
                                "default": "Disabled",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "EnableStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled"
                                    }
                                  ]
                                }
                              },
                              "taskType": {
                                "type": "string",
                                "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                              },
                              "weeklyRecurrence": {
                                "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                                "type": "object",
                                "properties": {
                                  "weekdays": {
                                    "type": "array",
                                    "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "time": {
                                    "type": "string",
                                    "description": "The time of the day the schedule will occur."
                                  }
                                }
                              },
                              "dailyRecurrence": {
                                "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                                "type": "object",
                                "properties": {
                                  "time": {
                                    "type": "string",
                                    "description": "The time of day the schedule will occur."
                                  }
                                }
                              },
                              "hourlyRecurrence": {
                                "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                                "type": "object",
                                "properties": {
                                  "minute": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Minutes of the hour the schedule will run."
                                  }
                                }
                              },
                              "timeZoneId": {
                                "type": "string",
                                "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                              },
                              "notificationSettings": {
                                "description": "Notification settings.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "type": "string",
                                    "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                    "default": "Disabled",
                                    "enum": [
                                      "Enabled",
                                      "Disabled"
                                    ],
                                    "x-ms-enum": {
                                      "name": "EnableStatus",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Enabled",
                                          "value": "Enabled"
                                        },
                                        {
                                          "name": "Disabled",
                                          "value": "Disabled"
                                        }
                                      ]
                                    }
                                  },
                                  "timeInMinutes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Time in minutes before event at which notification will be sent."
                                  },
                                  "webhookUrl": {
                                    "type": "string",
                                    "description": "The webhook URL to which the notification will be sent."
                                  },
                                  "emailRecipient": {
                                    "type": "string",
                                    "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                  },
                                  "notificationLocale": {
                                    "type": "string",
                                    "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                  }
                                }
                              },
                              "targetResourceId": {
                                "type": "string",
                                "description": "The resource ID to which the schedule belongs"
                              }
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the virtual machine or environment"
                          },
                          "location": {
                            "type": "string",
                            "description": "The location of the new virtual machine or environment",
                            "readOnly": true
                          },
                          "tags": {
                            "type": "object",
                            "description": "The tags of the resource.",
                            "additionalProperties": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "lastKnownPowerState": {
                      "type": "string",
                      "description": "Last known compute power state captured in DTL",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          },
          "201": {
            "description": "Resource 'LabVirtualMachine' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "A virtual machine.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "notes": {
                      "type": "string",
                      "description": "The notes of the virtual machine."
                    },
                    "ownerObjectId": {
                      "type": "string",
                      "description": "The object identifier of the owner of the virtual machine.",
                      "default": "dynamicValue"
                    },
                    "ownerUserPrincipalName": {
                      "type": "string",
                      "description": "The user principal name of the virtual machine owner."
                    },
                    "createdByUserId": {
                      "type": "string",
                      "description": "The object identifier of the creator of the virtual machine.",
                      "readOnly": true
                    },
                    "createdByUser": {
                      "type": "string",
                      "description": "The email address of creator of the virtual machine.",
                      "readOnly": true
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the virtual machine."
                    },
                    "computeId": {
                      "type": "string",
                      "description": "The resource identifier (Microsoft.Compute) of the virtual machine.",
                      "readOnly": true
                    },
                    "customImageId": {
                      "type": "string",
                      "description": "The custom image identifier of the virtual machine."
                    },
                    "osType": {
                      "type": "string",
                      "description": "The OS type of the virtual machine.",
                      "readOnly": true
                    },
                    "size": {
                      "type": "string",
                      "description": "The size of the virtual machine."
                    },
                    "userName": {
                      "type": "string",
                      "description": "The user name of the virtual machine."
                    },
                    "password": {
                      "type": "string",
                      "description": "The password of the virtual machine administrator."
                    },
                    "sshKey": {
                      "type": "string",
                      "description": "The SSH key of the virtual machine administrator."
                    },
                    "isAuthenticationWithSshKey": {
                      "type": "boolean",
                      "description": "Indicates whether this virtual machine uses an SSH key for authentication."
                    },
                    "fqdn": {
                      "type": "string",
                      "description": "The fully-qualified domain name of the virtual machine.",
                      "readOnly": true
                    },
                    "labSubnetName": {
                      "type": "string",
                      "description": "The lab subnet name of the virtual machine."
                    },
                    "labVirtualNetworkId": {
                      "type": "string",
                      "description": "The lab virtual network identifier of the virtual machine."
                    },
                    "disallowPublicIpAddress": {
                      "type": "boolean",
                      "description": "Indicates whether the virtual machine is to be created without a public IP address.",
                      "default": false
                    },
                    "artifacts": {
                      "type": "array",
                      "description": "The artifacts to be installed on the virtual machine.",
                      "items": {
                        "type": "object",
                        "description": "Properties of an artifact.",
                        "properties": {
                          "artifactId": {
                            "type": "string",
                            "description": "The artifact's identifier."
                          },
                          "artifactTitle": {
                            "type": "string",
                            "description": "The artifact's title."
                          },
                          "parameters": {
                            "type": "array",
                            "description": "The parameters of the artifact.",
                            "items": {
                              "type": "object",
                              "description": "Properties of an artifact parameter.",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name of the artifact parameter."
                                },
                                "value": {
                                  "type": "string",
                                  "description": "The value of the artifact parameter."
                                }
                              }
                            }
                          },
                          "status": {
                            "type": "string",
                            "description": "The status of the artifact."
                          },
                          "deploymentStatusMessage": {
                            "type": "string",
                            "description": "The status message from the deployment."
                          },
                          "vmExtensionStatusMessage": {
                            "type": "string",
                            "description": "The status message from the virtual machine extension."
                          },
                          "installTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time that the artifact starts to install on the virtual machine."
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "artifactDeploymentStatus": {
                      "description": "The artifact deployment status for the virtual machine.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "deploymentStatus": {
                          "type": "string",
                          "description": "The deployment status of the artifact."
                        },
                        "artifactsApplied": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The total count of the artifacts that were successfully applied."
                        },
                        "totalArtifacts": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The total count of the artifacts that were tentatively applied."
                        }
                      }
                    },
                    "galleryImageReference": {
                      "description": "The Microsoft Azure Marketplace image reference of the virtual machine.",
                      "type": "object",
                      "properties": {
                        "offer": {
                          "type": "string",
                          "description": "The offer of the gallery image."
                        },
                        "publisher": {
                          "type": "string",
                          "description": "The publisher of the gallery image."
                        },
                        "sku": {
                          "type": "string",
                          "description": "The SKU of the gallery image."
                        },
                        "osType": {
                          "type": "string",
                          "description": "The OS type of the gallery image."
                        },
                        "version": {
                          "type": "string",
                          "description": "The version of the gallery image."
                        }
                      }
                    },
                    "planId": {
                      "type": "string",
                      "description": "The id of the plan associated with the virtual machine image"
                    },
                    "computeVm": {
                      "description": "The compute virtual machine properties.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "statuses": {
                          "type": "array",
                          "description": "Gets the statuses of the virtual machine.",
                          "items": {
                            "type": "object",
                            "description": "Status information about a virtual machine.",
                            "properties": {
                              "code": {
                                "type": "string",
                                "description": "Gets the status Code."
                              },
                              "displayStatus": {
                                "type": "string",
                                "description": "Gets the short localizable label for the status."
                              },
                              "message": {
                                "type": "string",
                                "description": "Gets the message associated with the status."
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        },
                        "osType": {
                          "type": "string",
                          "description": "Gets the OS type of the virtual machine."
                        },
                        "vmSize": {
                          "type": "string",
                          "description": "Gets the size of the virtual machine."
                        },
                        "networkInterfaceId": {
                          "type": "string",
                          "description": "Gets the network interface ID of the virtual machine."
                        },
                        "osDiskId": {
                          "type": "string",
                          "description": "Gets OS disk blob uri for the virtual machine."
                        },
                        "dataDiskIds": {
                          "type": "array",
                          "description": "Gets data disks blob uri for the virtual machine.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "dataDisks": {
                          "type": "array",
                          "description": "Gets all data disks attached to the virtual machine.",
                          "items": {
                            "type": "object",
                            "description": "A data disks attached to a virtual machine.",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Gets data disk name."
                              },
                              "diskUri": {
                                "type": "string",
                                "description": "When backed by a blob, the URI of underlying blob."
                              },
                              "managedDiskId": {
                                "type": "string",
                                "description": "When backed by managed disk, this is the ID of the compute disk resource."
                              },
                              "diskSizeGiB": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Gets data disk size in GiB."
                              }
                            }
                          }
                        }
                      }
                    },
                    "networkInterface": {
                      "description": "The network interface properties.",
                      "type": "object",
                      "properties": {
                        "virtualNetworkId": {
                          "type": "string",
                          "description": "The resource ID of the virtual network."
                        },
                        "subnetId": {
                          "type": "string",
                          "description": "The resource ID of the sub net."
                        },
                        "publicIpAddressId": {
                          "type": "string",
                          "description": "The resource ID of the public IP address."
                        },
                        "publicIpAddress": {
                          "type": "string",
                          "description": "The public IP address."
                        },
                        "privateIpAddress": {
                          "type": "string",
                          "description": "The private IP address."
                        },
                        "dnsName": {
                          "type": "string",
                          "description": "The DNS name."
                        },
                        "rdpAuthority": {
                          "type": "string",
                          "description": "The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol)."
                        },
                        "sshAuthority": {
                          "type": "string",
                          "description": "The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH."
                        },
                        "sharedPublicIpAddressConfiguration": {
                          "description": "The configuration for sharing a public IP address across multiple virtual machines.",
                          "type": "object",
                          "properties": {
                            "inboundNatRules": {
                              "type": "array",
                              "description": "The incoming NAT rules",
                              "items": {
                                "type": "object",
                                "description": "A rule for NAT - exposing a VM's port (backendPort) on the public IP address using a load balancer.",
                                "properties": {
                                  "transportProtocol": {
                                    "description": "The transport protocol for the endpoint.",
                                    "type": "string",
                                    "enum": [
                                      "Tcp",
                                      "Udp"
                                    ],
                                    "x-ms-enum": {
                                      "name": "TransportProtocol",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Tcp",
                                          "value": "Tcp"
                                        },
                                        {
                                          "name": "Udp",
                                          "value": "Udp"
                                        }
                                      ]
                                    }
                                  },
                                  "frontendPort": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The external endpoint port of the inbound connection. Possible values range between 1 and 65535, inclusive. If unspecified, a value will be allocated automatically."
                                  },
                                  "backendPort": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The port to which the external traffic will be redirected."
                                  }
                                }
                              },
                              "x-ms-identifiers": []
                            }
                          }
                        }
                      }
                    },
                    "applicableSchedule": {
                      "type": "object",
                      "description": "Schedules applicable to a virtual machine. The schedules may have been defined on a VM or on lab level.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The identifier of the resource.",
                          "readOnly": true
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the resource.",
                          "readOnly": true
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of the resource.",
                          "readOnly": true
                        },
                        "location": {
                          "type": "string",
                          "description": "The location of the resource."
                        },
                        "tags": {
                          "type": "object",
                          "description": "The tags of the resource.",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "properties": {
                          "description": "The properties of the resource.",
                          "x-ms-client-flatten": true,
                          "type": "object",
                          "properties": {
                            "labVmsShutdown": {
                              "type": "object",
                              "description": "A schedule.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The identifier of the resource.",
                                  "readOnly": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the resource.",
                                  "readOnly": true
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the resource.",
                                  "readOnly": true
                                },
                                "location": {
                                  "type": "string",
                                  "description": "The location of the resource."
                                },
                                "tags": {
                                  "type": "object",
                                  "description": "The tags of the resource.",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "properties": {
                                  "description": "The properties of the resource.",
                                  "x-ms-client-flatten": true,
                                  "type": "object",
                                  "properties": {
                                    "status": {
                                      "type": "string",
                                      "description": "The status of the schedule (i.e. Enabled, Disabled)",
                                      "default": "Disabled",
                                      "enum": [
                                        "Enabled",
                                        "Disabled"
                                      ],
                                      "x-ms-enum": {
                                        "name": "EnableStatus",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Enabled",
                                            "value": "Enabled"
                                          },
                                          {
                                            "name": "Disabled",
                                            "value": "Disabled"
                                          }
                                        ]
                                      }
                                    },
                                    "taskType": {
                                      "type": "string",
                                      "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                                    },
                                    "weeklyRecurrence": {
                                      "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "weekdays": {
                                          "type": "array",
                                          "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "time": {
                                          "type": "string",
                                          "description": "The time of the day the schedule will occur."
                                        }
                                      }
                                    },
                                    "dailyRecurrence": {
                                      "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "time": {
                                          "type": "string",
                                          "description": "The time of day the schedule will occur."
                                        }
                                      }
                                    },
                                    "hourlyRecurrence": {
                                      "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "minute": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Minutes of the hour the schedule will run."
                                        }
                                      }
                                    },
                                    "timeZoneId": {
                                      "type": "string",
                                      "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                                    },
                                    "notificationSettings": {
                                      "description": "Notification settings.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "type": "string",
                                          "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                          "default": "Disabled",
                                          "enum": [
                                            "Enabled",
                                            "Disabled"
                                          ],
                                          "x-ms-enum": {
                                            "name": "EnableStatus",
                                            "modelAsString": true,
                                            "values": [
                                              {
                                                "name": "Enabled",
                                                "value": "Enabled"
                                              },
                                              {
                                                "name": "Disabled",
                                                "value": "Disabled"
                                              }
                                            ]
                                          }
                                        },
                                        "timeInMinutes": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Time in minutes before event at which notification will be sent."
                                        },
                                        "webhookUrl": {
                                          "type": "string",
                                          "description": "The webhook URL to which the notification will be sent."
                                        },
                                        "emailRecipient": {
                                          "type": "string",
                                          "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                        },
                                        "notificationLocale": {
                                          "type": "string",
                                          "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                        }
                                      }
                                    },
                                    "createdDate": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The creation date of the schedule.",
                                      "readOnly": true
                                    },
                                    "targetResourceId": {
                                      "type": "string",
                                      "description": "The resource ID to which the schedule belongs"
                                    },
                                    "provisioningState": {
                                      "type": "string",
                                      "description": "The provisioning status of the resource.",
                                      "readOnly": true
                                    },
                                    "uniqueIdentifier": {
                                      "type": "string",
                                      "description": "The unique immutable identifier of a resource (Guid).",
                                      "readOnly": true
                                    }
                                  }
                                }
                              },
                              "required": [
                                "properties"
                              ]
                            },
                            "labVmsStartup": {
                              "type": "object",
                              "description": "A schedule.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The identifier of the resource.",
                                  "readOnly": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the resource.",
                                  "readOnly": true
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the resource.",
                                  "readOnly": true
                                },
                                "location": {
                                  "type": "string",
                                  "description": "The location of the resource."
                                },
                                "tags": {
                                  "type": "object",
                                  "description": "The tags of the resource.",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "properties": {
                                  "description": "The properties of the resource.",
                                  "x-ms-client-flatten": true,
                                  "type": "object",
                                  "properties": {
                                    "status": {
                                      "type": "string",
                                      "description": "The status of the schedule (i.e. Enabled, Disabled)",
                                      "default": "Disabled",
                                      "enum": [
                                        "Enabled",
                                        "Disabled"
                                      ],
                                      "x-ms-enum": {
                                        "name": "EnableStatus",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Enabled",
                                            "value": "Enabled"
                                          },
                                          {
                                            "name": "Disabled",
                                            "value": "Disabled"
                                          }
                                        ]
                                      }
                                    },
                                    "taskType": {
                                      "type": "string",
                                      "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                                    },
                                    "weeklyRecurrence": {
                                      "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "weekdays": {
                                          "type": "array",
                                          "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "time": {
                                          "type": "string",
                                          "description": "The time of the day the schedule will occur."
                                        }
                                      }
                                    },
                                    "dailyRecurrence": {
                                      "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "time": {
                                          "type": "string",
                                          "description": "The time of day the schedule will occur."
                                        }
                                      }
                                    },
                                    "hourlyRecurrence": {
                                      "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "minute": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Minutes of the hour the schedule will run."
                                        }
                                      }
                                    },
                                    "timeZoneId": {
                                      "type": "string",
                                      "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                                    },
                                    "notificationSettings": {
                                      "description": "Notification settings.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "type": "string",
                                          "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                          "default": "Disabled",
                                          "enum": [
                                            "Enabled",
                                            "Disabled"
                                          ],
                                          "x-ms-enum": {
                                            "name": "EnableStatus",
                                            "modelAsString": true,
                                            "values": [
                                              {
                                                "name": "Enabled",
                                                "value": "Enabled"
                                              },
                                              {
                                                "name": "Disabled",
                                                "value": "Disabled"
                                              }
                                            ]
                                          }
                                        },
                                        "timeInMinutes": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Time in minutes before event at which notification will be sent."
                                        },
                                        "webhookUrl": {
                                          "type": "string",
                                          "description": "The webhook URL to which the notification will be sent."
                                        },
                                        "emailRecipient": {
                                          "type": "string",
                                          "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                        },
                                        "notificationLocale": {
                                          "type": "string",
                                          "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                        }
                                      }
                                    },
                                    "createdDate": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The creation date of the schedule.",
                                      "readOnly": true
                                    },
                                    "targetResourceId": {
                                      "type": "string",
                                      "description": "The resource ID to which the schedule belongs"
                                    },
                                    "provisioningState": {
                                      "type": "string",
                                      "description": "The provisioning status of the resource.",
                                      "readOnly": true
                                    },
                                    "uniqueIdentifier": {
                                      "type": "string",
                                      "description": "The unique immutable identifier of a resource (Guid).",
                                      "readOnly": true
                                    }
                                  }
                                }
                              },
                              "required": [
                                "properties"
                              ]
                            }
                          }
                        }
                      },
                      "required": [
                        "properties"
                      ],
                      "readOnly": true
                    },
                    "expirationDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The expiration date for VM."
                    },
                    "allowClaim": {
                      "type": "boolean",
                      "description": "Indicates whether another user can take ownership of the virtual machine",
                      "default": false
                    },
                    "storageType": {
                      "type": "string",
                      "description": "Storage type to use for virtual machine (i.e. Standard, Premium).",
                      "default": "labStorageType"
                    },
                    "virtualMachineCreationSource": {
                      "description": "Tells source of creation of lab virtual machine. Output property only.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "FromCustomImage",
                        "FromGalleryImage",
                        "FromSharedGalleryImage"
                      ],
                      "x-ms-enum": {
                        "name": "VirtualMachineCreationSource",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "FromCustomImage",
                            "value": "FromCustomImage"
                          },
                          {
                            "name": "FromGalleryImage",
                            "value": "FromGalleryImage"
                          },
                          {
                            "name": "FromSharedGalleryImage",
                            "value": "FromSharedGalleryImage"
                          }
                        ]
                      }
                    },
                    "environmentId": {
                      "type": "string",
                      "description": "The resource ID of the environment that contains this virtual machine, if any."
                    },
                    "dataDiskParameters": {
                      "type": "array",
                      "description": "New or existing data disks to attach to the virtual machine after creation",
                      "items": {
                        "type": "object",
                        "description": "Request body for adding a new or existing data disk to a virtual machine.",
                        "properties": {
                          "attachNewDataDiskOptions": {
                            "description": "Specifies options to attach a new disk to the virtual machine.",
                            "type": "object",
                            "properties": {
                              "diskSizeGiB": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Size of the disk to be attached in Gibibytes."
                              },
                              "diskName": {
                                "type": "string",
                                "description": "The name of the disk to be attached."
                              },
                              "diskType": {
                                "description": "The storage type for the disk (i.e. Standard, Premium).",
                                "type": "string",
                                "enum": [
                                  "Standard",
                                  "Premium",
                                  "StandardSSD"
                                ],
                                "x-ms-enum": {
                                  "name": "StorageType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Standard",
                                      "value": "Standard"
                                    },
                                    {
                                      "name": "Premium",
                                      "value": "Premium"
                                    },
                                    {
                                      "name": "StandardSSD",
                                      "value": "StandardSSD"
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "existingLabDiskId": {
                            "type": "string",
                            "description": "Specifies the existing lab disk id to attach to virtual machine."
                          },
                          "hostCaching": {
                            "description": "Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).",
                            "type": "string",
                            "enum": [
                              "None",
                              "ReadOnly",
                              "ReadWrite"
                            ],
                            "x-ms-enum": {
                              "name": "HostCachingOptions",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "None",
                                  "value": "None"
                                },
                                {
                                  "name": "ReadOnly",
                                  "value": "ReadOnly"
                                },
                                {
                                  "name": "ReadWrite",
                                  "value": "ReadWrite"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "scheduleParameters": {
                      "type": "array",
                      "description": "Virtual Machine schedules to be created",
                      "items": {
                        "type": "object",
                        "description": "Properties for creating a schedule.",
                        "properties": {
                          "properties": {
                            "description": "The properties of the schedule.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string",
                                "description": "The status of the schedule (i.e. Enabled, Disabled)",
                                "default": "Disabled",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "EnableStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled"
                                    }
                                  ]
                                }
                              },
                              "taskType": {
                                "type": "string",
                                "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                              },
                              "weeklyRecurrence": {
                                "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                                "type": "object",
                                "properties": {
                                  "weekdays": {
                                    "type": "array",
                                    "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "time": {
                                    "type": "string",
                                    "description": "The time of the day the schedule will occur."
                                  }
                                }
                              },
                              "dailyRecurrence": {
                                "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                                "type": "object",
                                "properties": {
                                  "time": {
                                    "type": "string",
                                    "description": "The time of day the schedule will occur."
                                  }
                                }
                              },
                              "hourlyRecurrence": {
                                "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                                "type": "object",
                                "properties": {
                                  "minute": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Minutes of the hour the schedule will run."
                                  }
                                }
                              },
                              "timeZoneId": {
                                "type": "string",
                                "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                              },
                              "notificationSettings": {
                                "description": "Notification settings.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "type": "string",
                                    "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                    "default": "Disabled",
                                    "enum": [
                                      "Enabled",
                                      "Disabled"
                                    ],
                                    "x-ms-enum": {
                                      "name": "EnableStatus",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Enabled",
                                          "value": "Enabled"
                                        },
                                        {
                                          "name": "Disabled",
                                          "value": "Disabled"
                                        }
                                      ]
                                    }
                                  },
                                  "timeInMinutes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Time in minutes before event at which notification will be sent."
                                  },
                                  "webhookUrl": {
                                    "type": "string",
                                    "description": "The webhook URL to which the notification will be sent."
                                  },
                                  "emailRecipient": {
                                    "type": "string",
                                    "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                  },
                                  "notificationLocale": {
                                    "type": "string",
                                    "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                  }
                                }
                              },
                              "targetResourceId": {
                                "type": "string",
                                "description": "The resource ID to which the schedule belongs"
                              }
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the virtual machine or environment"
                          },
                          "location": {
                            "type": "string",
                            "description": "The location of the new virtual machine or environment",
                            "readOnly": true
                          },
                          "tags": {
                            "type": "object",
                            "description": "The tags of the resource.",
                            "additionalProperties": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "lastKnownPowerState": {
                      "type": "string",
                      "description": "Last known compute power state captured in DTL",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "VirtualMachines_Update",
        "tags": [
          "VirtualMachines"
        ],
        "description": "Allows modifying tags of virtual machines. All other properties will be ignored.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the LabVirtualMachine",
            "required": true,
            "type": "string"
          },
          {
            "name": "labVirtualMachine",
            "in": "body",
            "description": "A virtual machine.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A virtual machine.",
              "properties": {
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A virtual machine.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "notes": {
                      "type": "string",
                      "description": "The notes of the virtual machine."
                    },
                    "ownerObjectId": {
                      "type": "string",
                      "description": "The object identifier of the owner of the virtual machine.",
                      "default": "dynamicValue"
                    },
                    "ownerUserPrincipalName": {
                      "type": "string",
                      "description": "The user principal name of the virtual machine owner."
                    },
                    "createdByUserId": {
                      "type": "string",
                      "description": "The object identifier of the creator of the virtual machine.",
                      "readOnly": true
                    },
                    "createdByUser": {
                      "type": "string",
                      "description": "The email address of creator of the virtual machine.",
                      "readOnly": true
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the virtual machine."
                    },
                    "computeId": {
                      "type": "string",
                      "description": "The resource identifier (Microsoft.Compute) of the virtual machine.",
                      "readOnly": true
                    },
                    "customImageId": {
                      "type": "string",
                      "description": "The custom image identifier of the virtual machine."
                    },
                    "osType": {
                      "type": "string",
                      "description": "The OS type of the virtual machine.",
                      "readOnly": true
                    },
                    "size": {
                      "type": "string",
                      "description": "The size of the virtual machine."
                    },
                    "userName": {
                      "type": "string",
                      "description": "The user name of the virtual machine."
                    },
                    "password": {
                      "type": "string",
                      "description": "The password of the virtual machine administrator."
                    },
                    "sshKey": {
                      "type": "string",
                      "description": "The SSH key of the virtual machine administrator."
                    },
                    "isAuthenticationWithSshKey": {
                      "type": "boolean",
                      "description": "Indicates whether this virtual machine uses an SSH key for authentication."
                    },
                    "fqdn": {
                      "type": "string",
                      "description": "The fully-qualified domain name of the virtual machine.",
                      "readOnly": true
                    },
                    "labSubnetName": {
                      "type": "string",
                      "description": "The lab subnet name of the virtual machine."
                    },
                    "labVirtualNetworkId": {
                      "type": "string",
                      "description": "The lab virtual network identifier of the virtual machine."
                    },
                    "disallowPublicIpAddress": {
                      "type": "boolean",
                      "description": "Indicates whether the virtual machine is to be created without a public IP address.",
                      "default": false
                    },
                    "artifacts": {
                      "type": "array",
                      "description": "The artifacts to be installed on the virtual machine.",
                      "items": {
                        "type": "object",
                        "description": "Properties of an artifact.",
                        "properties": {
                          "artifactId": {
                            "type": "string",
                            "description": "The artifact's identifier."
                          },
                          "artifactTitle": {
                            "type": "string",
                            "description": "The artifact's title."
                          },
                          "parameters": {
                            "type": "array",
                            "description": "The parameters of the artifact.",
                            "items": {
                              "type": "object",
                              "description": "Properties of an artifact parameter.",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name of the artifact parameter."
                                },
                                "value": {
                                  "type": "string",
                                  "description": "The value of the artifact parameter."
                                }
                              }
                            }
                          },
                          "status": {
                            "type": "string",
                            "description": "The status of the artifact."
                          },
                          "deploymentStatusMessage": {
                            "type": "string",
                            "description": "The status message from the deployment."
                          },
                          "vmExtensionStatusMessage": {
                            "type": "string",
                            "description": "The status message from the virtual machine extension."
                          },
                          "installTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time that the artifact starts to install on the virtual machine."
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "artifactDeploymentStatus": {
                      "description": "The artifact deployment status for the virtual machine.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "deploymentStatus": {
                          "type": "string",
                          "description": "The deployment status of the artifact."
                        },
                        "artifactsApplied": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The total count of the artifacts that were successfully applied."
                        },
                        "totalArtifacts": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The total count of the artifacts that were tentatively applied."
                        }
                      }
                    },
                    "galleryImageReference": {
                      "description": "The Microsoft Azure Marketplace image reference of the virtual machine.",
                      "type": "object",
                      "properties": {
                        "offer": {
                          "type": "string",
                          "description": "The offer of the gallery image."
                        },
                        "publisher": {
                          "type": "string",
                          "description": "The publisher of the gallery image."
                        },
                        "sku": {
                          "type": "string",
                          "description": "The SKU of the gallery image."
                        },
                        "osType": {
                          "type": "string",
                          "description": "The OS type of the gallery image."
                        },
                        "version": {
                          "type": "string",
                          "description": "The version of the gallery image."
                        }
                      }
                    },
                    "planId": {
                      "type": "string",
                      "description": "The id of the plan associated with the virtual machine image"
                    },
                    "computeVm": {
                      "description": "The compute virtual machine properties.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "statuses": {
                          "type": "array",
                          "description": "Gets the statuses of the virtual machine.",
                          "items": {
                            "type": "object",
                            "description": "Status information about a virtual machine.",
                            "properties": {
                              "code": {
                                "type": "string",
                                "description": "Gets the status Code."
                              },
                              "displayStatus": {
                                "type": "string",
                                "description": "Gets the short localizable label for the status."
                              },
                              "message": {
                                "type": "string",
                                "description": "Gets the message associated with the status."
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        },
                        "osType": {
                          "type": "string",
                          "description": "Gets the OS type of the virtual machine."
                        },
                        "vmSize": {
                          "type": "string",
                          "description": "Gets the size of the virtual machine."
                        },
                        "networkInterfaceId": {
                          "type": "string",
                          "description": "Gets the network interface ID of the virtual machine."
                        },
                        "osDiskId": {
                          "type": "string",
                          "description": "Gets OS disk blob uri for the virtual machine."
                        },
                        "dataDiskIds": {
                          "type": "array",
                          "description": "Gets data disks blob uri for the virtual machine.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "dataDisks": {
                          "type": "array",
                          "description": "Gets all data disks attached to the virtual machine.",
                          "items": {
                            "type": "object",
                            "description": "A data disks attached to a virtual machine.",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Gets data disk name."
                              },
                              "diskUri": {
                                "type": "string",
                                "description": "When backed by a blob, the URI of underlying blob."
                              },
                              "managedDiskId": {
                                "type": "string",
                                "description": "When backed by managed disk, this is the ID of the compute disk resource."
                              },
                              "diskSizeGiB": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Gets data disk size in GiB."
                              }
                            }
                          }
                        }
                      }
                    },
                    "networkInterface": {
                      "description": "The network interface properties.",
                      "type": "object",
                      "properties": {
                        "virtualNetworkId": {
                          "type": "string",
                          "description": "The resource ID of the virtual network."
                        },
                        "subnetId": {
                          "type": "string",
                          "description": "The resource ID of the sub net."
                        },
                        "publicIpAddressId": {
                          "type": "string",
                          "description": "The resource ID of the public IP address."
                        },
                        "publicIpAddress": {
                          "type": "string",
                          "description": "The public IP address."
                        },
                        "privateIpAddress": {
                          "type": "string",
                          "description": "The private IP address."
                        },
                        "dnsName": {
                          "type": "string",
                          "description": "The DNS name."
                        },
                        "rdpAuthority": {
                          "type": "string",
                          "description": "The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol)."
                        },
                        "sshAuthority": {
                          "type": "string",
                          "description": "The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH."
                        },
                        "sharedPublicIpAddressConfiguration": {
                          "description": "The configuration for sharing a public IP address across multiple virtual machines.",
                          "type": "object",
                          "properties": {
                            "inboundNatRules": {
                              "type": "array",
                              "description": "The incoming NAT rules",
                              "items": {
                                "type": "object",
                                "description": "A rule for NAT - exposing a VM's port (backendPort) on the public IP address using a load balancer.",
                                "properties": {
                                  "transportProtocol": {
                                    "description": "The transport protocol for the endpoint.",
                                    "type": "string",
                                    "enum": [
                                      "Tcp",
                                      "Udp"
                                    ],
                                    "x-ms-enum": {
                                      "name": "TransportProtocol",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Tcp",
                                          "value": "Tcp"
                                        },
                                        {
                                          "name": "Udp",
                                          "value": "Udp"
                                        }
                                      ]
                                    }
                                  },
                                  "frontendPort": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The external endpoint port of the inbound connection. Possible values range between 1 and 65535, inclusive. If unspecified, a value will be allocated automatically."
                                  },
                                  "backendPort": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The port to which the external traffic will be redirected."
                                  }
                                }
                              },
                              "x-ms-identifiers": []
                            }
                          }
                        }
                      }
                    },
                    "applicableSchedule": {
                      "type": "object",
                      "description": "Schedules applicable to a virtual machine. The schedules may have been defined on a VM or on lab level.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The identifier of the resource.",
                          "readOnly": true
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the resource.",
                          "readOnly": true
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of the resource.",
                          "readOnly": true
                        },
                        "location": {
                          "type": "string",
                          "description": "The location of the resource."
                        },
                        "tags": {
                          "type": "object",
                          "description": "The tags of the resource.",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "properties": {
                          "description": "The properties of the resource.",
                          "x-ms-client-flatten": true,
                          "type": "object",
                          "properties": {
                            "labVmsShutdown": {
                              "type": "object",
                              "description": "A schedule.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The identifier of the resource.",
                                  "readOnly": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the resource.",
                                  "readOnly": true
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the resource.",
                                  "readOnly": true
                                },
                                "location": {
                                  "type": "string",
                                  "description": "The location of the resource."
                                },
                                "tags": {
                                  "type": "object",
                                  "description": "The tags of the resource.",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "properties": {
                                  "description": "The properties of the resource.",
                                  "x-ms-client-flatten": true,
                                  "type": "object",
                                  "properties": {
                                    "status": {
                                      "type": "string",
                                      "description": "The status of the schedule (i.e. Enabled, Disabled)",
                                      "default": "Disabled",
                                      "enum": [
                                        "Enabled",
                                        "Disabled"
                                      ],
                                      "x-ms-enum": {
                                        "name": "EnableStatus",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Enabled",
                                            "value": "Enabled"
                                          },
                                          {
                                            "name": "Disabled",
                                            "value": "Disabled"
                                          }
                                        ]
                                      }
                                    },
                                    "taskType": {
                                      "type": "string",
                                      "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                                    },
                                    "weeklyRecurrence": {
                                      "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "weekdays": {
                                          "type": "array",
                                          "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "time": {
                                          "type": "string",
                                          "description": "The time of the day the schedule will occur."
                                        }
                                      }
                                    },
                                    "dailyRecurrence": {
                                      "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "time": {
                                          "type": "string",
                                          "description": "The time of day the schedule will occur."
                                        }
                                      }
                                    },
                                    "hourlyRecurrence": {
                                      "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "minute": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Minutes of the hour the schedule will run."
                                        }
                                      }
                                    },
                                    "timeZoneId": {
                                      "type": "string",
                                      "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                                    },
                                    "notificationSettings": {
                                      "description": "Notification settings.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "type": "string",
                                          "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                          "default": "Disabled",
                                          "enum": [
                                            "Enabled",
                                            "Disabled"
                                          ],
                                          "x-ms-enum": {
                                            "name": "EnableStatus",
                                            "modelAsString": true,
                                            "values": [
                                              {
                                                "name": "Enabled",
                                                "value": "Enabled"
                                              },
                                              {
                                                "name": "Disabled",
                                                "value": "Disabled"
                                              }
                                            ]
                                          }
                                        },
                                        "timeInMinutes": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Time in minutes before event at which notification will be sent."
                                        },
                                        "webhookUrl": {
                                          "type": "string",
                                          "description": "The webhook URL to which the notification will be sent."
                                        },
                                        "emailRecipient": {
                                          "type": "string",
                                          "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                        },
                                        "notificationLocale": {
                                          "type": "string",
                                          "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                        }
                                      }
                                    },
                                    "createdDate": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The creation date of the schedule.",
                                      "readOnly": true
                                    },
                                    "targetResourceId": {
                                      "type": "string",
                                      "description": "The resource ID to which the schedule belongs"
                                    },
                                    "provisioningState": {
                                      "type": "string",
                                      "description": "The provisioning status of the resource.",
                                      "readOnly": true
                                    },
                                    "uniqueIdentifier": {
                                      "type": "string",
                                      "description": "The unique immutable identifier of a resource (Guid).",
                                      "readOnly": true
                                    }
                                  }
                                }
                              },
                              "required": [
                                "properties"
                              ]
                            },
                            "labVmsStartup": {
                              "type": "object",
                              "description": "A schedule.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The identifier of the resource.",
                                  "readOnly": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the resource.",
                                  "readOnly": true
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the resource.",
                                  "readOnly": true
                                },
                                "location": {
                                  "type": "string",
                                  "description": "The location of the resource."
                                },
                                "tags": {
                                  "type": "object",
                                  "description": "The tags of the resource.",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "properties": {
                                  "description": "The properties of the resource.",
                                  "x-ms-client-flatten": true,
                                  "type": "object",
                                  "properties": {
                                    "status": {
                                      "type": "string",
                                      "description": "The status of the schedule (i.e. Enabled, Disabled)",
                                      "default": "Disabled",
                                      "enum": [
                                        "Enabled",
                                        "Disabled"
                                      ],
                                      "x-ms-enum": {
                                        "name": "EnableStatus",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Enabled",
                                            "value": "Enabled"
                                          },
                                          {
                                            "name": "Disabled",
                                            "value": "Disabled"
                                          }
                                        ]
                                      }
                                    },
                                    "taskType": {
                                      "type": "string",
                                      "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                                    },
                                    "weeklyRecurrence": {
                                      "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "weekdays": {
                                          "type": "array",
                                          "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "time": {
                                          "type": "string",
                                          "description": "The time of the day the schedule will occur."
                                        }
                                      }
                                    },
                                    "dailyRecurrence": {
                                      "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "time": {
                                          "type": "string",
                                          "description": "The time of day the schedule will occur."
                                        }
                                      }
                                    },
                                    "hourlyRecurrence": {
                                      "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "minute": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Minutes of the hour the schedule will run."
                                        }
                                      }
                                    },
                                    "timeZoneId": {
                                      "type": "string",
                                      "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                                    },
                                    "notificationSettings": {
                                      "description": "Notification settings.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "type": "string",
                                          "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                          "default": "Disabled",
                                          "enum": [
                                            "Enabled",
                                            "Disabled"
                                          ],
                                          "x-ms-enum": {
                                            "name": "EnableStatus",
                                            "modelAsString": true,
                                            "values": [
                                              {
                                                "name": "Enabled",
                                                "value": "Enabled"
                                              },
                                              {
                                                "name": "Disabled",
                                                "value": "Disabled"
                                              }
                                            ]
                                          }
                                        },
                                        "timeInMinutes": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Time in minutes before event at which notification will be sent."
                                        },
                                        "webhookUrl": {
                                          "type": "string",
                                          "description": "The webhook URL to which the notification will be sent."
                                        },
                                        "emailRecipient": {
                                          "type": "string",
                                          "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                        },
                                        "notificationLocale": {
                                          "type": "string",
                                          "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                        }
                                      }
                                    },
                                    "createdDate": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The creation date of the schedule.",
                                      "readOnly": true
                                    },
                                    "targetResourceId": {
                                      "type": "string",
                                      "description": "The resource ID to which the schedule belongs"
                                    },
                                    "provisioningState": {
                                      "type": "string",
                                      "description": "The provisioning status of the resource.",
                                      "readOnly": true
                                    },
                                    "uniqueIdentifier": {
                                      "type": "string",
                                      "description": "The unique immutable identifier of a resource (Guid).",
                                      "readOnly": true
                                    }
                                  }
                                }
                              },
                              "required": [
                                "properties"
                              ]
                            }
                          }
                        }
                      },
                      "required": [
                        "properties"
                      ],
                      "readOnly": true
                    },
                    "expirationDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The expiration date for VM."
                    },
                    "allowClaim": {
                      "type": "boolean",
                      "description": "Indicates whether another user can take ownership of the virtual machine",
                      "default": false
                    },
                    "storageType": {
                      "type": "string",
                      "description": "Storage type to use for virtual machine (i.e. Standard, Premium).",
                      "default": "labStorageType"
                    },
                    "virtualMachineCreationSource": {
                      "description": "Tells source of creation of lab virtual machine. Output property only.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "FromCustomImage",
                        "FromGalleryImage",
                        "FromSharedGalleryImage"
                      ],
                      "x-ms-enum": {
                        "name": "VirtualMachineCreationSource",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "FromCustomImage",
                            "value": "FromCustomImage"
                          },
                          {
                            "name": "FromGalleryImage",
                            "value": "FromGalleryImage"
                          },
                          {
                            "name": "FromSharedGalleryImage",
                            "value": "FromSharedGalleryImage"
                          }
                        ]
                      }
                    },
                    "environmentId": {
                      "type": "string",
                      "description": "The resource ID of the environment that contains this virtual machine, if any."
                    },
                    "dataDiskParameters": {
                      "type": "array",
                      "description": "New or existing data disks to attach to the virtual machine after creation",
                      "items": {
                        "type": "object",
                        "description": "Request body for adding a new or existing data disk to a virtual machine.",
                        "properties": {
                          "attachNewDataDiskOptions": {
                            "description": "Specifies options to attach a new disk to the virtual machine.",
                            "type": "object",
                            "properties": {
                              "diskSizeGiB": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Size of the disk to be attached in Gibibytes."
                              },
                              "diskName": {
                                "type": "string",
                                "description": "The name of the disk to be attached."
                              },
                              "diskType": {
                                "description": "The storage type for the disk (i.e. Standard, Premium).",
                                "type": "string",
                                "enum": [
                                  "Standard",
                                  "Premium",
                                  "StandardSSD"
                                ],
                                "x-ms-enum": {
                                  "name": "StorageType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Standard",
                                      "value": "Standard"
                                    },
                                    {
                                      "name": "Premium",
                                      "value": "Premium"
                                    },
                                    {
                                      "name": "StandardSSD",
                                      "value": "StandardSSD"
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "existingLabDiskId": {
                            "type": "string",
                            "description": "Specifies the existing lab disk id to attach to virtual machine."
                          },
                          "hostCaching": {
                            "description": "Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).",
                            "type": "string",
                            "enum": [
                              "None",
                              "ReadOnly",
                              "ReadWrite"
                            ],
                            "x-ms-enum": {
                              "name": "HostCachingOptions",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "None",
                                  "value": "None"
                                },
                                {
                                  "name": "ReadOnly",
                                  "value": "ReadOnly"
                                },
                                {
                                  "name": "ReadWrite",
                                  "value": "ReadWrite"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "scheduleParameters": {
                      "type": "array",
                      "description": "Virtual Machine schedules to be created",
                      "items": {
                        "type": "object",
                        "description": "Properties for creating a schedule.",
                        "properties": {
                          "properties": {
                            "description": "The properties of the schedule.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string",
                                "description": "The status of the schedule (i.e. Enabled, Disabled)",
                                "default": "Disabled",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "EnableStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled"
                                    }
                                  ]
                                }
                              },
                              "taskType": {
                                "type": "string",
                                "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                              },
                              "weeklyRecurrence": {
                                "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                                "type": "object",
                                "properties": {
                                  "weekdays": {
                                    "type": "array",
                                    "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "time": {
                                    "type": "string",
                                    "description": "The time of the day the schedule will occur."
                                  }
                                }
                              },
                              "dailyRecurrence": {
                                "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                                "type": "object",
                                "properties": {
                                  "time": {
                                    "type": "string",
                                    "description": "The time of day the schedule will occur."
                                  }
                                }
                              },
                              "hourlyRecurrence": {
                                "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                                "type": "object",
                                "properties": {
                                  "minute": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Minutes of the hour the schedule will run."
                                  }
                                }
                              },
                              "timeZoneId": {
                                "type": "string",
                                "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                              },
                              "notificationSettings": {
                                "description": "Notification settings.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "type": "string",
                                    "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                    "default": "Disabled",
                                    "enum": [
                                      "Enabled",
                                      "Disabled"
                                    ],
                                    "x-ms-enum": {
                                      "name": "EnableStatus",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Enabled",
                                          "value": "Enabled"
                                        },
                                        {
                                          "name": "Disabled",
                                          "value": "Disabled"
                                        }
                                      ]
                                    }
                                  },
                                  "timeInMinutes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Time in minutes before event at which notification will be sent."
                                  },
                                  "webhookUrl": {
                                    "type": "string",
                                    "description": "The webhook URL to which the notification will be sent."
                                  },
                                  "emailRecipient": {
                                    "type": "string",
                                    "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                  },
                                  "notificationLocale": {
                                    "type": "string",
                                    "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                  }
                                }
                              },
                              "targetResourceId": {
                                "type": "string",
                                "description": "The resource ID to which the schedule belongs"
                              }
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the virtual machine or environment"
                          },
                          "location": {
                            "type": "string",
                            "description": "The location of the new virtual machine or environment",
                            "readOnly": true
                          },
                          "tags": {
                            "type": "object",
                            "description": "The tags of the resource.",
                            "additionalProperties": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "lastKnownPowerState": {
                      "type": "string",
                      "description": "Last known compute power state captured in DTL",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "delete": {
        "operationId": "VirtualMachines_Delete",
        "tags": [
          "VirtualMachines"
        ],
        "description": "Delete virtual machine. This operation can take a while to complete.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the LabVirtualMachine",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/addDataDisk": {
      "post": {
        "operationId": "VirtualMachines_AddDataDisk",
        "tags": [
          "VirtualMachines"
        ],
        "description": "Attach a new or existing data disk to virtual machine. This operation can take a while to complete.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the LabVirtualMachine",
            "required": true,
            "type": "string"
          },
          {
            "name": "dataDiskProperties",
            "in": "body",
            "description": "Request body for adding a new or existing data disk to a virtual machine.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Request body for adding a new or existing data disk to a virtual machine.",
              "properties": {
                "attachNewDataDiskOptions": {
                  "description": "Specifies options to attach a new disk to the virtual machine.",
                  "type": "object",
                  "properties": {
                    "diskSizeGiB": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Size of the disk to be attached in Gibibytes."
                    },
                    "diskName": {
                      "type": "string",
                      "description": "The name of the disk to be attached."
                    },
                    "diskType": {
                      "description": "The storage type for the disk (i.e. Standard, Premium).",
                      "type": "string",
                      "enum": [
                        "Standard",
                        "Premium",
                        "StandardSSD"
                      ],
                      "x-ms-enum": {
                        "name": "StorageType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Standard",
                            "value": "Standard"
                          },
                          {
                            "name": "Premium",
                            "value": "Premium"
                          },
                          {
                            "name": "StandardSSD",
                            "value": "StandardSSD"
                          }
                        ]
                      }
                    }
                  }
                },
                "existingLabDiskId": {
                  "type": "string",
                  "description": "Specifies the existing lab disk id to attach to virtual machine."
                },
                "hostCaching": {
                  "description": "Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).",
                  "type": "string",
                  "enum": [
                    "None",
                    "ReadOnly",
                    "ReadWrite"
                  ],
                  "x-ms-enum": {
                    "name": "HostCachingOptions",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "None",
                        "value": "None"
                      },
                      {
                        "name": "ReadOnly",
                        "value": "ReadOnly"
                      },
                      {
                        "name": "ReadWrite",
                        "value": "ReadWrite"
                      }
                    ]
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/applyArtifacts": {
      "post": {
        "operationId": "VirtualMachines_ApplyArtifacts",
        "tags": [
          "VirtualMachines"
        ],
        "description": "Apply artifacts to virtual machine. This operation can take a while to complete.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the LabVirtualMachine",
            "required": true,
            "type": "string"
          },
          {
            "name": "applyArtifactsRequest",
            "in": "body",
            "description": "Request body for applying artifacts to a virtual machine.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Request body for applying artifacts to a virtual machine.",
              "properties": {
                "artifacts": {
                  "type": "array",
                  "description": "The list of artifacts to apply.",
                  "items": {
                    "type": "object",
                    "description": "Properties of an artifact.",
                    "properties": {
                      "artifactId": {
                        "type": "string",
                        "description": "The artifact's identifier."
                      },
                      "artifactTitle": {
                        "type": "string",
                        "description": "The artifact's title."
                      },
                      "parameters": {
                        "type": "array",
                        "description": "The parameters of the artifact.",
                        "items": {
                          "type": "object",
                          "description": "Properties of an artifact parameter.",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of the artifact parameter."
                            },
                            "value": {
                              "type": "string",
                              "description": "The value of the artifact parameter."
                            }
                          }
                        }
                      },
                      "status": {
                        "type": "string",
                        "description": "The status of the artifact."
                      },
                      "deploymentStatusMessage": {
                        "type": "string",
                        "description": "The status message from the deployment."
                      },
                      "vmExtensionStatusMessage": {
                        "type": "string",
                        "description": "The status message from the virtual machine extension."
                      },
                      "installTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time that the artifact starts to install on the virtual machine."
                      }
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/claim": {
      "post": {
        "operationId": "VirtualMachines_Claim",
        "tags": [
          "VirtualMachines"
        ],
        "description": "Take ownership of an existing virtual machine This operation can take a while to complete.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the LabVirtualMachine",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/detachDataDisk": {
      "post": {
        "operationId": "VirtualMachines_DetachDataDisk",
        "tags": [
          "VirtualMachines"
        ],
        "description": "Detach the specified disk from the virtual machine. This operation can take a while to complete.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the LabVirtualMachine",
            "required": true,
            "type": "string"
          },
          {
            "name": "detachDataDiskProperties",
            "in": "body",
            "description": "Request body for detaching data disk from a virtual machine.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Request body for detaching data disk from a virtual machine.",
              "properties": {
                "existingLabDiskId": {
                  "type": "string",
                  "description": "Specifies the disk resource ID to detach from virtual machine."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/getRdpFileContents": {
      "post": {
        "operationId": "VirtualMachines_GetRdpFileContents",
        "tags": [
          "VirtualMachines"
        ],
        "description": "Gets a string that represents the contents of the RDP file for the virtual machine",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the LabVirtualMachine",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Represents a .rdp file",
              "properties": {
                "contents": {
                  "type": "string",
                  "description": "The contents of the .rdp file"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/listApplicableSchedules": {
      "post": {
        "operationId": "VirtualMachines_ListApplicableSchedules",
        "tags": [
          "VirtualMachines"
        ],
        "description": "Lists the applicable start/stop schedules, if any.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the LabVirtualMachine",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Schedules applicable to a virtual machine. The schedules may have been defined on a VM or on lab level.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "labVmsShutdown": {
                      "type": "object",
                      "description": "A schedule.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The identifier of the resource.",
                          "readOnly": true
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the resource.",
                          "readOnly": true
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of the resource.",
                          "readOnly": true
                        },
                        "location": {
                          "type": "string",
                          "description": "The location of the resource."
                        },
                        "tags": {
                          "type": "object",
                          "description": "The tags of the resource.",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "properties": {
                          "description": "The properties of the resource.",
                          "x-ms-client-flatten": true,
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "description": "The status of the schedule (i.e. Enabled, Disabled)",
                              "default": "Disabled",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "EnableStatus",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            },
                            "taskType": {
                              "type": "string",
                              "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                            },
                            "weeklyRecurrence": {
                              "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                              "type": "object",
                              "properties": {
                                "weekdays": {
                                  "type": "array",
                                  "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "time": {
                                  "type": "string",
                                  "description": "The time of the day the schedule will occur."
                                }
                              }
                            },
                            "dailyRecurrence": {
                              "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                              "type": "object",
                              "properties": {
                                "time": {
                                  "type": "string",
                                  "description": "The time of day the schedule will occur."
                                }
                              }
                            },
                            "hourlyRecurrence": {
                              "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                              "type": "object",
                              "properties": {
                                "minute": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Minutes of the hour the schedule will run."
                                }
                              }
                            },
                            "timeZoneId": {
                              "type": "string",
                              "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                            },
                            "notificationSettings": {
                              "description": "Notification settings.",
                              "type": "object",
                              "properties": {
                                "status": {
                                  "type": "string",
                                  "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                  "default": "Disabled",
                                  "enum": [
                                    "Enabled",
                                    "Disabled"
                                  ],
                                  "x-ms-enum": {
                                    "name": "EnableStatus",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Enabled",
                                        "value": "Enabled"
                                      },
                                      {
                                        "name": "Disabled",
                                        "value": "Disabled"
                                      }
                                    ]
                                  }
                                },
                                "timeInMinutes": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Time in minutes before event at which notification will be sent."
                                },
                                "webhookUrl": {
                                  "type": "string",
                                  "description": "The webhook URL to which the notification will be sent."
                                },
                                "emailRecipient": {
                                  "type": "string",
                                  "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                },
                                "notificationLocale": {
                                  "type": "string",
                                  "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                }
                              }
                            },
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The creation date of the schedule.",
                              "readOnly": true
                            },
                            "targetResourceId": {
                              "type": "string",
                              "description": "The resource ID to which the schedule belongs"
                            },
                            "provisioningState": {
                              "type": "string",
                              "description": "The provisioning status of the resource.",
                              "readOnly": true
                            },
                            "uniqueIdentifier": {
                              "type": "string",
                              "description": "The unique immutable identifier of a resource (Guid).",
                              "readOnly": true
                            }
                          }
                        }
                      },
                      "required": [
                        "properties"
                      ]
                    },
                    "labVmsStartup": {
                      "type": "object",
                      "description": "A schedule.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The identifier of the resource.",
                          "readOnly": true
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the resource.",
                          "readOnly": true
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of the resource.",
                          "readOnly": true
                        },
                        "location": {
                          "type": "string",
                          "description": "The location of the resource."
                        },
                        "tags": {
                          "type": "object",
                          "description": "The tags of the resource.",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "properties": {
                          "description": "The properties of the resource.",
                          "x-ms-client-flatten": true,
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "description": "The status of the schedule (i.e. Enabled, Disabled)",
                              "default": "Disabled",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "EnableStatus",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            },
                            "taskType": {
                              "type": "string",
                              "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                            },
                            "weeklyRecurrence": {
                              "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                              "type": "object",
                              "properties": {
                                "weekdays": {
                                  "type": "array",
                                  "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "time": {
                                  "type": "string",
                                  "description": "The time of the day the schedule will occur."
                                }
                              }
                            },
                            "dailyRecurrence": {
                              "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                              "type": "object",
                              "properties": {
                                "time": {
                                  "type": "string",
                                  "description": "The time of day the schedule will occur."
                                }
                              }
                            },
                            "hourlyRecurrence": {
                              "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                              "type": "object",
                              "properties": {
                                "minute": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Minutes of the hour the schedule will run."
                                }
                              }
                            },
                            "timeZoneId": {
                              "type": "string",
                              "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                            },
                            "notificationSettings": {
                              "description": "Notification settings.",
                              "type": "object",
                              "properties": {
                                "status": {
                                  "type": "string",
                                  "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                  "default": "Disabled",
                                  "enum": [
                                    "Enabled",
                                    "Disabled"
                                  ],
                                  "x-ms-enum": {
                                    "name": "EnableStatus",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Enabled",
                                        "value": "Enabled"
                                      },
                                      {
                                        "name": "Disabled",
                                        "value": "Disabled"
                                      }
                                    ]
                                  }
                                },
                                "timeInMinutes": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Time in minutes before event at which notification will be sent."
                                },
                                "webhookUrl": {
                                  "type": "string",
                                  "description": "The webhook URL to which the notification will be sent."
                                },
                                "emailRecipient": {
                                  "type": "string",
                                  "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                },
                                "notificationLocale": {
                                  "type": "string",
                                  "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                }
                              }
                            },
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The creation date of the schedule.",
                              "readOnly": true
                            },
                            "targetResourceId": {
                              "type": "string",
                              "description": "The resource ID to which the schedule belongs"
                            },
                            "provisioningState": {
                              "type": "string",
                              "description": "The provisioning status of the resource.",
                              "readOnly": true
                            },
                            "uniqueIdentifier": {
                              "type": "string",
                              "description": "The unique immutable identifier of a resource (Guid).",
                              "readOnly": true
                            }
                          }
                        }
                      },
                      "required": [
                        "properties"
                      ]
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/redeploy": {
      "post": {
        "operationId": "VirtualMachines_Redeploy",
        "tags": [
          "VirtualMachines"
        ],
        "description": "Redeploy a virtual machine This operation can take a while to complete.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the LabVirtualMachine",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/resize": {
      "post": {
        "operationId": "VirtualMachines_Resize",
        "tags": [
          "VirtualMachines"
        ],
        "description": "Resize Virtual Machine. This operation can take a while to complete.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the LabVirtualMachine",
            "required": true,
            "type": "string"
          },
          {
            "name": "resizeLabVirtualMachineProperties",
            "in": "body",
            "description": "Request body for resizing a virtual machine.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Request body for resizing a virtual machine.",
              "properties": {
                "size": {
                  "type": "string",
                  "description": "Specifies the size of the virtual machine."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/restart": {
      "post": {
        "operationId": "VirtualMachines_Restart",
        "tags": [
          "VirtualMachines"
        ],
        "description": "Restart a virtual machine. This operation can take a while to complete.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the LabVirtualMachine",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{virtualMachineName}/schedules": {
      "get": {
        "operationId": "VirtualMachineSchedules_List",
        "tags": [
          "VirtualMachineSchedules"
        ],
        "description": "List schedules in a given virtual machine.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "labs",
            "required": true,
            "type": "string"
          },
          {
            "name": "virtualMachineName",
            "in": "path",
            "description": "virtualmachines",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=status)'",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply to the operation. Example: '$filter=contains(name,'myName')",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: '$top=10'",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "The ordering expression for the results, using OData notation. Example: '$orderby=name desc'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Schedule items on this page",
                  "items": {
                    "type": "object",
                    "description": "A schedule.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The identifier of the resource.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource.",
                        "readOnly": true
                      },
                      "location": {
                        "type": "string",
                        "description": "The location of the resource."
                      },
                      "tags": {
                        "type": "object",
                        "description": "The tags of the resource.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "properties": {
                        "description": "The properties of the resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "description": "The status of the schedule (i.e. Enabled, Disabled)",
                            "default": "Disabled",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "EnableStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled"
                                }
                              ]
                            }
                          },
                          "taskType": {
                            "type": "string",
                            "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                          },
                          "weeklyRecurrence": {
                            "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                            "type": "object",
                            "properties": {
                              "weekdays": {
                                "type": "array",
                                "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "time": {
                                "type": "string",
                                "description": "The time of the day the schedule will occur."
                              }
                            }
                          },
                          "dailyRecurrence": {
                            "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                            "type": "object",
                            "properties": {
                              "time": {
                                "type": "string",
                                "description": "The time of day the schedule will occur."
                              }
                            }
                          },
                          "hourlyRecurrence": {
                            "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                            "type": "object",
                            "properties": {
                              "minute": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Minutes of the hour the schedule will run."
                              }
                            }
                          },
                          "timeZoneId": {
                            "type": "string",
                            "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                          },
                          "notificationSettings": {
                            "description": "Notification settings.",
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string",
                                "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                "default": "Disabled",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "EnableStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled"
                                    }
                                  ]
                                }
                              },
                              "timeInMinutes": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Time in minutes before event at which notification will be sent."
                              },
                              "webhookUrl": {
                                "type": "string",
                                "description": "The webhook URL to which the notification will be sent."
                              },
                              "emailRecipient": {
                                "type": "string",
                                "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                              },
                              "notificationLocale": {
                                "type": "string",
                                "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                              }
                            }
                          },
                          "createdDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The creation date of the schedule.",
                            "readOnly": true
                          },
                          "targetResourceId": {
                            "type": "string",
                            "description": "The resource ID to which the schedule belongs"
                          },
                          "provisioningState": {
                            "type": "string",
                            "description": "The provisioning status of the resource.",
                            "readOnly": true
                          },
                          "uniqueIdentifier": {
                            "type": "string",
                            "description": "The unique immutable identifier of a resource (Guid).",
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "required": [
                      "properties"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{virtualMachineName}/schedules/{name}": {
      "get": {
        "operationId": "VirtualMachineSchedules_Get",
        "tags": [
          "VirtualMachineSchedules"
        ],
        "description": "Get schedule.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "labs",
            "required": true,
            "type": "string"
          },
          {
            "name": "virtualMachineName",
            "in": "path",
            "description": "virtualmachines",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the Schedule",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=status)'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A schedule.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the schedule (i.e. Enabled, Disabled)",
                      "default": "Disabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "EnableStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "taskType": {
                      "type": "string",
                      "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                    },
                    "weeklyRecurrence": {
                      "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                      "type": "object",
                      "properties": {
                        "weekdays": {
                          "type": "array",
                          "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                          "items": {
                            "type": "string"
                          }
                        },
                        "time": {
                          "type": "string",
                          "description": "The time of the day the schedule will occur."
                        }
                      }
                    },
                    "dailyRecurrence": {
                      "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                      "type": "object",
                      "properties": {
                        "time": {
                          "type": "string",
                          "description": "The time of day the schedule will occur."
                        }
                      }
                    },
                    "hourlyRecurrence": {
                      "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                      "type": "object",
                      "properties": {
                        "minute": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Minutes of the hour the schedule will run."
                        }
                      }
                    },
                    "timeZoneId": {
                      "type": "string",
                      "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                    },
                    "notificationSettings": {
                      "description": "Notification settings.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "timeInMinutes": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Time in minutes before event at which notification will be sent."
                        },
                        "webhookUrl": {
                          "type": "string",
                          "description": "The webhook URL to which the notification will be sent."
                        },
                        "emailRecipient": {
                          "type": "string",
                          "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                        },
                        "notificationLocale": {
                          "type": "string",
                          "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                        }
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the schedule.",
                      "readOnly": true
                    },
                    "targetResourceId": {
                      "type": "string",
                      "description": "The resource ID to which the schedule belongs"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "put": {
        "operationId": "VirtualMachineSchedules_CreateOrUpdate",
        "tags": [
          "VirtualMachineSchedules"
        ],
        "description": "Create or replace an existing schedule.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "labs",
            "required": true,
            "type": "string"
          },
          {
            "name": "virtualMachineName",
            "in": "path",
            "description": "virtualmachines",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the Schedule",
            "required": true,
            "type": "string"
          },
          {
            "name": "schedule",
            "in": "body",
            "description": "A schedule.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A schedule.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the schedule (i.e. Enabled, Disabled)",
                      "default": "Disabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "EnableStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "taskType": {
                      "type": "string",
                      "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                    },
                    "weeklyRecurrence": {
                      "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                      "type": "object",
                      "properties": {
                        "weekdays": {
                          "type": "array",
                          "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                          "items": {
                            "type": "string"
                          }
                        },
                        "time": {
                          "type": "string",
                          "description": "The time of the day the schedule will occur."
                        }
                      }
                    },
                    "dailyRecurrence": {
                      "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                      "type": "object",
                      "properties": {
                        "time": {
                          "type": "string",
                          "description": "The time of day the schedule will occur."
                        }
                      }
                    },
                    "hourlyRecurrence": {
                      "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                      "type": "object",
                      "properties": {
                        "minute": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Minutes of the hour the schedule will run."
                        }
                      }
                    },
                    "timeZoneId": {
                      "type": "string",
                      "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                    },
                    "notificationSettings": {
                      "description": "Notification settings.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "timeInMinutes": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Time in minutes before event at which notification will be sent."
                        },
                        "webhookUrl": {
                          "type": "string",
                          "description": "The webhook URL to which the notification will be sent."
                        },
                        "emailRecipient": {
                          "type": "string",
                          "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                        },
                        "notificationLocale": {
                          "type": "string",
                          "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                        }
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the schedule.",
                      "readOnly": true
                    },
                    "targetResourceId": {
                      "type": "string",
                      "description": "The resource ID to which the schedule belongs"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Schedule' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "A schedule.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the schedule (i.e. Enabled, Disabled)",
                      "default": "Disabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "EnableStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "taskType": {
                      "type": "string",
                      "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                    },
                    "weeklyRecurrence": {
                      "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                      "type": "object",
                      "properties": {
                        "weekdays": {
                          "type": "array",
                          "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                          "items": {
                            "type": "string"
                          }
                        },
                        "time": {
                          "type": "string",
                          "description": "The time of the day the schedule will occur."
                        }
                      }
                    },
                    "dailyRecurrence": {
                      "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                      "type": "object",
                      "properties": {
                        "time": {
                          "type": "string",
                          "description": "The time of day the schedule will occur."
                        }
                      }
                    },
                    "hourlyRecurrence": {
                      "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                      "type": "object",
                      "properties": {
                        "minute": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Minutes of the hour the schedule will run."
                        }
                      }
                    },
                    "timeZoneId": {
                      "type": "string",
                      "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                    },
                    "notificationSettings": {
                      "description": "Notification settings.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "timeInMinutes": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Time in minutes before event at which notification will be sent."
                        },
                        "webhookUrl": {
                          "type": "string",
                          "description": "The webhook URL to which the notification will be sent."
                        },
                        "emailRecipient": {
                          "type": "string",
                          "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                        },
                        "notificationLocale": {
                          "type": "string",
                          "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                        }
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the schedule.",
                      "readOnly": true
                    },
                    "targetResourceId": {
                      "type": "string",
                      "description": "The resource ID to which the schedule belongs"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          },
          "201": {
            "description": "Resource 'Schedule' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "A schedule.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the schedule (i.e. Enabled, Disabled)",
                      "default": "Disabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "EnableStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "taskType": {
                      "type": "string",
                      "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                    },
                    "weeklyRecurrence": {
                      "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                      "type": "object",
                      "properties": {
                        "weekdays": {
                          "type": "array",
                          "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                          "items": {
                            "type": "string"
                          }
                        },
                        "time": {
                          "type": "string",
                          "description": "The time of the day the schedule will occur."
                        }
                      }
                    },
                    "dailyRecurrence": {
                      "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                      "type": "object",
                      "properties": {
                        "time": {
                          "type": "string",
                          "description": "The time of day the schedule will occur."
                        }
                      }
                    },
                    "hourlyRecurrence": {
                      "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                      "type": "object",
                      "properties": {
                        "minute": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Minutes of the hour the schedule will run."
                        }
                      }
                    },
                    "timeZoneId": {
                      "type": "string",
                      "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                    },
                    "notificationSettings": {
                      "description": "Notification settings.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "timeInMinutes": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Time in minutes before event at which notification will be sent."
                        },
                        "webhookUrl": {
                          "type": "string",
                          "description": "The webhook URL to which the notification will be sent."
                        },
                        "emailRecipient": {
                          "type": "string",
                          "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                        },
                        "notificationLocale": {
                          "type": "string",
                          "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                        }
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the schedule.",
                      "readOnly": true
                    },
                    "targetResourceId": {
                      "type": "string",
                      "description": "The resource ID to which the schedule belongs"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "patch": {
        "operationId": "VirtualMachineSchedules_Update",
        "tags": [
          "VirtualMachineSchedules"
        ],
        "description": "Allows modifying tags of schedules. All other properties will be ignored.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "labs",
            "required": true,
            "type": "string"
          },
          {
            "name": "virtualMachineName",
            "in": "path",
            "description": "virtualmachines",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the Schedule",
            "required": true,
            "type": "string"
          },
          {
            "name": "schedule",
            "in": "body",
            "description": "A schedule.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A schedule.",
              "properties": {
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A schedule.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the schedule (i.e. Enabled, Disabled)",
                      "default": "Disabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "EnableStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "taskType": {
                      "type": "string",
                      "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                    },
                    "weeklyRecurrence": {
                      "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                      "type": "object",
                      "properties": {
                        "weekdays": {
                          "type": "array",
                          "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                          "items": {
                            "type": "string"
                          }
                        },
                        "time": {
                          "type": "string",
                          "description": "The time of the day the schedule will occur."
                        }
                      }
                    },
                    "dailyRecurrence": {
                      "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                      "type": "object",
                      "properties": {
                        "time": {
                          "type": "string",
                          "description": "The time of day the schedule will occur."
                        }
                      }
                    },
                    "hourlyRecurrence": {
                      "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                      "type": "object",
                      "properties": {
                        "minute": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Minutes of the hour the schedule will run."
                        }
                      }
                    },
                    "timeZoneId": {
                      "type": "string",
                      "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                    },
                    "notificationSettings": {
                      "description": "Notification settings.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "timeInMinutes": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Time in minutes before event at which notification will be sent."
                        },
                        "webhookUrl": {
                          "type": "string",
                          "description": "The webhook URL to which the notification will be sent."
                        },
                        "emailRecipient": {
                          "type": "string",
                          "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                        },
                        "notificationLocale": {
                          "type": "string",
                          "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                        }
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the schedule.",
                      "readOnly": true
                    },
                    "targetResourceId": {
                      "type": "string",
                      "description": "The resource ID to which the schedule belongs"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "delete": {
        "operationId": "VirtualMachineSchedules_Delete",
        "tags": [
          "VirtualMachineSchedules"
        ],
        "description": "Delete schedule.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "labs",
            "required": true,
            "type": "string"
          },
          {
            "name": "virtualMachineName",
            "in": "path",
            "description": "virtualmachines",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the Schedule",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{virtualMachineName}/schedules/{name}/execute": {
      "post": {
        "operationId": "VirtualMachineSchedules_Execute",
        "tags": [
          "VirtualMachineSchedules"
        ],
        "description": "Execute a schedule. This operation can take a while to complete.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "labs",
            "required": true,
            "type": "string"
          },
          {
            "name": "virtualMachineName",
            "in": "path",
            "description": "virtualmachines",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the Schedule",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/start": {
      "post": {
        "operationId": "VirtualMachines_Start",
        "tags": [
          "VirtualMachines"
        ],
        "description": "Start a virtual machine. This operation can take a while to complete.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the LabVirtualMachine",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/stop": {
      "post": {
        "operationId": "VirtualMachines_Stop",
        "tags": [
          "VirtualMachines"
        ],
        "description": "Stop a virtual machine This operation can take a while to complete.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the LabVirtualMachine",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/transferDisks": {
      "post": {
        "operationId": "VirtualMachines_TransferDisks",
        "tags": [
          "VirtualMachines"
        ],
        "description": "Transfers all data disks attached to the virtual machine to be owned by the current user. This operation can take a while to complete.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the LabVirtualMachine",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/unClaim": {
      "post": {
        "operationId": "VirtualMachines_UnClaim",
        "tags": [
          "VirtualMachines"
        ],
        "description": "Release ownership of an existing virtual machine This operation can take a while to complete.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the LabVirtualMachine",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualnetworks": {
      "get": {
        "operationId": "VirtualNetworks_List",
        "tags": [
          "VirtualNetworks"
        ],
        "description": "List virtual networks in a given lab.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($expand=externalSubnets)'",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply to the operation. Example: '$filter=contains(name,'myName')",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: '$top=10'",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "The ordering expression for the results, using OData notation. Example: '$orderby=name desc'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The VirtualNetwork items on this page",
                  "items": {
                    "type": "object",
                    "description": "A virtual network.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The identifier of the resource.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource.",
                        "readOnly": true
                      },
                      "location": {
                        "type": "string",
                        "description": "The location of the resource."
                      },
                      "tags": {
                        "type": "object",
                        "description": "The tags of the resource.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "properties": {
                        "description": "The properties of the resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "allowedSubnets": {
                            "type": "array",
                            "description": "The allowed subnets of the virtual network.",
                            "items": {
                              "type": "object",
                              "description": "Subnet information.",
                              "properties": {
                                "resourceId": {
                                  "type": "string",
                                  "description": "The resource ID of the subnet."
                                },
                                "labSubnetName": {
                                  "type": "string",
                                  "description": "The name of the subnet as seen in the lab."
                                },
                                "allowPublicIp": {
                                  "description": "The permission policy of the subnet for allowing public IP addresses (i.e. Allow, Deny)).",
                                  "type": "string",
                                  "enum": [
                                    "Default",
                                    "Deny",
                                    "Allow"
                                  ],
                                  "x-ms-enum": {
                                    "name": "UsagePermissionType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Default",
                                        "value": "Default"
                                      },
                                      {
                                        "name": "Deny",
                                        "value": "Deny"
                                      },
                                      {
                                        "name": "Allow",
                                        "value": "Allow"
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "description": {
                            "type": "string",
                            "description": "The description of the virtual network."
                          },
                          "externalProviderResourceId": {
                            "type": "string",
                            "description": "The Microsoft.Network resource identifier of the virtual network."
                          },
                          "externalSubnets": {
                            "type": "array",
                            "description": "The external subnet properties.",
                            "items": {
                              "type": "object",
                              "description": "Subnet information as returned by the Microsoft.Network API.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Gets or sets the identifier."
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Gets or sets the name."
                                }
                              }
                            },
                            "readOnly": true
                          },
                          "subnetOverrides": {
                            "type": "array",
                            "description": "The subnet overrides of the virtual network.",
                            "items": {
                              "type": "object",
                              "description": "Property overrides on a subnet of a virtual network.",
                              "properties": {
                                "resourceId": {
                                  "type": "string",
                                  "description": "The resource ID of the subnet."
                                },
                                "labSubnetName": {
                                  "type": "string",
                                  "description": "The name given to the subnet within the lab."
                                },
                                "useInVmCreationPermission": {
                                  "description": "Indicates whether this subnet can be used during virtual machine creation (i.e. Allow, Deny).",
                                  "type": "string",
                                  "enum": [
                                    "Default",
                                    "Deny",
                                    "Allow"
                                  ],
                                  "x-ms-enum": {
                                    "name": "UsagePermissionType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Default",
                                        "value": "Default"
                                      },
                                      {
                                        "name": "Deny",
                                        "value": "Deny"
                                      },
                                      {
                                        "name": "Allow",
                                        "value": "Allow"
                                      }
                                    ]
                                  }
                                },
                                "usePublicIpAddressPermission": {
                                  "description": "Indicates whether public IP addresses can be assigned to virtual machines on this subnet (i.e. Allow, Deny).",
                                  "type": "string",
                                  "enum": [
                                    "Default",
                                    "Deny",
                                    "Allow"
                                  ],
                                  "x-ms-enum": {
                                    "name": "UsagePermissionType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Default",
                                        "value": "Default"
                                      },
                                      {
                                        "name": "Deny",
                                        "value": "Deny"
                                      },
                                      {
                                        "name": "Allow",
                                        "value": "Allow"
                                      }
                                    ]
                                  }
                                },
                                "sharedPublicIpAddressConfiguration": {
                                  "description": "Properties that virtual machines on this subnet will share.",
                                  "type": "object",
                                  "properties": {
                                    "allowedPorts": {
                                      "type": "array",
                                      "description": "Backend ports that virtual machines on this subnet are allowed to expose",
                                      "items": {
                                        "type": "object",
                                        "description": "Properties of a network port.",
                                        "properties": {
                                          "transportProtocol": {
                                            "description": "Protocol type of the port.",
                                            "type": "string",
                                            "enum": [
                                              "Tcp",
                                              "Udp"
                                            ],
                                            "x-ms-enum": {
                                              "name": "TransportProtocol",
                                              "modelAsString": true,
                                              "values": [
                                                {
                                                  "name": "Tcp",
                                                  "value": "Tcp"
                                                },
                                                {
                                                  "name": "Udp",
                                                  "value": "Udp"
                                                }
                                              ]
                                            }
                                          },
                                          "backendPort": {
                                            "type": "integer",
                                            "format": "int32",
                                            "description": "Backend port of the target virtual machine."
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": []
                                    }
                                  }
                                },
                                "virtualNetworkPoolName": {
                                  "type": "string",
                                  "description": "The virtual network pool associated with this subnet."
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "createdDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The creation date of the virtual network.",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "type": "string",
                            "description": "The provisioning status of the resource.",
                            "readOnly": true
                          },
                          "uniqueIdentifier": {
                            "type": "string",
                            "description": "The unique immutable identifier of a resource (Guid).",
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "required": [
                      "properties"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualnetworks/{name}": {
      "get": {
        "operationId": "VirtualNetworks_Get",
        "tags": [
          "VirtualNetworks"
        ],
        "description": "Get virtual network.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the VirtualNetwork",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($expand=externalSubnets)'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A virtual network.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "allowedSubnets": {
                      "type": "array",
                      "description": "The allowed subnets of the virtual network.",
                      "items": {
                        "type": "object",
                        "description": "Subnet information.",
                        "properties": {
                          "resourceId": {
                            "type": "string",
                            "description": "The resource ID of the subnet."
                          },
                          "labSubnetName": {
                            "type": "string",
                            "description": "The name of the subnet as seen in the lab."
                          },
                          "allowPublicIp": {
                            "description": "The permission policy of the subnet for allowing public IP addresses (i.e. Allow, Deny)).",
                            "type": "string",
                            "enum": [
                              "Default",
                              "Deny",
                              "Allow"
                            ],
                            "x-ms-enum": {
                              "name": "UsagePermissionType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Default",
                                  "value": "Default"
                                },
                                {
                                  "name": "Deny",
                                  "value": "Deny"
                                },
                                {
                                  "name": "Allow",
                                  "value": "Allow"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the virtual network."
                    },
                    "externalProviderResourceId": {
                      "type": "string",
                      "description": "The Microsoft.Network resource identifier of the virtual network."
                    },
                    "externalSubnets": {
                      "type": "array",
                      "description": "The external subnet properties.",
                      "items": {
                        "type": "object",
                        "description": "Subnet information as returned by the Microsoft.Network API.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Gets or sets the identifier."
                          },
                          "name": {
                            "type": "string",
                            "description": "Gets or sets the name."
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "subnetOverrides": {
                      "type": "array",
                      "description": "The subnet overrides of the virtual network.",
                      "items": {
                        "type": "object",
                        "description": "Property overrides on a subnet of a virtual network.",
                        "properties": {
                          "resourceId": {
                            "type": "string",
                            "description": "The resource ID of the subnet."
                          },
                          "labSubnetName": {
                            "type": "string",
                            "description": "The name given to the subnet within the lab."
                          },
                          "useInVmCreationPermission": {
                            "description": "Indicates whether this subnet can be used during virtual machine creation (i.e. Allow, Deny).",
                            "type": "string",
                            "enum": [
                              "Default",
                              "Deny",
                              "Allow"
                            ],
                            "x-ms-enum": {
                              "name": "UsagePermissionType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Default",
                                  "value": "Default"
                                },
                                {
                                  "name": "Deny",
                                  "value": "Deny"
                                },
                                {
                                  "name": "Allow",
                                  "value": "Allow"
                                }
                              ]
                            }
                          },
                          "usePublicIpAddressPermission": {
                            "description": "Indicates whether public IP addresses can be assigned to virtual machines on this subnet (i.e. Allow, Deny).",
                            "type": "string",
                            "enum": [
                              "Default",
                              "Deny",
                              "Allow"
                            ],
                            "x-ms-enum": {
                              "name": "UsagePermissionType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Default",
                                  "value": "Default"
                                },
                                {
                                  "name": "Deny",
                                  "value": "Deny"
                                },
                                {
                                  "name": "Allow",
                                  "value": "Allow"
                                }
                              ]
                            }
                          },
                          "sharedPublicIpAddressConfiguration": {
                            "description": "Properties that virtual machines on this subnet will share.",
                            "type": "object",
                            "properties": {
                              "allowedPorts": {
                                "type": "array",
                                "description": "Backend ports that virtual machines on this subnet are allowed to expose",
                                "items": {
                                  "type": "object",
                                  "description": "Properties of a network port.",
                                  "properties": {
                                    "transportProtocol": {
                                      "description": "Protocol type of the port.",
                                      "type": "string",
                                      "enum": [
                                        "Tcp",
                                        "Udp"
                                      ],
                                      "x-ms-enum": {
                                        "name": "TransportProtocol",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Tcp",
                                            "value": "Tcp"
                                          },
                                          {
                                            "name": "Udp",
                                            "value": "Udp"
                                          }
                                        ]
                                      }
                                    },
                                    "backendPort": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Backend port of the target virtual machine."
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "virtualNetworkPoolName": {
                            "type": "string",
                            "description": "The virtual network pool associated with this subnet."
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the virtual network.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "put": {
        "operationId": "VirtualNetworks_CreateOrUpdate",
        "tags": [
          "VirtualNetworks"
        ],
        "description": "Create or replace an existing virtual network. This operation can take a while to complete.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the VirtualNetwork",
            "required": true,
            "type": "string"
          },
          {
            "name": "virtualNetwork",
            "in": "body",
            "description": "A virtual network.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A virtual network.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "allowedSubnets": {
                      "type": "array",
                      "description": "The allowed subnets of the virtual network.",
                      "items": {
                        "type": "object",
                        "description": "Subnet information.",
                        "properties": {
                          "resourceId": {
                            "type": "string",
                            "description": "The resource ID of the subnet."
                          },
                          "labSubnetName": {
                            "type": "string",
                            "description": "The name of the subnet as seen in the lab."
                          },
                          "allowPublicIp": {
                            "description": "The permission policy of the subnet for allowing public IP addresses (i.e. Allow, Deny)).",
                            "type": "string",
                            "enum": [
                              "Default",
                              "Deny",
                              "Allow"
                            ],
                            "x-ms-enum": {
                              "name": "UsagePermissionType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Default",
                                  "value": "Default"
                                },
                                {
                                  "name": "Deny",
                                  "value": "Deny"
                                },
                                {
                                  "name": "Allow",
                                  "value": "Allow"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the virtual network."
                    },
                    "externalProviderResourceId": {
                      "type": "string",
                      "description": "The Microsoft.Network resource identifier of the virtual network."
                    },
                    "externalSubnets": {
                      "type": "array",
                      "description": "The external subnet properties.",
                      "items": {
                        "type": "object",
                        "description": "Subnet information as returned by the Microsoft.Network API.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Gets or sets the identifier."
                          },
                          "name": {
                            "type": "string",
                            "description": "Gets or sets the name."
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "subnetOverrides": {
                      "type": "array",
                      "description": "The subnet overrides of the virtual network.",
                      "items": {
                        "type": "object",
                        "description": "Property overrides on a subnet of a virtual network.",
                        "properties": {
                          "resourceId": {
                            "type": "string",
                            "description": "The resource ID of the subnet."
                          },
                          "labSubnetName": {
                            "type": "string",
                            "description": "The name given to the subnet within the lab."
                          },
                          "useInVmCreationPermission": {
                            "description": "Indicates whether this subnet can be used during virtual machine creation (i.e. Allow, Deny).",
                            "type": "string",
                            "enum": [
                              "Default",
                              "Deny",
                              "Allow"
                            ],
                            "x-ms-enum": {
                              "name": "UsagePermissionType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Default",
                                  "value": "Default"
                                },
                                {
                                  "name": "Deny",
                                  "value": "Deny"
                                },
                                {
                                  "name": "Allow",
                                  "value": "Allow"
                                }
                              ]
                            }
                          },
                          "usePublicIpAddressPermission": {
                            "description": "Indicates whether public IP addresses can be assigned to virtual machines on this subnet (i.e. Allow, Deny).",
                            "type": "string",
                            "enum": [
                              "Default",
                              "Deny",
                              "Allow"
                            ],
                            "x-ms-enum": {
                              "name": "UsagePermissionType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Default",
                                  "value": "Default"
                                },
                                {
                                  "name": "Deny",
                                  "value": "Deny"
                                },
                                {
                                  "name": "Allow",
                                  "value": "Allow"
                                }
                              ]
                            }
                          },
                          "sharedPublicIpAddressConfiguration": {
                            "description": "Properties that virtual machines on this subnet will share.",
                            "type": "object",
                            "properties": {
                              "allowedPorts": {
                                "type": "array",
                                "description": "Backend ports that virtual machines on this subnet are allowed to expose",
                                "items": {
                                  "type": "object",
                                  "description": "Properties of a network port.",
                                  "properties": {
                                    "transportProtocol": {
                                      "description": "Protocol type of the port.",
                                      "type": "string",
                                      "enum": [
                                        "Tcp",
                                        "Udp"
                                      ],
                                      "x-ms-enum": {
                                        "name": "TransportProtocol",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Tcp",
                                            "value": "Tcp"
                                          },
                                          {
                                            "name": "Udp",
                                            "value": "Udp"
                                          }
                                        ]
                                      }
                                    },
                                    "backendPort": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Backend port of the target virtual machine."
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "virtualNetworkPoolName": {
                            "type": "string",
                            "description": "The virtual network pool associated with this subnet."
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the virtual network.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'VirtualNetwork' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "A virtual network.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "allowedSubnets": {
                      "type": "array",
                      "description": "The allowed subnets of the virtual network.",
                      "items": {
                        "type": "object",
                        "description": "Subnet information.",
                        "properties": {
                          "resourceId": {
                            "type": "string",
                            "description": "The resource ID of the subnet."
                          },
                          "labSubnetName": {
                            "type": "string",
                            "description": "The name of the subnet as seen in the lab."
                          },
                          "allowPublicIp": {
                            "description": "The permission policy of the subnet for allowing public IP addresses (i.e. Allow, Deny)).",
                            "type": "string",
                            "enum": [
                              "Default",
                              "Deny",
                              "Allow"
                            ],
                            "x-ms-enum": {
                              "name": "UsagePermissionType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Default",
                                  "value": "Default"
                                },
                                {
                                  "name": "Deny",
                                  "value": "Deny"
                                },
                                {
                                  "name": "Allow",
                                  "value": "Allow"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the virtual network."
                    },
                    "externalProviderResourceId": {
                      "type": "string",
                      "description": "The Microsoft.Network resource identifier of the virtual network."
                    },
                    "externalSubnets": {
                      "type": "array",
                      "description": "The external subnet properties.",
                      "items": {
                        "type": "object",
                        "description": "Subnet information as returned by the Microsoft.Network API.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Gets or sets the identifier."
                          },
                          "name": {
                            "type": "string",
                            "description": "Gets or sets the name."
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "subnetOverrides": {
                      "type": "array",
                      "description": "The subnet overrides of the virtual network.",
                      "items": {
                        "type": "object",
                        "description": "Property overrides on a subnet of a virtual network.",
                        "properties": {
                          "resourceId": {
                            "type": "string",
                            "description": "The resource ID of the subnet."
                          },
                          "labSubnetName": {
                            "type": "string",
                            "description": "The name given to the subnet within the lab."
                          },
                          "useInVmCreationPermission": {
                            "description": "Indicates whether this subnet can be used during virtual machine creation (i.e. Allow, Deny).",
                            "type": "string",
                            "enum": [
                              "Default",
                              "Deny",
                              "Allow"
                            ],
                            "x-ms-enum": {
                              "name": "UsagePermissionType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Default",
                                  "value": "Default"
                                },
                                {
                                  "name": "Deny",
                                  "value": "Deny"
                                },
                                {
                                  "name": "Allow",
                                  "value": "Allow"
                                }
                              ]
                            }
                          },
                          "usePublicIpAddressPermission": {
                            "description": "Indicates whether public IP addresses can be assigned to virtual machines on this subnet (i.e. Allow, Deny).",
                            "type": "string",
                            "enum": [
                              "Default",
                              "Deny",
                              "Allow"
                            ],
                            "x-ms-enum": {
                              "name": "UsagePermissionType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Default",
                                  "value": "Default"
                                },
                                {
                                  "name": "Deny",
                                  "value": "Deny"
                                },
                                {
                                  "name": "Allow",
                                  "value": "Allow"
                                }
                              ]
                            }
                          },
                          "sharedPublicIpAddressConfiguration": {
                            "description": "Properties that virtual machines on this subnet will share.",
                            "type": "object",
                            "properties": {
                              "allowedPorts": {
                                "type": "array",
                                "description": "Backend ports that virtual machines on this subnet are allowed to expose",
                                "items": {
                                  "type": "object",
                                  "description": "Properties of a network port.",
                                  "properties": {
                                    "transportProtocol": {
                                      "description": "Protocol type of the port.",
                                      "type": "string",
                                      "enum": [
                                        "Tcp",
                                        "Udp"
                                      ],
                                      "x-ms-enum": {
                                        "name": "TransportProtocol",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Tcp",
                                            "value": "Tcp"
                                          },
                                          {
                                            "name": "Udp",
                                            "value": "Udp"
                                          }
                                        ]
                                      }
                                    },
                                    "backendPort": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Backend port of the target virtual machine."
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "virtualNetworkPoolName": {
                            "type": "string",
                            "description": "The virtual network pool associated with this subnet."
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the virtual network.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          },
          "201": {
            "description": "Resource 'VirtualNetwork' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "A virtual network.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "allowedSubnets": {
                      "type": "array",
                      "description": "The allowed subnets of the virtual network.",
                      "items": {
                        "type": "object",
                        "description": "Subnet information.",
                        "properties": {
                          "resourceId": {
                            "type": "string",
                            "description": "The resource ID of the subnet."
                          },
                          "labSubnetName": {
                            "type": "string",
                            "description": "The name of the subnet as seen in the lab."
                          },
                          "allowPublicIp": {
                            "description": "The permission policy of the subnet for allowing public IP addresses (i.e. Allow, Deny)).",
                            "type": "string",
                            "enum": [
                              "Default",
                              "Deny",
                              "Allow"
                            ],
                            "x-ms-enum": {
                              "name": "UsagePermissionType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Default",
                                  "value": "Default"
                                },
                                {
                                  "name": "Deny",
                                  "value": "Deny"
                                },
                                {
                                  "name": "Allow",
                                  "value": "Allow"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the virtual network."
                    },
                    "externalProviderResourceId": {
                      "type": "string",
                      "description": "The Microsoft.Network resource identifier of the virtual network."
                    },
                    "externalSubnets": {
                      "type": "array",
                      "description": "The external subnet properties.",
                      "items": {
                        "type": "object",
                        "description": "Subnet information as returned by the Microsoft.Network API.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Gets or sets the identifier."
                          },
                          "name": {
                            "type": "string",
                            "description": "Gets or sets the name."
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "subnetOverrides": {
                      "type": "array",
                      "description": "The subnet overrides of the virtual network.",
                      "items": {
                        "type": "object",
                        "description": "Property overrides on a subnet of a virtual network.",
                        "properties": {
                          "resourceId": {
                            "type": "string",
                            "description": "The resource ID of the subnet."
                          },
                          "labSubnetName": {
                            "type": "string",
                            "description": "The name given to the subnet within the lab."
                          },
                          "useInVmCreationPermission": {
                            "description": "Indicates whether this subnet can be used during virtual machine creation (i.e. Allow, Deny).",
                            "type": "string",
                            "enum": [
                              "Default",
                              "Deny",
                              "Allow"
                            ],
                            "x-ms-enum": {
                              "name": "UsagePermissionType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Default",
                                  "value": "Default"
                                },
                                {
                                  "name": "Deny",
                                  "value": "Deny"
                                },
                                {
                                  "name": "Allow",
                                  "value": "Allow"
                                }
                              ]
                            }
                          },
                          "usePublicIpAddressPermission": {
                            "description": "Indicates whether public IP addresses can be assigned to virtual machines on this subnet (i.e. Allow, Deny).",
                            "type": "string",
                            "enum": [
                              "Default",
                              "Deny",
                              "Allow"
                            ],
                            "x-ms-enum": {
                              "name": "UsagePermissionType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Default",
                                  "value": "Default"
                                },
                                {
                                  "name": "Deny",
                                  "value": "Deny"
                                },
                                {
                                  "name": "Allow",
                                  "value": "Allow"
                                }
                              ]
                            }
                          },
                          "sharedPublicIpAddressConfiguration": {
                            "description": "Properties that virtual machines on this subnet will share.",
                            "type": "object",
                            "properties": {
                              "allowedPorts": {
                                "type": "array",
                                "description": "Backend ports that virtual machines on this subnet are allowed to expose",
                                "items": {
                                  "type": "object",
                                  "description": "Properties of a network port.",
                                  "properties": {
                                    "transportProtocol": {
                                      "description": "Protocol type of the port.",
                                      "type": "string",
                                      "enum": [
                                        "Tcp",
                                        "Udp"
                                      ],
                                      "x-ms-enum": {
                                        "name": "TransportProtocol",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Tcp",
                                            "value": "Tcp"
                                          },
                                          {
                                            "name": "Udp",
                                            "value": "Udp"
                                          }
                                        ]
                                      }
                                    },
                                    "backendPort": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Backend port of the target virtual machine."
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "virtualNetworkPoolName": {
                            "type": "string",
                            "description": "The virtual network pool associated with this subnet."
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the virtual network.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "VirtualNetworks_Update",
        "tags": [
          "VirtualNetworks"
        ],
        "description": "Allows modifying tags of virtual networks. All other properties will be ignored.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the VirtualNetwork",
            "required": true,
            "type": "string"
          },
          {
            "name": "virtualNetwork",
            "in": "body",
            "description": "A virtual network.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A virtual network.",
              "properties": {
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A virtual network.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "allowedSubnets": {
                      "type": "array",
                      "description": "The allowed subnets of the virtual network.",
                      "items": {
                        "type": "object",
                        "description": "Subnet information.",
                        "properties": {
                          "resourceId": {
                            "type": "string",
                            "description": "The resource ID of the subnet."
                          },
                          "labSubnetName": {
                            "type": "string",
                            "description": "The name of the subnet as seen in the lab."
                          },
                          "allowPublicIp": {
                            "description": "The permission policy of the subnet for allowing public IP addresses (i.e. Allow, Deny)).",
                            "type": "string",
                            "enum": [
                              "Default",
                              "Deny",
                              "Allow"
                            ],
                            "x-ms-enum": {
                              "name": "UsagePermissionType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Default",
                                  "value": "Default"
                                },
                                {
                                  "name": "Deny",
                                  "value": "Deny"
                                },
                                {
                                  "name": "Allow",
                                  "value": "Allow"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the virtual network."
                    },
                    "externalProviderResourceId": {
                      "type": "string",
                      "description": "The Microsoft.Network resource identifier of the virtual network."
                    },
                    "externalSubnets": {
                      "type": "array",
                      "description": "The external subnet properties.",
                      "items": {
                        "type": "object",
                        "description": "Subnet information as returned by the Microsoft.Network API.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Gets or sets the identifier."
                          },
                          "name": {
                            "type": "string",
                            "description": "Gets or sets the name."
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "subnetOverrides": {
                      "type": "array",
                      "description": "The subnet overrides of the virtual network.",
                      "items": {
                        "type": "object",
                        "description": "Property overrides on a subnet of a virtual network.",
                        "properties": {
                          "resourceId": {
                            "type": "string",
                            "description": "The resource ID of the subnet."
                          },
                          "labSubnetName": {
                            "type": "string",
                            "description": "The name given to the subnet within the lab."
                          },
                          "useInVmCreationPermission": {
                            "description": "Indicates whether this subnet can be used during virtual machine creation (i.e. Allow, Deny).",
                            "type": "string",
                            "enum": [
                              "Default",
                              "Deny",
                              "Allow"
                            ],
                            "x-ms-enum": {
                              "name": "UsagePermissionType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Default",
                                  "value": "Default"
                                },
                                {
                                  "name": "Deny",
                                  "value": "Deny"
                                },
                                {
                                  "name": "Allow",
                                  "value": "Allow"
                                }
                              ]
                            }
                          },
                          "usePublicIpAddressPermission": {
                            "description": "Indicates whether public IP addresses can be assigned to virtual machines on this subnet (i.e. Allow, Deny).",
                            "type": "string",
                            "enum": [
                              "Default",
                              "Deny",
                              "Allow"
                            ],
                            "x-ms-enum": {
                              "name": "UsagePermissionType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Default",
                                  "value": "Default"
                                },
                                {
                                  "name": "Deny",
                                  "value": "Deny"
                                },
                                {
                                  "name": "Allow",
                                  "value": "Allow"
                                }
                              ]
                            }
                          },
                          "sharedPublicIpAddressConfiguration": {
                            "description": "Properties that virtual machines on this subnet will share.",
                            "type": "object",
                            "properties": {
                              "allowedPorts": {
                                "type": "array",
                                "description": "Backend ports that virtual machines on this subnet are allowed to expose",
                                "items": {
                                  "type": "object",
                                  "description": "Properties of a network port.",
                                  "properties": {
                                    "transportProtocol": {
                                      "description": "Protocol type of the port.",
                                      "type": "string",
                                      "enum": [
                                        "Tcp",
                                        "Udp"
                                      ],
                                      "x-ms-enum": {
                                        "name": "TransportProtocol",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Tcp",
                                            "value": "Tcp"
                                          },
                                          {
                                            "name": "Udp",
                                            "value": "Udp"
                                          }
                                        ]
                                      }
                                    },
                                    "backendPort": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Backend port of the target virtual machine."
                                    }
                                  }
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "virtualNetworkPoolName": {
                            "type": "string",
                            "description": "The virtual network pool associated with this subnet."
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the virtual network.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "delete": {
        "operationId": "VirtualNetworks_Delete",
        "tags": [
          "VirtualNetworks"
        ],
        "description": "Delete virtual network. This operation can take a while to complete.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "labName",
            "in": "path",
            "description": "The name of the lab.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the VirtualNetwork",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/schedules": {
      "get": {
        "operationId": "GlobalSchedules_ListByResourceGroup",
        "tags": [
          "GlobalSchedules"
        ],
        "description": "List schedules in a resource group.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=status)'",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply to the operation. Example: '$filter=contains(name,'myName')",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The maximum number of resources to return from the operation. Example: '$top=10'",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "The ordering expression for the results, using OData notation. Example: '$orderby=name desc'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Schedule items on this page",
                  "items": {
                    "type": "object",
                    "description": "A schedule.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The identifier of the resource.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource.",
                        "readOnly": true
                      },
                      "location": {
                        "type": "string",
                        "description": "The location of the resource."
                      },
                      "tags": {
                        "type": "object",
                        "description": "The tags of the resource.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "properties": {
                        "description": "The properties of the resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "description": "The status of the schedule (i.e. Enabled, Disabled)",
                            "default": "Disabled",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "EnableStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled"
                                }
                              ]
                            }
                          },
                          "taskType": {
                            "type": "string",
                            "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                          },
                          "weeklyRecurrence": {
                            "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                            "type": "object",
                            "properties": {
                              "weekdays": {
                                "type": "array",
                                "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "time": {
                                "type": "string",
                                "description": "The time of the day the schedule will occur."
                              }
                            }
                          },
                          "dailyRecurrence": {
                            "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                            "type": "object",
                            "properties": {
                              "time": {
                                "type": "string",
                                "description": "The time of day the schedule will occur."
                              }
                            }
                          },
                          "hourlyRecurrence": {
                            "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                            "type": "object",
                            "properties": {
                              "minute": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Minutes of the hour the schedule will run."
                              }
                            }
                          },
                          "timeZoneId": {
                            "type": "string",
                            "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                          },
                          "notificationSettings": {
                            "description": "Notification settings.",
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string",
                                "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                "default": "Disabled",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "EnableStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled"
                                    }
                                  ]
                                }
                              },
                              "timeInMinutes": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Time in minutes before event at which notification will be sent."
                              },
                              "webhookUrl": {
                                "type": "string",
                                "description": "The webhook URL to which the notification will be sent."
                              },
                              "emailRecipient": {
                                "type": "string",
                                "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                              },
                              "notificationLocale": {
                                "type": "string",
                                "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                              }
                            }
                          },
                          "createdDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The creation date of the schedule.",
                            "readOnly": true
                          },
                          "targetResourceId": {
                            "type": "string",
                            "description": "The resource ID to which the schedule belongs"
                          },
                          "provisioningState": {
                            "type": "string",
                            "description": "The provisioning status of the resource.",
                            "readOnly": true
                          },
                          "uniqueIdentifier": {
                            "type": "string",
                            "description": "The unique immutable identifier of a resource (Guid).",
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "required": [
                      "properties"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/schedules/{name}": {
      "get": {
        "operationId": "GlobalSchedules_Get",
        "tags": [
          "GlobalSchedules"
        ],
        "description": "Get schedule.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the Schedule",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify the $expand query. Example: 'properties($select=status)'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A schedule.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the schedule (i.e. Enabled, Disabled)",
                      "default": "Disabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "EnableStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "taskType": {
                      "type": "string",
                      "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                    },
                    "weeklyRecurrence": {
                      "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                      "type": "object",
                      "properties": {
                        "weekdays": {
                          "type": "array",
                          "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                          "items": {
                            "type": "string"
                          }
                        },
                        "time": {
                          "type": "string",
                          "description": "The time of the day the schedule will occur."
                        }
                      }
                    },
                    "dailyRecurrence": {
                      "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                      "type": "object",
                      "properties": {
                        "time": {
                          "type": "string",
                          "description": "The time of day the schedule will occur."
                        }
                      }
                    },
                    "hourlyRecurrence": {
                      "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                      "type": "object",
                      "properties": {
                        "minute": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Minutes of the hour the schedule will run."
                        }
                      }
                    },
                    "timeZoneId": {
                      "type": "string",
                      "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                    },
                    "notificationSettings": {
                      "description": "Notification settings.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "timeInMinutes": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Time in minutes before event at which notification will be sent."
                        },
                        "webhookUrl": {
                          "type": "string",
                          "description": "The webhook URL to which the notification will be sent."
                        },
                        "emailRecipient": {
                          "type": "string",
                          "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                        },
                        "notificationLocale": {
                          "type": "string",
                          "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                        }
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the schedule.",
                      "readOnly": true
                    },
                    "targetResourceId": {
                      "type": "string",
                      "description": "The resource ID to which the schedule belongs"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "put": {
        "operationId": "GlobalSchedules_CreateOrUpdate",
        "tags": [
          "GlobalSchedules"
        ],
        "description": "Create or replace an existing schedule.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the Schedule",
            "required": true,
            "type": "string"
          },
          {
            "name": "schedule",
            "in": "body",
            "description": "A schedule.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A schedule.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the schedule (i.e. Enabled, Disabled)",
                      "default": "Disabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "EnableStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "taskType": {
                      "type": "string",
                      "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                    },
                    "weeklyRecurrence": {
                      "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                      "type": "object",
                      "properties": {
                        "weekdays": {
                          "type": "array",
                          "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                          "items": {
                            "type": "string"
                          }
                        },
                        "time": {
                          "type": "string",
                          "description": "The time of the day the schedule will occur."
                        }
                      }
                    },
                    "dailyRecurrence": {
                      "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                      "type": "object",
                      "properties": {
                        "time": {
                          "type": "string",
                          "description": "The time of day the schedule will occur."
                        }
                      }
                    },
                    "hourlyRecurrence": {
                      "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                      "type": "object",
                      "properties": {
                        "minute": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Minutes of the hour the schedule will run."
                        }
                      }
                    },
                    "timeZoneId": {
                      "type": "string",
                      "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                    },
                    "notificationSettings": {
                      "description": "Notification settings.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "timeInMinutes": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Time in minutes before event at which notification will be sent."
                        },
                        "webhookUrl": {
                          "type": "string",
                          "description": "The webhook URL to which the notification will be sent."
                        },
                        "emailRecipient": {
                          "type": "string",
                          "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                        },
                        "notificationLocale": {
                          "type": "string",
                          "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                        }
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the schedule.",
                      "readOnly": true
                    },
                    "targetResourceId": {
                      "type": "string",
                      "description": "The resource ID to which the schedule belongs"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Schedule' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "A schedule.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the schedule (i.e. Enabled, Disabled)",
                      "default": "Disabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "EnableStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "taskType": {
                      "type": "string",
                      "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                    },
                    "weeklyRecurrence": {
                      "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                      "type": "object",
                      "properties": {
                        "weekdays": {
                          "type": "array",
                          "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                          "items": {
                            "type": "string"
                          }
                        },
                        "time": {
                          "type": "string",
                          "description": "The time of the day the schedule will occur."
                        }
                      }
                    },
                    "dailyRecurrence": {
                      "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                      "type": "object",
                      "properties": {
                        "time": {
                          "type": "string",
                          "description": "The time of day the schedule will occur."
                        }
                      }
                    },
                    "hourlyRecurrence": {
                      "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                      "type": "object",
                      "properties": {
                        "minute": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Minutes of the hour the schedule will run."
                        }
                      }
                    },
                    "timeZoneId": {
                      "type": "string",
                      "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                    },
                    "notificationSettings": {
                      "description": "Notification settings.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "timeInMinutes": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Time in minutes before event at which notification will be sent."
                        },
                        "webhookUrl": {
                          "type": "string",
                          "description": "The webhook URL to which the notification will be sent."
                        },
                        "emailRecipient": {
                          "type": "string",
                          "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                        },
                        "notificationLocale": {
                          "type": "string",
                          "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                        }
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the schedule.",
                      "readOnly": true
                    },
                    "targetResourceId": {
                      "type": "string",
                      "description": "The resource ID to which the schedule belongs"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          },
          "201": {
            "description": "Resource 'Schedule' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "A schedule.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the schedule (i.e. Enabled, Disabled)",
                      "default": "Disabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "EnableStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "taskType": {
                      "type": "string",
                      "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                    },
                    "weeklyRecurrence": {
                      "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                      "type": "object",
                      "properties": {
                        "weekdays": {
                          "type": "array",
                          "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                          "items": {
                            "type": "string"
                          }
                        },
                        "time": {
                          "type": "string",
                          "description": "The time of the day the schedule will occur."
                        }
                      }
                    },
                    "dailyRecurrence": {
                      "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                      "type": "object",
                      "properties": {
                        "time": {
                          "type": "string",
                          "description": "The time of day the schedule will occur."
                        }
                      }
                    },
                    "hourlyRecurrence": {
                      "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                      "type": "object",
                      "properties": {
                        "minute": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Minutes of the hour the schedule will run."
                        }
                      }
                    },
                    "timeZoneId": {
                      "type": "string",
                      "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                    },
                    "notificationSettings": {
                      "description": "Notification settings.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "timeInMinutes": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Time in minutes before event at which notification will be sent."
                        },
                        "webhookUrl": {
                          "type": "string",
                          "description": "The webhook URL to which the notification will be sent."
                        },
                        "emailRecipient": {
                          "type": "string",
                          "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                        },
                        "notificationLocale": {
                          "type": "string",
                          "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                        }
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the schedule.",
                      "readOnly": true
                    },
                    "targetResourceId": {
                      "type": "string",
                      "description": "The resource ID to which the schedule belongs"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "patch": {
        "operationId": "GlobalSchedules_Update",
        "tags": [
          "GlobalSchedules"
        ],
        "description": "Allows modifying tags of schedules. All other properties will be ignored.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the Schedule",
            "required": true,
            "type": "string"
          },
          {
            "name": "schedule",
            "in": "body",
            "description": "A schedule.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A schedule.",
              "properties": {
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A schedule.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the schedule (i.e. Enabled, Disabled)",
                      "default": "Disabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "EnableStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "taskType": {
                      "type": "string",
                      "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                    },
                    "weeklyRecurrence": {
                      "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                      "type": "object",
                      "properties": {
                        "weekdays": {
                          "type": "array",
                          "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                          "items": {
                            "type": "string"
                          }
                        },
                        "time": {
                          "type": "string",
                          "description": "The time of the day the schedule will occur."
                        }
                      }
                    },
                    "dailyRecurrence": {
                      "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                      "type": "object",
                      "properties": {
                        "time": {
                          "type": "string",
                          "description": "The time of day the schedule will occur."
                        }
                      }
                    },
                    "hourlyRecurrence": {
                      "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                      "type": "object",
                      "properties": {
                        "minute": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Minutes of the hour the schedule will run."
                        }
                      }
                    },
                    "timeZoneId": {
                      "type": "string",
                      "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                    },
                    "notificationSettings": {
                      "description": "Notification settings.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "timeInMinutes": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Time in minutes before event at which notification will be sent."
                        },
                        "webhookUrl": {
                          "type": "string",
                          "description": "The webhook URL to which the notification will be sent."
                        },
                        "emailRecipient": {
                          "type": "string",
                          "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                        },
                        "notificationLocale": {
                          "type": "string",
                          "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                        }
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the schedule.",
                      "readOnly": true
                    },
                    "targetResourceId": {
                      "type": "string",
                      "description": "The resource ID to which the schedule belongs"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "delete": {
        "operationId": "GlobalSchedules_Delete",
        "tags": [
          "GlobalSchedules"
        ],
        "description": "Delete schedule.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the Schedule",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/schedules/{name}/execute": {
      "post": {
        "operationId": "GlobalSchedules_Execute",
        "tags": [
          "GlobalSchedules"
        ],
        "description": "Execute a schedule. This operation can take a while to complete.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the Schedule",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/schedules/{name}/retarget": {
      "post": {
        "operationId": "GlobalSchedules_Retarget",
        "tags": [
          "GlobalSchedules"
        ],
        "description": "Updates a schedule's target resource Id. This operation can take a while to complete.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the Schedule",
            "required": true,
            "type": "string"
          },
          {
            "name": "retargetScheduleProperties",
            "in": "body",
            "description": "Properties for retargeting a virtual machine schedule.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Properties for retargeting a virtual machine schedule.",
              "properties": {
                "currentResourceId": {
                  "type": "string",
                  "description": "The resource Id of the virtual machine on which the schedule operates"
                },
                "targetResourceId": {
                  "type": "string",
                  "description": "The resource Id of the virtual machine that the schedule should be retargeted to"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ApplicableSchedule": {
      "type": "object",
      "description": "Schedules applicable to a virtual machine. The schedules may have been defined on a VM or on lab level.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The identifier of the resource.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "The location of the resource."
        },
        "tags": {
          "type": "object",
          "description": "The tags of the resource.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "labVmsShutdown": {
              "type": "object",
              "description": "A schedule.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the schedule (i.e. Enabled, Disabled)",
                      "default": "Disabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "EnableStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "taskType": {
                      "type": "string",
                      "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                    },
                    "weeklyRecurrence": {
                      "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                      "type": "object",
                      "properties": {
                        "weekdays": {
                          "type": "array",
                          "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                          "items": {
                            "type": "string"
                          }
                        },
                        "time": {
                          "type": "string",
                          "description": "The time of the day the schedule will occur."
                        }
                      }
                    },
                    "dailyRecurrence": {
                      "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                      "type": "object",
                      "properties": {
                        "time": {
                          "type": "string",
                          "description": "The time of day the schedule will occur."
                        }
                      }
                    },
                    "hourlyRecurrence": {
                      "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                      "type": "object",
                      "properties": {
                        "minute": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Minutes of the hour the schedule will run."
                        }
                      }
                    },
                    "timeZoneId": {
                      "type": "string",
                      "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                    },
                    "notificationSettings": {
                      "description": "Notification settings.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "timeInMinutes": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Time in minutes before event at which notification will be sent."
                        },
                        "webhookUrl": {
                          "type": "string",
                          "description": "The webhook URL to which the notification will be sent."
                        },
                        "emailRecipient": {
                          "type": "string",
                          "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                        },
                        "notificationLocale": {
                          "type": "string",
                          "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                        }
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the schedule.",
                      "readOnly": true
                    },
                    "targetResourceId": {
                      "type": "string",
                      "description": "The resource ID to which the schedule belongs"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "labVmsStartup": {
              "type": "object",
              "description": "A schedule.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The status of the schedule (i.e. Enabled, Disabled)",
                      "default": "Disabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "EnableStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "taskType": {
                      "type": "string",
                      "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                    },
                    "weeklyRecurrence": {
                      "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                      "type": "object",
                      "properties": {
                        "weekdays": {
                          "type": "array",
                          "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                          "items": {
                            "type": "string"
                          }
                        },
                        "time": {
                          "type": "string",
                          "description": "The time of the day the schedule will occur."
                        }
                      }
                    },
                    "dailyRecurrence": {
                      "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                      "type": "object",
                      "properties": {
                        "time": {
                          "type": "string",
                          "description": "The time of day the schedule will occur."
                        }
                      }
                    },
                    "hourlyRecurrence": {
                      "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                      "type": "object",
                      "properties": {
                        "minute": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Minutes of the hour the schedule will run."
                        }
                      }
                    },
                    "timeZoneId": {
                      "type": "string",
                      "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                    },
                    "notificationSettings": {
                      "description": "Notification settings.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "timeInMinutes": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Time in minutes before event at which notification will be sent."
                        },
                        "webhookUrl": {
                          "type": "string",
                          "description": "The webhook URL to which the notification will be sent."
                        },
                        "emailRecipient": {
                          "type": "string",
                          "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                        },
                        "notificationLocale": {
                          "type": "string",
                          "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                        }
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the schedule.",
                      "readOnly": true
                    },
                    "targetResourceId": {
                      "type": "string",
                      "description": "The resource ID to which the schedule belongs"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "The provisioning status of the resource.",
                      "readOnly": true
                    },
                    "uniqueIdentifier": {
                      "type": "string",
                      "description": "The unique immutable identifier of a resource (Guid).",
                      "readOnly": true
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "required": [
        "properties"
      ]
    },
    "ApplicableScheduleFragment": {
      "type": "object",
      "description": "Schedules applicable to a virtual machine. The schedules may have been defined on a VM or on lab level.",
      "allOf": [
        {
          "type": "object",
          "description": "Represents an update resource",
          "properties": {
            "tags": {
              "type": "object",
              "description": "The tags of the resource.",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "ApplicableScheduleProperties": {
      "type": "object",
      "description": "Properties of a schedules applicable to a virtual machine.",
      "properties": {
        "labVmsShutdown": {
          "type": "object",
          "description": "A schedule.",
          "properties": {
            "id": {
              "type": "string",
              "description": "The identifier of the resource.",
              "readOnly": true
            },
            "name": {
              "type": "string",
              "description": "The name of the resource.",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "The type of the resource.",
              "readOnly": true
            },
            "location": {
              "type": "string",
              "description": "The location of the resource."
            },
            "tags": {
              "type": "object",
              "description": "The tags of the resource.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "properties": {
              "description": "The properties of the resource.",
              "x-ms-client-flatten": true,
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "The status of the schedule (i.e. Enabled, Disabled)",
                  "default": "Disabled",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "EnableStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled"
                      }
                    ]
                  }
                },
                "taskType": {
                  "type": "string",
                  "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                },
                "weeklyRecurrence": {
                  "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                  "type": "object",
                  "properties": {
                    "weekdays": {
                      "type": "array",
                      "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                      "items": {
                        "type": "string"
                      }
                    },
                    "time": {
                      "type": "string",
                      "description": "The time of the day the schedule will occur."
                    }
                  }
                },
                "dailyRecurrence": {
                  "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                  "type": "object",
                  "properties": {
                    "time": {
                      "type": "string",
                      "description": "The time of day the schedule will occur."
                    }
                  }
                },
                "hourlyRecurrence": {
                  "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                  "type": "object",
                  "properties": {
                    "minute": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Minutes of the hour the schedule will run."
                    }
                  }
                },
                "timeZoneId": {
                  "type": "string",
                  "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                },
                "notificationSettings": {
                  "description": "Notification settings.",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                      "default": "Disabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "EnableStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "timeInMinutes": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Time in minutes before event at which notification will be sent."
                    },
                    "webhookUrl": {
                      "type": "string",
                      "description": "The webhook URL to which the notification will be sent."
                    },
                    "emailRecipient": {
                      "type": "string",
                      "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                    },
                    "notificationLocale": {
                      "type": "string",
                      "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                    }
                  }
                },
                "createdDate": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The creation date of the schedule.",
                  "readOnly": true
                },
                "targetResourceId": {
                  "type": "string",
                  "description": "The resource ID to which the schedule belongs"
                },
                "provisioningState": {
                  "type": "string",
                  "description": "The provisioning status of the resource.",
                  "readOnly": true
                },
                "uniqueIdentifier": {
                  "type": "string",
                  "description": "The unique immutable identifier of a resource (Guid).",
                  "readOnly": true
                }
              }
            }
          },
          "required": [
            "properties"
          ]
        },
        "labVmsStartup": {
          "type": "object",
          "description": "A schedule.",
          "properties": {
            "id": {
              "type": "string",
              "description": "The identifier of the resource.",
              "readOnly": true
            },
            "name": {
              "type": "string",
              "description": "The name of the resource.",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "The type of the resource.",
              "readOnly": true
            },
            "location": {
              "type": "string",
              "description": "The location of the resource."
            },
            "tags": {
              "type": "object",
              "description": "The tags of the resource.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "properties": {
              "description": "The properties of the resource.",
              "x-ms-client-flatten": true,
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "The status of the schedule (i.e. Enabled, Disabled)",
                  "default": "Disabled",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "EnableStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled"
                      }
                    ]
                  }
                },
                "taskType": {
                  "type": "string",
                  "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                },
                "weeklyRecurrence": {
                  "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                  "type": "object",
                  "properties": {
                    "weekdays": {
                      "type": "array",
                      "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                      "items": {
                        "type": "string"
                      }
                    },
                    "time": {
                      "type": "string",
                      "description": "The time of the day the schedule will occur."
                    }
                  }
                },
                "dailyRecurrence": {
                  "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                  "type": "object",
                  "properties": {
                    "time": {
                      "type": "string",
                      "description": "The time of day the schedule will occur."
                    }
                  }
                },
                "hourlyRecurrence": {
                  "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                  "type": "object",
                  "properties": {
                    "minute": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Minutes of the hour the schedule will run."
                    }
                  }
                },
                "timeZoneId": {
                  "type": "string",
                  "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                },
                "notificationSettings": {
                  "description": "Notification settings.",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                      "default": "Disabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "EnableStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled"
                          }
                        ]
                      }
                    },
                    "timeInMinutes": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Time in minutes before event at which notification will be sent."
                    },
                    "webhookUrl": {
                      "type": "string",
                      "description": "The webhook URL to which the notification will be sent."
                    },
                    "emailRecipient": {
                      "type": "string",
                      "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                    },
                    "notificationLocale": {
                      "type": "string",
                      "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                    }
                  }
                },
                "createdDate": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The creation date of the schedule.",
                  "readOnly": true
                },
                "targetResourceId": {
                  "type": "string",
                  "description": "The resource ID to which the schedule belongs"
                },
                "provisioningState": {
                  "type": "string",
                  "description": "The provisioning status of the resource.",
                  "readOnly": true
                },
                "uniqueIdentifier": {
                  "type": "string",
                  "description": "The unique immutable identifier of a resource (Guid).",
                  "readOnly": true
                }
              }
            }
          },
          "required": [
            "properties"
          ]
        }
      }
    },
    "ApplyArtifactsRequest": {
      "type": "object",
      "description": "Request body for applying artifacts to a virtual machine.",
      "properties": {
        "artifacts": {
          "type": "array",
          "description": "The list of artifacts to apply.",
          "items": {
            "type": "object",
            "description": "Properties of an artifact.",
            "properties": {
              "artifactId": {
                "type": "string",
                "description": "The artifact's identifier."
              },
              "artifactTitle": {
                "type": "string",
                "description": "The artifact's title."
              },
              "parameters": {
                "type": "array",
                "description": "The parameters of the artifact.",
                "items": {
                  "type": "object",
                  "description": "Properties of an artifact parameter.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the artifact parameter."
                    },
                    "value": {
                      "type": "string",
                      "description": "The value of the artifact parameter."
                    }
                  }
                }
              },
              "status": {
                "type": "string",
                "description": "The status of the artifact."
              },
              "deploymentStatusMessage": {
                "type": "string",
                "description": "The status message from the deployment."
              },
              "vmExtensionStatusMessage": {
                "type": "string",
                "description": "The status message from the virtual machine extension."
              },
              "installTime": {
                "type": "string",
                "format": "date-time",
                "description": "The time that the artifact starts to install on the virtual machine."
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ArmTemplate": {
      "type": "object",
      "description": "An Azure Resource Manager template.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The identifier of the resource.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "The location of the resource."
        },
        "tags": {
          "type": "object",
          "description": "The tags of the resource.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string",
              "description": "The display name of the ARM template.",
              "readOnly": true
            },
            "description": {
              "type": "string",
              "description": "The description of the ARM template.",
              "readOnly": true
            },
            "publisher": {
              "type": "string",
              "description": "The publisher of the ARM template.",
              "readOnly": true
            },
            "icon": {
              "type": "string",
              "description": "The URI to the icon of the ARM template.",
              "readOnly": true
            },
            "contents": {
              "type": "object",
              "description": "The contents of the ARM template.",
              "additionalProperties": {},
              "readOnly": true
            },
            "createdDate": {
              "type": "string",
              "format": "date-time",
              "description": "The creation date of the armTemplate.",
              "readOnly": true
            },
            "parametersValueFilesInfo": {
              "type": "array",
              "description": "File name and parameter values information from all azuredeploy.*.parameters.json for the ARM template.",
              "items": {
                "type": "object",
                "description": "A file containing a set of parameter values for an ARM template.",
                "properties": {
                  "fileName": {
                    "type": "string",
                    "description": "File name."
                  },
                  "parametersValueInfo": {
                    "type": "object",
                    "description": "Contents of the file.",
                    "additionalProperties": {}
                  }
                }
              },
              "readOnly": true,
              "x-ms-identifiers": []
            },
            "enabled": {
              "type": "boolean",
              "description": "Whether or not ARM template is enabled for use by lab user.",
              "readOnly": true
            }
          }
        }
      },
      "required": [
        "properties"
      ]
    },
    "ArmTemplateInfo": {
      "type": "object",
      "description": "Information about a generated ARM template.",
      "properties": {
        "template": {
          "type": "object",
          "description": "The template's contents.",
          "additionalProperties": {}
        },
        "parameters": {
          "type": "object",
          "description": "The parameters of the ARM template.",
          "additionalProperties": {}
        }
      }
    },
    "ArmTemplateList": {
      "type": "object",
      "description": "The response of a list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ArmTemplate items on this page",
          "items": {
            "type": "object",
            "description": "An Azure Resource Manager template.",
            "properties": {
              "id": {
                "type": "string",
                "description": "The identifier of the resource.",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource.",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource.",
                "readOnly": true
              },
              "location": {
                "type": "string",
                "description": "The location of the resource."
              },
              "tags": {
                "type": "object",
                "description": "The tags of the resource.",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "properties": {
                "description": "The properties of the resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "displayName": {
                    "type": "string",
                    "description": "The display name of the ARM template.",
                    "readOnly": true
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the ARM template.",
                    "readOnly": true
                  },
                  "publisher": {
                    "type": "string",
                    "description": "The publisher of the ARM template.",
                    "readOnly": true
                  },
                  "icon": {
                    "type": "string",
                    "description": "The URI to the icon of the ARM template.",
                    "readOnly": true
                  },
                  "contents": {
                    "type": "object",
                    "description": "The contents of the ARM template.",
                    "additionalProperties": {},
                    "readOnly": true
                  },
                  "createdDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The creation date of the armTemplate.",
                    "readOnly": true
                  },
                  "parametersValueFilesInfo": {
                    "type": "array",
                    "description": "File name and parameter values information from all azuredeploy.*.parameters.json for the ARM template.",
                    "items": {
                      "type": "object",
                      "description": "A file containing a set of parameter values for an ARM template.",
                      "properties": {
                        "fileName": {
                          "type": "string",
                          "description": "File name."
                        },
                        "parametersValueInfo": {
                          "type": "object",
                          "description": "Contents of the file.",
                          "additionalProperties": {}
                        }
                      }
                    },
                    "readOnly": true,
                    "x-ms-identifiers": []
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Whether or not ARM template is enabled for use by lab user.",
                    "readOnly": true
                  }
                }
              }
            },
            "required": [
              "properties"
            ]
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ArmTemplateParameterProperties": {
      "type": "object",
      "description": "Properties of an Azure Resource Manager template parameter.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the template parameter."
        },
        "value": {
          "type": "string",
          "description": "The value of the template parameter."
        }
      }
    },
    "ArmTemplateProperties": {
      "type": "object",
      "description": "Properties of an Azure Resource Manager template.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The display name of the ARM template.",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "The description of the ARM template.",
          "readOnly": true
        },
        "publisher": {
          "type": "string",
          "description": "The publisher of the ARM template.",
          "readOnly": true
        },
        "icon": {
          "type": "string",
          "description": "The URI to the icon of the ARM template.",
          "readOnly": true
        },
        "contents": {
          "type": "object",
          "description": "The contents of the ARM template.",
          "additionalProperties": {},
          "readOnly": true
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "description": "The creation date of the armTemplate.",
          "readOnly": true
        },
        "parametersValueFilesInfo": {
          "type": "array",
          "description": "File name and parameter values information from all azuredeploy.*.parameters.json for the ARM template.",
          "items": {
            "type": "object",
            "description": "A file containing a set of parameter values for an ARM template.",
            "properties": {
              "fileName": {
                "type": "string",
                "description": "File name."
              },
              "parametersValueInfo": {
                "type": "object",
                "description": "Contents of the file.",
                "additionalProperties": {}
              }
            }
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether or not ARM template is enabled for use by lab user.",
          "readOnly": true
        }
      }
    },
    "Artifact": {
      "type": "object",
      "description": "An artifact.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The identifier of the resource.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "The location of the resource."
        },
        "tags": {
          "type": "object",
          "description": "The tags of the resource.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "The artifact's title.",
              "readOnly": true
            },
            "description": {
              "type": "string",
              "description": "The artifact's description.",
              "readOnly": true
            },
            "publisher": {
              "type": "string",
              "description": "The artifact's publisher.",
              "readOnly": true
            },
            "filePath": {
              "type": "string",
              "description": "The file path to the artifact.",
              "readOnly": true
            },
            "icon": {
              "type": "string",
              "description": "The URI to the artifact icon.",
              "readOnly": true
            },
            "targetOsType": {
              "type": "string",
              "description": "The artifact's target OS.",
              "readOnly": true
            },
            "parameters": {
              "type": "object",
              "description": "The artifact's parameters.",
              "additionalProperties": {},
              "readOnly": true
            },
            "createdDate": {
              "type": "string",
              "format": "date-time",
              "description": "The artifact's creation date.",
              "readOnly": true
            }
          }
        }
      },
      "required": [
        "properties"
      ]
    },
    "ArtifactDeploymentStatusProperties": {
      "type": "object",
      "description": "Properties of an artifact deployment.",
      "properties": {
        "deploymentStatus": {
          "type": "string",
          "description": "The deployment status of the artifact."
        },
        "artifactsApplied": {
          "type": "integer",
          "format": "int32",
          "description": "The total count of the artifacts that were successfully applied."
        },
        "totalArtifacts": {
          "type": "integer",
          "format": "int32",
          "description": "The total count of the artifacts that were tentatively applied."
        }
      }
    },
    "ArtifactInstallProperties": {
      "type": "object",
      "description": "Properties of an artifact.",
      "properties": {
        "artifactId": {
          "type": "string",
          "description": "The artifact's identifier."
        },
        "artifactTitle": {
          "type": "string",
          "description": "The artifact's title."
        },
        "parameters": {
          "type": "array",
          "description": "The parameters of the artifact.",
          "items": {
            "type": "object",
            "description": "Properties of an artifact parameter.",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the artifact parameter."
              },
              "value": {
                "type": "string",
                "description": "The value of the artifact parameter."
              }
            }
          }
        },
        "status": {
          "type": "string",
          "description": "The status of the artifact."
        },
        "deploymentStatusMessage": {
          "type": "string",
          "description": "The status message from the deployment."
        },
        "vmExtensionStatusMessage": {
          "type": "string",
          "description": "The status message from the virtual machine extension."
        },
        "installTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time that the artifact starts to install on the virtual machine."
        }
      }
    },
    "ArtifactList": {
      "type": "object",
      "description": "The response of a list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Artifact items on this page",
          "items": {
            "type": "object",
            "description": "An artifact.",
            "properties": {
              "id": {
                "type": "string",
                "description": "The identifier of the resource.",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource.",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource.",
                "readOnly": true
              },
              "location": {
                "type": "string",
                "description": "The location of the resource."
              },
              "tags": {
                "type": "object",
                "description": "The tags of the resource.",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "properties": {
                "description": "The properties of the resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The artifact's title.",
                    "readOnly": true
                  },
                  "description": {
                    "type": "string",
                    "description": "The artifact's description.",
                    "readOnly": true
                  },
                  "publisher": {
                    "type": "string",
                    "description": "The artifact's publisher.",
                    "readOnly": true
                  },
                  "filePath": {
                    "type": "string",
                    "description": "The file path to the artifact.",
                    "readOnly": true
                  },
                  "icon": {
                    "type": "string",
                    "description": "The URI to the artifact icon.",
                    "readOnly": true
                  },
                  "targetOsType": {
                    "type": "string",
                    "description": "The artifact's target OS.",
                    "readOnly": true
                  },
                  "parameters": {
                    "type": "object",
                    "description": "The artifact's parameters.",
                    "additionalProperties": {},
                    "readOnly": true
                  },
                  "createdDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The artifact's creation date.",
                    "readOnly": true
                  }
                }
              }
            },
            "required": [
              "properties"
            ]
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ArtifactParameterProperties": {
      "type": "object",
      "description": "Properties of an artifact parameter.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the artifact parameter."
        },
        "value": {
          "type": "string",
          "description": "The value of the artifact parameter."
        }
      }
    },
    "ArtifactProperties": {
      "type": "object",
      "description": "Properties of an artifact.",
      "properties": {
        "title": {
          "type": "string",
          "description": "The artifact's title.",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "The artifact's description.",
          "readOnly": true
        },
        "publisher": {
          "type": "string",
          "description": "The artifact's publisher.",
          "readOnly": true
        },
        "filePath": {
          "type": "string",
          "description": "The file path to the artifact.",
          "readOnly": true
        },
        "icon": {
          "type": "string",
          "description": "The URI to the artifact icon.",
          "readOnly": true
        },
        "targetOsType": {
          "type": "string",
          "description": "The artifact's target OS.",
          "readOnly": true
        },
        "parameters": {
          "type": "object",
          "description": "The artifact's parameters.",
          "additionalProperties": {},
          "readOnly": true
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "description": "The artifact's creation date.",
          "readOnly": true
        }
      }
    },
    "ArtifactSource": {
      "type": "object",
      "description": "Properties of an artifact source.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The identifier of the resource.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "The location of the resource."
        },
        "tags": {
          "type": "object",
          "description": "The tags of the resource.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string",
              "description": "The artifact source's display name."
            },
            "uri": {
              "type": "string",
              "description": "The artifact source's URI."
            },
            "sourceType": {
              "description": "The artifact source's type.",
              "type": "string",
              "enum": [
                "VsoGit",
                "GitHub",
                "StorageAccount"
              ],
              "x-ms-enum": {
                "name": "SourceControlType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "VsoGit",
                    "value": "VsoGit"
                  },
                  {
                    "name": "GitHub",
                    "value": "GitHub"
                  },
                  {
                    "name": "StorageAccount",
                    "value": "StorageAccount"
                  }
                ]
              }
            },
            "folderPath": {
              "type": "string",
              "description": "The folder containing artifacts."
            },
            "armTemplateFolderPath": {
              "type": "string",
              "description": "The folder containing Azure Resource Manager templates."
            },
            "branchRef": {
              "type": "string",
              "description": "The artifact source's branch reference."
            },
            "securityToken": {
              "type": "string",
              "description": "The security token to authenticate to the artifact source."
            },
            "status": {
              "description": "Indicates if the artifact source is enabled (values: Enabled, Disabled).",
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "EnableStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled"
                  }
                ]
              }
            },
            "createdDate": {
              "type": "string",
              "format": "date-time",
              "description": "The artifact source's creation date.",
              "readOnly": true
            },
            "provisioningState": {
              "type": "string",
              "description": "The provisioning status of the resource.",
              "readOnly": true
            },
            "uniqueIdentifier": {
              "type": "string",
              "description": "The unique immutable identifier of a resource (Guid).",
              "readOnly": true
            }
          }
        }
      },
      "required": [
        "properties"
      ]
    },
    "ArtifactSourceFragment": {
      "type": "object",
      "description": "Properties of an artifact source.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "The tags of the resource.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ArtifactSourceList": {
      "type": "object",
      "description": "The response of a list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ArtifactSource items on this page",
          "items": {
            "type": "object",
            "description": "Properties of an artifact source.",
            "properties": {
              "id": {
                "type": "string",
                "description": "The identifier of the resource.",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource.",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource.",
                "readOnly": true
              },
              "location": {
                "type": "string",
                "description": "The location of the resource."
              },
              "tags": {
                "type": "object",
                "description": "The tags of the resource.",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "properties": {
                "description": "The properties of the resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "displayName": {
                    "type": "string",
                    "description": "The artifact source's display name."
                  },
                  "uri": {
                    "type": "string",
                    "description": "The artifact source's URI."
                  },
                  "sourceType": {
                    "description": "The artifact source's type.",
                    "type": "string",
                    "enum": [
                      "VsoGit",
                      "GitHub",
                      "StorageAccount"
                    ],
                    "x-ms-enum": {
                      "name": "SourceControlType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "VsoGit",
                          "value": "VsoGit"
                        },
                        {
                          "name": "GitHub",
                          "value": "GitHub"
                        },
                        {
                          "name": "StorageAccount",
                          "value": "StorageAccount"
                        }
                      ]
                    }
                  },
                  "folderPath": {
                    "type": "string",
                    "description": "The folder containing artifacts."
                  },
                  "armTemplateFolderPath": {
                    "type": "string",
                    "description": "The folder containing Azure Resource Manager templates."
                  },
                  "branchRef": {
                    "type": "string",
                    "description": "The artifact source's branch reference."
                  },
                  "securityToken": {
                    "type": "string",
                    "description": "The security token to authenticate to the artifact source."
                  },
                  "status": {
                    "description": "Indicates if the artifact source is enabled (values: Enabled, Disabled).",
                    "type": "string",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "name": "EnableStatus",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Enabled",
                          "value": "Enabled"
                        },
                        {
                          "name": "Disabled",
                          "value": "Disabled"
                        }
                      ]
                    }
                  },
                  "createdDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The artifact source's creation date.",
                    "readOnly": true
                  },
                  "provisioningState": {
                    "type": "string",
                    "description": "The provisioning status of the resource.",
                    "readOnly": true
                  },
                  "uniqueIdentifier": {
                    "type": "string",
                    "description": "The unique immutable identifier of a resource (Guid).",
                    "readOnly": true
                  }
                }
              }
            },
            "required": [
              "properties"
            ]
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ArtifactSourceProperties": {
      "type": "object",
      "description": "Properties of an artifact source.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The artifact source's display name."
        },
        "uri": {
          "type": "string",
          "description": "The artifact source's URI."
        },
        "sourceType": {
          "description": "The artifact source's type.",
          "type": "string",
          "enum": [
            "VsoGit",
            "GitHub",
            "StorageAccount"
          ],
          "x-ms-enum": {
            "name": "SourceControlType",
            "modelAsString": true,
            "values": [
              {
                "name": "VsoGit",
                "value": "VsoGit"
              },
              {
                "name": "GitHub",
                "value": "GitHub"
              },
              {
                "name": "StorageAccount",
                "value": "StorageAccount"
              }
            ]
          }
        },
        "folderPath": {
          "type": "string",
          "description": "The folder containing artifacts."
        },
        "armTemplateFolderPath": {
          "type": "string",
          "description": "The folder containing Azure Resource Manager templates."
        },
        "branchRef": {
          "type": "string",
          "description": "The artifact source's branch reference."
        },
        "securityToken": {
          "type": "string",
          "description": "The security token to authenticate to the artifact source."
        },
        "status": {
          "description": "Indicates if the artifact source is enabled (values: Enabled, Disabled).",
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "EnableStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled"
              }
            ]
          }
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "description": "The artifact source's creation date.",
          "readOnly": true
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning status of the resource.",
          "readOnly": true
        },
        "uniqueIdentifier": {
          "type": "string",
          "description": "The unique immutable identifier of a resource (Guid).",
          "readOnly": true
        }
      }
    },
    "AttachDiskProperties": {
      "type": "object",
      "description": "Properties of the disk to attach.",
      "properties": {
        "leasedByLabVmId": {
          "type": "string",
          "description": "The resource ID of the Lab virtual machine to which the disk is attached."
        }
      }
    },
    "AttachNewDataDiskOptions": {
      "type": "object",
      "description": "Properties to attach new disk to the Virtual Machine.",
      "properties": {
        "diskSizeGiB": {
          "type": "integer",
          "format": "int32",
          "description": "Size of the disk to be attached in Gibibytes."
        },
        "diskName": {
          "type": "string",
          "description": "The name of the disk to be attached."
        },
        "diskType": {
          "description": "The storage type for the disk (i.e. Standard, Premium).",
          "type": "string",
          "enum": [
            "Standard",
            "Premium",
            "StandardSSD"
          ],
          "x-ms-enum": {
            "name": "StorageType",
            "modelAsString": true,
            "values": [
              {
                "name": "Standard",
                "value": "Standard"
              },
              {
                "name": "Premium",
                "value": "Premium"
              },
              {
                "name": "StandardSSD",
                "value": "StandardSSD"
              }
            ]
          }
        }
      }
    },
    "BulkCreationParameters": {
      "type": "object",
      "description": "Parameters for creating multiple virtual machines as a single action.",
      "properties": {
        "instanceCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of virtual machine instances to create."
        }
      }
    },
    "ComputeDataDisk": {
      "type": "object",
      "description": "A data disks attached to a virtual machine.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets data disk name."
        },
        "diskUri": {
          "type": "string",
          "description": "When backed by a blob, the URI of underlying blob."
        },
        "managedDiskId": {
          "type": "string",
          "description": "When backed by managed disk, this is the ID of the compute disk resource."
        },
        "diskSizeGiB": {
          "type": "integer",
          "format": "int32",
          "description": "Gets data disk size in GiB."
        }
      }
    },
    "ComputeVmInstanceViewStatus": {
      "type": "object",
      "description": "Status information about a virtual machine.",
      "properties": {
        "code": {
          "type": "string",
          "description": "Gets the status Code."
        },
        "displayStatus": {
          "type": "string",
          "description": "Gets the short localizable label for the status."
        },
        "message": {
          "type": "string",
          "description": "Gets the message associated with the status."
        }
      }
    },
    "ComputeVmProperties": {
      "type": "object",
      "description": "Properties of a virtual machine returned by the Microsoft.Compute API.",
      "properties": {
        "statuses": {
          "type": "array",
          "description": "Gets the statuses of the virtual machine.",
          "items": {
            "type": "object",
            "description": "Status information about a virtual machine.",
            "properties": {
              "code": {
                "type": "string",
                "description": "Gets the status Code."
              },
              "displayStatus": {
                "type": "string",
                "description": "Gets the short localizable label for the status."
              },
              "message": {
                "type": "string",
                "description": "Gets the message associated with the status."
              }
            }
          },
          "x-ms-identifiers": []
        },
        "osType": {
          "type": "string",
          "description": "Gets the OS type of the virtual machine."
        },
        "vmSize": {
          "type": "string",
          "description": "Gets the size of the virtual machine."
        },
        "networkInterfaceId": {
          "type": "string",
          "description": "Gets the network interface ID of the virtual machine."
        },
        "osDiskId": {
          "type": "string",
          "description": "Gets OS disk blob uri for the virtual machine."
        },
        "dataDiskIds": {
          "type": "array",
          "description": "Gets data disks blob uri for the virtual machine.",
          "items": {
            "type": "string"
          }
        },
        "dataDisks": {
          "type": "array",
          "description": "Gets all data disks attached to the virtual machine.",
          "items": {
            "type": "object",
            "description": "A data disks attached to a virtual machine.",
            "properties": {
              "name": {
                "type": "string",
                "description": "Gets data disk name."
              },
              "diskUri": {
                "type": "string",
                "description": "When backed by a blob, the URI of underlying blob."
              },
              "managedDiskId": {
                "type": "string",
                "description": "When backed by managed disk, this is the ID of the compute disk resource."
              },
              "diskSizeGiB": {
                "type": "integer",
                "format": "int32",
                "description": "Gets data disk size in GiB."
              }
            }
          }
        }
      }
    },
    "CostThresholdProperties": {
      "type": "object",
      "description": "Properties of a cost threshold item.",
      "properties": {
        "thresholdId": {
          "type": "string",
          "description": "The ID of the cost threshold item."
        },
        "percentageThreshold": {
          "description": "The value of the percentage cost threshold.",
          "type": "object",
          "properties": {
            "thresholdValue": {
              "type": "number",
              "format": "double",
              "description": "The cost threshold value."
            }
          }
        },
        "displayOnChart": {
          "description": "Indicates whether this threshold will be displayed on cost charts.",
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "CostThresholdStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled"
              }
            ]
          }
        },
        "sendNotificationWhenExceeded": {
          "description": "Indicates whether notifications will be sent when this threshold is exceeded.",
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "CostThresholdStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled"
              }
            ]
          }
        },
        "notificationSent": {
          "type": "string",
          "description": "Indicates the datetime when notifications were last sent for this threshold."
        }
      }
    },
    "CostThresholdStatus": {
      "type": "string",
      "description": "Indicates whether this threshold will be displayed on cost charts.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "CostThresholdStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          }
        ]
      }
    },
    "CostType": {
      "type": "string",
      "description": "The type of the cost.",
      "enum": [
        "Unavailable",
        "Reported",
        "Projected"
      ],
      "x-ms-enum": {
        "name": "CostType",
        "modelAsString": true,
        "values": [
          {
            "name": "Unavailable",
            "value": "Unavailable"
          },
          {
            "name": "Reported",
            "value": "Reported"
          },
          {
            "name": "Projected",
            "value": "Projected"
          }
        ]
      }
    },
    "CustomImage": {
      "type": "object",
      "description": "A custom image.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The identifier of the resource.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "The location of the resource."
        },
        "tags": {
          "type": "object",
          "description": "The tags of the resource.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "vm": {
              "description": "The virtual machine from which the image is to be created.",
              "type": "object",
              "properties": {
                "sourceVmId": {
                  "type": "string",
                  "description": "The source vm identifier."
                },
                "windowsOsInfo": {
                  "description": "The Windows OS information of the VM.",
                  "type": "object",
                  "properties": {
                    "windowsOsState": {
                      "description": "The state of the Windows OS (i.e. NonSysprepped, SysprepRequested, SysprepApplied).",
                      "type": "string",
                      "enum": [
                        "NonSysprepped",
                        "SysprepRequested",
                        "SysprepApplied"
                      ],
                      "x-ms-enum": {
                        "name": "WindowsOsState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NonSysprepped",
                            "value": "NonSysprepped"
                          },
                          {
                            "name": "SysprepRequested",
                            "value": "SysprepRequested"
                          },
                          {
                            "name": "SysprepApplied",
                            "value": "SysprepApplied"
                          }
                        ]
                      }
                    }
                  }
                },
                "linuxOsInfo": {
                  "description": "The Linux OS information of the VM.",
                  "type": "object",
                  "properties": {
                    "linuxOsState": {
                      "description": "The state of the Linux OS (i.e. NonDeprovisioned, DeprovisionRequested, DeprovisionApplied).",
                      "type": "string",
                      "enum": [
                        "NonDeprovisioned",
                        "DeprovisionRequested",
                        "DeprovisionApplied"
                      ],
                      "x-ms-enum": {
                        "name": "LinuxOsState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NonDeprovisioned",
                            "value": "NonDeprovisioned"
                          },
                          {
                            "name": "DeprovisionRequested",
                            "value": "DeprovisionRequested"
                          },
                          {
                            "name": "DeprovisionApplied",
                            "value": "DeprovisionApplied"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "vhd": {
              "description": "The VHD from which the image is to be created.",
              "type": "object",
              "properties": {
                "imageName": {
                  "type": "string",
                  "description": "The image name."
                },
                "sysPrep": {
                  "type": "boolean",
                  "description": "Indicates whether sysprep has been run on the VHD."
                },
                "osType": {
                  "description": "The OS type of the custom image (i.e. Windows, Linux)",
                  "type": "string",
                  "enum": [
                    "Windows",
                    "Linux",
                    "None"
                  ],
                  "x-ms-enum": {
                    "name": "CustomImageOsType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Windows",
                        "value": "Windows"
                      },
                      {
                        "name": "Linux",
                        "value": "Linux"
                      },
                      {
                        "name": "None",
                        "value": "None"
                      }
                    ]
                  }
                }
              },
              "required": [
                "osType"
              ]
            },
            "description": {
              "type": "string",
              "description": "The description of the custom image."
            },
            "author": {
              "type": "string",
              "description": "The author of the custom image."
            },
            "creationDate": {
              "type": "string",
              "format": "date-time",
              "description": "The creation date of the custom image.",
              "readOnly": true
            },
            "managedImageId": {
              "type": "string",
              "description": "The Managed Image Id backing the custom image."
            },
            "managedSnapshotId": {
              "type": "string",
              "description": "The Managed Snapshot Id backing the custom image."
            },
            "dataDiskStorageInfo": {
              "type": "array",
              "description": "Storage information about the data disks present in the custom image",
              "items": {
                "type": "object",
                "description": "Storage information about the data disks present in the custom image",
                "properties": {
                  "lun": {
                    "type": "string",
                    "description": "Disk Lun"
                  },
                  "storageType": {
                    "description": "Disk Storage Type",
                    "type": "string",
                    "enum": [
                      "Standard",
                      "Premium",
                      "StandardSSD"
                    ],
                    "x-ms-enum": {
                      "name": "StorageType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Standard",
                          "value": "Standard"
                        },
                        {
                          "name": "Premium",
                          "value": "Premium"
                        },
                        {
                          "name": "StandardSSD",
                          "value": "StandardSSD"
                        }
                      ]
                    }
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "customImagePlan": {
              "description": "Storage information about the plan related to this custom image",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The id of the plan, equivalent to name of the plan"
                },
                "publisher": {
                  "type": "string",
                  "description": "The publisher for the plan from the marketplace image the custom image is derived from"
                },
                "offer": {
                  "type": "string",
                  "description": "The offer for the plan from the marketplace image the custom image is derived from"
                }
              }
            },
            "isPlanAuthorized": {
              "type": "boolean",
              "description": "Whether or not the custom images underlying offer/plan has been enabled for programmatic deployment"
            },
            "provisioningState": {
              "type": "string",
              "description": "The provisioning status of the resource.",
              "readOnly": true
            },
            "uniqueIdentifier": {
              "type": "string",
              "description": "The unique immutable identifier of a resource (Guid).",
              "readOnly": true
            }
          }
        }
      },
      "required": [
        "properties"
      ]
    },
    "CustomImageFragment": {
      "type": "object",
      "description": "A custom image.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "The tags of the resource.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "CustomImageList": {
      "type": "object",
      "description": "The response of a list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The CustomImage items on this page",
          "items": {
            "type": "object",
            "description": "A custom image.",
            "properties": {
              "id": {
                "type": "string",
                "description": "The identifier of the resource.",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource.",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource.",
                "readOnly": true
              },
              "location": {
                "type": "string",
                "description": "The location of the resource."
              },
              "tags": {
                "type": "object",
                "description": "The tags of the resource.",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "properties": {
                "description": "The properties of the resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "vm": {
                    "description": "The virtual machine from which the image is to be created.",
                    "type": "object",
                    "properties": {
                      "sourceVmId": {
                        "type": "string",
                        "description": "The source vm identifier."
                      },
                      "windowsOsInfo": {
                        "description": "The Windows OS information of the VM.",
                        "type": "object",
                        "properties": {
                          "windowsOsState": {
                            "description": "The state of the Windows OS (i.e. NonSysprepped, SysprepRequested, SysprepApplied).",
                            "type": "string",
                            "enum": [
                              "NonSysprepped",
                              "SysprepRequested",
                              "SysprepApplied"
                            ],
                            "x-ms-enum": {
                              "name": "WindowsOsState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "NonSysprepped",
                                  "value": "NonSysprepped"
                                },
                                {
                                  "name": "SysprepRequested",
                                  "value": "SysprepRequested"
                                },
                                {
                                  "name": "SysprepApplied",
                                  "value": "SysprepApplied"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "linuxOsInfo": {
                        "description": "The Linux OS information of the VM.",
                        "type": "object",
                        "properties": {
                          "linuxOsState": {
                            "description": "The state of the Linux OS (i.e. NonDeprovisioned, DeprovisionRequested, DeprovisionApplied).",
                            "type": "string",
                            "enum": [
                              "NonDeprovisioned",
                              "DeprovisionRequested",
                              "DeprovisionApplied"
                            ],
                            "x-ms-enum": {
                              "name": "LinuxOsState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "NonDeprovisioned",
                                  "value": "NonDeprovisioned"
                                },
                                {
                                  "name": "DeprovisionRequested",
                                  "value": "DeprovisionRequested"
                                },
                                {
                                  "name": "DeprovisionApplied",
                                  "value": "DeprovisionApplied"
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  },
                  "vhd": {
                    "description": "The VHD from which the image is to be created.",
                    "type": "object",
                    "properties": {
                      "imageName": {
                        "type": "string",
                        "description": "The image name."
                      },
                      "sysPrep": {
                        "type": "boolean",
                        "description": "Indicates whether sysprep has been run on the VHD."
                      },
                      "osType": {
                        "description": "The OS type of the custom image (i.e. Windows, Linux)",
                        "type": "string",
                        "enum": [
                          "Windows",
                          "Linux",
                          "None"
                        ],
                        "x-ms-enum": {
                          "name": "CustomImageOsType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Windows",
                              "value": "Windows"
                            },
                            {
                              "name": "Linux",
                              "value": "Linux"
                            },
                            {
                              "name": "None",
                              "value": "None"
                            }
                          ]
                        }
                      }
                    },
                    "required": [
                      "osType"
                    ]
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the custom image."
                  },
                  "author": {
                    "type": "string",
                    "description": "The author of the custom image."
                  },
                  "creationDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The creation date of the custom image.",
                    "readOnly": true
                  },
                  "managedImageId": {
                    "type": "string",
                    "description": "The Managed Image Id backing the custom image."
                  },
                  "managedSnapshotId": {
                    "type": "string",
                    "description": "The Managed Snapshot Id backing the custom image."
                  },
                  "dataDiskStorageInfo": {
                    "type": "array",
                    "description": "Storage information about the data disks present in the custom image",
                    "items": {
                      "type": "object",
                      "description": "Storage information about the data disks present in the custom image",
                      "properties": {
                        "lun": {
                          "type": "string",
                          "description": "Disk Lun"
                        },
                        "storageType": {
                          "description": "Disk Storage Type",
                          "type": "string",
                          "enum": [
                            "Standard",
                            "Premium",
                            "StandardSSD"
                          ],
                          "x-ms-enum": {
                            "name": "StorageType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Standard",
                                "value": "Standard"
                              },
                              {
                                "name": "Premium",
                                "value": "Premium"
                              },
                              {
                                "name": "StandardSSD",
                                "value": "StandardSSD"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  },
                  "customImagePlan": {
                    "description": "Storage information about the plan related to this custom image",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The id of the plan, equivalent to name of the plan"
                      },
                      "publisher": {
                        "type": "string",
                        "description": "The publisher for the plan from the marketplace image the custom image is derived from"
                      },
                      "offer": {
                        "type": "string",
                        "description": "The offer for the plan from the marketplace image the custom image is derived from"
                      }
                    }
                  },
                  "isPlanAuthorized": {
                    "type": "boolean",
                    "description": "Whether or not the custom images underlying offer/plan has been enabled for programmatic deployment"
                  },
                  "provisioningState": {
                    "type": "string",
                    "description": "The provisioning status of the resource.",
                    "readOnly": true
                  },
                  "uniqueIdentifier": {
                    "type": "string",
                    "description": "The unique immutable identifier of a resource (Guid).",
                    "readOnly": true
                  }
                }
              }
            },
            "required": [
              "properties"
            ]
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "CustomImageOsType": {
      "type": "string",
      "description": "The OS type of the custom image (i.e. Windows, Linux)",
      "enum": [
        "Windows",
        "Linux",
        "None"
      ],
      "x-ms-enum": {
        "name": "CustomImageOsType",
        "modelAsString": true,
        "values": [
          {
            "name": "Windows",
            "value": "Windows"
          },
          {
            "name": "Linux",
            "value": "Linux"
          },
          {
            "name": "None",
            "value": "None"
          }
        ]
      }
    },
    "CustomImageProperties": {
      "type": "object",
      "description": "Properties of a custom image.",
      "properties": {
        "vm": {
          "description": "The virtual machine from which the image is to be created.",
          "type": "object",
          "properties": {
            "sourceVmId": {
              "type": "string",
              "description": "The source vm identifier."
            },
            "windowsOsInfo": {
              "description": "The Windows OS information of the VM.",
              "type": "object",
              "properties": {
                "windowsOsState": {
                  "description": "The state of the Windows OS (i.e. NonSysprepped, SysprepRequested, SysprepApplied).",
                  "type": "string",
                  "enum": [
                    "NonSysprepped",
                    "SysprepRequested",
                    "SysprepApplied"
                  ],
                  "x-ms-enum": {
                    "name": "WindowsOsState",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "NonSysprepped",
                        "value": "NonSysprepped"
                      },
                      {
                        "name": "SysprepRequested",
                        "value": "SysprepRequested"
                      },
                      {
                        "name": "SysprepApplied",
                        "value": "SysprepApplied"
                      }
                    ]
                  }
                }
              }
            },
            "linuxOsInfo": {
              "description": "The Linux OS information of the VM.",
              "type": "object",
              "properties": {
                "linuxOsState": {
                  "description": "The state of the Linux OS (i.e. NonDeprovisioned, DeprovisionRequested, DeprovisionApplied).",
                  "type": "string",
                  "enum": [
                    "NonDeprovisioned",
                    "DeprovisionRequested",
                    "DeprovisionApplied"
                  ],
                  "x-ms-enum": {
                    "name": "LinuxOsState",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "NonDeprovisioned",
                        "value": "NonDeprovisioned"
                      },
                      {
                        "name": "DeprovisionRequested",
                        "value": "DeprovisionRequested"
                      },
                      {
                        "name": "DeprovisionApplied",
                        "value": "DeprovisionApplied"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "vhd": {
          "description": "The VHD from which the image is to be created.",
          "type": "object",
          "properties": {
            "imageName": {
              "type": "string",
              "description": "The image name."
            },
            "sysPrep": {
              "type": "boolean",
              "description": "Indicates whether sysprep has been run on the VHD."
            },
            "osType": {
              "description": "The OS type of the custom image (i.e. Windows, Linux)",
              "type": "string",
              "enum": [
                "Windows",
                "Linux",
                "None"
              ],
              "x-ms-enum": {
                "name": "CustomImageOsType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Windows",
                    "value": "Windows"
                  },
                  {
                    "name": "Linux",
                    "value": "Linux"
                  },
                  {
                    "name": "None",
                    "value": "None"
                  }
                ]
              }
            }
          },
          "required": [
            "osType"
          ]
        },
        "description": {
          "type": "string",
          "description": "The description of the custom image."
        },
        "author": {
          "type": "string",
          "description": "The author of the custom image."
        },
        "creationDate": {
          "type": "string",
          "format": "date-time",
          "description": "The creation date of the custom image.",
          "readOnly": true
        },
        "managedImageId": {
          "type": "string",
          "description": "The Managed Image Id backing the custom image."
        },
        "managedSnapshotId": {
          "type": "string",
          "description": "The Managed Snapshot Id backing the custom image."
        },
        "dataDiskStorageInfo": {
          "type": "array",
          "description": "Storage information about the data disks present in the custom image",
          "items": {
            "type": "object",
            "description": "Storage information about the data disks present in the custom image",
            "properties": {
              "lun": {
                "type": "string",
                "description": "Disk Lun"
              },
              "storageType": {
                "description": "Disk Storage Type",
                "type": "string",
                "enum": [
                  "Standard",
                  "Premium",
                  "StandardSSD"
                ],
                "x-ms-enum": {
                  "name": "StorageType",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Standard",
                      "value": "Standard"
                    },
                    {
                      "name": "Premium",
                      "value": "Premium"
                    },
                    {
                      "name": "StandardSSD",
                      "value": "StandardSSD"
                    }
                  ]
                }
              }
            }
          },
          "x-ms-identifiers": []
        },
        "customImagePlan": {
          "description": "Storage information about the plan related to this custom image",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The id of the plan, equivalent to name of the plan"
            },
            "publisher": {
              "type": "string",
              "description": "The publisher for the plan from the marketplace image the custom image is derived from"
            },
            "offer": {
              "type": "string",
              "description": "The offer for the plan from the marketplace image the custom image is derived from"
            }
          }
        },
        "isPlanAuthorized": {
          "type": "boolean",
          "description": "Whether or not the custom images underlying offer/plan has been enabled for programmatic deployment"
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning status of the resource.",
          "readOnly": true
        },
        "uniqueIdentifier": {
          "type": "string",
          "description": "The unique immutable identifier of a resource (Guid).",
          "readOnly": true
        }
      }
    },
    "CustomImagePropertiesCustom": {
      "type": "object",
      "description": "Properties for creating a custom image from a VHD.",
      "properties": {
        "imageName": {
          "type": "string",
          "description": "The image name."
        },
        "sysPrep": {
          "type": "boolean",
          "description": "Indicates whether sysprep has been run on the VHD."
        },
        "osType": {
          "description": "The OS type of the custom image (i.e. Windows, Linux)",
          "type": "string",
          "enum": [
            "Windows",
            "Linux",
            "None"
          ],
          "x-ms-enum": {
            "name": "CustomImageOsType",
            "modelAsString": true,
            "values": [
              {
                "name": "Windows",
                "value": "Windows"
              },
              {
                "name": "Linux",
                "value": "Linux"
              },
              {
                "name": "None",
                "value": "None"
              }
            ]
          }
        }
      },
      "required": [
        "osType"
      ]
    },
    "CustomImagePropertiesFromPlan": {
      "type": "object",
      "description": "Properties for plan on a custom image.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id of the plan, equivalent to name of the plan"
        },
        "publisher": {
          "type": "string",
          "description": "The publisher for the plan from the marketplace image the custom image is derived from"
        },
        "offer": {
          "type": "string",
          "description": "The offer for the plan from the marketplace image the custom image is derived from"
        }
      }
    },
    "CustomImagePropertiesFromVm": {
      "type": "object",
      "description": "Properties for creating a custom image from a virtual machine.",
      "properties": {
        "sourceVmId": {
          "type": "string",
          "description": "The source vm identifier."
        },
        "windowsOsInfo": {
          "description": "The Windows OS information of the VM.",
          "type": "object",
          "properties": {
            "windowsOsState": {
              "description": "The state of the Windows OS (i.e. NonSysprepped, SysprepRequested, SysprepApplied).",
              "type": "string",
              "enum": [
                "NonSysprepped",
                "SysprepRequested",
                "SysprepApplied"
              ],
              "x-ms-enum": {
                "name": "WindowsOsState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "NonSysprepped",
                    "value": "NonSysprepped"
                  },
                  {
                    "name": "SysprepRequested",
                    "value": "SysprepRequested"
                  },
                  {
                    "name": "SysprepApplied",
                    "value": "SysprepApplied"
                  }
                ]
              }
            }
          }
        },
        "linuxOsInfo": {
          "description": "The Linux OS information of the VM.",
          "type": "object",
          "properties": {
            "linuxOsState": {
              "description": "The state of the Linux OS (i.e. NonDeprovisioned, DeprovisionRequested, DeprovisionApplied).",
              "type": "string",
              "enum": [
                "NonDeprovisioned",
                "DeprovisionRequested",
                "DeprovisionApplied"
              ],
              "x-ms-enum": {
                "name": "LinuxOsState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "NonDeprovisioned",
                    "value": "NonDeprovisioned"
                  },
                  {
                    "name": "DeprovisionRequested",
                    "value": "DeprovisionRequested"
                  },
                  {
                    "name": "DeprovisionApplied",
                    "value": "DeprovisionApplied"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "DataDiskProperties": {
      "type": "object",
      "description": "Request body for adding a new or existing data disk to a virtual machine.",
      "properties": {
        "attachNewDataDiskOptions": {
          "description": "Specifies options to attach a new disk to the virtual machine.",
          "type": "object",
          "properties": {
            "diskSizeGiB": {
              "type": "integer",
              "format": "int32",
              "description": "Size of the disk to be attached in Gibibytes."
            },
            "diskName": {
              "type": "string",
              "description": "The name of the disk to be attached."
            },
            "diskType": {
              "description": "The storage type for the disk (i.e. Standard, Premium).",
              "type": "string",
              "enum": [
                "Standard",
                "Premium",
                "StandardSSD"
              ],
              "x-ms-enum": {
                "name": "StorageType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Standard",
                    "value": "Standard"
                  },
                  {
                    "name": "Premium",
                    "value": "Premium"
                  },
                  {
                    "name": "StandardSSD",
                    "value": "StandardSSD"
                  }
                ]
              }
            }
          }
        },
        "existingLabDiskId": {
          "type": "string",
          "description": "Specifies the existing lab disk id to attach to virtual machine."
        },
        "hostCaching": {
          "description": "Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).",
          "type": "string",
          "enum": [
            "None",
            "ReadOnly",
            "ReadWrite"
          ],
          "x-ms-enum": {
            "name": "HostCachingOptions",
            "modelAsString": true,
            "values": [
              {
                "name": "None",
                "value": "None"
              },
              {
                "name": "ReadOnly",
                "value": "ReadOnly"
              },
              {
                "name": "ReadWrite",
                "value": "ReadWrite"
              }
            ]
          }
        }
      }
    },
    "DataDiskStorageTypeInfo": {
      "type": "object",
      "description": "Storage information about the data disks present in the custom image",
      "properties": {
        "lun": {
          "type": "string",
          "description": "Disk Lun"
        },
        "storageType": {
          "description": "Disk Storage Type",
          "type": "string",
          "enum": [
            "Standard",
            "Premium",
            "StandardSSD"
          ],
          "x-ms-enum": {
            "name": "StorageType",
            "modelAsString": true,
            "values": [
              {
                "name": "Standard",
                "value": "Standard"
              },
              {
                "name": "Premium",
                "value": "Premium"
              },
              {
                "name": "StandardSSD",
                "value": "StandardSSD"
              }
            ]
          }
        }
      }
    },
    "DayDetails": {
      "type": "object",
      "description": "Properties of a daily schedule.",
      "properties": {
        "time": {
          "type": "string",
          "description": "The time of day the schedule will occur."
        }
      }
    },
    "DetachDataDiskProperties": {
      "type": "object",
      "description": "Request body for detaching data disk from a virtual machine.",
      "properties": {
        "existingLabDiskId": {
          "type": "string",
          "description": "Specifies the disk resource ID to detach from virtual machine."
        }
      }
    },
    "DetachDiskProperties": {
      "type": "object",
      "description": "Properties of the disk to detach.",
      "properties": {
        "leasedByLabVmId": {
          "type": "string",
          "description": "The resource ID of the Lab VM to which the disk is attached."
        }
      }
    },
    "Disk": {
      "type": "object",
      "description": "A Disk.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The identifier of the resource.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "The location of the resource."
        },
        "tags": {
          "type": "object",
          "description": "The tags of the resource.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The properties of the disk.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "diskType": {
              "description": "The storage type for the disk (i.e. Standard, Premium).",
              "type": "string",
              "enum": [
                "Standard",
                "Premium",
                "StandardSSD"
              ],
              "x-ms-enum": {
                "name": "StorageType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Standard",
                    "value": "Standard"
                  },
                  {
                    "name": "Premium",
                    "value": "Premium"
                  },
                  {
                    "name": "StandardSSD",
                    "value": "StandardSSD"
                  }
                ]
              }
            },
            "diskSizeGiB": {
              "type": "integer",
              "format": "int32",
              "description": "The size of the disk in Gibibytes."
            },
            "leasedByLabVmId": {
              "type": "string",
              "description": "The resource ID of the VM to which this disk is leased."
            },
            "diskBlobName": {
              "type": "string",
              "description": "When backed by a blob, the name of the VHD blob without extension."
            },
            "diskUri": {
              "type": "string",
              "description": "When backed by a blob, the URI of underlying blob."
            },
            "storageAccountId": {
              "type": "string",
              "description": "When backed by a blob, the storage account where the blob is."
            },
            "createdDate": {
              "type": "string",
              "format": "date-time",
              "description": "The creation date of the disk.",
              "readOnly": true
            },
            "hostCaching": {
              "type": "string",
              "description": "The host caching policy of the disk (i.e. None, ReadOnly, ReadWrite)."
            },
            "managedDiskId": {
              "type": "string",
              "description": "When backed by managed disk, this is the ID of the compute disk resource."
            },
            "provisioningState": {
              "type": "string",
              "description": "The provisioning status of the resource.",
              "readOnly": true
            },
            "uniqueIdentifier": {
              "type": "string",
              "description": "The unique immutable identifier of a resource (Guid).",
              "readOnly": true
            }
          }
        }
      },
      "required": [
        "properties"
      ]
    },
    "DiskFragment": {
      "type": "object",
      "description": "A Disk.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "The tags of the resource.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "DiskList": {
      "type": "object",
      "description": "The response of a list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Disk items on this page",
          "items": {
            "type": "object",
            "description": "A Disk.",
            "properties": {
              "id": {
                "type": "string",
                "description": "The identifier of the resource.",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource.",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource.",
                "readOnly": true
              },
              "location": {
                "type": "string",
                "description": "The location of the resource."
              },
              "tags": {
                "type": "object",
                "description": "The tags of the resource.",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "properties": {
                "description": "The properties of the disk.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "diskType": {
                    "description": "The storage type for the disk (i.e. Standard, Premium).",
                    "type": "string",
                    "enum": [
                      "Standard",
                      "Premium",
                      "StandardSSD"
                    ],
                    "x-ms-enum": {
                      "name": "StorageType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Standard",
                          "value": "Standard"
                        },
                        {
                          "name": "Premium",
                          "value": "Premium"
                        },
                        {
                          "name": "StandardSSD",
                          "value": "StandardSSD"
                        }
                      ]
                    }
                  },
                  "diskSizeGiB": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The size of the disk in Gibibytes."
                  },
                  "leasedByLabVmId": {
                    "type": "string",
                    "description": "The resource ID of the VM to which this disk is leased."
                  },
                  "diskBlobName": {
                    "type": "string",
                    "description": "When backed by a blob, the name of the VHD blob without extension."
                  },
                  "diskUri": {
                    "type": "string",
                    "description": "When backed by a blob, the URI of underlying blob."
                  },
                  "storageAccountId": {
                    "type": "string",
                    "description": "When backed by a blob, the storage account where the blob is."
                  },
                  "createdDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The creation date of the disk.",
                    "readOnly": true
                  },
                  "hostCaching": {
                    "type": "string",
                    "description": "The host caching policy of the disk (i.e. None, ReadOnly, ReadWrite)."
                  },
                  "managedDiskId": {
                    "type": "string",
                    "description": "When backed by managed disk, this is the ID of the compute disk resource."
                  },
                  "provisioningState": {
                    "type": "string",
                    "description": "The provisioning status of the resource.",
                    "readOnly": true
                  },
                  "uniqueIdentifier": {
                    "type": "string",
                    "description": "The unique immutable identifier of a resource (Guid).",
                    "readOnly": true
                  }
                }
              }
            },
            "required": [
              "properties"
            ]
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DiskProperties": {
      "type": "object",
      "description": "Properties of a disk.",
      "properties": {
        "diskType": {
          "description": "The storage type for the disk (i.e. Standard, Premium).",
          "type": "string",
          "enum": [
            "Standard",
            "Premium",
            "StandardSSD"
          ],
          "x-ms-enum": {
            "name": "StorageType",
            "modelAsString": true,
            "values": [
              {
                "name": "Standard",
                "value": "Standard"
              },
              {
                "name": "Premium",
                "value": "Premium"
              },
              {
                "name": "StandardSSD",
                "value": "StandardSSD"
              }
            ]
          }
        },
        "diskSizeGiB": {
          "type": "integer",
          "format": "int32",
          "description": "The size of the disk in Gibibytes."
        },
        "leasedByLabVmId": {
          "type": "string",
          "description": "The resource ID of the VM to which this disk is leased."
        },
        "diskBlobName": {
          "type": "string",
          "description": "When backed by a blob, the name of the VHD blob without extension."
        },
        "diskUri": {
          "type": "string",
          "description": "When backed by a blob, the URI of underlying blob."
        },
        "storageAccountId": {
          "type": "string",
          "description": "When backed by a blob, the storage account where the blob is."
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "description": "The creation date of the disk.",
          "readOnly": true
        },
        "hostCaching": {
          "type": "string",
          "description": "The host caching policy of the disk (i.e. None, ReadOnly, ReadWrite)."
        },
        "managedDiskId": {
          "type": "string",
          "description": "When backed by managed disk, this is the ID of the compute disk resource."
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning status of the resource.",
          "readOnly": true
        },
        "uniqueIdentifier": {
          "type": "string",
          "description": "The unique immutable identifier of a resource (Guid).",
          "readOnly": true
        }
      }
    },
    "DtlEnvironment": {
      "type": "object",
      "description": "An environment, which is essentially an ARM template deployment.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The identifier of the resource.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "The location of the resource."
        },
        "tags": {
          "type": "object",
          "description": "The tags of the resource.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The properties of the environment.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "deploymentProperties": {
              "description": "The deployment properties of the environment.",
              "type": "object",
              "properties": {
                "armTemplateId": {
                  "type": "string",
                  "description": "The Azure Resource Manager template's identifier."
                },
                "parameters": {
                  "type": "array",
                  "description": "The parameters of the Azure Resource Manager template.",
                  "items": {
                    "type": "object",
                    "description": "Properties of an Azure Resource Manager template parameter.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the template parameter."
                      },
                      "value": {
                        "type": "string",
                        "description": "The value of the template parameter."
                      }
                    }
                  }
                }
              }
            },
            "armTemplateDisplayName": {
              "type": "string",
              "description": "The display name of the Azure Resource Manager template that produced the environment."
            },
            "resourceGroupId": {
              "type": "string",
              "description": "The identifier of the resource group containing the environment's resources.",
              "readOnly": true
            },
            "createdByUser": {
              "type": "string",
              "description": "The creator of the environment.",
              "readOnly": true
            },
            "provisioningState": {
              "type": "string",
              "description": "The provisioning status of the resource.",
              "readOnly": true
            },
            "uniqueIdentifier": {
              "type": "string",
              "description": "The unique immutable identifier of a resource (Guid).",
              "readOnly": true
            }
          }
        }
      },
      "required": [
        "properties"
      ]
    },
    "DtlEnvironmentFragment": {
      "type": "object",
      "description": "An environment, which is essentially an ARM template deployment.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "The tags of the resource.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "DtlEnvironmentList": {
      "type": "object",
      "description": "The response of a list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DtlEnvironment items on this page",
          "items": {
            "type": "object",
            "description": "An environment, which is essentially an ARM template deployment.",
            "properties": {
              "id": {
                "type": "string",
                "description": "The identifier of the resource.",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource.",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource.",
                "readOnly": true
              },
              "location": {
                "type": "string",
                "description": "The location of the resource."
              },
              "tags": {
                "type": "object",
                "description": "The tags of the resource.",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "properties": {
                "description": "The properties of the environment.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "deploymentProperties": {
                    "description": "The deployment properties of the environment.",
                    "type": "object",
                    "properties": {
                      "armTemplateId": {
                        "type": "string",
                        "description": "The Azure Resource Manager template's identifier."
                      },
                      "parameters": {
                        "type": "array",
                        "description": "The parameters of the Azure Resource Manager template.",
                        "items": {
                          "type": "object",
                          "description": "Properties of an Azure Resource Manager template parameter.",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of the template parameter."
                            },
                            "value": {
                              "type": "string",
                              "description": "The value of the template parameter."
                            }
                          }
                        }
                      }
                    }
                  },
                  "armTemplateDisplayName": {
                    "type": "string",
                    "description": "The display name of the Azure Resource Manager template that produced the environment."
                  },
                  "resourceGroupId": {
                    "type": "string",
                    "description": "The identifier of the resource group containing the environment's resources.",
                    "readOnly": true
                  },
                  "createdByUser": {
                    "type": "string",
                    "description": "The creator of the environment.",
                    "readOnly": true
                  },
                  "provisioningState": {
                    "type": "string",
                    "description": "The provisioning status of the resource.",
                    "readOnly": true
                  },
                  "uniqueIdentifier": {
                    "type": "string",
                    "description": "The unique immutable identifier of a resource (Guid).",
                    "readOnly": true
                  }
                }
              }
            },
            "required": [
              "properties"
            ]
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "EnableStatus": {
      "type": "string",
      "description": "Indicates if the artifact source is enabled (values: Enabled, Disabled).",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "EnableStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          }
        ]
      }
    },
    "EnvironmentDeploymentProperties": {
      "type": "object",
      "description": "Properties of an environment deployment.",
      "properties": {
        "armTemplateId": {
          "type": "string",
          "description": "The Azure Resource Manager template's identifier."
        },
        "parameters": {
          "type": "array",
          "description": "The parameters of the Azure Resource Manager template.",
          "items": {
            "type": "object",
            "description": "Properties of an Azure Resource Manager template parameter.",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the template parameter."
              },
              "value": {
                "type": "string",
                "description": "The value of the template parameter."
              }
            }
          }
        }
      }
    },
    "EnvironmentPermission": {
      "type": "string",
      "description": "The access rights to be granted to the user when provisioning an environment",
      "enum": [
        "Reader",
        "Contributor"
      ],
      "x-ms-enum": {
        "name": "EnvironmentPermission",
        "modelAsString": true,
        "values": [
          {
            "name": "Reader",
            "value": "Reader"
          },
          {
            "name": "Contributor",
            "value": "Contributor"
          }
        ]
      }
    },
    "EnvironmentProperties": {
      "type": "object",
      "description": "Properties of an environment.",
      "properties": {
        "deploymentProperties": {
          "description": "The deployment properties of the environment.",
          "type": "object",
          "properties": {
            "armTemplateId": {
              "type": "string",
              "description": "The Azure Resource Manager template's identifier."
            },
            "parameters": {
              "type": "array",
              "description": "The parameters of the Azure Resource Manager template.",
              "items": {
                "type": "object",
                "description": "Properties of an Azure Resource Manager template parameter.",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the template parameter."
                  },
                  "value": {
                    "type": "string",
                    "description": "The value of the template parameter."
                  }
                }
              }
            }
          }
        },
        "armTemplateDisplayName": {
          "type": "string",
          "description": "The display name of the Azure Resource Manager template that produced the environment."
        },
        "resourceGroupId": {
          "type": "string",
          "description": "The identifier of the resource group containing the environment's resources.",
          "readOnly": true
        },
        "createdByUser": {
          "type": "string",
          "description": "The creator of the environment.",
          "readOnly": true
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning status of the resource.",
          "readOnly": true
        },
        "uniqueIdentifier": {
          "type": "string",
          "description": "The unique immutable identifier of a resource (Guid).",
          "readOnly": true
        }
      }
    },
    "EvaluatePoliciesProperties": {
      "type": "object",
      "description": "Properties for evaluating a policy set.",
      "properties": {
        "factName": {
          "type": "string",
          "description": "The fact name."
        },
        "factData": {
          "type": "string",
          "description": "The fact data."
        },
        "valueOffset": {
          "type": "string",
          "description": "The value offset."
        },
        "userObjectId": {
          "type": "string",
          "description": "The user for which policies will be evaluated"
        }
      }
    },
    "EvaluatePoliciesRequest": {
      "type": "object",
      "description": "Request body for evaluating a policy set.",
      "properties": {
        "policies": {
          "type": "array",
          "description": "Policies to evaluate.",
          "items": {
            "type": "object",
            "description": "Properties for evaluating a policy set.",
            "properties": {
              "factName": {
                "type": "string",
                "description": "The fact name."
              },
              "factData": {
                "type": "string",
                "description": "The fact data."
              },
              "valueOffset": {
                "type": "string",
                "description": "The value offset."
              },
              "userObjectId": {
                "type": "string",
                "description": "The user for which policies will be evaluated"
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "EvaluatePoliciesResponse": {
      "type": "object",
      "description": "Response body for evaluating a policy set.",
      "properties": {
        "results": {
          "type": "array",
          "description": "Results of evaluating a policy set.",
          "items": {
            "type": "object",
            "description": "Result of a policy set evaluation.",
            "properties": {
              "hasError": {
                "type": "boolean",
                "description": "A value indicating whether this policy set evaluation has discovered violations."
              },
              "policyViolations": {
                "type": "array",
                "description": "The list of policy violations.",
                "items": {
                  "type": "object",
                  "description": "Policy violation.",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "The code of the policy violation."
                    },
                    "message": {
                      "type": "string",
                      "description": "The message of the policy violation."
                    }
                  }
                },
                "x-ms-identifiers": []
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "Event": {
      "type": "object",
      "description": "An event to be notified for.",
      "properties": {
        "eventName": {
          "description": "The event type for which this notification is enabled (i.e. AutoShutdown, Cost)",
          "type": "string",
          "enum": [
            "AutoShutdown",
            "Cost"
          ],
          "x-ms-enum": {
            "name": "NotificationChannelEventType",
            "modelAsString": true,
            "values": [
              {
                "name": "AutoShutdown",
                "value": "AutoShutdown"
              },
              {
                "name": "Cost",
                "value": "Cost"
              }
            ]
          }
        }
      }
    },
    "ExportResourceUsageParameters": {
      "type": "object",
      "description": "The parameters of the export operation.",
      "properties": {
        "blobStorageAbsoluteSasUri": {
          "type": "string",
          "description": "The blob storage absolute sas uri with write permission to the container which the usage data needs to be uploaded to."
        },
        "usageStartDate": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the usage. If not provided, usage will be reported since the beginning of data collection."
        }
      }
    },
    "ExternalSubnet": {
      "type": "object",
      "description": "Subnet information as returned by the Microsoft.Network API.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Gets or sets the identifier."
        },
        "name": {
          "type": "string",
          "description": "Gets or sets the name."
        }
      }
    },
    "FileUploadOptions": {
      "type": "string",
      "description": "Options for uploading the files for the artifact. UploadFilesAndGenerateSasTokens is the default value.",
      "enum": [
        "UploadFilesAndGenerateSasTokens",
        "None"
      ],
      "x-ms-enum": {
        "name": "FileUploadOptions",
        "modelAsString": true,
        "values": [
          {
            "name": "UploadFilesAndGenerateSasTokens",
            "value": "UploadFilesAndGenerateSasTokens"
          },
          {
            "name": "None",
            "value": "None"
          }
        ]
      }
    },
    "Formula": {
      "type": "object",
      "description": "A formula for creating a VM, specifying an image base and other parameters",
      "properties": {
        "id": {
          "type": "string",
          "description": "The identifier of the resource.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "The location of the resource."
        },
        "tags": {
          "type": "object",
          "description": "The tags of the resource.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The properties of the formula.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "description": {
              "type": "string",
              "description": "The description of the formula."
            },
            "author": {
              "type": "string",
              "description": "The author of the formula.",
              "readOnly": true
            },
            "osType": {
              "type": "string",
              "description": "The OS type of the formula."
            },
            "creationDate": {
              "type": "string",
              "format": "date-time",
              "description": "The creation date of the formula.",
              "readOnly": true
            },
            "formulaContent": {
              "type": "object",
              "description": "Properties for creating a virtual machine.",
              "properties": {
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "bulkCreationParameters": {
                      "description": "The number of virtual machine instances to create.",
                      "type": "object",
                      "properties": {
                        "instanceCount": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The number of virtual machine instances to create."
                        }
                      }
                    },
                    "notes": {
                      "type": "string",
                      "description": "The notes of the virtual machine."
                    },
                    "ownerObjectId": {
                      "type": "string",
                      "description": "The object identifier of the owner of the virtual machine.",
                      "default": "dynamicValue"
                    },
                    "ownerUserPrincipalName": {
                      "type": "string",
                      "description": "The user principal name of the virtual machine owner."
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation date of the virtual machine."
                    },
                    "customImageId": {
                      "type": "string",
                      "description": "The custom image identifier of the virtual machine."
                    },
                    "size": {
                      "type": "string",
                      "description": "The size of the virtual machine."
                    },
                    "userName": {
                      "type": "string",
                      "description": "The user name of the virtual machine."
                    },
                    "password": {
                      "type": "string",
                      "description": "The password of the virtual machine administrator."
                    },
                    "sshKey": {
                      "type": "string",
                      "description": "The SSH key of the virtual machine administrator."
                    },
                    "isAuthenticationWithSshKey": {
                      "type": "boolean",
                      "description": "Indicates whether this virtual machine uses an SSH key for authentication."
                    },
                    "labSubnetName": {
                      "type": "string",
                      "description": "The lab subnet name of the virtual machine."
                    },
                    "labVirtualNetworkId": {
                      "type": "string",
                      "description": "The lab virtual network identifier of the virtual machine."
                    },
                    "disallowPublicIpAddress": {
                      "type": "boolean",
                      "description": "Indicates whether the virtual machine is to be created without a public IP address.",
                      "default": false
                    },
                    "artifacts": {
                      "type": "array",
                      "description": "The artifacts to be installed on the virtual machine.",
                      "items": {
                        "type": "object",
                        "description": "Properties of an artifact.",
                        "properties": {
                          "artifactId": {
                            "type": "string",
                            "description": "The artifact's identifier."
                          },
                          "artifactTitle": {
                            "type": "string",
                            "description": "The artifact's title."
                          },
                          "parameters": {
                            "type": "array",
                            "description": "The parameters of the artifact.",
                            "items": {
                              "type": "object",
                              "description": "Properties of an artifact parameter.",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name of the artifact parameter."
                                },
                                "value": {
                                  "type": "string",
                                  "description": "The value of the artifact parameter."
                                }
                              }
                            }
                          },
                          "status": {
                            "type": "string",
                            "description": "The status of the artifact."
                          },
                          "deploymentStatusMessage": {
                            "type": "string",
                            "description": "The status message from the deployment."
                          },
                          "vmExtensionStatusMessage": {
                            "type": "string",
                            "description": "The status message from the virtual machine extension."
                          },
                          "installTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time that the artifact starts to install on the virtual machine."
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "galleryImageReference": {
                      "description": "The Microsoft Azure Marketplace image reference of the virtual machine.",
                      "type": "object",
                      "properties": {
                        "offer": {
                          "type": "string",
                          "description": "The offer of the gallery image."
                        },
                        "publisher": {
                          "type": "string",
                          "description": "The publisher of the gallery image."
                        },
                        "sku": {
                          "type": "string",
                          "description": "The SKU of the gallery image."
                        },
                        "osType": {
                          "type": "string",
                          "description": "The OS type of the gallery image."
                        },
                        "version": {
                          "type": "string",
                          "description": "The version of the gallery image."
                        }
                      }
                    },
                    "planId": {
                      "type": "string",
                      "description": "The id of the plan associated with the virtual machine image"
                    },
                    "networkInterface": {
                      "description": "The network interface properties.",
                      "type": "object",
                      "properties": {
                        "virtualNetworkId": {
                          "type": "string",
                          "description": "The resource ID of the virtual network."
                        },
                        "subnetId": {
                          "type": "string",
                          "description": "The resource ID of the sub net."
                        },
                        "publicIpAddressId": {
                          "type": "string",
                          "description": "The resource ID of the public IP address."
                        },
                        "publicIpAddress": {
                          "type": "string",
                          "description": "The public IP address."
                        },
                        "privateIpAddress": {
                          "type": "string",
                          "description": "The private IP address."
                        },
                        "dnsName": {
                          "type": "string",
                          "description": "The DNS name."
                        },
                        "rdpAuthority": {
                          "type": "string",
                          "description": "The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol)."
                        },
                        "sshAuthority": {
                          "type": "string",
                          "description": "The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH."
                        },
                        "sharedPublicIpAddressConfiguration": {
                          "description": "The configuration for sharing a public IP address across multiple virtual machines.",
                          "type": "object",
                          "properties": {
                            "inboundNatRules": {
                              "type": "array",
                              "description": "The incoming NAT rules",
                              "items": {
                                "type": "object",
                                "description": "A rule for NAT - exposing a VM's port (backendPort) on the public IP address using a load balancer.",
                                "properties": {
                                  "transportProtocol": {
                                    "description": "The transport protocol for the endpoint.",
                                    "type": "string",
                                    "enum": [
                                      "Tcp",
                                      "Udp"
                                    ],
                                    "x-ms-enum": {
                                      "name": "TransportProtocol",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Tcp",
                                          "value": "Tcp"
                                        },
                                        {
                                          "name": "Udp",
                                          "value": "Udp"
                                        }
                                      ]
                                    }
                                  },
                                  "frontendPort": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The external endpoint port of the inbound connection. Possible values range between 1 and 65535, inclusive. If unspecified, a value will be allocated automatically."
                                  },
                                  "backendPort": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The port to which the external traffic will be redirected."
                                  }
                                }
                              },
                              "x-ms-identifiers": []
                            }
                          }
                        }
                      }
                    },
                    "expirationDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The expiration date for VM."
                    },
                    "allowClaim": {
                      "type": "boolean",
                      "description": "Indicates whether another user can take ownership of the virtual machine",
                      "default": false
                    },
                    "storageType": {
                      "type": "string",
                      "description": "Storage type to use for virtual machine (i.e. Standard, Premium).",
                      "default": "labStorageType"
                    },
                    "environmentId": {
                      "type": "string",
                      "description": "The resource ID of the environment that contains this virtual machine, if any."
                    },
                    "dataDiskParameters": {
                      "type": "array",
                      "description": "New or existing data disks to attach to the virtual machine after creation",
                      "items": {
                        "type": "object",
                        "description": "Request body for adding a new or existing data disk to a virtual machine.",
                        "properties": {
                          "attachNewDataDiskOptions": {
                            "description": "Specifies options to attach a new disk to the virtual machine.",
                            "type": "object",
                            "properties": {
                              "diskSizeGiB": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Size of the disk to be attached in Gibibytes."
                              },
                              "diskName": {
                                "type": "string",
                                "description": "The name of the disk to be attached."
                              },
                              "diskType": {
                                "description": "The storage type for the disk (i.e. Standard, Premium).",
                                "type": "string",
                                "enum": [
                                  "Standard",
                                  "Premium",
                                  "StandardSSD"
                                ],
                                "x-ms-enum": {
                                  "name": "StorageType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Standard",
                                      "value": "Standard"
                                    },
                                    {
                                      "name": "Premium",
                                      "value": "Premium"
                                    },
                                    {
                                      "name": "StandardSSD",
                                      "value": "StandardSSD"
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "existingLabDiskId": {
                            "type": "string",
                            "description": "Specifies the existing lab disk id to attach to virtual machine."
                          },
                          "hostCaching": {
                            "description": "Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).",
                            "type": "string",
                            "enum": [
                              "None",
                              "ReadOnly",
                              "ReadWrite"
                            ],
                            "x-ms-enum": {
                              "name": "HostCachingOptions",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "None",
                                  "value": "None"
                                },
                                {
                                  "name": "ReadOnly",
                                  "value": "ReadOnly"
                                },
                                {
                                  "name": "ReadWrite",
                                  "value": "ReadWrite"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "scheduleParameters": {
                      "type": "array",
                      "description": "Virtual Machine schedules to be created",
                      "items": {
                        "type": "object",
                        "description": "Properties for creating a schedule.",
                        "properties": {
                          "properties": {
                            "description": "The properties of the schedule.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string",
                                "description": "The status of the schedule (i.e. Enabled, Disabled)",
                                "default": "Disabled",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "EnableStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled"
                                    }
                                  ]
                                }
                              },
                              "taskType": {
                                "type": "string",
                                "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                              },
                              "weeklyRecurrence": {
                                "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                                "type": "object",
                                "properties": {
                                  "weekdays": {
                                    "type": "array",
                                    "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "time": {
                                    "type": "string",
                                    "description": "The time of the day the schedule will occur."
                                  }
                                }
                              },
                              "dailyRecurrence": {
                                "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                                "type": "object",
                                "properties": {
                                  "time": {
                                    "type": "string",
                                    "description": "The time of day the schedule will occur."
                                  }
                                }
                              },
                              "hourlyRecurrence": {
                                "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                                "type": "object",
                                "properties": {
                                  "minute": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Minutes of the hour the schedule will run."
                                  }
                                }
                              },
                              "timeZoneId": {
                                "type": "string",
                                "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                              },
                              "notificationSettings": {
                                "description": "Notification settings.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "type": "string",
                                    "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                    "default": "Disabled",
                                    "enum": [
                                      "Enabled",
                                      "Disabled"
                                    ],
                                    "x-ms-enum": {
                                      "name": "EnableStatus",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Enabled",
                                          "value": "Enabled"
                                        },
                                        {
                                          "name": "Disabled",
                                          "value": "Disabled"
                                        }
                                      ]
                                    }
                                  },
                                  "timeInMinutes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Time in minutes before event at which notification will be sent."
                                  },
                                  "webhookUrl": {
                                    "type": "string",
                                    "description": "The webhook URL to which the notification will be sent."
                                  },
                                  "emailRecipient": {
                                    "type": "string",
                                    "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                  },
                                  "notificationLocale": {
                                    "type": "string",
                                    "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                  }
                                }
                              },
                              "targetResourceId": {
                                "type": "string",
                                "description": "The resource ID to which the schedule belongs"
                              }
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the virtual machine or environment"
                          },
                          "location": {
                            "type": "string",
                            "description": "The location of the new virtual machine or environment",
                            "readOnly": true
                          },
                          "tags": {
                            "type": "object",
                            "description": "The tags of the resource.",
                            "additionalProperties": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "name": {
                  "type": "string",
                  "description": "The name of the virtual machine or environment"
                },
                "location": {
                  "type": "string",
                  "description": "The location of the new virtual machine or environment"
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "vm": {
              "description": "Information about a VM from which a formula is to be created.",
              "type": "object",
              "properties": {
                "labVmId": {
                  "type": "string",
                  "description": "The identifier of the VM from which a formula is to be created."
                }
              }
            },
            "provisioningState": {
              "type": "string",
              "description": "The provisioning status of the resource.",
              "readOnly": true
            },
            "uniqueIdentifier": {
              "type": "string",
              "description": "The unique immutable identifier of a resource (Guid).",
              "readOnly": true
            }
          }
        }
      },
      "required": [
        "properties"
      ]
    },
    "FormulaFragment": {
      "type": "object",
      "description": "A formula for creating a VM, specifying an image base and other parameters",
      "properties": {
        "tags": {
          "type": "object",
          "description": "The tags of the resource.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "FormulaList": {
      "type": "object",
      "description": "The response of a list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Formula items on this page",
          "items": {
            "type": "object",
            "description": "A formula for creating a VM, specifying an image base and other parameters",
            "properties": {
              "id": {
                "type": "string",
                "description": "The identifier of the resource.",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource.",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource.",
                "readOnly": true
              },
              "location": {
                "type": "string",
                "description": "The location of the resource."
              },
              "tags": {
                "type": "object",
                "description": "The tags of the resource.",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "properties": {
                "description": "The properties of the formula.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "The description of the formula."
                  },
                  "author": {
                    "type": "string",
                    "description": "The author of the formula.",
                    "readOnly": true
                  },
                  "osType": {
                    "type": "string",
                    "description": "The OS type of the formula."
                  },
                  "creationDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The creation date of the formula.",
                    "readOnly": true
                  },
                  "formulaContent": {
                    "type": "object",
                    "description": "Properties for creating a virtual machine.",
                    "properties": {
                      "properties": {
                        "description": "The properties of the resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "bulkCreationParameters": {
                            "description": "The number of virtual machine instances to create.",
                            "type": "object",
                            "properties": {
                              "instanceCount": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The number of virtual machine instances to create."
                              }
                            }
                          },
                          "notes": {
                            "type": "string",
                            "description": "The notes of the virtual machine."
                          },
                          "ownerObjectId": {
                            "type": "string",
                            "description": "The object identifier of the owner of the virtual machine.",
                            "default": "dynamicValue"
                          },
                          "ownerUserPrincipalName": {
                            "type": "string",
                            "description": "The user principal name of the virtual machine owner."
                          },
                          "createdDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The creation date of the virtual machine."
                          },
                          "customImageId": {
                            "type": "string",
                            "description": "The custom image identifier of the virtual machine."
                          },
                          "size": {
                            "type": "string",
                            "description": "The size of the virtual machine."
                          },
                          "userName": {
                            "type": "string",
                            "description": "The user name of the virtual machine."
                          },
                          "password": {
                            "type": "string",
                            "description": "The password of the virtual machine administrator."
                          },
                          "sshKey": {
                            "type": "string",
                            "description": "The SSH key of the virtual machine administrator."
                          },
                          "isAuthenticationWithSshKey": {
                            "type": "boolean",
                            "description": "Indicates whether this virtual machine uses an SSH key for authentication."
                          },
                          "labSubnetName": {
                            "type": "string",
                            "description": "The lab subnet name of the virtual machine."
                          },
                          "labVirtualNetworkId": {
                            "type": "string",
                            "description": "The lab virtual network identifier of the virtual machine."
                          },
                          "disallowPublicIpAddress": {
                            "type": "boolean",
                            "description": "Indicates whether the virtual machine is to be created without a public IP address.",
                            "default": false
                          },
                          "artifacts": {
                            "type": "array",
                            "description": "The artifacts to be installed on the virtual machine.",
                            "items": {
                              "type": "object",
                              "description": "Properties of an artifact.",
                              "properties": {
                                "artifactId": {
                                  "type": "string",
                                  "description": "The artifact's identifier."
                                },
                                "artifactTitle": {
                                  "type": "string",
                                  "description": "The artifact's title."
                                },
                                "parameters": {
                                  "type": "array",
                                  "description": "The parameters of the artifact.",
                                  "items": {
                                    "type": "object",
                                    "description": "Properties of an artifact parameter.",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "The name of the artifact parameter."
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "The value of the artifact parameter."
                                      }
                                    }
                                  }
                                },
                                "status": {
                                  "type": "string",
                                  "description": "The status of the artifact."
                                },
                                "deploymentStatusMessage": {
                                  "type": "string",
                                  "description": "The status message from the deployment."
                                },
                                "vmExtensionStatusMessage": {
                                  "type": "string",
                                  "description": "The status message from the virtual machine extension."
                                },
                                "installTime": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The time that the artifact starts to install on the virtual machine."
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "galleryImageReference": {
                            "description": "The Microsoft Azure Marketplace image reference of the virtual machine.",
                            "type": "object",
                            "properties": {
                              "offer": {
                                "type": "string",
                                "description": "The offer of the gallery image."
                              },
                              "publisher": {
                                "type": "string",
                                "description": "The publisher of the gallery image."
                              },
                              "sku": {
                                "type": "string",
                                "description": "The SKU of the gallery image."
                              },
                              "osType": {
                                "type": "string",
                                "description": "The OS type of the gallery image."
                              },
                              "version": {
                                "type": "string",
                                "description": "The version of the gallery image."
                              }
                            }
                          },
                          "planId": {
                            "type": "string",
                            "description": "The id of the plan associated with the virtual machine image"
                          },
                          "networkInterface": {
                            "description": "The network interface properties.",
                            "type": "object",
                            "properties": {
                              "virtualNetworkId": {
                                "type": "string",
                                "description": "The resource ID of the virtual network."
                              },
                              "subnetId": {
                                "type": "string",
                                "description": "The resource ID of the sub net."
                              },
                              "publicIpAddressId": {
                                "type": "string",
                                "description": "The resource ID of the public IP address."
                              },
                              "publicIpAddress": {
                                "type": "string",
                                "description": "The public IP address."
                              },
                              "privateIpAddress": {
                                "type": "string",
                                "description": "The private IP address."
                              },
                              "dnsName": {
                                "type": "string",
                                "description": "The DNS name."
                              },
                              "rdpAuthority": {
                                "type": "string",
                                "description": "The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol)."
                              },
                              "sshAuthority": {
                                "type": "string",
                                "description": "The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH."
                              },
                              "sharedPublicIpAddressConfiguration": {
                                "description": "The configuration for sharing a public IP address across multiple virtual machines.",
                                "type": "object",
                                "properties": {
                                  "inboundNatRules": {
                                    "type": "array",
                                    "description": "The incoming NAT rules",
                                    "items": {
                                      "type": "object",
                                      "description": "A rule for NAT - exposing a VM's port (backendPort) on the public IP address using a load balancer.",
                                      "properties": {
                                        "transportProtocol": {
                                          "description": "The transport protocol for the endpoint.",
                                          "type": "string",
                                          "enum": [
                                            "Tcp",
                                            "Udp"
                                          ],
                                          "x-ms-enum": {
                                            "name": "TransportProtocol",
                                            "modelAsString": true,
                                            "values": [
                                              {
                                                "name": "Tcp",
                                                "value": "Tcp"
                                              },
                                              {
                                                "name": "Udp",
                                                "value": "Udp"
                                              }
                                            ]
                                          }
                                        },
                                        "frontendPort": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "The external endpoint port of the inbound connection. Possible values range between 1 and 65535, inclusive. If unspecified, a value will be allocated automatically."
                                        },
                                        "backendPort": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "The port to which the external traffic will be redirected."
                                        }
                                      }
                                    },
                                    "x-ms-identifiers": []
                                  }
                                }
                              }
                            }
                          },
                          "expirationDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The expiration date for VM."
                          },
                          "allowClaim": {
                            "type": "boolean",
                            "description": "Indicates whether another user can take ownership of the virtual machine",
                            "default": false
                          },
                          "storageType": {
                            "type": "string",
                            "description": "Storage type to use for virtual machine (i.e. Standard, Premium).",
                            "default": "labStorageType"
                          },
                          "environmentId": {
                            "type": "string",
                            "description": "The resource ID of the environment that contains this virtual machine, if any."
                          },
                          "dataDiskParameters": {
                            "type": "array",
                            "description": "New or existing data disks to attach to the virtual machine after creation",
                            "items": {
                              "type": "object",
                              "description": "Request body for adding a new or existing data disk to a virtual machine.",
                              "properties": {
                                "attachNewDataDiskOptions": {
                                  "description": "Specifies options to attach a new disk to the virtual machine.",
                                  "type": "object",
                                  "properties": {
                                    "diskSizeGiB": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "Size of the disk to be attached in Gibibytes."
                                    },
                                    "diskName": {
                                      "type": "string",
                                      "description": "The name of the disk to be attached."
                                    },
                                    "diskType": {
                                      "description": "The storage type for the disk (i.e. Standard, Premium).",
                                      "type": "string",
                                      "enum": [
                                        "Standard",
                                        "Premium",
                                        "StandardSSD"
                                      ],
                                      "x-ms-enum": {
                                        "name": "StorageType",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Standard",
                                            "value": "Standard"
                                          },
                                          {
                                            "name": "Premium",
                                            "value": "Premium"
                                          },
                                          {
                                            "name": "StandardSSD",
                                            "value": "StandardSSD"
                                          }
                                        ]
                                      }
                                    }
                                  }
                                },
                                "existingLabDiskId": {
                                  "type": "string",
                                  "description": "Specifies the existing lab disk id to attach to virtual machine."
                                },
                                "hostCaching": {
                                  "description": "Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).",
                                  "type": "string",
                                  "enum": [
                                    "None",
                                    "ReadOnly",
                                    "ReadWrite"
                                  ],
                                  "x-ms-enum": {
                                    "name": "HostCachingOptions",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "None",
                                        "value": "None"
                                      },
                                      {
                                        "name": "ReadOnly",
                                        "value": "ReadOnly"
                                      },
                                      {
                                        "name": "ReadWrite",
                                        "value": "ReadWrite"
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "scheduleParameters": {
                            "type": "array",
                            "description": "Virtual Machine schedules to be created",
                            "items": {
                              "type": "object",
                              "description": "Properties for creating a schedule.",
                              "properties": {
                                "properties": {
                                  "description": "The properties of the schedule.",
                                  "x-ms-client-flatten": true,
                                  "type": "object",
                                  "properties": {
                                    "status": {
                                      "type": "string",
                                      "description": "The status of the schedule (i.e. Enabled, Disabled)",
                                      "default": "Disabled",
                                      "enum": [
                                        "Enabled",
                                        "Disabled"
                                      ],
                                      "x-ms-enum": {
                                        "name": "EnableStatus",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Enabled",
                                            "value": "Enabled"
                                          },
                                          {
                                            "name": "Disabled",
                                            "value": "Disabled"
                                          }
                                        ]
                                      }
                                    },
                                    "taskType": {
                                      "type": "string",
                                      "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                                    },
                                    "weeklyRecurrence": {
                                      "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "weekdays": {
                                          "type": "array",
                                          "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "time": {
                                          "type": "string",
                                          "description": "The time of the day the schedule will occur."
                                        }
                                      }
                                    },
                                    "dailyRecurrence": {
                                      "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "time": {
                                          "type": "string",
                                          "description": "The time of day the schedule will occur."
                                        }
                                      }
                                    },
                                    "hourlyRecurrence": {
                                      "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                                      "type": "object",
                                      "properties": {
                                        "minute": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Minutes of the hour the schedule will run."
                                        }
                                      }
                                    },
                                    "timeZoneId": {
                                      "type": "string",
                                      "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                                    },
                                    "notificationSettings": {
                                      "description": "Notification settings.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "type": "string",
                                          "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                          "default": "Disabled",
                                          "enum": [
                                            "Enabled",
                                            "Disabled"
                                          ],
                                          "x-ms-enum": {
                                            "name": "EnableStatus",
                                            "modelAsString": true,
                                            "values": [
                                              {
                                                "name": "Enabled",
                                                "value": "Enabled"
                                              },
                                              {
                                                "name": "Disabled",
                                                "value": "Disabled"
                                              }
                                            ]
                                          }
                                        },
                                        "timeInMinutes": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Time in minutes before event at which notification will be sent."
                                        },
                                        "webhookUrl": {
                                          "type": "string",
                                          "description": "The webhook URL to which the notification will be sent."
                                        },
                                        "emailRecipient": {
                                          "type": "string",
                                          "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                        },
                                        "notificationLocale": {
                                          "type": "string",
                                          "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                        }
                                      }
                                    },
                                    "targetResourceId": {
                                      "type": "string",
                                      "description": "The resource ID to which the schedule belongs"
                                    }
                                  }
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the virtual machine or environment"
                                },
                                "location": {
                                  "type": "string",
                                  "description": "The location of the new virtual machine or environment",
                                  "readOnly": true
                                },
                                "tags": {
                                  "type": "object",
                                  "description": "The tags of the resource.",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the virtual machine or environment"
                      },
                      "location": {
                        "type": "string",
                        "description": "The location of the new virtual machine or environment"
                      },
                      "tags": {
                        "type": "object",
                        "description": "The tags of the resource.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "vm": {
                    "description": "Information about a VM from which a formula is to be created.",
                    "type": "object",
                    "properties": {
                      "labVmId": {
                        "type": "string",
                        "description": "The identifier of the VM from which a formula is to be created."
                      }
                    }
                  },
                  "provisioningState": {
                    "type": "string",
                    "description": "The provisioning status of the resource.",
                    "readOnly": true
                  },
                  "uniqueIdentifier": {
                    "type": "string",
                    "description": "The unique immutable identifier of a resource (Guid).",
                    "readOnly": true
                  }
                }
              }
            },
            "required": [
              "properties"
            ]
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "FormulaProperties": {
      "type": "object",
      "description": "Properties of a formula.",
      "properties": {
        "description": {
          "type": "string",
          "description": "The description of the formula."
        },
        "author": {
          "type": "string",
          "description": "The author of the formula.",
          "readOnly": true
        },
        "osType": {
          "type": "string",
          "description": "The OS type of the formula."
        },
        "creationDate": {
          "type": "string",
          "format": "date-time",
          "description": "The creation date of the formula.",
          "readOnly": true
        },
        "formulaContent": {
          "type": "object",
          "description": "Properties for creating a virtual machine.",
          "properties": {
            "properties": {
              "description": "The properties of the resource.",
              "x-ms-client-flatten": true,
              "type": "object",
              "properties": {
                "bulkCreationParameters": {
                  "description": "The number of virtual machine instances to create.",
                  "type": "object",
                  "properties": {
                    "instanceCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of virtual machine instances to create."
                    }
                  }
                },
                "notes": {
                  "type": "string",
                  "description": "The notes of the virtual machine."
                },
                "ownerObjectId": {
                  "type": "string",
                  "description": "The object identifier of the owner of the virtual machine.",
                  "default": "dynamicValue"
                },
                "ownerUserPrincipalName": {
                  "type": "string",
                  "description": "The user principal name of the virtual machine owner."
                },
                "createdDate": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The creation date of the virtual machine."
                },
                "customImageId": {
                  "type": "string",
                  "description": "The custom image identifier of the virtual machine."
                },
                "size": {
                  "type": "string",
                  "description": "The size of the virtual machine."
                },
                "userName": {
                  "type": "string",
                  "description": "The user name of the virtual machine."
                },
                "password": {
                  "type": "string",
                  "description": "The password of the virtual machine administrator."
                },
                "sshKey": {
                  "type": "string",
                  "description": "The SSH key of the virtual machine administrator."
                },
                "isAuthenticationWithSshKey": {
                  "type": "boolean",
                  "description": "Indicates whether this virtual machine uses an SSH key for authentication."
                },
                "labSubnetName": {
                  "type": "string",
                  "description": "The lab subnet name of the virtual machine."
                },
                "labVirtualNetworkId": {
                  "type": "string",
                  "description": "The lab virtual network identifier of the virtual machine."
                },
                "disallowPublicIpAddress": {
                  "type": "boolean",
                  "description": "Indicates whether the virtual machine is to be created without a public IP address.",
                  "default": false
                },
                "artifacts": {
                  "type": "array",
                  "description": "The artifacts to be installed on the virtual machine.",
                  "items": {
                    "type": "object",
                    "description": "Properties of an artifact.",
                    "properties": {
                      "artifactId": {
                        "type": "string",
                        "description": "The artifact's identifier."
                      },
                      "artifactTitle": {
                        "type": "string",
                        "description": "The artifact's title."
                      },
                      "parameters": {
                        "type": "array",
                        "description": "The parameters of the artifact.",
                        "items": {
                          "type": "object",
                          "description": "Properties of an artifact parameter.",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of the artifact parameter."
                            },
                            "value": {
                              "type": "string",
                              "description": "The value of the artifact parameter."
                            }
                          }
                        }
                      },
                      "status": {
                        "type": "string",
                        "description": "The status of the artifact."
                      },
                      "deploymentStatusMessage": {
                        "type": "string",
                        "description": "The status message from the deployment."
                      },
                      "vmExtensionStatusMessage": {
                        "type": "string",
                        "description": "The status message from the virtual machine extension."
                      },
                      "installTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time that the artifact starts to install on the virtual machine."
                      }
                    }
                  },
                  "x-ms-identifiers": []
                },
                "galleryImageReference": {
                  "description": "The Microsoft Azure Marketplace image reference of the virtual machine.",
                  "type": "object",
                  "properties": {
                    "offer": {
                      "type": "string",
                      "description": "The offer of the gallery image."
                    },
                    "publisher": {
                      "type": "string",
                      "description": "The publisher of the gallery image."
                    },
                    "sku": {
                      "type": "string",
                      "description": "The SKU of the gallery image."
                    },
                    "osType": {
                      "type": "string",
                      "description": "The OS type of the gallery image."
                    },
                    "version": {
                      "type": "string",
                      "description": "The version of the gallery image."
                    }
                  }
                },
                "planId": {
                  "type": "string",
                  "description": "The id of the plan associated with the virtual machine image"
                },
                "networkInterface": {
                  "description": "The network interface properties.",
                  "type": "object",
                  "properties": {
                    "virtualNetworkId": {
                      "type": "string",
                      "description": "The resource ID of the virtual network."
                    },
                    "subnetId": {
                      "type": "string",
                      "description": "The resource ID of the sub net."
                    },
                    "publicIpAddressId": {
                      "type": "string",
                      "description": "The resource ID of the public IP address."
                    },
                    "publicIpAddress": {
                      "type": "string",
                      "description": "The public IP address."
                    },
                    "privateIpAddress": {
                      "type": "string",
                      "description": "The private IP address."
                    },
                    "dnsName": {
                      "type": "string",
                      "description": "The DNS name."
                    },
                    "rdpAuthority": {
                      "type": "string",
                      "description": "The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol)."
                    },
                    "sshAuthority": {
                      "type": "string",
                      "description": "The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH."
                    },
                    "sharedPublicIpAddressConfiguration": {
                      "description": "The configuration for sharing a public IP address across multiple virtual machines.",
                      "type": "object",
                      "properties": {
                        "inboundNatRules": {
                          "type": "array",
                          "description": "The incoming NAT rules",
                          "items": {
                            "type": "object",
                            "description": "A rule for NAT - exposing a VM's port (backendPort) on the public IP address using a load balancer.",
                            "properties": {
                              "transportProtocol": {
                                "description": "The transport protocol for the endpoint.",
                                "type": "string",
                                "enum": [
                                  "Tcp",
                                  "Udp"
                                ],
                                "x-ms-enum": {
                                  "name": "TransportProtocol",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Tcp",
                                      "value": "Tcp"
                                    },
                                    {
                                      "name": "Udp",
                                      "value": "Udp"
                                    }
                                  ]
                                }
                              },
                              "frontendPort": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The external endpoint port of the inbound connection. Possible values range between 1 and 65535, inclusive. If unspecified, a value will be allocated automatically."
                              },
                              "backendPort": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The port to which the external traffic will be redirected."
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    }
                  }
                },
                "expirationDate": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The expiration date for VM."
                },
                "allowClaim": {
                  "type": "boolean",
                  "description": "Indicates whether another user can take ownership of the virtual machine",
                  "default": false
                },
                "storageType": {
                  "type": "string",
                  "description": "Storage type to use for virtual machine (i.e. Standard, Premium).",
                  "default": "labStorageType"
                },
                "environmentId": {
                  "type": "string",
                  "description": "The resource ID of the environment that contains this virtual machine, if any."
                },
                "dataDiskParameters": {
                  "type": "array",
                  "description": "New or existing data disks to attach to the virtual machine after creation",
                  "items": {
                    "type": "object",
                    "description": "Request body for adding a new or existing data disk to a virtual machine.",
                    "properties": {
                      "attachNewDataDiskOptions": {
                        "description": "Specifies options to attach a new disk to the virtual machine.",
                        "type": "object",
                        "properties": {
                          "diskSizeGiB": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Size of the disk to be attached in Gibibytes."
                          },
                          "diskName": {
                            "type": "string",
                            "description": "The name of the disk to be attached."
                          },
                          "diskType": {
                            "description": "The storage type for the disk (i.e. Standard, Premium).",
                            "type": "string",
                            "enum": [
                              "Standard",
                              "Premium",
                              "StandardSSD"
                            ],
                            "x-ms-enum": {
                              "name": "StorageType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Standard",
                                  "value": "Standard"
                                },
                                {
                                  "name": "Premium",
                                  "value": "Premium"
                                },
                                {
                                  "name": "StandardSSD",
                                  "value": "StandardSSD"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "existingLabDiskId": {
                        "type": "string",
                        "description": "Specifies the existing lab disk id to attach to virtual machine."
                      },
                      "hostCaching": {
                        "description": "Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).",
                        "type": "string",
                        "enum": [
                          "None",
                          "ReadOnly",
                          "ReadWrite"
                        ],
                        "x-ms-enum": {
                          "name": "HostCachingOptions",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "None",
                              "value": "None"
                            },
                            {
                              "name": "ReadOnly",
                              "value": "ReadOnly"
                            },
                            {
                              "name": "ReadWrite",
                              "value": "ReadWrite"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "x-ms-identifiers": []
                },
                "scheduleParameters": {
                  "type": "array",
                  "description": "Virtual Machine schedules to be created",
                  "items": {
                    "type": "object",
                    "description": "Properties for creating a schedule.",
                    "properties": {
                      "properties": {
                        "description": "The properties of the schedule.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "description": "The status of the schedule (i.e. Enabled, Disabled)",
                            "default": "Disabled",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "EnableStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled"
                                }
                              ]
                            }
                          },
                          "taskType": {
                            "type": "string",
                            "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                          },
                          "weeklyRecurrence": {
                            "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                            "type": "object",
                            "properties": {
                              "weekdays": {
                                "type": "array",
                                "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "time": {
                                "type": "string",
                                "description": "The time of the day the schedule will occur."
                              }
                            }
                          },
                          "dailyRecurrence": {
                            "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                            "type": "object",
                            "properties": {
                              "time": {
                                "type": "string",
                                "description": "The time of day the schedule will occur."
                              }
                            }
                          },
                          "hourlyRecurrence": {
                            "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                            "type": "object",
                            "properties": {
                              "minute": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Minutes of the hour the schedule will run."
                              }
                            }
                          },
                          "timeZoneId": {
                            "type": "string",
                            "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                          },
                          "notificationSettings": {
                            "description": "Notification settings.",
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string",
                                "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                "default": "Disabled",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "EnableStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled"
                                    }
                                  ]
                                }
                              },
                              "timeInMinutes": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Time in minutes before event at which notification will be sent."
                              },
                              "webhookUrl": {
                                "type": "string",
                                "description": "The webhook URL to which the notification will be sent."
                              },
                              "emailRecipient": {
                                "type": "string",
                                "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                              },
                              "notificationLocale": {
                                "type": "string",
                                "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                              }
                            }
                          },
                          "targetResourceId": {
                            "type": "string",
                            "description": "The resource ID to which the schedule belongs"
                          }
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the virtual machine or environment"
                      },
                      "location": {
                        "type": "string",
                        "description": "The location of the new virtual machine or environment",
                        "readOnly": true
                      },
                      "tags": {
                        "type": "object",
                        "description": "The tags of the resource.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "name": {
              "type": "string",
              "description": "The name of the virtual machine or environment"
            },
            "location": {
              "type": "string",
              "description": "The location of the new virtual machine or environment"
            },
            "tags": {
              "type": "object",
              "description": "The tags of the resource.",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        },
        "vm": {
          "description": "Information about a VM from which a formula is to be created.",
          "type": "object",
          "properties": {
            "labVmId": {
              "type": "string",
              "description": "The identifier of the VM from which a formula is to be created."
            }
          }
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning status of the resource.",
          "readOnly": true
        },
        "uniqueIdentifier": {
          "type": "string",
          "description": "The unique immutable identifier of a resource (Guid).",
          "readOnly": true
        }
      }
    },
    "FormulaPropertiesFromVm": {
      "type": "object",
      "description": "Information about a VM from which a formula is to be created.",
      "properties": {
        "labVmId": {
          "type": "string",
          "description": "The identifier of the VM from which a formula is to be created."
        }
      }
    },
    "GalleryImage": {
      "type": "object",
      "description": "A gallery image.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The identifier of the resource.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "The location of the resource."
        },
        "tags": {
          "type": "object",
          "description": "The tags of the resource.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The properties of the gallery image.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "author": {
              "type": "string",
              "description": "The author of the gallery image."
            },
            "createdDate": {
              "type": "string",
              "format": "date-time",
              "description": "The creation date of the gallery image.",
              "readOnly": true
            },
            "description": {
              "type": "string",
              "description": "The description of the gallery image."
            },
            "imageReference": {
              "description": "The image reference of the gallery image.",
              "type": "object",
              "properties": {
                "offer": {
                  "type": "string",
                  "description": "The offer of the gallery image."
                },
                "publisher": {
                  "type": "string",
                  "description": "The publisher of the gallery image."
                },
                "sku": {
                  "type": "string",
                  "description": "The SKU of the gallery image."
                },
                "osType": {
                  "type": "string",
                  "description": "The OS type of the gallery image."
                },
                "version": {
                  "type": "string",
                  "description": "The version of the gallery image."
                }
              }
            },
            "icon": {
              "type": "string",
              "description": "The icon of the gallery image."
            },
            "enabled": {
              "type": "boolean",
              "description": "Indicates whether this gallery image is enabled."
            },
            "planId": {
              "type": "string",
              "description": "The third party plan that applies to this image"
            },
            "isPlanAuthorized": {
              "type": "boolean",
              "description": "Indicates if the plan has been authorized for programmatic deployment."
            }
          }
        }
      },
      "required": [
        "properties"
      ]
    },
    "GalleryImageList": {
      "type": "object",
      "description": "The response of a list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The GalleryImage items on this page",
          "items": {
            "type": "object",
            "description": "A gallery image.",
            "properties": {
              "id": {
                "type": "string",
                "description": "The identifier of the resource.",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource.",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource.",
                "readOnly": true
              },
              "location": {
                "type": "string",
                "description": "The location of the resource."
              },
              "tags": {
                "type": "object",
                "description": "The tags of the resource.",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "properties": {
                "description": "The properties of the gallery image.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "author": {
                    "type": "string",
                    "description": "The author of the gallery image."
                  },
                  "createdDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The creation date of the gallery image.",
                    "readOnly": true
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the gallery image."
                  },
                  "imageReference": {
                    "description": "The image reference of the gallery image.",
                    "type": "object",
                    "properties": {
                      "offer": {
                        "type": "string",
                        "description": "The offer of the gallery image."
                      },
                      "publisher": {
                        "type": "string",
                        "description": "The publisher of the gallery image."
                      },
                      "sku": {
                        "type": "string",
                        "description": "The SKU of the gallery image."
                      },
                      "osType": {
                        "type": "string",
                        "description": "The OS type of the gallery image."
                      },
                      "version": {
                        "type": "string",
                        "description": "The version of the gallery image."
                      }
                    }
                  },
                  "icon": {
                    "type": "string",
                    "description": "The icon of the gallery image."
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Indicates whether this gallery image is enabled."
                  },
                  "planId": {
                    "type": "string",
                    "description": "The third party plan that applies to this image"
                  },
                  "isPlanAuthorized": {
                    "type": "boolean",
                    "description": "Indicates if the plan has been authorized for programmatic deployment."
                  }
                }
              }
            },
            "required": [
              "properties"
            ]
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "GalleryImageProperties": {
      "type": "object",
      "description": "Properties of a gallery image.",
      "properties": {
        "author": {
          "type": "string",
          "description": "The author of the gallery image."
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "description": "The creation date of the gallery image.",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "The description of the gallery image."
        },
        "imageReference": {
          "description": "The image reference of the gallery image.",
          "type": "object",
          "properties": {
            "offer": {
              "type": "string",
              "description": "The offer of the gallery image."
            },
            "publisher": {
              "type": "string",
              "description": "The publisher of the gallery image."
            },
            "sku": {
              "type": "string",
              "description": "The SKU of the gallery image."
            },
            "osType": {
              "type": "string",
              "description": "The OS type of the gallery image."
            },
            "version": {
              "type": "string",
              "description": "The version of the gallery image."
            }
          }
        },
        "icon": {
          "type": "string",
          "description": "The icon of the gallery image."
        },
        "enabled": {
          "type": "boolean",
          "description": "Indicates whether this gallery image is enabled."
        },
        "planId": {
          "type": "string",
          "description": "The third party plan that applies to this image"
        },
        "isPlanAuthorized": {
          "type": "boolean",
          "description": "Indicates if the plan has been authorized for programmatic deployment."
        }
      }
    },
    "GalleryImageReference": {
      "type": "object",
      "description": "The reference information for an Azure Marketplace image.",
      "properties": {
        "offer": {
          "type": "string",
          "description": "The offer of the gallery image."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher of the gallery image."
        },
        "sku": {
          "type": "string",
          "description": "The SKU of the gallery image."
        },
        "osType": {
          "type": "string",
          "description": "The OS type of the gallery image."
        },
        "version": {
          "type": "string",
          "description": "The version of the gallery image."
        }
      }
    },
    "GenerateArmTemplateRequest": {
      "type": "object",
      "description": "Parameters for generating an ARM template for deploying artifacts.",
      "properties": {
        "virtualMachineName": {
          "type": "string",
          "description": "The resource name of the virtual machine."
        },
        "parameters": {
          "type": "array",
          "description": "The parameters of the ARM template.",
          "items": {
            "type": "object",
            "description": "Information about an artifact's parameter.",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the artifact parameter."
              },
              "value": {
                "type": "string",
                "description": "The value of the artifact parameter."
              }
            }
          }
        },
        "location": {
          "type": "string",
          "description": "The location of the virtual machine."
        },
        "fileUploadOptions": {
          "description": "Options for uploading the files for the artifact. UploadFilesAndGenerateSasTokens is the default value.",
          "type": "string",
          "enum": [
            "UploadFilesAndGenerateSasTokens",
            "None"
          ],
          "x-ms-enum": {
            "name": "FileUploadOptions",
            "modelAsString": true,
            "values": [
              {
                "name": "UploadFilesAndGenerateSasTokens",
                "value": "UploadFilesAndGenerateSasTokens"
              },
              {
                "name": "None",
                "value": "None"
              }
            ]
          }
        }
      }
    },
    "GenerateUploadUriParameter": {
      "type": "object",
      "description": "Properties for generating an upload URI.",
      "properties": {
        "blobName": {
          "type": "string",
          "description": "The blob name of the upload URI."
        }
      }
    },
    "GenerateUploadUriResponse": {
      "type": "object",
      "description": "Response body for generating an upload URI.",
      "properties": {
        "uploadUri": {
          "type": "string",
          "description": "The upload URI for the VHD."
        }
      }
    },
    "HostCachingOptions": {
      "type": "string",
      "description": "Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).",
      "enum": [
        "None",
        "ReadOnly",
        "ReadWrite"
      ],
      "x-ms-enum": {
        "name": "HostCachingOptions",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None"
          },
          {
            "name": "ReadOnly",
            "value": "ReadOnly"
          },
          {
            "name": "ReadWrite",
            "value": "ReadWrite"
          }
        ]
      }
    },
    "HourDetails": {
      "type": "object",
      "description": "Properties of an hourly schedule.",
      "properties": {
        "minute": {
          "type": "integer",
          "format": "int32",
          "description": "Minutes of the hour the schedule will run."
        }
      }
    },
    "HttpStatusCode": {
      "type": "string",
      "description": "The status code for the operation.",
      "enum": [
        "Continue",
        "SwitchingProtocols",
        "OK",
        "Created",
        "Accepted",
        "NonAuthoritativeInformation",
        "NoContent",
        "ResetContent",
        "PartialContent",
        "MultipleChoices",
        "Ambiguous",
        "MovedPermanently",
        "Moved",
        "Found",
        "Redirect",
        "SeeOther",
        "RedirectMethod",
        "NotModified",
        "UseProxy",
        "Unused",
        "TemporaryRedirect",
        "RedirectKeepVerb",
        "BadRequest",
        "Unauthorized",
        "PaymentRequired",
        "Forbidden",
        "NotFound",
        "MethodNotAllowed",
        "NotAcceptable",
        "ProxyAuthenticationRequired",
        "RequestTimeout",
        "Conflict",
        "Gone",
        "LengthRequired",
        "PreconditionFailed",
        "RequestEntityTooLarge",
        "RequestUriTooLong",
        "UnsupportedMediaType",
        "RequestedRangeNotSatisfiable",
        "ExpectationFailed",
        "UpgradeRequired",
        "InternalServerError",
        "NotImplemented",
        "BadGateway",
        "ServiceUnavailable",
        "GatewayTimeout",
        "HttpVersionNotSupported"
      ],
      "x-ms-enum": {
        "name": "HttpStatusCode",
        "modelAsString": true,
        "values": [
          {
            "name": "Continue",
            "value": "Continue"
          },
          {
            "name": "SwitchingProtocols",
            "value": "SwitchingProtocols"
          },
          {
            "name": "OK",
            "value": "OK"
          },
          {
            "name": "Created",
            "value": "Created"
          },
          {
            "name": "Accepted",
            "value": "Accepted"
          },
          {
            "name": "NonAuthoritativeInformation",
            "value": "NonAuthoritativeInformation"
          },
          {
            "name": "NoContent",
            "value": "NoContent"
          },
          {
            "name": "ResetContent",
            "value": "ResetContent"
          },
          {
            "name": "PartialContent",
            "value": "PartialContent"
          },
          {
            "name": "MultipleChoices",
            "value": "MultipleChoices"
          },
          {
            "name": "Ambiguous",
            "value": "Ambiguous"
          },
          {
            "name": "MovedPermanently",
            "value": "MovedPermanently"
          },
          {
            "name": "Moved",
            "value": "Moved"
          },
          {
            "name": "Found",
            "value": "Found"
          },
          {
            "name": "Redirect",
            "value": "Redirect"
          },
          {
            "name": "SeeOther",
            "value": "SeeOther"
          },
          {
            "name": "RedirectMethod",
            "value": "RedirectMethod"
          },
          {
            "name": "NotModified",
            "value": "NotModified"
          },
          {
            "name": "UseProxy",
            "value": "UseProxy"
          },
          {
            "name": "Unused",
            "value": "Unused"
          },
          {
            "name": "TemporaryRedirect",
            "value": "TemporaryRedirect"
          },
          {
            "name": "RedirectKeepVerb",
            "value": "RedirectKeepVerb"
          },
          {
            "name": "BadRequest",
            "value": "BadRequest"
          },
          {
            "name": "Unauthorized",
            "value": "Unauthorized"
          },
          {
            "name": "PaymentRequired",
            "value": "PaymentRequired"
          },
          {
            "name": "Forbidden",
            "value": "Forbidden"
          },
          {
            "name": "NotFound",
            "value": "NotFound"
          },
          {
            "name": "MethodNotAllowed",
            "value": "MethodNotAllowed"
          },
          {
            "name": "NotAcceptable",
            "value": "NotAcceptable"
          },
          {
            "name": "ProxyAuthenticationRequired",
            "value": "ProxyAuthenticationRequired"
          },
          {
            "name": "RequestTimeout",
            "value": "RequestTimeout"
          },
          {
            "name": "Conflict",
            "value": "Conflict"
          },
          {
            "name": "Gone",
            "value": "Gone"
          },
          {
            "name": "LengthRequired",
            "value": "LengthRequired"
          },
          {
            "name": "PreconditionFailed",
            "value": "PreconditionFailed"
          },
          {
            "name": "RequestEntityTooLarge",
            "value": "RequestEntityTooLarge"
          },
          {
            "name": "RequestUriTooLong",
            "value": "RequestUriTooLong"
          },
          {
            "name": "UnsupportedMediaType",
            "value": "UnsupportedMediaType"
          },
          {
            "name": "RequestedRangeNotSatisfiable",
            "value": "RequestedRangeNotSatisfiable"
          },
          {
            "name": "ExpectationFailed",
            "value": "ExpectationFailed"
          },
          {
            "name": "UpgradeRequired",
            "value": "UpgradeRequired"
          },
          {
            "name": "InternalServerError",
            "value": "InternalServerError"
          },
          {
            "name": "NotImplemented",
            "value": "NotImplemented"
          },
          {
            "name": "BadGateway",
            "value": "BadGateway"
          },
          {
            "name": "ServiceUnavailable",
            "value": "ServiceUnavailable"
          },
          {
            "name": "GatewayTimeout",
            "value": "GatewayTimeout"
          },
          {
            "name": "HttpVersionNotSupported",
            "value": "HttpVersionNotSupported"
          }
        ]
      }
    },
    "IdentityProperties": {
      "type": "object",
      "description": "Properties of a managed identity",
      "properties": {
        "type": {
          "description": "Managed identity.",
          "type": "string",
          "enum": [
            "None",
            "SystemAssigned",
            "UserAssigned",
            "SystemAssigned,UserAssigned"
          ],
          "x-ms-enum": {
            "name": "ManagedIdentityType",
            "modelAsString": true,
            "values": [
              {
                "name": "None",
                "value": "None"
              },
              {
                "name": "SystemAssigned",
                "value": "SystemAssigned"
              },
              {
                "name": "UserAssigned",
                "value": "UserAssigned"
              },
              {
                "name": "SystemAssigned,UserAssigned",
                "value": "SystemAssigned,UserAssigned"
              }
            ]
          }
        },
        "principalId": {
          "type": "string",
          "description": "The principal id of resource identity."
        },
        "tenantId": {
          "type": "string",
          "description": "The tenant identifier of resource."
        },
        "clientSecretUrl": {
          "type": "string",
          "description": "The client secret URL of the identity."
        }
      }
    },
    "ImportLabVirtualMachineRequest": {
      "type": "object",
      "description": "This represents the payload required to import a virtual machine from a different lab into the current one",
      "properties": {
        "sourceVirtualMachineResourceId": {
          "type": "string",
          "description": "The full resource ID of the virtual machine to be imported."
        },
        "destinationVirtualMachineName": {
          "type": "string",
          "description": "The name of the virtual machine in the destination lab"
        }
      }
    },
    "InboundNatRule": {
      "type": "object",
      "description": "A rule for NAT - exposing a VM's port (backendPort) on the public IP address using a load balancer.",
      "properties": {
        "transportProtocol": {
          "description": "The transport protocol for the endpoint.",
          "type": "string",
          "enum": [
            "Tcp",
            "Udp"
          ],
          "x-ms-enum": {
            "name": "TransportProtocol",
            "modelAsString": true,
            "values": [
              {
                "name": "Tcp",
                "value": "Tcp"
              },
              {
                "name": "Udp",
                "value": "Udp"
              }
            ]
          }
        },
        "frontendPort": {
          "type": "integer",
          "format": "int32",
          "description": "The external endpoint port of the inbound connection. Possible values range between 1 and 65535, inclusive. If unspecified, a value will be allocated automatically."
        },
        "backendPort": {
          "type": "integer",
          "format": "int32",
          "description": "The port to which the external traffic will be redirected."
        }
      }
    },
    "Lab": {
      "type": "object",
      "description": "A lab.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The identifier of the resource.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "The location of the resource."
        },
        "tags": {
          "type": "object",
          "description": "The tags of the resource.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "defaultStorageAccount": {
              "type": "string",
              "description": "The lab's default storage account.",
              "readOnly": true
            },
            "defaultPremiumStorageAccount": {
              "type": "string",
              "description": "The lab's default premium storage account.",
              "readOnly": true
            },
            "artifactsStorageAccount": {
              "type": "string",
              "description": "The lab's artifact storage account.",
              "readOnly": true
            },
            "premiumDataDiskStorageAccount": {
              "type": "string",
              "description": "The lab's premium data disk storage account.",
              "readOnly": true
            },
            "vaultName": {
              "type": "string",
              "description": "The lab's Key vault.",
              "readOnly": true
            },
            "labStorageType": {
              "type": "string",
              "description": "Type of storage used by the lab. It can be either Premium or Standard. Default is Premium.",
              "default": "Premium",
              "enum": [
                "Standard",
                "Premium",
                "StandardSSD"
              ],
              "x-ms-enum": {
                "name": "StorageType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Standard",
                    "value": "Standard"
                  },
                  {
                    "name": "Premium",
                    "value": "Premium"
                  },
                  {
                    "name": "StandardSSD",
                    "value": "StandardSSD"
                  }
                ]
              }
            },
            "mandatoryArtifactsResourceIdsLinux": {
              "type": "array",
              "description": "The ordered list of artifact resource IDs that should be applied on all Linux VM creations by default, prior to the artifacts specified by the user.",
              "items": {
                "type": "string"
              }
            },
            "mandatoryArtifactsResourceIdsWindows": {
              "type": "array",
              "description": "The ordered list of artifact resource IDs that should be applied on all Windows VM creations by default, prior to the artifacts specified by the user.",
              "items": {
                "type": "string"
              }
            },
            "createdDate": {
              "type": "string",
              "format": "date-time",
              "description": "The creation date of the lab.",
              "readOnly": true
            },
            "premiumDataDisks": {
              "description": "The setting to enable usage of premium data disks.\nWhen its value is 'Enabled', creation of standard or premium data disks is allowed.\nWhen its value is 'Disabled', only creation of standard data disks is allowed.",
              "type": "string",
              "enum": [
                "Disabled",
                "Enabled"
              ],
              "x-ms-enum": {
                "name": "PremiumDataDisk",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Disabled",
                    "value": "Disabled"
                  },
                  {
                    "name": "Enabled",
                    "value": "Enabled"
                  }
                ]
              }
            },
            "environmentPermission": {
              "description": "The access rights to be granted to the user when provisioning an environment",
              "type": "string",
              "enum": [
                "Reader",
                "Contributor"
              ],
              "x-ms-enum": {
                "name": "EnvironmentPermission",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Reader",
                    "value": "Reader"
                  },
                  {
                    "name": "Contributor",
                    "value": "Contributor"
                  }
                ]
              }
            },
            "announcement": {
              "description": "The properties of any lab announcement associated with this lab",
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "description": "The plain text title for the lab announcement"
                },
                "markdown": {
                  "type": "string",
                  "description": "The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown."
                },
                "enabled": {
                  "description": "Is the lab announcement active/enabled at this time?",
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "EnableStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled"
                      }
                    ]
                  }
                },
                "expirationDate": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The time at which the announcement expires (null for never)"
                },
                "expired": {
                  "type": "boolean",
                  "description": "Has this announcement expired?"
                },
                "provisioningState": {
                  "type": "string",
                  "description": "The provisioning status of the resource.",
                  "readOnly": true
                },
                "uniqueIdentifier": {
                  "type": "string",
                  "description": "The unique immutable identifier of a resource (Guid).",
                  "readOnly": true
                }
              }
            },
            "support": {
              "description": "The properties of any lab support message associated with this lab",
              "type": "object",
              "properties": {
                "enabled": {
                  "description": "Is the lab support banner active/enabled at this time?",
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "EnableStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled"
                      }
                    ]
                  }
                },
                "markdown": {
                  "type": "string",
                  "description": "The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown."
                }
              }
            },
            "vmCreationResourceGroup": {
              "type": "string",
              "description": "The resource group in which all new lab virtual machines will be created. To let DevTest Labs manage resource group creation, set this value to null.",
              "readOnly": true
            },
            "publicIpId": {
              "type": "string",
              "description": "The public IP address for the lab's load balancer.",
              "readOnly": true
            },
            "loadBalancerId": {
              "type": "string",
              "description": "The load balancer used to for lab VMs that use shared IP address.",
              "readOnly": true
            },
            "networkSecurityGroupId": {
              "type": "string",
              "description": "The Network Security Group attached to the lab VMs Network interfaces to restrict open ports.",
              "readOnly": true
            },
            "extendedProperties": {
              "type": "object",
              "description": "Extended properties of the lab used for experimental features",
              "additionalProperties": {
                "type": "string"
              }
            },
            "provisioningState": {
              "type": "string",
              "description": "The provisioning status of the resource.",
              "readOnly": true
            },
            "uniqueIdentifier": {
              "type": "string",
              "description": "The unique immutable identifier of a resource (Guid).",
              "readOnly": true
            }
          }
        }
      },
      "required": [
        "properties"
      ]
    },
    "LabAnnouncementProperties": {
      "type": "object",
      "description": "Properties of a lab's announcement banner",
      "properties": {
        "title": {
          "type": "string",
          "description": "The plain text title for the lab announcement"
        },
        "markdown": {
          "type": "string",
          "description": "The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown."
        },
        "enabled": {
          "description": "Is the lab announcement active/enabled at this time?",
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "EnableStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled"
              }
            ]
          }
        },
        "expirationDate": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the announcement expires (null for never)"
        },
        "expired": {
          "type": "boolean",
          "description": "Has this announcement expired?"
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning status of the resource.",
          "readOnly": true
        },
        "uniqueIdentifier": {
          "type": "string",
          "description": "The unique immutable identifier of a resource (Guid).",
          "readOnly": true
        }
      }
    },
    "LabCost": {
      "type": "object",
      "description": "A cost item.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The identifier of the resource.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "The location of the resource."
        },
        "tags": {
          "type": "object",
          "description": "The tags of the resource.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "targetCost": {
              "description": "The target cost properties",
              "type": "object",
              "properties": {
                "status": {
                  "description": "Target cost status",
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "TargetCostStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled"
                      }
                    ]
                  }
                },
                "target": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Lab target cost"
                },
                "costThresholds": {
                  "type": "array",
                  "description": "Cost thresholds.",
                  "items": {
                    "type": "object",
                    "description": "Properties of a cost threshold item.",
                    "properties": {
                      "thresholdId": {
                        "type": "string",
                        "description": "The ID of the cost threshold item."
                      },
                      "percentageThreshold": {
                        "description": "The value of the percentage cost threshold.",
                        "type": "object",
                        "properties": {
                          "thresholdValue": {
                            "type": "number",
                            "format": "double",
                            "description": "The cost threshold value."
                          }
                        }
                      },
                      "displayOnChart": {
                        "description": "Indicates whether this threshold will be displayed on cost charts.",
                        "type": "string",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "name": "CostThresholdStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Enabled",
                              "value": "Enabled"
                            },
                            {
                              "name": "Disabled",
                              "value": "Disabled"
                            }
                          ]
                        }
                      },
                      "sendNotificationWhenExceeded": {
                        "description": "Indicates whether notifications will be sent when this threshold is exceeded.",
                        "type": "string",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "name": "CostThresholdStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Enabled",
                              "value": "Enabled"
                            },
                            {
                              "name": "Disabled",
                              "value": "Disabled"
                            }
                          ]
                        }
                      },
                      "notificationSent": {
                        "type": "string",
                        "description": "Indicates the datetime when notifications were last sent for this threshold."
                      }
                    }
                  },
                  "x-ms-identifiers": []
                },
                "cycleStartDateTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Reporting cycle start date."
                },
                "cycleEndDateTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Reporting cycle end date."
                },
                "cycleType": {
                  "description": "Reporting cycle type.",
                  "type": "string",
                  "enum": [
                    "CalendarMonth",
                    "Custom"
                  ],
                  "x-ms-enum": {
                    "name": "ReportingCycleType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "CalendarMonth",
                        "value": "CalendarMonth"
                      },
                      {
                        "name": "Custom",
                        "value": "Custom"
                      }
                    ]
                  }
                }
              }
            },
            "labCostSummary": {
              "description": "The lab cost summary component of the cost data.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "estimatedLabCost": {
                  "type": "number",
                  "format": "double",
                  "description": "The cost component of the cost item."
                }
              }
            },
            "labCostDetails": {
              "type": "array",
              "description": "The lab cost details component of the cost data.",
              "items": {
                "type": "object",
                "description": "The properties of a lab cost item.",
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date of the cost item."
                  },
                  "cost": {
                    "type": "number",
                    "format": "double",
                    "description": "The cost component of the cost item."
                  },
                  "costType": {
                    "description": "The type of the cost.",
                    "type": "string",
                    "enum": [
                      "Unavailable",
                      "Reported",
                      "Projected"
                    ],
                    "x-ms-enum": {
                      "name": "CostType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Unavailable",
                          "value": "Unavailable"
                        },
                        {
                          "name": "Reported",
                          "value": "Reported"
                        },
                        {
                          "name": "Projected",
                          "value": "Projected"
                        }
                      ]
                    }
                  }
                }
              },
              "readOnly": true,
              "x-ms-identifiers": []
            },
            "resourceCosts": {
              "type": "array",
              "description": "The resource cost component of the cost data.",
              "items": {
                "type": "object",
                "description": "The properties of a resource cost item.",
                "properties": {
                  "resourcename": {
                    "type": "string",
                    "description": "The name of the resource."
                  },
                  "resourceUId": {
                    "type": "string",
                    "description": "The unique identifier of the resource."
                  },
                  "resourceCost": {
                    "type": "number",
                    "format": "double",
                    "description": "The cost component of the resource cost item."
                  },
                  "resourceType": {
                    "type": "string",
                    "description": "The logical resource type (ex. virtualmachine, storageaccount)"
                  },
                  "resourceOwner": {
                    "type": "string",
                    "description": "The owner of the resource (ex. janedoe@microsoft.com)"
                  },
                  "resourcePricingTier": {
                    "type": "string",
                    "description": "The category of the resource (ex. Premium_LRS, Standard_DS1)"
                  },
                  "resourceStatus": {
                    "type": "string",
                    "description": "The status of the resource (ex. Active)"
                  },
                  "resourceId": {
                    "type": "string",
                    "description": "The ID of the resource"
                  },
                  "externalResourceId": {
                    "type": "string",
                    "description": "The ID of the external resource"
                  }
                }
              },
              "readOnly": true,
              "x-ms-identifiers": []
            },
            "currencyCode": {
              "type": "string",
              "description": "The currency code of the cost."
            },
            "startDateTime": {
              "type": "string",
              "format": "date-time",
              "description": "The start time of the cost data."
            },
            "endDateTime": {
              "type": "string",
              "format": "date-time",
              "description": "The end time of the cost data."
            },
            "createdDate": {
              "type": "string",
              "format": "date-time",
              "description": "The creation date of the cost."
            },
            "provisioningState": {
              "type": "string",
              "description": "The provisioning status of the resource.",
              "readOnly": true
            },
            "uniqueIdentifier": {
              "type": "string",
              "description": "The unique immutable identifier of a resource (Guid).",
              "readOnly": true
            }
          }
        }
      },
      "required": [
        "properties"
      ]
    },
    "LabCostDetailsProperties": {
      "type": "object",
      "description": "The properties of a lab cost item.",
      "properties": {
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "The date of the cost item."
        },
        "cost": {
          "type": "number",
          "format": "double",
          "description": "The cost component of the cost item."
        },
        "costType": {
          "description": "The type of the cost.",
          "type": "string",
          "enum": [
            "Unavailable",
            "Reported",
            "Projected"
          ],
          "x-ms-enum": {
            "name": "CostType",
            "modelAsString": true,
            "values": [
              {
                "name": "Unavailable",
                "value": "Unavailable"
              },
              {
                "name": "Reported",
                "value": "Reported"
              },
              {
                "name": "Projected",
                "value": "Projected"
              }
            ]
          }
        }
      }
    },
    "LabCostProperties": {
      "type": "object",
      "description": "Properties of a cost item.",
      "properties": {
        "targetCost": {
          "description": "The target cost properties",
          "type": "object",
          "properties": {
            "status": {
              "description": "Target cost status",
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "TargetCostStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled"
                  }
                ]
              }
            },
            "target": {
              "type": "integer",
              "format": "int32",
              "description": "Lab target cost"
            },
            "costThresholds": {
              "type": "array",
              "description": "Cost thresholds.",
              "items": {
                "type": "object",
                "description": "Properties of a cost threshold item.",
                "properties": {
                  "thresholdId": {
                    "type": "string",
                    "description": "The ID of the cost threshold item."
                  },
                  "percentageThreshold": {
                    "description": "The value of the percentage cost threshold.",
                    "type": "object",
                    "properties": {
                      "thresholdValue": {
                        "type": "number",
                        "format": "double",
                        "description": "The cost threshold value."
                      }
                    }
                  },
                  "displayOnChart": {
                    "description": "Indicates whether this threshold will be displayed on cost charts.",
                    "type": "string",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "name": "CostThresholdStatus",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Enabled",
                          "value": "Enabled"
                        },
                        {
                          "name": "Disabled",
                          "value": "Disabled"
                        }
                      ]
                    }
                  },
                  "sendNotificationWhenExceeded": {
                    "description": "Indicates whether notifications will be sent when this threshold is exceeded.",
                    "type": "string",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "name": "CostThresholdStatus",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Enabled",
                          "value": "Enabled"
                        },
                        {
                          "name": "Disabled",
                          "value": "Disabled"
                        }
                      ]
                    }
                  },
                  "notificationSent": {
                    "type": "string",
                    "description": "Indicates the datetime when notifications were last sent for this threshold."
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "cycleStartDateTime": {
              "type": "string",
              "format": "date-time",
              "description": "Reporting cycle start date."
            },
            "cycleEndDateTime": {
              "type": "string",
              "format": "date-time",
              "description": "Reporting cycle end date."
            },
            "cycleType": {
              "description": "Reporting cycle type.",
              "type": "string",
              "enum": [
                "CalendarMonth",
                "Custom"
              ],
              "x-ms-enum": {
                "name": "ReportingCycleType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "CalendarMonth",
                    "value": "CalendarMonth"
                  },
                  {
                    "name": "Custom",
                    "value": "Custom"
                  }
                ]
              }
            }
          }
        },
        "labCostSummary": {
          "description": "The lab cost summary component of the cost data.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "estimatedLabCost": {
              "type": "number",
              "format": "double",
              "description": "The cost component of the cost item."
            }
          }
        },
        "labCostDetails": {
          "type": "array",
          "description": "The lab cost details component of the cost data.",
          "items": {
            "type": "object",
            "description": "The properties of a lab cost item.",
            "properties": {
              "date": {
                "type": "string",
                "format": "date-time",
                "description": "The date of the cost item."
              },
              "cost": {
                "type": "number",
                "format": "double",
                "description": "The cost component of the cost item."
              },
              "costType": {
                "description": "The type of the cost.",
                "type": "string",
                "enum": [
                  "Unavailable",
                  "Reported",
                  "Projected"
                ],
                "x-ms-enum": {
                  "name": "CostType",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Unavailable",
                      "value": "Unavailable"
                    },
                    {
                      "name": "Reported",
                      "value": "Reported"
                    },
                    {
                      "name": "Projected",
                      "value": "Projected"
                    }
                  ]
                }
              }
            }
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "resourceCosts": {
          "type": "array",
          "description": "The resource cost component of the cost data.",
          "items": {
            "type": "object",
            "description": "The properties of a resource cost item.",
            "properties": {
              "resourcename": {
                "type": "string",
                "description": "The name of the resource."
              },
              "resourceUId": {
                "type": "string",
                "description": "The unique identifier of the resource."
              },
              "resourceCost": {
                "type": "number",
                "format": "double",
                "description": "The cost component of the resource cost item."
              },
              "resourceType": {
                "type": "string",
                "description": "The logical resource type (ex. virtualmachine, storageaccount)"
              },
              "resourceOwner": {
                "type": "string",
                "description": "The owner of the resource (ex. janedoe@microsoft.com)"
              },
              "resourcePricingTier": {
                "type": "string",
                "description": "The category of the resource (ex. Premium_LRS, Standard_DS1)"
              },
              "resourceStatus": {
                "type": "string",
                "description": "The status of the resource (ex. Active)"
              },
              "resourceId": {
                "type": "string",
                "description": "The ID of the resource"
              },
              "externalResourceId": {
                "type": "string",
                "description": "The ID of the external resource"
              }
            }
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "currencyCode": {
          "type": "string",
          "description": "The currency code of the cost."
        },
        "startDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the cost data."
        },
        "endDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the cost data."
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "description": "The creation date of the cost."
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning status of the resource.",
          "readOnly": true
        },
        "uniqueIdentifier": {
          "type": "string",
          "description": "The unique immutable identifier of a resource (Guid).",
          "readOnly": true
        }
      }
    },
    "LabCostSummaryProperties": {
      "type": "object",
      "description": "The properties of the cost summary.",
      "properties": {
        "estimatedLabCost": {
          "type": "number",
          "format": "double",
          "description": "The cost component of the cost item."
        }
      }
    },
    "LabFragment": {
      "type": "object",
      "description": "A lab.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "The tags of the resource.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "LabList": {
      "type": "object",
      "description": "The response of a list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Lab items on this page",
          "items": {
            "type": "object",
            "description": "A lab.",
            "properties": {
              "id": {
                "type": "string",
                "description": "The identifier of the resource.",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource.",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource.",
                "readOnly": true
              },
              "location": {
                "type": "string",
                "description": "The location of the resource."
              },
              "tags": {
                "type": "object",
                "description": "The tags of the resource.",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "properties": {
                "description": "The properties of the resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "defaultStorageAccount": {
                    "type": "string",
                    "description": "The lab's default storage account.",
                    "readOnly": true
                  },
                  "defaultPremiumStorageAccount": {
                    "type": "string",
                    "description": "The lab's default premium storage account.",
                    "readOnly": true
                  },
                  "artifactsStorageAccount": {
                    "type": "string",
                    "description": "The lab's artifact storage account.",
                    "readOnly": true
                  },
                  "premiumDataDiskStorageAccount": {
                    "type": "string",
                    "description": "The lab's premium data disk storage account.",
                    "readOnly": true
                  },
                  "vaultName": {
                    "type": "string",
                    "description": "The lab's Key vault.",
                    "readOnly": true
                  },
                  "labStorageType": {
                    "type": "string",
                    "description": "Type of storage used by the lab. It can be either Premium or Standard. Default is Premium.",
                    "default": "Premium",
                    "enum": [
                      "Standard",
                      "Premium",
                      "StandardSSD"
                    ],
                    "x-ms-enum": {
                      "name": "StorageType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Standard",
                          "value": "Standard"
                        },
                        {
                          "name": "Premium",
                          "value": "Premium"
                        },
                        {
                          "name": "StandardSSD",
                          "value": "StandardSSD"
                        }
                      ]
                    }
                  },
                  "mandatoryArtifactsResourceIdsLinux": {
                    "type": "array",
                    "description": "The ordered list of artifact resource IDs that should be applied on all Linux VM creations by default, prior to the artifacts specified by the user.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "mandatoryArtifactsResourceIdsWindows": {
                    "type": "array",
                    "description": "The ordered list of artifact resource IDs that should be applied on all Windows VM creations by default, prior to the artifacts specified by the user.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "createdDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The creation date of the lab.",
                    "readOnly": true
                  },
                  "premiumDataDisks": {
                    "description": "The setting to enable usage of premium data disks.\nWhen its value is 'Enabled', creation of standard or premium data disks is allowed.\nWhen its value is 'Disabled', only creation of standard data disks is allowed.",
                    "type": "string",
                    "enum": [
                      "Disabled",
                      "Enabled"
                    ],
                    "x-ms-enum": {
                      "name": "PremiumDataDisk",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Disabled",
                          "value": "Disabled"
                        },
                        {
                          "name": "Enabled",
                          "value": "Enabled"
                        }
                      ]
                    }
                  },
                  "environmentPermission": {
                    "description": "The access rights to be granted to the user when provisioning an environment",
                    "type": "string",
                    "enum": [
                      "Reader",
                      "Contributor"
                    ],
                    "x-ms-enum": {
                      "name": "EnvironmentPermission",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Reader",
                          "value": "Reader"
                        },
                        {
                          "name": "Contributor",
                          "value": "Contributor"
                        }
                      ]
                    }
                  },
                  "announcement": {
                    "description": "The properties of any lab announcement associated with this lab",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "The plain text title for the lab announcement"
                      },
                      "markdown": {
                        "type": "string",
                        "description": "The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown."
                      },
                      "enabled": {
                        "description": "Is the lab announcement active/enabled at this time?",
                        "type": "string",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "name": "EnableStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Enabled",
                              "value": "Enabled"
                            },
                            {
                              "name": "Disabled",
                              "value": "Disabled"
                            }
                          ]
                        }
                      },
                      "expirationDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time at which the announcement expires (null for never)"
                      },
                      "expired": {
                        "type": "boolean",
                        "description": "Has this announcement expired?"
                      },
                      "provisioningState": {
                        "type": "string",
                        "description": "The provisioning status of the resource.",
                        "readOnly": true
                      },
                      "uniqueIdentifier": {
                        "type": "string",
                        "description": "The unique immutable identifier of a resource (Guid).",
                        "readOnly": true
                      }
                    }
                  },
                  "support": {
                    "description": "The properties of any lab support message associated with this lab",
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "description": "Is the lab support banner active/enabled at this time?",
                        "type": "string",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "name": "EnableStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Enabled",
                              "value": "Enabled"
                            },
                            {
                              "name": "Disabled",
                              "value": "Disabled"
                            }
                          ]
                        }
                      },
                      "markdown": {
                        "type": "string",
                        "description": "The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown."
                      }
                    }
                  },
                  "vmCreationResourceGroup": {
                    "type": "string",
                    "description": "The resource group in which all new lab virtual machines will be created. To let DevTest Labs manage resource group creation, set this value to null.",
                    "readOnly": true
                  },
                  "publicIpId": {
                    "type": "string",
                    "description": "The public IP address for the lab's load balancer.",
                    "readOnly": true
                  },
                  "loadBalancerId": {
                    "type": "string",
                    "description": "The load balancer used to for lab VMs that use shared IP address.",
                    "readOnly": true
                  },
                  "networkSecurityGroupId": {
                    "type": "string",
                    "description": "The Network Security Group attached to the lab VMs Network interfaces to restrict open ports.",
                    "readOnly": true
                  },
                  "extendedProperties": {
                    "type": "object",
                    "description": "Extended properties of the lab used for experimental features",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "provisioningState": {
                    "type": "string",
                    "description": "The provisioning status of the resource.",
                    "readOnly": true
                  },
                  "uniqueIdentifier": {
                    "type": "string",
                    "description": "The unique immutable identifier of a resource (Guid).",
                    "readOnly": true
                  }
                }
              }
            },
            "required": [
              "properties"
            ]
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "LabProperties": {
      "type": "object",
      "description": "Properties of a lab.",
      "properties": {
        "defaultStorageAccount": {
          "type": "string",
          "description": "The lab's default storage account.",
          "readOnly": true
        },
        "defaultPremiumStorageAccount": {
          "type": "string",
          "description": "The lab's default premium storage account.",
          "readOnly": true
        },
        "artifactsStorageAccount": {
          "type": "string",
          "description": "The lab's artifact storage account.",
          "readOnly": true
        },
        "premiumDataDiskStorageAccount": {
          "type": "string",
          "description": "The lab's premium data disk storage account.",
          "readOnly": true
        },
        "vaultName": {
          "type": "string",
          "description": "The lab's Key vault.",
          "readOnly": true
        },
        "labStorageType": {
          "type": "string",
          "description": "Type of storage used by the lab. It can be either Premium or Standard. Default is Premium.",
          "default": "Premium",
          "enum": [
            "Standard",
            "Premium",
            "StandardSSD"
          ],
          "x-ms-enum": {
            "name": "StorageType",
            "modelAsString": true,
            "values": [
              {
                "name": "Standard",
                "value": "Standard"
              },
              {
                "name": "Premium",
                "value": "Premium"
              },
              {
                "name": "StandardSSD",
                "value": "StandardSSD"
              }
            ]
          }
        },
        "mandatoryArtifactsResourceIdsLinux": {
          "type": "array",
          "description": "The ordered list of artifact resource IDs that should be applied on all Linux VM creations by default, prior to the artifacts specified by the user.",
          "items": {
            "type": "string"
          }
        },
        "mandatoryArtifactsResourceIdsWindows": {
          "type": "array",
          "description": "The ordered list of artifact resource IDs that should be applied on all Windows VM creations by default, prior to the artifacts specified by the user.",
          "items": {
            "type": "string"
          }
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "description": "The creation date of the lab.",
          "readOnly": true
        },
        "premiumDataDisks": {
          "description": "The setting to enable usage of premium data disks.\nWhen its value is 'Enabled', creation of standard or premium data disks is allowed.\nWhen its value is 'Disabled', only creation of standard data disks is allowed.",
          "type": "string",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "x-ms-enum": {
            "name": "PremiumDataDisk",
            "modelAsString": true,
            "values": [
              {
                "name": "Disabled",
                "value": "Disabled"
              },
              {
                "name": "Enabled",
                "value": "Enabled"
              }
            ]
          }
        },
        "environmentPermission": {
          "description": "The access rights to be granted to the user when provisioning an environment",
          "type": "string",
          "enum": [
            "Reader",
            "Contributor"
          ],
          "x-ms-enum": {
            "name": "EnvironmentPermission",
            "modelAsString": true,
            "values": [
              {
                "name": "Reader",
                "value": "Reader"
              },
              {
                "name": "Contributor",
                "value": "Contributor"
              }
            ]
          }
        },
        "announcement": {
          "description": "The properties of any lab announcement associated with this lab",
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "The plain text title for the lab announcement"
            },
            "markdown": {
              "type": "string",
              "description": "The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown."
            },
            "enabled": {
              "description": "Is the lab announcement active/enabled at this time?",
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "EnableStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled"
                  }
                ]
              }
            },
            "expirationDate": {
              "type": "string",
              "format": "date-time",
              "description": "The time at which the announcement expires (null for never)"
            },
            "expired": {
              "type": "boolean",
              "description": "Has this announcement expired?"
            },
            "provisioningState": {
              "type": "string",
              "description": "The provisioning status of the resource.",
              "readOnly": true
            },
            "uniqueIdentifier": {
              "type": "string",
              "description": "The unique immutable identifier of a resource (Guid).",
              "readOnly": true
            }
          }
        },
        "support": {
          "description": "The properties of any lab support message associated with this lab",
          "type": "object",
          "properties": {
            "enabled": {
              "description": "Is the lab support banner active/enabled at this time?",
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "EnableStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled"
                  }
                ]
              }
            },
            "markdown": {
              "type": "string",
              "description": "The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown."
            }
          }
        },
        "vmCreationResourceGroup": {
          "type": "string",
          "description": "The resource group in which all new lab virtual machines will be created. To let DevTest Labs manage resource group creation, set this value to null.",
          "readOnly": true
        },
        "publicIpId": {
          "type": "string",
          "description": "The public IP address for the lab's load balancer.",
          "readOnly": true
        },
        "loadBalancerId": {
          "type": "string",
          "description": "The load balancer used to for lab VMs that use shared IP address.",
          "readOnly": true
        },
        "networkSecurityGroupId": {
          "type": "string",
          "description": "The Network Security Group attached to the lab VMs Network interfaces to restrict open ports.",
          "readOnly": true
        },
        "extendedProperties": {
          "type": "object",
          "description": "Extended properties of the lab used for experimental features",
          "additionalProperties": {
            "type": "string"
          }
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning status of the resource.",
          "readOnly": true
        },
        "uniqueIdentifier": {
          "type": "string",
          "description": "The unique immutable identifier of a resource (Guid).",
          "readOnly": true
        }
      }
    },
    "LabResourceCostProperties": {
      "type": "object",
      "description": "The properties of a resource cost item.",
      "properties": {
        "resourcename": {
          "type": "string",
          "description": "The name of the resource."
        },
        "resourceUId": {
          "type": "string",
          "description": "The unique identifier of the resource."
        },
        "resourceCost": {
          "type": "number",
          "format": "double",
          "description": "The cost component of the resource cost item."
        },
        "resourceType": {
          "type": "string",
          "description": "The logical resource type (ex. virtualmachine, storageaccount)"
        },
        "resourceOwner": {
          "type": "string",
          "description": "The owner of the resource (ex. janedoe@microsoft.com)"
        },
        "resourcePricingTier": {
          "type": "string",
          "description": "The category of the resource (ex. Premium_LRS, Standard_DS1)"
        },
        "resourceStatus": {
          "type": "string",
          "description": "The status of the resource (ex. Active)"
        },
        "resourceId": {
          "type": "string",
          "description": "The ID of the resource"
        },
        "externalResourceId": {
          "type": "string",
          "description": "The ID of the external resource"
        }
      }
    },
    "LabSupportProperties": {
      "type": "object",
      "description": "Properties of a lab's support banner",
      "properties": {
        "enabled": {
          "description": "Is the lab support banner active/enabled at this time?",
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "EnableStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled"
              }
            ]
          }
        },
        "markdown": {
          "type": "string",
          "description": "The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown."
        }
      }
    },
    "LabVhd": {
      "type": "object",
      "description": "Properties of a VHD in the lab.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The URI to the VHD."
        }
      }
    },
    "LabVhdList": {
      "type": "object",
      "description": "The response of a list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The LabVhd items on this page",
          "items": {
            "type": "object",
            "description": "Properties of a VHD in the lab.",
            "properties": {
              "id": {
                "type": "string",
                "description": "The URI to the VHD."
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "LabVirtualMachine": {
      "type": "object",
      "description": "A virtual machine.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The identifier of the resource.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "The location of the resource."
        },
        "tags": {
          "type": "object",
          "description": "The tags of the resource.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "notes": {
              "type": "string",
              "description": "The notes of the virtual machine."
            },
            "ownerObjectId": {
              "type": "string",
              "description": "The object identifier of the owner of the virtual machine.",
              "default": "dynamicValue"
            },
            "ownerUserPrincipalName": {
              "type": "string",
              "description": "The user principal name of the virtual machine owner."
            },
            "createdByUserId": {
              "type": "string",
              "description": "The object identifier of the creator of the virtual machine.",
              "readOnly": true
            },
            "createdByUser": {
              "type": "string",
              "description": "The email address of creator of the virtual machine.",
              "readOnly": true
            },
            "createdDate": {
              "type": "string",
              "format": "date-time",
              "description": "The creation date of the virtual machine."
            },
            "computeId": {
              "type": "string",
              "description": "The resource identifier (Microsoft.Compute) of the virtual machine.",
              "readOnly": true
            },
            "customImageId": {
              "type": "string",
              "description": "The custom image identifier of the virtual machine."
            },
            "osType": {
              "type": "string",
              "description": "The OS type of the virtual machine.",
              "readOnly": true
            },
            "size": {
              "type": "string",
              "description": "The size of the virtual machine."
            },
            "userName": {
              "type": "string",
              "description": "The user name of the virtual machine."
            },
            "password": {
              "type": "string",
              "description": "The password of the virtual machine administrator."
            },
            "sshKey": {
              "type": "string",
              "description": "The SSH key of the virtual machine administrator."
            },
            "isAuthenticationWithSshKey": {
              "type": "boolean",
              "description": "Indicates whether this virtual machine uses an SSH key for authentication."
            },
            "fqdn": {
              "type": "string",
              "description": "The fully-qualified domain name of the virtual machine.",
              "readOnly": true
            },
            "labSubnetName": {
              "type": "string",
              "description": "The lab subnet name of the virtual machine."
            },
            "labVirtualNetworkId": {
              "type": "string",
              "description": "The lab virtual network identifier of the virtual machine."
            },
            "disallowPublicIpAddress": {
              "type": "boolean",
              "description": "Indicates whether the virtual machine is to be created without a public IP address.",
              "default": false
            },
            "artifacts": {
              "type": "array",
              "description": "The artifacts to be installed on the virtual machine.",
              "items": {
                "type": "object",
                "description": "Properties of an artifact.",
                "properties": {
                  "artifactId": {
                    "type": "string",
                    "description": "The artifact's identifier."
                  },
                  "artifactTitle": {
                    "type": "string",
                    "description": "The artifact's title."
                  },
                  "parameters": {
                    "type": "array",
                    "description": "The parameters of the artifact.",
                    "items": {
                      "type": "object",
                      "description": "Properties of an artifact parameter.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of the artifact parameter."
                        },
                        "value": {
                          "type": "string",
                          "description": "The value of the artifact parameter."
                        }
                      }
                    }
                  },
                  "status": {
                    "type": "string",
                    "description": "The status of the artifact."
                  },
                  "deploymentStatusMessage": {
                    "type": "string",
                    "description": "The status message from the deployment."
                  },
                  "vmExtensionStatusMessage": {
                    "type": "string",
                    "description": "The status message from the virtual machine extension."
                  },
                  "installTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time that the artifact starts to install on the virtual machine."
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "artifactDeploymentStatus": {
              "description": "The artifact deployment status for the virtual machine.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "deploymentStatus": {
                  "type": "string",
                  "description": "The deployment status of the artifact."
                },
                "artifactsApplied": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The total count of the artifacts that were successfully applied."
                },
                "totalArtifacts": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The total count of the artifacts that were tentatively applied."
                }
              }
            },
            "galleryImageReference": {
              "description": "The Microsoft Azure Marketplace image reference of the virtual machine.",
              "type": "object",
              "properties": {
                "offer": {
                  "type": "string",
                  "description": "The offer of the gallery image."
                },
                "publisher": {
                  "type": "string",
                  "description": "The publisher of the gallery image."
                },
                "sku": {
                  "type": "string",
                  "description": "The SKU of the gallery image."
                },
                "osType": {
                  "type": "string",
                  "description": "The OS type of the gallery image."
                },
                "version": {
                  "type": "string",
                  "description": "The version of the gallery image."
                }
              }
            },
            "planId": {
              "type": "string",
              "description": "The id of the plan associated with the virtual machine image"
            },
            "computeVm": {
              "description": "The compute virtual machine properties.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "statuses": {
                  "type": "array",
                  "description": "Gets the statuses of the virtual machine.",
                  "items": {
                    "type": "object",
                    "description": "Status information about a virtual machine.",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Gets the status Code."
                      },
                      "displayStatus": {
                        "type": "string",
                        "description": "Gets the short localizable label for the status."
                      },
                      "message": {
                        "type": "string",
                        "description": "Gets the message associated with the status."
                      }
                    }
                  },
                  "x-ms-identifiers": []
                },
                "osType": {
                  "type": "string",
                  "description": "Gets the OS type of the virtual machine."
                },
                "vmSize": {
                  "type": "string",
                  "description": "Gets the size of the virtual machine."
                },
                "networkInterfaceId": {
                  "type": "string",
                  "description": "Gets the network interface ID of the virtual machine."
                },
                "osDiskId": {
                  "type": "string",
                  "description": "Gets OS disk blob uri for the virtual machine."
                },
                "dataDiskIds": {
                  "type": "array",
                  "description": "Gets data disks blob uri for the virtual machine.",
                  "items": {
                    "type": "string"
                  }
                },
                "dataDisks": {
                  "type": "array",
                  "description": "Gets all data disks attached to the virtual machine.",
                  "items": {
                    "type": "object",
                    "description": "A data disks attached to a virtual machine.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Gets data disk name."
                      },
                      "diskUri": {
                        "type": "string",
                        "description": "When backed by a blob, the URI of underlying blob."
                      },
                      "managedDiskId": {
                        "type": "string",
                        "description": "When backed by managed disk, this is the ID of the compute disk resource."
                      },
                      "diskSizeGiB": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Gets data disk size in GiB."
                      }
                    }
                  }
                }
              }
            },
            "networkInterface": {
              "description": "The network interface properties.",
              "type": "object",
              "properties": {
                "virtualNetworkId": {
                  "type": "string",
                  "description": "The resource ID of the virtual network."
                },
                "subnetId": {
                  "type": "string",
                  "description": "The resource ID of the sub net."
                },
                "publicIpAddressId": {
                  "type": "string",
                  "description": "The resource ID of the public IP address."
                },
                "publicIpAddress": {
                  "type": "string",
                  "description": "The public IP address."
                },
                "privateIpAddress": {
                  "type": "string",
                  "description": "The private IP address."
                },
                "dnsName": {
                  "type": "string",
                  "description": "The DNS name."
                },
                "rdpAuthority": {
                  "type": "string",
                  "description": "The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol)."
                },
                "sshAuthority": {
                  "type": "string",
                  "description": "The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH."
                },
                "sharedPublicIpAddressConfiguration": {
                  "description": "The configuration for sharing a public IP address across multiple virtual machines.",
                  "type": "object",
                  "properties": {
                    "inboundNatRules": {
                      "type": "array",
                      "description": "The incoming NAT rules",
                      "items": {
                        "type": "object",
                        "description": "A rule for NAT - exposing a VM's port (backendPort) on the public IP address using a load balancer.",
                        "properties": {
                          "transportProtocol": {
                            "description": "The transport protocol for the endpoint.",
                            "type": "string",
                            "enum": [
                              "Tcp",
                              "Udp"
                            ],
                            "x-ms-enum": {
                              "name": "TransportProtocol",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Tcp",
                                  "value": "Tcp"
                                },
                                {
                                  "name": "Udp",
                                  "value": "Udp"
                                }
                              ]
                            }
                          },
                          "frontendPort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The external endpoint port of the inbound connection. Possible values range between 1 and 65535, inclusive. If unspecified, a value will be allocated automatically."
                          },
                          "backendPort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The port to which the external traffic will be redirected."
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    }
                  }
                }
              }
            },
            "applicableSchedule": {
              "type": "object",
              "description": "Schedules applicable to a virtual machine. The schedules may have been defined on a VM or on lab level.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "labVmsShutdown": {
                      "type": "object",
                      "description": "A schedule.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The identifier of the resource.",
                          "readOnly": true
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the resource.",
                          "readOnly": true
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of the resource.",
                          "readOnly": true
                        },
                        "location": {
                          "type": "string",
                          "description": "The location of the resource."
                        },
                        "tags": {
                          "type": "object",
                          "description": "The tags of the resource.",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "properties": {
                          "description": "The properties of the resource.",
                          "x-ms-client-flatten": true,
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "description": "The status of the schedule (i.e. Enabled, Disabled)",
                              "default": "Disabled",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "EnableStatus",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            },
                            "taskType": {
                              "type": "string",
                              "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                            },
                            "weeklyRecurrence": {
                              "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                              "type": "object",
                              "properties": {
                                "weekdays": {
                                  "type": "array",
                                  "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "time": {
                                  "type": "string",
                                  "description": "The time of the day the schedule will occur."
                                }
                              }
                            },
                            "dailyRecurrence": {
                              "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                              "type": "object",
                              "properties": {
                                "time": {
                                  "type": "string",
                                  "description": "The time of day the schedule will occur."
                                }
                              }
                            },
                            "hourlyRecurrence": {
                              "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                              "type": "object",
                              "properties": {
                                "minute": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Minutes of the hour the schedule will run."
                                }
                              }
                            },
                            "timeZoneId": {
                              "type": "string",
                              "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                            },
                            "notificationSettings": {
                              "description": "Notification settings.",
                              "type": "object",
                              "properties": {
                                "status": {
                                  "type": "string",
                                  "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                  "default": "Disabled",
                                  "enum": [
                                    "Enabled",
                                    "Disabled"
                                  ],
                                  "x-ms-enum": {
                                    "name": "EnableStatus",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Enabled",
                                        "value": "Enabled"
                                      },
                                      {
                                        "name": "Disabled",
                                        "value": "Disabled"
                                      }
                                    ]
                                  }
                                },
                                "timeInMinutes": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Time in minutes before event at which notification will be sent."
                                },
                                "webhookUrl": {
                                  "type": "string",
                                  "description": "The webhook URL to which the notification will be sent."
                                },
                                "emailRecipient": {
                                  "type": "string",
                                  "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                },
                                "notificationLocale": {
                                  "type": "string",
                                  "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                }
                              }
                            },
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The creation date of the schedule.",
                              "readOnly": true
                            },
                            "targetResourceId": {
                              "type": "string",
                              "description": "The resource ID to which the schedule belongs"
                            },
                            "provisioningState": {
                              "type": "string",
                              "description": "The provisioning status of the resource.",
                              "readOnly": true
                            },
                            "uniqueIdentifier": {
                              "type": "string",
                              "description": "The unique immutable identifier of a resource (Guid).",
                              "readOnly": true
                            }
                          }
                        }
                      },
                      "required": [
                        "properties"
                      ]
                    },
                    "labVmsStartup": {
                      "type": "object",
                      "description": "A schedule.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The identifier of the resource.",
                          "readOnly": true
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the resource.",
                          "readOnly": true
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of the resource.",
                          "readOnly": true
                        },
                        "location": {
                          "type": "string",
                          "description": "The location of the resource."
                        },
                        "tags": {
                          "type": "object",
                          "description": "The tags of the resource.",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "properties": {
                          "description": "The properties of the resource.",
                          "x-ms-client-flatten": true,
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "description": "The status of the schedule (i.e. Enabled, Disabled)",
                              "default": "Disabled",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "EnableStatus",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            },
                            "taskType": {
                              "type": "string",
                              "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                            },
                            "weeklyRecurrence": {
                              "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                              "type": "object",
                              "properties": {
                                "weekdays": {
                                  "type": "array",
                                  "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "time": {
                                  "type": "string",
                                  "description": "The time of the day the schedule will occur."
                                }
                              }
                            },
                            "dailyRecurrence": {
                              "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                              "type": "object",
                              "properties": {
                                "time": {
                                  "type": "string",
                                  "description": "The time of day the schedule will occur."
                                }
                              }
                            },
                            "hourlyRecurrence": {
                              "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                              "type": "object",
                              "properties": {
                                "minute": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Minutes of the hour the schedule will run."
                                }
                              }
                            },
                            "timeZoneId": {
                              "type": "string",
                              "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                            },
                            "notificationSettings": {
                              "description": "Notification settings.",
                              "type": "object",
                              "properties": {
                                "status": {
                                  "type": "string",
                                  "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                  "default": "Disabled",
                                  "enum": [
                                    "Enabled",
                                    "Disabled"
                                  ],
                                  "x-ms-enum": {
                                    "name": "EnableStatus",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Enabled",
                                        "value": "Enabled"
                                      },
                                      {
                                        "name": "Disabled",
                                        "value": "Disabled"
                                      }
                                    ]
                                  }
                                },
                                "timeInMinutes": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Time in minutes before event at which notification will be sent."
                                },
                                "webhookUrl": {
                                  "type": "string",
                                  "description": "The webhook URL to which the notification will be sent."
                                },
                                "emailRecipient": {
                                  "type": "string",
                                  "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                },
                                "notificationLocale": {
                                  "type": "string",
                                  "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                }
                              }
                            },
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The creation date of the schedule.",
                              "readOnly": true
                            },
                            "targetResourceId": {
                              "type": "string",
                              "description": "The resource ID to which the schedule belongs"
                            },
                            "provisioningState": {
                              "type": "string",
                              "description": "The provisioning status of the resource.",
                              "readOnly": true
                            },
                            "uniqueIdentifier": {
                              "type": "string",
                              "description": "The unique immutable identifier of a resource (Guid).",
                              "readOnly": true
                            }
                          }
                        }
                      },
                      "required": [
                        "properties"
                      ]
                    }
                  }
                }
              },
              "required": [
                "properties"
              ],
              "readOnly": true
            },
            "expirationDate": {
              "type": "string",
              "format": "date-time",
              "description": "The expiration date for VM."
            },
            "allowClaim": {
              "type": "boolean",
              "description": "Indicates whether another user can take ownership of the virtual machine",
              "default": false
            },
            "storageType": {
              "type": "string",
              "description": "Storage type to use for virtual machine (i.e. Standard, Premium).",
              "default": "labStorageType"
            },
            "virtualMachineCreationSource": {
              "description": "Tells source of creation of lab virtual machine. Output property only.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "FromCustomImage",
                "FromGalleryImage",
                "FromSharedGalleryImage"
              ],
              "x-ms-enum": {
                "name": "VirtualMachineCreationSource",
                "modelAsString": true,
                "values": [
                  {
                    "name": "FromCustomImage",
                    "value": "FromCustomImage"
                  },
                  {
                    "name": "FromGalleryImage",
                    "value": "FromGalleryImage"
                  },
                  {
                    "name": "FromSharedGalleryImage",
                    "value": "FromSharedGalleryImage"
                  }
                ]
              }
            },
            "environmentId": {
              "type": "string",
              "description": "The resource ID of the environment that contains this virtual machine, if any."
            },
            "dataDiskParameters": {
              "type": "array",
              "description": "New or existing data disks to attach to the virtual machine after creation",
              "items": {
                "type": "object",
                "description": "Request body for adding a new or existing data disk to a virtual machine.",
                "properties": {
                  "attachNewDataDiskOptions": {
                    "description": "Specifies options to attach a new disk to the virtual machine.",
                    "type": "object",
                    "properties": {
                      "diskSizeGiB": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Size of the disk to be attached in Gibibytes."
                      },
                      "diskName": {
                        "type": "string",
                        "description": "The name of the disk to be attached."
                      },
                      "diskType": {
                        "description": "The storage type for the disk (i.e. Standard, Premium).",
                        "type": "string",
                        "enum": [
                          "Standard",
                          "Premium",
                          "StandardSSD"
                        ],
                        "x-ms-enum": {
                          "name": "StorageType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Standard",
                              "value": "Standard"
                            },
                            {
                              "name": "Premium",
                              "value": "Premium"
                            },
                            {
                              "name": "StandardSSD",
                              "value": "StandardSSD"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "existingLabDiskId": {
                    "type": "string",
                    "description": "Specifies the existing lab disk id to attach to virtual machine."
                  },
                  "hostCaching": {
                    "description": "Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).",
                    "type": "string",
                    "enum": [
                      "None",
                      "ReadOnly",
                      "ReadWrite"
                    ],
                    "x-ms-enum": {
                      "name": "HostCachingOptions",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "None",
                          "value": "None"
                        },
                        {
                          "name": "ReadOnly",
                          "value": "ReadOnly"
                        },
                        {
                          "name": "ReadWrite",
                          "value": "ReadWrite"
                        }
                      ]
                    }
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "scheduleParameters": {
              "type": "array",
              "description": "Virtual Machine schedules to be created",
              "items": {
                "type": "object",
                "description": "Properties for creating a schedule.",
                "properties": {
                  "properties": {
                    "description": "The properties of the schedule.",
                    "x-ms-client-flatten": true,
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "description": "The status of the schedule (i.e. Enabled, Disabled)",
                        "default": "Disabled",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "name": "EnableStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Enabled",
                              "value": "Enabled"
                            },
                            {
                              "name": "Disabled",
                              "value": "Disabled"
                            }
                          ]
                        }
                      },
                      "taskType": {
                        "type": "string",
                        "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                      },
                      "weeklyRecurrence": {
                        "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                        "type": "object",
                        "properties": {
                          "weekdays": {
                            "type": "array",
                            "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                            "items": {
                              "type": "string"
                            }
                          },
                          "time": {
                            "type": "string",
                            "description": "The time of the day the schedule will occur."
                          }
                        }
                      },
                      "dailyRecurrence": {
                        "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                        "type": "object",
                        "properties": {
                          "time": {
                            "type": "string",
                            "description": "The time of day the schedule will occur."
                          }
                        }
                      },
                      "hourlyRecurrence": {
                        "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                        "type": "object",
                        "properties": {
                          "minute": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Minutes of the hour the schedule will run."
                          }
                        }
                      },
                      "timeZoneId": {
                        "type": "string",
                        "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                      },
                      "notificationSettings": {
                        "description": "Notification settings.",
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                            "default": "Disabled",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "EnableStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled"
                                }
                              ]
                            }
                          },
                          "timeInMinutes": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Time in minutes before event at which notification will be sent."
                          },
                          "webhookUrl": {
                            "type": "string",
                            "description": "The webhook URL to which the notification will be sent."
                          },
                          "emailRecipient": {
                            "type": "string",
                            "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                          },
                          "notificationLocale": {
                            "type": "string",
                            "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                          }
                        }
                      },
                      "targetResourceId": {
                        "type": "string",
                        "description": "The resource ID to which the schedule belongs"
                      }
                    }
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the virtual machine or environment"
                  },
                  "location": {
                    "type": "string",
                    "description": "The location of the new virtual machine or environment",
                    "readOnly": true
                  },
                  "tags": {
                    "type": "object",
                    "description": "The tags of the resource.",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "lastKnownPowerState": {
              "type": "string",
              "description": "Last known compute power state captured in DTL",
              "readOnly": true
            },
            "provisioningState": {
              "type": "string",
              "description": "The provisioning status of the resource.",
              "readOnly": true
            },
            "uniqueIdentifier": {
              "type": "string",
              "description": "The unique immutable identifier of a resource (Guid).",
              "readOnly": true
            }
          }
        }
      },
      "required": [
        "properties"
      ]
    },
    "LabVirtualMachineCreationParameter": {
      "type": "object",
      "description": "Properties for creating a virtual machine.",
      "properties": {
        "properties": {
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "bulkCreationParameters": {
              "description": "The number of virtual machine instances to create.",
              "type": "object",
              "properties": {
                "instanceCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of virtual machine instances to create."
                }
              }
            },
            "notes": {
              "type": "string",
              "description": "The notes of the virtual machine."
            },
            "ownerObjectId": {
              "type": "string",
              "description": "The object identifier of the owner of the virtual machine.",
              "default": "dynamicValue"
            },
            "ownerUserPrincipalName": {
              "type": "string",
              "description": "The user principal name of the virtual machine owner."
            },
            "createdDate": {
              "type": "string",
              "format": "date-time",
              "description": "The creation date of the virtual machine."
            },
            "customImageId": {
              "type": "string",
              "description": "The custom image identifier of the virtual machine."
            },
            "size": {
              "type": "string",
              "description": "The size of the virtual machine."
            },
            "userName": {
              "type": "string",
              "description": "The user name of the virtual machine."
            },
            "password": {
              "type": "string",
              "description": "The password of the virtual machine administrator."
            },
            "sshKey": {
              "type": "string",
              "description": "The SSH key of the virtual machine administrator."
            },
            "isAuthenticationWithSshKey": {
              "type": "boolean",
              "description": "Indicates whether this virtual machine uses an SSH key for authentication."
            },
            "labSubnetName": {
              "type": "string",
              "description": "The lab subnet name of the virtual machine."
            },
            "labVirtualNetworkId": {
              "type": "string",
              "description": "The lab virtual network identifier of the virtual machine."
            },
            "disallowPublicIpAddress": {
              "type": "boolean",
              "description": "Indicates whether the virtual machine is to be created without a public IP address.",
              "default": false
            },
            "artifacts": {
              "type": "array",
              "description": "The artifacts to be installed on the virtual machine.",
              "items": {
                "type": "object",
                "description": "Properties of an artifact.",
                "properties": {
                  "artifactId": {
                    "type": "string",
                    "description": "The artifact's identifier."
                  },
                  "artifactTitle": {
                    "type": "string",
                    "description": "The artifact's title."
                  },
                  "parameters": {
                    "type": "array",
                    "description": "The parameters of the artifact.",
                    "items": {
                      "type": "object",
                      "description": "Properties of an artifact parameter.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of the artifact parameter."
                        },
                        "value": {
                          "type": "string",
                          "description": "The value of the artifact parameter."
                        }
                      }
                    }
                  },
                  "status": {
                    "type": "string",
                    "description": "The status of the artifact."
                  },
                  "deploymentStatusMessage": {
                    "type": "string",
                    "description": "The status message from the deployment."
                  },
                  "vmExtensionStatusMessage": {
                    "type": "string",
                    "description": "The status message from the virtual machine extension."
                  },
                  "installTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time that the artifact starts to install on the virtual machine."
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "galleryImageReference": {
              "description": "The Microsoft Azure Marketplace image reference of the virtual machine.",
              "type": "object",
              "properties": {
                "offer": {
                  "type": "string",
                  "description": "The offer of the gallery image."
                },
                "publisher": {
                  "type": "string",
                  "description": "The publisher of the gallery image."
                },
                "sku": {
                  "type": "string",
                  "description": "The SKU of the gallery image."
                },
                "osType": {
                  "type": "string",
                  "description": "The OS type of the gallery image."
                },
                "version": {
                  "type": "string",
                  "description": "The version of the gallery image."
                }
              }
            },
            "planId": {
              "type": "string",
              "description": "The id of the plan associated with the virtual machine image"
            },
            "networkInterface": {
              "description": "The network interface properties.",
              "type": "object",
              "properties": {
                "virtualNetworkId": {
                  "type": "string",
                  "description": "The resource ID of the virtual network."
                },
                "subnetId": {
                  "type": "string",
                  "description": "The resource ID of the sub net."
                },
                "publicIpAddressId": {
                  "type": "string",
                  "description": "The resource ID of the public IP address."
                },
                "publicIpAddress": {
                  "type": "string",
                  "description": "The public IP address."
                },
                "privateIpAddress": {
                  "type": "string",
                  "description": "The private IP address."
                },
                "dnsName": {
                  "type": "string",
                  "description": "The DNS name."
                },
                "rdpAuthority": {
                  "type": "string",
                  "description": "The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol)."
                },
                "sshAuthority": {
                  "type": "string",
                  "description": "The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH."
                },
                "sharedPublicIpAddressConfiguration": {
                  "description": "The configuration for sharing a public IP address across multiple virtual machines.",
                  "type": "object",
                  "properties": {
                    "inboundNatRules": {
                      "type": "array",
                      "description": "The incoming NAT rules",
                      "items": {
                        "type": "object",
                        "description": "A rule for NAT - exposing a VM's port (backendPort) on the public IP address using a load balancer.",
                        "properties": {
                          "transportProtocol": {
                            "description": "The transport protocol for the endpoint.",
                            "type": "string",
                            "enum": [
                              "Tcp",
                              "Udp"
                            ],
                            "x-ms-enum": {
                              "name": "TransportProtocol",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Tcp",
                                  "value": "Tcp"
                                },
                                {
                                  "name": "Udp",
                                  "value": "Udp"
                                }
                              ]
                            }
                          },
                          "frontendPort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The external endpoint port of the inbound connection. Possible values range between 1 and 65535, inclusive. If unspecified, a value will be allocated automatically."
                          },
                          "backendPort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The port to which the external traffic will be redirected."
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    }
                  }
                }
              }
            },
            "expirationDate": {
              "type": "string",
              "format": "date-time",
              "description": "The expiration date for VM."
            },
            "allowClaim": {
              "type": "boolean",
              "description": "Indicates whether another user can take ownership of the virtual machine",
              "default": false
            },
            "storageType": {
              "type": "string",
              "description": "Storage type to use for virtual machine (i.e. Standard, Premium).",
              "default": "labStorageType"
            },
            "environmentId": {
              "type": "string",
              "description": "The resource ID of the environment that contains this virtual machine, if any."
            },
            "dataDiskParameters": {
              "type": "array",
              "description": "New or existing data disks to attach to the virtual machine after creation",
              "items": {
                "type": "object",
                "description": "Request body for adding a new or existing data disk to a virtual machine.",
                "properties": {
                  "attachNewDataDiskOptions": {
                    "description": "Specifies options to attach a new disk to the virtual machine.",
                    "type": "object",
                    "properties": {
                      "diskSizeGiB": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Size of the disk to be attached in Gibibytes."
                      },
                      "diskName": {
                        "type": "string",
                        "description": "The name of the disk to be attached."
                      },
                      "diskType": {
                        "description": "The storage type for the disk (i.e. Standard, Premium).",
                        "type": "string",
                        "enum": [
                          "Standard",
                          "Premium",
                          "StandardSSD"
                        ],
                        "x-ms-enum": {
                          "name": "StorageType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Standard",
                              "value": "Standard"
                            },
                            {
                              "name": "Premium",
                              "value": "Premium"
                            },
                            {
                              "name": "StandardSSD",
                              "value": "StandardSSD"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "existingLabDiskId": {
                    "type": "string",
                    "description": "Specifies the existing lab disk id to attach to virtual machine."
                  },
                  "hostCaching": {
                    "description": "Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).",
                    "type": "string",
                    "enum": [
                      "None",
                      "ReadOnly",
                      "ReadWrite"
                    ],
                    "x-ms-enum": {
                      "name": "HostCachingOptions",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "None",
                          "value": "None"
                        },
                        {
                          "name": "ReadOnly",
                          "value": "ReadOnly"
                        },
                        {
                          "name": "ReadWrite",
                          "value": "ReadWrite"
                        }
                      ]
                    }
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "scheduleParameters": {
              "type": "array",
              "description": "Virtual Machine schedules to be created",
              "items": {
                "type": "object",
                "description": "Properties for creating a schedule.",
                "properties": {
                  "properties": {
                    "description": "The properties of the schedule.",
                    "x-ms-client-flatten": true,
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "description": "The status of the schedule (i.e. Enabled, Disabled)",
                        "default": "Disabled",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "name": "EnableStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Enabled",
                              "value": "Enabled"
                            },
                            {
                              "name": "Disabled",
                              "value": "Disabled"
                            }
                          ]
                        }
                      },
                      "taskType": {
                        "type": "string",
                        "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                      },
                      "weeklyRecurrence": {
                        "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                        "type": "object",
                        "properties": {
                          "weekdays": {
                            "type": "array",
                            "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                            "items": {
                              "type": "string"
                            }
                          },
                          "time": {
                            "type": "string",
                            "description": "The time of the day the schedule will occur."
                          }
                        }
                      },
                      "dailyRecurrence": {
                        "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                        "type": "object",
                        "properties": {
                          "time": {
                            "type": "string",
                            "description": "The time of day the schedule will occur."
                          }
                        }
                      },
                      "hourlyRecurrence": {
                        "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                        "type": "object",
                        "properties": {
                          "minute": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Minutes of the hour the schedule will run."
                          }
                        }
                      },
                      "timeZoneId": {
                        "type": "string",
                        "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                      },
                      "notificationSettings": {
                        "description": "Notification settings.",
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                            "default": "Disabled",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "EnableStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled"
                                }
                              ]
                            }
                          },
                          "timeInMinutes": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Time in minutes before event at which notification will be sent."
                          },
                          "webhookUrl": {
                            "type": "string",
                            "description": "The webhook URL to which the notification will be sent."
                          },
                          "emailRecipient": {
                            "type": "string",
                            "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                          },
                          "notificationLocale": {
                            "type": "string",
                            "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                          }
                        }
                      },
                      "targetResourceId": {
                        "type": "string",
                        "description": "The resource ID to which the schedule belongs"
                      }
                    }
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the virtual machine or environment"
                  },
                  "location": {
                    "type": "string",
                    "description": "The location of the new virtual machine or environment",
                    "readOnly": true
                  },
                  "tags": {
                    "type": "object",
                    "description": "The tags of the resource.",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "name": {
          "type": "string",
          "description": "The name of the virtual machine or environment"
        },
        "location": {
          "type": "string",
          "description": "The location of the new virtual machine or environment"
        },
        "tags": {
          "type": "object",
          "description": "The tags of the resource.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "LabVirtualMachineCreationParameterProperties": {
      "type": "object",
      "description": "Properties for virtual machine creation.",
      "properties": {
        "bulkCreationParameters": {
          "description": "The number of virtual machine instances to create.",
          "type": "object",
          "properties": {
            "instanceCount": {
              "type": "integer",
              "format": "int32",
              "description": "The number of virtual machine instances to create."
            }
          }
        },
        "notes": {
          "type": "string",
          "description": "The notes of the virtual machine."
        },
        "ownerObjectId": {
          "type": "string",
          "description": "The object identifier of the owner of the virtual machine.",
          "default": "dynamicValue"
        },
        "ownerUserPrincipalName": {
          "type": "string",
          "description": "The user principal name of the virtual machine owner."
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "description": "The creation date of the virtual machine."
        },
        "customImageId": {
          "type": "string",
          "description": "The custom image identifier of the virtual machine."
        },
        "size": {
          "type": "string",
          "description": "The size of the virtual machine."
        },
        "userName": {
          "type": "string",
          "description": "The user name of the virtual machine."
        },
        "password": {
          "type": "string",
          "description": "The password of the virtual machine administrator."
        },
        "sshKey": {
          "type": "string",
          "description": "The SSH key of the virtual machine administrator."
        },
        "isAuthenticationWithSshKey": {
          "type": "boolean",
          "description": "Indicates whether this virtual machine uses an SSH key for authentication."
        },
        "labSubnetName": {
          "type": "string",
          "description": "The lab subnet name of the virtual machine."
        },
        "labVirtualNetworkId": {
          "type": "string",
          "description": "The lab virtual network identifier of the virtual machine."
        },
        "disallowPublicIpAddress": {
          "type": "boolean",
          "description": "Indicates whether the virtual machine is to be created without a public IP address.",
          "default": false
        },
        "artifacts": {
          "type": "array",
          "description": "The artifacts to be installed on the virtual machine.",
          "items": {
            "type": "object",
            "description": "Properties of an artifact.",
            "properties": {
              "artifactId": {
                "type": "string",
                "description": "The artifact's identifier."
              },
              "artifactTitle": {
                "type": "string",
                "description": "The artifact's title."
              },
              "parameters": {
                "type": "array",
                "description": "The parameters of the artifact.",
                "items": {
                  "type": "object",
                  "description": "Properties of an artifact parameter.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the artifact parameter."
                    },
                    "value": {
                      "type": "string",
                      "description": "The value of the artifact parameter."
                    }
                  }
                }
              },
              "status": {
                "type": "string",
                "description": "The status of the artifact."
              },
              "deploymentStatusMessage": {
                "type": "string",
                "description": "The status message from the deployment."
              },
              "vmExtensionStatusMessage": {
                "type": "string",
                "description": "The status message from the virtual machine extension."
              },
              "installTime": {
                "type": "string",
                "format": "date-time",
                "description": "The time that the artifact starts to install on the virtual machine."
              }
            }
          },
          "x-ms-identifiers": []
        },
        "galleryImageReference": {
          "description": "The Microsoft Azure Marketplace image reference of the virtual machine.",
          "type": "object",
          "properties": {
            "offer": {
              "type": "string",
              "description": "The offer of the gallery image."
            },
            "publisher": {
              "type": "string",
              "description": "The publisher of the gallery image."
            },
            "sku": {
              "type": "string",
              "description": "The SKU of the gallery image."
            },
            "osType": {
              "type": "string",
              "description": "The OS type of the gallery image."
            },
            "version": {
              "type": "string",
              "description": "The version of the gallery image."
            }
          }
        },
        "planId": {
          "type": "string",
          "description": "The id of the plan associated with the virtual machine image"
        },
        "networkInterface": {
          "description": "The network interface properties.",
          "type": "object",
          "properties": {
            "virtualNetworkId": {
              "type": "string",
              "description": "The resource ID of the virtual network."
            },
            "subnetId": {
              "type": "string",
              "description": "The resource ID of the sub net."
            },
            "publicIpAddressId": {
              "type": "string",
              "description": "The resource ID of the public IP address."
            },
            "publicIpAddress": {
              "type": "string",
              "description": "The public IP address."
            },
            "privateIpAddress": {
              "type": "string",
              "description": "The private IP address."
            },
            "dnsName": {
              "type": "string",
              "description": "The DNS name."
            },
            "rdpAuthority": {
              "type": "string",
              "description": "The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol)."
            },
            "sshAuthority": {
              "type": "string",
              "description": "The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH."
            },
            "sharedPublicIpAddressConfiguration": {
              "description": "The configuration for sharing a public IP address across multiple virtual machines.",
              "type": "object",
              "properties": {
                "inboundNatRules": {
                  "type": "array",
                  "description": "The incoming NAT rules",
                  "items": {
                    "type": "object",
                    "description": "A rule for NAT - exposing a VM's port (backendPort) on the public IP address using a load balancer.",
                    "properties": {
                      "transportProtocol": {
                        "description": "The transport protocol for the endpoint.",
                        "type": "string",
                        "enum": [
                          "Tcp",
                          "Udp"
                        ],
                        "x-ms-enum": {
                          "name": "TransportProtocol",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Tcp",
                              "value": "Tcp"
                            },
                            {
                              "name": "Udp",
                              "value": "Udp"
                            }
                          ]
                        }
                      },
                      "frontendPort": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The external endpoint port of the inbound connection. Possible values range between 1 and 65535, inclusive. If unspecified, a value will be allocated automatically."
                      },
                      "backendPort": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The port to which the external traffic will be redirected."
                      }
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            }
          }
        },
        "expirationDate": {
          "type": "string",
          "format": "date-time",
          "description": "The expiration date for VM."
        },
        "allowClaim": {
          "type": "boolean",
          "description": "Indicates whether another user can take ownership of the virtual machine",
          "default": false
        },
        "storageType": {
          "type": "string",
          "description": "Storage type to use for virtual machine (i.e. Standard, Premium).",
          "default": "labStorageType"
        },
        "environmentId": {
          "type": "string",
          "description": "The resource ID of the environment that contains this virtual machine, if any."
        },
        "dataDiskParameters": {
          "type": "array",
          "description": "New or existing data disks to attach to the virtual machine after creation",
          "items": {
            "type": "object",
            "description": "Request body for adding a new or existing data disk to a virtual machine.",
            "properties": {
              "attachNewDataDiskOptions": {
                "description": "Specifies options to attach a new disk to the virtual machine.",
                "type": "object",
                "properties": {
                  "diskSizeGiB": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Size of the disk to be attached in Gibibytes."
                  },
                  "diskName": {
                    "type": "string",
                    "description": "The name of the disk to be attached."
                  },
                  "diskType": {
                    "description": "The storage type for the disk (i.e. Standard, Premium).",
                    "type": "string",
                    "enum": [
                      "Standard",
                      "Premium",
                      "StandardSSD"
                    ],
                    "x-ms-enum": {
                      "name": "StorageType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Standard",
                          "value": "Standard"
                        },
                        {
                          "name": "Premium",
                          "value": "Premium"
                        },
                        {
                          "name": "StandardSSD",
                          "value": "StandardSSD"
                        }
                      ]
                    }
                  }
                }
              },
              "existingLabDiskId": {
                "type": "string",
                "description": "Specifies the existing lab disk id to attach to virtual machine."
              },
              "hostCaching": {
                "description": "Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).",
                "type": "string",
                "enum": [
                  "None",
                  "ReadOnly",
                  "ReadWrite"
                ],
                "x-ms-enum": {
                  "name": "HostCachingOptions",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "None",
                      "value": "None"
                    },
                    {
                      "name": "ReadOnly",
                      "value": "ReadOnly"
                    },
                    {
                      "name": "ReadWrite",
                      "value": "ReadWrite"
                    }
                  ]
                }
              }
            }
          },
          "x-ms-identifiers": []
        },
        "scheduleParameters": {
          "type": "array",
          "description": "Virtual Machine schedules to be created",
          "items": {
            "type": "object",
            "description": "Properties for creating a schedule.",
            "properties": {
              "properties": {
                "description": "The properties of the schedule.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "The status of the schedule (i.e. Enabled, Disabled)",
                    "default": "Disabled",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "name": "EnableStatus",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Enabled",
                          "value": "Enabled"
                        },
                        {
                          "name": "Disabled",
                          "value": "Disabled"
                        }
                      ]
                    }
                  },
                  "taskType": {
                    "type": "string",
                    "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                  },
                  "weeklyRecurrence": {
                    "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                    "type": "object",
                    "properties": {
                      "weekdays": {
                        "type": "array",
                        "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                        "items": {
                          "type": "string"
                        }
                      },
                      "time": {
                        "type": "string",
                        "description": "The time of the day the schedule will occur."
                      }
                    }
                  },
                  "dailyRecurrence": {
                    "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                    "type": "object",
                    "properties": {
                      "time": {
                        "type": "string",
                        "description": "The time of day the schedule will occur."
                      }
                    }
                  },
                  "hourlyRecurrence": {
                    "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                    "type": "object",
                    "properties": {
                      "minute": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Minutes of the hour the schedule will run."
                      }
                    }
                  },
                  "timeZoneId": {
                    "type": "string",
                    "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                  },
                  "notificationSettings": {
                    "description": "Notification settings.",
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                        "default": "Disabled",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "name": "EnableStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Enabled",
                              "value": "Enabled"
                            },
                            {
                              "name": "Disabled",
                              "value": "Disabled"
                            }
                          ]
                        }
                      },
                      "timeInMinutes": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Time in minutes before event at which notification will be sent."
                      },
                      "webhookUrl": {
                        "type": "string",
                        "description": "The webhook URL to which the notification will be sent."
                      },
                      "emailRecipient": {
                        "type": "string",
                        "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                      },
                      "notificationLocale": {
                        "type": "string",
                        "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                      }
                    }
                  },
                  "targetResourceId": {
                    "type": "string",
                    "description": "The resource ID to which the schedule belongs"
                  }
                }
              },
              "name": {
                "type": "string",
                "description": "The name of the virtual machine or environment"
              },
              "location": {
                "type": "string",
                "description": "The location of the new virtual machine or environment",
                "readOnly": true
              },
              "tags": {
                "type": "object",
                "description": "The tags of the resource.",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "LabVirtualMachineFragment": {
      "type": "object",
      "description": "A virtual machine.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "The tags of the resource.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "LabVirtualMachineList": {
      "type": "object",
      "description": "The response of a list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The LabVirtualMachine items on this page",
          "items": {
            "type": "object",
            "description": "A virtual machine.",
            "properties": {
              "id": {
                "type": "string",
                "description": "The identifier of the resource.",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource.",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource.",
                "readOnly": true
              },
              "location": {
                "type": "string",
                "description": "The location of the resource."
              },
              "tags": {
                "type": "object",
                "description": "The tags of the resource.",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "properties": {
                "description": "The properties of the resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "notes": {
                    "type": "string",
                    "description": "The notes of the virtual machine."
                  },
                  "ownerObjectId": {
                    "type": "string",
                    "description": "The object identifier of the owner of the virtual machine.",
                    "default": "dynamicValue"
                  },
                  "ownerUserPrincipalName": {
                    "type": "string",
                    "description": "The user principal name of the virtual machine owner."
                  },
                  "createdByUserId": {
                    "type": "string",
                    "description": "The object identifier of the creator of the virtual machine.",
                    "readOnly": true
                  },
                  "createdByUser": {
                    "type": "string",
                    "description": "The email address of creator of the virtual machine.",
                    "readOnly": true
                  },
                  "createdDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The creation date of the virtual machine."
                  },
                  "computeId": {
                    "type": "string",
                    "description": "The resource identifier (Microsoft.Compute) of the virtual machine.",
                    "readOnly": true
                  },
                  "customImageId": {
                    "type": "string",
                    "description": "The custom image identifier of the virtual machine."
                  },
                  "osType": {
                    "type": "string",
                    "description": "The OS type of the virtual machine.",
                    "readOnly": true
                  },
                  "size": {
                    "type": "string",
                    "description": "The size of the virtual machine."
                  },
                  "userName": {
                    "type": "string",
                    "description": "The user name of the virtual machine."
                  },
                  "password": {
                    "type": "string",
                    "description": "The password of the virtual machine administrator."
                  },
                  "sshKey": {
                    "type": "string",
                    "description": "The SSH key of the virtual machine administrator."
                  },
                  "isAuthenticationWithSshKey": {
                    "type": "boolean",
                    "description": "Indicates whether this virtual machine uses an SSH key for authentication."
                  },
                  "fqdn": {
                    "type": "string",
                    "description": "The fully-qualified domain name of the virtual machine.",
                    "readOnly": true
                  },
                  "labSubnetName": {
                    "type": "string",
                    "description": "The lab subnet name of the virtual machine."
                  },
                  "labVirtualNetworkId": {
                    "type": "string",
                    "description": "The lab virtual network identifier of the virtual machine."
                  },
                  "disallowPublicIpAddress": {
                    "type": "boolean",
                    "description": "Indicates whether the virtual machine is to be created without a public IP address.",
                    "default": false
                  },
                  "artifacts": {
                    "type": "array",
                    "description": "The artifacts to be installed on the virtual machine.",
                    "items": {
                      "type": "object",
                      "description": "Properties of an artifact.",
                      "properties": {
                        "artifactId": {
                          "type": "string",
                          "description": "The artifact's identifier."
                        },
                        "artifactTitle": {
                          "type": "string",
                          "description": "The artifact's title."
                        },
                        "parameters": {
                          "type": "array",
                          "description": "The parameters of the artifact.",
                          "items": {
                            "type": "object",
                            "description": "Properties of an artifact parameter.",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name of the artifact parameter."
                              },
                              "value": {
                                "type": "string",
                                "description": "The value of the artifact parameter."
                              }
                            }
                          }
                        },
                        "status": {
                          "type": "string",
                          "description": "The status of the artifact."
                        },
                        "deploymentStatusMessage": {
                          "type": "string",
                          "description": "The status message from the deployment."
                        },
                        "vmExtensionStatusMessage": {
                          "type": "string",
                          "description": "The status message from the virtual machine extension."
                        },
                        "installTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time that the artifact starts to install on the virtual machine."
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  },
                  "artifactDeploymentStatus": {
                    "description": "The artifact deployment status for the virtual machine.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "deploymentStatus": {
                        "type": "string",
                        "description": "The deployment status of the artifact."
                      },
                      "artifactsApplied": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The total count of the artifacts that were successfully applied."
                      },
                      "totalArtifacts": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The total count of the artifacts that were tentatively applied."
                      }
                    }
                  },
                  "galleryImageReference": {
                    "description": "The Microsoft Azure Marketplace image reference of the virtual machine.",
                    "type": "object",
                    "properties": {
                      "offer": {
                        "type": "string",
                        "description": "The offer of the gallery image."
                      },
                      "publisher": {
                        "type": "string",
                        "description": "The publisher of the gallery image."
                      },
                      "sku": {
                        "type": "string",
                        "description": "The SKU of the gallery image."
                      },
                      "osType": {
                        "type": "string",
                        "description": "The OS type of the gallery image."
                      },
                      "version": {
                        "type": "string",
                        "description": "The version of the gallery image."
                      }
                    }
                  },
                  "planId": {
                    "type": "string",
                    "description": "The id of the plan associated with the virtual machine image"
                  },
                  "computeVm": {
                    "description": "The compute virtual machine properties.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "statuses": {
                        "type": "array",
                        "description": "Gets the statuses of the virtual machine.",
                        "items": {
                          "type": "object",
                          "description": "Status information about a virtual machine.",
                          "properties": {
                            "code": {
                              "type": "string",
                              "description": "Gets the status Code."
                            },
                            "displayStatus": {
                              "type": "string",
                              "description": "Gets the short localizable label for the status."
                            },
                            "message": {
                              "type": "string",
                              "description": "Gets the message associated with the status."
                            }
                          }
                        },
                        "x-ms-identifiers": []
                      },
                      "osType": {
                        "type": "string",
                        "description": "Gets the OS type of the virtual machine."
                      },
                      "vmSize": {
                        "type": "string",
                        "description": "Gets the size of the virtual machine."
                      },
                      "networkInterfaceId": {
                        "type": "string",
                        "description": "Gets the network interface ID of the virtual machine."
                      },
                      "osDiskId": {
                        "type": "string",
                        "description": "Gets OS disk blob uri for the virtual machine."
                      },
                      "dataDiskIds": {
                        "type": "array",
                        "description": "Gets data disks blob uri for the virtual machine.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "dataDisks": {
                        "type": "array",
                        "description": "Gets all data disks attached to the virtual machine.",
                        "items": {
                          "type": "object",
                          "description": "A data disks attached to a virtual machine.",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Gets data disk name."
                            },
                            "diskUri": {
                              "type": "string",
                              "description": "When backed by a blob, the URI of underlying blob."
                            },
                            "managedDiskId": {
                              "type": "string",
                              "description": "When backed by managed disk, this is the ID of the compute disk resource."
                            },
                            "diskSizeGiB": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Gets data disk size in GiB."
                            }
                          }
                        }
                      }
                    }
                  },
                  "networkInterface": {
                    "description": "The network interface properties.",
                    "type": "object",
                    "properties": {
                      "virtualNetworkId": {
                        "type": "string",
                        "description": "The resource ID of the virtual network."
                      },
                      "subnetId": {
                        "type": "string",
                        "description": "The resource ID of the sub net."
                      },
                      "publicIpAddressId": {
                        "type": "string",
                        "description": "The resource ID of the public IP address."
                      },
                      "publicIpAddress": {
                        "type": "string",
                        "description": "The public IP address."
                      },
                      "privateIpAddress": {
                        "type": "string",
                        "description": "The private IP address."
                      },
                      "dnsName": {
                        "type": "string",
                        "description": "The DNS name."
                      },
                      "rdpAuthority": {
                        "type": "string",
                        "description": "The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol)."
                      },
                      "sshAuthority": {
                        "type": "string",
                        "description": "The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH."
                      },
                      "sharedPublicIpAddressConfiguration": {
                        "description": "The configuration for sharing a public IP address across multiple virtual machines.",
                        "type": "object",
                        "properties": {
                          "inboundNatRules": {
                            "type": "array",
                            "description": "The incoming NAT rules",
                            "items": {
                              "type": "object",
                              "description": "A rule for NAT - exposing a VM's port (backendPort) on the public IP address using a load balancer.",
                              "properties": {
                                "transportProtocol": {
                                  "description": "The transport protocol for the endpoint.",
                                  "type": "string",
                                  "enum": [
                                    "Tcp",
                                    "Udp"
                                  ],
                                  "x-ms-enum": {
                                    "name": "TransportProtocol",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Tcp",
                                        "value": "Tcp"
                                      },
                                      {
                                        "name": "Udp",
                                        "value": "Udp"
                                      }
                                    ]
                                  }
                                },
                                "frontendPort": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The external endpoint port of the inbound connection. Possible values range between 1 and 65535, inclusive. If unspecified, a value will be allocated automatically."
                                },
                                "backendPort": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The port to which the external traffic will be redirected."
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          }
                        }
                      }
                    }
                  },
                  "applicableSchedule": {
                    "type": "object",
                    "description": "Schedules applicable to a virtual machine. The schedules may have been defined on a VM or on lab level.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The identifier of the resource.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource.",
                        "readOnly": true
                      },
                      "location": {
                        "type": "string",
                        "description": "The location of the resource."
                      },
                      "tags": {
                        "type": "object",
                        "description": "The tags of the resource.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "properties": {
                        "description": "The properties of the resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "labVmsShutdown": {
                            "type": "object",
                            "description": "A schedule.",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The identifier of the resource.",
                                "readOnly": true
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the resource.",
                                "readOnly": true
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of the resource.",
                                "readOnly": true
                              },
                              "location": {
                                "type": "string",
                                "description": "The location of the resource."
                              },
                              "tags": {
                                "type": "object",
                                "description": "The tags of the resource.",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "properties": {
                                "description": "The properties of the resource.",
                                "x-ms-client-flatten": true,
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "type": "string",
                                    "description": "The status of the schedule (i.e. Enabled, Disabled)",
                                    "default": "Disabled",
                                    "enum": [
                                      "Enabled",
                                      "Disabled"
                                    ],
                                    "x-ms-enum": {
                                      "name": "EnableStatus",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Enabled",
                                          "value": "Enabled"
                                        },
                                        {
                                          "name": "Disabled",
                                          "value": "Disabled"
                                        }
                                      ]
                                    }
                                  },
                                  "taskType": {
                                    "type": "string",
                                    "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                                  },
                                  "weeklyRecurrence": {
                                    "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                                    "type": "object",
                                    "properties": {
                                      "weekdays": {
                                        "type": "array",
                                        "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "time": {
                                        "type": "string",
                                        "description": "The time of the day the schedule will occur."
                                      }
                                    }
                                  },
                                  "dailyRecurrence": {
                                    "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                                    "type": "object",
                                    "properties": {
                                      "time": {
                                        "type": "string",
                                        "description": "The time of day the schedule will occur."
                                      }
                                    }
                                  },
                                  "hourlyRecurrence": {
                                    "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                                    "type": "object",
                                    "properties": {
                                      "minute": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "Minutes of the hour the schedule will run."
                                      }
                                    }
                                  },
                                  "timeZoneId": {
                                    "type": "string",
                                    "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                                  },
                                  "notificationSettings": {
                                    "description": "Notification settings.",
                                    "type": "object",
                                    "properties": {
                                      "status": {
                                        "type": "string",
                                        "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                        "default": "Disabled",
                                        "enum": [
                                          "Enabled",
                                          "Disabled"
                                        ],
                                        "x-ms-enum": {
                                          "name": "EnableStatus",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "Enabled",
                                              "value": "Enabled"
                                            },
                                            {
                                              "name": "Disabled",
                                              "value": "Disabled"
                                            }
                                          ]
                                        }
                                      },
                                      "timeInMinutes": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "Time in minutes before event at which notification will be sent."
                                      },
                                      "webhookUrl": {
                                        "type": "string",
                                        "description": "The webhook URL to which the notification will be sent."
                                      },
                                      "emailRecipient": {
                                        "type": "string",
                                        "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                      },
                                      "notificationLocale": {
                                        "type": "string",
                                        "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                      }
                                    }
                                  },
                                  "createdDate": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The creation date of the schedule.",
                                    "readOnly": true
                                  },
                                  "targetResourceId": {
                                    "type": "string",
                                    "description": "The resource ID to which the schedule belongs"
                                  },
                                  "provisioningState": {
                                    "type": "string",
                                    "description": "The provisioning status of the resource.",
                                    "readOnly": true
                                  },
                                  "uniqueIdentifier": {
                                    "type": "string",
                                    "description": "The unique immutable identifier of a resource (Guid).",
                                    "readOnly": true
                                  }
                                }
                              }
                            },
                            "required": [
                              "properties"
                            ]
                          },
                          "labVmsStartup": {
                            "type": "object",
                            "description": "A schedule.",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The identifier of the resource.",
                                "readOnly": true
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the resource.",
                                "readOnly": true
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of the resource.",
                                "readOnly": true
                              },
                              "location": {
                                "type": "string",
                                "description": "The location of the resource."
                              },
                              "tags": {
                                "type": "object",
                                "description": "The tags of the resource.",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "properties": {
                                "description": "The properties of the resource.",
                                "x-ms-client-flatten": true,
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "type": "string",
                                    "description": "The status of the schedule (i.e. Enabled, Disabled)",
                                    "default": "Disabled",
                                    "enum": [
                                      "Enabled",
                                      "Disabled"
                                    ],
                                    "x-ms-enum": {
                                      "name": "EnableStatus",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Enabled",
                                          "value": "Enabled"
                                        },
                                        {
                                          "name": "Disabled",
                                          "value": "Disabled"
                                        }
                                      ]
                                    }
                                  },
                                  "taskType": {
                                    "type": "string",
                                    "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                                  },
                                  "weeklyRecurrence": {
                                    "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                                    "type": "object",
                                    "properties": {
                                      "weekdays": {
                                        "type": "array",
                                        "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "time": {
                                        "type": "string",
                                        "description": "The time of the day the schedule will occur."
                                      }
                                    }
                                  },
                                  "dailyRecurrence": {
                                    "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                                    "type": "object",
                                    "properties": {
                                      "time": {
                                        "type": "string",
                                        "description": "The time of day the schedule will occur."
                                      }
                                    }
                                  },
                                  "hourlyRecurrence": {
                                    "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                                    "type": "object",
                                    "properties": {
                                      "minute": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "Minutes of the hour the schedule will run."
                                      }
                                    }
                                  },
                                  "timeZoneId": {
                                    "type": "string",
                                    "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                                  },
                                  "notificationSettings": {
                                    "description": "Notification settings.",
                                    "type": "object",
                                    "properties": {
                                      "status": {
                                        "type": "string",
                                        "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                        "default": "Disabled",
                                        "enum": [
                                          "Enabled",
                                          "Disabled"
                                        ],
                                        "x-ms-enum": {
                                          "name": "EnableStatus",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "Enabled",
                                              "value": "Enabled"
                                            },
                                            {
                                              "name": "Disabled",
                                              "value": "Disabled"
                                            }
                                          ]
                                        }
                                      },
                                      "timeInMinutes": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "Time in minutes before event at which notification will be sent."
                                      },
                                      "webhookUrl": {
                                        "type": "string",
                                        "description": "The webhook URL to which the notification will be sent."
                                      },
                                      "emailRecipient": {
                                        "type": "string",
                                        "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                      },
                                      "notificationLocale": {
                                        "type": "string",
                                        "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                      }
                                    }
                                  },
                                  "createdDate": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The creation date of the schedule.",
                                    "readOnly": true
                                  },
                                  "targetResourceId": {
                                    "type": "string",
                                    "description": "The resource ID to which the schedule belongs"
                                  },
                                  "provisioningState": {
                                    "type": "string",
                                    "description": "The provisioning status of the resource.",
                                    "readOnly": true
                                  },
                                  "uniqueIdentifier": {
                                    "type": "string",
                                    "description": "The unique immutable identifier of a resource (Guid).",
                                    "readOnly": true
                                  }
                                }
                              }
                            },
                            "required": [
                              "properties"
                            ]
                          }
                        }
                      }
                    },
                    "required": [
                      "properties"
                    ],
                    "readOnly": true
                  },
                  "expirationDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The expiration date for VM."
                  },
                  "allowClaim": {
                    "type": "boolean",
                    "description": "Indicates whether another user can take ownership of the virtual machine",
                    "default": false
                  },
                  "storageType": {
                    "type": "string",
                    "description": "Storage type to use for virtual machine (i.e. Standard, Premium).",
                    "default": "labStorageType"
                  },
                  "virtualMachineCreationSource": {
                    "description": "Tells source of creation of lab virtual machine. Output property only.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "FromCustomImage",
                      "FromGalleryImage",
                      "FromSharedGalleryImage"
                    ],
                    "x-ms-enum": {
                      "name": "VirtualMachineCreationSource",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "FromCustomImage",
                          "value": "FromCustomImage"
                        },
                        {
                          "name": "FromGalleryImage",
                          "value": "FromGalleryImage"
                        },
                        {
                          "name": "FromSharedGalleryImage",
                          "value": "FromSharedGalleryImage"
                        }
                      ]
                    }
                  },
                  "environmentId": {
                    "type": "string",
                    "description": "The resource ID of the environment that contains this virtual machine, if any."
                  },
                  "dataDiskParameters": {
                    "type": "array",
                    "description": "New or existing data disks to attach to the virtual machine after creation",
                    "items": {
                      "type": "object",
                      "description": "Request body for adding a new or existing data disk to a virtual machine.",
                      "properties": {
                        "attachNewDataDiskOptions": {
                          "description": "Specifies options to attach a new disk to the virtual machine.",
                          "type": "object",
                          "properties": {
                            "diskSizeGiB": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Size of the disk to be attached in Gibibytes."
                            },
                            "diskName": {
                              "type": "string",
                              "description": "The name of the disk to be attached."
                            },
                            "diskType": {
                              "description": "The storage type for the disk (i.e. Standard, Premium).",
                              "type": "string",
                              "enum": [
                                "Standard",
                                "Premium",
                                "StandardSSD"
                              ],
                              "x-ms-enum": {
                                "name": "StorageType",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Standard",
                                    "value": "Standard"
                                  },
                                  {
                                    "name": "Premium",
                                    "value": "Premium"
                                  },
                                  {
                                    "name": "StandardSSD",
                                    "value": "StandardSSD"
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "existingLabDiskId": {
                          "type": "string",
                          "description": "Specifies the existing lab disk id to attach to virtual machine."
                        },
                        "hostCaching": {
                          "description": "Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).",
                          "type": "string",
                          "enum": [
                            "None",
                            "ReadOnly",
                            "ReadWrite"
                          ],
                          "x-ms-enum": {
                            "name": "HostCachingOptions",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "None",
                                "value": "None"
                              },
                              {
                                "name": "ReadOnly",
                                "value": "ReadOnly"
                              },
                              {
                                "name": "ReadWrite",
                                "value": "ReadWrite"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  },
                  "scheduleParameters": {
                    "type": "array",
                    "description": "Virtual Machine schedules to be created",
                    "items": {
                      "type": "object",
                      "description": "Properties for creating a schedule.",
                      "properties": {
                        "properties": {
                          "description": "The properties of the schedule.",
                          "x-ms-client-flatten": true,
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "description": "The status of the schedule (i.e. Enabled, Disabled)",
                              "default": "Disabled",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "EnableStatus",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            },
                            "taskType": {
                              "type": "string",
                              "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                            },
                            "weeklyRecurrence": {
                              "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                              "type": "object",
                              "properties": {
                                "weekdays": {
                                  "type": "array",
                                  "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "time": {
                                  "type": "string",
                                  "description": "The time of the day the schedule will occur."
                                }
                              }
                            },
                            "dailyRecurrence": {
                              "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                              "type": "object",
                              "properties": {
                                "time": {
                                  "type": "string",
                                  "description": "The time of day the schedule will occur."
                                }
                              }
                            },
                            "hourlyRecurrence": {
                              "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                              "type": "object",
                              "properties": {
                                "minute": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Minutes of the hour the schedule will run."
                                }
                              }
                            },
                            "timeZoneId": {
                              "type": "string",
                              "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                            },
                            "notificationSettings": {
                              "description": "Notification settings.",
                              "type": "object",
                              "properties": {
                                "status": {
                                  "type": "string",
                                  "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                  "default": "Disabled",
                                  "enum": [
                                    "Enabled",
                                    "Disabled"
                                  ],
                                  "x-ms-enum": {
                                    "name": "EnableStatus",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Enabled",
                                        "value": "Enabled"
                                      },
                                      {
                                        "name": "Disabled",
                                        "value": "Disabled"
                                      }
                                    ]
                                  }
                                },
                                "timeInMinutes": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Time in minutes before event at which notification will be sent."
                                },
                                "webhookUrl": {
                                  "type": "string",
                                  "description": "The webhook URL to which the notification will be sent."
                                },
                                "emailRecipient": {
                                  "type": "string",
                                  "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                },
                                "notificationLocale": {
                                  "type": "string",
                                  "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                }
                              }
                            },
                            "targetResourceId": {
                              "type": "string",
                              "description": "The resource ID to which the schedule belongs"
                            }
                          }
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the virtual machine or environment"
                        },
                        "location": {
                          "type": "string",
                          "description": "The location of the new virtual machine or environment",
                          "readOnly": true
                        },
                        "tags": {
                          "type": "object",
                          "description": "The tags of the resource.",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "lastKnownPowerState": {
                    "type": "string",
                    "description": "Last known compute power state captured in DTL",
                    "readOnly": true
                  },
                  "provisioningState": {
                    "type": "string",
                    "description": "The provisioning status of the resource.",
                    "readOnly": true
                  },
                  "uniqueIdentifier": {
                    "type": "string",
                    "description": "The unique immutable identifier of a resource (Guid).",
                    "readOnly": true
                  }
                }
              }
            },
            "required": [
              "properties"
            ]
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "LabVirtualMachineProperties": {
      "type": "object",
      "description": "Properties of a virtual machine.",
      "properties": {
        "notes": {
          "type": "string",
          "description": "The notes of the virtual machine."
        },
        "ownerObjectId": {
          "type": "string",
          "description": "The object identifier of the owner of the virtual machine.",
          "default": "dynamicValue"
        },
        "ownerUserPrincipalName": {
          "type": "string",
          "description": "The user principal name of the virtual machine owner."
        },
        "createdByUserId": {
          "type": "string",
          "description": "The object identifier of the creator of the virtual machine.",
          "readOnly": true
        },
        "createdByUser": {
          "type": "string",
          "description": "The email address of creator of the virtual machine.",
          "readOnly": true
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "description": "The creation date of the virtual machine."
        },
        "computeId": {
          "type": "string",
          "description": "The resource identifier (Microsoft.Compute) of the virtual machine.",
          "readOnly": true
        },
        "customImageId": {
          "type": "string",
          "description": "The custom image identifier of the virtual machine."
        },
        "osType": {
          "type": "string",
          "description": "The OS type of the virtual machine.",
          "readOnly": true
        },
        "size": {
          "type": "string",
          "description": "The size of the virtual machine."
        },
        "userName": {
          "type": "string",
          "description": "The user name of the virtual machine."
        },
        "password": {
          "type": "string",
          "description": "The password of the virtual machine administrator."
        },
        "sshKey": {
          "type": "string",
          "description": "The SSH key of the virtual machine administrator."
        },
        "isAuthenticationWithSshKey": {
          "type": "boolean",
          "description": "Indicates whether this virtual machine uses an SSH key for authentication."
        },
        "fqdn": {
          "type": "string",
          "description": "The fully-qualified domain name of the virtual machine.",
          "readOnly": true
        },
        "labSubnetName": {
          "type": "string",
          "description": "The lab subnet name of the virtual machine."
        },
        "labVirtualNetworkId": {
          "type": "string",
          "description": "The lab virtual network identifier of the virtual machine."
        },
        "disallowPublicIpAddress": {
          "type": "boolean",
          "description": "Indicates whether the virtual machine is to be created without a public IP address.",
          "default": false
        },
        "artifacts": {
          "type": "array",
          "description": "The artifacts to be installed on the virtual machine.",
          "items": {
            "type": "object",
            "description": "Properties of an artifact.",
            "properties": {
              "artifactId": {
                "type": "string",
                "description": "The artifact's identifier."
              },
              "artifactTitle": {
                "type": "string",
                "description": "The artifact's title."
              },
              "parameters": {
                "type": "array",
                "description": "The parameters of the artifact.",
                "items": {
                  "type": "object",
                  "description": "Properties of an artifact parameter.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the artifact parameter."
                    },
                    "value": {
                      "type": "string",
                      "description": "The value of the artifact parameter."
                    }
                  }
                }
              },
              "status": {
                "type": "string",
                "description": "The status of the artifact."
              },
              "deploymentStatusMessage": {
                "type": "string",
                "description": "The status message from the deployment."
              },
              "vmExtensionStatusMessage": {
                "type": "string",
                "description": "The status message from the virtual machine extension."
              },
              "installTime": {
                "type": "string",
                "format": "date-time",
                "description": "The time that the artifact starts to install on the virtual machine."
              }
            }
          },
          "x-ms-identifiers": []
        },
        "artifactDeploymentStatus": {
          "description": "The artifact deployment status for the virtual machine.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "deploymentStatus": {
              "type": "string",
              "description": "The deployment status of the artifact."
            },
            "artifactsApplied": {
              "type": "integer",
              "format": "int32",
              "description": "The total count of the artifacts that were successfully applied."
            },
            "totalArtifacts": {
              "type": "integer",
              "format": "int32",
              "description": "The total count of the artifacts that were tentatively applied."
            }
          }
        },
        "galleryImageReference": {
          "description": "The Microsoft Azure Marketplace image reference of the virtual machine.",
          "type": "object",
          "properties": {
            "offer": {
              "type": "string",
              "description": "The offer of the gallery image."
            },
            "publisher": {
              "type": "string",
              "description": "The publisher of the gallery image."
            },
            "sku": {
              "type": "string",
              "description": "The SKU of the gallery image."
            },
            "osType": {
              "type": "string",
              "description": "The OS type of the gallery image."
            },
            "version": {
              "type": "string",
              "description": "The version of the gallery image."
            }
          }
        },
        "planId": {
          "type": "string",
          "description": "The id of the plan associated with the virtual machine image"
        },
        "computeVm": {
          "description": "The compute virtual machine properties.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "statuses": {
              "type": "array",
              "description": "Gets the statuses of the virtual machine.",
              "items": {
                "type": "object",
                "description": "Status information about a virtual machine.",
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "Gets the status Code."
                  },
                  "displayStatus": {
                    "type": "string",
                    "description": "Gets the short localizable label for the status."
                  },
                  "message": {
                    "type": "string",
                    "description": "Gets the message associated with the status."
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "osType": {
              "type": "string",
              "description": "Gets the OS type of the virtual machine."
            },
            "vmSize": {
              "type": "string",
              "description": "Gets the size of the virtual machine."
            },
            "networkInterfaceId": {
              "type": "string",
              "description": "Gets the network interface ID of the virtual machine."
            },
            "osDiskId": {
              "type": "string",
              "description": "Gets OS disk blob uri for the virtual machine."
            },
            "dataDiskIds": {
              "type": "array",
              "description": "Gets data disks blob uri for the virtual machine.",
              "items": {
                "type": "string"
              }
            },
            "dataDisks": {
              "type": "array",
              "description": "Gets all data disks attached to the virtual machine.",
              "items": {
                "type": "object",
                "description": "A data disks attached to a virtual machine.",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Gets data disk name."
                  },
                  "diskUri": {
                    "type": "string",
                    "description": "When backed by a blob, the URI of underlying blob."
                  },
                  "managedDiskId": {
                    "type": "string",
                    "description": "When backed by managed disk, this is the ID of the compute disk resource."
                  },
                  "diskSizeGiB": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Gets data disk size in GiB."
                  }
                }
              }
            }
          }
        },
        "networkInterface": {
          "description": "The network interface properties.",
          "type": "object",
          "properties": {
            "virtualNetworkId": {
              "type": "string",
              "description": "The resource ID of the virtual network."
            },
            "subnetId": {
              "type": "string",
              "description": "The resource ID of the sub net."
            },
            "publicIpAddressId": {
              "type": "string",
              "description": "The resource ID of the public IP address."
            },
            "publicIpAddress": {
              "type": "string",
              "description": "The public IP address."
            },
            "privateIpAddress": {
              "type": "string",
              "description": "The private IP address."
            },
            "dnsName": {
              "type": "string",
              "description": "The DNS name."
            },
            "rdpAuthority": {
              "type": "string",
              "description": "The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol)."
            },
            "sshAuthority": {
              "type": "string",
              "description": "The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH."
            },
            "sharedPublicIpAddressConfiguration": {
              "description": "The configuration for sharing a public IP address across multiple virtual machines.",
              "type": "object",
              "properties": {
                "inboundNatRules": {
                  "type": "array",
                  "description": "The incoming NAT rules",
                  "items": {
                    "type": "object",
                    "description": "A rule for NAT - exposing a VM's port (backendPort) on the public IP address using a load balancer.",
                    "properties": {
                      "transportProtocol": {
                        "description": "The transport protocol for the endpoint.",
                        "type": "string",
                        "enum": [
                          "Tcp",
                          "Udp"
                        ],
                        "x-ms-enum": {
                          "name": "TransportProtocol",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Tcp",
                              "value": "Tcp"
                            },
                            {
                              "name": "Udp",
                              "value": "Udp"
                            }
                          ]
                        }
                      },
                      "frontendPort": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The external endpoint port of the inbound connection. Possible values range between 1 and 65535, inclusive. If unspecified, a value will be allocated automatically."
                      },
                      "backendPort": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The port to which the external traffic will be redirected."
                      }
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            }
          }
        },
        "applicableSchedule": {
          "type": "object",
          "description": "Schedules applicable to a virtual machine. The schedules may have been defined on a VM or on lab level.",
          "properties": {
            "id": {
              "type": "string",
              "description": "The identifier of the resource.",
              "readOnly": true
            },
            "name": {
              "type": "string",
              "description": "The name of the resource.",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "The type of the resource.",
              "readOnly": true
            },
            "location": {
              "type": "string",
              "description": "The location of the resource."
            },
            "tags": {
              "type": "object",
              "description": "The tags of the resource.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "properties": {
              "description": "The properties of the resource.",
              "x-ms-client-flatten": true,
              "type": "object",
              "properties": {
                "labVmsShutdown": {
                  "type": "object",
                  "description": "A schedule.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The identifier of the resource.",
                      "readOnly": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the resource.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of the resource.",
                      "readOnly": true
                    },
                    "location": {
                      "type": "string",
                      "description": "The location of the resource."
                    },
                    "tags": {
                      "type": "object",
                      "description": "The tags of the resource.",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "properties": {
                      "description": "The properties of the resource.",
                      "x-ms-client-flatten": true,
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "The status of the schedule (i.e. Enabled, Disabled)",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "taskType": {
                          "type": "string",
                          "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                        },
                        "weeklyRecurrence": {
                          "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                          "type": "object",
                          "properties": {
                            "weekdays": {
                              "type": "array",
                              "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                              "items": {
                                "type": "string"
                              }
                            },
                            "time": {
                              "type": "string",
                              "description": "The time of the day the schedule will occur."
                            }
                          }
                        },
                        "dailyRecurrence": {
                          "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                          "type": "object",
                          "properties": {
                            "time": {
                              "type": "string",
                              "description": "The time of day the schedule will occur."
                            }
                          }
                        },
                        "hourlyRecurrence": {
                          "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                          "type": "object",
                          "properties": {
                            "minute": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Minutes of the hour the schedule will run."
                            }
                          }
                        },
                        "timeZoneId": {
                          "type": "string",
                          "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                        },
                        "notificationSettings": {
                          "description": "Notification settings.",
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                              "default": "Disabled",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "EnableStatus",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            },
                            "timeInMinutes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Time in minutes before event at which notification will be sent."
                            },
                            "webhookUrl": {
                              "type": "string",
                              "description": "The webhook URL to which the notification will be sent."
                            },
                            "emailRecipient": {
                              "type": "string",
                              "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                            },
                            "notificationLocale": {
                              "type": "string",
                              "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                            }
                          }
                        },
                        "createdDate": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The creation date of the schedule.",
                          "readOnly": true
                        },
                        "targetResourceId": {
                          "type": "string",
                          "description": "The resource ID to which the schedule belongs"
                        },
                        "provisioningState": {
                          "type": "string",
                          "description": "The provisioning status of the resource.",
                          "readOnly": true
                        },
                        "uniqueIdentifier": {
                          "type": "string",
                          "description": "The unique immutable identifier of a resource (Guid).",
                          "readOnly": true
                        }
                      }
                    }
                  },
                  "required": [
                    "properties"
                  ]
                },
                "labVmsStartup": {
                  "type": "object",
                  "description": "A schedule.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The identifier of the resource.",
                      "readOnly": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the resource.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of the resource.",
                      "readOnly": true
                    },
                    "location": {
                      "type": "string",
                      "description": "The location of the resource."
                    },
                    "tags": {
                      "type": "object",
                      "description": "The tags of the resource.",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "properties": {
                      "description": "The properties of the resource.",
                      "x-ms-client-flatten": true,
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "The status of the schedule (i.e. Enabled, Disabled)",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "taskType": {
                          "type": "string",
                          "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                        },
                        "weeklyRecurrence": {
                          "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                          "type": "object",
                          "properties": {
                            "weekdays": {
                              "type": "array",
                              "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                              "items": {
                                "type": "string"
                              }
                            },
                            "time": {
                              "type": "string",
                              "description": "The time of the day the schedule will occur."
                            }
                          }
                        },
                        "dailyRecurrence": {
                          "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                          "type": "object",
                          "properties": {
                            "time": {
                              "type": "string",
                              "description": "The time of day the schedule will occur."
                            }
                          }
                        },
                        "hourlyRecurrence": {
                          "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                          "type": "object",
                          "properties": {
                            "minute": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Minutes of the hour the schedule will run."
                            }
                          }
                        },
                        "timeZoneId": {
                          "type": "string",
                          "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                        },
                        "notificationSettings": {
                          "description": "Notification settings.",
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                              "default": "Disabled",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "EnableStatus",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            },
                            "timeInMinutes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Time in minutes before event at which notification will be sent."
                            },
                            "webhookUrl": {
                              "type": "string",
                              "description": "The webhook URL to which the notification will be sent."
                            },
                            "emailRecipient": {
                              "type": "string",
                              "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                            },
                            "notificationLocale": {
                              "type": "string",
                              "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                            }
                          }
                        },
                        "createdDate": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The creation date of the schedule.",
                          "readOnly": true
                        },
                        "targetResourceId": {
                          "type": "string",
                          "description": "The resource ID to which the schedule belongs"
                        },
                        "provisioningState": {
                          "type": "string",
                          "description": "The provisioning status of the resource.",
                          "readOnly": true
                        },
                        "uniqueIdentifier": {
                          "type": "string",
                          "description": "The unique immutable identifier of a resource (Guid).",
                          "readOnly": true
                        }
                      }
                    }
                  },
                  "required": [
                    "properties"
                  ]
                }
              }
            }
          },
          "required": [
            "properties"
          ],
          "readOnly": true
        },
        "expirationDate": {
          "type": "string",
          "format": "date-time",
          "description": "The expiration date for VM."
        },
        "allowClaim": {
          "type": "boolean",
          "description": "Indicates whether another user can take ownership of the virtual machine",
          "default": false
        },
        "storageType": {
          "type": "string",
          "description": "Storage type to use for virtual machine (i.e. Standard, Premium).",
          "default": "labStorageType"
        },
        "virtualMachineCreationSource": {
          "description": "Tells source of creation of lab virtual machine. Output property only.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "FromCustomImage",
            "FromGalleryImage",
            "FromSharedGalleryImage"
          ],
          "x-ms-enum": {
            "name": "VirtualMachineCreationSource",
            "modelAsString": true,
            "values": [
              {
                "name": "FromCustomImage",
                "value": "FromCustomImage"
              },
              {
                "name": "FromGalleryImage",
                "value": "FromGalleryImage"
              },
              {
                "name": "FromSharedGalleryImage",
                "value": "FromSharedGalleryImage"
              }
            ]
          }
        },
        "environmentId": {
          "type": "string",
          "description": "The resource ID of the environment that contains this virtual machine, if any."
        },
        "dataDiskParameters": {
          "type": "array",
          "description": "New or existing data disks to attach to the virtual machine after creation",
          "items": {
            "type": "object",
            "description": "Request body for adding a new or existing data disk to a virtual machine.",
            "properties": {
              "attachNewDataDiskOptions": {
                "description": "Specifies options to attach a new disk to the virtual machine.",
                "type": "object",
                "properties": {
                  "diskSizeGiB": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Size of the disk to be attached in Gibibytes."
                  },
                  "diskName": {
                    "type": "string",
                    "description": "The name of the disk to be attached."
                  },
                  "diskType": {
                    "description": "The storage type for the disk (i.e. Standard, Premium).",
                    "type": "string",
                    "enum": [
                      "Standard",
                      "Premium",
                      "StandardSSD"
                    ],
                    "x-ms-enum": {
                      "name": "StorageType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Standard",
                          "value": "Standard"
                        },
                        {
                          "name": "Premium",
                          "value": "Premium"
                        },
                        {
                          "name": "StandardSSD",
                          "value": "StandardSSD"
                        }
                      ]
                    }
                  }
                }
              },
              "existingLabDiskId": {
                "type": "string",
                "description": "Specifies the existing lab disk id to attach to virtual machine."
              },
              "hostCaching": {
                "description": "Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).",
                "type": "string",
                "enum": [
                  "None",
                  "ReadOnly",
                  "ReadWrite"
                ],
                "x-ms-enum": {
                  "name": "HostCachingOptions",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "None",
                      "value": "None"
                    },
                    {
                      "name": "ReadOnly",
                      "value": "ReadOnly"
                    },
                    {
                      "name": "ReadWrite",
                      "value": "ReadWrite"
                    }
                  ]
                }
              }
            }
          },
          "x-ms-identifiers": []
        },
        "scheduleParameters": {
          "type": "array",
          "description": "Virtual Machine schedules to be created",
          "items": {
            "type": "object",
            "description": "Properties for creating a schedule.",
            "properties": {
              "properties": {
                "description": "The properties of the schedule.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "The status of the schedule (i.e. Enabled, Disabled)",
                    "default": "Disabled",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "name": "EnableStatus",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Enabled",
                          "value": "Enabled"
                        },
                        {
                          "name": "Disabled",
                          "value": "Disabled"
                        }
                      ]
                    }
                  },
                  "taskType": {
                    "type": "string",
                    "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                  },
                  "weeklyRecurrence": {
                    "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                    "type": "object",
                    "properties": {
                      "weekdays": {
                        "type": "array",
                        "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                        "items": {
                          "type": "string"
                        }
                      },
                      "time": {
                        "type": "string",
                        "description": "The time of the day the schedule will occur."
                      }
                    }
                  },
                  "dailyRecurrence": {
                    "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                    "type": "object",
                    "properties": {
                      "time": {
                        "type": "string",
                        "description": "The time of day the schedule will occur."
                      }
                    }
                  },
                  "hourlyRecurrence": {
                    "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                    "type": "object",
                    "properties": {
                      "minute": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Minutes of the hour the schedule will run."
                      }
                    }
                  },
                  "timeZoneId": {
                    "type": "string",
                    "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                  },
                  "notificationSettings": {
                    "description": "Notification settings.",
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                        "default": "Disabled",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "name": "EnableStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Enabled",
                              "value": "Enabled"
                            },
                            {
                              "name": "Disabled",
                              "value": "Disabled"
                            }
                          ]
                        }
                      },
                      "timeInMinutes": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Time in minutes before event at which notification will be sent."
                      },
                      "webhookUrl": {
                        "type": "string",
                        "description": "The webhook URL to which the notification will be sent."
                      },
                      "emailRecipient": {
                        "type": "string",
                        "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                      },
                      "notificationLocale": {
                        "type": "string",
                        "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                      }
                    }
                  },
                  "targetResourceId": {
                    "type": "string",
                    "description": "The resource ID to which the schedule belongs"
                  }
                }
              },
              "name": {
                "type": "string",
                "description": "The name of the virtual machine or environment"
              },
              "location": {
                "type": "string",
                "description": "The location of the new virtual machine or environment",
                "readOnly": true
              },
              "tags": {
                "type": "object",
                "description": "The tags of the resource.",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          }
        },
        "lastKnownPowerState": {
          "type": "string",
          "description": "Last known compute power state captured in DTL",
          "readOnly": true
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning status of the resource.",
          "readOnly": true
        },
        "uniqueIdentifier": {
          "type": "string",
          "description": "The unique immutable identifier of a resource (Guid).",
          "readOnly": true
        }
      }
    },
    "LinuxOsInfo": {
      "type": "object",
      "description": "Information about a Linux OS.",
      "properties": {
        "linuxOsState": {
          "description": "The state of the Linux OS (i.e. NonDeprovisioned, DeprovisionRequested, DeprovisionApplied).",
          "type": "string",
          "enum": [
            "NonDeprovisioned",
            "DeprovisionRequested",
            "DeprovisionApplied"
          ],
          "x-ms-enum": {
            "name": "LinuxOsState",
            "modelAsString": true,
            "values": [
              {
                "name": "NonDeprovisioned",
                "value": "NonDeprovisioned"
              },
              {
                "name": "DeprovisionRequested",
                "value": "DeprovisionRequested"
              },
              {
                "name": "DeprovisionApplied",
                "value": "DeprovisionApplied"
              }
            ]
          }
        }
      }
    },
    "LinuxOsState": {
      "type": "string",
      "description": "The state of the Linux OS (i.e. NonDeprovisioned, DeprovisionRequested, DeprovisionApplied).",
      "enum": [
        "NonDeprovisioned",
        "DeprovisionRequested",
        "DeprovisionApplied"
      ],
      "x-ms-enum": {
        "name": "LinuxOsState",
        "modelAsString": true,
        "values": [
          {
            "name": "NonDeprovisioned",
            "value": "NonDeprovisioned"
          },
          {
            "name": "DeprovisionRequested",
            "value": "DeprovisionRequested"
          },
          {
            "name": "DeprovisionApplied",
            "value": "DeprovisionApplied"
          }
        ]
      }
    },
    "ManagedIdentityType": {
      "type": "string",
      "description": "Managed identity.",
      "enum": [
        "None",
        "SystemAssigned",
        "UserAssigned",
        "SystemAssigned,UserAssigned"
      ],
      "x-ms-enum": {
        "name": "ManagedIdentityType",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None"
          },
          {
            "name": "SystemAssigned",
            "value": "SystemAssigned"
          },
          {
            "name": "UserAssigned",
            "value": "UserAssigned"
          },
          {
            "name": "SystemAssigned,UserAssigned",
            "value": "SystemAssigned,UserAssigned"
          }
        ]
      }
    },
    "NetworkInterfaceProperties": {
      "type": "object",
      "description": "Properties of a network interface.",
      "properties": {
        "virtualNetworkId": {
          "type": "string",
          "description": "The resource ID of the virtual network."
        },
        "subnetId": {
          "type": "string",
          "description": "The resource ID of the sub net."
        },
        "publicIpAddressId": {
          "type": "string",
          "description": "The resource ID of the public IP address."
        },
        "publicIpAddress": {
          "type": "string",
          "description": "The public IP address."
        },
        "privateIpAddress": {
          "type": "string",
          "description": "The private IP address."
        },
        "dnsName": {
          "type": "string",
          "description": "The DNS name."
        },
        "rdpAuthority": {
          "type": "string",
          "description": "The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol)."
        },
        "sshAuthority": {
          "type": "string",
          "description": "The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH."
        },
        "sharedPublicIpAddressConfiguration": {
          "description": "The configuration for sharing a public IP address across multiple virtual machines.",
          "type": "object",
          "properties": {
            "inboundNatRules": {
              "type": "array",
              "description": "The incoming NAT rules",
              "items": {
                "type": "object",
                "description": "A rule for NAT - exposing a VM's port (backendPort) on the public IP address using a load balancer.",
                "properties": {
                  "transportProtocol": {
                    "description": "The transport protocol for the endpoint.",
                    "type": "string",
                    "enum": [
                      "Tcp",
                      "Udp"
                    ],
                    "x-ms-enum": {
                      "name": "TransportProtocol",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Tcp",
                          "value": "Tcp"
                        },
                        {
                          "name": "Udp",
                          "value": "Udp"
                        }
                      ]
                    }
                  },
                  "frontendPort": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The external endpoint port of the inbound connection. Possible values range between 1 and 65535, inclusive. If unspecified, a value will be allocated automatically."
                  },
                  "backendPort": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The port to which the external traffic will be redirected."
                  }
                }
              },
              "x-ms-identifiers": []
            }
          }
        }
      }
    },
    "NotificationChannel": {
      "type": "object",
      "description": "A notification.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The identifier of the resource.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "The location of the resource."
        },
        "tags": {
          "type": "object",
          "description": "The tags of the resource.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "webHookUrl": {
              "type": "string",
              "description": "The webhook URL to send notifications to."
            },
            "emailRecipient": {
              "type": "string",
              "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
            },
            "notificationLocale": {
              "type": "string",
              "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
            },
            "description": {
              "type": "string",
              "description": "Description of notification."
            },
            "events": {
              "type": "array",
              "description": "The list of event for which this notification is enabled.",
              "items": {
                "type": "object",
                "description": "An event to be notified for.",
                "properties": {
                  "eventName": {
                    "description": "The event type for which this notification is enabled (i.e. AutoShutdown, Cost)",
                    "type": "string",
                    "enum": [
                      "AutoShutdown",
                      "Cost"
                    ],
                    "x-ms-enum": {
                      "name": "NotificationChannelEventType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "AutoShutdown",
                          "value": "AutoShutdown"
                        },
                        {
                          "name": "Cost",
                          "value": "Cost"
                        }
                      ]
                    }
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "createdDate": {
              "type": "string",
              "format": "date-time",
              "description": "The creation date of the notification channel.",
              "readOnly": true
            },
            "provisioningState": {
              "type": "string",
              "description": "The provisioning status of the resource.",
              "readOnly": true
            },
            "uniqueIdentifier": {
              "type": "string",
              "description": "The unique immutable identifier of a resource (Guid).",
              "readOnly": true
            }
          }
        }
      },
      "required": [
        "properties"
      ]
    },
    "NotificationChannelEventType": {
      "type": "string",
      "description": "The event type for which this notification is enabled (i.e. AutoShutdown, Cost)",
      "enum": [
        "AutoShutdown",
        "Cost"
      ],
      "x-ms-enum": {
        "name": "NotificationChannelEventType",
        "modelAsString": true,
        "values": [
          {
            "name": "AutoShutdown",
            "value": "AutoShutdown"
          },
          {
            "name": "Cost",
            "value": "Cost"
          }
        ]
      }
    },
    "NotificationChannelFragment": {
      "type": "object",
      "description": "A notification.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "The tags of the resource.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "NotificationChannelList": {
      "type": "object",
      "description": "The response of a list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The NotificationChannel items on this page",
          "items": {
            "type": "object",
            "description": "A notification.",
            "properties": {
              "id": {
                "type": "string",
                "description": "The identifier of the resource.",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource.",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource.",
                "readOnly": true
              },
              "location": {
                "type": "string",
                "description": "The location of the resource."
              },
              "tags": {
                "type": "object",
                "description": "The tags of the resource.",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "properties": {
                "description": "The properties of the resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "webHookUrl": {
                    "type": "string",
                    "description": "The webhook URL to send notifications to."
                  },
                  "emailRecipient": {
                    "type": "string",
                    "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                  },
                  "notificationLocale": {
                    "type": "string",
                    "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of notification."
                  },
                  "events": {
                    "type": "array",
                    "description": "The list of event for which this notification is enabled.",
                    "items": {
                      "type": "object",
                      "description": "An event to be notified for.",
                      "properties": {
                        "eventName": {
                          "description": "The event type for which this notification is enabled (i.e. AutoShutdown, Cost)",
                          "type": "string",
                          "enum": [
                            "AutoShutdown",
                            "Cost"
                          ],
                          "x-ms-enum": {
                            "name": "NotificationChannelEventType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "AutoShutdown",
                                "value": "AutoShutdown"
                              },
                              {
                                "name": "Cost",
                                "value": "Cost"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  },
                  "createdDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The creation date of the notification channel.",
                    "readOnly": true
                  },
                  "provisioningState": {
                    "type": "string",
                    "description": "The provisioning status of the resource.",
                    "readOnly": true
                  },
                  "uniqueIdentifier": {
                    "type": "string",
                    "description": "The unique immutable identifier of a resource (Guid).",
                    "readOnly": true
                  }
                }
              }
            },
            "required": [
              "properties"
            ]
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "NotificationChannelProperties": {
      "type": "object",
      "description": "Properties of a schedule.",
      "properties": {
        "webHookUrl": {
          "type": "string",
          "description": "The webhook URL to send notifications to."
        },
        "emailRecipient": {
          "type": "string",
          "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
        },
        "notificationLocale": {
          "type": "string",
          "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
        },
        "description": {
          "type": "string",
          "description": "Description of notification."
        },
        "events": {
          "type": "array",
          "description": "The list of event for which this notification is enabled.",
          "items": {
            "type": "object",
            "description": "An event to be notified for.",
            "properties": {
              "eventName": {
                "description": "The event type for which this notification is enabled (i.e. AutoShutdown, Cost)",
                "type": "string",
                "enum": [
                  "AutoShutdown",
                  "Cost"
                ],
                "x-ms-enum": {
                  "name": "NotificationChannelEventType",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "AutoShutdown",
                      "value": "AutoShutdown"
                    },
                    {
                      "name": "Cost",
                      "value": "Cost"
                    }
                  ]
                }
              }
            }
          },
          "x-ms-identifiers": []
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "description": "The creation date of the notification channel.",
          "readOnly": true
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning status of the resource.",
          "readOnly": true
        },
        "uniqueIdentifier": {
          "type": "string",
          "description": "The unique immutable identifier of a resource (Guid).",
          "readOnly": true
        }
      }
    },
    "NotificationSettings": {
      "type": "object",
      "description": "Notification settings for a schedule.",
      "properties": {
        "status": {
          "type": "string",
          "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
          "default": "Disabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "EnableStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled"
              }
            ]
          }
        },
        "timeInMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "Time in minutes before event at which notification will be sent."
        },
        "webhookUrl": {
          "type": "string",
          "description": "The webhook URL to which the notification will be sent."
        },
        "emailRecipient": {
          "type": "string",
          "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
        },
        "notificationLocale": {
          "type": "string",
          "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
        }
      }
    },
    "NotifyParameters": {
      "type": "object",
      "description": "Properties for generating a Notification.",
      "properties": {
        "eventName": {
          "description": "The type of event (i.e. AutoShutdown, Cost)",
          "type": "string",
          "enum": [
            "AutoShutdown",
            "Cost"
          ],
          "x-ms-enum": {
            "name": "NotificationChannelEventType",
            "modelAsString": true,
            "values": [
              {
                "name": "AutoShutdown",
                "value": "AutoShutdown"
              },
              {
                "name": "Cost",
                "value": "Cost"
              }
            ]
          }
        },
        "jsonPayload": {
          "type": "string",
          "description": "Properties for the notification in json format."
        }
      }
    },
    "OperationError": {
      "type": "object",
      "description": "Error details for the operation in case of a failure.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code of the operation error."
        },
        "message": {
          "type": "string",
          "description": "The error message of the operation error."
        }
      }
    },
    "OperationResult": {
      "type": "object",
      "description": "An Operation Result",
      "properties": {
        "status": {
          "type": "string",
          "description": "The operation status."
        },
        "statusCode": {
          "description": "The status code for the operation.",
          "type": "string",
          "enum": [
            "Continue",
            "SwitchingProtocols",
            "OK",
            "Created",
            "Accepted",
            "NonAuthoritativeInformation",
            "NoContent",
            "ResetContent",
            "PartialContent",
            "MultipleChoices",
            "Ambiguous",
            "MovedPermanently",
            "Moved",
            "Found",
            "Redirect",
            "SeeOther",
            "RedirectMethod",
            "NotModified",
            "UseProxy",
            "Unused",
            "TemporaryRedirect",
            "RedirectKeepVerb",
            "BadRequest",
            "Unauthorized",
            "PaymentRequired",
            "Forbidden",
            "NotFound",
            "MethodNotAllowed",
            "NotAcceptable",
            "ProxyAuthenticationRequired",
            "RequestTimeout",
            "Conflict",
            "Gone",
            "LengthRequired",
            "PreconditionFailed",
            "RequestEntityTooLarge",
            "RequestUriTooLong",
            "UnsupportedMediaType",
            "RequestedRangeNotSatisfiable",
            "ExpectationFailed",
            "UpgradeRequired",
            "InternalServerError",
            "NotImplemented",
            "BadGateway",
            "ServiceUnavailable",
            "GatewayTimeout",
            "HttpVersionNotSupported"
          ],
          "x-ms-enum": {
            "name": "HttpStatusCode",
            "modelAsString": true,
            "values": [
              {
                "name": "Continue",
                "value": "Continue"
              },
              {
                "name": "SwitchingProtocols",
                "value": "SwitchingProtocols"
              },
              {
                "name": "OK",
                "value": "OK"
              },
              {
                "name": "Created",
                "value": "Created"
              },
              {
                "name": "Accepted",
                "value": "Accepted"
              },
              {
                "name": "NonAuthoritativeInformation",
                "value": "NonAuthoritativeInformation"
              },
              {
                "name": "NoContent",
                "value": "NoContent"
              },
              {
                "name": "ResetContent",
                "value": "ResetContent"
              },
              {
                "name": "PartialContent",
                "value": "PartialContent"
              },
              {
                "name": "MultipleChoices",
                "value": "MultipleChoices"
              },
              {
                "name": "Ambiguous",
                "value": "Ambiguous"
              },
              {
                "name": "MovedPermanently",
                "value": "MovedPermanently"
              },
              {
                "name": "Moved",
                "value": "Moved"
              },
              {
                "name": "Found",
                "value": "Found"
              },
              {
                "name": "Redirect",
                "value": "Redirect"
              },
              {
                "name": "SeeOther",
                "value": "SeeOther"
              },
              {
                "name": "RedirectMethod",
                "value": "RedirectMethod"
              },
              {
                "name": "NotModified",
                "value": "NotModified"
              },
              {
                "name": "UseProxy",
                "value": "UseProxy"
              },
              {
                "name": "Unused",
                "value": "Unused"
              },
              {
                "name": "TemporaryRedirect",
                "value": "TemporaryRedirect"
              },
              {
                "name": "RedirectKeepVerb",
                "value": "RedirectKeepVerb"
              },
              {
                "name": "BadRequest",
                "value": "BadRequest"
              },
              {
                "name": "Unauthorized",
                "value": "Unauthorized"
              },
              {
                "name": "PaymentRequired",
                "value": "PaymentRequired"
              },
              {
                "name": "Forbidden",
                "value": "Forbidden"
              },
              {
                "name": "NotFound",
                "value": "NotFound"
              },
              {
                "name": "MethodNotAllowed",
                "value": "MethodNotAllowed"
              },
              {
                "name": "NotAcceptable",
                "value": "NotAcceptable"
              },
              {
                "name": "ProxyAuthenticationRequired",
                "value": "ProxyAuthenticationRequired"
              },
              {
                "name": "RequestTimeout",
                "value": "RequestTimeout"
              },
              {
                "name": "Conflict",
                "value": "Conflict"
              },
              {
                "name": "Gone",
                "value": "Gone"
              },
              {
                "name": "LengthRequired",
                "value": "LengthRequired"
              },
              {
                "name": "PreconditionFailed",
                "value": "PreconditionFailed"
              },
              {
                "name": "RequestEntityTooLarge",
                "value": "RequestEntityTooLarge"
              },
              {
                "name": "RequestUriTooLong",
                "value": "RequestUriTooLong"
              },
              {
                "name": "UnsupportedMediaType",
                "value": "UnsupportedMediaType"
              },
              {
                "name": "RequestedRangeNotSatisfiable",
                "value": "RequestedRangeNotSatisfiable"
              },
              {
                "name": "ExpectationFailed",
                "value": "ExpectationFailed"
              },
              {
                "name": "UpgradeRequired",
                "value": "UpgradeRequired"
              },
              {
                "name": "InternalServerError",
                "value": "InternalServerError"
              },
              {
                "name": "NotImplemented",
                "value": "NotImplemented"
              },
              {
                "name": "BadGateway",
                "value": "BadGateway"
              },
              {
                "name": "ServiceUnavailable",
                "value": "ServiceUnavailable"
              },
              {
                "name": "GatewayTimeout",
                "value": "GatewayTimeout"
              },
              {
                "name": "HttpVersionNotSupported",
                "value": "HttpVersionNotSupported"
              }
            ]
          }
        },
        "error": {
          "description": "Error details for the operation in case of a failure.",
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "The error code of the operation error."
            },
            "message": {
              "type": "string",
              "description": "The error message of the operation error."
            }
          }
        }
      }
    },
    "ParameterInfo": {
      "type": "object",
      "description": "Information about an artifact's parameter.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the artifact parameter."
        },
        "value": {
          "type": "string",
          "description": "The value of the artifact parameter."
        }
      }
    },
    "ParametersValueFileInfo": {
      "type": "object",
      "description": "A file containing a set of parameter values for an ARM template.",
      "properties": {
        "fileName": {
          "type": "string",
          "description": "File name."
        },
        "parametersValueInfo": {
          "type": "object",
          "description": "Contents of the file.",
          "additionalProperties": {}
        }
      }
    },
    "PercentageCostThresholdProperties": {
      "type": "object",
      "description": "Properties of a percentage cost threshold.",
      "properties": {
        "thresholdValue": {
          "type": "number",
          "format": "double",
          "description": "The cost threshold value."
        }
      }
    },
    "Policy": {
      "type": "object",
      "description": "A Policy.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The identifier of the resource.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "The location of the resource."
        },
        "tags": {
          "type": "object",
          "description": "The tags of the resource.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "description": {
              "type": "string",
              "description": "The description of the policy."
            },
            "status": {
              "description": "The status of the policy.",
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "PolicyStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled"
                  }
                ]
              }
            },
            "factName": {
              "description": "The fact name of the policy (e.g. LabVmCount, LabVmSize, MaxVmsAllowedPerLab, etc.",
              "type": "string",
              "enum": [
                "UserOwnedLabVmCount",
                "UserOwnedLabPremiumVmCount",
                "LabVmCount",
                "LabPremiumVmCount",
                "LabVmSize",
                "GalleryImage",
                "UserOwnedLabVmCountInSubnet",
                "LabTargetCost",
                "EnvironmentTemplate",
                "ScheduleEditPermission"
              ],
              "x-ms-enum": {
                "name": "PolicyFactName",
                "modelAsString": true,
                "values": [
                  {
                    "name": "UserOwnedLabVmCount",
                    "value": "UserOwnedLabVmCount"
                  },
                  {
                    "name": "UserOwnedLabPremiumVmCount",
                    "value": "UserOwnedLabPremiumVmCount"
                  },
                  {
                    "name": "LabVmCount",
                    "value": "LabVmCount"
                  },
                  {
                    "name": "LabPremiumVmCount",
                    "value": "LabPremiumVmCount"
                  },
                  {
                    "name": "LabVmSize",
                    "value": "LabVmSize"
                  },
                  {
                    "name": "GalleryImage",
                    "value": "GalleryImage"
                  },
                  {
                    "name": "UserOwnedLabVmCountInSubnet",
                    "value": "UserOwnedLabVmCountInSubnet"
                  },
                  {
                    "name": "LabTargetCost",
                    "value": "LabTargetCost"
                  },
                  {
                    "name": "EnvironmentTemplate",
                    "value": "EnvironmentTemplate"
                  },
                  {
                    "name": "ScheduleEditPermission",
                    "value": "ScheduleEditPermission"
                  }
                ]
              }
            },
            "factData": {
              "type": "string",
              "description": "The fact data of the policy."
            },
            "threshold": {
              "type": "string",
              "description": "The threshold of the policy (i.e. a number for MaxValuePolicy, and a JSON array of values for AllowedValuesPolicy)."
            },
            "evaluatorType": {
              "description": "The evaluator type of the policy (i.e. AllowedValuesPolicy, MaxValuePolicy).",
              "type": "string",
              "enum": [
                "AllowedValuesPolicy",
                "MaxValuePolicy"
              ],
              "x-ms-enum": {
                "name": "PolicyEvaluatorType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "AllowedValuesPolicy",
                    "value": "AllowedValuesPolicy"
                  },
                  {
                    "name": "MaxValuePolicy",
                    "value": "MaxValuePolicy"
                  }
                ]
              }
            },
            "createdDate": {
              "type": "string",
              "format": "date-time",
              "description": "The creation date of the policy.",
              "readOnly": true
            },
            "provisioningState": {
              "type": "string",
              "description": "The provisioning status of the resource.",
              "readOnly": true
            },
            "uniqueIdentifier": {
              "type": "string",
              "description": "The unique immutable identifier of a resource (Guid).",
              "readOnly": true
            }
          }
        }
      },
      "required": [
        "properties"
      ]
    },
    "PolicyEvaluatorType": {
      "type": "string",
      "description": "The evaluator type of the policy (i.e. AllowedValuesPolicy, MaxValuePolicy).",
      "enum": [
        "AllowedValuesPolicy",
        "MaxValuePolicy"
      ],
      "x-ms-enum": {
        "name": "PolicyEvaluatorType",
        "modelAsString": true,
        "values": [
          {
            "name": "AllowedValuesPolicy",
            "value": "AllowedValuesPolicy"
          },
          {
            "name": "MaxValuePolicy",
            "value": "MaxValuePolicy"
          }
        ]
      }
    },
    "PolicyFactName": {
      "type": "string",
      "description": "The fact name of the policy (e.g. LabVmCount, LabVmSize, MaxVmsAllowedPerLab, etc.",
      "enum": [
        "UserOwnedLabVmCount",
        "UserOwnedLabPremiumVmCount",
        "LabVmCount",
        "LabPremiumVmCount",
        "LabVmSize",
        "GalleryImage",
        "UserOwnedLabVmCountInSubnet",
        "LabTargetCost",
        "EnvironmentTemplate",
        "ScheduleEditPermission"
      ],
      "x-ms-enum": {
        "name": "PolicyFactName",
        "modelAsString": true,
        "values": [
          {
            "name": "UserOwnedLabVmCount",
            "value": "UserOwnedLabVmCount"
          },
          {
            "name": "UserOwnedLabPremiumVmCount",
            "value": "UserOwnedLabPremiumVmCount"
          },
          {
            "name": "LabVmCount",
            "value": "LabVmCount"
          },
          {
            "name": "LabPremiumVmCount",
            "value": "LabPremiumVmCount"
          },
          {
            "name": "LabVmSize",
            "value": "LabVmSize"
          },
          {
            "name": "GalleryImage",
            "value": "GalleryImage"
          },
          {
            "name": "UserOwnedLabVmCountInSubnet",
            "value": "UserOwnedLabVmCountInSubnet"
          },
          {
            "name": "LabTargetCost",
            "value": "LabTargetCost"
          },
          {
            "name": "EnvironmentTemplate",
            "value": "EnvironmentTemplate"
          },
          {
            "name": "ScheduleEditPermission",
            "value": "ScheduleEditPermission"
          }
        ]
      }
    },
    "PolicyFragment": {
      "type": "object",
      "description": "A Policy.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "The tags of the resource.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "PolicyList": {
      "type": "object",
      "description": "The response of a list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Policy items on this page",
          "items": {
            "type": "object",
            "description": "A Policy.",
            "properties": {
              "id": {
                "type": "string",
                "description": "The identifier of the resource.",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource.",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource.",
                "readOnly": true
              },
              "location": {
                "type": "string",
                "description": "The location of the resource."
              },
              "tags": {
                "type": "object",
                "description": "The tags of the resource.",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "properties": {
                "description": "The properties of the resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "The description of the policy."
                  },
                  "status": {
                    "description": "The status of the policy.",
                    "type": "string",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "name": "PolicyStatus",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Enabled",
                          "value": "Enabled"
                        },
                        {
                          "name": "Disabled",
                          "value": "Disabled"
                        }
                      ]
                    }
                  },
                  "factName": {
                    "description": "The fact name of the policy (e.g. LabVmCount, LabVmSize, MaxVmsAllowedPerLab, etc.",
                    "type": "string",
                    "enum": [
                      "UserOwnedLabVmCount",
                      "UserOwnedLabPremiumVmCount",
                      "LabVmCount",
                      "LabPremiumVmCount",
                      "LabVmSize",
                      "GalleryImage",
                      "UserOwnedLabVmCountInSubnet",
                      "LabTargetCost",
                      "EnvironmentTemplate",
                      "ScheduleEditPermission"
                    ],
                    "x-ms-enum": {
                      "name": "PolicyFactName",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "UserOwnedLabVmCount",
                          "value": "UserOwnedLabVmCount"
                        },
                        {
                          "name": "UserOwnedLabPremiumVmCount",
                          "value": "UserOwnedLabPremiumVmCount"
                        },
                        {
                          "name": "LabVmCount",
                          "value": "LabVmCount"
                        },
                        {
                          "name": "LabPremiumVmCount",
                          "value": "LabPremiumVmCount"
                        },
                        {
                          "name": "LabVmSize",
                          "value": "LabVmSize"
                        },
                        {
                          "name": "GalleryImage",
                          "value": "GalleryImage"
                        },
                        {
                          "name": "UserOwnedLabVmCountInSubnet",
                          "value": "UserOwnedLabVmCountInSubnet"
                        },
                        {
                          "name": "LabTargetCost",
                          "value": "LabTargetCost"
                        },
                        {
                          "name": "EnvironmentTemplate",
                          "value": "EnvironmentTemplate"
                        },
                        {
                          "name": "ScheduleEditPermission",
                          "value": "ScheduleEditPermission"
                        }
                      ]
                    }
                  },
                  "factData": {
                    "type": "string",
                    "description": "The fact data of the policy."
                  },
                  "threshold": {
                    "type": "string",
                    "description": "The threshold of the policy (i.e. a number for MaxValuePolicy, and a JSON array of values for AllowedValuesPolicy)."
                  },
                  "evaluatorType": {
                    "description": "The evaluator type of the policy (i.e. AllowedValuesPolicy, MaxValuePolicy).",
                    "type": "string",
                    "enum": [
                      "AllowedValuesPolicy",
                      "MaxValuePolicy"
                    ],
                    "x-ms-enum": {
                      "name": "PolicyEvaluatorType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "AllowedValuesPolicy",
                          "value": "AllowedValuesPolicy"
                        },
                        {
                          "name": "MaxValuePolicy",
                          "value": "MaxValuePolicy"
                        }
                      ]
                    }
                  },
                  "createdDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The creation date of the policy.",
                    "readOnly": true
                  },
                  "provisioningState": {
                    "type": "string",
                    "description": "The provisioning status of the resource.",
                    "readOnly": true
                  },
                  "uniqueIdentifier": {
                    "type": "string",
                    "description": "The unique immutable identifier of a resource (Guid).",
                    "readOnly": true
                  }
                }
              }
            },
            "required": [
              "properties"
            ]
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PolicyProperties": {
      "type": "object",
      "description": "Properties of a Policy.",
      "properties": {
        "description": {
          "type": "string",
          "description": "The description of the policy."
        },
        "status": {
          "description": "The status of the policy.",
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "PolicyStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled"
              }
            ]
          }
        },
        "factName": {
          "description": "The fact name of the policy (e.g. LabVmCount, LabVmSize, MaxVmsAllowedPerLab, etc.",
          "type": "string",
          "enum": [
            "UserOwnedLabVmCount",
            "UserOwnedLabPremiumVmCount",
            "LabVmCount",
            "LabPremiumVmCount",
            "LabVmSize",
            "GalleryImage",
            "UserOwnedLabVmCountInSubnet",
            "LabTargetCost",
            "EnvironmentTemplate",
            "ScheduleEditPermission"
          ],
          "x-ms-enum": {
            "name": "PolicyFactName",
            "modelAsString": true,
            "values": [
              {
                "name": "UserOwnedLabVmCount",
                "value": "UserOwnedLabVmCount"
              },
              {
                "name": "UserOwnedLabPremiumVmCount",
                "value": "UserOwnedLabPremiumVmCount"
              },
              {
                "name": "LabVmCount",
                "value": "LabVmCount"
              },
              {
                "name": "LabPremiumVmCount",
                "value": "LabPremiumVmCount"
              },
              {
                "name": "LabVmSize",
                "value": "LabVmSize"
              },
              {
                "name": "GalleryImage",
                "value": "GalleryImage"
              },
              {
                "name": "UserOwnedLabVmCountInSubnet",
                "value": "UserOwnedLabVmCountInSubnet"
              },
              {
                "name": "LabTargetCost",
                "value": "LabTargetCost"
              },
              {
                "name": "EnvironmentTemplate",
                "value": "EnvironmentTemplate"
              },
              {
                "name": "ScheduleEditPermission",
                "value": "ScheduleEditPermission"
              }
            ]
          }
        },
        "factData": {
          "type": "string",
          "description": "The fact data of the policy."
        },
        "threshold": {
          "type": "string",
          "description": "The threshold of the policy (i.e. a number for MaxValuePolicy, and a JSON array of values for AllowedValuesPolicy)."
        },
        "evaluatorType": {
          "description": "The evaluator type of the policy (i.e. AllowedValuesPolicy, MaxValuePolicy).",
          "type": "string",
          "enum": [
            "AllowedValuesPolicy",
            "MaxValuePolicy"
          ],
          "x-ms-enum": {
            "name": "PolicyEvaluatorType",
            "modelAsString": true,
            "values": [
              {
                "name": "AllowedValuesPolicy",
                "value": "AllowedValuesPolicy"
              },
              {
                "name": "MaxValuePolicy",
                "value": "MaxValuePolicy"
              }
            ]
          }
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "description": "The creation date of the policy.",
          "readOnly": true
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning status of the resource.",
          "readOnly": true
        },
        "uniqueIdentifier": {
          "type": "string",
          "description": "The unique immutable identifier of a resource (Guid).",
          "readOnly": true
        }
      }
    },
    "PolicySetResult": {
      "type": "object",
      "description": "Result of a policy set evaluation.",
      "properties": {
        "hasError": {
          "type": "boolean",
          "description": "A value indicating whether this policy set evaluation has discovered violations."
        },
        "policyViolations": {
          "type": "array",
          "description": "The list of policy violations.",
          "items": {
            "type": "object",
            "description": "Policy violation.",
            "properties": {
              "code": {
                "type": "string",
                "description": "The code of the policy violation."
              },
              "message": {
                "type": "string",
                "description": "The message of the policy violation."
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "PolicyStatus": {
      "type": "string",
      "description": "The status of the policy.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "PolicyStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          }
        ]
      }
    },
    "PolicyViolation": {
      "type": "object",
      "description": "Policy violation.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The code of the policy violation."
        },
        "message": {
          "type": "string",
          "description": "The message of the policy violation."
        }
      }
    },
    "Port": {
      "type": "object",
      "description": "Properties of a network port.",
      "properties": {
        "transportProtocol": {
          "description": "Protocol type of the port.",
          "type": "string",
          "enum": [
            "Tcp",
            "Udp"
          ],
          "x-ms-enum": {
            "name": "TransportProtocol",
            "modelAsString": true,
            "values": [
              {
                "name": "Tcp",
                "value": "Tcp"
              },
              {
                "name": "Udp",
                "value": "Udp"
              }
            ]
          }
        },
        "backendPort": {
          "type": "integer",
          "format": "int32",
          "description": "Backend port of the target virtual machine."
        }
      }
    },
    "PremiumDataDisk": {
      "type": "string",
      "description": "The setting to enable usage of premium data disks.\nWhen its value is 'Enabled', creation of standard or premium data disks is allowed.\nWhen its value is 'Disabled', only creation of standard data disks is allowed.",
      "enum": [
        "Disabled",
        "Enabled"
      ],
      "x-ms-enum": {
        "name": "PremiumDataDisk",
        "modelAsString": true,
        "values": [
          {
            "name": "Disabled",
            "value": "Disabled"
          },
          {
            "name": "Enabled",
            "value": "Enabled"
          }
        ]
      }
    },
    "RdpConnection": {
      "type": "object",
      "description": "Represents a .rdp file",
      "properties": {
        "contents": {
          "type": "string",
          "description": "The contents of the .rdp file"
        }
      }
    },
    "ReportingCycleType": {
      "type": "string",
      "description": "Reporting cycle type.",
      "enum": [
        "CalendarMonth",
        "Custom"
      ],
      "x-ms-enum": {
        "name": "ReportingCycleType",
        "modelAsString": true,
        "values": [
          {
            "name": "CalendarMonth",
            "value": "CalendarMonth"
          },
          {
            "name": "Custom",
            "value": "Custom"
          }
        ]
      }
    },
    "ResizeLabVirtualMachineProperties": {
      "type": "object",
      "description": "Request body for resizing a virtual machine.",
      "properties": {
        "size": {
          "type": "string",
          "description": "Specifies the size of the virtual machine."
        }
      }
    },
    "Resource": {
      "type": "object",
      "description": "An Azure resource.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The identifier of the resource.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "The location of the resource."
        },
        "tags": {
          "type": "object",
          "description": "The tags of the resource.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "x-ms-azure-resource": true
    },
    "RetargetScheduleProperties": {
      "type": "object",
      "description": "Properties for retargeting a virtual machine schedule.",
      "properties": {
        "currentResourceId": {
          "type": "string",
          "description": "The resource Id of the virtual machine on which the schedule operates"
        },
        "targetResourceId": {
          "type": "string",
          "description": "The resource Id of the virtual machine that the schedule should be retargeted to"
        }
      }
    },
    "Schedule": {
      "type": "object",
      "description": "A schedule.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The identifier of the resource.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "The location of the resource."
        },
        "tags": {
          "type": "object",
          "description": "The tags of the resource.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "The status of the schedule (i.e. Enabled, Disabled)",
              "default": "Disabled",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "EnableStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled"
                  }
                ]
              }
            },
            "taskType": {
              "type": "string",
              "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
            },
            "weeklyRecurrence": {
              "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
              "type": "object",
              "properties": {
                "weekdays": {
                  "type": "array",
                  "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                  "items": {
                    "type": "string"
                  }
                },
                "time": {
                  "type": "string",
                  "description": "The time of the day the schedule will occur."
                }
              }
            },
            "dailyRecurrence": {
              "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
              "type": "object",
              "properties": {
                "time": {
                  "type": "string",
                  "description": "The time of day the schedule will occur."
                }
              }
            },
            "hourlyRecurrence": {
              "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
              "type": "object",
              "properties": {
                "minute": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Minutes of the hour the schedule will run."
                }
              }
            },
            "timeZoneId": {
              "type": "string",
              "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
            },
            "notificationSettings": {
              "description": "Notification settings.",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                  "default": "Disabled",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "EnableStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled"
                      }
                    ]
                  }
                },
                "timeInMinutes": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Time in minutes before event at which notification will be sent."
                },
                "webhookUrl": {
                  "type": "string",
                  "description": "The webhook URL to which the notification will be sent."
                },
                "emailRecipient": {
                  "type": "string",
                  "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                },
                "notificationLocale": {
                  "type": "string",
                  "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                }
              }
            },
            "createdDate": {
              "type": "string",
              "format": "date-time",
              "description": "The creation date of the schedule.",
              "readOnly": true
            },
            "targetResourceId": {
              "type": "string",
              "description": "The resource ID to which the schedule belongs"
            },
            "provisioningState": {
              "type": "string",
              "description": "The provisioning status of the resource.",
              "readOnly": true
            },
            "uniqueIdentifier": {
              "type": "string",
              "description": "The unique immutable identifier of a resource (Guid).",
              "readOnly": true
            }
          }
        }
      },
      "required": [
        "properties"
      ]
    },
    "ScheduleCreationParameter": {
      "type": "object",
      "description": "Properties for creating a schedule.",
      "properties": {
        "properties": {
          "description": "The properties of the schedule.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "The status of the schedule (i.e. Enabled, Disabled)",
              "default": "Disabled",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "EnableStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled"
                  }
                ]
              }
            },
            "taskType": {
              "type": "string",
              "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
            },
            "weeklyRecurrence": {
              "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
              "type": "object",
              "properties": {
                "weekdays": {
                  "type": "array",
                  "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                  "items": {
                    "type": "string"
                  }
                },
                "time": {
                  "type": "string",
                  "description": "The time of the day the schedule will occur."
                }
              }
            },
            "dailyRecurrence": {
              "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
              "type": "object",
              "properties": {
                "time": {
                  "type": "string",
                  "description": "The time of day the schedule will occur."
                }
              }
            },
            "hourlyRecurrence": {
              "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
              "type": "object",
              "properties": {
                "minute": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Minutes of the hour the schedule will run."
                }
              }
            },
            "timeZoneId": {
              "type": "string",
              "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
            },
            "notificationSettings": {
              "description": "Notification settings.",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                  "default": "Disabled",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "EnableStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled"
                      }
                    ]
                  }
                },
                "timeInMinutes": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Time in minutes before event at which notification will be sent."
                },
                "webhookUrl": {
                  "type": "string",
                  "description": "The webhook URL to which the notification will be sent."
                },
                "emailRecipient": {
                  "type": "string",
                  "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                },
                "notificationLocale": {
                  "type": "string",
                  "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                }
              }
            },
            "targetResourceId": {
              "type": "string",
              "description": "The resource ID to which the schedule belongs"
            }
          }
        },
        "name": {
          "type": "string",
          "description": "The name of the virtual machine or environment"
        },
        "location": {
          "type": "string",
          "description": "The location of the new virtual machine or environment",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "description": "The tags of the resource.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ScheduleCreationParameterProperties": {
      "type": "object",
      "description": "Properties for schedule creation.",
      "properties": {
        "status": {
          "type": "string",
          "description": "The status of the schedule (i.e. Enabled, Disabled)",
          "default": "Disabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "EnableStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled"
              }
            ]
          }
        },
        "taskType": {
          "type": "string",
          "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
        },
        "weeklyRecurrence": {
          "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
          "type": "object",
          "properties": {
            "weekdays": {
              "type": "array",
              "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
              "items": {
                "type": "string"
              }
            },
            "time": {
              "type": "string",
              "description": "The time of the day the schedule will occur."
            }
          }
        },
        "dailyRecurrence": {
          "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "The time of day the schedule will occur."
            }
          }
        },
        "hourlyRecurrence": {
          "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
          "type": "object",
          "properties": {
            "minute": {
              "type": "integer",
              "format": "int32",
              "description": "Minutes of the hour the schedule will run."
            }
          }
        },
        "timeZoneId": {
          "type": "string",
          "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
        },
        "notificationSettings": {
          "description": "Notification settings.",
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
              "default": "Disabled",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "EnableStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled"
                  }
                ]
              }
            },
            "timeInMinutes": {
              "type": "integer",
              "format": "int32",
              "description": "Time in minutes before event at which notification will be sent."
            },
            "webhookUrl": {
              "type": "string",
              "description": "The webhook URL to which the notification will be sent."
            },
            "emailRecipient": {
              "type": "string",
              "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
            },
            "notificationLocale": {
              "type": "string",
              "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
            }
          }
        },
        "targetResourceId": {
          "type": "string",
          "description": "The resource ID to which the schedule belongs"
        }
      }
    },
    "ScheduleFragment": {
      "type": "object",
      "description": "A schedule.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "The tags of the resource.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ScheduleList": {
      "type": "object",
      "description": "The response of a list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Schedule items on this page",
          "items": {
            "type": "object",
            "description": "A schedule.",
            "properties": {
              "id": {
                "type": "string",
                "description": "The identifier of the resource.",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource.",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource.",
                "readOnly": true
              },
              "location": {
                "type": "string",
                "description": "The location of the resource."
              },
              "tags": {
                "type": "object",
                "description": "The tags of the resource.",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "properties": {
                "description": "The properties of the resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "The status of the schedule (i.e. Enabled, Disabled)",
                    "default": "Disabled",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "name": "EnableStatus",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Enabled",
                          "value": "Enabled"
                        },
                        {
                          "name": "Disabled",
                          "value": "Disabled"
                        }
                      ]
                    }
                  },
                  "taskType": {
                    "type": "string",
                    "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                  },
                  "weeklyRecurrence": {
                    "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                    "type": "object",
                    "properties": {
                      "weekdays": {
                        "type": "array",
                        "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                        "items": {
                          "type": "string"
                        }
                      },
                      "time": {
                        "type": "string",
                        "description": "The time of the day the schedule will occur."
                      }
                    }
                  },
                  "dailyRecurrence": {
                    "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                    "type": "object",
                    "properties": {
                      "time": {
                        "type": "string",
                        "description": "The time of day the schedule will occur."
                      }
                    }
                  },
                  "hourlyRecurrence": {
                    "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                    "type": "object",
                    "properties": {
                      "minute": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Minutes of the hour the schedule will run."
                      }
                    }
                  },
                  "timeZoneId": {
                    "type": "string",
                    "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                  },
                  "notificationSettings": {
                    "description": "Notification settings.",
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                        "default": "Disabled",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "name": "EnableStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Enabled",
                              "value": "Enabled"
                            },
                            {
                              "name": "Disabled",
                              "value": "Disabled"
                            }
                          ]
                        }
                      },
                      "timeInMinutes": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Time in minutes before event at which notification will be sent."
                      },
                      "webhookUrl": {
                        "type": "string",
                        "description": "The webhook URL to which the notification will be sent."
                      },
                      "emailRecipient": {
                        "type": "string",
                        "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                      },
                      "notificationLocale": {
                        "type": "string",
                        "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                      }
                    }
                  },
                  "createdDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The creation date of the schedule.",
                    "readOnly": true
                  },
                  "targetResourceId": {
                    "type": "string",
                    "description": "The resource ID to which the schedule belongs"
                  },
                  "provisioningState": {
                    "type": "string",
                    "description": "The provisioning status of the resource.",
                    "readOnly": true
                  },
                  "uniqueIdentifier": {
                    "type": "string",
                    "description": "The unique immutable identifier of a resource (Guid).",
                    "readOnly": true
                  }
                }
              }
            },
            "required": [
              "properties"
            ]
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ScheduleProperties": {
      "type": "object",
      "description": "Properties of a schedule.",
      "properties": {
        "status": {
          "type": "string",
          "description": "The status of the schedule (i.e. Enabled, Disabled)",
          "default": "Disabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "EnableStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled"
              }
            ]
          }
        },
        "taskType": {
          "type": "string",
          "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
        },
        "weeklyRecurrence": {
          "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
          "type": "object",
          "properties": {
            "weekdays": {
              "type": "array",
              "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
              "items": {
                "type": "string"
              }
            },
            "time": {
              "type": "string",
              "description": "The time of the day the schedule will occur."
            }
          }
        },
        "dailyRecurrence": {
          "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "description": "The time of day the schedule will occur."
            }
          }
        },
        "hourlyRecurrence": {
          "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
          "type": "object",
          "properties": {
            "minute": {
              "type": "integer",
              "format": "int32",
              "description": "Minutes of the hour the schedule will run."
            }
          }
        },
        "timeZoneId": {
          "type": "string",
          "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
        },
        "notificationSettings": {
          "description": "Notification settings.",
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
              "default": "Disabled",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "EnableStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled"
                  }
                ]
              }
            },
            "timeInMinutes": {
              "type": "integer",
              "format": "int32",
              "description": "Time in minutes before event at which notification will be sent."
            },
            "webhookUrl": {
              "type": "string",
              "description": "The webhook URL to which the notification will be sent."
            },
            "emailRecipient": {
              "type": "string",
              "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
            },
            "notificationLocale": {
              "type": "string",
              "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
            }
          }
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "description": "The creation date of the schedule.",
          "readOnly": true
        },
        "targetResourceId": {
          "type": "string",
          "description": "The resource ID to which the schedule belongs"
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning status of the resource.",
          "readOnly": true
        },
        "uniqueIdentifier": {
          "type": "string",
          "description": "The unique immutable identifier of a resource (Guid).",
          "readOnly": true
        }
      }
    },
    "Secret": {
      "type": "object",
      "description": "A secret.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The identifier of the resource.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "The location of the resource."
        },
        "tags": {
          "type": "object",
          "description": "The tags of the resource.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "value": {
              "type": "string",
              "description": "The value of the secret for secret creation."
            },
            "provisioningState": {
              "type": "string",
              "description": "The provisioning status of the resource.",
              "readOnly": true
            },
            "uniqueIdentifier": {
              "type": "string",
              "description": "The unique immutable identifier of a resource (Guid).",
              "readOnly": true
            }
          }
        }
      },
      "required": [
        "properties"
      ]
    },
    "SecretFragment": {
      "type": "object",
      "description": "A secret.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "The tags of the resource.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "SecretList": {
      "type": "object",
      "description": "The response of a list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Secret items on this page",
          "items": {
            "type": "object",
            "description": "A secret.",
            "properties": {
              "id": {
                "type": "string",
                "description": "The identifier of the resource.",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource.",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource.",
                "readOnly": true
              },
              "location": {
                "type": "string",
                "description": "The location of the resource."
              },
              "tags": {
                "type": "object",
                "description": "The tags of the resource.",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "properties": {
                "description": "The properties of the resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "The value of the secret for secret creation."
                  },
                  "provisioningState": {
                    "type": "string",
                    "description": "The provisioning status of the resource.",
                    "readOnly": true
                  },
                  "uniqueIdentifier": {
                    "type": "string",
                    "description": "The unique immutable identifier of a resource (Guid).",
                    "readOnly": true
                  }
                }
              }
            },
            "required": [
              "properties"
            ]
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SecretProperties": {
      "type": "object",
      "description": "Properties of a secret.",
      "properties": {
        "value": {
          "type": "string",
          "description": "The value of the secret for secret creation."
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning status of the resource.",
          "readOnly": true
        },
        "uniqueIdentifier": {
          "type": "string",
          "description": "The unique immutable identifier of a resource (Guid).",
          "readOnly": true
        }
      }
    },
    "ServiceFabric": {
      "type": "object",
      "description": "A Service Fabric.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The identifier of the resource.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "The location of the resource."
        },
        "tags": {
          "type": "object",
          "description": "The tags of the resource.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "externalServiceFabricId": {
              "type": "string",
              "description": "The backing service fabric resource's id"
            },
            "environmentId": {
              "type": "string",
              "description": "The resource id of the environment under which the service fabric resource is present"
            },
            "applicableSchedule": {
              "description": "The applicable schedule for the virtual machine.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource.",
                  "readOnly": true
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource."
                },
                "tags": {
                  "type": "object",
                  "description": "The tags of the resource.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "The properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "labVmsShutdown": {
                      "type": "object",
                      "description": "A schedule.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The identifier of the resource.",
                          "readOnly": true
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the resource.",
                          "readOnly": true
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of the resource.",
                          "readOnly": true
                        },
                        "location": {
                          "type": "string",
                          "description": "The location of the resource."
                        },
                        "tags": {
                          "type": "object",
                          "description": "The tags of the resource.",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "properties": {
                          "description": "The properties of the resource.",
                          "x-ms-client-flatten": true,
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "description": "The status of the schedule (i.e. Enabled, Disabled)",
                              "default": "Disabled",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "EnableStatus",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            },
                            "taskType": {
                              "type": "string",
                              "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                            },
                            "weeklyRecurrence": {
                              "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                              "type": "object",
                              "properties": {
                                "weekdays": {
                                  "type": "array",
                                  "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "time": {
                                  "type": "string",
                                  "description": "The time of the day the schedule will occur."
                                }
                              }
                            },
                            "dailyRecurrence": {
                              "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                              "type": "object",
                              "properties": {
                                "time": {
                                  "type": "string",
                                  "description": "The time of day the schedule will occur."
                                }
                              }
                            },
                            "hourlyRecurrence": {
                              "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                              "type": "object",
                              "properties": {
                                "minute": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Minutes of the hour the schedule will run."
                                }
                              }
                            },
                            "timeZoneId": {
                              "type": "string",
                              "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                            },
                            "notificationSettings": {
                              "description": "Notification settings.",
                              "type": "object",
                              "properties": {
                                "status": {
                                  "type": "string",
                                  "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                  "default": "Disabled",
                                  "enum": [
                                    "Enabled",
                                    "Disabled"
                                  ],
                                  "x-ms-enum": {
                                    "name": "EnableStatus",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Enabled",
                                        "value": "Enabled"
                                      },
                                      {
                                        "name": "Disabled",
                                        "value": "Disabled"
                                      }
                                    ]
                                  }
                                },
                                "timeInMinutes": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Time in minutes before event at which notification will be sent."
                                },
                                "webhookUrl": {
                                  "type": "string",
                                  "description": "The webhook URL to which the notification will be sent."
                                },
                                "emailRecipient": {
                                  "type": "string",
                                  "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                },
                                "notificationLocale": {
                                  "type": "string",
                                  "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                }
                              }
                            },
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The creation date of the schedule.",
                              "readOnly": true
                            },
                            "targetResourceId": {
                              "type": "string",
                              "description": "The resource ID to which the schedule belongs"
                            },
                            "provisioningState": {
                              "type": "string",
                              "description": "The provisioning status of the resource.",
                              "readOnly": true
                            },
                            "uniqueIdentifier": {
                              "type": "string",
                              "description": "The unique immutable identifier of a resource (Guid).",
                              "readOnly": true
                            }
                          }
                        }
                      },
                      "required": [
                        "properties"
                      ]
                    },
                    "labVmsStartup": {
                      "type": "object",
                      "description": "A schedule.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The identifier of the resource.",
                          "readOnly": true
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the resource.",
                          "readOnly": true
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of the resource.",
                          "readOnly": true
                        },
                        "location": {
                          "type": "string",
                          "description": "The location of the resource."
                        },
                        "tags": {
                          "type": "object",
                          "description": "The tags of the resource.",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "properties": {
                          "description": "The properties of the resource.",
                          "x-ms-client-flatten": true,
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "description": "The status of the schedule (i.e. Enabled, Disabled)",
                              "default": "Disabled",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "EnableStatus",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            },
                            "taskType": {
                              "type": "string",
                              "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                            },
                            "weeklyRecurrence": {
                              "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                              "type": "object",
                              "properties": {
                                "weekdays": {
                                  "type": "array",
                                  "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "time": {
                                  "type": "string",
                                  "description": "The time of the day the schedule will occur."
                                }
                              }
                            },
                            "dailyRecurrence": {
                              "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                              "type": "object",
                              "properties": {
                                "time": {
                                  "type": "string",
                                  "description": "The time of day the schedule will occur."
                                }
                              }
                            },
                            "hourlyRecurrence": {
                              "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                              "type": "object",
                              "properties": {
                                "minute": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Minutes of the hour the schedule will run."
                                }
                              }
                            },
                            "timeZoneId": {
                              "type": "string",
                              "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                            },
                            "notificationSettings": {
                              "description": "Notification settings.",
                              "type": "object",
                              "properties": {
                                "status": {
                                  "type": "string",
                                  "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                  "default": "Disabled",
                                  "enum": [
                                    "Enabled",
                                    "Disabled"
                                  ],
                                  "x-ms-enum": {
                                    "name": "EnableStatus",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Enabled",
                                        "value": "Enabled"
                                      },
                                      {
                                        "name": "Disabled",
                                        "value": "Disabled"
                                      }
                                    ]
                                  }
                                },
                                "timeInMinutes": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Time in minutes before event at which notification will be sent."
                                },
                                "webhookUrl": {
                                  "type": "string",
                                  "description": "The webhook URL to which the notification will be sent."
                                },
                                "emailRecipient": {
                                  "type": "string",
                                  "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                },
                                "notificationLocale": {
                                  "type": "string",
                                  "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                }
                              }
                            },
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The creation date of the schedule.",
                              "readOnly": true
                            },
                            "targetResourceId": {
                              "type": "string",
                              "description": "The resource ID to which the schedule belongs"
                            },
                            "provisioningState": {
                              "type": "string",
                              "description": "The provisioning status of the resource.",
                              "readOnly": true
                            },
                            "uniqueIdentifier": {
                              "type": "string",
                              "description": "The unique immutable identifier of a resource (Guid).",
                              "readOnly": true
                            }
                          }
                        }
                      },
                      "required": [
                        "properties"
                      ]
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            },
            "provisioningState": {
              "type": "string",
              "description": "The provisioning status of the resource.",
              "readOnly": true
            },
            "uniqueIdentifier": {
              "type": "string",
              "description": "The unique immutable identifier of a resource (Guid).",
              "readOnly": true
            }
          }
        }
      },
      "required": [
        "properties"
      ]
    },
    "ServiceFabricFragment": {
      "type": "object",
      "description": "A Service Fabric.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "The tags of the resource.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ServiceFabricList": {
      "type": "object",
      "description": "The response of a list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ServiceFabric items on this page",
          "items": {
            "type": "object",
            "description": "A Service Fabric.",
            "properties": {
              "id": {
                "type": "string",
                "description": "The identifier of the resource.",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource.",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource.",
                "readOnly": true
              },
              "location": {
                "type": "string",
                "description": "The location of the resource."
              },
              "tags": {
                "type": "object",
                "description": "The tags of the resource.",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "properties": {
                "description": "The properties of the resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "externalServiceFabricId": {
                    "type": "string",
                    "description": "The backing service fabric resource's id"
                  },
                  "environmentId": {
                    "type": "string",
                    "description": "The resource id of the environment under which the service fabric resource is present"
                  },
                  "applicableSchedule": {
                    "description": "The applicable schedule for the virtual machine.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The identifier of the resource.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource.",
                        "readOnly": true
                      },
                      "location": {
                        "type": "string",
                        "description": "The location of the resource."
                      },
                      "tags": {
                        "type": "object",
                        "description": "The tags of the resource.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "properties": {
                        "description": "The properties of the resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "labVmsShutdown": {
                            "type": "object",
                            "description": "A schedule.",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The identifier of the resource.",
                                "readOnly": true
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the resource.",
                                "readOnly": true
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of the resource.",
                                "readOnly": true
                              },
                              "location": {
                                "type": "string",
                                "description": "The location of the resource."
                              },
                              "tags": {
                                "type": "object",
                                "description": "The tags of the resource.",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "properties": {
                                "description": "The properties of the resource.",
                                "x-ms-client-flatten": true,
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "type": "string",
                                    "description": "The status of the schedule (i.e. Enabled, Disabled)",
                                    "default": "Disabled",
                                    "enum": [
                                      "Enabled",
                                      "Disabled"
                                    ],
                                    "x-ms-enum": {
                                      "name": "EnableStatus",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Enabled",
                                          "value": "Enabled"
                                        },
                                        {
                                          "name": "Disabled",
                                          "value": "Disabled"
                                        }
                                      ]
                                    }
                                  },
                                  "taskType": {
                                    "type": "string",
                                    "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                                  },
                                  "weeklyRecurrence": {
                                    "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                                    "type": "object",
                                    "properties": {
                                      "weekdays": {
                                        "type": "array",
                                        "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "time": {
                                        "type": "string",
                                        "description": "The time of the day the schedule will occur."
                                      }
                                    }
                                  },
                                  "dailyRecurrence": {
                                    "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                                    "type": "object",
                                    "properties": {
                                      "time": {
                                        "type": "string",
                                        "description": "The time of day the schedule will occur."
                                      }
                                    }
                                  },
                                  "hourlyRecurrence": {
                                    "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                                    "type": "object",
                                    "properties": {
                                      "minute": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "Minutes of the hour the schedule will run."
                                      }
                                    }
                                  },
                                  "timeZoneId": {
                                    "type": "string",
                                    "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                                  },
                                  "notificationSettings": {
                                    "description": "Notification settings.",
                                    "type": "object",
                                    "properties": {
                                      "status": {
                                        "type": "string",
                                        "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                        "default": "Disabled",
                                        "enum": [
                                          "Enabled",
                                          "Disabled"
                                        ],
                                        "x-ms-enum": {
                                          "name": "EnableStatus",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "Enabled",
                                              "value": "Enabled"
                                            },
                                            {
                                              "name": "Disabled",
                                              "value": "Disabled"
                                            }
                                          ]
                                        }
                                      },
                                      "timeInMinutes": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "Time in minutes before event at which notification will be sent."
                                      },
                                      "webhookUrl": {
                                        "type": "string",
                                        "description": "The webhook URL to which the notification will be sent."
                                      },
                                      "emailRecipient": {
                                        "type": "string",
                                        "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                      },
                                      "notificationLocale": {
                                        "type": "string",
                                        "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                      }
                                    }
                                  },
                                  "createdDate": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The creation date of the schedule.",
                                    "readOnly": true
                                  },
                                  "targetResourceId": {
                                    "type": "string",
                                    "description": "The resource ID to which the schedule belongs"
                                  },
                                  "provisioningState": {
                                    "type": "string",
                                    "description": "The provisioning status of the resource.",
                                    "readOnly": true
                                  },
                                  "uniqueIdentifier": {
                                    "type": "string",
                                    "description": "The unique immutable identifier of a resource (Guid).",
                                    "readOnly": true
                                  }
                                }
                              }
                            },
                            "required": [
                              "properties"
                            ]
                          },
                          "labVmsStartup": {
                            "type": "object",
                            "description": "A schedule.",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The identifier of the resource.",
                                "readOnly": true
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the resource.",
                                "readOnly": true
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of the resource.",
                                "readOnly": true
                              },
                              "location": {
                                "type": "string",
                                "description": "The location of the resource."
                              },
                              "tags": {
                                "type": "object",
                                "description": "The tags of the resource.",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "properties": {
                                "description": "The properties of the resource.",
                                "x-ms-client-flatten": true,
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "type": "string",
                                    "description": "The status of the schedule (i.e. Enabled, Disabled)",
                                    "default": "Disabled",
                                    "enum": [
                                      "Enabled",
                                      "Disabled"
                                    ],
                                    "x-ms-enum": {
                                      "name": "EnableStatus",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Enabled",
                                          "value": "Enabled"
                                        },
                                        {
                                          "name": "Disabled",
                                          "value": "Disabled"
                                        }
                                      ]
                                    }
                                  },
                                  "taskType": {
                                    "type": "string",
                                    "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                                  },
                                  "weeklyRecurrence": {
                                    "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                                    "type": "object",
                                    "properties": {
                                      "weekdays": {
                                        "type": "array",
                                        "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "time": {
                                        "type": "string",
                                        "description": "The time of the day the schedule will occur."
                                      }
                                    }
                                  },
                                  "dailyRecurrence": {
                                    "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                                    "type": "object",
                                    "properties": {
                                      "time": {
                                        "type": "string",
                                        "description": "The time of day the schedule will occur."
                                      }
                                    }
                                  },
                                  "hourlyRecurrence": {
                                    "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                                    "type": "object",
                                    "properties": {
                                      "minute": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "Minutes of the hour the schedule will run."
                                      }
                                    }
                                  },
                                  "timeZoneId": {
                                    "type": "string",
                                    "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                                  },
                                  "notificationSettings": {
                                    "description": "Notification settings.",
                                    "type": "object",
                                    "properties": {
                                      "status": {
                                        "type": "string",
                                        "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                                        "default": "Disabled",
                                        "enum": [
                                          "Enabled",
                                          "Disabled"
                                        ],
                                        "x-ms-enum": {
                                          "name": "EnableStatus",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "Enabled",
                                              "value": "Enabled"
                                            },
                                            {
                                              "name": "Disabled",
                                              "value": "Disabled"
                                            }
                                          ]
                                        }
                                      },
                                      "timeInMinutes": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "Time in minutes before event at which notification will be sent."
                                      },
                                      "webhookUrl": {
                                        "type": "string",
                                        "description": "The webhook URL to which the notification will be sent."
                                      },
                                      "emailRecipient": {
                                        "type": "string",
                                        "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                                      },
                                      "notificationLocale": {
                                        "type": "string",
                                        "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                                      }
                                    }
                                  },
                                  "createdDate": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The creation date of the schedule.",
                                    "readOnly": true
                                  },
                                  "targetResourceId": {
                                    "type": "string",
                                    "description": "The resource ID to which the schedule belongs"
                                  },
                                  "provisioningState": {
                                    "type": "string",
                                    "description": "The provisioning status of the resource.",
                                    "readOnly": true
                                  },
                                  "uniqueIdentifier": {
                                    "type": "string",
                                    "description": "The unique immutable identifier of a resource (Guid).",
                                    "readOnly": true
                                  }
                                }
                              }
                            },
                            "required": [
                              "properties"
                            ]
                          }
                        }
                      }
                    },
                    "required": [
                      "properties"
                    ]
                  },
                  "provisioningState": {
                    "type": "string",
                    "description": "The provisioning status of the resource.",
                    "readOnly": true
                  },
                  "uniqueIdentifier": {
                    "type": "string",
                    "description": "The unique immutable identifier of a resource (Guid).",
                    "readOnly": true
                  }
                }
              }
            },
            "required": [
              "properties"
            ]
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ServiceFabricProperties": {
      "type": "object",
      "description": "Properties of a service fabric.",
      "properties": {
        "externalServiceFabricId": {
          "type": "string",
          "description": "The backing service fabric resource's id"
        },
        "environmentId": {
          "type": "string",
          "description": "The resource id of the environment under which the service fabric resource is present"
        },
        "applicableSchedule": {
          "description": "The applicable schedule for the virtual machine.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The identifier of the resource.",
              "readOnly": true
            },
            "name": {
              "type": "string",
              "description": "The name of the resource.",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "The type of the resource.",
              "readOnly": true
            },
            "location": {
              "type": "string",
              "description": "The location of the resource."
            },
            "tags": {
              "type": "object",
              "description": "The tags of the resource.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "properties": {
              "description": "The properties of the resource.",
              "x-ms-client-flatten": true,
              "type": "object",
              "properties": {
                "labVmsShutdown": {
                  "type": "object",
                  "description": "A schedule.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The identifier of the resource.",
                      "readOnly": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the resource.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of the resource.",
                      "readOnly": true
                    },
                    "location": {
                      "type": "string",
                      "description": "The location of the resource."
                    },
                    "tags": {
                      "type": "object",
                      "description": "The tags of the resource.",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "properties": {
                      "description": "The properties of the resource.",
                      "x-ms-client-flatten": true,
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "The status of the schedule (i.e. Enabled, Disabled)",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "taskType": {
                          "type": "string",
                          "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                        },
                        "weeklyRecurrence": {
                          "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                          "type": "object",
                          "properties": {
                            "weekdays": {
                              "type": "array",
                              "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                              "items": {
                                "type": "string"
                              }
                            },
                            "time": {
                              "type": "string",
                              "description": "The time of the day the schedule will occur."
                            }
                          }
                        },
                        "dailyRecurrence": {
                          "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                          "type": "object",
                          "properties": {
                            "time": {
                              "type": "string",
                              "description": "The time of day the schedule will occur."
                            }
                          }
                        },
                        "hourlyRecurrence": {
                          "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                          "type": "object",
                          "properties": {
                            "minute": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Minutes of the hour the schedule will run."
                            }
                          }
                        },
                        "timeZoneId": {
                          "type": "string",
                          "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                        },
                        "notificationSettings": {
                          "description": "Notification settings.",
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                              "default": "Disabled",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "EnableStatus",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            },
                            "timeInMinutes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Time in minutes before event at which notification will be sent."
                            },
                            "webhookUrl": {
                              "type": "string",
                              "description": "The webhook URL to which the notification will be sent."
                            },
                            "emailRecipient": {
                              "type": "string",
                              "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                            },
                            "notificationLocale": {
                              "type": "string",
                              "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                            }
                          }
                        },
                        "createdDate": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The creation date of the schedule.",
                          "readOnly": true
                        },
                        "targetResourceId": {
                          "type": "string",
                          "description": "The resource ID to which the schedule belongs"
                        },
                        "provisioningState": {
                          "type": "string",
                          "description": "The provisioning status of the resource.",
                          "readOnly": true
                        },
                        "uniqueIdentifier": {
                          "type": "string",
                          "description": "The unique immutable identifier of a resource (Guid).",
                          "readOnly": true
                        }
                      }
                    }
                  },
                  "required": [
                    "properties"
                  ]
                },
                "labVmsStartup": {
                  "type": "object",
                  "description": "A schedule.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The identifier of the resource.",
                      "readOnly": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the resource.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of the resource.",
                      "readOnly": true
                    },
                    "location": {
                      "type": "string",
                      "description": "The location of the resource."
                    },
                    "tags": {
                      "type": "object",
                      "description": "The tags of the resource.",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "properties": {
                      "description": "The properties of the resource.",
                      "x-ms-client-flatten": true,
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "The status of the schedule (i.e. Enabled, Disabled)",
                          "default": "Disabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "EnableStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled"
                              }
                            ]
                          }
                        },
                        "taskType": {
                          "type": "string",
                          "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."
                        },
                        "weeklyRecurrence": {
                          "description": "If the schedule will occur only some days of the week, specify the weekly recurrence.",
                          "type": "object",
                          "properties": {
                            "weekdays": {
                              "type": "array",
                              "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
                              "items": {
                                "type": "string"
                              }
                            },
                            "time": {
                              "type": "string",
                              "description": "The time of the day the schedule will occur."
                            }
                          }
                        },
                        "dailyRecurrence": {
                          "description": "If the schedule will occur once each day of the week, specify the daily recurrence.",
                          "type": "object",
                          "properties": {
                            "time": {
                              "type": "string",
                              "description": "The time of day the schedule will occur."
                            }
                          }
                        },
                        "hourlyRecurrence": {
                          "description": "If the schedule will occur multiple times a day, specify the hourly recurrence.",
                          "type": "object",
                          "properties": {
                            "minute": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Minutes of the hour the schedule will run."
                            }
                          }
                        },
                        "timeZoneId": {
                          "type": "string",
                          "description": "The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"
                        },
                        "notificationSettings": {
                          "description": "Notification settings.",
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
                              "default": "Disabled",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "EnableStatus",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled"
                                  }
                                ]
                              }
                            },
                            "timeInMinutes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Time in minutes before event at which notification will be sent."
                            },
                            "webhookUrl": {
                              "type": "string",
                              "description": "The webhook URL to which the notification will be sent."
                            },
                            "emailRecipient": {
                              "type": "string",
                              "description": "The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."
                            },
                            "notificationLocale": {
                              "type": "string",
                              "description": "The locale to use when sending a notification (fallback for unsupported languages is EN)."
                            }
                          }
                        },
                        "createdDate": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The creation date of the schedule.",
                          "readOnly": true
                        },
                        "targetResourceId": {
                          "type": "string",
                          "description": "The resource ID to which the schedule belongs"
                        },
                        "provisioningState": {
                          "type": "string",
                          "description": "The provisioning status of the resource.",
                          "readOnly": true
                        },
                        "uniqueIdentifier": {
                          "type": "string",
                          "description": "The unique immutable identifier of a resource (Guid).",
                          "readOnly": true
                        }
                      }
                    }
                  },
                  "required": [
                    "properties"
                  ]
                }
              }
            }
          },
          "required": [
            "properties"
          ]
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning status of the resource.",
          "readOnly": true
        },
        "uniqueIdentifier": {
          "type": "string",
          "description": "The unique immutable identifier of a resource (Guid).",
          "readOnly": true
        }
      }
    },
    "ServiceRunner": {
      "type": "object",
      "description": "A container for a managed identity to execute DevTest lab services.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The identifier of the resource.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "The location of the resource."
        },
        "tags": {
          "type": "object",
          "description": "The tags of the resource.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "identity": {
          "description": "The identity of the resource.",
          "type": "object",
          "properties": {
            "type": {
              "description": "Managed identity.",
              "type": "string",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "x-ms-enum": {
                "name": "ManagedIdentityType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "None",
                    "value": "None"
                  },
                  {
                    "name": "SystemAssigned",
                    "value": "SystemAssigned"
                  },
                  {
                    "name": "UserAssigned",
                    "value": "UserAssigned"
                  },
                  {
                    "name": "SystemAssigned,UserAssigned",
                    "value": "SystemAssigned,UserAssigned"
                  }
                ]
              }
            },
            "principalId": {
              "type": "string",
              "description": "The principal id of resource identity."
            },
            "tenantId": {
              "type": "string",
              "description": "The tenant identifier of resource."
            },
            "clientSecretUrl": {
              "type": "string",
              "description": "The client secret URL of the identity."
            }
          }
        }
      }
    },
    "SharedPublicIpAddressConfiguration": {
      "type": "object",
      "description": "Properties of a virtual machine that determine how it is connected to a load balancer.",
      "properties": {
        "inboundNatRules": {
          "type": "array",
          "description": "The incoming NAT rules",
          "items": {
            "type": "object",
            "description": "A rule for NAT - exposing a VM's port (backendPort) on the public IP address using a load balancer.",
            "properties": {
              "transportProtocol": {
                "description": "The transport protocol for the endpoint.",
                "type": "string",
                "enum": [
                  "Tcp",
                  "Udp"
                ],
                "x-ms-enum": {
                  "name": "TransportProtocol",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Tcp",
                      "value": "Tcp"
                    },
                    {
                      "name": "Udp",
                      "value": "Udp"
                    }
                  ]
                }
              },
              "frontendPort": {
                "type": "integer",
                "format": "int32",
                "description": "The external endpoint port of the inbound connection. Possible values range between 1 and 65535, inclusive. If unspecified, a value will be allocated automatically."
              },
              "backendPort": {
                "type": "integer",
                "format": "int32",
                "description": "The port to which the external traffic will be redirected."
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "SourceControlType": {
      "type": "string",
      "description": "The artifact source's type.",
      "enum": [
        "VsoGit",
        "GitHub",
        "StorageAccount"
      ],
      "x-ms-enum": {
        "name": "SourceControlType",
        "modelAsString": true,
        "values": [
          {
            "name": "VsoGit",
            "value": "VsoGit"
          },
          {
            "name": "GitHub",
            "value": "GitHub"
          },
          {
            "name": "StorageAccount",
            "value": "StorageAccount"
          }
        ]
      }
    },
    "StorageType": {
      "type": "string",
      "description": "The storage type for the disk (i.e. Standard, Premium).",
      "enum": [
        "Standard",
        "Premium",
        "StandardSSD"
      ],
      "x-ms-enum": {
        "name": "StorageType",
        "modelAsString": true,
        "values": [
          {
            "name": "Standard",
            "value": "Standard"
          },
          {
            "name": "Premium",
            "value": "Premium"
          },
          {
            "name": "StandardSSD",
            "value": "StandardSSD"
          }
        ]
      }
    },
    "Subnet": {
      "type": "object",
      "description": "Subnet information.",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "The resource ID of the subnet."
        },
        "labSubnetName": {
          "type": "string",
          "description": "The name of the subnet as seen in the lab."
        },
        "allowPublicIp": {
          "description": "The permission policy of the subnet for allowing public IP addresses (i.e. Allow, Deny)).",
          "type": "string",
          "enum": [
            "Default",
            "Deny",
            "Allow"
          ],
          "x-ms-enum": {
            "name": "UsagePermissionType",
            "modelAsString": true,
            "values": [
              {
                "name": "Default",
                "value": "Default"
              },
              {
                "name": "Deny",
                "value": "Deny"
              },
              {
                "name": "Allow",
                "value": "Allow"
              }
            ]
          }
        }
      }
    },
    "SubnetOverride": {
      "type": "object",
      "description": "Property overrides on a subnet of a virtual network.",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "The resource ID of the subnet."
        },
        "labSubnetName": {
          "type": "string",
          "description": "The name given to the subnet within the lab."
        },
        "useInVmCreationPermission": {
          "description": "Indicates whether this subnet can be used during virtual machine creation (i.e. Allow, Deny).",
          "type": "string",
          "enum": [
            "Default",
            "Deny",
            "Allow"
          ],
          "x-ms-enum": {
            "name": "UsagePermissionType",
            "modelAsString": true,
            "values": [
              {
                "name": "Default",
                "value": "Default"
              },
              {
                "name": "Deny",
                "value": "Deny"
              },
              {
                "name": "Allow",
                "value": "Allow"
              }
            ]
          }
        },
        "usePublicIpAddressPermission": {
          "description": "Indicates whether public IP addresses can be assigned to virtual machines on this subnet (i.e. Allow, Deny).",
          "type": "string",
          "enum": [
            "Default",
            "Deny",
            "Allow"
          ],
          "x-ms-enum": {
            "name": "UsagePermissionType",
            "modelAsString": true,
            "values": [
              {
                "name": "Default",
                "value": "Default"
              },
              {
                "name": "Deny",
                "value": "Deny"
              },
              {
                "name": "Allow",
                "value": "Allow"
              }
            ]
          }
        },
        "sharedPublicIpAddressConfiguration": {
          "description": "Properties that virtual machines on this subnet will share.",
          "type": "object",
          "properties": {
            "allowedPorts": {
              "type": "array",
              "description": "Backend ports that virtual machines on this subnet are allowed to expose",
              "items": {
                "type": "object",
                "description": "Properties of a network port.",
                "properties": {
                  "transportProtocol": {
                    "description": "Protocol type of the port.",
                    "type": "string",
                    "enum": [
                      "Tcp",
                      "Udp"
                    ],
                    "x-ms-enum": {
                      "name": "TransportProtocol",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Tcp",
                          "value": "Tcp"
                        },
                        {
                          "name": "Udp",
                          "value": "Udp"
                        }
                      ]
                    }
                  },
                  "backendPort": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Backend port of the target virtual machine."
                  }
                }
              },
              "x-ms-identifiers": []
            }
          }
        },
        "virtualNetworkPoolName": {
          "type": "string",
          "description": "The virtual network pool associated with this subnet."
        }
      }
    },
    "SubnetSharedPublicIpAddressConfiguration": {
      "type": "object",
      "description": "Configuration for public IP address sharing.",
      "properties": {
        "allowedPorts": {
          "type": "array",
          "description": "Backend ports that virtual machines on this subnet are allowed to expose",
          "items": {
            "type": "object",
            "description": "Properties of a network port.",
            "properties": {
              "transportProtocol": {
                "description": "Protocol type of the port.",
                "type": "string",
                "enum": [
                  "Tcp",
                  "Udp"
                ],
                "x-ms-enum": {
                  "name": "TransportProtocol",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Tcp",
                      "value": "Tcp"
                    },
                    {
                      "name": "Udp",
                      "value": "Udp"
                    }
                  ]
                }
              },
              "backendPort": {
                "type": "integer",
                "format": "int32",
                "description": "Backend port of the target virtual machine."
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "TargetCostProperties": {
      "type": "object",
      "description": "Properties of a cost target.",
      "properties": {
        "status": {
          "description": "Target cost status",
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "TargetCostStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled"
              },
              {
                "name": "Disabled",
                "value": "Disabled"
              }
            ]
          }
        },
        "target": {
          "type": "integer",
          "format": "int32",
          "description": "Lab target cost"
        },
        "costThresholds": {
          "type": "array",
          "description": "Cost thresholds.",
          "items": {
            "type": "object",
            "description": "Properties of a cost threshold item.",
            "properties": {
              "thresholdId": {
                "type": "string",
                "description": "The ID of the cost threshold item."
              },
              "percentageThreshold": {
                "description": "The value of the percentage cost threshold.",
                "type": "object",
                "properties": {
                  "thresholdValue": {
                    "type": "number",
                    "format": "double",
                    "description": "The cost threshold value."
                  }
                }
              },
              "displayOnChart": {
                "description": "Indicates whether this threshold will be displayed on cost charts.",
                "type": "string",
                "enum": [
                  "Enabled",
                  "Disabled"
                ],
                "x-ms-enum": {
                  "name": "CostThresholdStatus",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Enabled",
                      "value": "Enabled"
                    },
                    {
                      "name": "Disabled",
                      "value": "Disabled"
                    }
                  ]
                }
              },
              "sendNotificationWhenExceeded": {
                "description": "Indicates whether notifications will be sent when this threshold is exceeded.",
                "type": "string",
                "enum": [
                  "Enabled",
                  "Disabled"
                ],
                "x-ms-enum": {
                  "name": "CostThresholdStatus",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Enabled",
                      "value": "Enabled"
                    },
                    {
                      "name": "Disabled",
                      "value": "Disabled"
                    }
                  ]
                }
              },
              "notificationSent": {
                "type": "string",
                "description": "Indicates the datetime when notifications were last sent for this threshold."
              }
            }
          },
          "x-ms-identifiers": []
        },
        "cycleStartDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Reporting cycle start date."
        },
        "cycleEndDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Reporting cycle end date."
        },
        "cycleType": {
          "description": "Reporting cycle type.",
          "type": "string",
          "enum": [
            "CalendarMonth",
            "Custom"
          ],
          "x-ms-enum": {
            "name": "ReportingCycleType",
            "modelAsString": true,
            "values": [
              {
                "name": "CalendarMonth",
                "value": "CalendarMonth"
              },
              {
                "name": "Custom",
                "value": "Custom"
              }
            ]
          }
        }
      }
    },
    "TargetCostStatus": {
      "type": "string",
      "description": "Target cost status",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "TargetCostStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          }
        ]
      }
    },
    "TransportProtocol": {
      "type": "string",
      "description": "The transport protocol for the endpoint.",
      "enum": [
        "Tcp",
        "Udp"
      ],
      "x-ms-enum": {
        "name": "TransportProtocol",
        "modelAsString": true,
        "values": [
          {
            "name": "Tcp",
            "value": "Tcp"
          },
          {
            "name": "Udp",
            "value": "Udp"
          }
        ]
      }
    },
    "TypeSpec.Http.OkResponse": {
      "type": "object",
      "description": "The request has succeeded."
    },
    "UpdateResource": {
      "type": "object",
      "description": "Represents an update resource",
      "properties": {
        "tags": {
          "type": "object",
          "description": "The tags of the resource.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "UsagePermissionType": {
      "type": "string",
      "description": "The permission policy of the subnet for allowing public IP addresses (i.e. Allow, Deny)).",
      "enum": [
        "Default",
        "Deny",
        "Allow"
      ],
      "x-ms-enum": {
        "name": "UsagePermissionType",
        "modelAsString": true,
        "values": [
          {
            "name": "Default",
            "value": "Default"
          },
          {
            "name": "Deny",
            "value": "Deny"
          },
          {
            "name": "Allow",
            "value": "Allow"
          }
        ]
      }
    },
    "User": {
      "type": "object",
      "description": "Profile of a lab user.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The identifier of the resource.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "The location of the resource."
        },
        "tags": {
          "type": "object",
          "description": "The tags of the resource.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "identity": {
              "description": "The identity of the user.",
              "type": "object",
              "properties": {
                "principalName": {
                  "type": "string",
                  "description": "Set to the principal name / UPN of the client JWT making the request."
                },
                "principalId": {
                  "type": "string",
                  "description": "Set to the principal Id of the client JWT making the request. Service principal will not have the principal Id."
                },
                "tenantId": {
                  "type": "string",
                  "description": "Set to the tenant ID of the client JWT making the request."
                },
                "objectId": {
                  "type": "string",
                  "description": "Set to the object Id of the client JWT making the request. Not all users have object Id. For CSP (reseller) scenarios for example, object Id is not available."
                },
                "appId": {
                  "type": "string",
                  "description": "Set to the app Id of the client JWT making the request."
                }
              }
            },
            "secretStore": {
              "description": "The secret store of the user.",
              "type": "object",
              "properties": {
                "keyVaultUri": {
                  "type": "string",
                  "description": "The URI of the user's Key vault."
                },
                "keyVaultId": {
                  "type": "string",
                  "description": "The ID of the user's Key vault."
                }
              }
            },
            "createdDate": {
              "type": "string",
              "format": "date-time",
              "description": "The creation date of the user profile.",
              "readOnly": true
            },
            "provisioningState": {
              "type": "string",
              "description": "The provisioning status of the resource.",
              "readOnly": true
            },
            "uniqueIdentifier": {
              "type": "string",
              "description": "The unique immutable identifier of a resource (Guid).",
              "readOnly": true
            }
          }
        }
      },
      "required": [
        "properties"
      ]
    },
    "UserFragment": {
      "type": "object",
      "description": "Profile of a lab user.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "The tags of the resource.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "UserIdentity": {
      "type": "object",
      "description": "Identity attributes of a lab user.",
      "properties": {
        "principalName": {
          "type": "string",
          "description": "Set to the principal name / UPN of the client JWT making the request."
        },
        "principalId": {
          "type": "string",
          "description": "Set to the principal Id of the client JWT making the request. Service principal will not have the principal Id."
        },
        "tenantId": {
          "type": "string",
          "description": "Set to the tenant ID of the client JWT making the request."
        },
        "objectId": {
          "type": "string",
          "description": "Set to the object Id of the client JWT making the request. Not all users have object Id. For CSP (reseller) scenarios for example, object Id is not available."
        },
        "appId": {
          "type": "string",
          "description": "Set to the app Id of the client JWT making the request."
        }
      }
    },
    "UserList": {
      "type": "object",
      "description": "The response of a list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The User items on this page",
          "items": {
            "type": "object",
            "description": "Profile of a lab user.",
            "properties": {
              "id": {
                "type": "string",
                "description": "The identifier of the resource.",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource.",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource.",
                "readOnly": true
              },
              "location": {
                "type": "string",
                "description": "The location of the resource."
              },
              "tags": {
                "type": "object",
                "description": "The tags of the resource.",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "properties": {
                "description": "The properties of the resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "identity": {
                    "description": "The identity of the user.",
                    "type": "object",
                    "properties": {
                      "principalName": {
                        "type": "string",
                        "description": "Set to the principal name / UPN of the client JWT making the request."
                      },
                      "principalId": {
                        "type": "string",
                        "description": "Set to the principal Id of the client JWT making the request. Service principal will not have the principal Id."
                      },
                      "tenantId": {
                        "type": "string",
                        "description": "Set to the tenant ID of the client JWT making the request."
                      },
                      "objectId": {
                        "type": "string",
                        "description": "Set to the object Id of the client JWT making the request. Not all users have object Id. For CSP (reseller) scenarios for example, object Id is not available."
                      },
                      "appId": {
                        "type": "string",
                        "description": "Set to the app Id of the client JWT making the request."
                      }
                    }
                  },
                  "secretStore": {
                    "description": "The secret store of the user.",
                    "type": "object",
                    "properties": {
                      "keyVaultUri": {
                        "type": "string",
                        "description": "The URI of the user's Key vault."
                      },
                      "keyVaultId": {
                        "type": "string",
                        "description": "The ID of the user's Key vault."
                      }
                    }
                  },
                  "createdDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The creation date of the user profile.",
                    "readOnly": true
                  },
                  "provisioningState": {
                    "type": "string",
                    "description": "The provisioning status of the resource.",
                    "readOnly": true
                  },
                  "uniqueIdentifier": {
                    "type": "string",
                    "description": "The unique immutable identifier of a resource (Guid).",
                    "readOnly": true
                  }
                }
              }
            },
            "required": [
              "properties"
            ]
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "UserProperties": {
      "type": "object",
      "description": "Properties of a lab user profile.",
      "properties": {
        "identity": {
          "description": "The identity of the user.",
          "type": "object",
          "properties": {
            "principalName": {
              "type": "string",
              "description": "Set to the principal name / UPN of the client JWT making the request."
            },
            "principalId": {
              "type": "string",
              "description": "Set to the principal Id of the client JWT making the request. Service principal will not have the principal Id."
            },
            "tenantId": {
              "type": "string",
              "description": "Set to the tenant ID of the client JWT making the request."
            },
            "objectId": {
              "type": "string",
              "description": "Set to the object Id of the client JWT making the request. Not all users have object Id. For CSP (reseller) scenarios for example, object Id is not available."
            },
            "appId": {
              "type": "string",
              "description": "Set to the app Id of the client JWT making the request."
            }
          }
        },
        "secretStore": {
          "description": "The secret store of the user.",
          "type": "object",
          "properties": {
            "keyVaultUri": {
              "type": "string",
              "description": "The URI of the user's Key vault."
            },
            "keyVaultId": {
              "type": "string",
              "description": "The ID of the user's Key vault."
            }
          }
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "description": "The creation date of the user profile.",
          "readOnly": true
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning status of the resource.",
          "readOnly": true
        },
        "uniqueIdentifier": {
          "type": "string",
          "description": "The unique immutable identifier of a resource (Guid).",
          "readOnly": true
        }
      }
    },
    "UserSecretStore": {
      "type": "object",
      "description": "Properties of a user's secret store.",
      "properties": {
        "keyVaultUri": {
          "type": "string",
          "description": "The URI of the user's Key vault."
        },
        "keyVaultId": {
          "type": "string",
          "description": "The ID of the user's Key vault."
        }
      }
    },
    "VirtualMachineCreationSource": {
      "type": "string",
      "description": "Tells source of creation of lab virtual machine. Output property only.",
      "enum": [
        "FromCustomImage",
        "FromGalleryImage",
        "FromSharedGalleryImage"
      ],
      "x-ms-enum": {
        "name": "VirtualMachineCreationSource",
        "modelAsString": true,
        "values": [
          {
            "name": "FromCustomImage",
            "value": "FromCustomImage"
          },
          {
            "name": "FromGalleryImage",
            "value": "FromGalleryImage"
          },
          {
            "name": "FromSharedGalleryImage",
            "value": "FromSharedGalleryImage"
          }
        ]
      }
    },
    "VirtualNetwork": {
      "type": "object",
      "description": "A virtual network.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The identifier of the resource.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "The location of the resource."
        },
        "tags": {
          "type": "object",
          "description": "The tags of the resource.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "allowedSubnets": {
              "type": "array",
              "description": "The allowed subnets of the virtual network.",
              "items": {
                "type": "object",
                "description": "Subnet information.",
                "properties": {
                  "resourceId": {
                    "type": "string",
                    "description": "The resource ID of the subnet."
                  },
                  "labSubnetName": {
                    "type": "string",
                    "description": "The name of the subnet as seen in the lab."
                  },
                  "allowPublicIp": {
                    "description": "The permission policy of the subnet for allowing public IP addresses (i.e. Allow, Deny)).",
                    "type": "string",
                    "enum": [
                      "Default",
                      "Deny",
                      "Allow"
                    ],
                    "x-ms-enum": {
                      "name": "UsagePermissionType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Default",
                          "value": "Default"
                        },
                        {
                          "name": "Deny",
                          "value": "Deny"
                        },
                        {
                          "name": "Allow",
                          "value": "Allow"
                        }
                      ]
                    }
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "description": {
              "type": "string",
              "description": "The description of the virtual network."
            },
            "externalProviderResourceId": {
              "type": "string",
              "description": "The Microsoft.Network resource identifier of the virtual network."
            },
            "externalSubnets": {
              "type": "array",
              "description": "The external subnet properties.",
              "items": {
                "type": "object",
                "description": "Subnet information as returned by the Microsoft.Network API.",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Gets or sets the identifier."
                  },
                  "name": {
                    "type": "string",
                    "description": "Gets or sets the name."
                  }
                }
              },
              "readOnly": true
            },
            "subnetOverrides": {
              "type": "array",
              "description": "The subnet overrides of the virtual network.",
              "items": {
                "type": "object",
                "description": "Property overrides on a subnet of a virtual network.",
                "properties": {
                  "resourceId": {
                    "type": "string",
                    "description": "The resource ID of the subnet."
                  },
                  "labSubnetName": {
                    "type": "string",
                    "description": "The name given to the subnet within the lab."
                  },
                  "useInVmCreationPermission": {
                    "description": "Indicates whether this subnet can be used during virtual machine creation (i.e. Allow, Deny).",
                    "type": "string",
                    "enum": [
                      "Default",
                      "Deny",
                      "Allow"
                    ],
                    "x-ms-enum": {
                      "name": "UsagePermissionType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Default",
                          "value": "Default"
                        },
                        {
                          "name": "Deny",
                          "value": "Deny"
                        },
                        {
                          "name": "Allow",
                          "value": "Allow"
                        }
                      ]
                    }
                  },
                  "usePublicIpAddressPermission": {
                    "description": "Indicates whether public IP addresses can be assigned to virtual machines on this subnet (i.e. Allow, Deny).",
                    "type": "string",
                    "enum": [
                      "Default",
                      "Deny",
                      "Allow"
                    ],
                    "x-ms-enum": {
                      "name": "UsagePermissionType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Default",
                          "value": "Default"
                        },
                        {
                          "name": "Deny",
                          "value": "Deny"
                        },
                        {
                          "name": "Allow",
                          "value": "Allow"
                        }
                      ]
                    }
                  },
                  "sharedPublicIpAddressConfiguration": {
                    "description": "Properties that virtual machines on this subnet will share.",
                    "type": "object",
                    "properties": {
                      "allowedPorts": {
                        "type": "array",
                        "description": "Backend ports that virtual machines on this subnet are allowed to expose",
                        "items": {
                          "type": "object",
                          "description": "Properties of a network port.",
                          "properties": {
                            "transportProtocol": {
                              "description": "Protocol type of the port.",
                              "type": "string",
                              "enum": [
                                "Tcp",
                                "Udp"
                              ],
                              "x-ms-enum": {
                                "name": "TransportProtocol",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Tcp",
                                    "value": "Tcp"
                                  },
                                  {
                                    "name": "Udp",
                                    "value": "Udp"
                                  }
                                ]
                              }
                            },
                            "backendPort": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Backend port of the target virtual machine."
                            }
                          }
                        },
                        "x-ms-identifiers": []
                      }
                    }
                  },
                  "virtualNetworkPoolName": {
                    "type": "string",
                    "description": "The virtual network pool associated with this subnet."
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "createdDate": {
              "type": "string",
              "format": "date-time",
              "description": "The creation date of the virtual network.",
              "readOnly": true
            },
            "provisioningState": {
              "type": "string",
              "description": "The provisioning status of the resource.",
              "readOnly": true
            },
            "uniqueIdentifier": {
              "type": "string",
              "description": "The unique immutable identifier of a resource (Guid).",
              "readOnly": true
            }
          }
        }
      },
      "required": [
        "properties"
      ]
    },
    "VirtualNetworkFragment": {
      "type": "object",
      "description": "A virtual network.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "The tags of the resource.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "VirtualNetworkList": {
      "type": "object",
      "description": "The response of a list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The VirtualNetwork items on this page",
          "items": {
            "type": "object",
            "description": "A virtual network.",
            "properties": {
              "id": {
                "type": "string",
                "description": "The identifier of the resource.",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource.",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource.",
                "readOnly": true
              },
              "location": {
                "type": "string",
                "description": "The location of the resource."
              },
              "tags": {
                "type": "object",
                "description": "The tags of the resource.",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "properties": {
                "description": "The properties of the resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "allowedSubnets": {
                    "type": "array",
                    "description": "The allowed subnets of the virtual network.",
                    "items": {
                      "type": "object",
                      "description": "Subnet information.",
                      "properties": {
                        "resourceId": {
                          "type": "string",
                          "description": "The resource ID of the subnet."
                        },
                        "labSubnetName": {
                          "type": "string",
                          "description": "The name of the subnet as seen in the lab."
                        },
                        "allowPublicIp": {
                          "description": "The permission policy of the subnet for allowing public IP addresses (i.e. Allow, Deny)).",
                          "type": "string",
                          "enum": [
                            "Default",
                            "Deny",
                            "Allow"
                          ],
                          "x-ms-enum": {
                            "name": "UsagePermissionType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Default",
                                "value": "Default"
                              },
                              {
                                "name": "Deny",
                                "value": "Deny"
                              },
                              {
                                "name": "Allow",
                                "value": "Allow"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the virtual network."
                  },
                  "externalProviderResourceId": {
                    "type": "string",
                    "description": "The Microsoft.Network resource identifier of the virtual network."
                  },
                  "externalSubnets": {
                    "type": "array",
                    "description": "The external subnet properties.",
                    "items": {
                      "type": "object",
                      "description": "Subnet information as returned by the Microsoft.Network API.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Gets or sets the identifier."
                        },
                        "name": {
                          "type": "string",
                          "description": "Gets or sets the name."
                        }
                      }
                    },
                    "readOnly": true
                  },
                  "subnetOverrides": {
                    "type": "array",
                    "description": "The subnet overrides of the virtual network.",
                    "items": {
                      "type": "object",
                      "description": "Property overrides on a subnet of a virtual network.",
                      "properties": {
                        "resourceId": {
                          "type": "string",
                          "description": "The resource ID of the subnet."
                        },
                        "labSubnetName": {
                          "type": "string",
                          "description": "The name given to the subnet within the lab."
                        },
                        "useInVmCreationPermission": {
                          "description": "Indicates whether this subnet can be used during virtual machine creation (i.e. Allow, Deny).",
                          "type": "string",
                          "enum": [
                            "Default",
                            "Deny",
                            "Allow"
                          ],
                          "x-ms-enum": {
                            "name": "UsagePermissionType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Default",
                                "value": "Default"
                              },
                              {
                                "name": "Deny",
                                "value": "Deny"
                              },
                              {
                                "name": "Allow",
                                "value": "Allow"
                              }
                            ]
                          }
                        },
                        "usePublicIpAddressPermission": {
                          "description": "Indicates whether public IP addresses can be assigned to virtual machines on this subnet (i.e. Allow, Deny).",
                          "type": "string",
                          "enum": [
                            "Default",
                            "Deny",
                            "Allow"
                          ],
                          "x-ms-enum": {
                            "name": "UsagePermissionType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Default",
                                "value": "Default"
                              },
                              {
                                "name": "Deny",
                                "value": "Deny"
                              },
                              {
                                "name": "Allow",
                                "value": "Allow"
                              }
                            ]
                          }
                        },
                        "sharedPublicIpAddressConfiguration": {
                          "description": "Properties that virtual machines on this subnet will share.",
                          "type": "object",
                          "properties": {
                            "allowedPorts": {
                              "type": "array",
                              "description": "Backend ports that virtual machines on this subnet are allowed to expose",
                              "items": {
                                "type": "object",
                                "description": "Properties of a network port.",
                                "properties": {
                                  "transportProtocol": {
                                    "description": "Protocol type of the port.",
                                    "type": "string",
                                    "enum": [
                                      "Tcp",
                                      "Udp"
                                    ],
                                    "x-ms-enum": {
                                      "name": "TransportProtocol",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Tcp",
                                          "value": "Tcp"
                                        },
                                        {
                                          "name": "Udp",
                                          "value": "Udp"
                                        }
                                      ]
                                    }
                                  },
                                  "backendPort": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Backend port of the target virtual machine."
                                  }
                                }
                              },
                              "x-ms-identifiers": []
                            }
                          }
                        },
                        "virtualNetworkPoolName": {
                          "type": "string",
                          "description": "The virtual network pool associated with this subnet."
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  },
                  "createdDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The creation date of the virtual network.",
                    "readOnly": true
                  },
                  "provisioningState": {
                    "type": "string",
                    "description": "The provisioning status of the resource.",
                    "readOnly": true
                  },
                  "uniqueIdentifier": {
                    "type": "string",
                    "description": "The unique immutable identifier of a resource (Guid).",
                    "readOnly": true
                  }
                }
              }
            },
            "required": [
              "properties"
            ]
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "VirtualNetworkProperties": {
      "type": "object",
      "description": "Properties of a virtual network.",
      "properties": {
        "allowedSubnets": {
          "type": "array",
          "description": "The allowed subnets of the virtual network.",
          "items": {
            "type": "object",
            "description": "Subnet information.",
            "properties": {
              "resourceId": {
                "type": "string",
                "description": "The resource ID of the subnet."
              },
              "labSubnetName": {
                "type": "string",
                "description": "The name of the subnet as seen in the lab."
              },
              "allowPublicIp": {
                "description": "The permission policy of the subnet for allowing public IP addresses (i.e. Allow, Deny)).",
                "type": "string",
                "enum": [
                  "Default",
                  "Deny",
                  "Allow"
                ],
                "x-ms-enum": {
                  "name": "UsagePermissionType",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Default",
                      "value": "Default"
                    },
                    {
                      "name": "Deny",
                      "value": "Deny"
                    },
                    {
                      "name": "Allow",
                      "value": "Allow"
                    }
                  ]
                }
              }
            }
          },
          "x-ms-identifiers": []
        },
        "description": {
          "type": "string",
          "description": "The description of the virtual network."
        },
        "externalProviderResourceId": {
          "type": "string",
          "description": "The Microsoft.Network resource identifier of the virtual network."
        },
        "externalSubnets": {
          "type": "array",
          "description": "The external subnet properties.",
          "items": {
            "type": "object",
            "description": "Subnet information as returned by the Microsoft.Network API.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Gets or sets the identifier."
              },
              "name": {
                "type": "string",
                "description": "Gets or sets the name."
              }
            }
          },
          "readOnly": true
        },
        "subnetOverrides": {
          "type": "array",
          "description": "The subnet overrides of the virtual network.",
          "items": {
            "type": "object",
            "description": "Property overrides on a subnet of a virtual network.",
            "properties": {
              "resourceId": {
                "type": "string",
                "description": "The resource ID of the subnet."
              },
              "labSubnetName": {
                "type": "string",
                "description": "The name given to the subnet within the lab."
              },
              "useInVmCreationPermission": {
                "description": "Indicates whether this subnet can be used during virtual machine creation (i.e. Allow, Deny).",
                "type": "string",
                "enum": [
                  "Default",
                  "Deny",
                  "Allow"
                ],
                "x-ms-enum": {
                  "name": "UsagePermissionType",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Default",
                      "value": "Default"
                    },
                    {
                      "name": "Deny",
                      "value": "Deny"
                    },
                    {
                      "name": "Allow",
                      "value": "Allow"
                    }
                  ]
                }
              },
              "usePublicIpAddressPermission": {
                "description": "Indicates whether public IP addresses can be assigned to virtual machines on this subnet (i.e. Allow, Deny).",
                "type": "string",
                "enum": [
                  "Default",
                  "Deny",
                  "Allow"
                ],
                "x-ms-enum": {
                  "name": "UsagePermissionType",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Default",
                      "value": "Default"
                    },
                    {
                      "name": "Deny",
                      "value": "Deny"
                    },
                    {
                      "name": "Allow",
                      "value": "Allow"
                    }
                  ]
                }
              },
              "sharedPublicIpAddressConfiguration": {
                "description": "Properties that virtual machines on this subnet will share.",
                "type": "object",
                "properties": {
                  "allowedPorts": {
                    "type": "array",
                    "description": "Backend ports that virtual machines on this subnet are allowed to expose",
                    "items": {
                      "type": "object",
                      "description": "Properties of a network port.",
                      "properties": {
                        "transportProtocol": {
                          "description": "Protocol type of the port.",
                          "type": "string",
                          "enum": [
                            "Tcp",
                            "Udp"
                          ],
                          "x-ms-enum": {
                            "name": "TransportProtocol",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Tcp",
                                "value": "Tcp"
                              },
                              {
                                "name": "Udp",
                                "value": "Udp"
                              }
                            ]
                          }
                        },
                        "backendPort": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Backend port of the target virtual machine."
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  }
                }
              },
              "virtualNetworkPoolName": {
                "type": "string",
                "description": "The virtual network pool associated with this subnet."
              }
            }
          },
          "x-ms-identifiers": []
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "description": "The creation date of the virtual network.",
          "readOnly": true
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning status of the resource.",
          "readOnly": true
        },
        "uniqueIdentifier": {
          "type": "string",
          "description": "The unique immutable identifier of a resource (Guid).",
          "readOnly": true
        }
      }
    },
    "WeekDetails": {
      "type": "object",
      "description": "Properties of a weekly schedule.",
      "properties": {
        "weekdays": {
          "type": "array",
          "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
          "items": {
            "type": "string"
          }
        },
        "time": {
          "type": "string",
          "description": "The time of the day the schedule will occur."
        }
      }
    },
    "WindowsOsInfo": {
      "type": "object",
      "description": "Information about a Windows OS.",
      "properties": {
        "windowsOsState": {
          "description": "The state of the Windows OS (i.e. NonSysprepped, SysprepRequested, SysprepApplied).",
          "type": "string",
          "enum": [
            "NonSysprepped",
            "SysprepRequested",
            "SysprepApplied"
          ],
          "x-ms-enum": {
            "name": "WindowsOsState",
            "modelAsString": true,
            "values": [
              {
                "name": "NonSysprepped",
                "value": "NonSysprepped"
              },
              {
                "name": "SysprepRequested",
                "value": "SysprepRequested"
              },
              {
                "name": "SysprepApplied",
                "value": "SysprepApplied"
              }
            ]
          }
        }
      }
    },
    "WindowsOsState": {
      "type": "string",
      "description": "The state of the Windows OS (i.e. NonSysprepped, SysprepRequested, SysprepApplied).",
      "enum": [
        "NonSysprepped",
        "SysprepRequested",
        "SysprepApplied"
      ],
      "x-ms-enum": {
        "name": "WindowsOsState",
        "modelAsString": true,
        "values": [
          {
            "name": "NonSysprepped",
            "value": "NonSysprepped"
          },
          {
            "name": "SysprepRequested",
            "value": "SysprepRequested"
          },
          {
            "name": "SysprepApplied",
            "value": "SysprepApplied"
          }
        ]
      }
    }
  },
  "parameters": {}
}