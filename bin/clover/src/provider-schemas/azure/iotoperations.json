{
  "swagger": "2.0",
  "info": {
    "title": "Azure iotoperations",
    "version": "2025-10-01",
    "description": "Azure iotoperations service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/providers/Microsoft.IoTOperations/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of operations supported by the resource provider",
                  "items": {
                    "type": "object",
                    "title": "REST API Operation",
                    "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
                        "readOnly": true
                      },
                      "isDataAction": {
                        "type": "boolean",
                        "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
                        "readOnly": true
                      },
                      "display": {
                        "type": "object",
                        "description": "Localized display information for this particular operation.",
                        "properties": {
                          "provider": {
                            "type": "string",
                            "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
                            "readOnly": true
                          },
                          "resource": {
                            "type": "string",
                            "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
                            "readOnly": true
                          },
                          "operation": {
                            "type": "string",
                            "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
                            "readOnly": true
                          },
                          "description": {
                            "type": "string",
                            "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
                            "readOnly": true
                          }
                        }
                      },
                      "origin": {
                        "type": "string",
                        "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
                        "enum": [
                          "user",
                          "system",
                          "user,system"
                        ],
                        "x-ms-enum": {
                          "name": "Origin",
                          "modelAsString": true
                        },
                        "readOnly": true
                      },
                      "actionType": {
                        "type": "string",
                        "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
                        "enum": [
                          "Internal"
                        ],
                        "x-ms-enum": {
                          "name": "ActionType",
                          "modelAsString": true
                        },
                        "readOnly": true
                      }
                    }
                  },
                  "readOnly": true,
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "URL to get the next set of operation list results (if there are any).",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.IoTOperations/instances": {
      "get": {
        "operationId": "Instance_ListBySubscription",
        "tags": [
          "Instance"
        ],
        "description": "List InstanceResource resources by subscription ID",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a InstanceResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The InstanceResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "A Instance resource is a logical container for a set of child resources.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "Detailed description of the Instance."
                          },
                          "provisioningState": {
                            "description": "The status of the last operation.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "Resource is getting provisioned."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "Resource is Updating."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Resource is Deleting."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "Resource has been Accepted."
                                }
                              ]
                            }
                          },
                          "version": {
                            "type": "string",
                            "description": "The Azure IoT Operations version.",
                            "readOnly": true
                          },
                          "schemaRegistryRef": {
                            "description": "The reference to the Schema Registry for this AIO Instance.",
                            "type": "object",
                            "properties": {
                              "resourceId": {
                                "description": "The resource ID of the Schema Registry.",
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.DeviceRegistry/schemaRegistries"
                                    }
                                  ]
                                }
                              }
                            },
                            "required": [
                              "resourceId"
                            ]
                          },
                          "defaultSecretProviderClassRef": {
                            "description": "The reference to the AIO Secret provider class.",
                            "type": "object",
                            "properties": {
                              "resourceId": {
                                "description": "The resource ID of the AIO Secret provider class.",
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.SecretSyncController/azureKeyVaultSecretProviderClasses"
                                    }
                                  ]
                                }
                              }
                            },
                            "required": [
                              "resourceId"
                            ]
                          },
                          "features": {
                            "type": "object",
                            "description": "The features of the AIO Instance.",
                            "additionalProperties": {
                              "type": "object",
                              "description": "The features of the AIO Instance.",
                              "properties": {
                                "mode": {
                                  "description": "The state of the feature.",
                                  "type": "string",
                                  "enum": [
                                    "Stable",
                                    "Preview",
                                    "Disabled"
                                  ],
                                  "x-ms-enum": {
                                    "name": "InstanceFeatureMode",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Stable",
                                        "value": "Stable",
                                        "description": "Opt in to enable a stable feature"
                                      },
                                      {
                                        "name": "Preview",
                                        "value": "Preview",
                                        "description": "Opt in to enable a preview feature"
                                      },
                                      {
                                        "name": "Disabled",
                                        "value": "Disabled",
                                        "description": "Opt out of a feature"
                                      }
                                    ]
                                  }
                                },
                                "settings": {
                                  "type": "object",
                                  "description": "The settings of the feature.",
                                  "additionalProperties": {
                                    "type": "string",
                                    "description": "Mode properties",
                                    "enum": [
                                      "Enabled",
                                      "Disabled"
                                    ],
                                    "x-ms-enum": {
                                      "name": "OperationalMode",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Enabled",
                                          "value": "Enabled",
                                          "description": "Enabled is equivalent to True"
                                        },
                                        {
                                          "name": "Disabled",
                                          "value": "Disabled",
                                          "description": "Disabled is equivalent to False."
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "adrNamespaceRef": {
                            "description": "The Azure Device Registry Namespace used by Assets, Discovered Assets and devices",
                            "type": "object",
                            "properties": {
                              "resourceId": {
                                "description": "The resource ID of the Azure Device Registry Namespace.",
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.DeviceRegistry/namespaces"
                                    }
                                  ]
                                }
                              }
                            },
                            "required": [
                              "resourceId"
                            ]
                          },
                          "healthState": {
                            "type": "string",
                            "description": "The health state of the resource.",
                            "default": "Unknown",
                            "enum": [
                              "Available",
                              "Degraded",
                              "Unavailable",
                              "Unknown"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceHealthState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Available",
                                  "value": "Available",
                                  "description": "Resource is Available and functioning as expected."
                                },
                                {
                                  "name": "Degraded",
                                  "value": "Degraded",
                                  "description": "Resource health is degraded."
                                },
                                {
                                  "name": "Unavailable",
                                  "value": "Unavailable",
                                  "description": "Resource is not functioning as expected."
                                },
                                {
                                  "name": "Unknown",
                                  "value": "Unknown",
                                  "description": "Resource state is unknown."
                                }
                              ]
                            },
                            "readOnly": true
                          }
                        },
                        "required": [
                          "schemaRegistryRef"
                        ]
                      },
                      "extendedLocation": {
                        "description": "Edge location of the resource.",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the extended location."
                          },
                          "type": {
                            "description": "Type of ExtendedLocation.",
                            "type": "string",
                            "enum": [
                              "CustomLocation"
                            ],
                            "x-ms-enum": {
                              "name": "ExtendedLocationType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "CustomLocation",
                                  "value": "CustomLocation",
                                  "description": "CustomLocation type"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "name",
                          "type"
                        ]
                      },
                      "identity": {
                        "description": "The managed service identities assigned to this resource.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "tenantId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned,UserAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedServiceIdentityType",
                              "modelAsString": true
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "title": "User-Assigned Identities",
                            "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                            "additionalProperties": {
                              "x-nullable": true,
                              "type": "object",
                              "description": "User assigned identity properties",
                              "properties": {
                                "principalId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The principal ID of the assigned identity.",
                                  "readOnly": true
                                },
                                "clientId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The client ID of the assigned identity.",
                                  "readOnly": true
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "extendedLocation"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperations/instances": {
      "get": {
        "operationId": "Instance_ListByResourceGroup",
        "tags": [
          "Instance"
        ],
        "description": "List InstanceResource resources by resource group",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a InstanceResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The InstanceResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "A Instance resource is a logical container for a set of child resources.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "Detailed description of the Instance."
                          },
                          "provisioningState": {
                            "description": "The status of the last operation.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "Resource is getting provisioned."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "Resource is Updating."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Resource is Deleting."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "Resource has been Accepted."
                                }
                              ]
                            }
                          },
                          "version": {
                            "type": "string",
                            "description": "The Azure IoT Operations version.",
                            "readOnly": true
                          },
                          "schemaRegistryRef": {
                            "description": "The reference to the Schema Registry for this AIO Instance.",
                            "type": "object",
                            "properties": {
                              "resourceId": {
                                "description": "The resource ID of the Schema Registry.",
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.DeviceRegistry/schemaRegistries"
                                    }
                                  ]
                                }
                              }
                            },
                            "required": [
                              "resourceId"
                            ]
                          },
                          "defaultSecretProviderClassRef": {
                            "description": "The reference to the AIO Secret provider class.",
                            "type": "object",
                            "properties": {
                              "resourceId": {
                                "description": "The resource ID of the AIO Secret provider class.",
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.SecretSyncController/azureKeyVaultSecretProviderClasses"
                                    }
                                  ]
                                }
                              }
                            },
                            "required": [
                              "resourceId"
                            ]
                          },
                          "features": {
                            "type": "object",
                            "description": "The features of the AIO Instance.",
                            "additionalProperties": {
                              "type": "object",
                              "description": "The features of the AIO Instance.",
                              "properties": {
                                "mode": {
                                  "description": "The state of the feature.",
                                  "type": "string",
                                  "enum": [
                                    "Stable",
                                    "Preview",
                                    "Disabled"
                                  ],
                                  "x-ms-enum": {
                                    "name": "InstanceFeatureMode",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Stable",
                                        "value": "Stable",
                                        "description": "Opt in to enable a stable feature"
                                      },
                                      {
                                        "name": "Preview",
                                        "value": "Preview",
                                        "description": "Opt in to enable a preview feature"
                                      },
                                      {
                                        "name": "Disabled",
                                        "value": "Disabled",
                                        "description": "Opt out of a feature"
                                      }
                                    ]
                                  }
                                },
                                "settings": {
                                  "type": "object",
                                  "description": "The settings of the feature.",
                                  "additionalProperties": {
                                    "type": "string",
                                    "description": "Mode properties",
                                    "enum": [
                                      "Enabled",
                                      "Disabled"
                                    ],
                                    "x-ms-enum": {
                                      "name": "OperationalMode",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Enabled",
                                          "value": "Enabled",
                                          "description": "Enabled is equivalent to True"
                                        },
                                        {
                                          "name": "Disabled",
                                          "value": "Disabled",
                                          "description": "Disabled is equivalent to False."
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "adrNamespaceRef": {
                            "description": "The Azure Device Registry Namespace used by Assets, Discovered Assets and devices",
                            "type": "object",
                            "properties": {
                              "resourceId": {
                                "description": "The resource ID of the Azure Device Registry Namespace.",
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.DeviceRegistry/namespaces"
                                    }
                                  ]
                                }
                              }
                            },
                            "required": [
                              "resourceId"
                            ]
                          },
                          "healthState": {
                            "type": "string",
                            "description": "The health state of the resource.",
                            "default": "Unknown",
                            "enum": [
                              "Available",
                              "Degraded",
                              "Unavailable",
                              "Unknown"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceHealthState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Available",
                                  "value": "Available",
                                  "description": "Resource is Available and functioning as expected."
                                },
                                {
                                  "name": "Degraded",
                                  "value": "Degraded",
                                  "description": "Resource health is degraded."
                                },
                                {
                                  "name": "Unavailable",
                                  "value": "Unavailable",
                                  "description": "Resource is not functioning as expected."
                                },
                                {
                                  "name": "Unknown",
                                  "value": "Unknown",
                                  "description": "Resource state is unknown."
                                }
                              ]
                            },
                            "readOnly": true
                          }
                        },
                        "required": [
                          "schemaRegistryRef"
                        ]
                      },
                      "extendedLocation": {
                        "description": "Edge location of the resource.",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the extended location."
                          },
                          "type": {
                            "description": "Type of ExtendedLocation.",
                            "type": "string",
                            "enum": [
                              "CustomLocation"
                            ],
                            "x-ms-enum": {
                              "name": "ExtendedLocationType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "CustomLocation",
                                  "value": "CustomLocation",
                                  "description": "CustomLocation type"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "name",
                          "type"
                        ]
                      },
                      "identity": {
                        "description": "The managed service identities assigned to this resource.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "tenantId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned,UserAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedServiceIdentityType",
                              "modelAsString": true
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "title": "User-Assigned Identities",
                            "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                            "additionalProperties": {
                              "x-nullable": true,
                              "type": "object",
                              "description": "User assigned identity properties",
                              "properties": {
                                "principalId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The principal ID of the assigned identity.",
                                  "readOnly": true
                                },
                                "clientId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The client ID of the assigned identity.",
                                  "readOnly": true
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "extendedLocation"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperations/instances/{instanceName}": {
      "get": {
        "operationId": "Instance_Get",
        "tags": [
          "Instance"
        ],
        "description": "Get a InstanceResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A Instance resource is a logical container for a set of child resources.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "Detailed description of the Instance."
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is getting provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Resource is Updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is Deleting."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been Accepted."
                          }
                        ]
                      }
                    },
                    "version": {
                      "type": "string",
                      "description": "The Azure IoT Operations version.",
                      "readOnly": true
                    },
                    "schemaRegistryRef": {
                      "description": "The reference to the Schema Registry for this AIO Instance.",
                      "type": "object",
                      "properties": {
                        "resourceId": {
                          "description": "The resource ID of the Schema Registry.",
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.DeviceRegistry/schemaRegistries"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "resourceId"
                      ]
                    },
                    "defaultSecretProviderClassRef": {
                      "description": "The reference to the AIO Secret provider class.",
                      "type": "object",
                      "properties": {
                        "resourceId": {
                          "description": "The resource ID of the AIO Secret provider class.",
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.SecretSyncController/azureKeyVaultSecretProviderClasses"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "resourceId"
                      ]
                    },
                    "features": {
                      "type": "object",
                      "description": "The features of the AIO Instance.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "The features of the AIO Instance.",
                        "properties": {
                          "mode": {
                            "description": "The state of the feature.",
                            "type": "string",
                            "enum": [
                              "Stable",
                              "Preview",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "InstanceFeatureMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Stable",
                                  "value": "Stable",
                                  "description": "Opt in to enable a stable feature"
                                },
                                {
                                  "name": "Preview",
                                  "value": "Preview",
                                  "description": "Opt in to enable a preview feature"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled",
                                  "description": "Opt out of a feature"
                                }
                              ]
                            }
                          },
                          "settings": {
                            "type": "object",
                            "description": "The settings of the feature.",
                            "additionalProperties": {
                              "type": "string",
                              "description": "Mode properties",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "OperationalMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled",
                                    "description": "Enabled is equivalent to True"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled",
                                    "description": "Disabled is equivalent to False."
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "adrNamespaceRef": {
                      "description": "The Azure Device Registry Namespace used by Assets, Discovered Assets and devices",
                      "type": "object",
                      "properties": {
                        "resourceId": {
                          "description": "The resource ID of the Azure Device Registry Namespace.",
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.DeviceRegistry/namespaces"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "resourceId"
                      ]
                    },
                    "healthState": {
                      "type": "string",
                      "description": "The health state of the resource.",
                      "default": "Unknown",
                      "enum": [
                        "Available",
                        "Degraded",
                        "Unavailable",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceHealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "Resource is Available and functioning as expected."
                          },
                          {
                            "name": "Degraded",
                            "value": "Degraded",
                            "description": "Resource health is degraded."
                          },
                          {
                            "name": "Unavailable",
                            "value": "Unavailable",
                            "description": "Resource is not functioning as expected."
                          },
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "Resource state is unknown."
                          }
                        ]
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "schemaRegistryRef"
                  ]
                },
                "extendedLocation": {
                  "description": "Edge location of the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "Type of ExtendedLocation.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "CustomLocation type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              },
              "required": [
                "extendedLocation"
              ]
            }
          }
        }
      },
      "put": {
        "operationId": "Instance_CreateOrUpdate",
        "tags": [
          "Instance"
        ],
        "description": "Create a InstanceResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A Instance resource is a logical container for a set of child resources.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "Detailed description of the Instance."
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is getting provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Resource is Updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is Deleting."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been Accepted."
                          }
                        ]
                      }
                    },
                    "version": {
                      "type": "string",
                      "description": "The Azure IoT Operations version.",
                      "readOnly": true
                    },
                    "schemaRegistryRef": {
                      "description": "The reference to the Schema Registry for this AIO Instance.",
                      "type": "object",
                      "properties": {
                        "resourceId": {
                          "description": "The resource ID of the Schema Registry.",
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.DeviceRegistry/schemaRegistries"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "resourceId"
                      ]
                    },
                    "defaultSecretProviderClassRef": {
                      "description": "The reference to the AIO Secret provider class.",
                      "type": "object",
                      "properties": {
                        "resourceId": {
                          "description": "The resource ID of the AIO Secret provider class.",
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.SecretSyncController/azureKeyVaultSecretProviderClasses"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "resourceId"
                      ]
                    },
                    "features": {
                      "type": "object",
                      "description": "The features of the AIO Instance.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "The features of the AIO Instance.",
                        "properties": {
                          "mode": {
                            "description": "The state of the feature.",
                            "type": "string",
                            "enum": [
                              "Stable",
                              "Preview",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "InstanceFeatureMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Stable",
                                  "value": "Stable",
                                  "description": "Opt in to enable a stable feature"
                                },
                                {
                                  "name": "Preview",
                                  "value": "Preview",
                                  "description": "Opt in to enable a preview feature"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled",
                                  "description": "Opt out of a feature"
                                }
                              ]
                            }
                          },
                          "settings": {
                            "type": "object",
                            "description": "The settings of the feature.",
                            "additionalProperties": {
                              "type": "string",
                              "description": "Mode properties",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "OperationalMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled",
                                    "description": "Enabled is equivalent to True"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled",
                                    "description": "Disabled is equivalent to False."
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "adrNamespaceRef": {
                      "description": "The Azure Device Registry Namespace used by Assets, Discovered Assets and devices",
                      "type": "object",
                      "properties": {
                        "resourceId": {
                          "description": "The resource ID of the Azure Device Registry Namespace.",
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.DeviceRegistry/namespaces"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "resourceId"
                      ]
                    },
                    "healthState": {
                      "type": "string",
                      "description": "The health state of the resource.",
                      "default": "Unknown",
                      "enum": [
                        "Available",
                        "Degraded",
                        "Unavailable",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceHealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "Resource is Available and functioning as expected."
                          },
                          {
                            "name": "Degraded",
                            "value": "Degraded",
                            "description": "Resource health is degraded."
                          },
                          {
                            "name": "Unavailable",
                            "value": "Unavailable",
                            "description": "Resource is not functioning as expected."
                          },
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "Resource state is unknown."
                          }
                        ]
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "schemaRegistryRef"
                  ]
                },
                "extendedLocation": {
                  "description": "Edge location of the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "Type of ExtendedLocation.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "CustomLocation type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              },
              "required": [
                "extendedLocation"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'InstanceResource' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "A Instance resource is a logical container for a set of child resources.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "Detailed description of the Instance."
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is getting provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Resource is Updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is Deleting."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been Accepted."
                          }
                        ]
                      }
                    },
                    "version": {
                      "type": "string",
                      "description": "The Azure IoT Operations version.",
                      "readOnly": true
                    },
                    "schemaRegistryRef": {
                      "description": "The reference to the Schema Registry for this AIO Instance.",
                      "type": "object",
                      "properties": {
                        "resourceId": {
                          "description": "The resource ID of the Schema Registry.",
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.DeviceRegistry/schemaRegistries"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "resourceId"
                      ]
                    },
                    "defaultSecretProviderClassRef": {
                      "description": "The reference to the AIO Secret provider class.",
                      "type": "object",
                      "properties": {
                        "resourceId": {
                          "description": "The resource ID of the AIO Secret provider class.",
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.SecretSyncController/azureKeyVaultSecretProviderClasses"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "resourceId"
                      ]
                    },
                    "features": {
                      "type": "object",
                      "description": "The features of the AIO Instance.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "The features of the AIO Instance.",
                        "properties": {
                          "mode": {
                            "description": "The state of the feature.",
                            "type": "string",
                            "enum": [
                              "Stable",
                              "Preview",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "InstanceFeatureMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Stable",
                                  "value": "Stable",
                                  "description": "Opt in to enable a stable feature"
                                },
                                {
                                  "name": "Preview",
                                  "value": "Preview",
                                  "description": "Opt in to enable a preview feature"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled",
                                  "description": "Opt out of a feature"
                                }
                              ]
                            }
                          },
                          "settings": {
                            "type": "object",
                            "description": "The settings of the feature.",
                            "additionalProperties": {
                              "type": "string",
                              "description": "Mode properties",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "OperationalMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled",
                                    "description": "Enabled is equivalent to True"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled",
                                    "description": "Disabled is equivalent to False."
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "adrNamespaceRef": {
                      "description": "The Azure Device Registry Namespace used by Assets, Discovered Assets and devices",
                      "type": "object",
                      "properties": {
                        "resourceId": {
                          "description": "The resource ID of the Azure Device Registry Namespace.",
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.DeviceRegistry/namespaces"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "resourceId"
                      ]
                    },
                    "healthState": {
                      "type": "string",
                      "description": "The health state of the resource.",
                      "default": "Unknown",
                      "enum": [
                        "Available",
                        "Degraded",
                        "Unavailable",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceHealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "Resource is Available and functioning as expected."
                          },
                          {
                            "name": "Degraded",
                            "value": "Degraded",
                            "description": "Resource health is degraded."
                          },
                          {
                            "name": "Unavailable",
                            "value": "Unavailable",
                            "description": "Resource is not functioning as expected."
                          },
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "Resource state is unknown."
                          }
                        ]
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "schemaRegistryRef"
                  ]
                },
                "extendedLocation": {
                  "description": "Edge location of the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "Type of ExtendedLocation.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "CustomLocation type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              },
              "required": [
                "extendedLocation"
              ]
            }
          },
          "201": {
            "description": "Resource 'InstanceResource' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "A Instance resource is a logical container for a set of child resources.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "Detailed description of the Instance."
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is getting provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Resource is Updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is Deleting."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been Accepted."
                          }
                        ]
                      }
                    },
                    "version": {
                      "type": "string",
                      "description": "The Azure IoT Operations version.",
                      "readOnly": true
                    },
                    "schemaRegistryRef": {
                      "description": "The reference to the Schema Registry for this AIO Instance.",
                      "type": "object",
                      "properties": {
                        "resourceId": {
                          "description": "The resource ID of the Schema Registry.",
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.DeviceRegistry/schemaRegistries"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "resourceId"
                      ]
                    },
                    "defaultSecretProviderClassRef": {
                      "description": "The reference to the AIO Secret provider class.",
                      "type": "object",
                      "properties": {
                        "resourceId": {
                          "description": "The resource ID of the AIO Secret provider class.",
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.SecretSyncController/azureKeyVaultSecretProviderClasses"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "resourceId"
                      ]
                    },
                    "features": {
                      "type": "object",
                      "description": "The features of the AIO Instance.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "The features of the AIO Instance.",
                        "properties": {
                          "mode": {
                            "description": "The state of the feature.",
                            "type": "string",
                            "enum": [
                              "Stable",
                              "Preview",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "InstanceFeatureMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Stable",
                                  "value": "Stable",
                                  "description": "Opt in to enable a stable feature"
                                },
                                {
                                  "name": "Preview",
                                  "value": "Preview",
                                  "description": "Opt in to enable a preview feature"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled",
                                  "description": "Opt out of a feature"
                                }
                              ]
                            }
                          },
                          "settings": {
                            "type": "object",
                            "description": "The settings of the feature.",
                            "additionalProperties": {
                              "type": "string",
                              "description": "Mode properties",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "OperationalMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled",
                                    "description": "Enabled is equivalent to True"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled",
                                    "description": "Disabled is equivalent to False."
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "adrNamespaceRef": {
                      "description": "The Azure Device Registry Namespace used by Assets, Discovered Assets and devices",
                      "type": "object",
                      "properties": {
                        "resourceId": {
                          "description": "The resource ID of the Azure Device Registry Namespace.",
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.DeviceRegistry/namespaces"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "resourceId"
                      ]
                    },
                    "healthState": {
                      "type": "string",
                      "description": "The health state of the resource.",
                      "default": "Unknown",
                      "enum": [
                        "Available",
                        "Degraded",
                        "Unavailable",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceHealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "Resource is Available and functioning as expected."
                          },
                          {
                            "name": "Degraded",
                            "value": "Degraded",
                            "description": "Resource health is degraded."
                          },
                          {
                            "name": "Unavailable",
                            "value": "Unavailable",
                            "description": "Resource is not functioning as expected."
                          },
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "Resource state is unknown."
                          }
                        ]
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "schemaRegistryRef"
                  ]
                },
                "extendedLocation": {
                  "description": "Edge location of the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "Type of ExtendedLocation.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "CustomLocation type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              },
              "required": [
                "extendedLocation"
              ]
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Instance_Update",
        "tags": [
          "Instance"
        ],
        "description": "Update a InstanceResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The Instance update model.",
              "properties": {
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A Instance resource is a logical container for a set of child resources.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "Detailed description of the Instance."
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is getting provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Resource is Updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is Deleting."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been Accepted."
                          }
                        ]
                      }
                    },
                    "version": {
                      "type": "string",
                      "description": "The Azure IoT Operations version.",
                      "readOnly": true
                    },
                    "schemaRegistryRef": {
                      "description": "The reference to the Schema Registry for this AIO Instance.",
                      "type": "object",
                      "properties": {
                        "resourceId": {
                          "description": "The resource ID of the Schema Registry.",
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.DeviceRegistry/schemaRegistries"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "resourceId"
                      ]
                    },
                    "defaultSecretProviderClassRef": {
                      "description": "The reference to the AIO Secret provider class.",
                      "type": "object",
                      "properties": {
                        "resourceId": {
                          "description": "The resource ID of the AIO Secret provider class.",
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.SecretSyncController/azureKeyVaultSecretProviderClasses"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "resourceId"
                      ]
                    },
                    "features": {
                      "type": "object",
                      "description": "The features of the AIO Instance.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "The features of the AIO Instance.",
                        "properties": {
                          "mode": {
                            "description": "The state of the feature.",
                            "type": "string",
                            "enum": [
                              "Stable",
                              "Preview",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "InstanceFeatureMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Stable",
                                  "value": "Stable",
                                  "description": "Opt in to enable a stable feature"
                                },
                                {
                                  "name": "Preview",
                                  "value": "Preview",
                                  "description": "Opt in to enable a preview feature"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled",
                                  "description": "Opt out of a feature"
                                }
                              ]
                            }
                          },
                          "settings": {
                            "type": "object",
                            "description": "The settings of the feature.",
                            "additionalProperties": {
                              "type": "string",
                              "description": "Mode properties",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "OperationalMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled",
                                    "description": "Enabled is equivalent to True"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled",
                                    "description": "Disabled is equivalent to False."
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "adrNamespaceRef": {
                      "description": "The Azure Device Registry Namespace used by Assets, Discovered Assets and devices",
                      "type": "object",
                      "properties": {
                        "resourceId": {
                          "description": "The resource ID of the Azure Device Registry Namespace.",
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.DeviceRegistry/namespaces"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "resourceId"
                      ]
                    },
                    "healthState": {
                      "type": "string",
                      "description": "The health state of the resource.",
                      "default": "Unknown",
                      "enum": [
                        "Available",
                        "Degraded",
                        "Unavailable",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceHealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "Resource is Available and functioning as expected."
                          },
                          {
                            "name": "Degraded",
                            "value": "Degraded",
                            "description": "Resource health is degraded."
                          },
                          {
                            "name": "Unavailable",
                            "value": "Unavailable",
                            "description": "Resource is not functioning as expected."
                          },
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "Resource state is unknown."
                          }
                        ]
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "schemaRegistryRef"
                  ]
                },
                "extendedLocation": {
                  "description": "Edge location of the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "Type of ExtendedLocation.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "CustomLocation type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                },
                "identity": {
                  "description": "The managed service identities assigned to this resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              },
              "required": [
                "extendedLocation"
              ]
            }
          }
        }
      },
      "delete": {
        "operationId": "Instance_Delete",
        "tags": [
          "Instance"
        ],
        "description": "Delete a InstanceResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperations/instances/{instanceName}/akriConnectorTemplates": {
      "get": {
        "operationId": "AkriConnectorTemplate_ListByInstanceResource",
        "tags": [
          "AkriConnectorTemplate"
        ],
        "description": "List AkriConnectorTemplateResource resources by InstanceResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a AkriConnectorTemplateResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The AkriConnectorTemplateResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "AkriConnectorTemplate resource.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "The status of the last operation.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "Resource is getting provisioned."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "Resource is Updating."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Resource is Deleting."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "Resource has been Accepted."
                                }
                              ]
                            }
                          },
                          "aioMetadata": {
                            "description": "Metadata about AIO.",
                            "type": "object",
                            "properties": {
                              "aioMinVersion": {
                                "type": "string",
                                "description": "The minimum version of AIO required for the connector."
                              },
                              "aioMaxVersion": {
                                "type": "string",
                                "description": "The maximum version of AIO required for the connector."
                              }
                            }
                          },
                          "runtimeConfiguration": {
                            "description": "The runtime configuration for the Connector template.",
                            "type": "object",
                            "properties": {
                              "runtimeConfigurationType": {
                                "description": "Runtime configuration type for the Connector template.",
                                "type": "string",
                                "enum": [
                                  "ManagedConfiguration"
                                ],
                                "x-ms-enum": {
                                  "name": "AkriConnectorTemplateRuntimeConfigurationType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "ManagedConfiguration",
                                      "value": "ManagedConfiguration",
                                      "description": "Managed Configuration Type."
                                    }
                                  ]
                                }
                              }
                            },
                            "discriminator": "runtimeConfigurationType",
                            "required": [
                              "runtimeConfigurationType"
                            ]
                          },
                          "diagnostics": {
                            "description": "Diagnostics settings for the Connector template.",
                            "type": "object",
                            "properties": {
                              "logs": {
                                "description": "The log settings for the Connector template.",
                                "type": "object",
                                "properties": {
                                  "level": {
                                    "type": "string",
                                    "description": "The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.",
                                    "default": "info"
                                  }
                                }
                              }
                            },
                            "required": [
                              "logs"
                            ]
                          },
                          "deviceInboundEndpointTypes": {
                            "type": "array",
                            "description": "Device inbound endpoint types.",
                            "minItems": 1,
                            "items": {
                              "type": "object",
                              "description": "AkriConnectorTemplateDeviceInboundEndpointType properties.",
                              "properties": {
                                "displayName": {
                                  "type": "string",
                                  "description": "The display name of the device inbound endpoint."
                                },
                                "endpointType": {
                                  "description": "The type of the device inbound endpoint.",
                                  "type": "string",
                                  "minLength": 1
                                },
                                "version": {
                                  "description": "The version of the device inbound endpoint.",
                                  "type": "string",
                                  "minLength": 1
                                }
                              },
                              "required": [
                                "endpointType"
                              ]
                            },
                            "x-ms-identifiers": [
                              "endpointType",
                              "version"
                            ]
                          },
                          "mqttConnectionConfiguration": {
                            "description": "Mqtt connection configuration settings.",
                            "type": "object",
                            "properties": {
                              "authentication": {
                                "description": "Authentication properties.",
                                "type": "object",
                                "properties": {
                                  "method": {
                                    "description": "The authentication method for the MQTT connection.",
                                    "type": "string",
                                    "enum": [
                                      "ServiceAccountToken"
                                    ],
                                    "x-ms-enum": {
                                      "name": "AkriConnectorsMqttAuthenticationMethod",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "ServiceAccountToken",
                                          "value": "ServiceAccountToken",
                                          "description": "Service Account Token authentication."
                                        }
                                      ]
                                    }
                                  }
                                },
                                "discriminator": "method",
                                "required": [
                                  "method"
                                ]
                              },
                              "host": {
                                "type": "string",
                                "description": "Host of the Broker in the form of <hostname>:<port>."
                              },
                              "protocol": {
                                "description": "The protocol to use for the connection. Currently only `mqtt` is supported.",
                                "type": "string",
                                "enum": [
                                  "Mqtt"
                                ],
                                "x-ms-enum": {
                                  "name": "AkriConnectorsMqttProtocolType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Mqtt",
                                      "value": "Mqtt",
                                      "description": "Mqtt protocol."
                                    }
                                  ]
                                }
                              },
                              "keepAliveSeconds": {
                                "type": "integer",
                                "format": "int32",
                                "description": "KeepAlive for connection in seconds.",
                                "minimum": 0
                              },
                              "maxInflightMessages": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The max number of messages to keep in flight. For subscribe, this is the receive maximum. For publish, this is the maximum number of messages to send before waiting for an ack.",
                                "minimum": 0
                              },
                              "sessionExpirySeconds": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Session expiry in seconds.",
                                "minimum": 0
                              },
                              "tls": {
                                "description": "TLS configuration.",
                                "type": "object",
                                "properties": {
                                  "mode": {
                                    "type": "string",
                                    "description": "Mode for TLS.",
                                    "default": "Enabled",
                                    "enum": [
                                      "Enabled",
                                      "Disabled"
                                    ],
                                    "x-ms-enum": {
                                      "name": "OperationalMode",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Enabled",
                                          "value": "Enabled",
                                          "description": "Enabled is equivalent to True"
                                        },
                                        {
                                          "name": "Disabled",
                                          "value": "Disabled",
                                          "description": "Disabled is equivalent to False."
                                        }
                                      ]
                                    }
                                  },
                                  "trustedCaCertificateConfigMapRef": {
                                    "type": "string",
                                    "description": "Trusted CA certificate config map."
                                  }
                                }
                              }
                            }
                          },
                          "connectorMetadataRef": {
                            "type": "string",
                            "description": "A reference to a connector metadata document reference in a container registry."
                          },
                          "healthState": {
                            "type": "string",
                            "description": "The health state of the resource.",
                            "default": "Unknown",
                            "enum": [
                              "Available",
                              "Degraded",
                              "Unavailable",
                              "Unknown"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceHealthState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Available",
                                  "value": "Available",
                                  "description": "Resource is Available and functioning as expected."
                                },
                                {
                                  "name": "Degraded",
                                  "value": "Degraded",
                                  "description": "Resource health is degraded."
                                },
                                {
                                  "name": "Unavailable",
                                  "value": "Unavailable",
                                  "description": "Resource is not functioning as expected."
                                },
                                {
                                  "name": "Unknown",
                                  "value": "Unknown",
                                  "description": "Resource state is unknown."
                                }
                              ]
                            },
                            "readOnly": true
                          }
                        },
                        "required": [
                          "runtimeConfiguration",
                          "deviceInboundEndpointTypes"
                        ]
                      },
                      "extendedLocation": {
                        "description": "Edge location of the resource.",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the extended location."
                          },
                          "type": {
                            "description": "Type of ExtendedLocation.",
                            "type": "string",
                            "enum": [
                              "CustomLocation"
                            ],
                            "x-ms-enum": {
                              "name": "ExtendedLocationType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "CustomLocation",
                                  "value": "CustomLocation",
                                  "description": "CustomLocation type"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "name",
                          "type"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperations/instances/{instanceName}/akriConnectorTemplates/{akriConnectorTemplateName}": {
      "get": {
        "operationId": "AkriConnectorTemplate_Get",
        "tags": [
          "AkriConnectorTemplate"
        ],
        "description": "Get a AkriConnectorTemplateResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "akriConnectorTemplateName",
            "in": "path",
            "description": "Name of AkriConnectorTemplate resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "AkriConnectorTemplate resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is getting provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Resource is Updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is Deleting."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been Accepted."
                          }
                        ]
                      }
                    },
                    "aioMetadata": {
                      "description": "Metadata about AIO.",
                      "type": "object",
                      "properties": {
                        "aioMinVersion": {
                          "type": "string",
                          "description": "The minimum version of AIO required for the connector."
                        },
                        "aioMaxVersion": {
                          "type": "string",
                          "description": "The maximum version of AIO required for the connector."
                        }
                      }
                    },
                    "runtimeConfiguration": {
                      "description": "The runtime configuration for the Connector template.",
                      "type": "object",
                      "properties": {
                        "runtimeConfigurationType": {
                          "description": "Runtime configuration type for the Connector template.",
                          "type": "string",
                          "enum": [
                            "ManagedConfiguration"
                          ],
                          "x-ms-enum": {
                            "name": "AkriConnectorTemplateRuntimeConfigurationType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "ManagedConfiguration",
                                "value": "ManagedConfiguration",
                                "description": "Managed Configuration Type."
                              }
                            ]
                          }
                        }
                      },
                      "discriminator": "runtimeConfigurationType",
                      "required": [
                        "runtimeConfigurationType"
                      ]
                    },
                    "diagnostics": {
                      "description": "Diagnostics settings for the Connector template.",
                      "type": "object",
                      "properties": {
                        "logs": {
                          "description": "The log settings for the Connector template.",
                          "type": "object",
                          "properties": {
                            "level": {
                              "type": "string",
                              "description": "The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.",
                              "default": "info"
                            }
                          }
                        }
                      },
                      "required": [
                        "logs"
                      ]
                    },
                    "deviceInboundEndpointTypes": {
                      "type": "array",
                      "description": "Device inbound endpoint types.",
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "description": "AkriConnectorTemplateDeviceInboundEndpointType properties.",
                        "properties": {
                          "displayName": {
                            "type": "string",
                            "description": "The display name of the device inbound endpoint."
                          },
                          "endpointType": {
                            "description": "The type of the device inbound endpoint.",
                            "type": "string",
                            "minLength": 1
                          },
                          "version": {
                            "description": "The version of the device inbound endpoint.",
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "required": [
                          "endpointType"
                        ]
                      },
                      "x-ms-identifiers": [
                        "endpointType",
                        "version"
                      ]
                    },
                    "mqttConnectionConfiguration": {
                      "description": "Mqtt connection configuration settings.",
                      "type": "object",
                      "properties": {
                        "authentication": {
                          "description": "Authentication properties.",
                          "type": "object",
                          "properties": {
                            "method": {
                              "description": "The authentication method for the MQTT connection.",
                              "type": "string",
                              "enum": [
                                "ServiceAccountToken"
                              ],
                              "x-ms-enum": {
                                "name": "AkriConnectorsMqttAuthenticationMethod",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "ServiceAccountToken",
                                    "value": "ServiceAccountToken",
                                    "description": "Service Account Token authentication."
                                  }
                                ]
                              }
                            }
                          },
                          "discriminator": "method",
                          "required": [
                            "method"
                          ]
                        },
                        "host": {
                          "type": "string",
                          "description": "Host of the Broker in the form of <hostname>:<port>."
                        },
                        "protocol": {
                          "description": "The protocol to use for the connection. Currently only `mqtt` is supported.",
                          "type": "string",
                          "enum": [
                            "Mqtt"
                          ],
                          "x-ms-enum": {
                            "name": "AkriConnectorsMqttProtocolType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Mqtt",
                                "value": "Mqtt",
                                "description": "Mqtt protocol."
                              }
                            ]
                          }
                        },
                        "keepAliveSeconds": {
                          "type": "integer",
                          "format": "int32",
                          "description": "KeepAlive for connection in seconds.",
                          "minimum": 0
                        },
                        "maxInflightMessages": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The max number of messages to keep in flight. For subscribe, this is the receive maximum. For publish, this is the maximum number of messages to send before waiting for an ack.",
                          "minimum": 0
                        },
                        "sessionExpirySeconds": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Session expiry in seconds.",
                          "minimum": 0
                        },
                        "tls": {
                          "description": "TLS configuration.",
                          "type": "object",
                          "properties": {
                            "mode": {
                              "type": "string",
                              "description": "Mode for TLS.",
                              "default": "Enabled",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "OperationalMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled",
                                    "description": "Enabled is equivalent to True"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled",
                                    "description": "Disabled is equivalent to False."
                                  }
                                ]
                              }
                            },
                            "trustedCaCertificateConfigMapRef": {
                              "type": "string",
                              "description": "Trusted CA certificate config map."
                            }
                          }
                        }
                      }
                    },
                    "connectorMetadataRef": {
                      "type": "string",
                      "description": "A reference to a connector metadata document reference in a container registry."
                    },
                    "healthState": {
                      "type": "string",
                      "description": "The health state of the resource.",
                      "default": "Unknown",
                      "enum": [
                        "Available",
                        "Degraded",
                        "Unavailable",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceHealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "Resource is Available and functioning as expected."
                          },
                          {
                            "name": "Degraded",
                            "value": "Degraded",
                            "description": "Resource health is degraded."
                          },
                          {
                            "name": "Unavailable",
                            "value": "Unavailable",
                            "description": "Resource is not functioning as expected."
                          },
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "Resource state is unknown."
                          }
                        ]
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "runtimeConfiguration",
                    "deviceInboundEndpointTypes"
                  ]
                },
                "extendedLocation": {
                  "description": "Edge location of the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "Type of ExtendedLocation.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "CustomLocation type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "AkriConnectorTemplate_CreateOrUpdate",
        "tags": [
          "AkriConnectorTemplate"
        ],
        "description": "Create a AkriConnectorTemplateResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "akriConnectorTemplateName",
            "in": "path",
            "description": "Name of AkriConnectorTemplate resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "AkriConnectorTemplate resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is getting provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Resource is Updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is Deleting."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been Accepted."
                          }
                        ]
                      }
                    },
                    "aioMetadata": {
                      "description": "Metadata about AIO.",
                      "type": "object",
                      "properties": {
                        "aioMinVersion": {
                          "type": "string",
                          "description": "The minimum version of AIO required for the connector."
                        },
                        "aioMaxVersion": {
                          "type": "string",
                          "description": "The maximum version of AIO required for the connector."
                        }
                      }
                    },
                    "runtimeConfiguration": {
                      "description": "The runtime configuration for the Connector template.",
                      "type": "object",
                      "properties": {
                        "runtimeConfigurationType": {
                          "description": "Runtime configuration type for the Connector template.",
                          "type": "string",
                          "enum": [
                            "ManagedConfiguration"
                          ],
                          "x-ms-enum": {
                            "name": "AkriConnectorTemplateRuntimeConfigurationType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "ManagedConfiguration",
                                "value": "ManagedConfiguration",
                                "description": "Managed Configuration Type."
                              }
                            ]
                          }
                        }
                      },
                      "discriminator": "runtimeConfigurationType",
                      "required": [
                        "runtimeConfigurationType"
                      ]
                    },
                    "diagnostics": {
                      "description": "Diagnostics settings for the Connector template.",
                      "type": "object",
                      "properties": {
                        "logs": {
                          "description": "The log settings for the Connector template.",
                          "type": "object",
                          "properties": {
                            "level": {
                              "type": "string",
                              "description": "The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.",
                              "default": "info"
                            }
                          }
                        }
                      },
                      "required": [
                        "logs"
                      ]
                    },
                    "deviceInboundEndpointTypes": {
                      "type": "array",
                      "description": "Device inbound endpoint types.",
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "description": "AkriConnectorTemplateDeviceInboundEndpointType properties.",
                        "properties": {
                          "displayName": {
                            "type": "string",
                            "description": "The display name of the device inbound endpoint."
                          },
                          "endpointType": {
                            "description": "The type of the device inbound endpoint.",
                            "type": "string",
                            "minLength": 1
                          },
                          "version": {
                            "description": "The version of the device inbound endpoint.",
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "required": [
                          "endpointType"
                        ]
                      },
                      "x-ms-identifiers": [
                        "endpointType",
                        "version"
                      ]
                    },
                    "mqttConnectionConfiguration": {
                      "description": "Mqtt connection configuration settings.",
                      "type": "object",
                      "properties": {
                        "authentication": {
                          "description": "Authentication properties.",
                          "type": "object",
                          "properties": {
                            "method": {
                              "description": "The authentication method for the MQTT connection.",
                              "type": "string",
                              "enum": [
                                "ServiceAccountToken"
                              ],
                              "x-ms-enum": {
                                "name": "AkriConnectorsMqttAuthenticationMethod",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "ServiceAccountToken",
                                    "value": "ServiceAccountToken",
                                    "description": "Service Account Token authentication."
                                  }
                                ]
                              }
                            }
                          },
                          "discriminator": "method",
                          "required": [
                            "method"
                          ]
                        },
                        "host": {
                          "type": "string",
                          "description": "Host of the Broker in the form of <hostname>:<port>."
                        },
                        "protocol": {
                          "description": "The protocol to use for the connection. Currently only `mqtt` is supported.",
                          "type": "string",
                          "enum": [
                            "Mqtt"
                          ],
                          "x-ms-enum": {
                            "name": "AkriConnectorsMqttProtocolType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Mqtt",
                                "value": "Mqtt",
                                "description": "Mqtt protocol."
                              }
                            ]
                          }
                        },
                        "keepAliveSeconds": {
                          "type": "integer",
                          "format": "int32",
                          "description": "KeepAlive for connection in seconds.",
                          "minimum": 0
                        },
                        "maxInflightMessages": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The max number of messages to keep in flight. For subscribe, this is the receive maximum. For publish, this is the maximum number of messages to send before waiting for an ack.",
                          "minimum": 0
                        },
                        "sessionExpirySeconds": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Session expiry in seconds.",
                          "minimum": 0
                        },
                        "tls": {
                          "description": "TLS configuration.",
                          "type": "object",
                          "properties": {
                            "mode": {
                              "type": "string",
                              "description": "Mode for TLS.",
                              "default": "Enabled",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "OperationalMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled",
                                    "description": "Enabled is equivalent to True"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled",
                                    "description": "Disabled is equivalent to False."
                                  }
                                ]
                              }
                            },
                            "trustedCaCertificateConfigMapRef": {
                              "type": "string",
                              "description": "Trusted CA certificate config map."
                            }
                          }
                        }
                      }
                    },
                    "connectorMetadataRef": {
                      "type": "string",
                      "description": "A reference to a connector metadata document reference in a container registry."
                    },
                    "healthState": {
                      "type": "string",
                      "description": "The health state of the resource.",
                      "default": "Unknown",
                      "enum": [
                        "Available",
                        "Degraded",
                        "Unavailable",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceHealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "Resource is Available and functioning as expected."
                          },
                          {
                            "name": "Degraded",
                            "value": "Degraded",
                            "description": "Resource health is degraded."
                          },
                          {
                            "name": "Unavailable",
                            "value": "Unavailable",
                            "description": "Resource is not functioning as expected."
                          },
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "Resource state is unknown."
                          }
                        ]
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "runtimeConfiguration",
                    "deviceInboundEndpointTypes"
                  ]
                },
                "extendedLocation": {
                  "description": "Edge location of the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "Type of ExtendedLocation.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "CustomLocation type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'AkriConnectorTemplateResource' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "AkriConnectorTemplate resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is getting provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Resource is Updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is Deleting."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been Accepted."
                          }
                        ]
                      }
                    },
                    "aioMetadata": {
                      "description": "Metadata about AIO.",
                      "type": "object",
                      "properties": {
                        "aioMinVersion": {
                          "type": "string",
                          "description": "The minimum version of AIO required for the connector."
                        },
                        "aioMaxVersion": {
                          "type": "string",
                          "description": "The maximum version of AIO required for the connector."
                        }
                      }
                    },
                    "runtimeConfiguration": {
                      "description": "The runtime configuration for the Connector template.",
                      "type": "object",
                      "properties": {
                        "runtimeConfigurationType": {
                          "description": "Runtime configuration type for the Connector template.",
                          "type": "string",
                          "enum": [
                            "ManagedConfiguration"
                          ],
                          "x-ms-enum": {
                            "name": "AkriConnectorTemplateRuntimeConfigurationType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "ManagedConfiguration",
                                "value": "ManagedConfiguration",
                                "description": "Managed Configuration Type."
                              }
                            ]
                          }
                        }
                      },
                      "discriminator": "runtimeConfigurationType",
                      "required": [
                        "runtimeConfigurationType"
                      ]
                    },
                    "diagnostics": {
                      "description": "Diagnostics settings for the Connector template.",
                      "type": "object",
                      "properties": {
                        "logs": {
                          "description": "The log settings for the Connector template.",
                          "type": "object",
                          "properties": {
                            "level": {
                              "type": "string",
                              "description": "The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.",
                              "default": "info"
                            }
                          }
                        }
                      },
                      "required": [
                        "logs"
                      ]
                    },
                    "deviceInboundEndpointTypes": {
                      "type": "array",
                      "description": "Device inbound endpoint types.",
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "description": "AkriConnectorTemplateDeviceInboundEndpointType properties.",
                        "properties": {
                          "displayName": {
                            "type": "string",
                            "description": "The display name of the device inbound endpoint."
                          },
                          "endpointType": {
                            "description": "The type of the device inbound endpoint.",
                            "type": "string",
                            "minLength": 1
                          },
                          "version": {
                            "description": "The version of the device inbound endpoint.",
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "required": [
                          "endpointType"
                        ]
                      },
                      "x-ms-identifiers": [
                        "endpointType",
                        "version"
                      ]
                    },
                    "mqttConnectionConfiguration": {
                      "description": "Mqtt connection configuration settings.",
                      "type": "object",
                      "properties": {
                        "authentication": {
                          "description": "Authentication properties.",
                          "type": "object",
                          "properties": {
                            "method": {
                              "description": "The authentication method for the MQTT connection.",
                              "type": "string",
                              "enum": [
                                "ServiceAccountToken"
                              ],
                              "x-ms-enum": {
                                "name": "AkriConnectorsMqttAuthenticationMethod",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "ServiceAccountToken",
                                    "value": "ServiceAccountToken",
                                    "description": "Service Account Token authentication."
                                  }
                                ]
                              }
                            }
                          },
                          "discriminator": "method",
                          "required": [
                            "method"
                          ]
                        },
                        "host": {
                          "type": "string",
                          "description": "Host of the Broker in the form of <hostname>:<port>."
                        },
                        "protocol": {
                          "description": "The protocol to use for the connection. Currently only `mqtt` is supported.",
                          "type": "string",
                          "enum": [
                            "Mqtt"
                          ],
                          "x-ms-enum": {
                            "name": "AkriConnectorsMqttProtocolType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Mqtt",
                                "value": "Mqtt",
                                "description": "Mqtt protocol."
                              }
                            ]
                          }
                        },
                        "keepAliveSeconds": {
                          "type": "integer",
                          "format": "int32",
                          "description": "KeepAlive for connection in seconds.",
                          "minimum": 0
                        },
                        "maxInflightMessages": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The max number of messages to keep in flight. For subscribe, this is the receive maximum. For publish, this is the maximum number of messages to send before waiting for an ack.",
                          "minimum": 0
                        },
                        "sessionExpirySeconds": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Session expiry in seconds.",
                          "minimum": 0
                        },
                        "tls": {
                          "description": "TLS configuration.",
                          "type": "object",
                          "properties": {
                            "mode": {
                              "type": "string",
                              "description": "Mode for TLS.",
                              "default": "Enabled",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "OperationalMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled",
                                    "description": "Enabled is equivalent to True"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled",
                                    "description": "Disabled is equivalent to False."
                                  }
                                ]
                              }
                            },
                            "trustedCaCertificateConfigMapRef": {
                              "type": "string",
                              "description": "Trusted CA certificate config map."
                            }
                          }
                        }
                      }
                    },
                    "connectorMetadataRef": {
                      "type": "string",
                      "description": "A reference to a connector metadata document reference in a container registry."
                    },
                    "healthState": {
                      "type": "string",
                      "description": "The health state of the resource.",
                      "default": "Unknown",
                      "enum": [
                        "Available",
                        "Degraded",
                        "Unavailable",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceHealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "Resource is Available and functioning as expected."
                          },
                          {
                            "name": "Degraded",
                            "value": "Degraded",
                            "description": "Resource health is degraded."
                          },
                          {
                            "name": "Unavailable",
                            "value": "Unavailable",
                            "description": "Resource is not functioning as expected."
                          },
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "Resource state is unknown."
                          }
                        ]
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "runtimeConfiguration",
                    "deviceInboundEndpointTypes"
                  ]
                },
                "extendedLocation": {
                  "description": "Edge location of the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "Type of ExtendedLocation.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "CustomLocation type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Resource 'AkriConnectorTemplateResource' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "AkriConnectorTemplate resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is getting provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Resource is Updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is Deleting."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been Accepted."
                          }
                        ]
                      }
                    },
                    "aioMetadata": {
                      "description": "Metadata about AIO.",
                      "type": "object",
                      "properties": {
                        "aioMinVersion": {
                          "type": "string",
                          "description": "The minimum version of AIO required for the connector."
                        },
                        "aioMaxVersion": {
                          "type": "string",
                          "description": "The maximum version of AIO required for the connector."
                        }
                      }
                    },
                    "runtimeConfiguration": {
                      "description": "The runtime configuration for the Connector template.",
                      "type": "object",
                      "properties": {
                        "runtimeConfigurationType": {
                          "description": "Runtime configuration type for the Connector template.",
                          "type": "string",
                          "enum": [
                            "ManagedConfiguration"
                          ],
                          "x-ms-enum": {
                            "name": "AkriConnectorTemplateRuntimeConfigurationType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "ManagedConfiguration",
                                "value": "ManagedConfiguration",
                                "description": "Managed Configuration Type."
                              }
                            ]
                          }
                        }
                      },
                      "discriminator": "runtimeConfigurationType",
                      "required": [
                        "runtimeConfigurationType"
                      ]
                    },
                    "diagnostics": {
                      "description": "Diagnostics settings for the Connector template.",
                      "type": "object",
                      "properties": {
                        "logs": {
                          "description": "The log settings for the Connector template.",
                          "type": "object",
                          "properties": {
                            "level": {
                              "type": "string",
                              "description": "The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.",
                              "default": "info"
                            }
                          }
                        }
                      },
                      "required": [
                        "logs"
                      ]
                    },
                    "deviceInboundEndpointTypes": {
                      "type": "array",
                      "description": "Device inbound endpoint types.",
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "description": "AkriConnectorTemplateDeviceInboundEndpointType properties.",
                        "properties": {
                          "displayName": {
                            "type": "string",
                            "description": "The display name of the device inbound endpoint."
                          },
                          "endpointType": {
                            "description": "The type of the device inbound endpoint.",
                            "type": "string",
                            "minLength": 1
                          },
                          "version": {
                            "description": "The version of the device inbound endpoint.",
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "required": [
                          "endpointType"
                        ]
                      },
                      "x-ms-identifiers": [
                        "endpointType",
                        "version"
                      ]
                    },
                    "mqttConnectionConfiguration": {
                      "description": "Mqtt connection configuration settings.",
                      "type": "object",
                      "properties": {
                        "authentication": {
                          "description": "Authentication properties.",
                          "type": "object",
                          "properties": {
                            "method": {
                              "description": "The authentication method for the MQTT connection.",
                              "type": "string",
                              "enum": [
                                "ServiceAccountToken"
                              ],
                              "x-ms-enum": {
                                "name": "AkriConnectorsMqttAuthenticationMethod",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "ServiceAccountToken",
                                    "value": "ServiceAccountToken",
                                    "description": "Service Account Token authentication."
                                  }
                                ]
                              }
                            }
                          },
                          "discriminator": "method",
                          "required": [
                            "method"
                          ]
                        },
                        "host": {
                          "type": "string",
                          "description": "Host of the Broker in the form of <hostname>:<port>."
                        },
                        "protocol": {
                          "description": "The protocol to use for the connection. Currently only `mqtt` is supported.",
                          "type": "string",
                          "enum": [
                            "Mqtt"
                          ],
                          "x-ms-enum": {
                            "name": "AkriConnectorsMqttProtocolType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Mqtt",
                                "value": "Mqtt",
                                "description": "Mqtt protocol."
                              }
                            ]
                          }
                        },
                        "keepAliveSeconds": {
                          "type": "integer",
                          "format": "int32",
                          "description": "KeepAlive for connection in seconds.",
                          "minimum": 0
                        },
                        "maxInflightMessages": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The max number of messages to keep in flight. For subscribe, this is the receive maximum. For publish, this is the maximum number of messages to send before waiting for an ack.",
                          "minimum": 0
                        },
                        "sessionExpirySeconds": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Session expiry in seconds.",
                          "minimum": 0
                        },
                        "tls": {
                          "description": "TLS configuration.",
                          "type": "object",
                          "properties": {
                            "mode": {
                              "type": "string",
                              "description": "Mode for TLS.",
                              "default": "Enabled",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "OperationalMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled",
                                    "description": "Enabled is equivalent to True"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled",
                                    "description": "Disabled is equivalent to False."
                                  }
                                ]
                              }
                            },
                            "trustedCaCertificateConfigMapRef": {
                              "type": "string",
                              "description": "Trusted CA certificate config map."
                            }
                          }
                        }
                      }
                    },
                    "connectorMetadataRef": {
                      "type": "string",
                      "description": "A reference to a connector metadata document reference in a container registry."
                    },
                    "healthState": {
                      "type": "string",
                      "description": "The health state of the resource.",
                      "default": "Unknown",
                      "enum": [
                        "Available",
                        "Degraded",
                        "Unavailable",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceHealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "Resource is Available and functioning as expected."
                          },
                          {
                            "name": "Degraded",
                            "value": "Degraded",
                            "description": "Resource health is degraded."
                          },
                          {
                            "name": "Unavailable",
                            "value": "Unavailable",
                            "description": "Resource is not functioning as expected."
                          },
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "Resource state is unknown."
                          }
                        ]
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "runtimeConfiguration",
                    "deviceInboundEndpointTypes"
                  ]
                },
                "extendedLocation": {
                  "description": "Edge location of the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "Type of ExtendedLocation.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "CustomLocation type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                }
              }
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "AkriConnectorTemplate_Delete",
        "tags": [
          "AkriConnectorTemplate"
        ],
        "description": "Delete a AkriConnectorTemplateResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "akriConnectorTemplateName",
            "in": "path",
            "description": "Name of AkriConnectorTemplate resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperations/instances/{instanceName}/akriConnectorTemplates/{akriConnectorTemplateName}/connectors": {
      "get": {
        "operationId": "AkriConnector_ListByTemplate",
        "tags": [
          "AkriConnector"
        ],
        "description": "List AkriConnectorResource resources by AkriConnectorTemplateResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "akriConnectorTemplateName",
            "in": "path",
            "description": "Name of AkriConnectorTemplate resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a AkriConnectorResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The AkriConnectorResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "AkriConnector resource.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "The status of the last operation.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "Resource is getting provisioned."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "Resource is Updating."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Resource is Deleting."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "Resource has been Accepted."
                                }
                              ]
                            }
                          },
                          "allocatedDevices": {
                            "type": "array",
                            "description": "The allocated devices for the connector.",
                            "items": {
                              "type": "object",
                              "description": "AkriConnector allocated device.",
                              "properties": {
                                "deviceInboundEndpointName": {
                                  "type": "string",
                                  "description": "The name of the inbound endpoint for the device.",
                                  "readOnly": true
                                },
                                "deviceName": {
                                  "type": "string",
                                  "description": "The name of the device.",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "deviceInboundEndpointName",
                                "deviceName"
                              ]
                            },
                            "readOnly": true,
                            "x-ms-identifiers": [
                              "deviceInboundEndpointName",
                              "deviceName"
                            ]
                          },
                          "healthState": {
                            "type": "string",
                            "description": "The health state of the resource.",
                            "default": "Unknown",
                            "enum": [
                              "Available",
                              "Degraded",
                              "Unavailable",
                              "Unknown"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceHealthState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Available",
                                  "value": "Available",
                                  "description": "Resource is Available and functioning as expected."
                                },
                                {
                                  "name": "Degraded",
                                  "value": "Degraded",
                                  "description": "Resource health is degraded."
                                },
                                {
                                  "name": "Unavailable",
                                  "value": "Unavailable",
                                  "description": "Resource is not functioning as expected."
                                },
                                {
                                  "name": "Unknown",
                                  "value": "Unknown",
                                  "description": "Resource state is unknown."
                                }
                              ]
                            },
                            "readOnly": true
                          }
                        }
                      },
                      "extendedLocation": {
                        "description": "Edge location of the resource.",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the extended location."
                          },
                          "type": {
                            "description": "Type of ExtendedLocation.",
                            "type": "string",
                            "enum": [
                              "CustomLocation"
                            ],
                            "x-ms-enum": {
                              "name": "ExtendedLocationType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "CustomLocation",
                                  "value": "CustomLocation",
                                  "description": "CustomLocation type"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "name",
                          "type"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperations/instances/{instanceName}/akriConnectorTemplates/{akriConnectorTemplateName}/connectors/{connectorName}": {
      "get": {
        "operationId": "AkriConnector_Get",
        "tags": [
          "AkriConnector"
        ],
        "description": "Get a AkriConnectorResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "akriConnectorTemplateName",
            "in": "path",
            "description": "Name of AkriConnectorTemplate resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "connectorName",
            "in": "path",
            "description": "Name of AkriConnector resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "AkriConnector resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is getting provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Resource is Updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is Deleting."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been Accepted."
                          }
                        ]
                      }
                    },
                    "allocatedDevices": {
                      "type": "array",
                      "description": "The allocated devices for the connector.",
                      "items": {
                        "type": "object",
                        "description": "AkriConnector allocated device.",
                        "properties": {
                          "deviceInboundEndpointName": {
                            "type": "string",
                            "description": "The name of the inbound endpoint for the device.",
                            "readOnly": true
                          },
                          "deviceName": {
                            "type": "string",
                            "description": "The name of the device.",
                            "readOnly": true
                          }
                        },
                        "required": [
                          "deviceInboundEndpointName",
                          "deviceName"
                        ]
                      },
                      "readOnly": true,
                      "x-ms-identifiers": [
                        "deviceInboundEndpointName",
                        "deviceName"
                      ]
                    },
                    "healthState": {
                      "type": "string",
                      "description": "The health state of the resource.",
                      "default": "Unknown",
                      "enum": [
                        "Available",
                        "Degraded",
                        "Unavailable",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceHealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "Resource is Available and functioning as expected."
                          },
                          {
                            "name": "Degraded",
                            "value": "Degraded",
                            "description": "Resource health is degraded."
                          },
                          {
                            "name": "Unavailable",
                            "value": "Unavailable",
                            "description": "Resource is not functioning as expected."
                          },
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "Resource state is unknown."
                          }
                        ]
                      },
                      "readOnly": true
                    }
                  }
                },
                "extendedLocation": {
                  "description": "Edge location of the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "Type of ExtendedLocation.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "CustomLocation type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "AkriConnector_CreateOrUpdate",
        "tags": [
          "AkriConnector"
        ],
        "description": "Create a AkriConnectorResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "akriConnectorTemplateName",
            "in": "path",
            "description": "Name of AkriConnectorTemplate resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "connectorName",
            "in": "path",
            "description": "Name of AkriConnector resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "AkriConnector resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is getting provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Resource is Updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is Deleting."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been Accepted."
                          }
                        ]
                      }
                    },
                    "allocatedDevices": {
                      "type": "array",
                      "description": "The allocated devices for the connector.",
                      "items": {
                        "type": "object",
                        "description": "AkriConnector allocated device.",
                        "properties": {
                          "deviceInboundEndpointName": {
                            "type": "string",
                            "description": "The name of the inbound endpoint for the device.",
                            "readOnly": true
                          },
                          "deviceName": {
                            "type": "string",
                            "description": "The name of the device.",
                            "readOnly": true
                          }
                        },
                        "required": [
                          "deviceInboundEndpointName",
                          "deviceName"
                        ]
                      },
                      "readOnly": true,
                      "x-ms-identifiers": [
                        "deviceInboundEndpointName",
                        "deviceName"
                      ]
                    },
                    "healthState": {
                      "type": "string",
                      "description": "The health state of the resource.",
                      "default": "Unknown",
                      "enum": [
                        "Available",
                        "Degraded",
                        "Unavailable",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceHealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "Resource is Available and functioning as expected."
                          },
                          {
                            "name": "Degraded",
                            "value": "Degraded",
                            "description": "Resource health is degraded."
                          },
                          {
                            "name": "Unavailable",
                            "value": "Unavailable",
                            "description": "Resource is not functioning as expected."
                          },
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "Resource state is unknown."
                          }
                        ]
                      },
                      "readOnly": true
                    }
                  }
                },
                "extendedLocation": {
                  "description": "Edge location of the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "Type of ExtendedLocation.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "CustomLocation type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'AkriConnectorResource' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "AkriConnector resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is getting provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Resource is Updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is Deleting."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been Accepted."
                          }
                        ]
                      }
                    },
                    "allocatedDevices": {
                      "type": "array",
                      "description": "The allocated devices for the connector.",
                      "items": {
                        "type": "object",
                        "description": "AkriConnector allocated device.",
                        "properties": {
                          "deviceInboundEndpointName": {
                            "type": "string",
                            "description": "The name of the inbound endpoint for the device.",
                            "readOnly": true
                          },
                          "deviceName": {
                            "type": "string",
                            "description": "The name of the device.",
                            "readOnly": true
                          }
                        },
                        "required": [
                          "deviceInboundEndpointName",
                          "deviceName"
                        ]
                      },
                      "readOnly": true,
                      "x-ms-identifiers": [
                        "deviceInboundEndpointName",
                        "deviceName"
                      ]
                    },
                    "healthState": {
                      "type": "string",
                      "description": "The health state of the resource.",
                      "default": "Unknown",
                      "enum": [
                        "Available",
                        "Degraded",
                        "Unavailable",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceHealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "Resource is Available and functioning as expected."
                          },
                          {
                            "name": "Degraded",
                            "value": "Degraded",
                            "description": "Resource health is degraded."
                          },
                          {
                            "name": "Unavailable",
                            "value": "Unavailable",
                            "description": "Resource is not functioning as expected."
                          },
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "Resource state is unknown."
                          }
                        ]
                      },
                      "readOnly": true
                    }
                  }
                },
                "extendedLocation": {
                  "description": "Edge location of the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "Type of ExtendedLocation.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "CustomLocation type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Resource 'AkriConnectorResource' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "AkriConnector resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is getting provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Resource is Updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is Deleting."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been Accepted."
                          }
                        ]
                      }
                    },
                    "allocatedDevices": {
                      "type": "array",
                      "description": "The allocated devices for the connector.",
                      "items": {
                        "type": "object",
                        "description": "AkriConnector allocated device.",
                        "properties": {
                          "deviceInboundEndpointName": {
                            "type": "string",
                            "description": "The name of the inbound endpoint for the device.",
                            "readOnly": true
                          },
                          "deviceName": {
                            "type": "string",
                            "description": "The name of the device.",
                            "readOnly": true
                          }
                        },
                        "required": [
                          "deviceInboundEndpointName",
                          "deviceName"
                        ]
                      },
                      "readOnly": true,
                      "x-ms-identifiers": [
                        "deviceInboundEndpointName",
                        "deviceName"
                      ]
                    },
                    "healthState": {
                      "type": "string",
                      "description": "The health state of the resource.",
                      "default": "Unknown",
                      "enum": [
                        "Available",
                        "Degraded",
                        "Unavailable",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceHealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "Resource is Available and functioning as expected."
                          },
                          {
                            "name": "Degraded",
                            "value": "Degraded",
                            "description": "Resource health is degraded."
                          },
                          {
                            "name": "Unavailable",
                            "value": "Unavailable",
                            "description": "Resource is not functioning as expected."
                          },
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "Resource state is unknown."
                          }
                        ]
                      },
                      "readOnly": true
                    }
                  }
                },
                "extendedLocation": {
                  "description": "Edge location of the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "Type of ExtendedLocation.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "CustomLocation type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                }
              }
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "AkriConnector_Delete",
        "tags": [
          "AkriConnector"
        ],
        "description": "Delete a AkriConnectorResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "akriConnectorTemplateName",
            "in": "path",
            "description": "Name of AkriConnectorTemplate resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "connectorName",
            "in": "path",
            "description": "Name of AkriConnector resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperations/instances/{instanceName}/brokers": {
      "get": {
        "operationId": "Broker_ListByResourceGroup",
        "tags": [
          "Broker"
        ],
        "description": "List BrokerResource resources by InstanceResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a BrokerResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The BrokerResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "Instance broker resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "advanced": {
                            "description": "Advanced settings of Broker.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "object",
                            "properties": {
                              "clients": {
                                "description": "Configurations related to All Clients.",
                                "type": "object",
                                "properties": {
                                  "maxSessionExpirySeconds": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Upper bound of Session Expiry Interval, in seconds.",
                                    "minimum": 1,
                                    "maximum": 4294967295
                                  },
                                  "maxMessageExpirySeconds": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Upper bound of Message Expiry Interval, in seconds.",
                                    "minimum": 1,
                                    "maximum": 4294967295
                                  },
                                  "maxPacketSizeBytes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Max message size for a packet in Bytes.",
                                    "minimum": 1,
                                    "maximum": 268435456
                                  },
                                  "subscriberQueueLimit": {
                                    "description": "The limit on the number of queued messages for a subscriber.",
                                    "type": "object",
                                    "properties": {
                                      "length": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "The maximum length of the queue before messages start getting dropped.",
                                        "minimum": 1
                                      },
                                      "strategy": {
                                        "type": "string",
                                        "description": "The strategy to use for dropping messages from the queue.",
                                        "default": "None",
                                        "enum": [
                                          "None",
                                          "DropOldest"
                                        ],
                                        "x-ms-enum": {
                                          "name": "SubscriberMessageDropStrategy",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "None",
                                              "value": "None",
                                              "description": "Messages are never dropped."
                                            },
                                            {
                                              "name": "DropOldest",
                                              "value": "DropOldest",
                                              "description": "The oldest message is dropped."
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "maxReceiveMaximum": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Upper bound of Receive Maximum that a client can request in the CONNECT packet.",
                                    "minimum": 1,
                                    "maximum": 65535
                                  },
                                  "maxKeepAliveSeconds": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Upper bound of a client's Keep Alive, in seconds.",
                                    "minimum": 0,
                                    "maximum": 65535
                                  }
                                }
                              },
                              "encryptInternalTraffic": {
                                "type": "string",
                                "description": "The setting to enable or disable encryption of internal Traffic.",
                                "default": "Enabled",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "OperationalMode",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled",
                                      "description": "Enabled is equivalent to True"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled",
                                      "description": "Disabled is equivalent to False."
                                    }
                                  ]
                                }
                              },
                              "internalCerts": {
                                "description": "Certificate rotation and private key configuration.",
                                "type": "object",
                                "properties": {
                                  "duration": {
                                    "type": "string",
                                    "description": "Lifetime of certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."
                                  },
                                  "renewBefore": {
                                    "type": "string",
                                    "description": "When to begin renewing certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."
                                  },
                                  "privateKey": {
                                    "description": "Configuration of certificate private key.",
                                    "type": "object",
                                    "properties": {
                                      "algorithm": {
                                        "description": "algorithm for private key.",
                                        "type": "string",
                                        "enum": [
                                          "Ec256",
                                          "Ec384",
                                          "Ec521",
                                          "Ed25519",
                                          "Rsa2048",
                                          "Rsa4096",
                                          "Rsa8192"
                                        ],
                                        "x-ms-enum": {
                                          "name": "PrivateKeyAlgorithm",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "Ec256",
                                              "value": "Ec256",
                                              "description": "Algorithm - ec256."
                                            },
                                            {
                                              "name": "Ec384",
                                              "value": "Ec384",
                                              "description": "Algorithm - ec384."
                                            },
                                            {
                                              "name": "Ec521",
                                              "value": "Ec521",
                                              "description": "Algorithm - ec521."
                                            },
                                            {
                                              "name": "Ed25519",
                                              "value": "Ed25519",
                                              "description": "Algorithm - ed25519."
                                            },
                                            {
                                              "name": "Rsa2048",
                                              "value": "Rsa2048",
                                              "description": "Algorithm - rsa2048."
                                            },
                                            {
                                              "name": "Rsa4096",
                                              "value": "Rsa4096",
                                              "description": "Algorithm - rsa4096."
                                            },
                                            {
                                              "name": "Rsa8192",
                                              "value": "Rsa8192",
                                              "description": "Algorithm - rsa8192."
                                            }
                                          ]
                                        }
                                      },
                                      "rotationPolicy": {
                                        "description": "cert-manager private key rotationPolicy.",
                                        "type": "string",
                                        "enum": [
                                          "Always",
                                          "Never"
                                        ],
                                        "x-ms-enum": {
                                          "name": "PrivateKeyRotationPolicy",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "Always",
                                              "value": "Always",
                                              "description": "Rotation Policy - Always."
                                            },
                                            {
                                              "name": "Never",
                                              "value": "Never",
                                              "description": "Rotation Policy - Never."
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    "required": [
                                      "algorithm",
                                      "rotationPolicy"
                                    ]
                                  }
                                },
                                "required": [
                                  "duration",
                                  "renewBefore",
                                  "privateKey"
                                ]
                              }
                            }
                          },
                          "cardinality": {
                            "description": "The cardinality details of the broker.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "object",
                            "properties": {
                              "backendChain": {
                                "description": "The backend broker desired properties",
                                "type": "object",
                                "properties": {
                                  "partitions": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The desired number of physical backend partitions.",
                                    "minimum": 1,
                                    "maximum": 16
                                  },
                                  "redundancyFactor": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The desired numbers of backend replicas (pods) in a physical partition.",
                                    "minimum": 1,
                                    "maximum": 5
                                  },
                                  "workers": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Number of logical backend workers per replica (pod).",
                                    "default": 1,
                                    "minimum": 1,
                                    "maximum": 16
                                  }
                                },
                                "required": [
                                  "partitions",
                                  "redundancyFactor"
                                ]
                              },
                              "frontend": {
                                "description": "The frontend desired properties",
                                "type": "object",
                                "properties": {
                                  "replicas": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The desired number of frontend instances (pods).",
                                    "minimum": 1,
                                    "maximum": 16
                                  },
                                  "workers": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Number of logical frontend workers per instance (pod).",
                                    "default": 2,
                                    "minimum": 1,
                                    "maximum": 16
                                  }
                                },
                                "required": [
                                  "replicas"
                                ]
                              }
                            },
                            "required": [
                              "backendChain",
                              "frontend"
                            ]
                          },
                          "diagnostics": {
                            "description": "Spec defines the desired identities of Broker diagnostics settings.",
                            "type": "object",
                            "properties": {
                              "logs": {
                                "description": "Diagnostic log settings for the resource.",
                                "type": "object",
                                "properties": {
                                  "level": {
                                    "type": "string",
                                    "description": "The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.",
                                    "default": "info"
                                  }
                                }
                              },
                              "metrics": {
                                "description": "The metrics settings for the resource.",
                                "type": "object",
                                "properties": {
                                  "prometheusPort": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The prometheus port to expose the metrics.",
                                    "default": 9600,
                                    "minimum": 0,
                                    "maximum": 65535
                                  }
                                }
                              },
                              "selfCheck": {
                                "description": "The self check properties.",
                                "type": "object",
                                "properties": {
                                  "mode": {
                                    "type": "string",
                                    "description": "The toggle to enable/disable self check.",
                                    "default": "Enabled",
                                    "enum": [
                                      "Enabled",
                                      "Disabled"
                                    ],
                                    "x-ms-enum": {
                                      "name": "OperationalMode",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Enabled",
                                          "value": "Enabled",
                                          "description": "Enabled is equivalent to True"
                                        },
                                        {
                                          "name": "Disabled",
                                          "value": "Disabled",
                                          "description": "Disabled is equivalent to False."
                                        }
                                      ]
                                    }
                                  },
                                  "intervalSeconds": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The self check interval.",
                                    "default": 30,
                                    "minimum": 30,
                                    "maximum": 300
                                  },
                                  "timeoutSeconds": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The timeout for self check.",
                                    "default": 15,
                                    "minimum": 5,
                                    "maximum": 120
                                  }
                                }
                              },
                              "traces": {
                                "description": "The trace properties.",
                                "type": "object",
                                "properties": {
                                  "mode": {
                                    "type": "string",
                                    "description": "The toggle to enable/disable traces.",
                                    "default": "Enabled",
                                    "enum": [
                                      "Enabled",
                                      "Disabled"
                                    ],
                                    "x-ms-enum": {
                                      "name": "OperationalMode",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Enabled",
                                          "value": "Enabled",
                                          "description": "Enabled is equivalent to True"
                                        },
                                        {
                                          "name": "Disabled",
                                          "value": "Disabled",
                                          "description": "Disabled is equivalent to False."
                                        }
                                      ]
                                    }
                                  },
                                  "cacheSizeMegabytes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The cache size in megabytes.",
                                    "default": 16,
                                    "minimum": 1,
                                    "maximum": 128
                                  },
                                  "selfTracing": {
                                    "description": "The self tracing properties.",
                                    "type": "object",
                                    "properties": {
                                      "mode": {
                                        "type": "string",
                                        "description": "The toggle to enable/disable self tracing.",
                                        "default": "Enabled",
                                        "enum": [
                                          "Enabled",
                                          "Disabled"
                                        ],
                                        "x-ms-enum": {
                                          "name": "OperationalMode",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "Enabled",
                                              "value": "Enabled",
                                              "description": "Enabled is equivalent to True"
                                            },
                                            {
                                              "name": "Disabled",
                                              "value": "Disabled",
                                              "description": "Disabled is equivalent to False."
                                            }
                                          ]
                                        }
                                      },
                                      "intervalSeconds": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "The self tracing interval.",
                                        "default": 30,
                                        "minimum": 1,
                                        "maximum": 300
                                      }
                                    }
                                  },
                                  "spanChannelCapacity": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The span channel capacity.",
                                    "default": 1000,
                                    "minimum": 1000,
                                    "maximum": 100000
                                  }
                                }
                              }
                            }
                          },
                          "diskBackedMessageBuffer": {
                            "description": "Settings of Disk Backed Message Buffer.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "object",
                            "properties": {
                              "maxSize": {
                                "type": "string",
                                "description": "The max size of the message buffer on disk. If a PVC template is specified using one of ephemeralVolumeClaimSpec or persistentVolumeClaimSpec, then this size is used as the request and limit sizes of that template. If neither ephemeralVolumeClaimSpec nor persistentVolumeClaimSpec are specified, then an emptyDir volume is mounted with this size as its limit. See <https://kubernetes.io/docs/concepts/storage/volumes/#emptydir> for details.",
                                "pattern": "^[0-9]+[KMGTPE]$"
                              },
                              "ephemeralVolumeClaimSpec": {
                                "description": "Use the specified persistent volume claim template to mount a \"generic ephemeral volume\" for the message buffer. See <https://kubernetes.io/docs/concepts/storage/ephemeral-volumes/#generic-ephemeral-volumes> for details.",
                                "type": "object",
                                "properties": {
                                  "volumeName": {
                                    "type": "string",
                                    "description": "VolumeName is the binding reference to the PersistentVolume backing this claim."
                                  },
                                  "volumeMode": {
                                    "type": "string",
                                    "description": "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature."
                                  },
                                  "storageClassName": {
                                    "type": "string",
                                    "description": "Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"
                                  },
                                  "accessModes": {
                                    "type": "array",
                                    "description": "AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "dataSource": {
                                    "description": "This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.",
                                    "type": "object",
                                    "properties": {
                                      "apiGroup": {
                                        "type": "string",
                                        "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                                      },
                                      "kind": {
                                        "type": "string",
                                        "description": "Kind is the type of resource being referenced"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "Name is the name of resource being referenced"
                                      }
                                    },
                                    "required": [
                                      "kind",
                                      "name"
                                    ]
                                  },
                                  "dataSourceRef": {
                                    "description": "Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.",
                                    "type": "object",
                                    "properties": {
                                      "apiGroup": {
                                        "type": "string",
                                        "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                                      },
                                      "kind": {
                                        "type": "string",
                                        "description": "Kind is the type of resource being referenced"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "Name is the name of resource being referenced"
                                      },
                                      "namespace": {
                                        "type": "string",
                                        "description": "Namespace is the namespace of the resource being referenced. This field is required when the resource has a namespace."
                                      }
                                    },
                                    "required": [
                                      "kind",
                                      "name"
                                    ]
                                  },
                                  "resources": {
                                    "description": "Resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                                    "type": "object",
                                    "properties": {
                                      "limits": {
                                        "type": "object",
                                        "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      },
                                      "requests": {
                                        "type": "object",
                                        "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      },
                                      "claims": {
                                        "type": "array",
                                        "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.\n\nThis is an alpha field and requires enabling the DynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                                        "items": {
                                          "type": "object",
                                          "description": "VolumeClaimResourceRequirementsClaims properties.",
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the resource. This must match the name of a resource in spec.resourceClaims."
                                            }
                                          },
                                          "required": [
                                            "name"
                                          ]
                                        },
                                        "x-ms-identifiers": []
                                      }
                                    }
                                  },
                                  "selector": {
                                    "description": "A label query over volumes to consider for binding.",
                                    "type": "object",
                                    "properties": {
                                      "matchExpressions": {
                                        "type": "array",
                                        "description": "MatchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                        "items": {
                                          "type": "object",
                                          "description": "VolumeClaimSpecSelectorMatchExpressions properties",
                                          "properties": {
                                            "key": {
                                              "type": "string",
                                              "description": "key is the label key that the selector applies to."
                                            },
                                            "operator": {
                                              "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                              "type": "string",
                                              "enum": [
                                                "In",
                                                "NotIn",
                                                "Exists",
                                                "DoesNotExist"
                                              ],
                                              "x-ms-enum": {
                                                "name": "OperatorValues",
                                                "modelAsString": true,
                                                "values": [
                                                  {
                                                    "name": "In",
                                                    "value": "In",
                                                    "description": "In operator."
                                                  },
                                                  {
                                                    "name": "NotIn",
                                                    "value": "NotIn",
                                                    "description": "NotIn operator."
                                                  },
                                                  {
                                                    "name": "Exists",
                                                    "value": "Exists",
                                                    "description": "Exists operator."
                                                  },
                                                  {
                                                    "name": "DoesNotExist",
                                                    "value": "DoesNotExist",
                                                    "description": "DoesNotExist operator."
                                                  }
                                                ]
                                              }
                                            },
                                            "values": {
                                              "type": "array",
                                              "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "required": [
                                            "key",
                                            "operator"
                                          ]
                                        },
                                        "x-ms-identifiers": []
                                      },
                                      "matchLabels": {
                                        "type": "object",
                                        "description": "MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "persistentVolumeClaimSpec": {
                                "description": "Use the specified persistent volume claim template to mount a persistent volume for the message buffer.",
                                "type": "object",
                                "properties": {
                                  "volumeName": {
                                    "type": "string",
                                    "description": "VolumeName is the binding reference to the PersistentVolume backing this claim."
                                  },
                                  "volumeMode": {
                                    "type": "string",
                                    "description": "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature."
                                  },
                                  "storageClassName": {
                                    "type": "string",
                                    "description": "Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"
                                  },
                                  "accessModes": {
                                    "type": "array",
                                    "description": "AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "dataSource": {
                                    "description": "This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.",
                                    "type": "object",
                                    "properties": {
                                      "apiGroup": {
                                        "type": "string",
                                        "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                                      },
                                      "kind": {
                                        "type": "string",
                                        "description": "Kind is the type of resource being referenced"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "Name is the name of resource being referenced"
                                      }
                                    },
                                    "required": [
                                      "kind",
                                      "name"
                                    ]
                                  },
                                  "dataSourceRef": {
                                    "description": "Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.",
                                    "type": "object",
                                    "properties": {
                                      "apiGroup": {
                                        "type": "string",
                                        "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                                      },
                                      "kind": {
                                        "type": "string",
                                        "description": "Kind is the type of resource being referenced"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "Name is the name of resource being referenced"
                                      },
                                      "namespace": {
                                        "type": "string",
                                        "description": "Namespace is the namespace of the resource being referenced. This field is required when the resource has a namespace."
                                      }
                                    },
                                    "required": [
                                      "kind",
                                      "name"
                                    ]
                                  },
                                  "resources": {
                                    "description": "Resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                                    "type": "object",
                                    "properties": {
                                      "limits": {
                                        "type": "object",
                                        "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      },
                                      "requests": {
                                        "type": "object",
                                        "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      },
                                      "claims": {
                                        "type": "array",
                                        "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.\n\nThis is an alpha field and requires enabling the DynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                                        "items": {
                                          "type": "object",
                                          "description": "VolumeClaimResourceRequirementsClaims properties.",
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the resource. This must match the name of a resource in spec.resourceClaims."
                                            }
                                          },
                                          "required": [
                                            "name"
                                          ]
                                        },
                                        "x-ms-identifiers": []
                                      }
                                    }
                                  },
                                  "selector": {
                                    "description": "A label query over volumes to consider for binding.",
                                    "type": "object",
                                    "properties": {
                                      "matchExpressions": {
                                        "type": "array",
                                        "description": "MatchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                        "items": {
                                          "type": "object",
                                          "description": "VolumeClaimSpecSelectorMatchExpressions properties",
                                          "properties": {
                                            "key": {
                                              "type": "string",
                                              "description": "key is the label key that the selector applies to."
                                            },
                                            "operator": {
                                              "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                              "type": "string",
                                              "enum": [
                                                "In",
                                                "NotIn",
                                                "Exists",
                                                "DoesNotExist"
                                              ],
                                              "x-ms-enum": {
                                                "name": "OperatorValues",
                                                "modelAsString": true,
                                                "values": [
                                                  {
                                                    "name": "In",
                                                    "value": "In",
                                                    "description": "In operator."
                                                  },
                                                  {
                                                    "name": "NotIn",
                                                    "value": "NotIn",
                                                    "description": "NotIn operator."
                                                  },
                                                  {
                                                    "name": "Exists",
                                                    "value": "Exists",
                                                    "description": "Exists operator."
                                                  },
                                                  {
                                                    "name": "DoesNotExist",
                                                    "value": "DoesNotExist",
                                                    "description": "DoesNotExist operator."
                                                  }
                                                ]
                                              }
                                            },
                                            "values": {
                                              "type": "array",
                                              "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "required": [
                                            "key",
                                            "operator"
                                          ]
                                        },
                                        "x-ms-identifiers": []
                                      },
                                      "matchLabels": {
                                        "type": "object",
                                        "description": "MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "required": [
                              "maxSize"
                            ]
                          },
                          "generateResourceLimits": {
                            "description": "This setting controls whether Kubernetes CPU resource limits are requested. Increasing the number of replicas or workers proportionally increases the amount of CPU resources requested. If this setting is enabled and there are insufficient CPU resources, an error will be emitted.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "object",
                            "properties": {
                              "cpu": {
                                "type": "string",
                                "description": "The toggle to enable/disable cpu resource limits.",
                                "default": "Enabled",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "OperationalMode",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled",
                                      "description": "Enabled is equivalent to True"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled",
                                      "description": "Disabled is equivalent to False."
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "memoryProfile": {
                            "type": "string",
                            "description": "Memory profile of Broker.",
                            "default": "Medium",
                            "enum": [
                              "Tiny",
                              "Low",
                              "Medium",
                              "High"
                            ],
                            "x-ms-enum": {
                              "name": "BrokerMemoryProfile",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Tiny",
                                  "value": "Tiny",
                                  "description": "Tiny memory profile."
                                },
                                {
                                  "name": "Low",
                                  "value": "Low",
                                  "description": "Low memory profile."
                                },
                                {
                                  "name": "Medium",
                                  "value": "Medium",
                                  "description": "Medium memory profile."
                                },
                                {
                                  "name": "High",
                                  "value": "High",
                                  "description": "High memory profile."
                                }
                              ]
                            },
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "persistence": {
                            "description": "The persistence settings of the Broker.",
                            "type": "object",
                            "properties": {
                              "maxSize": {
                                "type": "string",
                                "description": "The max size of the message buffer on disk. If a PVC template is specified using persistentVolumeClaimSpec Then this size is used as the request and limit sizes of that template. If a PVC template isn't specified Then local-path provisioner is requested with this size limit. Required.",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              },
                              "persistentVolumeClaimSpec": {
                                "description": "Use the specified persistent volume claim template to mount a persistent volume. Same object as in diskBackedMessageBuffer, but with a limitation that access modes field must be set to `ReadWriteOncePod`.\n\nIf unset, a default PVC with default properties will be used. Among other things this PVC will use the cluster default storage class, which may or may not be using a local path provisioner. User is opting in to sub-optimal behavior if they leave this unset or set it without the storage class field, and their cluster default is not a local path class.",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "type": "object",
                                "properties": {
                                  "volumeName": {
                                    "type": "string",
                                    "description": "VolumeName is the binding reference to the PersistentVolume backing this claim."
                                  },
                                  "volumeMode": {
                                    "type": "string",
                                    "description": "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature."
                                  },
                                  "storageClassName": {
                                    "type": "string",
                                    "description": "Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"
                                  },
                                  "accessModes": {
                                    "type": "array",
                                    "description": "AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "dataSource": {
                                    "description": "This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.",
                                    "type": "object",
                                    "properties": {
                                      "apiGroup": {
                                        "type": "string",
                                        "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                                      },
                                      "kind": {
                                        "type": "string",
                                        "description": "Kind is the type of resource being referenced"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "Name is the name of resource being referenced"
                                      }
                                    },
                                    "required": [
                                      "kind",
                                      "name"
                                    ]
                                  },
                                  "dataSourceRef": {
                                    "description": "Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.",
                                    "type": "object",
                                    "properties": {
                                      "apiGroup": {
                                        "type": "string",
                                        "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                                      },
                                      "kind": {
                                        "type": "string",
                                        "description": "Kind is the type of resource being referenced"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "Name is the name of resource being referenced"
                                      },
                                      "namespace": {
                                        "type": "string",
                                        "description": "Namespace is the namespace of the resource being referenced. This field is required when the resource has a namespace."
                                      }
                                    },
                                    "required": [
                                      "kind",
                                      "name"
                                    ]
                                  },
                                  "resources": {
                                    "description": "Resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                                    "type": "object",
                                    "properties": {
                                      "limits": {
                                        "type": "object",
                                        "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      },
                                      "requests": {
                                        "type": "object",
                                        "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      },
                                      "claims": {
                                        "type": "array",
                                        "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.\n\nThis is an alpha field and requires enabling the DynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                                        "items": {
                                          "type": "object",
                                          "description": "VolumeClaimResourceRequirementsClaims properties.",
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the resource. This must match the name of a resource in spec.resourceClaims."
                                            }
                                          },
                                          "required": [
                                            "name"
                                          ]
                                        },
                                        "x-ms-identifiers": []
                                      }
                                    }
                                  },
                                  "selector": {
                                    "description": "A label query over volumes to consider for binding.",
                                    "type": "object",
                                    "properties": {
                                      "matchExpressions": {
                                        "type": "array",
                                        "description": "MatchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                        "items": {
                                          "type": "object",
                                          "description": "VolumeClaimSpecSelectorMatchExpressions properties",
                                          "properties": {
                                            "key": {
                                              "type": "string",
                                              "description": "key is the label key that the selector applies to."
                                            },
                                            "operator": {
                                              "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                              "type": "string",
                                              "enum": [
                                                "In",
                                                "NotIn",
                                                "Exists",
                                                "DoesNotExist"
                                              ],
                                              "x-ms-enum": {
                                                "name": "OperatorValues",
                                                "modelAsString": true,
                                                "values": [
                                                  {
                                                    "name": "In",
                                                    "value": "In",
                                                    "description": "In operator."
                                                  },
                                                  {
                                                    "name": "NotIn",
                                                    "value": "NotIn",
                                                    "description": "NotIn operator."
                                                  },
                                                  {
                                                    "name": "Exists",
                                                    "value": "Exists",
                                                    "description": "Exists operator."
                                                  },
                                                  {
                                                    "name": "DoesNotExist",
                                                    "value": "DoesNotExist",
                                                    "description": "DoesNotExist operator."
                                                  }
                                                ]
                                              }
                                            },
                                            "values": {
                                              "type": "array",
                                              "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "required": [
                                            "key",
                                            "operator"
                                          ]
                                        },
                                        "x-ms-identifiers": []
                                      },
                                      "matchLabels": {
                                        "type": "object",
                                        "description": "MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "retain": {
                                "description": "Controls which topic's retained messages should be persisted to disk.",
                                "type": "object",
                                "properties": {
                                  "mode": {
                                    "description": "'All' to persist all retain messages, 'None' to not persist any, 'Custom' to persist only the specified topics.",
                                    "type": "string",
                                    "enum": [
                                      "All",
                                      "None",
                                      "Custom"
                                    ],
                                    "x-ms-enum": {
                                      "name": "BrokerPersistencePolicyMode",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "All",
                                          "value": "All",
                                          "description": "Policy mode for All."
                                        },
                                        {
                                          "name": "None",
                                          "value": "None",
                                          "description": "Policy mode for None."
                                        },
                                        {
                                          "name": "Custom",
                                          "value": "Custom",
                                          "description": "Indicates that the policy is a custom policy."
                                        }
                                      ]
                                    }
                                  }
                                },
                                "discriminator": "mode",
                                "required": [
                                  "mode"
                                ]
                              },
                              "stateStore": {
                                "description": "Controls which keys should be persisted to disk for the state store.",
                                "type": "object",
                                "properties": {
                                  "mode": {
                                    "description": "'All' to persist all keys, 'None' to not persist any, 'Custom' to persist only the specified keys.",
                                    "type": "string",
                                    "enum": [
                                      "All",
                                      "None",
                                      "Custom"
                                    ],
                                    "x-ms-enum": {
                                      "name": "BrokerPersistencePolicyMode",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "All",
                                          "value": "All",
                                          "description": "Policy mode for All."
                                        },
                                        {
                                          "name": "None",
                                          "value": "None",
                                          "description": "Policy mode for None."
                                        },
                                        {
                                          "name": "Custom",
                                          "value": "Custom",
                                          "description": "Indicates that the policy is a custom policy."
                                        }
                                      ]
                                    }
                                  }
                                },
                                "discriminator": "mode",
                                "required": [
                                  "mode"
                                ]
                              },
                              "subscriberQueue": {
                                "description": "Controls which subscriber message queues should be persisted to disk. Important: to facilitate reconnection, session state metadata are ALWAYS written to disk if any persistence setting is specified, even if this section isn't set.",
                                "type": "object",
                                "properties": {
                                  "mode": {
                                    "description": "'All' to persist all subscriber queues, 'None' to not persist any, 'Custom' to persist only the specified queues.",
                                    "type": "string",
                                    "enum": [
                                      "All",
                                      "None",
                                      "Custom"
                                    ],
                                    "x-ms-enum": {
                                      "name": "BrokerPersistencePolicyMode",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "All",
                                          "value": "All",
                                          "description": "Policy mode for All."
                                        },
                                        {
                                          "name": "None",
                                          "value": "None",
                                          "description": "Policy mode for None."
                                        },
                                        {
                                          "name": "Custom",
                                          "value": "Custom",
                                          "description": "Indicates that the policy is a custom policy."
                                        }
                                      ]
                                    }
                                  }
                                },
                                "discriminator": "mode",
                                "required": [
                                  "mode"
                                ]
                              },
                              "encryption": {
                                "description": "Controls settings related to encryption of the persistence database. Optional, defaults to enabling encryption.",
                                "type": "object",
                                "properties": {
                                  "mode": {
                                    "type": "string",
                                    "description": "Mode properties",
                                    "enum": [
                                      "Enabled",
                                      "Disabled"
                                    ],
                                    "x-ms-enum": {
                                      "name": "OperationalMode",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Enabled",
                                          "value": "Enabled",
                                          "description": "Enabled is equivalent to True"
                                        },
                                        {
                                          "name": "Disabled",
                                          "value": "Disabled",
                                          "description": "Disabled is equivalent to False."
                                        }
                                      ]
                                    }
                                  }
                                },
                                "required": [
                                  "mode"
                                ]
                              }
                            },
                            "required": [
                              "maxSize"
                            ]
                          },
                          "provisioningState": {
                            "description": "The status of the last operation.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "Resource is getting provisioned."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "Resource is Updating."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Resource is Deleting."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "Resource has been Accepted."
                                }
                              ]
                            }
                          },
                          "healthState": {
                            "type": "string",
                            "description": "The health state of the resource.",
                            "default": "Unknown",
                            "enum": [
                              "Available",
                              "Degraded",
                              "Unavailable",
                              "Unknown"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceHealthState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Available",
                                  "value": "Available",
                                  "description": "Resource is Available and functioning as expected."
                                },
                                {
                                  "name": "Degraded",
                                  "value": "Degraded",
                                  "description": "Resource health is degraded."
                                },
                                {
                                  "name": "Unavailable",
                                  "value": "Unavailable",
                                  "description": "Resource is not functioning as expected."
                                },
                                {
                                  "name": "Unknown",
                                  "value": "Unknown",
                                  "description": "Resource state is unknown."
                                }
                              ]
                            },
                            "readOnly": true
                          }
                        }
                      },
                      "extendedLocation": {
                        "description": "Edge location of the resource.",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the extended location."
                          },
                          "type": {
                            "description": "Type of ExtendedLocation.",
                            "type": "string",
                            "enum": [
                              "CustomLocation"
                            ],
                            "x-ms-enum": {
                              "name": "ExtendedLocationType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "CustomLocation",
                                  "value": "CustomLocation",
                                  "description": "CustomLocation type"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "name",
                          "type"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperations/instances/{instanceName}/brokers/{brokerName}": {
      "get": {
        "operationId": "Broker_Get",
        "tags": [
          "Broker"
        ],
        "description": "Get a BrokerResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "brokerName",
            "in": "path",
            "description": "Name of broker.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Instance broker resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "advanced": {
                      "description": "Advanced settings of Broker.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "clients": {
                          "description": "Configurations related to All Clients.",
                          "type": "object",
                          "properties": {
                            "maxSessionExpirySeconds": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Upper bound of Session Expiry Interval, in seconds.",
                              "minimum": 1,
                              "maximum": 4294967295
                            },
                            "maxMessageExpirySeconds": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Upper bound of Message Expiry Interval, in seconds.",
                              "minimum": 1,
                              "maximum": 4294967295
                            },
                            "maxPacketSizeBytes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Max message size for a packet in Bytes.",
                              "minimum": 1,
                              "maximum": 268435456
                            },
                            "subscriberQueueLimit": {
                              "description": "The limit on the number of queued messages for a subscriber.",
                              "type": "object",
                              "properties": {
                                "length": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The maximum length of the queue before messages start getting dropped.",
                                  "minimum": 1
                                },
                                "strategy": {
                                  "type": "string",
                                  "description": "The strategy to use for dropping messages from the queue.",
                                  "default": "None",
                                  "enum": [
                                    "None",
                                    "DropOldest"
                                  ],
                                  "x-ms-enum": {
                                    "name": "SubscriberMessageDropStrategy",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "None",
                                        "value": "None",
                                        "description": "Messages are never dropped."
                                      },
                                      {
                                        "name": "DropOldest",
                                        "value": "DropOldest",
                                        "description": "The oldest message is dropped."
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "maxReceiveMaximum": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Upper bound of Receive Maximum that a client can request in the CONNECT packet.",
                              "minimum": 1,
                              "maximum": 65535
                            },
                            "maxKeepAliveSeconds": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Upper bound of a client's Keep Alive, in seconds.",
                              "minimum": 0,
                              "maximum": 65535
                            }
                          }
                        },
                        "encryptInternalTraffic": {
                          "type": "string",
                          "description": "The setting to enable or disable encryption of internal Traffic.",
                          "default": "Enabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "OperationalMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "Enabled is equivalent to True"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "Disabled is equivalent to False."
                              }
                            ]
                          }
                        },
                        "internalCerts": {
                          "description": "Certificate rotation and private key configuration.",
                          "type": "object",
                          "properties": {
                            "duration": {
                              "type": "string",
                              "description": "Lifetime of certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."
                            },
                            "renewBefore": {
                              "type": "string",
                              "description": "When to begin renewing certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."
                            },
                            "privateKey": {
                              "description": "Configuration of certificate private key.",
                              "type": "object",
                              "properties": {
                                "algorithm": {
                                  "description": "algorithm for private key.",
                                  "type": "string",
                                  "enum": [
                                    "Ec256",
                                    "Ec384",
                                    "Ec521",
                                    "Ed25519",
                                    "Rsa2048",
                                    "Rsa4096",
                                    "Rsa8192"
                                  ],
                                  "x-ms-enum": {
                                    "name": "PrivateKeyAlgorithm",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Ec256",
                                        "value": "Ec256",
                                        "description": "Algorithm - ec256."
                                      },
                                      {
                                        "name": "Ec384",
                                        "value": "Ec384",
                                        "description": "Algorithm - ec384."
                                      },
                                      {
                                        "name": "Ec521",
                                        "value": "Ec521",
                                        "description": "Algorithm - ec521."
                                      },
                                      {
                                        "name": "Ed25519",
                                        "value": "Ed25519",
                                        "description": "Algorithm - ed25519."
                                      },
                                      {
                                        "name": "Rsa2048",
                                        "value": "Rsa2048",
                                        "description": "Algorithm - rsa2048."
                                      },
                                      {
                                        "name": "Rsa4096",
                                        "value": "Rsa4096",
                                        "description": "Algorithm - rsa4096."
                                      },
                                      {
                                        "name": "Rsa8192",
                                        "value": "Rsa8192",
                                        "description": "Algorithm - rsa8192."
                                      }
                                    ]
                                  }
                                },
                                "rotationPolicy": {
                                  "description": "cert-manager private key rotationPolicy.",
                                  "type": "string",
                                  "enum": [
                                    "Always",
                                    "Never"
                                  ],
                                  "x-ms-enum": {
                                    "name": "PrivateKeyRotationPolicy",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Always",
                                        "value": "Always",
                                        "description": "Rotation Policy - Always."
                                      },
                                      {
                                        "name": "Never",
                                        "value": "Never",
                                        "description": "Rotation Policy - Never."
                                      }
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "algorithm",
                                "rotationPolicy"
                              ]
                            }
                          },
                          "required": [
                            "duration",
                            "renewBefore",
                            "privateKey"
                          ]
                        }
                      }
                    },
                    "cardinality": {
                      "description": "The cardinality details of the broker.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "backendChain": {
                          "description": "The backend broker desired properties",
                          "type": "object",
                          "properties": {
                            "partitions": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The desired number of physical backend partitions.",
                              "minimum": 1,
                              "maximum": 16
                            },
                            "redundancyFactor": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The desired numbers of backend replicas (pods) in a physical partition.",
                              "minimum": 1,
                              "maximum": 5
                            },
                            "workers": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Number of logical backend workers per replica (pod).",
                              "default": 1,
                              "minimum": 1,
                              "maximum": 16
                            }
                          },
                          "required": [
                            "partitions",
                            "redundancyFactor"
                          ]
                        },
                        "frontend": {
                          "description": "The frontend desired properties",
                          "type": "object",
                          "properties": {
                            "replicas": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The desired number of frontend instances (pods).",
                              "minimum": 1,
                              "maximum": 16
                            },
                            "workers": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Number of logical frontend workers per instance (pod).",
                              "default": 2,
                              "minimum": 1,
                              "maximum": 16
                            }
                          },
                          "required": [
                            "replicas"
                          ]
                        }
                      },
                      "required": [
                        "backendChain",
                        "frontend"
                      ]
                    },
                    "diagnostics": {
                      "description": "Spec defines the desired identities of Broker diagnostics settings.",
                      "type": "object",
                      "properties": {
                        "logs": {
                          "description": "Diagnostic log settings for the resource.",
                          "type": "object",
                          "properties": {
                            "level": {
                              "type": "string",
                              "description": "The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.",
                              "default": "info"
                            }
                          }
                        },
                        "metrics": {
                          "description": "The metrics settings for the resource.",
                          "type": "object",
                          "properties": {
                            "prometheusPort": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The prometheus port to expose the metrics.",
                              "default": 9600,
                              "minimum": 0,
                              "maximum": 65535
                            }
                          }
                        },
                        "selfCheck": {
                          "description": "The self check properties.",
                          "type": "object",
                          "properties": {
                            "mode": {
                              "type": "string",
                              "description": "The toggle to enable/disable self check.",
                              "default": "Enabled",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "OperationalMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled",
                                    "description": "Enabled is equivalent to True"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled",
                                    "description": "Disabled is equivalent to False."
                                  }
                                ]
                              }
                            },
                            "intervalSeconds": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The self check interval.",
                              "default": 30,
                              "minimum": 30,
                              "maximum": 300
                            },
                            "timeoutSeconds": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The timeout for self check.",
                              "default": 15,
                              "minimum": 5,
                              "maximum": 120
                            }
                          }
                        },
                        "traces": {
                          "description": "The trace properties.",
                          "type": "object",
                          "properties": {
                            "mode": {
                              "type": "string",
                              "description": "The toggle to enable/disable traces.",
                              "default": "Enabled",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "OperationalMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled",
                                    "description": "Enabled is equivalent to True"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled",
                                    "description": "Disabled is equivalent to False."
                                  }
                                ]
                              }
                            },
                            "cacheSizeMegabytes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The cache size in megabytes.",
                              "default": 16,
                              "minimum": 1,
                              "maximum": 128
                            },
                            "selfTracing": {
                              "description": "The self tracing properties.",
                              "type": "object",
                              "properties": {
                                "mode": {
                                  "type": "string",
                                  "description": "The toggle to enable/disable self tracing.",
                                  "default": "Enabled",
                                  "enum": [
                                    "Enabled",
                                    "Disabled"
                                  ],
                                  "x-ms-enum": {
                                    "name": "OperationalMode",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Enabled",
                                        "value": "Enabled",
                                        "description": "Enabled is equivalent to True"
                                      },
                                      {
                                        "name": "Disabled",
                                        "value": "Disabled",
                                        "description": "Disabled is equivalent to False."
                                      }
                                    ]
                                  }
                                },
                                "intervalSeconds": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The self tracing interval.",
                                  "default": 30,
                                  "minimum": 1,
                                  "maximum": 300
                                }
                              }
                            },
                            "spanChannelCapacity": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The span channel capacity.",
                              "default": 1000,
                              "minimum": 1000,
                              "maximum": 100000
                            }
                          }
                        }
                      }
                    },
                    "diskBackedMessageBuffer": {
                      "description": "Settings of Disk Backed Message Buffer.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "maxSize": {
                          "type": "string",
                          "description": "The max size of the message buffer on disk. If a PVC template is specified using one of ephemeralVolumeClaimSpec or persistentVolumeClaimSpec, then this size is used as the request and limit sizes of that template. If neither ephemeralVolumeClaimSpec nor persistentVolumeClaimSpec are specified, then an emptyDir volume is mounted with this size as its limit. See <https://kubernetes.io/docs/concepts/storage/volumes/#emptydir> for details.",
                          "pattern": "^[0-9]+[KMGTPE]$"
                        },
                        "ephemeralVolumeClaimSpec": {
                          "description": "Use the specified persistent volume claim template to mount a \"generic ephemeral volume\" for the message buffer. See <https://kubernetes.io/docs/concepts/storage/ephemeral-volumes/#generic-ephemeral-volumes> for details.",
                          "type": "object",
                          "properties": {
                            "volumeName": {
                              "type": "string",
                              "description": "VolumeName is the binding reference to the PersistentVolume backing this claim."
                            },
                            "volumeMode": {
                              "type": "string",
                              "description": "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature."
                            },
                            "storageClassName": {
                              "type": "string",
                              "description": "Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"
                            },
                            "accessModes": {
                              "type": "array",
                              "description": "AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                              "items": {
                                "type": "string"
                              }
                            },
                            "dataSource": {
                              "description": "This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.",
                              "type": "object",
                              "properties": {
                                "apiGroup": {
                                  "type": "string",
                                  "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                                },
                                "kind": {
                                  "type": "string",
                                  "description": "Kind is the type of resource being referenced"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name is the name of resource being referenced"
                                }
                              },
                              "required": [
                                "kind",
                                "name"
                              ]
                            },
                            "dataSourceRef": {
                              "description": "Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.",
                              "type": "object",
                              "properties": {
                                "apiGroup": {
                                  "type": "string",
                                  "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                                },
                                "kind": {
                                  "type": "string",
                                  "description": "Kind is the type of resource being referenced"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name is the name of resource being referenced"
                                },
                                "namespace": {
                                  "type": "string",
                                  "description": "Namespace is the namespace of the resource being referenced. This field is required when the resource has a namespace."
                                }
                              },
                              "required": [
                                "kind",
                                "name"
                              ]
                            },
                            "resources": {
                              "description": "Resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                              "type": "object",
                              "properties": {
                                "limits": {
                                  "type": "object",
                                  "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "requests": {
                                  "type": "object",
                                  "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "claims": {
                                  "type": "array",
                                  "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.\n\nThis is an alpha field and requires enabling the DynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                                  "items": {
                                    "type": "object",
                                    "description": "VolumeClaimResourceRequirementsClaims properties.",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the resource. This must match the name of a resource in spec.resourceClaims."
                                      }
                                    },
                                    "required": [
                                      "name"
                                    ]
                                  },
                                  "x-ms-identifiers": []
                                }
                              }
                            },
                            "selector": {
                              "description": "A label query over volumes to consider for binding.",
                              "type": "object",
                              "properties": {
                                "matchExpressions": {
                                  "type": "array",
                                  "description": "MatchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                  "items": {
                                    "type": "object",
                                    "description": "VolumeClaimSpecSelectorMatchExpressions properties",
                                    "properties": {
                                      "key": {
                                        "type": "string",
                                        "description": "key is the label key that the selector applies to."
                                      },
                                      "operator": {
                                        "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                        "type": "string",
                                        "enum": [
                                          "In",
                                          "NotIn",
                                          "Exists",
                                          "DoesNotExist"
                                        ],
                                        "x-ms-enum": {
                                          "name": "OperatorValues",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "In",
                                              "value": "In",
                                              "description": "In operator."
                                            },
                                            {
                                              "name": "NotIn",
                                              "value": "NotIn",
                                              "description": "NotIn operator."
                                            },
                                            {
                                              "name": "Exists",
                                              "value": "Exists",
                                              "description": "Exists operator."
                                            },
                                            {
                                              "name": "DoesNotExist",
                                              "value": "DoesNotExist",
                                              "description": "DoesNotExist operator."
                                            }
                                          ]
                                        }
                                      },
                                      "values": {
                                        "type": "array",
                                        "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "required": [
                                      "key",
                                      "operator"
                                    ]
                                  },
                                  "x-ms-identifiers": []
                                },
                                "matchLabels": {
                                  "type": "object",
                                  "description": "MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "persistentVolumeClaimSpec": {
                          "description": "Use the specified persistent volume claim template to mount a persistent volume for the message buffer.",
                          "type": "object",
                          "properties": {
                            "volumeName": {
                              "type": "string",
                              "description": "VolumeName is the binding reference to the PersistentVolume backing this claim."
                            },
                            "volumeMode": {
                              "type": "string",
                              "description": "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature."
                            },
                            "storageClassName": {
                              "type": "string",
                              "description": "Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"
                            },
                            "accessModes": {
                              "type": "array",
                              "description": "AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                              "items": {
                                "type": "string"
                              }
                            },
                            "dataSource": {
                              "description": "This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.",
                              "type": "object",
                              "properties": {
                                "apiGroup": {
                                  "type": "string",
                                  "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                                },
                                "kind": {
                                  "type": "string",
                                  "description": "Kind is the type of resource being referenced"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name is the name of resource being referenced"
                                }
                              },
                              "required": [
                                "kind",
                                "name"
                              ]
                            },
                            "dataSourceRef": {
                              "description": "Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.",
                              "type": "object",
                              "properties": {
                                "apiGroup": {
                                  "type": "string",
                                  "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                                },
                                "kind": {
                                  "type": "string",
                                  "description": "Kind is the type of resource being referenced"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name is the name of resource being referenced"
                                },
                                "namespace": {
                                  "type": "string",
                                  "description": "Namespace is the namespace of the resource being referenced. This field is required when the resource has a namespace."
                                }
                              },
                              "required": [
                                "kind",
                                "name"
                              ]
                            },
                            "resources": {
                              "description": "Resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                              "type": "object",
                              "properties": {
                                "limits": {
                                  "type": "object",
                                  "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "requests": {
                                  "type": "object",
                                  "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "claims": {
                                  "type": "array",
                                  "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.\n\nThis is an alpha field and requires enabling the DynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                                  "items": {
                                    "type": "object",
                                    "description": "VolumeClaimResourceRequirementsClaims properties.",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the resource. This must match the name of a resource in spec.resourceClaims."
                                      }
                                    },
                                    "required": [
                                      "name"
                                    ]
                                  },
                                  "x-ms-identifiers": []
                                }
                              }
                            },
                            "selector": {
                              "description": "A label query over volumes to consider for binding.",
                              "type": "object",
                              "properties": {
                                "matchExpressions": {
                                  "type": "array",
                                  "description": "MatchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                  "items": {
                                    "type": "object",
                                    "description": "VolumeClaimSpecSelectorMatchExpressions properties",
                                    "properties": {
                                      "key": {
                                        "type": "string",
                                        "description": "key is the label key that the selector applies to."
                                      },
                                      "operator": {
                                        "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                        "type": "string",
                                        "enum": [
                                          "In",
                                          "NotIn",
                                          "Exists",
                                          "DoesNotExist"
                                        ],
                                        "x-ms-enum": {
                                          "name": "OperatorValues",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "In",
                                              "value": "In",
                                              "description": "In operator."
                                            },
                                            {
                                              "name": "NotIn",
                                              "value": "NotIn",
                                              "description": "NotIn operator."
                                            },
                                            {
                                              "name": "Exists",
                                              "value": "Exists",
                                              "description": "Exists operator."
                                            },
                                            {
                                              "name": "DoesNotExist",
                                              "value": "DoesNotExist",
                                              "description": "DoesNotExist operator."
                                            }
                                          ]
                                        }
                                      },
                                      "values": {
                                        "type": "array",
                                        "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "required": [
                                      "key",
                                      "operator"
                                    ]
                                  },
                                  "x-ms-identifiers": []
                                },
                                "matchLabels": {
                                  "type": "object",
                                  "description": "MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "maxSize"
                      ]
                    },
                    "generateResourceLimits": {
                      "description": "This setting controls whether Kubernetes CPU resource limits are requested. Increasing the number of replicas or workers proportionally increases the amount of CPU resources requested. If this setting is enabled and there are insufficient CPU resources, an error will be emitted.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "cpu": {
                          "type": "string",
                          "description": "The toggle to enable/disable cpu resource limits.",
                          "default": "Enabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "OperationalMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "Enabled is equivalent to True"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "Disabled is equivalent to False."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "memoryProfile": {
                      "type": "string",
                      "description": "Memory profile of Broker.",
                      "default": "Medium",
                      "enum": [
                        "Tiny",
                        "Low",
                        "Medium",
                        "High"
                      ],
                      "x-ms-enum": {
                        "name": "BrokerMemoryProfile",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Tiny",
                            "value": "Tiny",
                            "description": "Tiny memory profile."
                          },
                          {
                            "name": "Low",
                            "value": "Low",
                            "description": "Low memory profile."
                          },
                          {
                            "name": "Medium",
                            "value": "Medium",
                            "description": "Medium memory profile."
                          },
                          {
                            "name": "High",
                            "value": "High",
                            "description": "High memory profile."
                          }
                        ]
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "persistence": {
                      "description": "The persistence settings of the Broker.",
                      "type": "object",
                      "properties": {
                        "maxSize": {
                          "type": "string",
                          "description": "The max size of the message buffer on disk. If a PVC template is specified using persistentVolumeClaimSpec Then this size is used as the request and limit sizes of that template. If a PVC template isn't specified Then local-path provisioner is requested with this size limit. Required.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "persistentVolumeClaimSpec": {
                          "description": "Use the specified persistent volume claim template to mount a persistent volume. Same object as in diskBackedMessageBuffer, but with a limitation that access modes field must be set to `ReadWriteOncePod`.\n\nIf unset, a default PVC with default properties will be used. Among other things this PVC will use the cluster default storage class, which may or may not be using a local path provisioner. User is opting in to sub-optimal behavior if they leave this unset or set it without the storage class field, and their cluster default is not a local path class.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "object",
                          "properties": {
                            "volumeName": {
                              "type": "string",
                              "description": "VolumeName is the binding reference to the PersistentVolume backing this claim."
                            },
                            "volumeMode": {
                              "type": "string",
                              "description": "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature."
                            },
                            "storageClassName": {
                              "type": "string",
                              "description": "Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"
                            },
                            "accessModes": {
                              "type": "array",
                              "description": "AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                              "items": {
                                "type": "string"
                              }
                            },
                            "dataSource": {
                              "description": "This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.",
                              "type": "object",
                              "properties": {
                                "apiGroup": {
                                  "type": "string",
                                  "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                                },
                                "kind": {
                                  "type": "string",
                                  "description": "Kind is the type of resource being referenced"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name is the name of resource being referenced"
                                }
                              },
                              "required": [
                                "kind",
                                "name"
                              ]
                            },
                            "dataSourceRef": {
                              "description": "Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.",
                              "type": "object",
                              "properties": {
                                "apiGroup": {
                                  "type": "string",
                                  "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                                },
                                "kind": {
                                  "type": "string",
                                  "description": "Kind is the type of resource being referenced"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name is the name of resource being referenced"
                                },
                                "namespace": {
                                  "type": "string",
                                  "description": "Namespace is the namespace of the resource being referenced. This field is required when the resource has a namespace."
                                }
                              },
                              "required": [
                                "kind",
                                "name"
                              ]
                            },
                            "resources": {
                              "description": "Resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                              "type": "object",
                              "properties": {
                                "limits": {
                                  "type": "object",
                                  "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "requests": {
                                  "type": "object",
                                  "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "claims": {
                                  "type": "array",
                                  "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.\n\nThis is an alpha field and requires enabling the DynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                                  "items": {
                                    "type": "object",
                                    "description": "VolumeClaimResourceRequirementsClaims properties.",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the resource. This must match the name of a resource in spec.resourceClaims."
                                      }
                                    },
                                    "required": [
                                      "name"
                                    ]
                                  },
                                  "x-ms-identifiers": []
                                }
                              }
                            },
                            "selector": {
                              "description": "A label query over volumes to consider for binding.",
                              "type": "object",
                              "properties": {
                                "matchExpressions": {
                                  "type": "array",
                                  "description": "MatchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                  "items": {
                                    "type": "object",
                                    "description": "VolumeClaimSpecSelectorMatchExpressions properties",
                                    "properties": {
                                      "key": {
                                        "type": "string",
                                        "description": "key is the label key that the selector applies to."
                                      },
                                      "operator": {
                                        "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                        "type": "string",
                                        "enum": [
                                          "In",
                                          "NotIn",
                                          "Exists",
                                          "DoesNotExist"
                                        ],
                                        "x-ms-enum": {
                                          "name": "OperatorValues",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "In",
                                              "value": "In",
                                              "description": "In operator."
                                            },
                                            {
                                              "name": "NotIn",
                                              "value": "NotIn",
                                              "description": "NotIn operator."
                                            },
                                            {
                                              "name": "Exists",
                                              "value": "Exists",
                                              "description": "Exists operator."
                                            },
                                            {
                                              "name": "DoesNotExist",
                                              "value": "DoesNotExist",
                                              "description": "DoesNotExist operator."
                                            }
                                          ]
                                        }
                                      },
                                      "values": {
                                        "type": "array",
                                        "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "required": [
                                      "key",
                                      "operator"
                                    ]
                                  },
                                  "x-ms-identifiers": []
                                },
                                "matchLabels": {
                                  "type": "object",
                                  "description": "MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "retain": {
                          "description": "Controls which topic's retained messages should be persisted to disk.",
                          "type": "object",
                          "properties": {
                            "mode": {
                              "description": "'All' to persist all retain messages, 'None' to not persist any, 'Custom' to persist only the specified topics.",
                              "type": "string",
                              "enum": [
                                "All",
                                "None",
                                "Custom"
                              ],
                              "x-ms-enum": {
                                "name": "BrokerPersistencePolicyMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "All",
                                    "value": "All",
                                    "description": "Policy mode for All."
                                  },
                                  {
                                    "name": "None",
                                    "value": "None",
                                    "description": "Policy mode for None."
                                  },
                                  {
                                    "name": "Custom",
                                    "value": "Custom",
                                    "description": "Indicates that the policy is a custom policy."
                                  }
                                ]
                              }
                            }
                          },
                          "discriminator": "mode",
                          "required": [
                            "mode"
                          ]
                        },
                        "stateStore": {
                          "description": "Controls which keys should be persisted to disk for the state store.",
                          "type": "object",
                          "properties": {
                            "mode": {
                              "description": "'All' to persist all keys, 'None' to not persist any, 'Custom' to persist only the specified keys.",
                              "type": "string",
                              "enum": [
                                "All",
                                "None",
                                "Custom"
                              ],
                              "x-ms-enum": {
                                "name": "BrokerPersistencePolicyMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "All",
                                    "value": "All",
                                    "description": "Policy mode for All."
                                  },
                                  {
                                    "name": "None",
                                    "value": "None",
                                    "description": "Policy mode for None."
                                  },
                                  {
                                    "name": "Custom",
                                    "value": "Custom",
                                    "description": "Indicates that the policy is a custom policy."
                                  }
                                ]
                              }
                            }
                          },
                          "discriminator": "mode",
                          "required": [
                            "mode"
                          ]
                        },
                        "subscriberQueue": {
                          "description": "Controls which subscriber message queues should be persisted to disk. Important: to facilitate reconnection, session state metadata are ALWAYS written to disk if any persistence setting is specified, even if this section isn't set.",
                          "type": "object",
                          "properties": {
                            "mode": {
                              "description": "'All' to persist all subscriber queues, 'None' to not persist any, 'Custom' to persist only the specified queues.",
                              "type": "string",
                              "enum": [
                                "All",
                                "None",
                                "Custom"
                              ],
                              "x-ms-enum": {
                                "name": "BrokerPersistencePolicyMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "All",
                                    "value": "All",
                                    "description": "Policy mode for All."
                                  },
                                  {
                                    "name": "None",
                                    "value": "None",
                                    "description": "Policy mode for None."
                                  },
                                  {
                                    "name": "Custom",
                                    "value": "Custom",
                                    "description": "Indicates that the policy is a custom policy."
                                  }
                                ]
                              }
                            }
                          },
                          "discriminator": "mode",
                          "required": [
                            "mode"
                          ]
                        },
                        "encryption": {
                          "description": "Controls settings related to encryption of the persistence database. Optional, defaults to enabling encryption.",
                          "type": "object",
                          "properties": {
                            "mode": {
                              "type": "string",
                              "description": "Mode properties",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "OperationalMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled",
                                    "description": "Enabled is equivalent to True"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled",
                                    "description": "Disabled is equivalent to False."
                                  }
                                ]
                              }
                            }
                          },
                          "required": [
                            "mode"
                          ]
                        }
                      },
                      "required": [
                        "maxSize"
                      ]
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is getting provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Resource is Updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is Deleting."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been Accepted."
                          }
                        ]
                      }
                    },
                    "healthState": {
                      "type": "string",
                      "description": "The health state of the resource.",
                      "default": "Unknown",
                      "enum": [
                        "Available",
                        "Degraded",
                        "Unavailable",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceHealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "Resource is Available and functioning as expected."
                          },
                          {
                            "name": "Degraded",
                            "value": "Degraded",
                            "description": "Resource health is degraded."
                          },
                          {
                            "name": "Unavailable",
                            "value": "Unavailable",
                            "description": "Resource is not functioning as expected."
                          },
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "Resource state is unknown."
                          }
                        ]
                      },
                      "readOnly": true
                    }
                  }
                },
                "extendedLocation": {
                  "description": "Edge location of the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "Type of ExtendedLocation.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "CustomLocation type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Broker_CreateOrUpdate",
        "tags": [
          "Broker"
        ],
        "description": "Create a BrokerResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "brokerName",
            "in": "path",
            "description": "Name of broker.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Instance broker resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "advanced": {
                      "description": "Advanced settings of Broker.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "clients": {
                          "description": "Configurations related to All Clients.",
                          "type": "object",
                          "properties": {
                            "maxSessionExpirySeconds": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Upper bound of Session Expiry Interval, in seconds.",
                              "minimum": 1,
                              "maximum": 4294967295
                            },
                            "maxMessageExpirySeconds": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Upper bound of Message Expiry Interval, in seconds.",
                              "minimum": 1,
                              "maximum": 4294967295
                            },
                            "maxPacketSizeBytes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Max message size for a packet in Bytes.",
                              "minimum": 1,
                              "maximum": 268435456
                            },
                            "subscriberQueueLimit": {
                              "description": "The limit on the number of queued messages for a subscriber.",
                              "type": "object",
                              "properties": {
                                "length": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The maximum length of the queue before messages start getting dropped.",
                                  "minimum": 1
                                },
                                "strategy": {
                                  "type": "string",
                                  "description": "The strategy to use for dropping messages from the queue.",
                                  "default": "None",
                                  "enum": [
                                    "None",
                                    "DropOldest"
                                  ],
                                  "x-ms-enum": {
                                    "name": "SubscriberMessageDropStrategy",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "None",
                                        "value": "None",
                                        "description": "Messages are never dropped."
                                      },
                                      {
                                        "name": "DropOldest",
                                        "value": "DropOldest",
                                        "description": "The oldest message is dropped."
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "maxReceiveMaximum": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Upper bound of Receive Maximum that a client can request in the CONNECT packet.",
                              "minimum": 1,
                              "maximum": 65535
                            },
                            "maxKeepAliveSeconds": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Upper bound of a client's Keep Alive, in seconds.",
                              "minimum": 0,
                              "maximum": 65535
                            }
                          }
                        },
                        "encryptInternalTraffic": {
                          "type": "string",
                          "description": "The setting to enable or disable encryption of internal Traffic.",
                          "default": "Enabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "OperationalMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "Enabled is equivalent to True"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "Disabled is equivalent to False."
                              }
                            ]
                          }
                        },
                        "internalCerts": {
                          "description": "Certificate rotation and private key configuration.",
                          "type": "object",
                          "properties": {
                            "duration": {
                              "type": "string",
                              "description": "Lifetime of certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."
                            },
                            "renewBefore": {
                              "type": "string",
                              "description": "When to begin renewing certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."
                            },
                            "privateKey": {
                              "description": "Configuration of certificate private key.",
                              "type": "object",
                              "properties": {
                                "algorithm": {
                                  "description": "algorithm for private key.",
                                  "type": "string",
                                  "enum": [
                                    "Ec256",
                                    "Ec384",
                                    "Ec521",
                                    "Ed25519",
                                    "Rsa2048",
                                    "Rsa4096",
                                    "Rsa8192"
                                  ],
                                  "x-ms-enum": {
                                    "name": "PrivateKeyAlgorithm",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Ec256",
                                        "value": "Ec256",
                                        "description": "Algorithm - ec256."
                                      },
                                      {
                                        "name": "Ec384",
                                        "value": "Ec384",
                                        "description": "Algorithm - ec384."
                                      },
                                      {
                                        "name": "Ec521",
                                        "value": "Ec521",
                                        "description": "Algorithm - ec521."
                                      },
                                      {
                                        "name": "Ed25519",
                                        "value": "Ed25519",
                                        "description": "Algorithm - ed25519."
                                      },
                                      {
                                        "name": "Rsa2048",
                                        "value": "Rsa2048",
                                        "description": "Algorithm - rsa2048."
                                      },
                                      {
                                        "name": "Rsa4096",
                                        "value": "Rsa4096",
                                        "description": "Algorithm - rsa4096."
                                      },
                                      {
                                        "name": "Rsa8192",
                                        "value": "Rsa8192",
                                        "description": "Algorithm - rsa8192."
                                      }
                                    ]
                                  }
                                },
                                "rotationPolicy": {
                                  "description": "cert-manager private key rotationPolicy.",
                                  "type": "string",
                                  "enum": [
                                    "Always",
                                    "Never"
                                  ],
                                  "x-ms-enum": {
                                    "name": "PrivateKeyRotationPolicy",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Always",
                                        "value": "Always",
                                        "description": "Rotation Policy - Always."
                                      },
                                      {
                                        "name": "Never",
                                        "value": "Never",
                                        "description": "Rotation Policy - Never."
                                      }
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "algorithm",
                                "rotationPolicy"
                              ]
                            }
                          },
                          "required": [
                            "duration",
                            "renewBefore",
                            "privateKey"
                          ]
                        }
                      }
                    },
                    "cardinality": {
                      "description": "The cardinality details of the broker.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "backendChain": {
                          "description": "The backend broker desired properties",
                          "type": "object",
                          "properties": {
                            "partitions": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The desired number of physical backend partitions.",
                              "minimum": 1,
                              "maximum": 16
                            },
                            "redundancyFactor": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The desired numbers of backend replicas (pods) in a physical partition.",
                              "minimum": 1,
                              "maximum": 5
                            },
                            "workers": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Number of logical backend workers per replica (pod).",
                              "default": 1,
                              "minimum": 1,
                              "maximum": 16
                            }
                          },
                          "required": [
                            "partitions",
                            "redundancyFactor"
                          ]
                        },
                        "frontend": {
                          "description": "The frontend desired properties",
                          "type": "object",
                          "properties": {
                            "replicas": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The desired number of frontend instances (pods).",
                              "minimum": 1,
                              "maximum": 16
                            },
                            "workers": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Number of logical frontend workers per instance (pod).",
                              "default": 2,
                              "minimum": 1,
                              "maximum": 16
                            }
                          },
                          "required": [
                            "replicas"
                          ]
                        }
                      },
                      "required": [
                        "backendChain",
                        "frontend"
                      ]
                    },
                    "diagnostics": {
                      "description": "Spec defines the desired identities of Broker diagnostics settings.",
                      "type": "object",
                      "properties": {
                        "logs": {
                          "description": "Diagnostic log settings for the resource.",
                          "type": "object",
                          "properties": {
                            "level": {
                              "type": "string",
                              "description": "The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.",
                              "default": "info"
                            }
                          }
                        },
                        "metrics": {
                          "description": "The metrics settings for the resource.",
                          "type": "object",
                          "properties": {
                            "prometheusPort": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The prometheus port to expose the metrics.",
                              "default": 9600,
                              "minimum": 0,
                              "maximum": 65535
                            }
                          }
                        },
                        "selfCheck": {
                          "description": "The self check properties.",
                          "type": "object",
                          "properties": {
                            "mode": {
                              "type": "string",
                              "description": "The toggle to enable/disable self check.",
                              "default": "Enabled",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "OperationalMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled",
                                    "description": "Enabled is equivalent to True"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled",
                                    "description": "Disabled is equivalent to False."
                                  }
                                ]
                              }
                            },
                            "intervalSeconds": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The self check interval.",
                              "default": 30,
                              "minimum": 30,
                              "maximum": 300
                            },
                            "timeoutSeconds": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The timeout for self check.",
                              "default": 15,
                              "minimum": 5,
                              "maximum": 120
                            }
                          }
                        },
                        "traces": {
                          "description": "The trace properties.",
                          "type": "object",
                          "properties": {
                            "mode": {
                              "type": "string",
                              "description": "The toggle to enable/disable traces.",
                              "default": "Enabled",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "OperationalMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled",
                                    "description": "Enabled is equivalent to True"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled",
                                    "description": "Disabled is equivalent to False."
                                  }
                                ]
                              }
                            },
                            "cacheSizeMegabytes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The cache size in megabytes.",
                              "default": 16,
                              "minimum": 1,
                              "maximum": 128
                            },
                            "selfTracing": {
                              "description": "The self tracing properties.",
                              "type": "object",
                              "properties": {
                                "mode": {
                                  "type": "string",
                                  "description": "The toggle to enable/disable self tracing.",
                                  "default": "Enabled",
                                  "enum": [
                                    "Enabled",
                                    "Disabled"
                                  ],
                                  "x-ms-enum": {
                                    "name": "OperationalMode",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Enabled",
                                        "value": "Enabled",
                                        "description": "Enabled is equivalent to True"
                                      },
                                      {
                                        "name": "Disabled",
                                        "value": "Disabled",
                                        "description": "Disabled is equivalent to False."
                                      }
                                    ]
                                  }
                                },
                                "intervalSeconds": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The self tracing interval.",
                                  "default": 30,
                                  "minimum": 1,
                                  "maximum": 300
                                }
                              }
                            },
                            "spanChannelCapacity": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The span channel capacity.",
                              "default": 1000,
                              "minimum": 1000,
                              "maximum": 100000
                            }
                          }
                        }
                      }
                    },
                    "diskBackedMessageBuffer": {
                      "description": "Settings of Disk Backed Message Buffer.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "maxSize": {
                          "type": "string",
                          "description": "The max size of the message buffer on disk. If a PVC template is specified using one of ephemeralVolumeClaimSpec or persistentVolumeClaimSpec, then this size is used as the request and limit sizes of that template. If neither ephemeralVolumeClaimSpec nor persistentVolumeClaimSpec are specified, then an emptyDir volume is mounted with this size as its limit. See <https://kubernetes.io/docs/concepts/storage/volumes/#emptydir> for details.",
                          "pattern": "^[0-9]+[KMGTPE]$"
                        },
                        "ephemeralVolumeClaimSpec": {
                          "description": "Use the specified persistent volume claim template to mount a \"generic ephemeral volume\" for the message buffer. See <https://kubernetes.io/docs/concepts/storage/ephemeral-volumes/#generic-ephemeral-volumes> for details.",
                          "type": "object",
                          "properties": {
                            "volumeName": {
                              "type": "string",
                              "description": "VolumeName is the binding reference to the PersistentVolume backing this claim."
                            },
                            "volumeMode": {
                              "type": "string",
                              "description": "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature."
                            },
                            "storageClassName": {
                              "type": "string",
                              "description": "Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"
                            },
                            "accessModes": {
                              "type": "array",
                              "description": "AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                              "items": {
                                "type": "string"
                              }
                            },
                            "dataSource": {
                              "description": "This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.",
                              "type": "object",
                              "properties": {
                                "apiGroup": {
                                  "type": "string",
                                  "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                                },
                                "kind": {
                                  "type": "string",
                                  "description": "Kind is the type of resource being referenced"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name is the name of resource being referenced"
                                }
                              },
                              "required": [
                                "kind",
                                "name"
                              ]
                            },
                            "dataSourceRef": {
                              "description": "Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.",
                              "type": "object",
                              "properties": {
                                "apiGroup": {
                                  "type": "string",
                                  "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                                },
                                "kind": {
                                  "type": "string",
                                  "description": "Kind is the type of resource being referenced"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name is the name of resource being referenced"
                                },
                                "namespace": {
                                  "type": "string",
                                  "description": "Namespace is the namespace of the resource being referenced. This field is required when the resource has a namespace."
                                }
                              },
                              "required": [
                                "kind",
                                "name"
                              ]
                            },
                            "resources": {
                              "description": "Resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                              "type": "object",
                              "properties": {
                                "limits": {
                                  "type": "object",
                                  "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "requests": {
                                  "type": "object",
                                  "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "claims": {
                                  "type": "array",
                                  "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.\n\nThis is an alpha field and requires enabling the DynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                                  "items": {
                                    "type": "object",
                                    "description": "VolumeClaimResourceRequirementsClaims properties.",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the resource. This must match the name of a resource in spec.resourceClaims."
                                      }
                                    },
                                    "required": [
                                      "name"
                                    ]
                                  },
                                  "x-ms-identifiers": []
                                }
                              }
                            },
                            "selector": {
                              "description": "A label query over volumes to consider for binding.",
                              "type": "object",
                              "properties": {
                                "matchExpressions": {
                                  "type": "array",
                                  "description": "MatchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                  "items": {
                                    "type": "object",
                                    "description": "VolumeClaimSpecSelectorMatchExpressions properties",
                                    "properties": {
                                      "key": {
                                        "type": "string",
                                        "description": "key is the label key that the selector applies to."
                                      },
                                      "operator": {
                                        "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                        "type": "string",
                                        "enum": [
                                          "In",
                                          "NotIn",
                                          "Exists",
                                          "DoesNotExist"
                                        ],
                                        "x-ms-enum": {
                                          "name": "OperatorValues",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "In",
                                              "value": "In",
                                              "description": "In operator."
                                            },
                                            {
                                              "name": "NotIn",
                                              "value": "NotIn",
                                              "description": "NotIn operator."
                                            },
                                            {
                                              "name": "Exists",
                                              "value": "Exists",
                                              "description": "Exists operator."
                                            },
                                            {
                                              "name": "DoesNotExist",
                                              "value": "DoesNotExist",
                                              "description": "DoesNotExist operator."
                                            }
                                          ]
                                        }
                                      },
                                      "values": {
                                        "type": "array",
                                        "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "required": [
                                      "key",
                                      "operator"
                                    ]
                                  },
                                  "x-ms-identifiers": []
                                },
                                "matchLabels": {
                                  "type": "object",
                                  "description": "MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "persistentVolumeClaimSpec": {
                          "description": "Use the specified persistent volume claim template to mount a persistent volume for the message buffer.",
                          "type": "object",
                          "properties": {
                            "volumeName": {
                              "type": "string",
                              "description": "VolumeName is the binding reference to the PersistentVolume backing this claim."
                            },
                            "volumeMode": {
                              "type": "string",
                              "description": "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature."
                            },
                            "storageClassName": {
                              "type": "string",
                              "description": "Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"
                            },
                            "accessModes": {
                              "type": "array",
                              "description": "AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                              "items": {
                                "type": "string"
                              }
                            },
                            "dataSource": {
                              "description": "This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.",
                              "type": "object",
                              "properties": {
                                "apiGroup": {
                                  "type": "string",
                                  "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                                },
                                "kind": {
                                  "type": "string",
                                  "description": "Kind is the type of resource being referenced"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name is the name of resource being referenced"
                                }
                              },
                              "required": [
                                "kind",
                                "name"
                              ]
                            },
                            "dataSourceRef": {
                              "description": "Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.",
                              "type": "object",
                              "properties": {
                                "apiGroup": {
                                  "type": "string",
                                  "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                                },
                                "kind": {
                                  "type": "string",
                                  "description": "Kind is the type of resource being referenced"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name is the name of resource being referenced"
                                },
                                "namespace": {
                                  "type": "string",
                                  "description": "Namespace is the namespace of the resource being referenced. This field is required when the resource has a namespace."
                                }
                              },
                              "required": [
                                "kind",
                                "name"
                              ]
                            },
                            "resources": {
                              "description": "Resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                              "type": "object",
                              "properties": {
                                "limits": {
                                  "type": "object",
                                  "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "requests": {
                                  "type": "object",
                                  "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "claims": {
                                  "type": "array",
                                  "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.\n\nThis is an alpha field and requires enabling the DynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                                  "items": {
                                    "type": "object",
                                    "description": "VolumeClaimResourceRequirementsClaims properties.",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the resource. This must match the name of a resource in spec.resourceClaims."
                                      }
                                    },
                                    "required": [
                                      "name"
                                    ]
                                  },
                                  "x-ms-identifiers": []
                                }
                              }
                            },
                            "selector": {
                              "description": "A label query over volumes to consider for binding.",
                              "type": "object",
                              "properties": {
                                "matchExpressions": {
                                  "type": "array",
                                  "description": "MatchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                  "items": {
                                    "type": "object",
                                    "description": "VolumeClaimSpecSelectorMatchExpressions properties",
                                    "properties": {
                                      "key": {
                                        "type": "string",
                                        "description": "key is the label key that the selector applies to."
                                      },
                                      "operator": {
                                        "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                        "type": "string",
                                        "enum": [
                                          "In",
                                          "NotIn",
                                          "Exists",
                                          "DoesNotExist"
                                        ],
                                        "x-ms-enum": {
                                          "name": "OperatorValues",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "In",
                                              "value": "In",
                                              "description": "In operator."
                                            },
                                            {
                                              "name": "NotIn",
                                              "value": "NotIn",
                                              "description": "NotIn operator."
                                            },
                                            {
                                              "name": "Exists",
                                              "value": "Exists",
                                              "description": "Exists operator."
                                            },
                                            {
                                              "name": "DoesNotExist",
                                              "value": "DoesNotExist",
                                              "description": "DoesNotExist operator."
                                            }
                                          ]
                                        }
                                      },
                                      "values": {
                                        "type": "array",
                                        "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "required": [
                                      "key",
                                      "operator"
                                    ]
                                  },
                                  "x-ms-identifiers": []
                                },
                                "matchLabels": {
                                  "type": "object",
                                  "description": "MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "maxSize"
                      ]
                    },
                    "generateResourceLimits": {
                      "description": "This setting controls whether Kubernetes CPU resource limits are requested. Increasing the number of replicas or workers proportionally increases the amount of CPU resources requested. If this setting is enabled and there are insufficient CPU resources, an error will be emitted.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "cpu": {
                          "type": "string",
                          "description": "The toggle to enable/disable cpu resource limits.",
                          "default": "Enabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "OperationalMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "Enabled is equivalent to True"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "Disabled is equivalent to False."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "memoryProfile": {
                      "type": "string",
                      "description": "Memory profile of Broker.",
                      "default": "Medium",
                      "enum": [
                        "Tiny",
                        "Low",
                        "Medium",
                        "High"
                      ],
                      "x-ms-enum": {
                        "name": "BrokerMemoryProfile",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Tiny",
                            "value": "Tiny",
                            "description": "Tiny memory profile."
                          },
                          {
                            "name": "Low",
                            "value": "Low",
                            "description": "Low memory profile."
                          },
                          {
                            "name": "Medium",
                            "value": "Medium",
                            "description": "Medium memory profile."
                          },
                          {
                            "name": "High",
                            "value": "High",
                            "description": "High memory profile."
                          }
                        ]
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "persistence": {
                      "description": "The persistence settings of the Broker.",
                      "type": "object",
                      "properties": {
                        "maxSize": {
                          "type": "string",
                          "description": "The max size of the message buffer on disk. If a PVC template is specified using persistentVolumeClaimSpec Then this size is used as the request and limit sizes of that template. If a PVC template isn't specified Then local-path provisioner is requested with this size limit. Required.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "persistentVolumeClaimSpec": {
                          "description": "Use the specified persistent volume claim template to mount a persistent volume. Same object as in diskBackedMessageBuffer, but with a limitation that access modes field must be set to `ReadWriteOncePod`.\n\nIf unset, a default PVC with default properties will be used. Among other things this PVC will use the cluster default storage class, which may or may not be using a local path provisioner. User is opting in to sub-optimal behavior if they leave this unset or set it without the storage class field, and their cluster default is not a local path class.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "object",
                          "properties": {
                            "volumeName": {
                              "type": "string",
                              "description": "VolumeName is the binding reference to the PersistentVolume backing this claim."
                            },
                            "volumeMode": {
                              "type": "string",
                              "description": "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature."
                            },
                            "storageClassName": {
                              "type": "string",
                              "description": "Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"
                            },
                            "accessModes": {
                              "type": "array",
                              "description": "AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                              "items": {
                                "type": "string"
                              }
                            },
                            "dataSource": {
                              "description": "This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.",
                              "type": "object",
                              "properties": {
                                "apiGroup": {
                                  "type": "string",
                                  "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                                },
                                "kind": {
                                  "type": "string",
                                  "description": "Kind is the type of resource being referenced"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name is the name of resource being referenced"
                                }
                              },
                              "required": [
                                "kind",
                                "name"
                              ]
                            },
                            "dataSourceRef": {
                              "description": "Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.",
                              "type": "object",
                              "properties": {
                                "apiGroup": {
                                  "type": "string",
                                  "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                                },
                                "kind": {
                                  "type": "string",
                                  "description": "Kind is the type of resource being referenced"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name is the name of resource being referenced"
                                },
                                "namespace": {
                                  "type": "string",
                                  "description": "Namespace is the namespace of the resource being referenced. This field is required when the resource has a namespace."
                                }
                              },
                              "required": [
                                "kind",
                                "name"
                              ]
                            },
                            "resources": {
                              "description": "Resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                              "type": "object",
                              "properties": {
                                "limits": {
                                  "type": "object",
                                  "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "requests": {
                                  "type": "object",
                                  "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "claims": {
                                  "type": "array",
                                  "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.\n\nThis is an alpha field and requires enabling the DynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                                  "items": {
                                    "type": "object",
                                    "description": "VolumeClaimResourceRequirementsClaims properties.",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the resource. This must match the name of a resource in spec.resourceClaims."
                                      }
                                    },
                                    "required": [
                                      "name"
                                    ]
                                  },
                                  "x-ms-identifiers": []
                                }
                              }
                            },
                            "selector": {
                              "description": "A label query over volumes to consider for binding.",
                              "type": "object",
                              "properties": {
                                "matchExpressions": {
                                  "type": "array",
                                  "description": "MatchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                  "items": {
                                    "type": "object",
                                    "description": "VolumeClaimSpecSelectorMatchExpressions properties",
                                    "properties": {
                                      "key": {
                                        "type": "string",
                                        "description": "key is the label key that the selector applies to."
                                      },
                                      "operator": {
                                        "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                        "type": "string",
                                        "enum": [
                                          "In",
                                          "NotIn",
                                          "Exists",
                                          "DoesNotExist"
                                        ],
                                        "x-ms-enum": {
                                          "name": "OperatorValues",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "In",
                                              "value": "In",
                                              "description": "In operator."
                                            },
                                            {
                                              "name": "NotIn",
                                              "value": "NotIn",
                                              "description": "NotIn operator."
                                            },
                                            {
                                              "name": "Exists",
                                              "value": "Exists",
                                              "description": "Exists operator."
                                            },
                                            {
                                              "name": "DoesNotExist",
                                              "value": "DoesNotExist",
                                              "description": "DoesNotExist operator."
                                            }
                                          ]
                                        }
                                      },
                                      "values": {
                                        "type": "array",
                                        "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "required": [
                                      "key",
                                      "operator"
                                    ]
                                  },
                                  "x-ms-identifiers": []
                                },
                                "matchLabels": {
                                  "type": "object",
                                  "description": "MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "retain": {
                          "description": "Controls which topic's retained messages should be persisted to disk.",
                          "type": "object",
                          "properties": {
                            "mode": {
                              "description": "'All' to persist all retain messages, 'None' to not persist any, 'Custom' to persist only the specified topics.",
                              "type": "string",
                              "enum": [
                                "All",
                                "None",
                                "Custom"
                              ],
                              "x-ms-enum": {
                                "name": "BrokerPersistencePolicyMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "All",
                                    "value": "All",
                                    "description": "Policy mode for All."
                                  },
                                  {
                                    "name": "None",
                                    "value": "None",
                                    "description": "Policy mode for None."
                                  },
                                  {
                                    "name": "Custom",
                                    "value": "Custom",
                                    "description": "Indicates that the policy is a custom policy."
                                  }
                                ]
                              }
                            }
                          },
                          "discriminator": "mode",
                          "required": [
                            "mode"
                          ]
                        },
                        "stateStore": {
                          "description": "Controls which keys should be persisted to disk for the state store.",
                          "type": "object",
                          "properties": {
                            "mode": {
                              "description": "'All' to persist all keys, 'None' to not persist any, 'Custom' to persist only the specified keys.",
                              "type": "string",
                              "enum": [
                                "All",
                                "None",
                                "Custom"
                              ],
                              "x-ms-enum": {
                                "name": "BrokerPersistencePolicyMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "All",
                                    "value": "All",
                                    "description": "Policy mode for All."
                                  },
                                  {
                                    "name": "None",
                                    "value": "None",
                                    "description": "Policy mode for None."
                                  },
                                  {
                                    "name": "Custom",
                                    "value": "Custom",
                                    "description": "Indicates that the policy is a custom policy."
                                  }
                                ]
                              }
                            }
                          },
                          "discriminator": "mode",
                          "required": [
                            "mode"
                          ]
                        },
                        "subscriberQueue": {
                          "description": "Controls which subscriber message queues should be persisted to disk. Important: to facilitate reconnection, session state metadata are ALWAYS written to disk if any persistence setting is specified, even if this section isn't set.",
                          "type": "object",
                          "properties": {
                            "mode": {
                              "description": "'All' to persist all subscriber queues, 'None' to not persist any, 'Custom' to persist only the specified queues.",
                              "type": "string",
                              "enum": [
                                "All",
                                "None",
                                "Custom"
                              ],
                              "x-ms-enum": {
                                "name": "BrokerPersistencePolicyMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "All",
                                    "value": "All",
                                    "description": "Policy mode for All."
                                  },
                                  {
                                    "name": "None",
                                    "value": "None",
                                    "description": "Policy mode for None."
                                  },
                                  {
                                    "name": "Custom",
                                    "value": "Custom",
                                    "description": "Indicates that the policy is a custom policy."
                                  }
                                ]
                              }
                            }
                          },
                          "discriminator": "mode",
                          "required": [
                            "mode"
                          ]
                        },
                        "encryption": {
                          "description": "Controls settings related to encryption of the persistence database. Optional, defaults to enabling encryption.",
                          "type": "object",
                          "properties": {
                            "mode": {
                              "type": "string",
                              "description": "Mode properties",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "OperationalMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled",
                                    "description": "Enabled is equivalent to True"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled",
                                    "description": "Disabled is equivalent to False."
                                  }
                                ]
                              }
                            }
                          },
                          "required": [
                            "mode"
                          ]
                        }
                      },
                      "required": [
                        "maxSize"
                      ]
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is getting provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Resource is Updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is Deleting."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been Accepted."
                          }
                        ]
                      }
                    },
                    "healthState": {
                      "type": "string",
                      "description": "The health state of the resource.",
                      "default": "Unknown",
                      "enum": [
                        "Available",
                        "Degraded",
                        "Unavailable",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceHealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "Resource is Available and functioning as expected."
                          },
                          {
                            "name": "Degraded",
                            "value": "Degraded",
                            "description": "Resource health is degraded."
                          },
                          {
                            "name": "Unavailable",
                            "value": "Unavailable",
                            "description": "Resource is not functioning as expected."
                          },
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "Resource state is unknown."
                          }
                        ]
                      },
                      "readOnly": true
                    }
                  }
                },
                "extendedLocation": {
                  "description": "Edge location of the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "Type of ExtendedLocation.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "CustomLocation type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'BrokerResource' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Instance broker resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "advanced": {
                      "description": "Advanced settings of Broker.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "clients": {
                          "description": "Configurations related to All Clients.",
                          "type": "object",
                          "properties": {
                            "maxSessionExpirySeconds": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Upper bound of Session Expiry Interval, in seconds.",
                              "minimum": 1,
                              "maximum": 4294967295
                            },
                            "maxMessageExpirySeconds": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Upper bound of Message Expiry Interval, in seconds.",
                              "minimum": 1,
                              "maximum": 4294967295
                            },
                            "maxPacketSizeBytes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Max message size for a packet in Bytes.",
                              "minimum": 1,
                              "maximum": 268435456
                            },
                            "subscriberQueueLimit": {
                              "description": "The limit on the number of queued messages for a subscriber.",
                              "type": "object",
                              "properties": {
                                "length": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The maximum length of the queue before messages start getting dropped.",
                                  "minimum": 1
                                },
                                "strategy": {
                                  "type": "string",
                                  "description": "The strategy to use for dropping messages from the queue.",
                                  "default": "None",
                                  "enum": [
                                    "None",
                                    "DropOldest"
                                  ],
                                  "x-ms-enum": {
                                    "name": "SubscriberMessageDropStrategy",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "None",
                                        "value": "None",
                                        "description": "Messages are never dropped."
                                      },
                                      {
                                        "name": "DropOldest",
                                        "value": "DropOldest",
                                        "description": "The oldest message is dropped."
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "maxReceiveMaximum": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Upper bound of Receive Maximum that a client can request in the CONNECT packet.",
                              "minimum": 1,
                              "maximum": 65535
                            },
                            "maxKeepAliveSeconds": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Upper bound of a client's Keep Alive, in seconds.",
                              "minimum": 0,
                              "maximum": 65535
                            }
                          }
                        },
                        "encryptInternalTraffic": {
                          "type": "string",
                          "description": "The setting to enable or disable encryption of internal Traffic.",
                          "default": "Enabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "OperationalMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "Enabled is equivalent to True"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "Disabled is equivalent to False."
                              }
                            ]
                          }
                        },
                        "internalCerts": {
                          "description": "Certificate rotation and private key configuration.",
                          "type": "object",
                          "properties": {
                            "duration": {
                              "type": "string",
                              "description": "Lifetime of certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."
                            },
                            "renewBefore": {
                              "type": "string",
                              "description": "When to begin renewing certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."
                            },
                            "privateKey": {
                              "description": "Configuration of certificate private key.",
                              "type": "object",
                              "properties": {
                                "algorithm": {
                                  "description": "algorithm for private key.",
                                  "type": "string",
                                  "enum": [
                                    "Ec256",
                                    "Ec384",
                                    "Ec521",
                                    "Ed25519",
                                    "Rsa2048",
                                    "Rsa4096",
                                    "Rsa8192"
                                  ],
                                  "x-ms-enum": {
                                    "name": "PrivateKeyAlgorithm",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Ec256",
                                        "value": "Ec256",
                                        "description": "Algorithm - ec256."
                                      },
                                      {
                                        "name": "Ec384",
                                        "value": "Ec384",
                                        "description": "Algorithm - ec384."
                                      },
                                      {
                                        "name": "Ec521",
                                        "value": "Ec521",
                                        "description": "Algorithm - ec521."
                                      },
                                      {
                                        "name": "Ed25519",
                                        "value": "Ed25519",
                                        "description": "Algorithm - ed25519."
                                      },
                                      {
                                        "name": "Rsa2048",
                                        "value": "Rsa2048",
                                        "description": "Algorithm - rsa2048."
                                      },
                                      {
                                        "name": "Rsa4096",
                                        "value": "Rsa4096",
                                        "description": "Algorithm - rsa4096."
                                      },
                                      {
                                        "name": "Rsa8192",
                                        "value": "Rsa8192",
                                        "description": "Algorithm - rsa8192."
                                      }
                                    ]
                                  }
                                },
                                "rotationPolicy": {
                                  "description": "cert-manager private key rotationPolicy.",
                                  "type": "string",
                                  "enum": [
                                    "Always",
                                    "Never"
                                  ],
                                  "x-ms-enum": {
                                    "name": "PrivateKeyRotationPolicy",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Always",
                                        "value": "Always",
                                        "description": "Rotation Policy - Always."
                                      },
                                      {
                                        "name": "Never",
                                        "value": "Never",
                                        "description": "Rotation Policy - Never."
                                      }
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "algorithm",
                                "rotationPolicy"
                              ]
                            }
                          },
                          "required": [
                            "duration",
                            "renewBefore",
                            "privateKey"
                          ]
                        }
                      }
                    },
                    "cardinality": {
                      "description": "The cardinality details of the broker.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "backendChain": {
                          "description": "The backend broker desired properties",
                          "type": "object",
                          "properties": {
                            "partitions": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The desired number of physical backend partitions.",
                              "minimum": 1,
                              "maximum": 16
                            },
                            "redundancyFactor": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The desired numbers of backend replicas (pods) in a physical partition.",
                              "minimum": 1,
                              "maximum": 5
                            },
                            "workers": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Number of logical backend workers per replica (pod).",
                              "default": 1,
                              "minimum": 1,
                              "maximum": 16
                            }
                          },
                          "required": [
                            "partitions",
                            "redundancyFactor"
                          ]
                        },
                        "frontend": {
                          "description": "The frontend desired properties",
                          "type": "object",
                          "properties": {
                            "replicas": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The desired number of frontend instances (pods).",
                              "minimum": 1,
                              "maximum": 16
                            },
                            "workers": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Number of logical frontend workers per instance (pod).",
                              "default": 2,
                              "minimum": 1,
                              "maximum": 16
                            }
                          },
                          "required": [
                            "replicas"
                          ]
                        }
                      },
                      "required": [
                        "backendChain",
                        "frontend"
                      ]
                    },
                    "diagnostics": {
                      "description": "Spec defines the desired identities of Broker diagnostics settings.",
                      "type": "object",
                      "properties": {
                        "logs": {
                          "description": "Diagnostic log settings for the resource.",
                          "type": "object",
                          "properties": {
                            "level": {
                              "type": "string",
                              "description": "The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.",
                              "default": "info"
                            }
                          }
                        },
                        "metrics": {
                          "description": "The metrics settings for the resource.",
                          "type": "object",
                          "properties": {
                            "prometheusPort": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The prometheus port to expose the metrics.",
                              "default": 9600,
                              "minimum": 0,
                              "maximum": 65535
                            }
                          }
                        },
                        "selfCheck": {
                          "description": "The self check properties.",
                          "type": "object",
                          "properties": {
                            "mode": {
                              "type": "string",
                              "description": "The toggle to enable/disable self check.",
                              "default": "Enabled",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "OperationalMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled",
                                    "description": "Enabled is equivalent to True"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled",
                                    "description": "Disabled is equivalent to False."
                                  }
                                ]
                              }
                            },
                            "intervalSeconds": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The self check interval.",
                              "default": 30,
                              "minimum": 30,
                              "maximum": 300
                            },
                            "timeoutSeconds": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The timeout for self check.",
                              "default": 15,
                              "minimum": 5,
                              "maximum": 120
                            }
                          }
                        },
                        "traces": {
                          "description": "The trace properties.",
                          "type": "object",
                          "properties": {
                            "mode": {
                              "type": "string",
                              "description": "The toggle to enable/disable traces.",
                              "default": "Enabled",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "OperationalMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled",
                                    "description": "Enabled is equivalent to True"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled",
                                    "description": "Disabled is equivalent to False."
                                  }
                                ]
                              }
                            },
                            "cacheSizeMegabytes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The cache size in megabytes.",
                              "default": 16,
                              "minimum": 1,
                              "maximum": 128
                            },
                            "selfTracing": {
                              "description": "The self tracing properties.",
                              "type": "object",
                              "properties": {
                                "mode": {
                                  "type": "string",
                                  "description": "The toggle to enable/disable self tracing.",
                                  "default": "Enabled",
                                  "enum": [
                                    "Enabled",
                                    "Disabled"
                                  ],
                                  "x-ms-enum": {
                                    "name": "OperationalMode",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Enabled",
                                        "value": "Enabled",
                                        "description": "Enabled is equivalent to True"
                                      },
                                      {
                                        "name": "Disabled",
                                        "value": "Disabled",
                                        "description": "Disabled is equivalent to False."
                                      }
                                    ]
                                  }
                                },
                                "intervalSeconds": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The self tracing interval.",
                                  "default": 30,
                                  "minimum": 1,
                                  "maximum": 300
                                }
                              }
                            },
                            "spanChannelCapacity": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The span channel capacity.",
                              "default": 1000,
                              "minimum": 1000,
                              "maximum": 100000
                            }
                          }
                        }
                      }
                    },
                    "diskBackedMessageBuffer": {
                      "description": "Settings of Disk Backed Message Buffer.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "maxSize": {
                          "type": "string",
                          "description": "The max size of the message buffer on disk. If a PVC template is specified using one of ephemeralVolumeClaimSpec or persistentVolumeClaimSpec, then this size is used as the request and limit sizes of that template. If neither ephemeralVolumeClaimSpec nor persistentVolumeClaimSpec are specified, then an emptyDir volume is mounted with this size as its limit. See <https://kubernetes.io/docs/concepts/storage/volumes/#emptydir> for details.",
                          "pattern": "^[0-9]+[KMGTPE]$"
                        },
                        "ephemeralVolumeClaimSpec": {
                          "description": "Use the specified persistent volume claim template to mount a \"generic ephemeral volume\" for the message buffer. See <https://kubernetes.io/docs/concepts/storage/ephemeral-volumes/#generic-ephemeral-volumes> for details.",
                          "type": "object",
                          "properties": {
                            "volumeName": {
                              "type": "string",
                              "description": "VolumeName is the binding reference to the PersistentVolume backing this claim."
                            },
                            "volumeMode": {
                              "type": "string",
                              "description": "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature."
                            },
                            "storageClassName": {
                              "type": "string",
                              "description": "Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"
                            },
                            "accessModes": {
                              "type": "array",
                              "description": "AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                              "items": {
                                "type": "string"
                              }
                            },
                            "dataSource": {
                              "description": "This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.",
                              "type": "object",
                              "properties": {
                                "apiGroup": {
                                  "type": "string",
                                  "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                                },
                                "kind": {
                                  "type": "string",
                                  "description": "Kind is the type of resource being referenced"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name is the name of resource being referenced"
                                }
                              },
                              "required": [
                                "kind",
                                "name"
                              ]
                            },
                            "dataSourceRef": {
                              "description": "Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.",
                              "type": "object",
                              "properties": {
                                "apiGroup": {
                                  "type": "string",
                                  "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                                },
                                "kind": {
                                  "type": "string",
                                  "description": "Kind is the type of resource being referenced"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name is the name of resource being referenced"
                                },
                                "namespace": {
                                  "type": "string",
                                  "description": "Namespace is the namespace of the resource being referenced. This field is required when the resource has a namespace."
                                }
                              },
                              "required": [
                                "kind",
                                "name"
                              ]
                            },
                            "resources": {
                              "description": "Resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                              "type": "object",
                              "properties": {
                                "limits": {
                                  "type": "object",
                                  "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "requests": {
                                  "type": "object",
                                  "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "claims": {
                                  "type": "array",
                                  "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.\n\nThis is an alpha field and requires enabling the DynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                                  "items": {
                                    "type": "object",
                                    "description": "VolumeClaimResourceRequirementsClaims properties.",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the resource. This must match the name of a resource in spec.resourceClaims."
                                      }
                                    },
                                    "required": [
                                      "name"
                                    ]
                                  },
                                  "x-ms-identifiers": []
                                }
                              }
                            },
                            "selector": {
                              "description": "A label query over volumes to consider for binding.",
                              "type": "object",
                              "properties": {
                                "matchExpressions": {
                                  "type": "array",
                                  "description": "MatchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                  "items": {
                                    "type": "object",
                                    "description": "VolumeClaimSpecSelectorMatchExpressions properties",
                                    "properties": {
                                      "key": {
                                        "type": "string",
                                        "description": "key is the label key that the selector applies to."
                                      },
                                      "operator": {
                                        "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                        "type": "string",
                                        "enum": [
                                          "In",
                                          "NotIn",
                                          "Exists",
                                          "DoesNotExist"
                                        ],
                                        "x-ms-enum": {
                                          "name": "OperatorValues",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "In",
                                              "value": "In",
                                              "description": "In operator."
                                            },
                                            {
                                              "name": "NotIn",
                                              "value": "NotIn",
                                              "description": "NotIn operator."
                                            },
                                            {
                                              "name": "Exists",
                                              "value": "Exists",
                                              "description": "Exists operator."
                                            },
                                            {
                                              "name": "DoesNotExist",
                                              "value": "DoesNotExist",
                                              "description": "DoesNotExist operator."
                                            }
                                          ]
                                        }
                                      },
                                      "values": {
                                        "type": "array",
                                        "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "required": [
                                      "key",
                                      "operator"
                                    ]
                                  },
                                  "x-ms-identifiers": []
                                },
                                "matchLabels": {
                                  "type": "object",
                                  "description": "MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "persistentVolumeClaimSpec": {
                          "description": "Use the specified persistent volume claim template to mount a persistent volume for the message buffer.",
                          "type": "object",
                          "properties": {
                            "volumeName": {
                              "type": "string",
                              "description": "VolumeName is the binding reference to the PersistentVolume backing this claim."
                            },
                            "volumeMode": {
                              "type": "string",
                              "description": "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature."
                            },
                            "storageClassName": {
                              "type": "string",
                              "description": "Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"
                            },
                            "accessModes": {
                              "type": "array",
                              "description": "AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                              "items": {
                                "type": "string"
                              }
                            },
                            "dataSource": {
                              "description": "This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.",
                              "type": "object",
                              "properties": {
                                "apiGroup": {
                                  "type": "string",
                                  "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                                },
                                "kind": {
                                  "type": "string",
                                  "description": "Kind is the type of resource being referenced"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name is the name of resource being referenced"
                                }
                              },
                              "required": [
                                "kind",
                                "name"
                              ]
                            },
                            "dataSourceRef": {
                              "description": "Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.",
                              "type": "object",
                              "properties": {
                                "apiGroup": {
                                  "type": "string",
                                  "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                                },
                                "kind": {
                                  "type": "string",
                                  "description": "Kind is the type of resource being referenced"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name is the name of resource being referenced"
                                },
                                "namespace": {
                                  "type": "string",
                                  "description": "Namespace is the namespace of the resource being referenced. This field is required when the resource has a namespace."
                                }
                              },
                              "required": [
                                "kind",
                                "name"
                              ]
                            },
                            "resources": {
                              "description": "Resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                              "type": "object",
                              "properties": {
                                "limits": {
                                  "type": "object",
                                  "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "requests": {
                                  "type": "object",
                                  "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "claims": {
                                  "type": "array",
                                  "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.\n\nThis is an alpha field and requires enabling the DynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                                  "items": {
                                    "type": "object",
                                    "description": "VolumeClaimResourceRequirementsClaims properties.",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the resource. This must match the name of a resource in spec.resourceClaims."
                                      }
                                    },
                                    "required": [
                                      "name"
                                    ]
                                  },
                                  "x-ms-identifiers": []
                                }
                              }
                            },
                            "selector": {
                              "description": "A label query over volumes to consider for binding.",
                              "type": "object",
                              "properties": {
                                "matchExpressions": {
                                  "type": "array",
                                  "description": "MatchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                  "items": {
                                    "type": "object",
                                    "description": "VolumeClaimSpecSelectorMatchExpressions properties",
                                    "properties": {
                                      "key": {
                                        "type": "string",
                                        "description": "key is the label key that the selector applies to."
                                      },
                                      "operator": {
                                        "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                        "type": "string",
                                        "enum": [
                                          "In",
                                          "NotIn",
                                          "Exists",
                                          "DoesNotExist"
                                        ],
                                        "x-ms-enum": {
                                          "name": "OperatorValues",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "In",
                                              "value": "In",
                                              "description": "In operator."
                                            },
                                            {
                                              "name": "NotIn",
                                              "value": "NotIn",
                                              "description": "NotIn operator."
                                            },
                                            {
                                              "name": "Exists",
                                              "value": "Exists",
                                              "description": "Exists operator."
                                            },
                                            {
                                              "name": "DoesNotExist",
                                              "value": "DoesNotExist",
                                              "description": "DoesNotExist operator."
                                            }
                                          ]
                                        }
                                      },
                                      "values": {
                                        "type": "array",
                                        "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "required": [
                                      "key",
                                      "operator"
                                    ]
                                  },
                                  "x-ms-identifiers": []
                                },
                                "matchLabels": {
                                  "type": "object",
                                  "description": "MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "maxSize"
                      ]
                    },
                    "generateResourceLimits": {
                      "description": "This setting controls whether Kubernetes CPU resource limits are requested. Increasing the number of replicas or workers proportionally increases the amount of CPU resources requested. If this setting is enabled and there are insufficient CPU resources, an error will be emitted.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "cpu": {
                          "type": "string",
                          "description": "The toggle to enable/disable cpu resource limits.",
                          "default": "Enabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "OperationalMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "Enabled is equivalent to True"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "Disabled is equivalent to False."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "memoryProfile": {
                      "type": "string",
                      "description": "Memory profile of Broker.",
                      "default": "Medium",
                      "enum": [
                        "Tiny",
                        "Low",
                        "Medium",
                        "High"
                      ],
                      "x-ms-enum": {
                        "name": "BrokerMemoryProfile",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Tiny",
                            "value": "Tiny",
                            "description": "Tiny memory profile."
                          },
                          {
                            "name": "Low",
                            "value": "Low",
                            "description": "Low memory profile."
                          },
                          {
                            "name": "Medium",
                            "value": "Medium",
                            "description": "Medium memory profile."
                          },
                          {
                            "name": "High",
                            "value": "High",
                            "description": "High memory profile."
                          }
                        ]
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "persistence": {
                      "description": "The persistence settings of the Broker.",
                      "type": "object",
                      "properties": {
                        "maxSize": {
                          "type": "string",
                          "description": "The max size of the message buffer on disk. If a PVC template is specified using persistentVolumeClaimSpec Then this size is used as the request and limit sizes of that template. If a PVC template isn't specified Then local-path provisioner is requested with this size limit. Required.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "persistentVolumeClaimSpec": {
                          "description": "Use the specified persistent volume claim template to mount a persistent volume. Same object as in diskBackedMessageBuffer, but with a limitation that access modes field must be set to `ReadWriteOncePod`.\n\nIf unset, a default PVC with default properties will be used. Among other things this PVC will use the cluster default storage class, which may or may not be using a local path provisioner. User is opting in to sub-optimal behavior if they leave this unset or set it without the storage class field, and their cluster default is not a local path class.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "object",
                          "properties": {
                            "volumeName": {
                              "type": "string",
                              "description": "VolumeName is the binding reference to the PersistentVolume backing this claim."
                            },
                            "volumeMode": {
                              "type": "string",
                              "description": "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature."
                            },
                            "storageClassName": {
                              "type": "string",
                              "description": "Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"
                            },
                            "accessModes": {
                              "type": "array",
                              "description": "AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                              "items": {
                                "type": "string"
                              }
                            },
                            "dataSource": {
                              "description": "This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.",
                              "type": "object",
                              "properties": {
                                "apiGroup": {
                                  "type": "string",
                                  "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                                },
                                "kind": {
                                  "type": "string",
                                  "description": "Kind is the type of resource being referenced"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name is the name of resource being referenced"
                                }
                              },
                              "required": [
                                "kind",
                                "name"
                              ]
                            },
                            "dataSourceRef": {
                              "description": "Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.",
                              "type": "object",
                              "properties": {
                                "apiGroup": {
                                  "type": "string",
                                  "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                                },
                                "kind": {
                                  "type": "string",
                                  "description": "Kind is the type of resource being referenced"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name is the name of resource being referenced"
                                },
                                "namespace": {
                                  "type": "string",
                                  "description": "Namespace is the namespace of the resource being referenced. This field is required when the resource has a namespace."
                                }
                              },
                              "required": [
                                "kind",
                                "name"
                              ]
                            },
                            "resources": {
                              "description": "Resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                              "type": "object",
                              "properties": {
                                "limits": {
                                  "type": "object",
                                  "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "requests": {
                                  "type": "object",
                                  "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "claims": {
                                  "type": "array",
                                  "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.\n\nThis is an alpha field and requires enabling the DynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                                  "items": {
                                    "type": "object",
                                    "description": "VolumeClaimResourceRequirementsClaims properties.",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the resource. This must match the name of a resource in spec.resourceClaims."
                                      }
                                    },
                                    "required": [
                                      "name"
                                    ]
                                  },
                                  "x-ms-identifiers": []
                                }
                              }
                            },
                            "selector": {
                              "description": "A label query over volumes to consider for binding.",
                              "type": "object",
                              "properties": {
                                "matchExpressions": {
                                  "type": "array",
                                  "description": "MatchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                  "items": {
                                    "type": "object",
                                    "description": "VolumeClaimSpecSelectorMatchExpressions properties",
                                    "properties": {
                                      "key": {
                                        "type": "string",
                                        "description": "key is the label key that the selector applies to."
                                      },
                                      "operator": {
                                        "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                        "type": "string",
                                        "enum": [
                                          "In",
                                          "NotIn",
                                          "Exists",
                                          "DoesNotExist"
                                        ],
                                        "x-ms-enum": {
                                          "name": "OperatorValues",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "In",
                                              "value": "In",
                                              "description": "In operator."
                                            },
                                            {
                                              "name": "NotIn",
                                              "value": "NotIn",
                                              "description": "NotIn operator."
                                            },
                                            {
                                              "name": "Exists",
                                              "value": "Exists",
                                              "description": "Exists operator."
                                            },
                                            {
                                              "name": "DoesNotExist",
                                              "value": "DoesNotExist",
                                              "description": "DoesNotExist operator."
                                            }
                                          ]
                                        }
                                      },
                                      "values": {
                                        "type": "array",
                                        "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "required": [
                                      "key",
                                      "operator"
                                    ]
                                  },
                                  "x-ms-identifiers": []
                                },
                                "matchLabels": {
                                  "type": "object",
                                  "description": "MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "retain": {
                          "description": "Controls which topic's retained messages should be persisted to disk.",
                          "type": "object",
                          "properties": {
                            "mode": {
                              "description": "'All' to persist all retain messages, 'None' to not persist any, 'Custom' to persist only the specified topics.",
                              "type": "string",
                              "enum": [
                                "All",
                                "None",
                                "Custom"
                              ],
                              "x-ms-enum": {
                                "name": "BrokerPersistencePolicyMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "All",
                                    "value": "All",
                                    "description": "Policy mode for All."
                                  },
                                  {
                                    "name": "None",
                                    "value": "None",
                                    "description": "Policy mode for None."
                                  },
                                  {
                                    "name": "Custom",
                                    "value": "Custom",
                                    "description": "Indicates that the policy is a custom policy."
                                  }
                                ]
                              }
                            }
                          },
                          "discriminator": "mode",
                          "required": [
                            "mode"
                          ]
                        },
                        "stateStore": {
                          "description": "Controls which keys should be persisted to disk for the state store.",
                          "type": "object",
                          "properties": {
                            "mode": {
                              "description": "'All' to persist all keys, 'None' to not persist any, 'Custom' to persist only the specified keys.",
                              "type": "string",
                              "enum": [
                                "All",
                                "None",
                                "Custom"
                              ],
                              "x-ms-enum": {
                                "name": "BrokerPersistencePolicyMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "All",
                                    "value": "All",
                                    "description": "Policy mode for All."
                                  },
                                  {
                                    "name": "None",
                                    "value": "None",
                                    "description": "Policy mode for None."
                                  },
                                  {
                                    "name": "Custom",
                                    "value": "Custom",
                                    "description": "Indicates that the policy is a custom policy."
                                  }
                                ]
                              }
                            }
                          },
                          "discriminator": "mode",
                          "required": [
                            "mode"
                          ]
                        },
                        "subscriberQueue": {
                          "description": "Controls which subscriber message queues should be persisted to disk. Important: to facilitate reconnection, session state metadata are ALWAYS written to disk if any persistence setting is specified, even if this section isn't set.",
                          "type": "object",
                          "properties": {
                            "mode": {
                              "description": "'All' to persist all subscriber queues, 'None' to not persist any, 'Custom' to persist only the specified queues.",
                              "type": "string",
                              "enum": [
                                "All",
                                "None",
                                "Custom"
                              ],
                              "x-ms-enum": {
                                "name": "BrokerPersistencePolicyMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "All",
                                    "value": "All",
                                    "description": "Policy mode for All."
                                  },
                                  {
                                    "name": "None",
                                    "value": "None",
                                    "description": "Policy mode for None."
                                  },
                                  {
                                    "name": "Custom",
                                    "value": "Custom",
                                    "description": "Indicates that the policy is a custom policy."
                                  }
                                ]
                              }
                            }
                          },
                          "discriminator": "mode",
                          "required": [
                            "mode"
                          ]
                        },
                        "encryption": {
                          "description": "Controls settings related to encryption of the persistence database. Optional, defaults to enabling encryption.",
                          "type": "object",
                          "properties": {
                            "mode": {
                              "type": "string",
                              "description": "Mode properties",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "OperationalMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled",
                                    "description": "Enabled is equivalent to True"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled",
                                    "description": "Disabled is equivalent to False."
                                  }
                                ]
                              }
                            }
                          },
                          "required": [
                            "mode"
                          ]
                        }
                      },
                      "required": [
                        "maxSize"
                      ]
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is getting provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Resource is Updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is Deleting."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been Accepted."
                          }
                        ]
                      }
                    },
                    "healthState": {
                      "type": "string",
                      "description": "The health state of the resource.",
                      "default": "Unknown",
                      "enum": [
                        "Available",
                        "Degraded",
                        "Unavailable",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceHealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "Resource is Available and functioning as expected."
                          },
                          {
                            "name": "Degraded",
                            "value": "Degraded",
                            "description": "Resource health is degraded."
                          },
                          {
                            "name": "Unavailable",
                            "value": "Unavailable",
                            "description": "Resource is not functioning as expected."
                          },
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "Resource state is unknown."
                          }
                        ]
                      },
                      "readOnly": true
                    }
                  }
                },
                "extendedLocation": {
                  "description": "Edge location of the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "Type of ExtendedLocation.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "CustomLocation type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Resource 'BrokerResource' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Instance broker resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "advanced": {
                      "description": "Advanced settings of Broker.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "clients": {
                          "description": "Configurations related to All Clients.",
                          "type": "object",
                          "properties": {
                            "maxSessionExpirySeconds": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Upper bound of Session Expiry Interval, in seconds.",
                              "minimum": 1,
                              "maximum": 4294967295
                            },
                            "maxMessageExpirySeconds": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Upper bound of Message Expiry Interval, in seconds.",
                              "minimum": 1,
                              "maximum": 4294967295
                            },
                            "maxPacketSizeBytes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Max message size for a packet in Bytes.",
                              "minimum": 1,
                              "maximum": 268435456
                            },
                            "subscriberQueueLimit": {
                              "description": "The limit on the number of queued messages for a subscriber.",
                              "type": "object",
                              "properties": {
                                "length": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The maximum length of the queue before messages start getting dropped.",
                                  "minimum": 1
                                },
                                "strategy": {
                                  "type": "string",
                                  "description": "The strategy to use for dropping messages from the queue.",
                                  "default": "None",
                                  "enum": [
                                    "None",
                                    "DropOldest"
                                  ],
                                  "x-ms-enum": {
                                    "name": "SubscriberMessageDropStrategy",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "None",
                                        "value": "None",
                                        "description": "Messages are never dropped."
                                      },
                                      {
                                        "name": "DropOldest",
                                        "value": "DropOldest",
                                        "description": "The oldest message is dropped."
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "maxReceiveMaximum": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Upper bound of Receive Maximum that a client can request in the CONNECT packet.",
                              "minimum": 1,
                              "maximum": 65535
                            },
                            "maxKeepAliveSeconds": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Upper bound of a client's Keep Alive, in seconds.",
                              "minimum": 0,
                              "maximum": 65535
                            }
                          }
                        },
                        "encryptInternalTraffic": {
                          "type": "string",
                          "description": "The setting to enable or disable encryption of internal Traffic.",
                          "default": "Enabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "OperationalMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "Enabled is equivalent to True"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "Disabled is equivalent to False."
                              }
                            ]
                          }
                        },
                        "internalCerts": {
                          "description": "Certificate rotation and private key configuration.",
                          "type": "object",
                          "properties": {
                            "duration": {
                              "type": "string",
                              "description": "Lifetime of certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."
                            },
                            "renewBefore": {
                              "type": "string",
                              "description": "When to begin renewing certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."
                            },
                            "privateKey": {
                              "description": "Configuration of certificate private key.",
                              "type": "object",
                              "properties": {
                                "algorithm": {
                                  "description": "algorithm for private key.",
                                  "type": "string",
                                  "enum": [
                                    "Ec256",
                                    "Ec384",
                                    "Ec521",
                                    "Ed25519",
                                    "Rsa2048",
                                    "Rsa4096",
                                    "Rsa8192"
                                  ],
                                  "x-ms-enum": {
                                    "name": "PrivateKeyAlgorithm",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Ec256",
                                        "value": "Ec256",
                                        "description": "Algorithm - ec256."
                                      },
                                      {
                                        "name": "Ec384",
                                        "value": "Ec384",
                                        "description": "Algorithm - ec384."
                                      },
                                      {
                                        "name": "Ec521",
                                        "value": "Ec521",
                                        "description": "Algorithm - ec521."
                                      },
                                      {
                                        "name": "Ed25519",
                                        "value": "Ed25519",
                                        "description": "Algorithm - ed25519."
                                      },
                                      {
                                        "name": "Rsa2048",
                                        "value": "Rsa2048",
                                        "description": "Algorithm - rsa2048."
                                      },
                                      {
                                        "name": "Rsa4096",
                                        "value": "Rsa4096",
                                        "description": "Algorithm - rsa4096."
                                      },
                                      {
                                        "name": "Rsa8192",
                                        "value": "Rsa8192",
                                        "description": "Algorithm - rsa8192."
                                      }
                                    ]
                                  }
                                },
                                "rotationPolicy": {
                                  "description": "cert-manager private key rotationPolicy.",
                                  "type": "string",
                                  "enum": [
                                    "Always",
                                    "Never"
                                  ],
                                  "x-ms-enum": {
                                    "name": "PrivateKeyRotationPolicy",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Always",
                                        "value": "Always",
                                        "description": "Rotation Policy - Always."
                                      },
                                      {
                                        "name": "Never",
                                        "value": "Never",
                                        "description": "Rotation Policy - Never."
                                      }
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "algorithm",
                                "rotationPolicy"
                              ]
                            }
                          },
                          "required": [
                            "duration",
                            "renewBefore",
                            "privateKey"
                          ]
                        }
                      }
                    },
                    "cardinality": {
                      "description": "The cardinality details of the broker.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "backendChain": {
                          "description": "The backend broker desired properties",
                          "type": "object",
                          "properties": {
                            "partitions": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The desired number of physical backend partitions.",
                              "minimum": 1,
                              "maximum": 16
                            },
                            "redundancyFactor": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The desired numbers of backend replicas (pods) in a physical partition.",
                              "minimum": 1,
                              "maximum": 5
                            },
                            "workers": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Number of logical backend workers per replica (pod).",
                              "default": 1,
                              "minimum": 1,
                              "maximum": 16
                            }
                          },
                          "required": [
                            "partitions",
                            "redundancyFactor"
                          ]
                        },
                        "frontend": {
                          "description": "The frontend desired properties",
                          "type": "object",
                          "properties": {
                            "replicas": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The desired number of frontend instances (pods).",
                              "minimum": 1,
                              "maximum": 16
                            },
                            "workers": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Number of logical frontend workers per instance (pod).",
                              "default": 2,
                              "minimum": 1,
                              "maximum": 16
                            }
                          },
                          "required": [
                            "replicas"
                          ]
                        }
                      },
                      "required": [
                        "backendChain",
                        "frontend"
                      ]
                    },
                    "diagnostics": {
                      "description": "Spec defines the desired identities of Broker diagnostics settings.",
                      "type": "object",
                      "properties": {
                        "logs": {
                          "description": "Diagnostic log settings for the resource.",
                          "type": "object",
                          "properties": {
                            "level": {
                              "type": "string",
                              "description": "The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.",
                              "default": "info"
                            }
                          }
                        },
                        "metrics": {
                          "description": "The metrics settings for the resource.",
                          "type": "object",
                          "properties": {
                            "prometheusPort": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The prometheus port to expose the metrics.",
                              "default": 9600,
                              "minimum": 0,
                              "maximum": 65535
                            }
                          }
                        },
                        "selfCheck": {
                          "description": "The self check properties.",
                          "type": "object",
                          "properties": {
                            "mode": {
                              "type": "string",
                              "description": "The toggle to enable/disable self check.",
                              "default": "Enabled",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "OperationalMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled",
                                    "description": "Enabled is equivalent to True"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled",
                                    "description": "Disabled is equivalent to False."
                                  }
                                ]
                              }
                            },
                            "intervalSeconds": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The self check interval.",
                              "default": 30,
                              "minimum": 30,
                              "maximum": 300
                            },
                            "timeoutSeconds": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The timeout for self check.",
                              "default": 15,
                              "minimum": 5,
                              "maximum": 120
                            }
                          }
                        },
                        "traces": {
                          "description": "The trace properties.",
                          "type": "object",
                          "properties": {
                            "mode": {
                              "type": "string",
                              "description": "The toggle to enable/disable traces.",
                              "default": "Enabled",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "OperationalMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled",
                                    "description": "Enabled is equivalent to True"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled",
                                    "description": "Disabled is equivalent to False."
                                  }
                                ]
                              }
                            },
                            "cacheSizeMegabytes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The cache size in megabytes.",
                              "default": 16,
                              "minimum": 1,
                              "maximum": 128
                            },
                            "selfTracing": {
                              "description": "The self tracing properties.",
                              "type": "object",
                              "properties": {
                                "mode": {
                                  "type": "string",
                                  "description": "The toggle to enable/disable self tracing.",
                                  "default": "Enabled",
                                  "enum": [
                                    "Enabled",
                                    "Disabled"
                                  ],
                                  "x-ms-enum": {
                                    "name": "OperationalMode",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Enabled",
                                        "value": "Enabled",
                                        "description": "Enabled is equivalent to True"
                                      },
                                      {
                                        "name": "Disabled",
                                        "value": "Disabled",
                                        "description": "Disabled is equivalent to False."
                                      }
                                    ]
                                  }
                                },
                                "intervalSeconds": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The self tracing interval.",
                                  "default": 30,
                                  "minimum": 1,
                                  "maximum": 300
                                }
                              }
                            },
                            "spanChannelCapacity": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The span channel capacity.",
                              "default": 1000,
                              "minimum": 1000,
                              "maximum": 100000
                            }
                          }
                        }
                      }
                    },
                    "diskBackedMessageBuffer": {
                      "description": "Settings of Disk Backed Message Buffer.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "maxSize": {
                          "type": "string",
                          "description": "The max size of the message buffer on disk. If a PVC template is specified using one of ephemeralVolumeClaimSpec or persistentVolumeClaimSpec, then this size is used as the request and limit sizes of that template. If neither ephemeralVolumeClaimSpec nor persistentVolumeClaimSpec are specified, then an emptyDir volume is mounted with this size as its limit. See <https://kubernetes.io/docs/concepts/storage/volumes/#emptydir> for details.",
                          "pattern": "^[0-9]+[KMGTPE]$"
                        },
                        "ephemeralVolumeClaimSpec": {
                          "description": "Use the specified persistent volume claim template to mount a \"generic ephemeral volume\" for the message buffer. See <https://kubernetes.io/docs/concepts/storage/ephemeral-volumes/#generic-ephemeral-volumes> for details.",
                          "type": "object",
                          "properties": {
                            "volumeName": {
                              "type": "string",
                              "description": "VolumeName is the binding reference to the PersistentVolume backing this claim."
                            },
                            "volumeMode": {
                              "type": "string",
                              "description": "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature."
                            },
                            "storageClassName": {
                              "type": "string",
                              "description": "Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"
                            },
                            "accessModes": {
                              "type": "array",
                              "description": "AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                              "items": {
                                "type": "string"
                              }
                            },
                            "dataSource": {
                              "description": "This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.",
                              "type": "object",
                              "properties": {
                                "apiGroup": {
                                  "type": "string",
                                  "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                                },
                                "kind": {
                                  "type": "string",
                                  "description": "Kind is the type of resource being referenced"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name is the name of resource being referenced"
                                }
                              },
                              "required": [
                                "kind",
                                "name"
                              ]
                            },
                            "dataSourceRef": {
                              "description": "Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.",
                              "type": "object",
                              "properties": {
                                "apiGroup": {
                                  "type": "string",
                                  "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                                },
                                "kind": {
                                  "type": "string",
                                  "description": "Kind is the type of resource being referenced"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name is the name of resource being referenced"
                                },
                                "namespace": {
                                  "type": "string",
                                  "description": "Namespace is the namespace of the resource being referenced. This field is required when the resource has a namespace."
                                }
                              },
                              "required": [
                                "kind",
                                "name"
                              ]
                            },
                            "resources": {
                              "description": "Resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                              "type": "object",
                              "properties": {
                                "limits": {
                                  "type": "object",
                                  "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "requests": {
                                  "type": "object",
                                  "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "claims": {
                                  "type": "array",
                                  "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.\n\nThis is an alpha field and requires enabling the DynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                                  "items": {
                                    "type": "object",
                                    "description": "VolumeClaimResourceRequirementsClaims properties.",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the resource. This must match the name of a resource in spec.resourceClaims."
                                      }
                                    },
                                    "required": [
                                      "name"
                                    ]
                                  },
                                  "x-ms-identifiers": []
                                }
                              }
                            },
                            "selector": {
                              "description": "A label query over volumes to consider for binding.",
                              "type": "object",
                              "properties": {
                                "matchExpressions": {
                                  "type": "array",
                                  "description": "MatchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                  "items": {
                                    "type": "object",
                                    "description": "VolumeClaimSpecSelectorMatchExpressions properties",
                                    "properties": {
                                      "key": {
                                        "type": "string",
                                        "description": "key is the label key that the selector applies to."
                                      },
                                      "operator": {
                                        "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                        "type": "string",
                                        "enum": [
                                          "In",
                                          "NotIn",
                                          "Exists",
                                          "DoesNotExist"
                                        ],
                                        "x-ms-enum": {
                                          "name": "OperatorValues",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "In",
                                              "value": "In",
                                              "description": "In operator."
                                            },
                                            {
                                              "name": "NotIn",
                                              "value": "NotIn",
                                              "description": "NotIn operator."
                                            },
                                            {
                                              "name": "Exists",
                                              "value": "Exists",
                                              "description": "Exists operator."
                                            },
                                            {
                                              "name": "DoesNotExist",
                                              "value": "DoesNotExist",
                                              "description": "DoesNotExist operator."
                                            }
                                          ]
                                        }
                                      },
                                      "values": {
                                        "type": "array",
                                        "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "required": [
                                      "key",
                                      "operator"
                                    ]
                                  },
                                  "x-ms-identifiers": []
                                },
                                "matchLabels": {
                                  "type": "object",
                                  "description": "MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "persistentVolumeClaimSpec": {
                          "description": "Use the specified persistent volume claim template to mount a persistent volume for the message buffer.",
                          "type": "object",
                          "properties": {
                            "volumeName": {
                              "type": "string",
                              "description": "VolumeName is the binding reference to the PersistentVolume backing this claim."
                            },
                            "volumeMode": {
                              "type": "string",
                              "description": "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature."
                            },
                            "storageClassName": {
                              "type": "string",
                              "description": "Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"
                            },
                            "accessModes": {
                              "type": "array",
                              "description": "AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                              "items": {
                                "type": "string"
                              }
                            },
                            "dataSource": {
                              "description": "This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.",
                              "type": "object",
                              "properties": {
                                "apiGroup": {
                                  "type": "string",
                                  "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                                },
                                "kind": {
                                  "type": "string",
                                  "description": "Kind is the type of resource being referenced"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name is the name of resource being referenced"
                                }
                              },
                              "required": [
                                "kind",
                                "name"
                              ]
                            },
                            "dataSourceRef": {
                              "description": "Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.",
                              "type": "object",
                              "properties": {
                                "apiGroup": {
                                  "type": "string",
                                  "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                                },
                                "kind": {
                                  "type": "string",
                                  "description": "Kind is the type of resource being referenced"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name is the name of resource being referenced"
                                },
                                "namespace": {
                                  "type": "string",
                                  "description": "Namespace is the namespace of the resource being referenced. This field is required when the resource has a namespace."
                                }
                              },
                              "required": [
                                "kind",
                                "name"
                              ]
                            },
                            "resources": {
                              "description": "Resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                              "type": "object",
                              "properties": {
                                "limits": {
                                  "type": "object",
                                  "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "requests": {
                                  "type": "object",
                                  "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "claims": {
                                  "type": "array",
                                  "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.\n\nThis is an alpha field and requires enabling the DynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                                  "items": {
                                    "type": "object",
                                    "description": "VolumeClaimResourceRequirementsClaims properties.",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the resource. This must match the name of a resource in spec.resourceClaims."
                                      }
                                    },
                                    "required": [
                                      "name"
                                    ]
                                  },
                                  "x-ms-identifiers": []
                                }
                              }
                            },
                            "selector": {
                              "description": "A label query over volumes to consider for binding.",
                              "type": "object",
                              "properties": {
                                "matchExpressions": {
                                  "type": "array",
                                  "description": "MatchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                  "items": {
                                    "type": "object",
                                    "description": "VolumeClaimSpecSelectorMatchExpressions properties",
                                    "properties": {
                                      "key": {
                                        "type": "string",
                                        "description": "key is the label key that the selector applies to."
                                      },
                                      "operator": {
                                        "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                        "type": "string",
                                        "enum": [
                                          "In",
                                          "NotIn",
                                          "Exists",
                                          "DoesNotExist"
                                        ],
                                        "x-ms-enum": {
                                          "name": "OperatorValues",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "In",
                                              "value": "In",
                                              "description": "In operator."
                                            },
                                            {
                                              "name": "NotIn",
                                              "value": "NotIn",
                                              "description": "NotIn operator."
                                            },
                                            {
                                              "name": "Exists",
                                              "value": "Exists",
                                              "description": "Exists operator."
                                            },
                                            {
                                              "name": "DoesNotExist",
                                              "value": "DoesNotExist",
                                              "description": "DoesNotExist operator."
                                            }
                                          ]
                                        }
                                      },
                                      "values": {
                                        "type": "array",
                                        "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "required": [
                                      "key",
                                      "operator"
                                    ]
                                  },
                                  "x-ms-identifiers": []
                                },
                                "matchLabels": {
                                  "type": "object",
                                  "description": "MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "maxSize"
                      ]
                    },
                    "generateResourceLimits": {
                      "description": "This setting controls whether Kubernetes CPU resource limits are requested. Increasing the number of replicas or workers proportionally increases the amount of CPU resources requested. If this setting is enabled and there are insufficient CPU resources, an error will be emitted.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "cpu": {
                          "type": "string",
                          "description": "The toggle to enable/disable cpu resource limits.",
                          "default": "Enabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "OperationalMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "Enabled is equivalent to True"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "Disabled is equivalent to False."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "memoryProfile": {
                      "type": "string",
                      "description": "Memory profile of Broker.",
                      "default": "Medium",
                      "enum": [
                        "Tiny",
                        "Low",
                        "Medium",
                        "High"
                      ],
                      "x-ms-enum": {
                        "name": "BrokerMemoryProfile",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Tiny",
                            "value": "Tiny",
                            "description": "Tiny memory profile."
                          },
                          {
                            "name": "Low",
                            "value": "Low",
                            "description": "Low memory profile."
                          },
                          {
                            "name": "Medium",
                            "value": "Medium",
                            "description": "Medium memory profile."
                          },
                          {
                            "name": "High",
                            "value": "High",
                            "description": "High memory profile."
                          }
                        ]
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "persistence": {
                      "description": "The persistence settings of the Broker.",
                      "type": "object",
                      "properties": {
                        "maxSize": {
                          "type": "string",
                          "description": "The max size of the message buffer on disk. If a PVC template is specified using persistentVolumeClaimSpec Then this size is used as the request and limit sizes of that template. If a PVC template isn't specified Then local-path provisioner is requested with this size limit. Required.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "persistentVolumeClaimSpec": {
                          "description": "Use the specified persistent volume claim template to mount a persistent volume. Same object as in diskBackedMessageBuffer, but with a limitation that access modes field must be set to `ReadWriteOncePod`.\n\nIf unset, a default PVC with default properties will be used. Among other things this PVC will use the cluster default storage class, which may or may not be using a local path provisioner. User is opting in to sub-optimal behavior if they leave this unset or set it without the storage class field, and their cluster default is not a local path class.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "object",
                          "properties": {
                            "volumeName": {
                              "type": "string",
                              "description": "VolumeName is the binding reference to the PersistentVolume backing this claim."
                            },
                            "volumeMode": {
                              "type": "string",
                              "description": "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature."
                            },
                            "storageClassName": {
                              "type": "string",
                              "description": "Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"
                            },
                            "accessModes": {
                              "type": "array",
                              "description": "AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                              "items": {
                                "type": "string"
                              }
                            },
                            "dataSource": {
                              "description": "This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.",
                              "type": "object",
                              "properties": {
                                "apiGroup": {
                                  "type": "string",
                                  "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                                },
                                "kind": {
                                  "type": "string",
                                  "description": "Kind is the type of resource being referenced"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name is the name of resource being referenced"
                                }
                              },
                              "required": [
                                "kind",
                                "name"
                              ]
                            },
                            "dataSourceRef": {
                              "description": "Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.",
                              "type": "object",
                              "properties": {
                                "apiGroup": {
                                  "type": "string",
                                  "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                                },
                                "kind": {
                                  "type": "string",
                                  "description": "Kind is the type of resource being referenced"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name is the name of resource being referenced"
                                },
                                "namespace": {
                                  "type": "string",
                                  "description": "Namespace is the namespace of the resource being referenced. This field is required when the resource has a namespace."
                                }
                              },
                              "required": [
                                "kind",
                                "name"
                              ]
                            },
                            "resources": {
                              "description": "Resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                              "type": "object",
                              "properties": {
                                "limits": {
                                  "type": "object",
                                  "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "requests": {
                                  "type": "object",
                                  "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "claims": {
                                  "type": "array",
                                  "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.\n\nThis is an alpha field and requires enabling the DynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                                  "items": {
                                    "type": "object",
                                    "description": "VolumeClaimResourceRequirementsClaims properties.",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the resource. This must match the name of a resource in spec.resourceClaims."
                                      }
                                    },
                                    "required": [
                                      "name"
                                    ]
                                  },
                                  "x-ms-identifiers": []
                                }
                              }
                            },
                            "selector": {
                              "description": "A label query over volumes to consider for binding.",
                              "type": "object",
                              "properties": {
                                "matchExpressions": {
                                  "type": "array",
                                  "description": "MatchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                  "items": {
                                    "type": "object",
                                    "description": "VolumeClaimSpecSelectorMatchExpressions properties",
                                    "properties": {
                                      "key": {
                                        "type": "string",
                                        "description": "key is the label key that the selector applies to."
                                      },
                                      "operator": {
                                        "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                        "type": "string",
                                        "enum": [
                                          "In",
                                          "NotIn",
                                          "Exists",
                                          "DoesNotExist"
                                        ],
                                        "x-ms-enum": {
                                          "name": "OperatorValues",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "In",
                                              "value": "In",
                                              "description": "In operator."
                                            },
                                            {
                                              "name": "NotIn",
                                              "value": "NotIn",
                                              "description": "NotIn operator."
                                            },
                                            {
                                              "name": "Exists",
                                              "value": "Exists",
                                              "description": "Exists operator."
                                            },
                                            {
                                              "name": "DoesNotExist",
                                              "value": "DoesNotExist",
                                              "description": "DoesNotExist operator."
                                            }
                                          ]
                                        }
                                      },
                                      "values": {
                                        "type": "array",
                                        "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "required": [
                                      "key",
                                      "operator"
                                    ]
                                  },
                                  "x-ms-identifiers": []
                                },
                                "matchLabels": {
                                  "type": "object",
                                  "description": "MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "retain": {
                          "description": "Controls which topic's retained messages should be persisted to disk.",
                          "type": "object",
                          "properties": {
                            "mode": {
                              "description": "'All' to persist all retain messages, 'None' to not persist any, 'Custom' to persist only the specified topics.",
                              "type": "string",
                              "enum": [
                                "All",
                                "None",
                                "Custom"
                              ],
                              "x-ms-enum": {
                                "name": "BrokerPersistencePolicyMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "All",
                                    "value": "All",
                                    "description": "Policy mode for All."
                                  },
                                  {
                                    "name": "None",
                                    "value": "None",
                                    "description": "Policy mode for None."
                                  },
                                  {
                                    "name": "Custom",
                                    "value": "Custom",
                                    "description": "Indicates that the policy is a custom policy."
                                  }
                                ]
                              }
                            }
                          },
                          "discriminator": "mode",
                          "required": [
                            "mode"
                          ]
                        },
                        "stateStore": {
                          "description": "Controls which keys should be persisted to disk for the state store.",
                          "type": "object",
                          "properties": {
                            "mode": {
                              "description": "'All' to persist all keys, 'None' to not persist any, 'Custom' to persist only the specified keys.",
                              "type": "string",
                              "enum": [
                                "All",
                                "None",
                                "Custom"
                              ],
                              "x-ms-enum": {
                                "name": "BrokerPersistencePolicyMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "All",
                                    "value": "All",
                                    "description": "Policy mode for All."
                                  },
                                  {
                                    "name": "None",
                                    "value": "None",
                                    "description": "Policy mode for None."
                                  },
                                  {
                                    "name": "Custom",
                                    "value": "Custom",
                                    "description": "Indicates that the policy is a custom policy."
                                  }
                                ]
                              }
                            }
                          },
                          "discriminator": "mode",
                          "required": [
                            "mode"
                          ]
                        },
                        "subscriberQueue": {
                          "description": "Controls which subscriber message queues should be persisted to disk. Important: to facilitate reconnection, session state metadata are ALWAYS written to disk if any persistence setting is specified, even if this section isn't set.",
                          "type": "object",
                          "properties": {
                            "mode": {
                              "description": "'All' to persist all subscriber queues, 'None' to not persist any, 'Custom' to persist only the specified queues.",
                              "type": "string",
                              "enum": [
                                "All",
                                "None",
                                "Custom"
                              ],
                              "x-ms-enum": {
                                "name": "BrokerPersistencePolicyMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "All",
                                    "value": "All",
                                    "description": "Policy mode for All."
                                  },
                                  {
                                    "name": "None",
                                    "value": "None",
                                    "description": "Policy mode for None."
                                  },
                                  {
                                    "name": "Custom",
                                    "value": "Custom",
                                    "description": "Indicates that the policy is a custom policy."
                                  }
                                ]
                              }
                            }
                          },
                          "discriminator": "mode",
                          "required": [
                            "mode"
                          ]
                        },
                        "encryption": {
                          "description": "Controls settings related to encryption of the persistence database. Optional, defaults to enabling encryption.",
                          "type": "object",
                          "properties": {
                            "mode": {
                              "type": "string",
                              "description": "Mode properties",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "OperationalMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled",
                                    "description": "Enabled is equivalent to True"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled",
                                    "description": "Disabled is equivalent to False."
                                  }
                                ]
                              }
                            }
                          },
                          "required": [
                            "mode"
                          ]
                        }
                      },
                      "required": [
                        "maxSize"
                      ]
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is getting provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Resource is Updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is Deleting."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been Accepted."
                          }
                        ]
                      }
                    },
                    "healthState": {
                      "type": "string",
                      "description": "The health state of the resource.",
                      "default": "Unknown",
                      "enum": [
                        "Available",
                        "Degraded",
                        "Unavailable",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceHealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "Resource is Available and functioning as expected."
                          },
                          {
                            "name": "Degraded",
                            "value": "Degraded",
                            "description": "Resource health is degraded."
                          },
                          {
                            "name": "Unavailable",
                            "value": "Unavailable",
                            "description": "Resource is not functioning as expected."
                          },
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "Resource state is unknown."
                          }
                        ]
                      },
                      "readOnly": true
                    }
                  }
                },
                "extendedLocation": {
                  "description": "Edge location of the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "Type of ExtendedLocation.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "CustomLocation type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                }
              }
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Broker_Delete",
        "tags": [
          "Broker"
        ],
        "description": "Delete a BrokerResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "brokerName",
            "in": "path",
            "description": "Name of broker.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperations/instances/{instanceName}/brokers/{brokerName}/authentications": {
      "get": {
        "operationId": "BrokerAuthentication_ListByResourceGroup",
        "tags": [
          "BrokerAuthentication"
        ],
        "description": "List BrokerAuthenticationResource resources by BrokerResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "brokerName",
            "in": "path",
            "description": "Name of broker.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a BrokerAuthenticationResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The BrokerAuthenticationResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "Instance broker authentication resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "authenticationMethods": {
                            "type": "array",
                            "description": "Defines a set of Broker authentication methods to be used on `BrokerListeners`. For each array element one authenticator type supported.",
                            "items": {
                              "type": "object",
                              "description": "Set of broker authentication policies. Only one method is supported for each entry.",
                              "properties": {
                                "method": {
                                  "description": "Custom authentication configuration.",
                                  "type": "string",
                                  "enum": [
                                    "Custom",
                                    "ServiceAccountToken",
                                    "X509"
                                  ],
                                  "x-ms-enum": {
                                    "name": "BrokerAuthenticationMethod",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Custom",
                                        "value": "Custom",
                                        "description": "Custom authentication configuration."
                                      },
                                      {
                                        "name": "ServiceAccountToken",
                                        "value": "ServiceAccountToken",
                                        "description": "ServiceAccountToken authentication configuration."
                                      },
                                      {
                                        "name": "X509",
                                        "value": "X509",
                                        "description": "X.509 authentication configuration."
                                      }
                                    ]
                                  }
                                },
                                "customSettings": {
                                  "description": "Custom authentication configuration.",
                                  "type": "object",
                                  "properties": {
                                    "auth": {
                                      "description": "Optional authentication needed for authenticating with the custom authentication server.",
                                      "type": "object",
                                      "properties": {
                                        "x509": {
                                          "description": "X509 Custom Auth type details.",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "type": "string",
                                              "description": "Kubernetes secret containing an X.509 client certificate. This is a reference to the secret through an identifying name, not the secret itself."
                                            }
                                          },
                                          "required": [
                                            "secretRef"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "x509"
                                      ]
                                    },
                                    "caCertConfigMap": {
                                      "type": "string",
                                      "description": "Optional CA certificate for validating the custom authentication server's certificate."
                                    },
                                    "endpoint": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "Endpoint of the custom authentication server. Must be an HTTPS endpoint.",
                                      "pattern": "^https://.*$"
                                    },
                                    "headers": {
                                      "type": "object",
                                      "description": "Additional HTTP headers to pass to the custom authentication server.",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "endpoint"
                                  ]
                                },
                                "serviceAccountTokenSettings": {
                                  "description": "ServiceAccountToken authentication configuration.",
                                  "type": "object",
                                  "properties": {
                                    "audiences": {
                                      "type": "array",
                                      "description": "List of allowed audience.",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "audiences"
                                  ]
                                },
                                "x509Settings": {
                                  "description": "X.509 authentication configuration.",
                                  "type": "object",
                                  "properties": {
                                    "authorizationAttributes": {
                                      "type": "object",
                                      "description": "X509 authorization attributes properties.",
                                      "additionalProperties": {
                                        "type": "object",
                                        "description": "BrokerAuthenticatorMethodX509Attributes properties.",
                                        "properties": {
                                          "attributes": {
                                            "type": "object",
                                            "description": "Attributes object.",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "subject": {
                                            "type": "string",
                                            "description": "Subject of the X509 attribute."
                                          }
                                        },
                                        "required": [
                                          "attributes",
                                          "subject"
                                        ]
                                      }
                                    },
                                    "trustedClientCaCert": {
                                      "type": "string",
                                      "description": "Name of the trusted client ca cert resource.",
                                      "default": "client-ca"
                                    },
                                    "additionalValidation": {
                                      "description": "X509 authentication attributes properties.",
                                      "type": "string",
                                      "enum": [
                                        "None",
                                        "AzureDeviceRegistry"
                                      ],
                                      "x-ms-enum": {
                                        "name": "BrokerAuthenticatorValidationMethods",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "None",
                                            "value": "None",
                                            "description": "No additional validation is performed"
                                          },
                                          {
                                            "name": "AzureDeviceRegistry",
                                            "value": "AzureDeviceRegistry",
                                            "description": "Additional validation is performed using the Azure Device Registry."
                                          }
                                        ]
                                      }
                                    }
                                  }
                                }
                              },
                              "required": [
                                "method"
                              ]
                            },
                            "x-ms-identifiers": []
                          },
                          "provisioningState": {
                            "description": "The status of the last operation.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "Resource is getting provisioned."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "Resource is Updating."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Resource is Deleting."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "Resource has been Accepted."
                                }
                              ]
                            }
                          },
                          "healthState": {
                            "type": "string",
                            "description": "The health state of the resource.",
                            "default": "Unknown",
                            "enum": [
                              "Available",
                              "Degraded",
                              "Unavailable",
                              "Unknown"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceHealthState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Available",
                                  "value": "Available",
                                  "description": "Resource is Available and functioning as expected."
                                },
                                {
                                  "name": "Degraded",
                                  "value": "Degraded",
                                  "description": "Resource health is degraded."
                                },
                                {
                                  "name": "Unavailable",
                                  "value": "Unavailable",
                                  "description": "Resource is not functioning as expected."
                                },
                                {
                                  "name": "Unknown",
                                  "value": "Unknown",
                                  "description": "Resource state is unknown."
                                }
                              ]
                            },
                            "readOnly": true
                          }
                        },
                        "required": [
                          "authenticationMethods"
                        ]
                      },
                      "extendedLocation": {
                        "description": "Edge location of the resource.",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the extended location."
                          },
                          "type": {
                            "description": "Type of ExtendedLocation.",
                            "type": "string",
                            "enum": [
                              "CustomLocation"
                            ],
                            "x-ms-enum": {
                              "name": "ExtendedLocationType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "CustomLocation",
                                  "value": "CustomLocation",
                                  "description": "CustomLocation type"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "name",
                          "type"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperations/instances/{instanceName}/brokers/{brokerName}/authentications/{authenticationName}": {
      "get": {
        "operationId": "BrokerAuthentication_Get",
        "tags": [
          "BrokerAuthentication"
        ],
        "description": "Get a BrokerAuthenticationResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "brokerName",
            "in": "path",
            "description": "Name of broker.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "authenticationName",
            "in": "path",
            "description": "Name of Instance broker authentication resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Instance broker authentication resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "authenticationMethods": {
                      "type": "array",
                      "description": "Defines a set of Broker authentication methods to be used on `BrokerListeners`. For each array element one authenticator type supported.",
                      "items": {
                        "type": "object",
                        "description": "Set of broker authentication policies. Only one method is supported for each entry.",
                        "properties": {
                          "method": {
                            "description": "Custom authentication configuration.",
                            "type": "string",
                            "enum": [
                              "Custom",
                              "ServiceAccountToken",
                              "X509"
                            ],
                            "x-ms-enum": {
                              "name": "BrokerAuthenticationMethod",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Custom",
                                  "value": "Custom",
                                  "description": "Custom authentication configuration."
                                },
                                {
                                  "name": "ServiceAccountToken",
                                  "value": "ServiceAccountToken",
                                  "description": "ServiceAccountToken authentication configuration."
                                },
                                {
                                  "name": "X509",
                                  "value": "X509",
                                  "description": "X.509 authentication configuration."
                                }
                              ]
                            }
                          },
                          "customSettings": {
                            "description": "Custom authentication configuration.",
                            "type": "object",
                            "properties": {
                              "auth": {
                                "description": "Optional authentication needed for authenticating with the custom authentication server.",
                                "type": "object",
                                "properties": {
                                  "x509": {
                                    "description": "X509 Custom Auth type details.",
                                    "type": "object",
                                    "properties": {
                                      "secretRef": {
                                        "type": "string",
                                        "description": "Kubernetes secret containing an X.509 client certificate. This is a reference to the secret through an identifying name, not the secret itself."
                                      }
                                    },
                                    "required": [
                                      "secretRef"
                                    ]
                                  }
                                },
                                "required": [
                                  "x509"
                                ]
                              },
                              "caCertConfigMap": {
                                "type": "string",
                                "description": "Optional CA certificate for validating the custom authentication server's certificate."
                              },
                              "endpoint": {
                                "type": "string",
                                "format": "uri",
                                "description": "Endpoint of the custom authentication server. Must be an HTTPS endpoint.",
                                "pattern": "^https://.*$"
                              },
                              "headers": {
                                "type": "object",
                                "description": "Additional HTTP headers to pass to the custom authentication server.",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            },
                            "required": [
                              "endpoint"
                            ]
                          },
                          "serviceAccountTokenSettings": {
                            "description": "ServiceAccountToken authentication configuration.",
                            "type": "object",
                            "properties": {
                              "audiences": {
                                "type": "array",
                                "description": "List of allowed audience.",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "required": [
                              "audiences"
                            ]
                          },
                          "x509Settings": {
                            "description": "X.509 authentication configuration.",
                            "type": "object",
                            "properties": {
                              "authorizationAttributes": {
                                "type": "object",
                                "description": "X509 authorization attributes properties.",
                                "additionalProperties": {
                                  "type": "object",
                                  "description": "BrokerAuthenticatorMethodX509Attributes properties.",
                                  "properties": {
                                    "attributes": {
                                      "type": "object",
                                      "description": "Attributes object.",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    },
                                    "subject": {
                                      "type": "string",
                                      "description": "Subject of the X509 attribute."
                                    }
                                  },
                                  "required": [
                                    "attributes",
                                    "subject"
                                  ]
                                }
                              },
                              "trustedClientCaCert": {
                                "type": "string",
                                "description": "Name of the trusted client ca cert resource.",
                                "default": "client-ca"
                              },
                              "additionalValidation": {
                                "description": "X509 authentication attributes properties.",
                                "type": "string",
                                "enum": [
                                  "None",
                                  "AzureDeviceRegistry"
                                ],
                                "x-ms-enum": {
                                  "name": "BrokerAuthenticatorValidationMethods",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "None",
                                      "value": "None",
                                      "description": "No additional validation is performed"
                                    },
                                    {
                                      "name": "AzureDeviceRegistry",
                                      "value": "AzureDeviceRegistry",
                                      "description": "Additional validation is performed using the Azure Device Registry."
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "method"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is getting provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Resource is Updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is Deleting."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been Accepted."
                          }
                        ]
                      }
                    },
                    "healthState": {
                      "type": "string",
                      "description": "The health state of the resource.",
                      "default": "Unknown",
                      "enum": [
                        "Available",
                        "Degraded",
                        "Unavailable",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceHealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "Resource is Available and functioning as expected."
                          },
                          {
                            "name": "Degraded",
                            "value": "Degraded",
                            "description": "Resource health is degraded."
                          },
                          {
                            "name": "Unavailable",
                            "value": "Unavailable",
                            "description": "Resource is not functioning as expected."
                          },
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "Resource state is unknown."
                          }
                        ]
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "authenticationMethods"
                  ]
                },
                "extendedLocation": {
                  "description": "Edge location of the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "Type of ExtendedLocation.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "CustomLocation type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "BrokerAuthentication_CreateOrUpdate",
        "tags": [
          "BrokerAuthentication"
        ],
        "description": "Create a BrokerAuthenticationResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "brokerName",
            "in": "path",
            "description": "Name of broker.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "authenticationName",
            "in": "path",
            "description": "Name of Instance broker authentication resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Instance broker authentication resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "authenticationMethods": {
                      "type": "array",
                      "description": "Defines a set of Broker authentication methods to be used on `BrokerListeners`. For each array element one authenticator type supported.",
                      "items": {
                        "type": "object",
                        "description": "Set of broker authentication policies. Only one method is supported for each entry.",
                        "properties": {
                          "method": {
                            "description": "Custom authentication configuration.",
                            "type": "string",
                            "enum": [
                              "Custom",
                              "ServiceAccountToken",
                              "X509"
                            ],
                            "x-ms-enum": {
                              "name": "BrokerAuthenticationMethod",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Custom",
                                  "value": "Custom",
                                  "description": "Custom authentication configuration."
                                },
                                {
                                  "name": "ServiceAccountToken",
                                  "value": "ServiceAccountToken",
                                  "description": "ServiceAccountToken authentication configuration."
                                },
                                {
                                  "name": "X509",
                                  "value": "X509",
                                  "description": "X.509 authentication configuration."
                                }
                              ]
                            }
                          },
                          "customSettings": {
                            "description": "Custom authentication configuration.",
                            "type": "object",
                            "properties": {
                              "auth": {
                                "description": "Optional authentication needed for authenticating with the custom authentication server.",
                                "type": "object",
                                "properties": {
                                  "x509": {
                                    "description": "X509 Custom Auth type details.",
                                    "type": "object",
                                    "properties": {
                                      "secretRef": {
                                        "type": "string",
                                        "description": "Kubernetes secret containing an X.509 client certificate. This is a reference to the secret through an identifying name, not the secret itself."
                                      }
                                    },
                                    "required": [
                                      "secretRef"
                                    ]
                                  }
                                },
                                "required": [
                                  "x509"
                                ]
                              },
                              "caCertConfigMap": {
                                "type": "string",
                                "description": "Optional CA certificate for validating the custom authentication server's certificate."
                              },
                              "endpoint": {
                                "type": "string",
                                "format": "uri",
                                "description": "Endpoint of the custom authentication server. Must be an HTTPS endpoint.",
                                "pattern": "^https://.*$"
                              },
                              "headers": {
                                "type": "object",
                                "description": "Additional HTTP headers to pass to the custom authentication server.",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            },
                            "required": [
                              "endpoint"
                            ]
                          },
                          "serviceAccountTokenSettings": {
                            "description": "ServiceAccountToken authentication configuration.",
                            "type": "object",
                            "properties": {
                              "audiences": {
                                "type": "array",
                                "description": "List of allowed audience.",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "required": [
                              "audiences"
                            ]
                          },
                          "x509Settings": {
                            "description": "X.509 authentication configuration.",
                            "type": "object",
                            "properties": {
                              "authorizationAttributes": {
                                "type": "object",
                                "description": "X509 authorization attributes properties.",
                                "additionalProperties": {
                                  "type": "object",
                                  "description": "BrokerAuthenticatorMethodX509Attributes properties.",
                                  "properties": {
                                    "attributes": {
                                      "type": "object",
                                      "description": "Attributes object.",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    },
                                    "subject": {
                                      "type": "string",
                                      "description": "Subject of the X509 attribute."
                                    }
                                  },
                                  "required": [
                                    "attributes",
                                    "subject"
                                  ]
                                }
                              },
                              "trustedClientCaCert": {
                                "type": "string",
                                "description": "Name of the trusted client ca cert resource.",
                                "default": "client-ca"
                              },
                              "additionalValidation": {
                                "description": "X509 authentication attributes properties.",
                                "type": "string",
                                "enum": [
                                  "None",
                                  "AzureDeviceRegistry"
                                ],
                                "x-ms-enum": {
                                  "name": "BrokerAuthenticatorValidationMethods",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "None",
                                      "value": "None",
                                      "description": "No additional validation is performed"
                                    },
                                    {
                                      "name": "AzureDeviceRegistry",
                                      "value": "AzureDeviceRegistry",
                                      "description": "Additional validation is performed using the Azure Device Registry."
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "method"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is getting provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Resource is Updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is Deleting."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been Accepted."
                          }
                        ]
                      }
                    },
                    "healthState": {
                      "type": "string",
                      "description": "The health state of the resource.",
                      "default": "Unknown",
                      "enum": [
                        "Available",
                        "Degraded",
                        "Unavailable",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceHealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "Resource is Available and functioning as expected."
                          },
                          {
                            "name": "Degraded",
                            "value": "Degraded",
                            "description": "Resource health is degraded."
                          },
                          {
                            "name": "Unavailable",
                            "value": "Unavailable",
                            "description": "Resource is not functioning as expected."
                          },
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "Resource state is unknown."
                          }
                        ]
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "authenticationMethods"
                  ]
                },
                "extendedLocation": {
                  "description": "Edge location of the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "Type of ExtendedLocation.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "CustomLocation type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'BrokerAuthenticationResource' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Instance broker authentication resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "authenticationMethods": {
                      "type": "array",
                      "description": "Defines a set of Broker authentication methods to be used on `BrokerListeners`. For each array element one authenticator type supported.",
                      "items": {
                        "type": "object",
                        "description": "Set of broker authentication policies. Only one method is supported for each entry.",
                        "properties": {
                          "method": {
                            "description": "Custom authentication configuration.",
                            "type": "string",
                            "enum": [
                              "Custom",
                              "ServiceAccountToken",
                              "X509"
                            ],
                            "x-ms-enum": {
                              "name": "BrokerAuthenticationMethod",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Custom",
                                  "value": "Custom",
                                  "description": "Custom authentication configuration."
                                },
                                {
                                  "name": "ServiceAccountToken",
                                  "value": "ServiceAccountToken",
                                  "description": "ServiceAccountToken authentication configuration."
                                },
                                {
                                  "name": "X509",
                                  "value": "X509",
                                  "description": "X.509 authentication configuration."
                                }
                              ]
                            }
                          },
                          "customSettings": {
                            "description": "Custom authentication configuration.",
                            "type": "object",
                            "properties": {
                              "auth": {
                                "description": "Optional authentication needed for authenticating with the custom authentication server.",
                                "type": "object",
                                "properties": {
                                  "x509": {
                                    "description": "X509 Custom Auth type details.",
                                    "type": "object",
                                    "properties": {
                                      "secretRef": {
                                        "type": "string",
                                        "description": "Kubernetes secret containing an X.509 client certificate. This is a reference to the secret through an identifying name, not the secret itself."
                                      }
                                    },
                                    "required": [
                                      "secretRef"
                                    ]
                                  }
                                },
                                "required": [
                                  "x509"
                                ]
                              },
                              "caCertConfigMap": {
                                "type": "string",
                                "description": "Optional CA certificate for validating the custom authentication server's certificate."
                              },
                              "endpoint": {
                                "type": "string",
                                "format": "uri",
                                "description": "Endpoint of the custom authentication server. Must be an HTTPS endpoint.",
                                "pattern": "^https://.*$"
                              },
                              "headers": {
                                "type": "object",
                                "description": "Additional HTTP headers to pass to the custom authentication server.",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            },
                            "required": [
                              "endpoint"
                            ]
                          },
                          "serviceAccountTokenSettings": {
                            "description": "ServiceAccountToken authentication configuration.",
                            "type": "object",
                            "properties": {
                              "audiences": {
                                "type": "array",
                                "description": "List of allowed audience.",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "required": [
                              "audiences"
                            ]
                          },
                          "x509Settings": {
                            "description": "X.509 authentication configuration.",
                            "type": "object",
                            "properties": {
                              "authorizationAttributes": {
                                "type": "object",
                                "description": "X509 authorization attributes properties.",
                                "additionalProperties": {
                                  "type": "object",
                                  "description": "BrokerAuthenticatorMethodX509Attributes properties.",
                                  "properties": {
                                    "attributes": {
                                      "type": "object",
                                      "description": "Attributes object.",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    },
                                    "subject": {
                                      "type": "string",
                                      "description": "Subject of the X509 attribute."
                                    }
                                  },
                                  "required": [
                                    "attributes",
                                    "subject"
                                  ]
                                }
                              },
                              "trustedClientCaCert": {
                                "type": "string",
                                "description": "Name of the trusted client ca cert resource.",
                                "default": "client-ca"
                              },
                              "additionalValidation": {
                                "description": "X509 authentication attributes properties.",
                                "type": "string",
                                "enum": [
                                  "None",
                                  "AzureDeviceRegistry"
                                ],
                                "x-ms-enum": {
                                  "name": "BrokerAuthenticatorValidationMethods",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "None",
                                      "value": "None",
                                      "description": "No additional validation is performed"
                                    },
                                    {
                                      "name": "AzureDeviceRegistry",
                                      "value": "AzureDeviceRegistry",
                                      "description": "Additional validation is performed using the Azure Device Registry."
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "method"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is getting provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Resource is Updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is Deleting."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been Accepted."
                          }
                        ]
                      }
                    },
                    "healthState": {
                      "type": "string",
                      "description": "The health state of the resource.",
                      "default": "Unknown",
                      "enum": [
                        "Available",
                        "Degraded",
                        "Unavailable",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceHealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "Resource is Available and functioning as expected."
                          },
                          {
                            "name": "Degraded",
                            "value": "Degraded",
                            "description": "Resource health is degraded."
                          },
                          {
                            "name": "Unavailable",
                            "value": "Unavailable",
                            "description": "Resource is not functioning as expected."
                          },
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "Resource state is unknown."
                          }
                        ]
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "authenticationMethods"
                  ]
                },
                "extendedLocation": {
                  "description": "Edge location of the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "Type of ExtendedLocation.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "CustomLocation type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Resource 'BrokerAuthenticationResource' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Instance broker authentication resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "authenticationMethods": {
                      "type": "array",
                      "description": "Defines a set of Broker authentication methods to be used on `BrokerListeners`. For each array element one authenticator type supported.",
                      "items": {
                        "type": "object",
                        "description": "Set of broker authentication policies. Only one method is supported for each entry.",
                        "properties": {
                          "method": {
                            "description": "Custom authentication configuration.",
                            "type": "string",
                            "enum": [
                              "Custom",
                              "ServiceAccountToken",
                              "X509"
                            ],
                            "x-ms-enum": {
                              "name": "BrokerAuthenticationMethod",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Custom",
                                  "value": "Custom",
                                  "description": "Custom authentication configuration."
                                },
                                {
                                  "name": "ServiceAccountToken",
                                  "value": "ServiceAccountToken",
                                  "description": "ServiceAccountToken authentication configuration."
                                },
                                {
                                  "name": "X509",
                                  "value": "X509",
                                  "description": "X.509 authentication configuration."
                                }
                              ]
                            }
                          },
                          "customSettings": {
                            "description": "Custom authentication configuration.",
                            "type": "object",
                            "properties": {
                              "auth": {
                                "description": "Optional authentication needed for authenticating with the custom authentication server.",
                                "type": "object",
                                "properties": {
                                  "x509": {
                                    "description": "X509 Custom Auth type details.",
                                    "type": "object",
                                    "properties": {
                                      "secretRef": {
                                        "type": "string",
                                        "description": "Kubernetes secret containing an X.509 client certificate. This is a reference to the secret through an identifying name, not the secret itself."
                                      }
                                    },
                                    "required": [
                                      "secretRef"
                                    ]
                                  }
                                },
                                "required": [
                                  "x509"
                                ]
                              },
                              "caCertConfigMap": {
                                "type": "string",
                                "description": "Optional CA certificate for validating the custom authentication server's certificate."
                              },
                              "endpoint": {
                                "type": "string",
                                "format": "uri",
                                "description": "Endpoint of the custom authentication server. Must be an HTTPS endpoint.",
                                "pattern": "^https://.*$"
                              },
                              "headers": {
                                "type": "object",
                                "description": "Additional HTTP headers to pass to the custom authentication server.",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            },
                            "required": [
                              "endpoint"
                            ]
                          },
                          "serviceAccountTokenSettings": {
                            "description": "ServiceAccountToken authentication configuration.",
                            "type": "object",
                            "properties": {
                              "audiences": {
                                "type": "array",
                                "description": "List of allowed audience.",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "required": [
                              "audiences"
                            ]
                          },
                          "x509Settings": {
                            "description": "X.509 authentication configuration.",
                            "type": "object",
                            "properties": {
                              "authorizationAttributes": {
                                "type": "object",
                                "description": "X509 authorization attributes properties.",
                                "additionalProperties": {
                                  "type": "object",
                                  "description": "BrokerAuthenticatorMethodX509Attributes properties.",
                                  "properties": {
                                    "attributes": {
                                      "type": "object",
                                      "description": "Attributes object.",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    },
                                    "subject": {
                                      "type": "string",
                                      "description": "Subject of the X509 attribute."
                                    }
                                  },
                                  "required": [
                                    "attributes",
                                    "subject"
                                  ]
                                }
                              },
                              "trustedClientCaCert": {
                                "type": "string",
                                "description": "Name of the trusted client ca cert resource.",
                                "default": "client-ca"
                              },
                              "additionalValidation": {
                                "description": "X509 authentication attributes properties.",
                                "type": "string",
                                "enum": [
                                  "None",
                                  "AzureDeviceRegistry"
                                ],
                                "x-ms-enum": {
                                  "name": "BrokerAuthenticatorValidationMethods",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "None",
                                      "value": "None",
                                      "description": "No additional validation is performed"
                                    },
                                    {
                                      "name": "AzureDeviceRegistry",
                                      "value": "AzureDeviceRegistry",
                                      "description": "Additional validation is performed using the Azure Device Registry."
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "method"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is getting provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Resource is Updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is Deleting."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been Accepted."
                          }
                        ]
                      }
                    },
                    "healthState": {
                      "type": "string",
                      "description": "The health state of the resource.",
                      "default": "Unknown",
                      "enum": [
                        "Available",
                        "Degraded",
                        "Unavailable",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceHealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "Resource is Available and functioning as expected."
                          },
                          {
                            "name": "Degraded",
                            "value": "Degraded",
                            "description": "Resource health is degraded."
                          },
                          {
                            "name": "Unavailable",
                            "value": "Unavailable",
                            "description": "Resource is not functioning as expected."
                          },
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "Resource state is unknown."
                          }
                        ]
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "authenticationMethods"
                  ]
                },
                "extendedLocation": {
                  "description": "Edge location of the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "Type of ExtendedLocation.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "CustomLocation type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                }
              }
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "BrokerAuthentication_Delete",
        "tags": [
          "BrokerAuthentication"
        ],
        "description": "Delete a BrokerAuthenticationResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "brokerName",
            "in": "path",
            "description": "Name of broker.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "authenticationName",
            "in": "path",
            "description": "Name of Instance broker authentication resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperations/instances/{instanceName}/brokers/{brokerName}/authorizations": {
      "get": {
        "operationId": "BrokerAuthorization_ListByResourceGroup",
        "tags": [
          "BrokerAuthorization"
        ],
        "description": "List BrokerAuthorizationResource resources by BrokerResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "brokerName",
            "in": "path",
            "description": "Name of broker.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a BrokerAuthorizationResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The BrokerAuthorizationResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "Instance broker authorizations resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "authorizationPolicies": {
                            "description": "The list of authorization policies supported by the Authorization Resource.",
                            "type": "object",
                            "properties": {
                              "cache": {
                                "type": "string",
                                "description": "Enable caching of the authorization rules.",
                                "default": "Enabled",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "OperationalMode",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled",
                                      "description": "Enabled is equivalent to True"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled",
                                      "description": "Disabled is equivalent to False."
                                    }
                                  ]
                                }
                              },
                              "rules": {
                                "type": "array",
                                "description": "The authorization rules to follow. If no rule is set, but Authorization Resource is used that would mean DenyAll.",
                                "items": {
                                  "type": "object",
                                  "description": "AuthorizationConfig Rule Properties",
                                  "properties": {
                                    "brokerResources": {
                                      "type": "array",
                                      "description": "Give access to Broker methods and topics.",
                                      "items": {
                                        "type": "object",
                                        "description": "Broker Resource Rule properties. This defines the objects that represent the actions or topics, such as - method.Connect, method.Publish, etc.",
                                        "properties": {
                                          "method": {
                                            "description": "Give access for a Broker method (i.e., Connect, Subscribe, or Publish).",
                                            "type": "string",
                                            "enum": [
                                              "Connect",
                                              "Publish",
                                              "Subscribe"
                                            ],
                                            "x-ms-enum": {
                                              "name": "BrokerResourceDefinitionMethods",
                                              "modelAsString": true,
                                              "values": [
                                                {
                                                  "name": "Connect",
                                                  "value": "Connect",
                                                  "description": "Allowed Connecting to Broker"
                                                },
                                                {
                                                  "name": "Publish",
                                                  "value": "Publish",
                                                  "description": "Allowed Publishing to Broker"
                                                },
                                                {
                                                  "name": "Subscribe",
                                                  "value": "Subscribe",
                                                  "description": "Allowed Subscribing to Broker"
                                                }
                                              ]
                                            }
                                          },
                                          "clientIds": {
                                            "type": "array",
                                            "description": "A list of client IDs that match the clients. The client IDs are case-sensitive and must match the client IDs provided by the clients during connection. This subfield may be set if the method is Connect.",
                                            "default": [],
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "topics": {
                                            "type": "array",
                                            "description": "A list of topics or topic patterns that match the topics that the clients can publish or subscribe to. This subfield is required if the method is Publish or Subscribe.",
                                            "default": [],
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "required": [
                                          "method"
                                        ]
                                      },
                                      "x-ms-identifiers": []
                                    },
                                    "principals": {
                                      "description": "Give access to clients based on the following properties.",
                                      "type": "object",
                                      "properties": {
                                        "attributes": {
                                          "type": "array",
                                          "description": "A list of key-value pairs that match the attributes of the clients. The attributes are case-sensitive and must match the attributes provided by the clients during authentication.",
                                          "default": [],
                                          "items": {
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "x-ms-identifiers": []
                                        },
                                        "clientIds": {
                                          "type": "array",
                                          "description": "A list of client IDs that match the clients. The client IDs are case-sensitive and must match the client IDs provided by the clients during connection.",
                                          "default": [],
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "usernames": {
                                          "type": "array",
                                          "description": "A list of usernames that match the clients. The usernames are case-sensitive and must match the usernames provided by the clients during authentication.",
                                          "default": [],
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "stateStoreResources": {
                                      "type": "array",
                                      "description": "Give access to state store resources.",
                                      "items": {
                                        "type": "object",
                                        "description": "State Store Resource Rule properties.",
                                        "properties": {
                                          "keyType": {
                                            "description": "Allowed keyTypes pattern, string, binary. The key type used for matching, for example pattern tries to match the key to a glob-style pattern and string checks key is equal to value provided in keys.",
                                            "type": "string",
                                            "enum": [
                                              "Pattern",
                                              "String",
                                              "Binary"
                                            ],
                                            "x-ms-enum": {
                                              "name": "StateStoreResourceKeyTypes",
                                              "modelAsString": true,
                                              "values": [
                                                {
                                                  "name": "Pattern",
                                                  "value": "Pattern",
                                                  "description": "Key type - pattern"
                                                },
                                                {
                                                  "name": "String",
                                                  "value": "String",
                                                  "description": "Key type - string"
                                                },
                                                {
                                                  "name": "Binary",
                                                  "value": "Binary",
                                                  "description": "Key type - binary"
                                                }
                                              ]
                                            }
                                          },
                                          "keys": {
                                            "type": "array",
                                            "description": "Give access to state store keys for the corresponding principals defined. When key type is pattern set glob-style pattern (e.g., '*', 'clients/*').",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "method": {
                                            "description": "Give access for `Read`, `Write` and `ReadWrite` access level.",
                                            "type": "string",
                                            "enum": [
                                              "Read",
                                              "Write",
                                              "ReadWrite"
                                            ],
                                            "x-ms-enum": {
                                              "name": "StateStoreResourceDefinitionMethods",
                                              "modelAsString": true,
                                              "values": [
                                                {
                                                  "name": "Read",
                                                  "value": "Read",
                                                  "description": "Get/KeyNotify from Store"
                                                },
                                                {
                                                  "name": "Write",
                                                  "value": "Write",
                                                  "description": "Set/Delete in Store"
                                                },
                                                {
                                                  "name": "ReadWrite",
                                                  "value": "ReadWrite",
                                                  "description": "Allowed all operations on Store - Get/KeyNotify/Set/Delete"
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        "required": [
                                          "keyType",
                                          "keys",
                                          "method"
                                        ]
                                      },
                                      "x-ms-identifiers": []
                                    }
                                  },
                                  "required": [
                                    "brokerResources",
                                    "principals"
                                  ]
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "provisioningState": {
                            "description": "The status of the last operation.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "Resource is getting provisioned."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "Resource is Updating."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Resource is Deleting."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "Resource has been Accepted."
                                }
                              ]
                            }
                          },
                          "healthState": {
                            "type": "string",
                            "description": "The health state of the resource.",
                            "default": "Unknown",
                            "enum": [
                              "Available",
                              "Degraded",
                              "Unavailable",
                              "Unknown"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceHealthState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Available",
                                  "value": "Available",
                                  "description": "Resource is Available and functioning as expected."
                                },
                                {
                                  "name": "Degraded",
                                  "value": "Degraded",
                                  "description": "Resource health is degraded."
                                },
                                {
                                  "name": "Unavailable",
                                  "value": "Unavailable",
                                  "description": "Resource is not functioning as expected."
                                },
                                {
                                  "name": "Unknown",
                                  "value": "Unknown",
                                  "description": "Resource state is unknown."
                                }
                              ]
                            },
                            "readOnly": true
                          }
                        },
                        "required": [
                          "authorizationPolicies"
                        ]
                      },
                      "extendedLocation": {
                        "description": "Edge location of the resource.",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the extended location."
                          },
                          "type": {
                            "description": "Type of ExtendedLocation.",
                            "type": "string",
                            "enum": [
                              "CustomLocation"
                            ],
                            "x-ms-enum": {
                              "name": "ExtendedLocationType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "CustomLocation",
                                  "value": "CustomLocation",
                                  "description": "CustomLocation type"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "name",
                          "type"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperations/instances/{instanceName}/brokers/{brokerName}/authorizations/{authorizationName}": {
      "get": {
        "operationId": "BrokerAuthorization_Get",
        "tags": [
          "BrokerAuthorization"
        ],
        "description": "Get a BrokerAuthorizationResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "brokerName",
            "in": "path",
            "description": "Name of broker.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "authorizationName",
            "in": "path",
            "description": "Name of Instance broker authorization resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Instance broker authorizations resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "authorizationPolicies": {
                      "description": "The list of authorization policies supported by the Authorization Resource.",
                      "type": "object",
                      "properties": {
                        "cache": {
                          "type": "string",
                          "description": "Enable caching of the authorization rules.",
                          "default": "Enabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "OperationalMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "Enabled is equivalent to True"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "Disabled is equivalent to False."
                              }
                            ]
                          }
                        },
                        "rules": {
                          "type": "array",
                          "description": "The authorization rules to follow. If no rule is set, but Authorization Resource is used that would mean DenyAll.",
                          "items": {
                            "type": "object",
                            "description": "AuthorizationConfig Rule Properties",
                            "properties": {
                              "brokerResources": {
                                "type": "array",
                                "description": "Give access to Broker methods and topics.",
                                "items": {
                                  "type": "object",
                                  "description": "Broker Resource Rule properties. This defines the objects that represent the actions or topics, such as - method.Connect, method.Publish, etc.",
                                  "properties": {
                                    "method": {
                                      "description": "Give access for a Broker method (i.e., Connect, Subscribe, or Publish).",
                                      "type": "string",
                                      "enum": [
                                        "Connect",
                                        "Publish",
                                        "Subscribe"
                                      ],
                                      "x-ms-enum": {
                                        "name": "BrokerResourceDefinitionMethods",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Connect",
                                            "value": "Connect",
                                            "description": "Allowed Connecting to Broker"
                                          },
                                          {
                                            "name": "Publish",
                                            "value": "Publish",
                                            "description": "Allowed Publishing to Broker"
                                          },
                                          {
                                            "name": "Subscribe",
                                            "value": "Subscribe",
                                            "description": "Allowed Subscribing to Broker"
                                          }
                                        ]
                                      }
                                    },
                                    "clientIds": {
                                      "type": "array",
                                      "description": "A list of client IDs that match the clients. The client IDs are case-sensitive and must match the client IDs provided by the clients during connection. This subfield may be set if the method is Connect.",
                                      "default": [],
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "topics": {
                                      "type": "array",
                                      "description": "A list of topics or topic patterns that match the topics that the clients can publish or subscribe to. This subfield is required if the method is Publish or Subscribe.",
                                      "default": [],
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "method"
                                  ]
                                },
                                "x-ms-identifiers": []
                              },
                              "principals": {
                                "description": "Give access to clients based on the following properties.",
                                "type": "object",
                                "properties": {
                                  "attributes": {
                                    "type": "array",
                                    "description": "A list of key-value pairs that match the attributes of the clients. The attributes are case-sensitive and must match the attributes provided by the clients during authentication.",
                                    "default": [],
                                    "items": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    },
                                    "x-ms-identifiers": []
                                  },
                                  "clientIds": {
                                    "type": "array",
                                    "description": "A list of client IDs that match the clients. The client IDs are case-sensitive and must match the client IDs provided by the clients during connection.",
                                    "default": [],
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "usernames": {
                                    "type": "array",
                                    "description": "A list of usernames that match the clients. The usernames are case-sensitive and must match the usernames provided by the clients during authentication.",
                                    "default": [],
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "stateStoreResources": {
                                "type": "array",
                                "description": "Give access to state store resources.",
                                "items": {
                                  "type": "object",
                                  "description": "State Store Resource Rule properties.",
                                  "properties": {
                                    "keyType": {
                                      "description": "Allowed keyTypes pattern, string, binary. The key type used for matching, for example pattern tries to match the key to a glob-style pattern and string checks key is equal to value provided in keys.",
                                      "type": "string",
                                      "enum": [
                                        "Pattern",
                                        "String",
                                        "Binary"
                                      ],
                                      "x-ms-enum": {
                                        "name": "StateStoreResourceKeyTypes",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Pattern",
                                            "value": "Pattern",
                                            "description": "Key type - pattern"
                                          },
                                          {
                                            "name": "String",
                                            "value": "String",
                                            "description": "Key type - string"
                                          },
                                          {
                                            "name": "Binary",
                                            "value": "Binary",
                                            "description": "Key type - binary"
                                          }
                                        ]
                                      }
                                    },
                                    "keys": {
                                      "type": "array",
                                      "description": "Give access to state store keys for the corresponding principals defined. When key type is pattern set glob-style pattern (e.g., '*', 'clients/*').",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "method": {
                                      "description": "Give access for `Read`, `Write` and `ReadWrite` access level.",
                                      "type": "string",
                                      "enum": [
                                        "Read",
                                        "Write",
                                        "ReadWrite"
                                      ],
                                      "x-ms-enum": {
                                        "name": "StateStoreResourceDefinitionMethods",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Read",
                                            "value": "Read",
                                            "description": "Get/KeyNotify from Store"
                                          },
                                          {
                                            "name": "Write",
                                            "value": "Write",
                                            "description": "Set/Delete in Store"
                                          },
                                          {
                                            "name": "ReadWrite",
                                            "value": "ReadWrite",
                                            "description": "Allowed all operations on Store - Get/KeyNotify/Set/Delete"
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  "required": [
                                    "keyType",
                                    "keys",
                                    "method"
                                  ]
                                },
                                "x-ms-identifiers": []
                              }
                            },
                            "required": [
                              "brokerResources",
                              "principals"
                            ]
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is getting provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Resource is Updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is Deleting."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been Accepted."
                          }
                        ]
                      }
                    },
                    "healthState": {
                      "type": "string",
                      "description": "The health state of the resource.",
                      "default": "Unknown",
                      "enum": [
                        "Available",
                        "Degraded",
                        "Unavailable",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceHealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "Resource is Available and functioning as expected."
                          },
                          {
                            "name": "Degraded",
                            "value": "Degraded",
                            "description": "Resource health is degraded."
                          },
                          {
                            "name": "Unavailable",
                            "value": "Unavailable",
                            "description": "Resource is not functioning as expected."
                          },
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "Resource state is unknown."
                          }
                        ]
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "authorizationPolicies"
                  ]
                },
                "extendedLocation": {
                  "description": "Edge location of the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "Type of ExtendedLocation.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "CustomLocation type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "BrokerAuthorization_CreateOrUpdate",
        "tags": [
          "BrokerAuthorization"
        ],
        "description": "Create a BrokerAuthorizationResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "brokerName",
            "in": "path",
            "description": "Name of broker.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "authorizationName",
            "in": "path",
            "description": "Name of Instance broker authorization resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Instance broker authorizations resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "authorizationPolicies": {
                      "description": "The list of authorization policies supported by the Authorization Resource.",
                      "type": "object",
                      "properties": {
                        "cache": {
                          "type": "string",
                          "description": "Enable caching of the authorization rules.",
                          "default": "Enabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "OperationalMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "Enabled is equivalent to True"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "Disabled is equivalent to False."
                              }
                            ]
                          }
                        },
                        "rules": {
                          "type": "array",
                          "description": "The authorization rules to follow. If no rule is set, but Authorization Resource is used that would mean DenyAll.",
                          "items": {
                            "type": "object",
                            "description": "AuthorizationConfig Rule Properties",
                            "properties": {
                              "brokerResources": {
                                "type": "array",
                                "description": "Give access to Broker methods and topics.",
                                "items": {
                                  "type": "object",
                                  "description": "Broker Resource Rule properties. This defines the objects that represent the actions or topics, such as - method.Connect, method.Publish, etc.",
                                  "properties": {
                                    "method": {
                                      "description": "Give access for a Broker method (i.e., Connect, Subscribe, or Publish).",
                                      "type": "string",
                                      "enum": [
                                        "Connect",
                                        "Publish",
                                        "Subscribe"
                                      ],
                                      "x-ms-enum": {
                                        "name": "BrokerResourceDefinitionMethods",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Connect",
                                            "value": "Connect",
                                            "description": "Allowed Connecting to Broker"
                                          },
                                          {
                                            "name": "Publish",
                                            "value": "Publish",
                                            "description": "Allowed Publishing to Broker"
                                          },
                                          {
                                            "name": "Subscribe",
                                            "value": "Subscribe",
                                            "description": "Allowed Subscribing to Broker"
                                          }
                                        ]
                                      }
                                    },
                                    "clientIds": {
                                      "type": "array",
                                      "description": "A list of client IDs that match the clients. The client IDs are case-sensitive and must match the client IDs provided by the clients during connection. This subfield may be set if the method is Connect.",
                                      "default": [],
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "topics": {
                                      "type": "array",
                                      "description": "A list of topics or topic patterns that match the topics that the clients can publish or subscribe to. This subfield is required if the method is Publish or Subscribe.",
                                      "default": [],
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "method"
                                  ]
                                },
                                "x-ms-identifiers": []
                              },
                              "principals": {
                                "description": "Give access to clients based on the following properties.",
                                "type": "object",
                                "properties": {
                                  "attributes": {
                                    "type": "array",
                                    "description": "A list of key-value pairs that match the attributes of the clients. The attributes are case-sensitive and must match the attributes provided by the clients during authentication.",
                                    "default": [],
                                    "items": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    },
                                    "x-ms-identifiers": []
                                  },
                                  "clientIds": {
                                    "type": "array",
                                    "description": "A list of client IDs that match the clients. The client IDs are case-sensitive and must match the client IDs provided by the clients during connection.",
                                    "default": [],
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "usernames": {
                                    "type": "array",
                                    "description": "A list of usernames that match the clients. The usernames are case-sensitive and must match the usernames provided by the clients during authentication.",
                                    "default": [],
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "stateStoreResources": {
                                "type": "array",
                                "description": "Give access to state store resources.",
                                "items": {
                                  "type": "object",
                                  "description": "State Store Resource Rule properties.",
                                  "properties": {
                                    "keyType": {
                                      "description": "Allowed keyTypes pattern, string, binary. The key type used for matching, for example pattern tries to match the key to a glob-style pattern and string checks key is equal to value provided in keys.",
                                      "type": "string",
                                      "enum": [
                                        "Pattern",
                                        "String",
                                        "Binary"
                                      ],
                                      "x-ms-enum": {
                                        "name": "StateStoreResourceKeyTypes",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Pattern",
                                            "value": "Pattern",
                                            "description": "Key type - pattern"
                                          },
                                          {
                                            "name": "String",
                                            "value": "String",
                                            "description": "Key type - string"
                                          },
                                          {
                                            "name": "Binary",
                                            "value": "Binary",
                                            "description": "Key type - binary"
                                          }
                                        ]
                                      }
                                    },
                                    "keys": {
                                      "type": "array",
                                      "description": "Give access to state store keys for the corresponding principals defined. When key type is pattern set glob-style pattern (e.g., '*', 'clients/*').",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "method": {
                                      "description": "Give access for `Read`, `Write` and `ReadWrite` access level.",
                                      "type": "string",
                                      "enum": [
                                        "Read",
                                        "Write",
                                        "ReadWrite"
                                      ],
                                      "x-ms-enum": {
                                        "name": "StateStoreResourceDefinitionMethods",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Read",
                                            "value": "Read",
                                            "description": "Get/KeyNotify from Store"
                                          },
                                          {
                                            "name": "Write",
                                            "value": "Write",
                                            "description": "Set/Delete in Store"
                                          },
                                          {
                                            "name": "ReadWrite",
                                            "value": "ReadWrite",
                                            "description": "Allowed all operations on Store - Get/KeyNotify/Set/Delete"
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  "required": [
                                    "keyType",
                                    "keys",
                                    "method"
                                  ]
                                },
                                "x-ms-identifiers": []
                              }
                            },
                            "required": [
                              "brokerResources",
                              "principals"
                            ]
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is getting provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Resource is Updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is Deleting."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been Accepted."
                          }
                        ]
                      }
                    },
                    "healthState": {
                      "type": "string",
                      "description": "The health state of the resource.",
                      "default": "Unknown",
                      "enum": [
                        "Available",
                        "Degraded",
                        "Unavailable",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceHealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "Resource is Available and functioning as expected."
                          },
                          {
                            "name": "Degraded",
                            "value": "Degraded",
                            "description": "Resource health is degraded."
                          },
                          {
                            "name": "Unavailable",
                            "value": "Unavailable",
                            "description": "Resource is not functioning as expected."
                          },
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "Resource state is unknown."
                          }
                        ]
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "authorizationPolicies"
                  ]
                },
                "extendedLocation": {
                  "description": "Edge location of the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "Type of ExtendedLocation.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "CustomLocation type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'BrokerAuthorizationResource' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Instance broker authorizations resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "authorizationPolicies": {
                      "description": "The list of authorization policies supported by the Authorization Resource.",
                      "type": "object",
                      "properties": {
                        "cache": {
                          "type": "string",
                          "description": "Enable caching of the authorization rules.",
                          "default": "Enabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "OperationalMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "Enabled is equivalent to True"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "Disabled is equivalent to False."
                              }
                            ]
                          }
                        },
                        "rules": {
                          "type": "array",
                          "description": "The authorization rules to follow. If no rule is set, but Authorization Resource is used that would mean DenyAll.",
                          "items": {
                            "type": "object",
                            "description": "AuthorizationConfig Rule Properties",
                            "properties": {
                              "brokerResources": {
                                "type": "array",
                                "description": "Give access to Broker methods and topics.",
                                "items": {
                                  "type": "object",
                                  "description": "Broker Resource Rule properties. This defines the objects that represent the actions or topics, such as - method.Connect, method.Publish, etc.",
                                  "properties": {
                                    "method": {
                                      "description": "Give access for a Broker method (i.e., Connect, Subscribe, or Publish).",
                                      "type": "string",
                                      "enum": [
                                        "Connect",
                                        "Publish",
                                        "Subscribe"
                                      ],
                                      "x-ms-enum": {
                                        "name": "BrokerResourceDefinitionMethods",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Connect",
                                            "value": "Connect",
                                            "description": "Allowed Connecting to Broker"
                                          },
                                          {
                                            "name": "Publish",
                                            "value": "Publish",
                                            "description": "Allowed Publishing to Broker"
                                          },
                                          {
                                            "name": "Subscribe",
                                            "value": "Subscribe",
                                            "description": "Allowed Subscribing to Broker"
                                          }
                                        ]
                                      }
                                    },
                                    "clientIds": {
                                      "type": "array",
                                      "description": "A list of client IDs that match the clients. The client IDs are case-sensitive and must match the client IDs provided by the clients during connection. This subfield may be set if the method is Connect.",
                                      "default": [],
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "topics": {
                                      "type": "array",
                                      "description": "A list of topics or topic patterns that match the topics that the clients can publish or subscribe to. This subfield is required if the method is Publish or Subscribe.",
                                      "default": [],
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "method"
                                  ]
                                },
                                "x-ms-identifiers": []
                              },
                              "principals": {
                                "description": "Give access to clients based on the following properties.",
                                "type": "object",
                                "properties": {
                                  "attributes": {
                                    "type": "array",
                                    "description": "A list of key-value pairs that match the attributes of the clients. The attributes are case-sensitive and must match the attributes provided by the clients during authentication.",
                                    "default": [],
                                    "items": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    },
                                    "x-ms-identifiers": []
                                  },
                                  "clientIds": {
                                    "type": "array",
                                    "description": "A list of client IDs that match the clients. The client IDs are case-sensitive and must match the client IDs provided by the clients during connection.",
                                    "default": [],
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "usernames": {
                                    "type": "array",
                                    "description": "A list of usernames that match the clients. The usernames are case-sensitive and must match the usernames provided by the clients during authentication.",
                                    "default": [],
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "stateStoreResources": {
                                "type": "array",
                                "description": "Give access to state store resources.",
                                "items": {
                                  "type": "object",
                                  "description": "State Store Resource Rule properties.",
                                  "properties": {
                                    "keyType": {
                                      "description": "Allowed keyTypes pattern, string, binary. The key type used for matching, for example pattern tries to match the key to a glob-style pattern and string checks key is equal to value provided in keys.",
                                      "type": "string",
                                      "enum": [
                                        "Pattern",
                                        "String",
                                        "Binary"
                                      ],
                                      "x-ms-enum": {
                                        "name": "StateStoreResourceKeyTypes",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Pattern",
                                            "value": "Pattern",
                                            "description": "Key type - pattern"
                                          },
                                          {
                                            "name": "String",
                                            "value": "String",
                                            "description": "Key type - string"
                                          },
                                          {
                                            "name": "Binary",
                                            "value": "Binary",
                                            "description": "Key type - binary"
                                          }
                                        ]
                                      }
                                    },
                                    "keys": {
                                      "type": "array",
                                      "description": "Give access to state store keys for the corresponding principals defined. When key type is pattern set glob-style pattern (e.g., '*', 'clients/*').",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "method": {
                                      "description": "Give access for `Read`, `Write` and `ReadWrite` access level.",
                                      "type": "string",
                                      "enum": [
                                        "Read",
                                        "Write",
                                        "ReadWrite"
                                      ],
                                      "x-ms-enum": {
                                        "name": "StateStoreResourceDefinitionMethods",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Read",
                                            "value": "Read",
                                            "description": "Get/KeyNotify from Store"
                                          },
                                          {
                                            "name": "Write",
                                            "value": "Write",
                                            "description": "Set/Delete in Store"
                                          },
                                          {
                                            "name": "ReadWrite",
                                            "value": "ReadWrite",
                                            "description": "Allowed all operations on Store - Get/KeyNotify/Set/Delete"
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  "required": [
                                    "keyType",
                                    "keys",
                                    "method"
                                  ]
                                },
                                "x-ms-identifiers": []
                              }
                            },
                            "required": [
                              "brokerResources",
                              "principals"
                            ]
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is getting provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Resource is Updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is Deleting."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been Accepted."
                          }
                        ]
                      }
                    },
                    "healthState": {
                      "type": "string",
                      "description": "The health state of the resource.",
                      "default": "Unknown",
                      "enum": [
                        "Available",
                        "Degraded",
                        "Unavailable",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceHealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "Resource is Available and functioning as expected."
                          },
                          {
                            "name": "Degraded",
                            "value": "Degraded",
                            "description": "Resource health is degraded."
                          },
                          {
                            "name": "Unavailable",
                            "value": "Unavailable",
                            "description": "Resource is not functioning as expected."
                          },
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "Resource state is unknown."
                          }
                        ]
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "authorizationPolicies"
                  ]
                },
                "extendedLocation": {
                  "description": "Edge location of the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "Type of ExtendedLocation.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "CustomLocation type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Resource 'BrokerAuthorizationResource' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Instance broker authorizations resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "authorizationPolicies": {
                      "description": "The list of authorization policies supported by the Authorization Resource.",
                      "type": "object",
                      "properties": {
                        "cache": {
                          "type": "string",
                          "description": "Enable caching of the authorization rules.",
                          "default": "Enabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "OperationalMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "Enabled is equivalent to True"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "Disabled is equivalent to False."
                              }
                            ]
                          }
                        },
                        "rules": {
                          "type": "array",
                          "description": "The authorization rules to follow. If no rule is set, but Authorization Resource is used that would mean DenyAll.",
                          "items": {
                            "type": "object",
                            "description": "AuthorizationConfig Rule Properties",
                            "properties": {
                              "brokerResources": {
                                "type": "array",
                                "description": "Give access to Broker methods and topics.",
                                "items": {
                                  "type": "object",
                                  "description": "Broker Resource Rule properties. This defines the objects that represent the actions or topics, such as - method.Connect, method.Publish, etc.",
                                  "properties": {
                                    "method": {
                                      "description": "Give access for a Broker method (i.e., Connect, Subscribe, or Publish).",
                                      "type": "string",
                                      "enum": [
                                        "Connect",
                                        "Publish",
                                        "Subscribe"
                                      ],
                                      "x-ms-enum": {
                                        "name": "BrokerResourceDefinitionMethods",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Connect",
                                            "value": "Connect",
                                            "description": "Allowed Connecting to Broker"
                                          },
                                          {
                                            "name": "Publish",
                                            "value": "Publish",
                                            "description": "Allowed Publishing to Broker"
                                          },
                                          {
                                            "name": "Subscribe",
                                            "value": "Subscribe",
                                            "description": "Allowed Subscribing to Broker"
                                          }
                                        ]
                                      }
                                    },
                                    "clientIds": {
                                      "type": "array",
                                      "description": "A list of client IDs that match the clients. The client IDs are case-sensitive and must match the client IDs provided by the clients during connection. This subfield may be set if the method is Connect.",
                                      "default": [],
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "topics": {
                                      "type": "array",
                                      "description": "A list of topics or topic patterns that match the topics that the clients can publish or subscribe to. This subfield is required if the method is Publish or Subscribe.",
                                      "default": [],
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "method"
                                  ]
                                },
                                "x-ms-identifiers": []
                              },
                              "principals": {
                                "description": "Give access to clients based on the following properties.",
                                "type": "object",
                                "properties": {
                                  "attributes": {
                                    "type": "array",
                                    "description": "A list of key-value pairs that match the attributes of the clients. The attributes are case-sensitive and must match the attributes provided by the clients during authentication.",
                                    "default": [],
                                    "items": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    },
                                    "x-ms-identifiers": []
                                  },
                                  "clientIds": {
                                    "type": "array",
                                    "description": "A list of client IDs that match the clients. The client IDs are case-sensitive and must match the client IDs provided by the clients during connection.",
                                    "default": [],
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "usernames": {
                                    "type": "array",
                                    "description": "A list of usernames that match the clients. The usernames are case-sensitive and must match the usernames provided by the clients during authentication.",
                                    "default": [],
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "stateStoreResources": {
                                "type": "array",
                                "description": "Give access to state store resources.",
                                "items": {
                                  "type": "object",
                                  "description": "State Store Resource Rule properties.",
                                  "properties": {
                                    "keyType": {
                                      "description": "Allowed keyTypes pattern, string, binary. The key type used for matching, for example pattern tries to match the key to a glob-style pattern and string checks key is equal to value provided in keys.",
                                      "type": "string",
                                      "enum": [
                                        "Pattern",
                                        "String",
                                        "Binary"
                                      ],
                                      "x-ms-enum": {
                                        "name": "StateStoreResourceKeyTypes",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Pattern",
                                            "value": "Pattern",
                                            "description": "Key type - pattern"
                                          },
                                          {
                                            "name": "String",
                                            "value": "String",
                                            "description": "Key type - string"
                                          },
                                          {
                                            "name": "Binary",
                                            "value": "Binary",
                                            "description": "Key type - binary"
                                          }
                                        ]
                                      }
                                    },
                                    "keys": {
                                      "type": "array",
                                      "description": "Give access to state store keys for the corresponding principals defined. When key type is pattern set glob-style pattern (e.g., '*', 'clients/*').",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "method": {
                                      "description": "Give access for `Read`, `Write` and `ReadWrite` access level.",
                                      "type": "string",
                                      "enum": [
                                        "Read",
                                        "Write",
                                        "ReadWrite"
                                      ],
                                      "x-ms-enum": {
                                        "name": "StateStoreResourceDefinitionMethods",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Read",
                                            "value": "Read",
                                            "description": "Get/KeyNotify from Store"
                                          },
                                          {
                                            "name": "Write",
                                            "value": "Write",
                                            "description": "Set/Delete in Store"
                                          },
                                          {
                                            "name": "ReadWrite",
                                            "value": "ReadWrite",
                                            "description": "Allowed all operations on Store - Get/KeyNotify/Set/Delete"
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  "required": [
                                    "keyType",
                                    "keys",
                                    "method"
                                  ]
                                },
                                "x-ms-identifiers": []
                              }
                            },
                            "required": [
                              "brokerResources",
                              "principals"
                            ]
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is getting provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Resource is Updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is Deleting."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been Accepted."
                          }
                        ]
                      }
                    },
                    "healthState": {
                      "type": "string",
                      "description": "The health state of the resource.",
                      "default": "Unknown",
                      "enum": [
                        "Available",
                        "Degraded",
                        "Unavailable",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceHealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "Resource is Available and functioning as expected."
                          },
                          {
                            "name": "Degraded",
                            "value": "Degraded",
                            "description": "Resource health is degraded."
                          },
                          {
                            "name": "Unavailable",
                            "value": "Unavailable",
                            "description": "Resource is not functioning as expected."
                          },
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "Resource state is unknown."
                          }
                        ]
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "authorizationPolicies"
                  ]
                },
                "extendedLocation": {
                  "description": "Edge location of the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "Type of ExtendedLocation.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "CustomLocation type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                }
              }
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "BrokerAuthorization_Delete",
        "tags": [
          "BrokerAuthorization"
        ],
        "description": "Delete a BrokerAuthorizationResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "brokerName",
            "in": "path",
            "description": "Name of broker.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "authorizationName",
            "in": "path",
            "description": "Name of Instance broker authorization resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperations/instances/{instanceName}/brokers/{brokerName}/listeners": {
      "get": {
        "operationId": "BrokerListener_ListByResourceGroup",
        "tags": [
          "BrokerListener"
        ],
        "description": "List BrokerListenerResource resources by BrokerResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "brokerName",
            "in": "path",
            "description": "Name of broker.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a BrokerListenerResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The BrokerListenerResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "Instance broker resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "serviceName": {
                            "type": "string",
                            "description": "Kubernetes Service name of this listener."
                          },
                          "ports": {
                            "type": "array",
                            "description": "Ports on which this listener accepts client connections.",
                            "items": {
                              "type": "object",
                              "description": "Defines a TCP port on which a `BrokerListener` listens.",
                              "properties": {
                                "authenticationRef": {
                                  "type": "string",
                                  "description": "Reference to client authentication settings. Omit to disable authentication."
                                },
                                "authorizationRef": {
                                  "type": "string",
                                  "description": "Reference to client authorization settings. Omit to disable authorization."
                                },
                                "nodePort": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Kubernetes node port. Only relevant when this port is associated with a `NodePort` listener.",
                                  "minimum": 0,
                                  "maximum": 65535
                                },
                                "port": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "TCP port for accepting client connections.",
                                  "minimum": 0,
                                  "maximum": 65535
                                },
                                "protocol": {
                                  "type": "string",
                                  "description": "Protocol to use for client connections.",
                                  "default": "Mqtt",
                                  "enum": [
                                    "Mqtt",
                                    "WebSockets"
                                  ],
                                  "x-ms-enum": {
                                    "name": "BrokerProtocolType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Mqtt",
                                        "value": "Mqtt",
                                        "description": "protocol broker"
                                      },
                                      {
                                        "name": "WebSockets",
                                        "value": "WebSockets",
                                        "description": "protocol websocket"
                                      }
                                    ]
                                  }
                                },
                                "tls": {
                                  "description": "TLS server certificate settings for this port. Omit to disable TLS.",
                                  "type": "object",
                                  "properties": {
                                    "mode": {
                                      "description": "Mode of TLS server certificate management.",
                                      "type": "string",
                                      "enum": [
                                        "Automatic",
                                        "Manual"
                                      ],
                                      "x-ms-enum": {
                                        "name": "TlsCertMethodMode",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Automatic",
                                            "value": "Automatic",
                                            "description": "Automatic TLS server certificate configuration."
                                          },
                                          {
                                            "name": "Manual",
                                            "value": "Manual",
                                            "description": "Manual TLS server certificate configuration."
                                          }
                                        ]
                                      }
                                    },
                                    "certManagerCertificateSpec": {
                                      "description": "Option 1 - Automatic TLS server certificate management with cert-manager.",
                                      "type": "object",
                                      "properties": {
                                        "duration": {
                                          "type": "string",
                                          "description": "Lifetime of certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."
                                        },
                                        "secretName": {
                                          "type": "string",
                                          "description": "Secret for storing server certificate. Any existing data will be overwritten. This is a reference to the secret through an identifying name, not the secret itself."
                                        },
                                        "renewBefore": {
                                          "type": "string",
                                          "description": "When to begin renewing certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."
                                        },
                                        "issuerRef": {
                                          "description": "cert-manager issuerRef.",
                                          "type": "object",
                                          "properties": {
                                            "group": {
                                              "type": "string",
                                              "description": "group of issuer.",
                                              "default": "cert-manager.io"
                                            },
                                            "kind": {
                                              "description": "kind of issuer (Issuer or ClusterIssuer).",
                                              "type": "string",
                                              "enum": [
                                                "Issuer",
                                                "ClusterIssuer"
                                              ],
                                              "x-ms-enum": {
                                                "name": "CertManagerIssuerKind",
                                                "modelAsString": true,
                                                "values": [
                                                  {
                                                    "name": "Issuer",
                                                    "value": "Issuer",
                                                    "description": "Issuer kind."
                                                  },
                                                  {
                                                    "name": "ClusterIssuer",
                                                    "value": "ClusterIssuer",
                                                    "description": "ClusterIssuer kind."
                                                  }
                                                ]
                                              }
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "name of issuer."
                                            }
                                          },
                                          "required": [
                                            "group",
                                            "kind",
                                            "name"
                                          ]
                                        },
                                        "privateKey": {
                                          "description": "Type of certificate private key.",
                                          "type": "object",
                                          "properties": {
                                            "algorithm": {
                                              "description": "algorithm for private key.",
                                              "type": "string",
                                              "enum": [
                                                "Ec256",
                                                "Ec384",
                                                "Ec521",
                                                "Ed25519",
                                                "Rsa2048",
                                                "Rsa4096",
                                                "Rsa8192"
                                              ],
                                              "x-ms-enum": {
                                                "name": "PrivateKeyAlgorithm",
                                                "modelAsString": true,
                                                "values": [
                                                  {
                                                    "name": "Ec256",
                                                    "value": "Ec256",
                                                    "description": "Algorithm - ec256."
                                                  },
                                                  {
                                                    "name": "Ec384",
                                                    "value": "Ec384",
                                                    "description": "Algorithm - ec384."
                                                  },
                                                  {
                                                    "name": "Ec521",
                                                    "value": "Ec521",
                                                    "description": "Algorithm - ec521."
                                                  },
                                                  {
                                                    "name": "Ed25519",
                                                    "value": "Ed25519",
                                                    "description": "Algorithm - ed25519."
                                                  },
                                                  {
                                                    "name": "Rsa2048",
                                                    "value": "Rsa2048",
                                                    "description": "Algorithm - rsa2048."
                                                  },
                                                  {
                                                    "name": "Rsa4096",
                                                    "value": "Rsa4096",
                                                    "description": "Algorithm - rsa4096."
                                                  },
                                                  {
                                                    "name": "Rsa8192",
                                                    "value": "Rsa8192",
                                                    "description": "Algorithm - rsa8192."
                                                  }
                                                ]
                                              }
                                            },
                                            "rotationPolicy": {
                                              "description": "cert-manager private key rotationPolicy.",
                                              "type": "string",
                                              "enum": [
                                                "Always",
                                                "Never"
                                              ],
                                              "x-ms-enum": {
                                                "name": "PrivateKeyRotationPolicy",
                                                "modelAsString": true,
                                                "values": [
                                                  {
                                                    "name": "Always",
                                                    "value": "Always",
                                                    "description": "Rotation Policy - Always."
                                                  },
                                                  {
                                                    "name": "Never",
                                                    "value": "Never",
                                                    "description": "Rotation Policy - Never."
                                                  }
                                                ]
                                              }
                                            }
                                          },
                                          "required": [
                                            "algorithm",
                                            "rotationPolicy"
                                          ]
                                        },
                                        "san": {
                                          "description": "Additional Subject Alternative Names (SANs) to include in the certificate.",
                                          "type": "object",
                                          "properties": {
                                            "dns": {
                                              "type": "array",
                                              "description": "DNS SANs.",
                                              "default": [],
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "ip": {
                                              "type": "array",
                                              "description": "IP address SANs.",
                                              "default": [],
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "required": [
                                            "dns",
                                            "ip"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "issuerRef"
                                      ]
                                    },
                                    "manual": {
                                      "description": "Option 2 - Manual TLS server certificate management through a defined secret.",
                                      "type": "object",
                                      "properties": {
                                        "secretRef": {
                                          "type": "string",
                                          "description": "Kubernetes secret containing an X.509 client certificate. This is a reference to the secret through an identifying name, not the secret itself."
                                        }
                                      },
                                      "required": [
                                        "secretRef"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "mode"
                                  ]
                                }
                              },
                              "required": [
                                "port"
                              ]
                            },
                            "x-ms-identifiers": [
                              "port"
                            ]
                          },
                          "serviceType": {
                            "type": "string",
                            "description": "Kubernetes Service type of this listener.",
                            "default": "ClusterIp",
                            "enum": [
                              "ClusterIp",
                              "LoadBalancer",
                              "NodePort"
                            ],
                            "x-ms-enum": {
                              "name": "ServiceType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "ClusterIp",
                                  "value": "ClusterIp",
                                  "description": "Cluster IP Service."
                                },
                                {
                                  "name": "LoadBalancer",
                                  "value": "LoadBalancer",
                                  "description": "Load Balancer Service."
                                },
                                {
                                  "name": "NodePort",
                                  "value": "NodePort",
                                  "description": "Node Port Service."
                                }
                              ]
                            }
                          },
                          "provisioningState": {
                            "description": "The status of the last operation.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "Resource is getting provisioned."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "Resource is Updating."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Resource is Deleting."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "Resource has been Accepted."
                                }
                              ]
                            }
                          },
                          "healthState": {
                            "type": "string",
                            "description": "The health state of the resource.",
                            "default": "Unknown",
                            "enum": [
                              "Available",
                              "Degraded",
                              "Unavailable",
                              "Unknown"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceHealthState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Available",
                                  "value": "Available",
                                  "description": "Resource is Available and functioning as expected."
                                },
                                {
                                  "name": "Degraded",
                                  "value": "Degraded",
                                  "description": "Resource health is degraded."
                                },
                                {
                                  "name": "Unavailable",
                                  "value": "Unavailable",
                                  "description": "Resource is not functioning as expected."
                                },
                                {
                                  "name": "Unknown",
                                  "value": "Unknown",
                                  "description": "Resource state is unknown."
                                }
                              ]
                            },
                            "readOnly": true
                          }
                        },
                        "required": [
                          "ports"
                        ]
                      },
                      "extendedLocation": {
                        "description": "Edge location of the resource.",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the extended location."
                          },
                          "type": {
                            "description": "Type of ExtendedLocation.",
                            "type": "string",
                            "enum": [
                              "CustomLocation"
                            ],
                            "x-ms-enum": {
                              "name": "ExtendedLocationType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "CustomLocation",
                                  "value": "CustomLocation",
                                  "description": "CustomLocation type"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "name",
                          "type"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperations/instances/{instanceName}/brokers/{brokerName}/listeners/{listenerName}": {
      "get": {
        "operationId": "BrokerListener_Get",
        "tags": [
          "BrokerListener"
        ],
        "description": "Get a BrokerListenerResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "brokerName",
            "in": "path",
            "description": "Name of broker.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "listenerName",
            "in": "path",
            "description": "Name of Instance broker listener resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Instance broker resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "serviceName": {
                      "type": "string",
                      "description": "Kubernetes Service name of this listener."
                    },
                    "ports": {
                      "type": "array",
                      "description": "Ports on which this listener accepts client connections.",
                      "items": {
                        "type": "object",
                        "description": "Defines a TCP port on which a `BrokerListener` listens.",
                        "properties": {
                          "authenticationRef": {
                            "type": "string",
                            "description": "Reference to client authentication settings. Omit to disable authentication."
                          },
                          "authorizationRef": {
                            "type": "string",
                            "description": "Reference to client authorization settings. Omit to disable authorization."
                          },
                          "nodePort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Kubernetes node port. Only relevant when this port is associated with a `NodePort` listener.",
                            "minimum": 0,
                            "maximum": 65535
                          },
                          "port": {
                            "type": "integer",
                            "format": "int32",
                            "description": "TCP port for accepting client connections.",
                            "minimum": 0,
                            "maximum": 65535
                          },
                          "protocol": {
                            "type": "string",
                            "description": "Protocol to use for client connections.",
                            "default": "Mqtt",
                            "enum": [
                              "Mqtt",
                              "WebSockets"
                            ],
                            "x-ms-enum": {
                              "name": "BrokerProtocolType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Mqtt",
                                  "value": "Mqtt",
                                  "description": "protocol broker"
                                },
                                {
                                  "name": "WebSockets",
                                  "value": "WebSockets",
                                  "description": "protocol websocket"
                                }
                              ]
                            }
                          },
                          "tls": {
                            "description": "TLS server certificate settings for this port. Omit to disable TLS.",
                            "type": "object",
                            "properties": {
                              "mode": {
                                "description": "Mode of TLS server certificate management.",
                                "type": "string",
                                "enum": [
                                  "Automatic",
                                  "Manual"
                                ],
                                "x-ms-enum": {
                                  "name": "TlsCertMethodMode",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Automatic",
                                      "value": "Automatic",
                                      "description": "Automatic TLS server certificate configuration."
                                    },
                                    {
                                      "name": "Manual",
                                      "value": "Manual",
                                      "description": "Manual TLS server certificate configuration."
                                    }
                                  ]
                                }
                              },
                              "certManagerCertificateSpec": {
                                "description": "Option 1 - Automatic TLS server certificate management with cert-manager.",
                                "type": "object",
                                "properties": {
                                  "duration": {
                                    "type": "string",
                                    "description": "Lifetime of certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."
                                  },
                                  "secretName": {
                                    "type": "string",
                                    "description": "Secret for storing server certificate. Any existing data will be overwritten. This is a reference to the secret through an identifying name, not the secret itself."
                                  },
                                  "renewBefore": {
                                    "type": "string",
                                    "description": "When to begin renewing certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."
                                  },
                                  "issuerRef": {
                                    "description": "cert-manager issuerRef.",
                                    "type": "object",
                                    "properties": {
                                      "group": {
                                        "type": "string",
                                        "description": "group of issuer.",
                                        "default": "cert-manager.io"
                                      },
                                      "kind": {
                                        "description": "kind of issuer (Issuer or ClusterIssuer).",
                                        "type": "string",
                                        "enum": [
                                          "Issuer",
                                          "ClusterIssuer"
                                        ],
                                        "x-ms-enum": {
                                          "name": "CertManagerIssuerKind",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "Issuer",
                                              "value": "Issuer",
                                              "description": "Issuer kind."
                                            },
                                            {
                                              "name": "ClusterIssuer",
                                              "value": "ClusterIssuer",
                                              "description": "ClusterIssuer kind."
                                            }
                                          ]
                                        }
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "name of issuer."
                                      }
                                    },
                                    "required": [
                                      "group",
                                      "kind",
                                      "name"
                                    ]
                                  },
                                  "privateKey": {
                                    "description": "Type of certificate private key.",
                                    "type": "object",
                                    "properties": {
                                      "algorithm": {
                                        "description": "algorithm for private key.",
                                        "type": "string",
                                        "enum": [
                                          "Ec256",
                                          "Ec384",
                                          "Ec521",
                                          "Ed25519",
                                          "Rsa2048",
                                          "Rsa4096",
                                          "Rsa8192"
                                        ],
                                        "x-ms-enum": {
                                          "name": "PrivateKeyAlgorithm",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "Ec256",
                                              "value": "Ec256",
                                              "description": "Algorithm - ec256."
                                            },
                                            {
                                              "name": "Ec384",
                                              "value": "Ec384",
                                              "description": "Algorithm - ec384."
                                            },
                                            {
                                              "name": "Ec521",
                                              "value": "Ec521",
                                              "description": "Algorithm - ec521."
                                            },
                                            {
                                              "name": "Ed25519",
                                              "value": "Ed25519",
                                              "description": "Algorithm - ed25519."
                                            },
                                            {
                                              "name": "Rsa2048",
                                              "value": "Rsa2048",
                                              "description": "Algorithm - rsa2048."
                                            },
                                            {
                                              "name": "Rsa4096",
                                              "value": "Rsa4096",
                                              "description": "Algorithm - rsa4096."
                                            },
                                            {
                                              "name": "Rsa8192",
                                              "value": "Rsa8192",
                                              "description": "Algorithm - rsa8192."
                                            }
                                          ]
                                        }
                                      },
                                      "rotationPolicy": {
                                        "description": "cert-manager private key rotationPolicy.",
                                        "type": "string",
                                        "enum": [
                                          "Always",
                                          "Never"
                                        ],
                                        "x-ms-enum": {
                                          "name": "PrivateKeyRotationPolicy",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "Always",
                                              "value": "Always",
                                              "description": "Rotation Policy - Always."
                                            },
                                            {
                                              "name": "Never",
                                              "value": "Never",
                                              "description": "Rotation Policy - Never."
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    "required": [
                                      "algorithm",
                                      "rotationPolicy"
                                    ]
                                  },
                                  "san": {
                                    "description": "Additional Subject Alternative Names (SANs) to include in the certificate.",
                                    "type": "object",
                                    "properties": {
                                      "dns": {
                                        "type": "array",
                                        "description": "DNS SANs.",
                                        "default": [],
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "ip": {
                                        "type": "array",
                                        "description": "IP address SANs.",
                                        "default": [],
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "required": [
                                      "dns",
                                      "ip"
                                    ]
                                  }
                                },
                                "required": [
                                  "issuerRef"
                                ]
                              },
                              "manual": {
                                "description": "Option 2 - Manual TLS server certificate management through a defined secret.",
                                "type": "object",
                                "properties": {
                                  "secretRef": {
                                    "type": "string",
                                    "description": "Kubernetes secret containing an X.509 client certificate. This is a reference to the secret through an identifying name, not the secret itself."
                                  }
                                },
                                "required": [
                                  "secretRef"
                                ]
                              }
                            },
                            "required": [
                              "mode"
                            ]
                          }
                        },
                        "required": [
                          "port"
                        ]
                      },
                      "x-ms-identifiers": [
                        "port"
                      ]
                    },
                    "serviceType": {
                      "type": "string",
                      "description": "Kubernetes Service type of this listener.",
                      "default": "ClusterIp",
                      "enum": [
                        "ClusterIp",
                        "LoadBalancer",
                        "NodePort"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "ClusterIp",
                            "value": "ClusterIp",
                            "description": "Cluster IP Service."
                          },
                          {
                            "name": "LoadBalancer",
                            "value": "LoadBalancer",
                            "description": "Load Balancer Service."
                          },
                          {
                            "name": "NodePort",
                            "value": "NodePort",
                            "description": "Node Port Service."
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is getting provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Resource is Updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is Deleting."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been Accepted."
                          }
                        ]
                      }
                    },
                    "healthState": {
                      "type": "string",
                      "description": "The health state of the resource.",
                      "default": "Unknown",
                      "enum": [
                        "Available",
                        "Degraded",
                        "Unavailable",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceHealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "Resource is Available and functioning as expected."
                          },
                          {
                            "name": "Degraded",
                            "value": "Degraded",
                            "description": "Resource health is degraded."
                          },
                          {
                            "name": "Unavailable",
                            "value": "Unavailable",
                            "description": "Resource is not functioning as expected."
                          },
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "Resource state is unknown."
                          }
                        ]
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "ports"
                  ]
                },
                "extendedLocation": {
                  "description": "Edge location of the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "Type of ExtendedLocation.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "CustomLocation type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "BrokerListener_CreateOrUpdate",
        "tags": [
          "BrokerListener"
        ],
        "description": "Create a BrokerListenerResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "brokerName",
            "in": "path",
            "description": "Name of broker.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "listenerName",
            "in": "path",
            "description": "Name of Instance broker listener resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Instance broker resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "serviceName": {
                      "type": "string",
                      "description": "Kubernetes Service name of this listener."
                    },
                    "ports": {
                      "type": "array",
                      "description": "Ports on which this listener accepts client connections.",
                      "items": {
                        "type": "object",
                        "description": "Defines a TCP port on which a `BrokerListener` listens.",
                        "properties": {
                          "authenticationRef": {
                            "type": "string",
                            "description": "Reference to client authentication settings. Omit to disable authentication."
                          },
                          "authorizationRef": {
                            "type": "string",
                            "description": "Reference to client authorization settings. Omit to disable authorization."
                          },
                          "nodePort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Kubernetes node port. Only relevant when this port is associated with a `NodePort` listener.",
                            "minimum": 0,
                            "maximum": 65535
                          },
                          "port": {
                            "type": "integer",
                            "format": "int32",
                            "description": "TCP port for accepting client connections.",
                            "minimum": 0,
                            "maximum": 65535
                          },
                          "protocol": {
                            "type": "string",
                            "description": "Protocol to use for client connections.",
                            "default": "Mqtt",
                            "enum": [
                              "Mqtt",
                              "WebSockets"
                            ],
                            "x-ms-enum": {
                              "name": "BrokerProtocolType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Mqtt",
                                  "value": "Mqtt",
                                  "description": "protocol broker"
                                },
                                {
                                  "name": "WebSockets",
                                  "value": "WebSockets",
                                  "description": "protocol websocket"
                                }
                              ]
                            }
                          },
                          "tls": {
                            "description": "TLS server certificate settings for this port. Omit to disable TLS.",
                            "type": "object",
                            "properties": {
                              "mode": {
                                "description": "Mode of TLS server certificate management.",
                                "type": "string",
                                "enum": [
                                  "Automatic",
                                  "Manual"
                                ],
                                "x-ms-enum": {
                                  "name": "TlsCertMethodMode",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Automatic",
                                      "value": "Automatic",
                                      "description": "Automatic TLS server certificate configuration."
                                    },
                                    {
                                      "name": "Manual",
                                      "value": "Manual",
                                      "description": "Manual TLS server certificate configuration."
                                    }
                                  ]
                                }
                              },
                              "certManagerCertificateSpec": {
                                "description": "Option 1 - Automatic TLS server certificate management with cert-manager.",
                                "type": "object",
                                "properties": {
                                  "duration": {
                                    "type": "string",
                                    "description": "Lifetime of certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."
                                  },
                                  "secretName": {
                                    "type": "string",
                                    "description": "Secret for storing server certificate. Any existing data will be overwritten. This is a reference to the secret through an identifying name, not the secret itself."
                                  },
                                  "renewBefore": {
                                    "type": "string",
                                    "description": "When to begin renewing certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."
                                  },
                                  "issuerRef": {
                                    "description": "cert-manager issuerRef.",
                                    "type": "object",
                                    "properties": {
                                      "group": {
                                        "type": "string",
                                        "description": "group of issuer.",
                                        "default": "cert-manager.io"
                                      },
                                      "kind": {
                                        "description": "kind of issuer (Issuer or ClusterIssuer).",
                                        "type": "string",
                                        "enum": [
                                          "Issuer",
                                          "ClusterIssuer"
                                        ],
                                        "x-ms-enum": {
                                          "name": "CertManagerIssuerKind",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "Issuer",
                                              "value": "Issuer",
                                              "description": "Issuer kind."
                                            },
                                            {
                                              "name": "ClusterIssuer",
                                              "value": "ClusterIssuer",
                                              "description": "ClusterIssuer kind."
                                            }
                                          ]
                                        }
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "name of issuer."
                                      }
                                    },
                                    "required": [
                                      "group",
                                      "kind",
                                      "name"
                                    ]
                                  },
                                  "privateKey": {
                                    "description": "Type of certificate private key.",
                                    "type": "object",
                                    "properties": {
                                      "algorithm": {
                                        "description": "algorithm for private key.",
                                        "type": "string",
                                        "enum": [
                                          "Ec256",
                                          "Ec384",
                                          "Ec521",
                                          "Ed25519",
                                          "Rsa2048",
                                          "Rsa4096",
                                          "Rsa8192"
                                        ],
                                        "x-ms-enum": {
                                          "name": "PrivateKeyAlgorithm",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "Ec256",
                                              "value": "Ec256",
                                              "description": "Algorithm - ec256."
                                            },
                                            {
                                              "name": "Ec384",
                                              "value": "Ec384",
                                              "description": "Algorithm - ec384."
                                            },
                                            {
                                              "name": "Ec521",
                                              "value": "Ec521",
                                              "description": "Algorithm - ec521."
                                            },
                                            {
                                              "name": "Ed25519",
                                              "value": "Ed25519",
                                              "description": "Algorithm - ed25519."
                                            },
                                            {
                                              "name": "Rsa2048",
                                              "value": "Rsa2048",
                                              "description": "Algorithm - rsa2048."
                                            },
                                            {
                                              "name": "Rsa4096",
                                              "value": "Rsa4096",
                                              "description": "Algorithm - rsa4096."
                                            },
                                            {
                                              "name": "Rsa8192",
                                              "value": "Rsa8192",
                                              "description": "Algorithm - rsa8192."
                                            }
                                          ]
                                        }
                                      },
                                      "rotationPolicy": {
                                        "description": "cert-manager private key rotationPolicy.",
                                        "type": "string",
                                        "enum": [
                                          "Always",
                                          "Never"
                                        ],
                                        "x-ms-enum": {
                                          "name": "PrivateKeyRotationPolicy",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "Always",
                                              "value": "Always",
                                              "description": "Rotation Policy - Always."
                                            },
                                            {
                                              "name": "Never",
                                              "value": "Never",
                                              "description": "Rotation Policy - Never."
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    "required": [
                                      "algorithm",
                                      "rotationPolicy"
                                    ]
                                  },
                                  "san": {
                                    "description": "Additional Subject Alternative Names (SANs) to include in the certificate.",
                                    "type": "object",
                                    "properties": {
                                      "dns": {
                                        "type": "array",
                                        "description": "DNS SANs.",
                                        "default": [],
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "ip": {
                                        "type": "array",
                                        "description": "IP address SANs.",
                                        "default": [],
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "required": [
                                      "dns",
                                      "ip"
                                    ]
                                  }
                                },
                                "required": [
                                  "issuerRef"
                                ]
                              },
                              "manual": {
                                "description": "Option 2 - Manual TLS server certificate management through a defined secret.",
                                "type": "object",
                                "properties": {
                                  "secretRef": {
                                    "type": "string",
                                    "description": "Kubernetes secret containing an X.509 client certificate. This is a reference to the secret through an identifying name, not the secret itself."
                                  }
                                },
                                "required": [
                                  "secretRef"
                                ]
                              }
                            },
                            "required": [
                              "mode"
                            ]
                          }
                        },
                        "required": [
                          "port"
                        ]
                      },
                      "x-ms-identifiers": [
                        "port"
                      ]
                    },
                    "serviceType": {
                      "type": "string",
                      "description": "Kubernetes Service type of this listener.",
                      "default": "ClusterIp",
                      "enum": [
                        "ClusterIp",
                        "LoadBalancer",
                        "NodePort"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "ClusterIp",
                            "value": "ClusterIp",
                            "description": "Cluster IP Service."
                          },
                          {
                            "name": "LoadBalancer",
                            "value": "LoadBalancer",
                            "description": "Load Balancer Service."
                          },
                          {
                            "name": "NodePort",
                            "value": "NodePort",
                            "description": "Node Port Service."
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is getting provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Resource is Updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is Deleting."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been Accepted."
                          }
                        ]
                      }
                    },
                    "healthState": {
                      "type": "string",
                      "description": "The health state of the resource.",
                      "default": "Unknown",
                      "enum": [
                        "Available",
                        "Degraded",
                        "Unavailable",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceHealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "Resource is Available and functioning as expected."
                          },
                          {
                            "name": "Degraded",
                            "value": "Degraded",
                            "description": "Resource health is degraded."
                          },
                          {
                            "name": "Unavailable",
                            "value": "Unavailable",
                            "description": "Resource is not functioning as expected."
                          },
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "Resource state is unknown."
                          }
                        ]
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "ports"
                  ]
                },
                "extendedLocation": {
                  "description": "Edge location of the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "Type of ExtendedLocation.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "CustomLocation type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'BrokerListenerResource' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Instance broker resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "serviceName": {
                      "type": "string",
                      "description": "Kubernetes Service name of this listener."
                    },
                    "ports": {
                      "type": "array",
                      "description": "Ports on which this listener accepts client connections.",
                      "items": {
                        "type": "object",
                        "description": "Defines a TCP port on which a `BrokerListener` listens.",
                        "properties": {
                          "authenticationRef": {
                            "type": "string",
                            "description": "Reference to client authentication settings. Omit to disable authentication."
                          },
                          "authorizationRef": {
                            "type": "string",
                            "description": "Reference to client authorization settings. Omit to disable authorization."
                          },
                          "nodePort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Kubernetes node port. Only relevant when this port is associated with a `NodePort` listener.",
                            "minimum": 0,
                            "maximum": 65535
                          },
                          "port": {
                            "type": "integer",
                            "format": "int32",
                            "description": "TCP port for accepting client connections.",
                            "minimum": 0,
                            "maximum": 65535
                          },
                          "protocol": {
                            "type": "string",
                            "description": "Protocol to use for client connections.",
                            "default": "Mqtt",
                            "enum": [
                              "Mqtt",
                              "WebSockets"
                            ],
                            "x-ms-enum": {
                              "name": "BrokerProtocolType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Mqtt",
                                  "value": "Mqtt",
                                  "description": "protocol broker"
                                },
                                {
                                  "name": "WebSockets",
                                  "value": "WebSockets",
                                  "description": "protocol websocket"
                                }
                              ]
                            }
                          },
                          "tls": {
                            "description": "TLS server certificate settings for this port. Omit to disable TLS.",
                            "type": "object",
                            "properties": {
                              "mode": {
                                "description": "Mode of TLS server certificate management.",
                                "type": "string",
                                "enum": [
                                  "Automatic",
                                  "Manual"
                                ],
                                "x-ms-enum": {
                                  "name": "TlsCertMethodMode",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Automatic",
                                      "value": "Automatic",
                                      "description": "Automatic TLS server certificate configuration."
                                    },
                                    {
                                      "name": "Manual",
                                      "value": "Manual",
                                      "description": "Manual TLS server certificate configuration."
                                    }
                                  ]
                                }
                              },
                              "certManagerCertificateSpec": {
                                "description": "Option 1 - Automatic TLS server certificate management with cert-manager.",
                                "type": "object",
                                "properties": {
                                  "duration": {
                                    "type": "string",
                                    "description": "Lifetime of certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."
                                  },
                                  "secretName": {
                                    "type": "string",
                                    "description": "Secret for storing server certificate. Any existing data will be overwritten. This is a reference to the secret through an identifying name, not the secret itself."
                                  },
                                  "renewBefore": {
                                    "type": "string",
                                    "description": "When to begin renewing certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."
                                  },
                                  "issuerRef": {
                                    "description": "cert-manager issuerRef.",
                                    "type": "object",
                                    "properties": {
                                      "group": {
                                        "type": "string",
                                        "description": "group of issuer.",
                                        "default": "cert-manager.io"
                                      },
                                      "kind": {
                                        "description": "kind of issuer (Issuer or ClusterIssuer).",
                                        "type": "string",
                                        "enum": [
                                          "Issuer",
                                          "ClusterIssuer"
                                        ],
                                        "x-ms-enum": {
                                          "name": "CertManagerIssuerKind",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "Issuer",
                                              "value": "Issuer",
                                              "description": "Issuer kind."
                                            },
                                            {
                                              "name": "ClusterIssuer",
                                              "value": "ClusterIssuer",
                                              "description": "ClusterIssuer kind."
                                            }
                                          ]
                                        }
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "name of issuer."
                                      }
                                    },
                                    "required": [
                                      "group",
                                      "kind",
                                      "name"
                                    ]
                                  },
                                  "privateKey": {
                                    "description": "Type of certificate private key.",
                                    "type": "object",
                                    "properties": {
                                      "algorithm": {
                                        "description": "algorithm for private key.",
                                        "type": "string",
                                        "enum": [
                                          "Ec256",
                                          "Ec384",
                                          "Ec521",
                                          "Ed25519",
                                          "Rsa2048",
                                          "Rsa4096",
                                          "Rsa8192"
                                        ],
                                        "x-ms-enum": {
                                          "name": "PrivateKeyAlgorithm",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "Ec256",
                                              "value": "Ec256",
                                              "description": "Algorithm - ec256."
                                            },
                                            {
                                              "name": "Ec384",
                                              "value": "Ec384",
                                              "description": "Algorithm - ec384."
                                            },
                                            {
                                              "name": "Ec521",
                                              "value": "Ec521",
                                              "description": "Algorithm - ec521."
                                            },
                                            {
                                              "name": "Ed25519",
                                              "value": "Ed25519",
                                              "description": "Algorithm - ed25519."
                                            },
                                            {
                                              "name": "Rsa2048",
                                              "value": "Rsa2048",
                                              "description": "Algorithm - rsa2048."
                                            },
                                            {
                                              "name": "Rsa4096",
                                              "value": "Rsa4096",
                                              "description": "Algorithm - rsa4096."
                                            },
                                            {
                                              "name": "Rsa8192",
                                              "value": "Rsa8192",
                                              "description": "Algorithm - rsa8192."
                                            }
                                          ]
                                        }
                                      },
                                      "rotationPolicy": {
                                        "description": "cert-manager private key rotationPolicy.",
                                        "type": "string",
                                        "enum": [
                                          "Always",
                                          "Never"
                                        ],
                                        "x-ms-enum": {
                                          "name": "PrivateKeyRotationPolicy",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "Always",
                                              "value": "Always",
                                              "description": "Rotation Policy - Always."
                                            },
                                            {
                                              "name": "Never",
                                              "value": "Never",
                                              "description": "Rotation Policy - Never."
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    "required": [
                                      "algorithm",
                                      "rotationPolicy"
                                    ]
                                  },
                                  "san": {
                                    "description": "Additional Subject Alternative Names (SANs) to include in the certificate.",
                                    "type": "object",
                                    "properties": {
                                      "dns": {
                                        "type": "array",
                                        "description": "DNS SANs.",
                                        "default": [],
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "ip": {
                                        "type": "array",
                                        "description": "IP address SANs.",
                                        "default": [],
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "required": [
                                      "dns",
                                      "ip"
                                    ]
                                  }
                                },
                                "required": [
                                  "issuerRef"
                                ]
                              },
                              "manual": {
                                "description": "Option 2 - Manual TLS server certificate management through a defined secret.",
                                "type": "object",
                                "properties": {
                                  "secretRef": {
                                    "type": "string",
                                    "description": "Kubernetes secret containing an X.509 client certificate. This is a reference to the secret through an identifying name, not the secret itself."
                                  }
                                },
                                "required": [
                                  "secretRef"
                                ]
                              }
                            },
                            "required": [
                              "mode"
                            ]
                          }
                        },
                        "required": [
                          "port"
                        ]
                      },
                      "x-ms-identifiers": [
                        "port"
                      ]
                    },
                    "serviceType": {
                      "type": "string",
                      "description": "Kubernetes Service type of this listener.",
                      "default": "ClusterIp",
                      "enum": [
                        "ClusterIp",
                        "LoadBalancer",
                        "NodePort"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "ClusterIp",
                            "value": "ClusterIp",
                            "description": "Cluster IP Service."
                          },
                          {
                            "name": "LoadBalancer",
                            "value": "LoadBalancer",
                            "description": "Load Balancer Service."
                          },
                          {
                            "name": "NodePort",
                            "value": "NodePort",
                            "description": "Node Port Service."
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is getting provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Resource is Updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is Deleting."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been Accepted."
                          }
                        ]
                      }
                    },
                    "healthState": {
                      "type": "string",
                      "description": "The health state of the resource.",
                      "default": "Unknown",
                      "enum": [
                        "Available",
                        "Degraded",
                        "Unavailable",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceHealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "Resource is Available and functioning as expected."
                          },
                          {
                            "name": "Degraded",
                            "value": "Degraded",
                            "description": "Resource health is degraded."
                          },
                          {
                            "name": "Unavailable",
                            "value": "Unavailable",
                            "description": "Resource is not functioning as expected."
                          },
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "Resource state is unknown."
                          }
                        ]
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "ports"
                  ]
                },
                "extendedLocation": {
                  "description": "Edge location of the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "Type of ExtendedLocation.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "CustomLocation type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Resource 'BrokerListenerResource' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Instance broker resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "serviceName": {
                      "type": "string",
                      "description": "Kubernetes Service name of this listener."
                    },
                    "ports": {
                      "type": "array",
                      "description": "Ports on which this listener accepts client connections.",
                      "items": {
                        "type": "object",
                        "description": "Defines a TCP port on which a `BrokerListener` listens.",
                        "properties": {
                          "authenticationRef": {
                            "type": "string",
                            "description": "Reference to client authentication settings. Omit to disable authentication."
                          },
                          "authorizationRef": {
                            "type": "string",
                            "description": "Reference to client authorization settings. Omit to disable authorization."
                          },
                          "nodePort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Kubernetes node port. Only relevant when this port is associated with a `NodePort` listener.",
                            "minimum": 0,
                            "maximum": 65535
                          },
                          "port": {
                            "type": "integer",
                            "format": "int32",
                            "description": "TCP port for accepting client connections.",
                            "minimum": 0,
                            "maximum": 65535
                          },
                          "protocol": {
                            "type": "string",
                            "description": "Protocol to use for client connections.",
                            "default": "Mqtt",
                            "enum": [
                              "Mqtt",
                              "WebSockets"
                            ],
                            "x-ms-enum": {
                              "name": "BrokerProtocolType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Mqtt",
                                  "value": "Mqtt",
                                  "description": "protocol broker"
                                },
                                {
                                  "name": "WebSockets",
                                  "value": "WebSockets",
                                  "description": "protocol websocket"
                                }
                              ]
                            }
                          },
                          "tls": {
                            "description": "TLS server certificate settings for this port. Omit to disable TLS.",
                            "type": "object",
                            "properties": {
                              "mode": {
                                "description": "Mode of TLS server certificate management.",
                                "type": "string",
                                "enum": [
                                  "Automatic",
                                  "Manual"
                                ],
                                "x-ms-enum": {
                                  "name": "TlsCertMethodMode",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Automatic",
                                      "value": "Automatic",
                                      "description": "Automatic TLS server certificate configuration."
                                    },
                                    {
                                      "name": "Manual",
                                      "value": "Manual",
                                      "description": "Manual TLS server certificate configuration."
                                    }
                                  ]
                                }
                              },
                              "certManagerCertificateSpec": {
                                "description": "Option 1 - Automatic TLS server certificate management with cert-manager.",
                                "type": "object",
                                "properties": {
                                  "duration": {
                                    "type": "string",
                                    "description": "Lifetime of certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."
                                  },
                                  "secretName": {
                                    "type": "string",
                                    "description": "Secret for storing server certificate. Any existing data will be overwritten. This is a reference to the secret through an identifying name, not the secret itself."
                                  },
                                  "renewBefore": {
                                    "type": "string",
                                    "description": "When to begin renewing certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."
                                  },
                                  "issuerRef": {
                                    "description": "cert-manager issuerRef.",
                                    "type": "object",
                                    "properties": {
                                      "group": {
                                        "type": "string",
                                        "description": "group of issuer.",
                                        "default": "cert-manager.io"
                                      },
                                      "kind": {
                                        "description": "kind of issuer (Issuer or ClusterIssuer).",
                                        "type": "string",
                                        "enum": [
                                          "Issuer",
                                          "ClusterIssuer"
                                        ],
                                        "x-ms-enum": {
                                          "name": "CertManagerIssuerKind",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "Issuer",
                                              "value": "Issuer",
                                              "description": "Issuer kind."
                                            },
                                            {
                                              "name": "ClusterIssuer",
                                              "value": "ClusterIssuer",
                                              "description": "ClusterIssuer kind."
                                            }
                                          ]
                                        }
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "name of issuer."
                                      }
                                    },
                                    "required": [
                                      "group",
                                      "kind",
                                      "name"
                                    ]
                                  },
                                  "privateKey": {
                                    "description": "Type of certificate private key.",
                                    "type": "object",
                                    "properties": {
                                      "algorithm": {
                                        "description": "algorithm for private key.",
                                        "type": "string",
                                        "enum": [
                                          "Ec256",
                                          "Ec384",
                                          "Ec521",
                                          "Ed25519",
                                          "Rsa2048",
                                          "Rsa4096",
                                          "Rsa8192"
                                        ],
                                        "x-ms-enum": {
                                          "name": "PrivateKeyAlgorithm",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "Ec256",
                                              "value": "Ec256",
                                              "description": "Algorithm - ec256."
                                            },
                                            {
                                              "name": "Ec384",
                                              "value": "Ec384",
                                              "description": "Algorithm - ec384."
                                            },
                                            {
                                              "name": "Ec521",
                                              "value": "Ec521",
                                              "description": "Algorithm - ec521."
                                            },
                                            {
                                              "name": "Ed25519",
                                              "value": "Ed25519",
                                              "description": "Algorithm - ed25519."
                                            },
                                            {
                                              "name": "Rsa2048",
                                              "value": "Rsa2048",
                                              "description": "Algorithm - rsa2048."
                                            },
                                            {
                                              "name": "Rsa4096",
                                              "value": "Rsa4096",
                                              "description": "Algorithm - rsa4096."
                                            },
                                            {
                                              "name": "Rsa8192",
                                              "value": "Rsa8192",
                                              "description": "Algorithm - rsa8192."
                                            }
                                          ]
                                        }
                                      },
                                      "rotationPolicy": {
                                        "description": "cert-manager private key rotationPolicy.",
                                        "type": "string",
                                        "enum": [
                                          "Always",
                                          "Never"
                                        ],
                                        "x-ms-enum": {
                                          "name": "PrivateKeyRotationPolicy",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "Always",
                                              "value": "Always",
                                              "description": "Rotation Policy - Always."
                                            },
                                            {
                                              "name": "Never",
                                              "value": "Never",
                                              "description": "Rotation Policy - Never."
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    "required": [
                                      "algorithm",
                                      "rotationPolicy"
                                    ]
                                  },
                                  "san": {
                                    "description": "Additional Subject Alternative Names (SANs) to include in the certificate.",
                                    "type": "object",
                                    "properties": {
                                      "dns": {
                                        "type": "array",
                                        "description": "DNS SANs.",
                                        "default": [],
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "ip": {
                                        "type": "array",
                                        "description": "IP address SANs.",
                                        "default": [],
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "required": [
                                      "dns",
                                      "ip"
                                    ]
                                  }
                                },
                                "required": [
                                  "issuerRef"
                                ]
                              },
                              "manual": {
                                "description": "Option 2 - Manual TLS server certificate management through a defined secret.",
                                "type": "object",
                                "properties": {
                                  "secretRef": {
                                    "type": "string",
                                    "description": "Kubernetes secret containing an X.509 client certificate. This is a reference to the secret through an identifying name, not the secret itself."
                                  }
                                },
                                "required": [
                                  "secretRef"
                                ]
                              }
                            },
                            "required": [
                              "mode"
                            ]
                          }
                        },
                        "required": [
                          "port"
                        ]
                      },
                      "x-ms-identifiers": [
                        "port"
                      ]
                    },
                    "serviceType": {
                      "type": "string",
                      "description": "Kubernetes Service type of this listener.",
                      "default": "ClusterIp",
                      "enum": [
                        "ClusterIp",
                        "LoadBalancer",
                        "NodePort"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "ClusterIp",
                            "value": "ClusterIp",
                            "description": "Cluster IP Service."
                          },
                          {
                            "name": "LoadBalancer",
                            "value": "LoadBalancer",
                            "description": "Load Balancer Service."
                          },
                          {
                            "name": "NodePort",
                            "value": "NodePort",
                            "description": "Node Port Service."
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is getting provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Resource is Updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is Deleting."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been Accepted."
                          }
                        ]
                      }
                    },
                    "healthState": {
                      "type": "string",
                      "description": "The health state of the resource.",
                      "default": "Unknown",
                      "enum": [
                        "Available",
                        "Degraded",
                        "Unavailable",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceHealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "Resource is Available and functioning as expected."
                          },
                          {
                            "name": "Degraded",
                            "value": "Degraded",
                            "description": "Resource health is degraded."
                          },
                          {
                            "name": "Unavailable",
                            "value": "Unavailable",
                            "description": "Resource is not functioning as expected."
                          },
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "Resource state is unknown."
                          }
                        ]
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "ports"
                  ]
                },
                "extendedLocation": {
                  "description": "Edge location of the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "Type of ExtendedLocation.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "CustomLocation type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                }
              }
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "BrokerListener_Delete",
        "tags": [
          "BrokerListener"
        ],
        "description": "Delete a BrokerListenerResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "brokerName",
            "in": "path",
            "description": "Name of broker.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "listenerName",
            "in": "path",
            "description": "Name of Instance broker listener resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperations/instances/{instanceName}/dataflowEndpoints": {
      "get": {
        "operationId": "DataflowEndpoint_ListByResourceGroup",
        "tags": [
          "DataflowEndpoint"
        ],
        "description": "List DataflowEndpointResource resources by InstanceResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a DataflowEndpointResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The DataflowEndpointResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "Instance dataflowEndpoint resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "endpointType": {
                            "description": "Endpoint Type.",
                            "type": "string",
                            "enum": [
                              "DataExplorer",
                              "DataLakeStorage",
                              "FabricOneLake",
                              "Kafka",
                              "LocalStorage",
                              "Mqtt",
                              "OpenTelemetry"
                            ],
                            "x-ms-enum": {
                              "name": "EndpointType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "DataExplorer",
                                  "value": "DataExplorer",
                                  "description": "Azure Data Explorer Type"
                                },
                                {
                                  "name": "DataLakeStorage",
                                  "value": "DataLakeStorage",
                                  "description": "Azure Data Lake Type"
                                },
                                {
                                  "name": "FabricOneLake",
                                  "value": "FabricOneLake",
                                  "description": "Microsoft Fabric Type"
                                },
                                {
                                  "name": "Kafka",
                                  "value": "Kafka",
                                  "description": "Kafka Type"
                                },
                                {
                                  "name": "LocalStorage",
                                  "value": "LocalStorage",
                                  "description": "Local Storage Type"
                                },
                                {
                                  "name": "Mqtt",
                                  "value": "Mqtt",
                                  "description": "Broker Type"
                                },
                                {
                                  "name": "OpenTelemetry",
                                  "value": "OpenTelemetry",
                                  "description": "OpenTelemetry Type"
                                }
                              ]
                            }
                          },
                          "hostType": {
                            "description": "The type of the Kafka host. E.g FabricRT, EventGrid.",
                            "type": "string",
                            "enum": [
                              "FabricRT",
                              "EventGrid",
                              "LocalBroker",
                              "Eventhub",
                              "CustomMqtt",
                              "CustomKafka"
                            ],
                            "x-ms-enum": {
                              "name": "DataflowEndpointHostType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "FabricRT",
                                  "value": "FabricRT",
                                  "description": "Fabric Real-Time Type"
                                },
                                {
                                  "name": "EventGrid",
                                  "value": "EventGrid",
                                  "description": "EventGrid Type"
                                },
                                {
                                  "name": "LocalBroker",
                                  "value": "LocalBroker",
                                  "description": "Local MQTT Type"
                                },
                                {
                                  "name": "Eventhub",
                                  "value": "Eventhub",
                                  "description": "EventHub Type"
                                },
                                {
                                  "name": "CustomMqtt",
                                  "value": "CustomMqtt",
                                  "description": "Custom MQTT Type"
                                },
                                {
                                  "name": "CustomKafka",
                                  "value": "CustomKafka",
                                  "description": "Custom Kafka Type"
                                }
                              ]
                            }
                          },
                          "dataExplorerSettings": {
                            "description": "Azure Data Explorer endpoint.",
                            "type": "object",
                            "properties": {
                              "authentication": {
                                "description": "Authentication configuration. NOTE - only authentication property is allowed per entry.",
                                "type": "object",
                                "properties": {
                                  "method": {
                                    "description": "Mode of Authentication.",
                                    "x-nullable": false,
                                    "type": "string",
                                    "enum": [
                                      "SystemAssignedManagedIdentity",
                                      "UserAssignedManagedIdentity"
                                    ],
                                    "x-ms-enum": {
                                      "name": "ManagedIdentityMethod",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "SystemAssignedManagedIdentity",
                                          "value": "SystemAssignedManagedIdentity",
                                          "description": "SystemAssignedManagedIdentity type"
                                        },
                                        {
                                          "name": "UserAssignedManagedIdentity",
                                          "value": "UserAssignedManagedIdentity",
                                          "description": "UserAssignedManagedIdentity type"
                                        }
                                      ]
                                    }
                                  },
                                  "systemAssignedManagedIdentitySettings": {
                                    "description": "System-assigned managed identity authentication.",
                                    "type": "object",
                                    "properties": {
                                      "audience": {
                                        "type": "string",
                                        "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
                                      }
                                    }
                                  },
                                  "userAssignedManagedIdentitySettings": {
                                    "description": "User-assigned managed identity authentication.",
                                    "type": "object",
                                    "properties": {
                                      "clientId": {
                                        "type": "string",
                                        "description": "Client ID for the user-assigned managed identity."
                                      },
                                      "scope": {
                                        "type": "string",
                                        "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
                                      },
                                      "tenantId": {
                                        "type": "string",
                                        "description": "Tenant ID."
                                      }
                                    },
                                    "required": [
                                      "clientId",
                                      "tenantId"
                                    ]
                                  }
                                },
                                "required": [
                                  "method"
                                ]
                              },
                              "database": {
                                "type": "string",
                                "description": "Database name."
                              },
                              "host": {
                                "type": "string",
                                "description": "Host of the Azure Data Explorer in the form of <cluster>.<region>.kusto.windows.net .",
                                "pattern": ".+\\..+\\.kusto\\.windows\\.net"
                              },
                              "batching": {
                                "description": "Azure Data Explorer endpoint batching configuration.",
                                "type": "object",
                                "properties": {
                                  "latencySeconds": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Batching latency in seconds.",
                                    "default": 60,
                                    "minimum": 0,
                                    "maximum": 65535
                                  },
                                  "maxMessages": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Maximum number of messages in a batch.",
                                    "default": 100000,
                                    "minimum": 0,
                                    "maximum": 4294967295
                                  }
                                }
                              }
                            },
                            "required": [
                              "authentication",
                              "database",
                              "host"
                            ]
                          },
                          "dataLakeStorageSettings": {
                            "description": "Azure Data Lake endpoint.",
                            "type": "object",
                            "properties": {
                              "authentication": {
                                "description": "Authentication configuration. NOTE - only authentication property is allowed per entry.",
                                "type": "object",
                                "properties": {
                                  "method": {
                                    "description": "Mode of Authentication.",
                                    "type": "string",
                                    "enum": [
                                      "SystemAssignedManagedIdentity",
                                      "UserAssignedManagedIdentity",
                                      "AccessToken"
                                    ],
                                    "x-ms-enum": {
                                      "name": "DataLakeStorageAuthMethod",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "SystemAssignedManagedIdentity",
                                          "value": "SystemAssignedManagedIdentity",
                                          "description": "SystemAssignedManagedIdentity type"
                                        },
                                        {
                                          "name": "UserAssignedManagedIdentity",
                                          "value": "UserAssignedManagedIdentity",
                                          "description": "UserAssignedManagedIdentity type"
                                        },
                                        {
                                          "name": "AccessToken",
                                          "value": "AccessToken",
                                          "description": "AccessToken Option"
                                        }
                                      ]
                                    }
                                  },
                                  "accessTokenSettings": {
                                    "description": "SAS token authentication.",
                                    "type": "object",
                                    "properties": {
                                      "secretRef": {
                                        "type": "string",
                                        "description": "Token secret name."
                                      }
                                    },
                                    "required": [
                                      "secretRef"
                                    ]
                                  },
                                  "systemAssignedManagedIdentitySettings": {
                                    "description": "System-assigned managed identity authentication.",
                                    "type": "object",
                                    "properties": {
                                      "audience": {
                                        "type": "string",
                                        "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
                                      }
                                    }
                                  },
                                  "userAssignedManagedIdentitySettings": {
                                    "description": "User-assigned managed identity authentication.",
                                    "type": "object",
                                    "properties": {
                                      "clientId": {
                                        "type": "string",
                                        "description": "Client ID for the user-assigned managed identity."
                                      },
                                      "scope": {
                                        "type": "string",
                                        "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
                                      },
                                      "tenantId": {
                                        "type": "string",
                                        "description": "Tenant ID."
                                      }
                                    },
                                    "required": [
                                      "clientId",
                                      "tenantId"
                                    ]
                                  }
                                },
                                "required": [
                                  "method"
                                ]
                              },
                              "host": {
                                "type": "string",
                                "description": "Host of the Azure Data Lake in the form of <account>.blob.core.windows.net .",
                                "pattern": ".+\\.blob\\.core\\.windows\\.net"
                              },
                              "batching": {
                                "description": "Azure Data Lake endpoint batching configuration.",
                                "type": "object",
                                "properties": {
                                  "latencySeconds": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Batching latency in seconds.",
                                    "default": 60,
                                    "minimum": 0,
                                    "maximum": 65535
                                  },
                                  "maxMessages": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Maximum number of messages in a batch.",
                                    "default": 100000,
                                    "minimum": 0,
                                    "maximum": 4294967295
                                  }
                                }
                              }
                            },
                            "required": [
                              "authentication",
                              "host"
                            ]
                          },
                          "fabricOneLakeSettings": {
                            "description": "Microsoft Fabric endpoint.",
                            "type": "object",
                            "properties": {
                              "authentication": {
                                "description": "Authentication configuration. NOTE - only one authentication property is allowed per entry.",
                                "type": "object",
                                "properties": {
                                  "method": {
                                    "description": "Mode of Authentication.",
                                    "x-nullable": false,
                                    "type": "string",
                                    "enum": [
                                      "SystemAssignedManagedIdentity",
                                      "UserAssignedManagedIdentity"
                                    ],
                                    "x-ms-enum": {
                                      "name": "ManagedIdentityMethod",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "SystemAssignedManagedIdentity",
                                          "value": "SystemAssignedManagedIdentity",
                                          "description": "SystemAssignedManagedIdentity type"
                                        },
                                        {
                                          "name": "UserAssignedManagedIdentity",
                                          "value": "UserAssignedManagedIdentity",
                                          "description": "UserAssignedManagedIdentity type"
                                        }
                                      ]
                                    }
                                  },
                                  "systemAssignedManagedIdentitySettings": {
                                    "description": "System-assigned managed identity authentication.",
                                    "type": "object",
                                    "properties": {
                                      "audience": {
                                        "type": "string",
                                        "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
                                      }
                                    }
                                  },
                                  "userAssignedManagedIdentitySettings": {
                                    "description": "User-assigned managed identity authentication.",
                                    "type": "object",
                                    "properties": {
                                      "clientId": {
                                        "type": "string",
                                        "description": "Client ID for the user-assigned managed identity."
                                      },
                                      "scope": {
                                        "type": "string",
                                        "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
                                      },
                                      "tenantId": {
                                        "type": "string",
                                        "description": "Tenant ID."
                                      }
                                    },
                                    "required": [
                                      "clientId",
                                      "tenantId"
                                    ]
                                  }
                                },
                                "required": [
                                  "method"
                                ]
                              },
                              "names": {
                                "description": "Names of the workspace and lakehouse.",
                                "type": "object",
                                "properties": {
                                  "lakehouseName": {
                                    "type": "string",
                                    "description": "Lakehouse name."
                                  },
                                  "workspaceName": {
                                    "type": "string",
                                    "description": "Workspace name."
                                  }
                                },
                                "required": [
                                  "lakehouseName",
                                  "workspaceName"
                                ]
                              },
                              "oneLakePathType": {
                                "description": "Type of location of the data in the workspace. Can be either tables or files.",
                                "type": "string",
                                "enum": [
                                  "Files",
                                  "Tables"
                                ],
                                "x-ms-enum": {
                                  "name": "DataflowEndpointFabricPathType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Files",
                                      "value": "Files",
                                      "description": "FILES Type"
                                    },
                                    {
                                      "name": "Tables",
                                      "value": "Tables",
                                      "description": "TABLES Type"
                                    }
                                  ]
                                }
                              },
                              "host": {
                                "type": "string",
                                "description": "Host of the Microsoft Fabric in the form of https://<host>.fabric.microsoft.com.",
                                "pattern": ".+\\.fabric\\.microsoft\\.com"
                              },
                              "batching": {
                                "description": "Batching configuration.",
                                "type": "object",
                                "properties": {
                                  "latencySeconds": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Batching latency in seconds.",
                                    "default": 60,
                                    "minimum": 0,
                                    "maximum": 65535
                                  },
                                  "maxMessages": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Maximum number of messages in a batch.",
                                    "default": 100000,
                                    "minimum": 0,
                                    "maximum": 4294967295
                                  }
                                }
                              }
                            },
                            "required": [
                              "authentication",
                              "names",
                              "oneLakePathType",
                              "host"
                            ]
                          },
                          "kafkaSettings": {
                            "description": "Kafka endpoint.",
                            "type": "object",
                            "properties": {
                              "authentication": {
                                "description": "Authentication configuration. NOTE - only authentication property is allowed per entry.",
                                "type": "object",
                                "properties": {
                                  "method": {
                                    "description": "Mode of Authentication.",
                                    "type": "string",
                                    "enum": [
                                      "SystemAssignedManagedIdentity",
                                      "UserAssignedManagedIdentity",
                                      "Sasl",
                                      "X509Certificate",
                                      "Anonymous"
                                    ],
                                    "x-ms-enum": {
                                      "name": "KafkaAuthMethod",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "SystemAssignedManagedIdentity",
                                          "value": "SystemAssignedManagedIdentity",
                                          "description": "SystemAssignedManagedIdentity type"
                                        },
                                        {
                                          "name": "UserAssignedManagedIdentity",
                                          "value": "UserAssignedManagedIdentity",
                                          "description": "UserAssignedManagedIdentity type"
                                        },
                                        {
                                          "name": "Sasl",
                                          "value": "Sasl",
                                          "description": "Sasl Option"
                                        },
                                        {
                                          "name": "X509Certificate",
                                          "value": "X509Certificate",
                                          "description": "x509Certificate Option"
                                        },
                                        {
                                          "name": "Anonymous",
                                          "value": "Anonymous",
                                          "description": "Anonymous Option"
                                        }
                                      ]
                                    }
                                  },
                                  "systemAssignedManagedIdentitySettings": {
                                    "description": "System-assigned managed identity authentication.",
                                    "type": "object",
                                    "properties": {
                                      "audience": {
                                        "type": "string",
                                        "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
                                      }
                                    }
                                  },
                                  "userAssignedManagedIdentitySettings": {
                                    "description": "User-assigned managed identity authentication.",
                                    "type": "object",
                                    "properties": {
                                      "clientId": {
                                        "type": "string",
                                        "description": "Client ID for the user-assigned managed identity."
                                      },
                                      "scope": {
                                        "type": "string",
                                        "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
                                      },
                                      "tenantId": {
                                        "type": "string",
                                        "description": "Tenant ID."
                                      }
                                    },
                                    "required": [
                                      "clientId",
                                      "tenantId"
                                    ]
                                  },
                                  "saslSettings": {
                                    "description": "SASL authentication.",
                                    "type": "object",
                                    "properties": {
                                      "saslType": {
                                        "description": "Type of SASL authentication. Can be PLAIN, SCRAM-SHA-256, or SCRAM-SHA-512.",
                                        "type": "string",
                                        "enum": [
                                          "Plain",
                                          "ScramSha256",
                                          "ScramSha512"
                                        ],
                                        "x-ms-enum": {
                                          "name": "DataflowEndpointAuthenticationSaslType",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "Plain",
                                              "value": "Plain",
                                              "description": "PLAIN Type"
                                            },
                                            {
                                              "name": "ScramSha256",
                                              "value": "ScramSha256",
                                              "description": "SCRAM_SHA_256 Type"
                                            },
                                            {
                                              "name": "ScramSha512",
                                              "value": "ScramSha512",
                                              "description": "SCRAM_SHA_512 Type"
                                            }
                                          ]
                                        }
                                      },
                                      "secretRef": {
                                        "type": "string",
                                        "description": "Token secret name."
                                      }
                                    },
                                    "required": [
                                      "saslType",
                                      "secretRef"
                                    ]
                                  },
                                  "x509CertificateSettings": {
                                    "description": "X.509 certificate authentication.",
                                    "type": "object",
                                    "properties": {
                                      "secretRef": {
                                        "type": "string",
                                        "description": "Secret reference of the X.509 certificate."
                                      }
                                    },
                                    "required": [
                                      "secretRef"
                                    ]
                                  }
                                },
                                "required": [
                                  "method"
                                ]
                              },
                              "consumerGroupId": {
                                "type": "string",
                                "description": "Consumer group ID."
                              },
                              "host": {
                                "type": "string",
                                "description": "Kafka endpoint host."
                              },
                              "batching": {
                                "description": "Batching configuration.",
                                "type": "object",
                                "properties": {
                                  "mode": {
                                    "type": "string",
                                    "description": "Mode for batching.",
                                    "default": "Enabled",
                                    "enum": [
                                      "Enabled",
                                      "Disabled"
                                    ],
                                    "x-ms-enum": {
                                      "name": "OperationalMode",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Enabled",
                                          "value": "Enabled",
                                          "description": "Enabled is equivalent to True"
                                        },
                                        {
                                          "name": "Disabled",
                                          "value": "Disabled",
                                          "description": "Disabled is equivalent to False."
                                        }
                                      ]
                                    }
                                  },
                                  "latencyMs": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Batching latency in milliseconds.",
                                    "default": 5,
                                    "minimum": 0,
                                    "maximum": 65535
                                  },
                                  "maxBytes": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Maximum number of bytes in a batch.",
                                    "default": 1000000,
                                    "minimum": 0,
                                    "maximum": 4294967295
                                  },
                                  "maxMessages": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Maximum number of messages in a batch.",
                                    "default": 100000,
                                    "minimum": 0,
                                    "maximum": 4294967295
                                  }
                                }
                              },
                              "copyMqttProperties": {
                                "type": "string",
                                "description": "Copy Broker properties. No effect if the endpoint is used as a source or if the dataflow doesn't have an Broker source.",
                                "default": "Enabled",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "OperationalMode",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled",
                                      "description": "Enabled is equivalent to True"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled",
                                      "description": "Disabled is equivalent to False."
                                    }
                                  ]
                                }
                              },
                              "compression": {
                                "type": "string",
                                "description": "Compression. Can be none, gzip, lz4, or snappy. No effect if the endpoint is used as a source.",
                                "default": "None",
                                "enum": [
                                  "None",
                                  "Gzip",
                                  "Snappy",
                                  "Lz4"
                                ],
                                "x-ms-enum": {
                                  "name": "DataflowEndpointKafkaCompression",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "None",
                                      "value": "None",
                                      "description": "NONE Option"
                                    },
                                    {
                                      "name": "Gzip",
                                      "value": "Gzip",
                                      "description": "Gzip Option"
                                    },
                                    {
                                      "name": "Snappy",
                                      "value": "Snappy",
                                      "description": "SNAPPY Option"
                                    },
                                    {
                                      "name": "Lz4",
                                      "value": "Lz4",
                                      "description": "LZ4 Option"
                                    }
                                  ]
                                }
                              },
                              "kafkaAcks": {
                                "type": "string",
                                "description": "Kafka acks. Can be all, one, or zero. No effect if the endpoint is used as a source.",
                                "default": "All",
                                "enum": [
                                  "Zero",
                                  "One",
                                  "All"
                                ],
                                "x-ms-enum": {
                                  "name": "DataflowEndpointKafkaAcks",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Zero",
                                      "value": "Zero",
                                      "description": "ZERO Option"
                                    },
                                    {
                                      "name": "One",
                                      "value": "One",
                                      "description": "ONE Option"
                                    },
                                    {
                                      "name": "All",
                                      "value": "All",
                                      "description": "ALL Option"
                                    }
                                  ]
                                }
                              },
                              "partitionStrategy": {
                                "type": "string",
                                "description": "Partition handling strategy. Can be default or static. No effect if the endpoint is used as a source.",
                                "default": "Default",
                                "enum": [
                                  "Default",
                                  "Static",
                                  "Topic",
                                  "Property"
                                ],
                                "x-ms-enum": {
                                  "name": "DataflowEndpointKafkaPartitionStrategy",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Default",
                                      "value": "Default",
                                      "description": "Default: Assigns messages to random partitions, using a round-robin algorithm."
                                    },
                                    {
                                      "name": "Static",
                                      "value": "Static",
                                      "description": "Static: Assigns messages to a fixed partition number that's derived from the instance ID of the dataflow."
                                    },
                                    {
                                      "name": "Topic",
                                      "value": "Topic",
                                      "description": "TOPIC Option"
                                    },
                                    {
                                      "name": "Property",
                                      "value": "Property",
                                      "description": "PROPERTY Option"
                                    }
                                  ]
                                }
                              },
                              "tls": {
                                "description": "TLS configuration.",
                                "type": "object",
                                "properties": {
                                  "mode": {
                                    "type": "string",
                                    "description": "Mode for TLS.",
                                    "default": "Enabled",
                                    "enum": [
                                      "Enabled",
                                      "Disabled"
                                    ],
                                    "x-ms-enum": {
                                      "name": "OperationalMode",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Enabled",
                                          "value": "Enabled",
                                          "description": "Enabled is equivalent to True"
                                        },
                                        {
                                          "name": "Disabled",
                                          "value": "Disabled",
                                          "description": "Disabled is equivalent to False."
                                        }
                                      ]
                                    }
                                  },
                                  "trustedCaCertificateConfigMapRef": {
                                    "type": "string",
                                    "description": "Trusted CA certificate config map."
                                  }
                                }
                              },
                              "cloudEventAttributes": {
                                "description": "Cloud event mapping config.",
                                "type": "string",
                                "enum": [
                                  "Propagate",
                                  "CreateOrRemap"
                                ],
                                "x-ms-enum": {
                                  "name": "CloudEventAttributeType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Propagate",
                                      "value": "Propagate",
                                      "description": "Propagate type"
                                    },
                                    {
                                      "name": "CreateOrRemap",
                                      "value": "CreateOrRemap",
                                      "description": "CreateOrRemap type"
                                    }
                                  ]
                                }
                              }
                            },
                            "required": [
                              "authentication",
                              "host"
                            ]
                          },
                          "localStorageSettings": {
                            "description": "Local persistent volume endpoint.",
                            "type": "object",
                            "properties": {
                              "persistentVolumeClaimRef": {
                                "type": "string",
                                "description": "Persistent volume claim name."
                              }
                            },
                            "required": [
                              "persistentVolumeClaimRef"
                            ]
                          },
                          "mqttSettings": {
                            "description": "Broker endpoint.",
                            "type": "object",
                            "properties": {
                              "authentication": {
                                "description": "authentication properties. DEFAULT: kubernetes.audience=aio-internal. NOTE - Enum field only property is allowed",
                                "type": "object",
                                "properties": {
                                  "method": {
                                    "description": "Mode of Authentication.",
                                    "type": "string",
                                    "enum": [
                                      "SystemAssignedManagedIdentity",
                                      "UserAssignedManagedIdentity",
                                      "ServiceAccountToken",
                                      "X509Certificate",
                                      "Anonymous"
                                    ],
                                    "x-ms-enum": {
                                      "name": "MqttAuthMethod",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "SystemAssignedManagedIdentity",
                                          "value": "SystemAssignedManagedIdentity",
                                          "description": "SystemAssignedManagedIdentity type"
                                        },
                                        {
                                          "name": "UserAssignedManagedIdentity",
                                          "value": "UserAssignedManagedIdentity",
                                          "description": "UserAssignedManagedIdentity type"
                                        },
                                        {
                                          "name": "ServiceAccountToken",
                                          "value": "ServiceAccountToken",
                                          "description": "ServiceAccountToken Option"
                                        },
                                        {
                                          "name": "X509Certificate",
                                          "value": "X509Certificate",
                                          "description": "x509Certificate Option"
                                        },
                                        {
                                          "name": "Anonymous",
                                          "value": "Anonymous",
                                          "description": "Anonymous Option"
                                        }
                                      ]
                                    }
                                  },
                                  "systemAssignedManagedIdentitySettings": {
                                    "description": "System-assigned managed identity authentication.",
                                    "type": "object",
                                    "properties": {
                                      "audience": {
                                        "type": "string",
                                        "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
                                      }
                                    }
                                  },
                                  "userAssignedManagedIdentitySettings": {
                                    "description": "User-assigned managed identity authentication.",
                                    "type": "object",
                                    "properties": {
                                      "clientId": {
                                        "type": "string",
                                        "description": "Client ID for the user-assigned managed identity."
                                      },
                                      "scope": {
                                        "type": "string",
                                        "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
                                      },
                                      "tenantId": {
                                        "type": "string",
                                        "description": "Tenant ID."
                                      }
                                    },
                                    "required": [
                                      "clientId",
                                      "tenantId"
                                    ]
                                  },
                                  "serviceAccountTokenSettings": {
                                    "description": "Kubernetes service account token authentication. Default audience if not set is aio-internal",
                                    "type": "object",
                                    "properties": {
                                      "audience": {
                                        "type": "string",
                                        "description": "Audience of the service account. Optional, defaults to the broker internal service account audience."
                                      }
                                    },
                                    "required": [
                                      "audience"
                                    ]
                                  },
                                  "x509CertificateSettings": {
                                    "description": "X.509 certificate authentication.",
                                    "type": "object",
                                    "properties": {
                                      "secretRef": {
                                        "type": "string",
                                        "description": "Secret reference of the X.509 certificate."
                                      }
                                    },
                                    "required": [
                                      "secretRef"
                                    ]
                                  }
                                },
                                "required": [
                                  "method"
                                ]
                              },
                              "clientIdPrefix": {
                                "type": "string",
                                "description": "Client ID prefix. Client ID generated by the dataflow is <prefix>-TBD. Optional; no prefix if omitted."
                              },
                              "host": {
                                "type": "string",
                                "description": "Host of the Broker in the form of <hostname>:<port>. Optional; connects to Broker if omitted."
                              },
                              "protocol": {
                                "type": "string",
                                "description": "Enable or disable websockets.",
                                "default": "Mqtt",
                                "enum": [
                                  "Mqtt",
                                  "WebSockets"
                                ],
                                "x-ms-enum": {
                                  "name": "BrokerProtocolType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Mqtt",
                                      "value": "Mqtt",
                                      "description": "protocol broker"
                                    },
                                    {
                                      "name": "WebSockets",
                                      "value": "WebSockets",
                                      "description": "protocol websocket"
                                    }
                                  ]
                                }
                              },
                              "keepAliveSeconds": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Broker KeepAlive for connection in seconds.",
                                "default": 60,
                                "minimum": 0
                              },
                              "retain": {
                                "type": "string",
                                "description": "Whether or not to keep the retain setting.",
                                "default": "Keep",
                                "enum": [
                                  "Keep",
                                  "Never"
                                ],
                                "x-ms-enum": {
                                  "name": "MqttRetainType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Keep",
                                      "value": "Keep",
                                      "description": "Retain the messages."
                                    },
                                    {
                                      "name": "Never",
                                      "value": "Never",
                                      "description": "Never retain messages."
                                    }
                                  ]
                                }
                              },
                              "maxInflightMessages": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The max number of messages to keep in flight. For subscribe, this is the receive maximum. For publish, this is the maximum number of messages to send before waiting for an ack.",
                                "default": 100,
                                "minimum": 0
                              },
                              "qos": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Qos for Broker connection.",
                                "default": 1,
                                "minimum": 0,
                                "maximum": 1
                              },
                              "sessionExpirySeconds": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Session expiry in seconds.",
                                "minimum": 0
                              },
                              "tls": {
                                "description": "TLS configuration.",
                                "type": "object",
                                "properties": {
                                  "mode": {
                                    "type": "string",
                                    "description": "Mode for TLS.",
                                    "default": "Enabled",
                                    "enum": [
                                      "Enabled",
                                      "Disabled"
                                    ],
                                    "x-ms-enum": {
                                      "name": "OperationalMode",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Enabled",
                                          "value": "Enabled",
                                          "description": "Enabled is equivalent to True"
                                        },
                                        {
                                          "name": "Disabled",
                                          "value": "Disabled",
                                          "description": "Disabled is equivalent to False."
                                        }
                                      ]
                                    }
                                  },
                                  "trustedCaCertificateConfigMapRef": {
                                    "type": "string",
                                    "description": "Trusted CA certificate config map."
                                  }
                                }
                              },
                              "cloudEventAttributes": {
                                "description": "Cloud event mapping config.",
                                "type": "string",
                                "enum": [
                                  "Propagate",
                                  "CreateOrRemap"
                                ],
                                "x-ms-enum": {
                                  "name": "CloudEventAttributeType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Propagate",
                                      "value": "Propagate",
                                      "description": "Propagate type"
                                    },
                                    {
                                      "name": "CreateOrRemap",
                                      "value": "CreateOrRemap",
                                      "description": "CreateOrRemap type"
                                    }
                                  ]
                                }
                              }
                            },
                            "required": [
                              "authentication"
                            ]
                          },
                          "openTelemetrySettings": {
                            "description": "OpenTelemetry endpoint.",
                            "type": "object",
                            "properties": {
                              "host": {
                                "type": "string",
                                "description": "Host of the OpenTelemetry in the form of <host>:<port>."
                              },
                              "batching": {
                                "description": "Batching configuration.",
                                "type": "object",
                                "properties": {
                                  "latencySeconds": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Batching latency in seconds.",
                                    "default": 60,
                                    "minimum": 0,
                                    "maximum": 65535
                                  },
                                  "maxMessages": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Maximum number of messages in a batch.",
                                    "default": 100000,
                                    "minimum": 0,
                                    "maximum": 4294967295
                                  }
                                }
                              },
                              "tls": {
                                "description": "TLS configuration.",
                                "type": "object",
                                "properties": {
                                  "mode": {
                                    "type": "string",
                                    "description": "Mode for TLS.",
                                    "default": "Enabled",
                                    "enum": [
                                      "Enabled",
                                      "Disabled"
                                    ],
                                    "x-ms-enum": {
                                      "name": "OperationalMode",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Enabled",
                                          "value": "Enabled",
                                          "description": "Enabled is equivalent to True"
                                        },
                                        {
                                          "name": "Disabled",
                                          "value": "Disabled",
                                          "description": "Disabled is equivalent to False."
                                        }
                                      ]
                                    }
                                  },
                                  "trustedCaCertificateConfigMapRef": {
                                    "type": "string",
                                    "description": "Trusted CA certificate config map."
                                  }
                                }
                              },
                              "authentication": {
                                "description": "Authentication properties for OpenTelemetry endpoints",
                                "type": "object",
                                "properties": {
                                  "method": {
                                    "description": "The authentication method.",
                                    "type": "string",
                                    "enum": [
                                      "ServiceAccountToken",
                                      "X509Certificate",
                                      "Anonymous"
                                    ],
                                    "x-ms-enum": {
                                      "name": "DataflowOpenTelemetryAuthenticationMethod",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "ServiceAccountToken",
                                          "value": "ServiceAccountToken",
                                          "description": "Uses serviceaccount token."
                                        },
                                        {
                                          "name": "X509Certificate",
                                          "value": "X509Certificate",
                                          "description": "Uses x509 certificate."
                                        },
                                        {
                                          "name": "Anonymous",
                                          "value": "Anonymous",
                                          "description": "Connects anonymously."
                                        }
                                      ]
                                    }
                                  }
                                },
                                "discriminator": "method",
                                "required": [
                                  "method"
                                ]
                              }
                            },
                            "required": [
                              "host",
                              "authentication"
                            ]
                          },
                          "provisioningState": {
                            "description": "The status of the last operation.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "Resource is getting provisioned."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "Resource is Updating."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Resource is Deleting."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "Resource has been Accepted."
                                }
                              ]
                            }
                          },
                          "healthState": {
                            "type": "string",
                            "description": "The health state of the resource.",
                            "default": "Unknown",
                            "enum": [
                              "Available",
                              "Degraded",
                              "Unavailable",
                              "Unknown"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceHealthState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Available",
                                  "value": "Available",
                                  "description": "Resource is Available and functioning as expected."
                                },
                                {
                                  "name": "Degraded",
                                  "value": "Degraded",
                                  "description": "Resource health is degraded."
                                },
                                {
                                  "name": "Unavailable",
                                  "value": "Unavailable",
                                  "description": "Resource is not functioning as expected."
                                },
                                {
                                  "name": "Unknown",
                                  "value": "Unknown",
                                  "description": "Resource state is unknown."
                                }
                              ]
                            },
                            "readOnly": true
                          }
                        },
                        "required": [
                          "endpointType"
                        ]
                      },
                      "extendedLocation": {
                        "description": "Edge location of the resource.",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the extended location."
                          },
                          "type": {
                            "description": "Type of ExtendedLocation.",
                            "type": "string",
                            "enum": [
                              "CustomLocation"
                            ],
                            "x-ms-enum": {
                              "name": "ExtendedLocationType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "CustomLocation",
                                  "value": "CustomLocation",
                                  "description": "CustomLocation type"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "name",
                          "type"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperations/instances/{instanceName}/dataflowEndpoints/{dataflowEndpointName}": {
      "get": {
        "operationId": "DataflowEndpoint_Get",
        "tags": [
          "DataflowEndpoint"
        ],
        "description": "Get a DataflowEndpointResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "dataflowEndpointName",
            "in": "path",
            "description": "Name of Instance dataflowEndpoint resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Instance dataflowEndpoint resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "endpointType": {
                      "description": "Endpoint Type.",
                      "type": "string",
                      "enum": [
                        "DataExplorer",
                        "DataLakeStorage",
                        "FabricOneLake",
                        "Kafka",
                        "LocalStorage",
                        "Mqtt",
                        "OpenTelemetry"
                      ],
                      "x-ms-enum": {
                        "name": "EndpointType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "DataExplorer",
                            "value": "DataExplorer",
                            "description": "Azure Data Explorer Type"
                          },
                          {
                            "name": "DataLakeStorage",
                            "value": "DataLakeStorage",
                            "description": "Azure Data Lake Type"
                          },
                          {
                            "name": "FabricOneLake",
                            "value": "FabricOneLake",
                            "description": "Microsoft Fabric Type"
                          },
                          {
                            "name": "Kafka",
                            "value": "Kafka",
                            "description": "Kafka Type"
                          },
                          {
                            "name": "LocalStorage",
                            "value": "LocalStorage",
                            "description": "Local Storage Type"
                          },
                          {
                            "name": "Mqtt",
                            "value": "Mqtt",
                            "description": "Broker Type"
                          },
                          {
                            "name": "OpenTelemetry",
                            "value": "OpenTelemetry",
                            "description": "OpenTelemetry Type"
                          }
                        ]
                      }
                    },
                    "hostType": {
                      "description": "The type of the Kafka host. E.g FabricRT, EventGrid.",
                      "type": "string",
                      "enum": [
                        "FabricRT",
                        "EventGrid",
                        "LocalBroker",
                        "Eventhub",
                        "CustomMqtt",
                        "CustomKafka"
                      ],
                      "x-ms-enum": {
                        "name": "DataflowEndpointHostType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "FabricRT",
                            "value": "FabricRT",
                            "description": "Fabric Real-Time Type"
                          },
                          {
                            "name": "EventGrid",
                            "value": "EventGrid",
                            "description": "EventGrid Type"
                          },
                          {
                            "name": "LocalBroker",
                            "value": "LocalBroker",
                            "description": "Local MQTT Type"
                          },
                          {
                            "name": "Eventhub",
                            "value": "Eventhub",
                            "description": "EventHub Type"
                          },
                          {
                            "name": "CustomMqtt",
                            "value": "CustomMqtt",
                            "description": "Custom MQTT Type"
                          },
                          {
                            "name": "CustomKafka",
                            "value": "CustomKafka",
                            "description": "Custom Kafka Type"
                          }
                        ]
                      }
                    },
                    "dataExplorerSettings": {
                      "description": "Azure Data Explorer endpoint.",
                      "type": "object",
                      "properties": {
                        "authentication": {
                          "description": "Authentication configuration. NOTE - only authentication property is allowed per entry.",
                          "type": "object",
                          "properties": {
                            "method": {
                              "description": "Mode of Authentication.",
                              "x-nullable": false,
                              "type": "string",
                              "enum": [
                                "SystemAssignedManagedIdentity",
                                "UserAssignedManagedIdentity"
                              ],
                              "x-ms-enum": {
                                "name": "ManagedIdentityMethod",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "SystemAssignedManagedIdentity",
                                    "value": "SystemAssignedManagedIdentity",
                                    "description": "SystemAssignedManagedIdentity type"
                                  },
                                  {
                                    "name": "UserAssignedManagedIdentity",
                                    "value": "UserAssignedManagedIdentity",
                                    "description": "UserAssignedManagedIdentity type"
                                  }
                                ]
                              }
                            },
                            "systemAssignedManagedIdentitySettings": {
                              "description": "System-assigned managed identity authentication.",
                              "type": "object",
                              "properties": {
                                "audience": {
                                  "type": "string",
                                  "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
                                }
                              }
                            },
                            "userAssignedManagedIdentitySettings": {
                              "description": "User-assigned managed identity authentication.",
                              "type": "object",
                              "properties": {
                                "clientId": {
                                  "type": "string",
                                  "description": "Client ID for the user-assigned managed identity."
                                },
                                "scope": {
                                  "type": "string",
                                  "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
                                },
                                "tenantId": {
                                  "type": "string",
                                  "description": "Tenant ID."
                                }
                              },
                              "required": [
                                "clientId",
                                "tenantId"
                              ]
                            }
                          },
                          "required": [
                            "method"
                          ]
                        },
                        "database": {
                          "type": "string",
                          "description": "Database name."
                        },
                        "host": {
                          "type": "string",
                          "description": "Host of the Azure Data Explorer in the form of <cluster>.<region>.kusto.windows.net .",
                          "pattern": ".+\\..+\\.kusto\\.windows\\.net"
                        },
                        "batching": {
                          "description": "Azure Data Explorer endpoint batching configuration.",
                          "type": "object",
                          "properties": {
                            "latencySeconds": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Batching latency in seconds.",
                              "default": 60,
                              "minimum": 0,
                              "maximum": 65535
                            },
                            "maxMessages": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Maximum number of messages in a batch.",
                              "default": 100000,
                              "minimum": 0,
                              "maximum": 4294967295
                            }
                          }
                        }
                      },
                      "required": [
                        "authentication",
                        "database",
                        "host"
                      ]
                    },
                    "dataLakeStorageSettings": {
                      "description": "Azure Data Lake endpoint.",
                      "type": "object",
                      "properties": {
                        "authentication": {
                          "description": "Authentication configuration. NOTE - only authentication property is allowed per entry.",
                          "type": "object",
                          "properties": {
                            "method": {
                              "description": "Mode of Authentication.",
                              "type": "string",
                              "enum": [
                                "SystemAssignedManagedIdentity",
                                "UserAssignedManagedIdentity",
                                "AccessToken"
                              ],
                              "x-ms-enum": {
                                "name": "DataLakeStorageAuthMethod",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "SystemAssignedManagedIdentity",
                                    "value": "SystemAssignedManagedIdentity",
                                    "description": "SystemAssignedManagedIdentity type"
                                  },
                                  {
                                    "name": "UserAssignedManagedIdentity",
                                    "value": "UserAssignedManagedIdentity",
                                    "description": "UserAssignedManagedIdentity type"
                                  },
                                  {
                                    "name": "AccessToken",
                                    "value": "AccessToken",
                                    "description": "AccessToken Option"
                                  }
                                ]
                              }
                            },
                            "accessTokenSettings": {
                              "description": "SAS token authentication.",
                              "type": "object",
                              "properties": {
                                "secretRef": {
                                  "type": "string",
                                  "description": "Token secret name."
                                }
                              },
                              "required": [
                                "secretRef"
                              ]
                            },
                            "systemAssignedManagedIdentitySettings": {
                              "description": "System-assigned managed identity authentication.",
                              "type": "object",
                              "properties": {
                                "audience": {
                                  "type": "string",
                                  "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
                                }
                              }
                            },
                            "userAssignedManagedIdentitySettings": {
                              "description": "User-assigned managed identity authentication.",
                              "type": "object",
                              "properties": {
                                "clientId": {
                                  "type": "string",
                                  "description": "Client ID for the user-assigned managed identity."
                                },
                                "scope": {
                                  "type": "string",
                                  "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
                                },
                                "tenantId": {
                                  "type": "string",
                                  "description": "Tenant ID."
                                }
                              },
                              "required": [
                                "clientId",
                                "tenantId"
                              ]
                            }
                          },
                          "required": [
                            "method"
                          ]
                        },
                        "host": {
                          "type": "string",
                          "description": "Host of the Azure Data Lake in the form of <account>.blob.core.windows.net .",
                          "pattern": ".+\\.blob\\.core\\.windows\\.net"
                        },
                        "batching": {
                          "description": "Azure Data Lake endpoint batching configuration.",
                          "type": "object",
                          "properties": {
                            "latencySeconds": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Batching latency in seconds.",
                              "default": 60,
                              "minimum": 0,
                              "maximum": 65535
                            },
                            "maxMessages": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Maximum number of messages in a batch.",
                              "default": 100000,
                              "minimum": 0,
                              "maximum": 4294967295
                            }
                          }
                        }
                      },
                      "required": [
                        "authentication",
                        "host"
                      ]
                    },
                    "fabricOneLakeSettings": {
                      "description": "Microsoft Fabric endpoint.",
                      "type": "object",
                      "properties": {
                        "authentication": {
                          "description": "Authentication configuration. NOTE - only one authentication property is allowed per entry.",
                          "type": "object",
                          "properties": {
                            "method": {
                              "description": "Mode of Authentication.",
                              "x-nullable": false,
                              "type": "string",
                              "enum": [
                                "SystemAssignedManagedIdentity",
                                "UserAssignedManagedIdentity"
                              ],
                              "x-ms-enum": {
                                "name": "ManagedIdentityMethod",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "SystemAssignedManagedIdentity",
                                    "value": "SystemAssignedManagedIdentity",
                                    "description": "SystemAssignedManagedIdentity type"
                                  },
                                  {
                                    "name": "UserAssignedManagedIdentity",
                                    "value": "UserAssignedManagedIdentity",
                                    "description": "UserAssignedManagedIdentity type"
                                  }
                                ]
                              }
                            },
                            "systemAssignedManagedIdentitySettings": {
                              "description": "System-assigned managed identity authentication.",
                              "type": "object",
                              "properties": {
                                "audience": {
                                  "type": "string",
                                  "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
                                }
                              }
                            },
                            "userAssignedManagedIdentitySettings": {
                              "description": "User-assigned managed identity authentication.",
                              "type": "object",
                              "properties": {
                                "clientId": {
                                  "type": "string",
                                  "description": "Client ID for the user-assigned managed identity."
                                },
                                "scope": {
                                  "type": "string",
                                  "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
                                },
                                "tenantId": {
                                  "type": "string",
                                  "description": "Tenant ID."
                                }
                              },
                              "required": [
                                "clientId",
                                "tenantId"
                              ]
                            }
                          },
                          "required": [
                            "method"
                          ]
                        },
                        "names": {
                          "description": "Names of the workspace and lakehouse.",
                          "type": "object",
                          "properties": {
                            "lakehouseName": {
                              "type": "string",
                              "description": "Lakehouse name."
                            },
                            "workspaceName": {
                              "type": "string",
                              "description": "Workspace name."
                            }
                          },
                          "required": [
                            "lakehouseName",
                            "workspaceName"
                          ]
                        },
                        "oneLakePathType": {
                          "description": "Type of location of the data in the workspace. Can be either tables or files.",
                          "type": "string",
                          "enum": [
                            "Files",
                            "Tables"
                          ],
                          "x-ms-enum": {
                            "name": "DataflowEndpointFabricPathType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Files",
                                "value": "Files",
                                "description": "FILES Type"
                              },
                              {
                                "name": "Tables",
                                "value": "Tables",
                                "description": "TABLES Type"
                              }
                            ]
                          }
                        },
                        "host": {
                          "type": "string",
                          "description": "Host of the Microsoft Fabric in the form of https://<host>.fabric.microsoft.com.",
                          "pattern": ".+\\.fabric\\.microsoft\\.com"
                        },
                        "batching": {
                          "description": "Batching configuration.",
                          "type": "object",
                          "properties": {
                            "latencySeconds": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Batching latency in seconds.",
                              "default": 60,
                              "minimum": 0,
                              "maximum": 65535
                            },
                            "maxMessages": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Maximum number of messages in a batch.",
                              "default": 100000,
                              "minimum": 0,
                              "maximum": 4294967295
                            }
                          }
                        }
                      },
                      "required": [
                        "authentication",
                        "names",
                        "oneLakePathType",
                        "host"
                      ]
                    },
                    "kafkaSettings": {
                      "description": "Kafka endpoint.",
                      "type": "object",
                      "properties": {
                        "authentication": {
                          "description": "Authentication configuration. NOTE - only authentication property is allowed per entry.",
                          "type": "object",
                          "properties": {
                            "method": {
                              "description": "Mode of Authentication.",
                              "type": "string",
                              "enum": [
                                "SystemAssignedManagedIdentity",
                                "UserAssignedManagedIdentity",
                                "Sasl",
                                "X509Certificate",
                                "Anonymous"
                              ],
                              "x-ms-enum": {
                                "name": "KafkaAuthMethod",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "SystemAssignedManagedIdentity",
                                    "value": "SystemAssignedManagedIdentity",
                                    "description": "SystemAssignedManagedIdentity type"
                                  },
                                  {
                                    "name": "UserAssignedManagedIdentity",
                                    "value": "UserAssignedManagedIdentity",
                                    "description": "UserAssignedManagedIdentity type"
                                  },
                                  {
                                    "name": "Sasl",
                                    "value": "Sasl",
                                    "description": "Sasl Option"
                                  },
                                  {
                                    "name": "X509Certificate",
                                    "value": "X509Certificate",
                                    "description": "x509Certificate Option"
                                  },
                                  {
                                    "name": "Anonymous",
                                    "value": "Anonymous",
                                    "description": "Anonymous Option"
                                  }
                                ]
                              }
                            },
                            "systemAssignedManagedIdentitySettings": {
                              "description": "System-assigned managed identity authentication.",
                              "type": "object",
                              "properties": {
                                "audience": {
                                  "type": "string",
                                  "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
                                }
                              }
                            },
                            "userAssignedManagedIdentitySettings": {
                              "description": "User-assigned managed identity authentication.",
                              "type": "object",
                              "properties": {
                                "clientId": {
                                  "type": "string",
                                  "description": "Client ID for the user-assigned managed identity."
                                },
                                "scope": {
                                  "type": "string",
                                  "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
                                },
                                "tenantId": {
                                  "type": "string",
                                  "description": "Tenant ID."
                                }
                              },
                              "required": [
                                "clientId",
                                "tenantId"
                              ]
                            },
                            "saslSettings": {
                              "description": "SASL authentication.",
                              "type": "object",
                              "properties": {
                                "saslType": {
                                  "description": "Type of SASL authentication. Can be PLAIN, SCRAM-SHA-256, or SCRAM-SHA-512.",
                                  "type": "string",
                                  "enum": [
                                    "Plain",
                                    "ScramSha256",
                                    "ScramSha512"
                                  ],
                                  "x-ms-enum": {
                                    "name": "DataflowEndpointAuthenticationSaslType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Plain",
                                        "value": "Plain",
                                        "description": "PLAIN Type"
                                      },
                                      {
                                        "name": "ScramSha256",
                                        "value": "ScramSha256",
                                        "description": "SCRAM_SHA_256 Type"
                                      },
                                      {
                                        "name": "ScramSha512",
                                        "value": "ScramSha512",
                                        "description": "SCRAM_SHA_512 Type"
                                      }
                                    ]
                                  }
                                },
                                "secretRef": {
                                  "type": "string",
                                  "description": "Token secret name."
                                }
                              },
                              "required": [
                                "saslType",
                                "secretRef"
                              ]
                            },
                            "x509CertificateSettings": {
                              "description": "X.509 certificate authentication.",
                              "type": "object",
                              "properties": {
                                "secretRef": {
                                  "type": "string",
                                  "description": "Secret reference of the X.509 certificate."
                                }
                              },
                              "required": [
                                "secretRef"
                              ]
                            }
                          },
                          "required": [
                            "method"
                          ]
                        },
                        "consumerGroupId": {
                          "type": "string",
                          "description": "Consumer group ID."
                        },
                        "host": {
                          "type": "string",
                          "description": "Kafka endpoint host."
                        },
                        "batching": {
                          "description": "Batching configuration.",
                          "type": "object",
                          "properties": {
                            "mode": {
                              "type": "string",
                              "description": "Mode for batching.",
                              "default": "Enabled",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "OperationalMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled",
                                    "description": "Enabled is equivalent to True"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled",
                                    "description": "Disabled is equivalent to False."
                                  }
                                ]
                              }
                            },
                            "latencyMs": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Batching latency in milliseconds.",
                              "default": 5,
                              "minimum": 0,
                              "maximum": 65535
                            },
                            "maxBytes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Maximum number of bytes in a batch.",
                              "default": 1000000,
                              "minimum": 0,
                              "maximum": 4294967295
                            },
                            "maxMessages": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Maximum number of messages in a batch.",
                              "default": 100000,
                              "minimum": 0,
                              "maximum": 4294967295
                            }
                          }
                        },
                        "copyMqttProperties": {
                          "type": "string",
                          "description": "Copy Broker properties. No effect if the endpoint is used as a source or if the dataflow doesn't have an Broker source.",
                          "default": "Enabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "OperationalMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "Enabled is equivalent to True"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "Disabled is equivalent to False."
                              }
                            ]
                          }
                        },
                        "compression": {
                          "type": "string",
                          "description": "Compression. Can be none, gzip, lz4, or snappy. No effect if the endpoint is used as a source.",
                          "default": "None",
                          "enum": [
                            "None",
                            "Gzip",
                            "Snappy",
                            "Lz4"
                          ],
                          "x-ms-enum": {
                            "name": "DataflowEndpointKafkaCompression",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "None",
                                "value": "None",
                                "description": "NONE Option"
                              },
                              {
                                "name": "Gzip",
                                "value": "Gzip",
                                "description": "Gzip Option"
                              },
                              {
                                "name": "Snappy",
                                "value": "Snappy",
                                "description": "SNAPPY Option"
                              },
                              {
                                "name": "Lz4",
                                "value": "Lz4",
                                "description": "LZ4 Option"
                              }
                            ]
                          }
                        },
                        "kafkaAcks": {
                          "type": "string",
                          "description": "Kafka acks. Can be all, one, or zero. No effect if the endpoint is used as a source.",
                          "default": "All",
                          "enum": [
                            "Zero",
                            "One",
                            "All"
                          ],
                          "x-ms-enum": {
                            "name": "DataflowEndpointKafkaAcks",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Zero",
                                "value": "Zero",
                                "description": "ZERO Option"
                              },
                              {
                                "name": "One",
                                "value": "One",
                                "description": "ONE Option"
                              },
                              {
                                "name": "All",
                                "value": "All",
                                "description": "ALL Option"
                              }
                            ]
                          }
                        },
                        "partitionStrategy": {
                          "type": "string",
                          "description": "Partition handling strategy. Can be default or static. No effect if the endpoint is used as a source.",
                          "default": "Default",
                          "enum": [
                            "Default",
                            "Static",
                            "Topic",
                            "Property"
                          ],
                          "x-ms-enum": {
                            "name": "DataflowEndpointKafkaPartitionStrategy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Default",
                                "value": "Default",
                                "description": "Default: Assigns messages to random partitions, using a round-robin algorithm."
                              },
                              {
                                "name": "Static",
                                "value": "Static",
                                "description": "Static: Assigns messages to a fixed partition number that's derived from the instance ID of the dataflow."
                              },
                              {
                                "name": "Topic",
                                "value": "Topic",
                                "description": "TOPIC Option"
                              },
                              {
                                "name": "Property",
                                "value": "Property",
                                "description": "PROPERTY Option"
                              }
                            ]
                          }
                        },
                        "tls": {
                          "description": "TLS configuration.",
                          "type": "object",
                          "properties": {
                            "mode": {
                              "type": "string",
                              "description": "Mode for TLS.",
                              "default": "Enabled",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "OperationalMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled",
                                    "description": "Enabled is equivalent to True"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled",
                                    "description": "Disabled is equivalent to False."
                                  }
                                ]
                              }
                            },
                            "trustedCaCertificateConfigMapRef": {
                              "type": "string",
                              "description": "Trusted CA certificate config map."
                            }
                          }
                        },
                        "cloudEventAttributes": {
                          "description": "Cloud event mapping config.",
                          "type": "string",
                          "enum": [
                            "Propagate",
                            "CreateOrRemap"
                          ],
                          "x-ms-enum": {
                            "name": "CloudEventAttributeType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Propagate",
                                "value": "Propagate",
                                "description": "Propagate type"
                              },
                              {
                                "name": "CreateOrRemap",
                                "value": "CreateOrRemap",
                                "description": "CreateOrRemap type"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "authentication",
                        "host"
                      ]
                    },
                    "localStorageSettings": {
                      "description": "Local persistent volume endpoint.",
                      "type": "object",
                      "properties": {
                        "persistentVolumeClaimRef": {
                          "type": "string",
                          "description": "Persistent volume claim name."
                        }
                      },
                      "required": [
                        "persistentVolumeClaimRef"
                      ]
                    },
                    "mqttSettings": {
                      "description": "Broker endpoint.",
                      "type": "object",
                      "properties": {
                        "authentication": {
                          "description": "authentication properties. DEFAULT: kubernetes.audience=aio-internal. NOTE - Enum field only property is allowed",
                          "type": "object",
                          "properties": {
                            "method": {
                              "description": "Mode of Authentication.",
                              "type": "string",
                              "enum": [
                                "SystemAssignedManagedIdentity",
                                "UserAssignedManagedIdentity",
                                "ServiceAccountToken",
                                "X509Certificate",
                                "Anonymous"
                              ],
                              "x-ms-enum": {
                                "name": "MqttAuthMethod",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "SystemAssignedManagedIdentity",
                                    "value": "SystemAssignedManagedIdentity",
                                    "description": "SystemAssignedManagedIdentity type"
                                  },
                                  {
                                    "name": "UserAssignedManagedIdentity",
                                    "value": "UserAssignedManagedIdentity",
                                    "description": "UserAssignedManagedIdentity type"
                                  },
                                  {
                                    "name": "ServiceAccountToken",
                                    "value": "ServiceAccountToken",
                                    "description": "ServiceAccountToken Option"
                                  },
                                  {
                                    "name": "X509Certificate",
                                    "value": "X509Certificate",
                                    "description": "x509Certificate Option"
                                  },
                                  {
                                    "name": "Anonymous",
                                    "value": "Anonymous",
                                    "description": "Anonymous Option"
                                  }
                                ]
                              }
                            },
                            "systemAssignedManagedIdentitySettings": {
                              "description": "System-assigned managed identity authentication.",
                              "type": "object",
                              "properties": {
                                "audience": {
                                  "type": "string",
                                  "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
                                }
                              }
                            },
                            "userAssignedManagedIdentitySettings": {
                              "description": "User-assigned managed identity authentication.",
                              "type": "object",
                              "properties": {
                                "clientId": {
                                  "type": "string",
                                  "description": "Client ID for the user-assigned managed identity."
                                },
                                "scope": {
                                  "type": "string",
                                  "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
                                },
                                "tenantId": {
                                  "type": "string",
                                  "description": "Tenant ID."
                                }
                              },
                              "required": [
                                "clientId",
                                "tenantId"
                              ]
                            },
                            "serviceAccountTokenSettings": {
                              "description": "Kubernetes service account token authentication. Default audience if not set is aio-internal",
                              "type": "object",
                              "properties": {
                                "audience": {
                                  "type": "string",
                                  "description": "Audience of the service account. Optional, defaults to the broker internal service account audience."
                                }
                              },
                              "required": [
                                "audience"
                              ]
                            },
                            "x509CertificateSettings": {
                              "description": "X.509 certificate authentication.",
                              "type": "object",
                              "properties": {
                                "secretRef": {
                                  "type": "string",
                                  "description": "Secret reference of the X.509 certificate."
                                }
                              },
                              "required": [
                                "secretRef"
                              ]
                            }
                          },
                          "required": [
                            "method"
                          ]
                        },
                        "clientIdPrefix": {
                          "type": "string",
                          "description": "Client ID prefix. Client ID generated by the dataflow is <prefix>-TBD. Optional; no prefix if omitted."
                        },
                        "host": {
                          "type": "string",
                          "description": "Host of the Broker in the form of <hostname>:<port>. Optional; connects to Broker if omitted."
                        },
                        "protocol": {
                          "type": "string",
                          "description": "Enable or disable websockets.",
                          "default": "Mqtt",
                          "enum": [
                            "Mqtt",
                            "WebSockets"
                          ],
                          "x-ms-enum": {
                            "name": "BrokerProtocolType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Mqtt",
                                "value": "Mqtt",
                                "description": "protocol broker"
                              },
                              {
                                "name": "WebSockets",
                                "value": "WebSockets",
                                "description": "protocol websocket"
                              }
                            ]
                          }
                        },
                        "keepAliveSeconds": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Broker KeepAlive for connection in seconds.",
                          "default": 60,
                          "minimum": 0
                        },
                        "retain": {
                          "type": "string",
                          "description": "Whether or not to keep the retain setting.",
                          "default": "Keep",
                          "enum": [
                            "Keep",
                            "Never"
                          ],
                          "x-ms-enum": {
                            "name": "MqttRetainType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Keep",
                                "value": "Keep",
                                "description": "Retain the messages."
                              },
                              {
                                "name": "Never",
                                "value": "Never",
                                "description": "Never retain messages."
                              }
                            ]
                          }
                        },
                        "maxInflightMessages": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The max number of messages to keep in flight. For subscribe, this is the receive maximum. For publish, this is the maximum number of messages to send before waiting for an ack.",
                          "default": 100,
                          "minimum": 0
                        },
                        "qos": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Qos for Broker connection.",
                          "default": 1,
                          "minimum": 0,
                          "maximum": 1
                        },
                        "sessionExpirySeconds": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Session expiry in seconds.",
                          "minimum": 0
                        },
                        "tls": {
                          "description": "TLS configuration.",
                          "type": "object",
                          "properties": {
                            "mode": {
                              "type": "string",
                              "description": "Mode for TLS.",
                              "default": "Enabled",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "OperationalMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled",
                                    "description": "Enabled is equivalent to True"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled",
                                    "description": "Disabled is equivalent to False."
                                  }
                                ]
                              }
                            },
                            "trustedCaCertificateConfigMapRef": {
                              "type": "string",
                              "description": "Trusted CA certificate config map."
                            }
                          }
                        },
                        "cloudEventAttributes": {
                          "description": "Cloud event mapping config.",
                          "type": "string",
                          "enum": [
                            "Propagate",
                            "CreateOrRemap"
                          ],
                          "x-ms-enum": {
                            "name": "CloudEventAttributeType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Propagate",
                                "value": "Propagate",
                                "description": "Propagate type"
                              },
                              {
                                "name": "CreateOrRemap",
                                "value": "CreateOrRemap",
                                "description": "CreateOrRemap type"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "authentication"
                      ]
                    },
                    "openTelemetrySettings": {
                      "description": "OpenTelemetry endpoint.",
                      "type": "object",
                      "properties": {
                        "host": {
                          "type": "string",
                          "description": "Host of the OpenTelemetry in the form of <host>:<port>."
                        },
                        "batching": {
                          "description": "Batching configuration.",
                          "type": "object",
                          "properties": {
                            "latencySeconds": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Batching latency in seconds.",
                              "default": 60,
                              "minimum": 0,
                              "maximum": 65535
                            },
                            "maxMessages": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Maximum number of messages in a batch.",
                              "default": 100000,
                              "minimum": 0,
                              "maximum": 4294967295
                            }
                          }
                        },
                        "tls": {
                          "description": "TLS configuration.",
                          "type": "object",
                          "properties": {
                            "mode": {
                              "type": "string",
                              "description": "Mode for TLS.",
                              "default": "Enabled",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "OperationalMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled",
                                    "description": "Enabled is equivalent to True"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled",
                                    "description": "Disabled is equivalent to False."
                                  }
                                ]
                              }
                            },
                            "trustedCaCertificateConfigMapRef": {
                              "type": "string",
                              "description": "Trusted CA certificate config map."
                            }
                          }
                        },
                        "authentication": {
                          "description": "Authentication properties for OpenTelemetry endpoints",
                          "type": "object",
                          "properties": {
                            "method": {
                              "description": "The authentication method.",
                              "type": "string",
                              "enum": [
                                "ServiceAccountToken",
                                "X509Certificate",
                                "Anonymous"
                              ],
                              "x-ms-enum": {
                                "name": "DataflowOpenTelemetryAuthenticationMethod",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "ServiceAccountToken",
                                    "value": "ServiceAccountToken",
                                    "description": "Uses serviceaccount token."
                                  },
                                  {
                                    "name": "X509Certificate",
                                    "value": "X509Certificate",
                                    "description": "Uses x509 certificate."
                                  },
                                  {
                                    "name": "Anonymous",
                                    "value": "Anonymous",
                                    "description": "Connects anonymously."
                                  }
                                ]
                              }
                            }
                          },
                          "discriminator": "method",
                          "required": [
                            "method"
                          ]
                        }
                      },
                      "required": [
                        "host",
                        "authentication"
                      ]
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is getting provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Resource is Updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is Deleting."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been Accepted."
                          }
                        ]
                      }
                    },
                    "healthState": {
                      "type": "string",
                      "description": "The health state of the resource.",
                      "default": "Unknown",
                      "enum": [
                        "Available",
                        "Degraded",
                        "Unavailable",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceHealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "Resource is Available and functioning as expected."
                          },
                          {
                            "name": "Degraded",
                            "value": "Degraded",
                            "description": "Resource health is degraded."
                          },
                          {
                            "name": "Unavailable",
                            "value": "Unavailable",
                            "description": "Resource is not functioning as expected."
                          },
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "Resource state is unknown."
                          }
                        ]
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "endpointType"
                  ]
                },
                "extendedLocation": {
                  "description": "Edge location of the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "Type of ExtendedLocation.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "CustomLocation type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "DataflowEndpoint_CreateOrUpdate",
        "tags": [
          "DataflowEndpoint"
        ],
        "description": "Create a DataflowEndpointResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "dataflowEndpointName",
            "in": "path",
            "description": "Name of Instance dataflowEndpoint resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Instance dataflowEndpoint resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "endpointType": {
                      "description": "Endpoint Type.",
                      "type": "string",
                      "enum": [
                        "DataExplorer",
                        "DataLakeStorage",
                        "FabricOneLake",
                        "Kafka",
                        "LocalStorage",
                        "Mqtt",
                        "OpenTelemetry"
                      ],
                      "x-ms-enum": {
                        "name": "EndpointType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "DataExplorer",
                            "value": "DataExplorer",
                            "description": "Azure Data Explorer Type"
                          },
                          {
                            "name": "DataLakeStorage",
                            "value": "DataLakeStorage",
                            "description": "Azure Data Lake Type"
                          },
                          {
                            "name": "FabricOneLake",
                            "value": "FabricOneLake",
                            "description": "Microsoft Fabric Type"
                          },
                          {
                            "name": "Kafka",
                            "value": "Kafka",
                            "description": "Kafka Type"
                          },
                          {
                            "name": "LocalStorage",
                            "value": "LocalStorage",
                            "description": "Local Storage Type"
                          },
                          {
                            "name": "Mqtt",
                            "value": "Mqtt",
                            "description": "Broker Type"
                          },
                          {
                            "name": "OpenTelemetry",
                            "value": "OpenTelemetry",
                            "description": "OpenTelemetry Type"
                          }
                        ]
                      }
                    },
                    "hostType": {
                      "description": "The type of the Kafka host. E.g FabricRT, EventGrid.",
                      "type": "string",
                      "enum": [
                        "FabricRT",
                        "EventGrid",
                        "LocalBroker",
                        "Eventhub",
                        "CustomMqtt",
                        "CustomKafka"
                      ],
                      "x-ms-enum": {
                        "name": "DataflowEndpointHostType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "FabricRT",
                            "value": "FabricRT",
                            "description": "Fabric Real-Time Type"
                          },
                          {
                            "name": "EventGrid",
                            "value": "EventGrid",
                            "description": "EventGrid Type"
                          },
                          {
                            "name": "LocalBroker",
                            "value": "LocalBroker",
                            "description": "Local MQTT Type"
                          },
                          {
                            "name": "Eventhub",
                            "value": "Eventhub",
                            "description": "EventHub Type"
                          },
                          {
                            "name": "CustomMqtt",
                            "value": "CustomMqtt",
                            "description": "Custom MQTT Type"
                          },
                          {
                            "name": "CustomKafka",
                            "value": "CustomKafka",
                            "description": "Custom Kafka Type"
                          }
                        ]
                      }
                    },
                    "dataExplorerSettings": {
                      "description": "Azure Data Explorer endpoint.",
                      "type": "object",
                      "properties": {
                        "authentication": {
                          "description": "Authentication configuration. NOTE - only authentication property is allowed per entry.",
                          "type": "object",
                          "properties": {
                            "method": {
                              "description": "Mode of Authentication.",
                              "x-nullable": false,
                              "type": "string",
                              "enum": [
                                "SystemAssignedManagedIdentity",
                                "UserAssignedManagedIdentity"
                              ],
                              "x-ms-enum": {
                                "name": "ManagedIdentityMethod",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "SystemAssignedManagedIdentity",
                                    "value": "SystemAssignedManagedIdentity",
                                    "description": "SystemAssignedManagedIdentity type"
                                  },
                                  {
                                    "name": "UserAssignedManagedIdentity",
                                    "value": "UserAssignedManagedIdentity",
                                    "description": "UserAssignedManagedIdentity type"
                                  }
                                ]
                              }
                            },
                            "systemAssignedManagedIdentitySettings": {
                              "description": "System-assigned managed identity authentication.",
                              "type": "object",
                              "properties": {
                                "audience": {
                                  "type": "string",
                                  "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
                                }
                              }
                            },
                            "userAssignedManagedIdentitySettings": {
                              "description": "User-assigned managed identity authentication.",
                              "type": "object",
                              "properties": {
                                "clientId": {
                                  "type": "string",
                                  "description": "Client ID for the user-assigned managed identity."
                                },
                                "scope": {
                                  "type": "string",
                                  "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
                                },
                                "tenantId": {
                                  "type": "string",
                                  "description": "Tenant ID."
                                }
                              },
                              "required": [
                                "clientId",
                                "tenantId"
                              ]
                            }
                          },
                          "required": [
                            "method"
                          ]
                        },
                        "database": {
                          "type": "string",
                          "description": "Database name."
                        },
                        "host": {
                          "type": "string",
                          "description": "Host of the Azure Data Explorer in the form of <cluster>.<region>.kusto.windows.net .",
                          "pattern": ".+\\..+\\.kusto\\.windows\\.net"
                        },
                        "batching": {
                          "description": "Azure Data Explorer endpoint batching configuration.",
                          "type": "object",
                          "properties": {
                            "latencySeconds": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Batching latency in seconds.",
                              "default": 60,
                              "minimum": 0,
                              "maximum": 65535
                            },
                            "maxMessages": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Maximum number of messages in a batch.",
                              "default": 100000,
                              "minimum": 0,
                              "maximum": 4294967295
                            }
                          }
                        }
                      },
                      "required": [
                        "authentication",
                        "database",
                        "host"
                      ]
                    },
                    "dataLakeStorageSettings": {
                      "description": "Azure Data Lake endpoint.",
                      "type": "object",
                      "properties": {
                        "authentication": {
                          "description": "Authentication configuration. NOTE - only authentication property is allowed per entry.",
                          "type": "object",
                          "properties": {
                            "method": {
                              "description": "Mode of Authentication.",
                              "type": "string",
                              "enum": [
                                "SystemAssignedManagedIdentity",
                                "UserAssignedManagedIdentity",
                                "AccessToken"
                              ],
                              "x-ms-enum": {
                                "name": "DataLakeStorageAuthMethod",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "SystemAssignedManagedIdentity",
                                    "value": "SystemAssignedManagedIdentity",
                                    "description": "SystemAssignedManagedIdentity type"
                                  },
                                  {
                                    "name": "UserAssignedManagedIdentity",
                                    "value": "UserAssignedManagedIdentity",
                                    "description": "UserAssignedManagedIdentity type"
                                  },
                                  {
                                    "name": "AccessToken",
                                    "value": "AccessToken",
                                    "description": "AccessToken Option"
                                  }
                                ]
                              }
                            },
                            "accessTokenSettings": {
                              "description": "SAS token authentication.",
                              "type": "object",
                              "properties": {
                                "secretRef": {
                                  "type": "string",
                                  "description": "Token secret name."
                                }
                              },
                              "required": [
                                "secretRef"
                              ]
                            },
                            "systemAssignedManagedIdentitySettings": {
                              "description": "System-assigned managed identity authentication.",
                              "type": "object",
                              "properties": {
                                "audience": {
                                  "type": "string",
                                  "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
                                }
                              }
                            },
                            "userAssignedManagedIdentitySettings": {
                              "description": "User-assigned managed identity authentication.",
                              "type": "object",
                              "properties": {
                                "clientId": {
                                  "type": "string",
                                  "description": "Client ID for the user-assigned managed identity."
                                },
                                "scope": {
                                  "type": "string",
                                  "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
                                },
                                "tenantId": {
                                  "type": "string",
                                  "description": "Tenant ID."
                                }
                              },
                              "required": [
                                "clientId",
                                "tenantId"
                              ]
                            }
                          },
                          "required": [
                            "method"
                          ]
                        },
                        "host": {
                          "type": "string",
                          "description": "Host of the Azure Data Lake in the form of <account>.blob.core.windows.net .",
                          "pattern": ".+\\.blob\\.core\\.windows\\.net"
                        },
                        "batching": {
                          "description": "Azure Data Lake endpoint batching configuration.",
                          "type": "object",
                          "properties": {
                            "latencySeconds": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Batching latency in seconds.",
                              "default": 60,
                              "minimum": 0,
                              "maximum": 65535
                            },
                            "maxMessages": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Maximum number of messages in a batch.",
                              "default": 100000,
                              "minimum": 0,
                              "maximum": 4294967295
                            }
                          }
                        }
                      },
                      "required": [
                        "authentication",
                        "host"
                      ]
                    },
                    "fabricOneLakeSettings": {
                      "description": "Microsoft Fabric endpoint.",
                      "type": "object",
                      "properties": {
                        "authentication": {
                          "description": "Authentication configuration. NOTE - only one authentication property is allowed per entry.",
                          "type": "object",
                          "properties": {
                            "method": {
                              "description": "Mode of Authentication.",
                              "x-nullable": false,
                              "type": "string",
                              "enum": [
                                "SystemAssignedManagedIdentity",
                                "UserAssignedManagedIdentity"
                              ],
                              "x-ms-enum": {
                                "name": "ManagedIdentityMethod",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "SystemAssignedManagedIdentity",
                                    "value": "SystemAssignedManagedIdentity",
                                    "description": "SystemAssignedManagedIdentity type"
                                  },
                                  {
                                    "name": "UserAssignedManagedIdentity",
                                    "value": "UserAssignedManagedIdentity",
                                    "description": "UserAssignedManagedIdentity type"
                                  }
                                ]
                              }
                            },
                            "systemAssignedManagedIdentitySettings": {
                              "description": "System-assigned managed identity authentication.",
                              "type": "object",
                              "properties": {
                                "audience": {
                                  "type": "string",
                                  "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
                                }
                              }
                            },
                            "userAssignedManagedIdentitySettings": {
                              "description": "User-assigned managed identity authentication.",
                              "type": "object",
                              "properties": {
                                "clientId": {
                                  "type": "string",
                                  "description": "Client ID for the user-assigned managed identity."
                                },
                                "scope": {
                                  "type": "string",
                                  "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
                                },
                                "tenantId": {
                                  "type": "string",
                                  "description": "Tenant ID."
                                }
                              },
                              "required": [
                                "clientId",
                                "tenantId"
                              ]
                            }
                          },
                          "required": [
                            "method"
                          ]
                        },
                        "names": {
                          "description": "Names of the workspace and lakehouse.",
                          "type": "object",
                          "properties": {
                            "lakehouseName": {
                              "type": "string",
                              "description": "Lakehouse name."
                            },
                            "workspaceName": {
                              "type": "string",
                              "description": "Workspace name."
                            }
                          },
                          "required": [
                            "lakehouseName",
                            "workspaceName"
                          ]
                        },
                        "oneLakePathType": {
                          "description": "Type of location of the data in the workspace. Can be either tables or files.",
                          "type": "string",
                          "enum": [
                            "Files",
                            "Tables"
                          ],
                          "x-ms-enum": {
                            "name": "DataflowEndpointFabricPathType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Files",
                                "value": "Files",
                                "description": "FILES Type"
                              },
                              {
                                "name": "Tables",
                                "value": "Tables",
                                "description": "TABLES Type"
                              }
                            ]
                          }
                        },
                        "host": {
                          "type": "string",
                          "description": "Host of the Microsoft Fabric in the form of https://<host>.fabric.microsoft.com.",
                          "pattern": ".+\\.fabric\\.microsoft\\.com"
                        },
                        "batching": {
                          "description": "Batching configuration.",
                          "type": "object",
                          "properties": {
                            "latencySeconds": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Batching latency in seconds.",
                              "default": 60,
                              "minimum": 0,
                              "maximum": 65535
                            },
                            "maxMessages": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Maximum number of messages in a batch.",
                              "default": 100000,
                              "minimum": 0,
                              "maximum": 4294967295
                            }
                          }
                        }
                      },
                      "required": [
                        "authentication",
                        "names",
                        "oneLakePathType",
                        "host"
                      ]
                    },
                    "kafkaSettings": {
                      "description": "Kafka endpoint.",
                      "type": "object",
                      "properties": {
                        "authentication": {
                          "description": "Authentication configuration. NOTE - only authentication property is allowed per entry.",
                          "type": "object",
                          "properties": {
                            "method": {
                              "description": "Mode of Authentication.",
                              "type": "string",
                              "enum": [
                                "SystemAssignedManagedIdentity",
                                "UserAssignedManagedIdentity",
                                "Sasl",
                                "X509Certificate",
                                "Anonymous"
                              ],
                              "x-ms-enum": {
                                "name": "KafkaAuthMethod",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "SystemAssignedManagedIdentity",
                                    "value": "SystemAssignedManagedIdentity",
                                    "description": "SystemAssignedManagedIdentity type"
                                  },
                                  {
                                    "name": "UserAssignedManagedIdentity",
                                    "value": "UserAssignedManagedIdentity",
                                    "description": "UserAssignedManagedIdentity type"
                                  },
                                  {
                                    "name": "Sasl",
                                    "value": "Sasl",
                                    "description": "Sasl Option"
                                  },
                                  {
                                    "name": "X509Certificate",
                                    "value": "X509Certificate",
                                    "description": "x509Certificate Option"
                                  },
                                  {
                                    "name": "Anonymous",
                                    "value": "Anonymous",
                                    "description": "Anonymous Option"
                                  }
                                ]
                              }
                            },
                            "systemAssignedManagedIdentitySettings": {
                              "description": "System-assigned managed identity authentication.",
                              "type": "object",
                              "properties": {
                                "audience": {
                                  "type": "string",
                                  "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
                                }
                              }
                            },
                            "userAssignedManagedIdentitySettings": {
                              "description": "User-assigned managed identity authentication.",
                              "type": "object",
                              "properties": {
                                "clientId": {
                                  "type": "string",
                                  "description": "Client ID for the user-assigned managed identity."
                                },
                                "scope": {
                                  "type": "string",
                                  "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
                                },
                                "tenantId": {
                                  "type": "string",
                                  "description": "Tenant ID."
                                }
                              },
                              "required": [
                                "clientId",
                                "tenantId"
                              ]
                            },
                            "saslSettings": {
                              "description": "SASL authentication.",
                              "type": "object",
                              "properties": {
                                "saslType": {
                                  "description": "Type of SASL authentication. Can be PLAIN, SCRAM-SHA-256, or SCRAM-SHA-512.",
                                  "type": "string",
                                  "enum": [
                                    "Plain",
                                    "ScramSha256",
                                    "ScramSha512"
                                  ],
                                  "x-ms-enum": {
                                    "name": "DataflowEndpointAuthenticationSaslType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Plain",
                                        "value": "Plain",
                                        "description": "PLAIN Type"
                                      },
                                      {
                                        "name": "ScramSha256",
                                        "value": "ScramSha256",
                                        "description": "SCRAM_SHA_256 Type"
                                      },
                                      {
                                        "name": "ScramSha512",
                                        "value": "ScramSha512",
                                        "description": "SCRAM_SHA_512 Type"
                                      }
                                    ]
                                  }
                                },
                                "secretRef": {
                                  "type": "string",
                                  "description": "Token secret name."
                                }
                              },
                              "required": [
                                "saslType",
                                "secretRef"
                              ]
                            },
                            "x509CertificateSettings": {
                              "description": "X.509 certificate authentication.",
                              "type": "object",
                              "properties": {
                                "secretRef": {
                                  "type": "string",
                                  "description": "Secret reference of the X.509 certificate."
                                }
                              },
                              "required": [
                                "secretRef"
                              ]
                            }
                          },
                          "required": [
                            "method"
                          ]
                        },
                        "consumerGroupId": {
                          "type": "string",
                          "description": "Consumer group ID."
                        },
                        "host": {
                          "type": "string",
                          "description": "Kafka endpoint host."
                        },
                        "batching": {
                          "description": "Batching configuration.",
                          "type": "object",
                          "properties": {
                            "mode": {
                              "type": "string",
                              "description": "Mode for batching.",
                              "default": "Enabled",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "OperationalMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled",
                                    "description": "Enabled is equivalent to True"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled",
                                    "description": "Disabled is equivalent to False."
                                  }
                                ]
                              }
                            },
                            "latencyMs": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Batching latency in milliseconds.",
                              "default": 5,
                              "minimum": 0,
                              "maximum": 65535
                            },
                            "maxBytes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Maximum number of bytes in a batch.",
                              "default": 1000000,
                              "minimum": 0,
                              "maximum": 4294967295
                            },
                            "maxMessages": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Maximum number of messages in a batch.",
                              "default": 100000,
                              "minimum": 0,
                              "maximum": 4294967295
                            }
                          }
                        },
                        "copyMqttProperties": {
                          "type": "string",
                          "description": "Copy Broker properties. No effect if the endpoint is used as a source or if the dataflow doesn't have an Broker source.",
                          "default": "Enabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "OperationalMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "Enabled is equivalent to True"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "Disabled is equivalent to False."
                              }
                            ]
                          }
                        },
                        "compression": {
                          "type": "string",
                          "description": "Compression. Can be none, gzip, lz4, or snappy. No effect if the endpoint is used as a source.",
                          "default": "None",
                          "enum": [
                            "None",
                            "Gzip",
                            "Snappy",
                            "Lz4"
                          ],
                          "x-ms-enum": {
                            "name": "DataflowEndpointKafkaCompression",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "None",
                                "value": "None",
                                "description": "NONE Option"
                              },
                              {
                                "name": "Gzip",
                                "value": "Gzip",
                                "description": "Gzip Option"
                              },
                              {
                                "name": "Snappy",
                                "value": "Snappy",
                                "description": "SNAPPY Option"
                              },
                              {
                                "name": "Lz4",
                                "value": "Lz4",
                                "description": "LZ4 Option"
                              }
                            ]
                          }
                        },
                        "kafkaAcks": {
                          "type": "string",
                          "description": "Kafka acks. Can be all, one, or zero. No effect if the endpoint is used as a source.",
                          "default": "All",
                          "enum": [
                            "Zero",
                            "One",
                            "All"
                          ],
                          "x-ms-enum": {
                            "name": "DataflowEndpointKafkaAcks",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Zero",
                                "value": "Zero",
                                "description": "ZERO Option"
                              },
                              {
                                "name": "One",
                                "value": "One",
                                "description": "ONE Option"
                              },
                              {
                                "name": "All",
                                "value": "All",
                                "description": "ALL Option"
                              }
                            ]
                          }
                        },
                        "partitionStrategy": {
                          "type": "string",
                          "description": "Partition handling strategy. Can be default or static. No effect if the endpoint is used as a source.",
                          "default": "Default",
                          "enum": [
                            "Default",
                            "Static",
                            "Topic",
                            "Property"
                          ],
                          "x-ms-enum": {
                            "name": "DataflowEndpointKafkaPartitionStrategy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Default",
                                "value": "Default",
                                "description": "Default: Assigns messages to random partitions, using a round-robin algorithm."
                              },
                              {
                                "name": "Static",
                                "value": "Static",
                                "description": "Static: Assigns messages to a fixed partition number that's derived from the instance ID of the dataflow."
                              },
                              {
                                "name": "Topic",
                                "value": "Topic",
                                "description": "TOPIC Option"
                              },
                              {
                                "name": "Property",
                                "value": "Property",
                                "description": "PROPERTY Option"
                              }
                            ]
                          }
                        },
                        "tls": {
                          "description": "TLS configuration.",
                          "type": "object",
                          "properties": {
                            "mode": {
                              "type": "string",
                              "description": "Mode for TLS.",
                              "default": "Enabled",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "OperationalMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled",
                                    "description": "Enabled is equivalent to True"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled",
                                    "description": "Disabled is equivalent to False."
                                  }
                                ]
                              }
                            },
                            "trustedCaCertificateConfigMapRef": {
                              "type": "string",
                              "description": "Trusted CA certificate config map."
                            }
                          }
                        },
                        "cloudEventAttributes": {
                          "description": "Cloud event mapping config.",
                          "type": "string",
                          "enum": [
                            "Propagate",
                            "CreateOrRemap"
                          ],
                          "x-ms-enum": {
                            "name": "CloudEventAttributeType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Propagate",
                                "value": "Propagate",
                                "description": "Propagate type"
                              },
                              {
                                "name": "CreateOrRemap",
                                "value": "CreateOrRemap",
                                "description": "CreateOrRemap type"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "authentication",
                        "host"
                      ]
                    },
                    "localStorageSettings": {
                      "description": "Local persistent volume endpoint.",
                      "type": "object",
                      "properties": {
                        "persistentVolumeClaimRef": {
                          "type": "string",
                          "description": "Persistent volume claim name."
                        }
                      },
                      "required": [
                        "persistentVolumeClaimRef"
                      ]
                    },
                    "mqttSettings": {
                      "description": "Broker endpoint.",
                      "type": "object",
                      "properties": {
                        "authentication": {
                          "description": "authentication properties. DEFAULT: kubernetes.audience=aio-internal. NOTE - Enum field only property is allowed",
                          "type": "object",
                          "properties": {
                            "method": {
                              "description": "Mode of Authentication.",
                              "type": "string",
                              "enum": [
                                "SystemAssignedManagedIdentity",
                                "UserAssignedManagedIdentity",
                                "ServiceAccountToken",
                                "X509Certificate",
                                "Anonymous"
                              ],
                              "x-ms-enum": {
                                "name": "MqttAuthMethod",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "SystemAssignedManagedIdentity",
                                    "value": "SystemAssignedManagedIdentity",
                                    "description": "SystemAssignedManagedIdentity type"
                                  },
                                  {
                                    "name": "UserAssignedManagedIdentity",
                                    "value": "UserAssignedManagedIdentity",
                                    "description": "UserAssignedManagedIdentity type"
                                  },
                                  {
                                    "name": "ServiceAccountToken",
                                    "value": "ServiceAccountToken",
                                    "description": "ServiceAccountToken Option"
                                  },
                                  {
                                    "name": "X509Certificate",
                                    "value": "X509Certificate",
                                    "description": "x509Certificate Option"
                                  },
                                  {
                                    "name": "Anonymous",
                                    "value": "Anonymous",
                                    "description": "Anonymous Option"
                                  }
                                ]
                              }
                            },
                            "systemAssignedManagedIdentitySettings": {
                              "description": "System-assigned managed identity authentication.",
                              "type": "object",
                              "properties": {
                                "audience": {
                                  "type": "string",
                                  "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
                                }
                              }
                            },
                            "userAssignedManagedIdentitySettings": {
                              "description": "User-assigned managed identity authentication.",
                              "type": "object",
                              "properties": {
                                "clientId": {
                                  "type": "string",
                                  "description": "Client ID for the user-assigned managed identity."
                                },
                                "scope": {
                                  "type": "string",
                                  "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
                                },
                                "tenantId": {
                                  "type": "string",
                                  "description": "Tenant ID."
                                }
                              },
                              "required": [
                                "clientId",
                                "tenantId"
                              ]
                            },
                            "serviceAccountTokenSettings": {
                              "description": "Kubernetes service account token authentication. Default audience if not set is aio-internal",
                              "type": "object",
                              "properties": {
                                "audience": {
                                  "type": "string",
                                  "description": "Audience of the service account. Optional, defaults to the broker internal service account audience."
                                }
                              },
                              "required": [
                                "audience"
                              ]
                            },
                            "x509CertificateSettings": {
                              "description": "X.509 certificate authentication.",
                              "type": "object",
                              "properties": {
                                "secretRef": {
                                  "type": "string",
                                  "description": "Secret reference of the X.509 certificate."
                                }
                              },
                              "required": [
                                "secretRef"
                              ]
                            }
                          },
                          "required": [
                            "method"
                          ]
                        },
                        "clientIdPrefix": {
                          "type": "string",
                          "description": "Client ID prefix. Client ID generated by the dataflow is <prefix>-TBD. Optional; no prefix if omitted."
                        },
                        "host": {
                          "type": "string",
                          "description": "Host of the Broker in the form of <hostname>:<port>. Optional; connects to Broker if omitted."
                        },
                        "protocol": {
                          "type": "string",
                          "description": "Enable or disable websockets.",
                          "default": "Mqtt",
                          "enum": [
                            "Mqtt",
                            "WebSockets"
                          ],
                          "x-ms-enum": {
                            "name": "BrokerProtocolType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Mqtt",
                                "value": "Mqtt",
                                "description": "protocol broker"
                              },
                              {
                                "name": "WebSockets",
                                "value": "WebSockets",
                                "description": "protocol websocket"
                              }
                            ]
                          }
                        },
                        "keepAliveSeconds": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Broker KeepAlive for connection in seconds.",
                          "default": 60,
                          "minimum": 0
                        },
                        "retain": {
                          "type": "string",
                          "description": "Whether or not to keep the retain setting.",
                          "default": "Keep",
                          "enum": [
                            "Keep",
                            "Never"
                          ],
                          "x-ms-enum": {
                            "name": "MqttRetainType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Keep",
                                "value": "Keep",
                                "description": "Retain the messages."
                              },
                              {
                                "name": "Never",
                                "value": "Never",
                                "description": "Never retain messages."
                              }
                            ]
                          }
                        },
                        "maxInflightMessages": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The max number of messages to keep in flight. For subscribe, this is the receive maximum. For publish, this is the maximum number of messages to send before waiting for an ack.",
                          "default": 100,
                          "minimum": 0
                        },
                        "qos": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Qos for Broker connection.",
                          "default": 1,
                          "minimum": 0,
                          "maximum": 1
                        },
                        "sessionExpirySeconds": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Session expiry in seconds.",
                          "minimum": 0
                        },
                        "tls": {
                          "description": "TLS configuration.",
                          "type": "object",
                          "properties": {
                            "mode": {
                              "type": "string",
                              "description": "Mode for TLS.",
                              "default": "Enabled",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "OperationalMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled",
                                    "description": "Enabled is equivalent to True"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled",
                                    "description": "Disabled is equivalent to False."
                                  }
                                ]
                              }
                            },
                            "trustedCaCertificateConfigMapRef": {
                              "type": "string",
                              "description": "Trusted CA certificate config map."
                            }
                          }
                        },
                        "cloudEventAttributes": {
                          "description": "Cloud event mapping config.",
                          "type": "string",
                          "enum": [
                            "Propagate",
                            "CreateOrRemap"
                          ],
                          "x-ms-enum": {
                            "name": "CloudEventAttributeType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Propagate",
                                "value": "Propagate",
                                "description": "Propagate type"
                              },
                              {
                                "name": "CreateOrRemap",
                                "value": "CreateOrRemap",
                                "description": "CreateOrRemap type"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "authentication"
                      ]
                    },
                    "openTelemetrySettings": {
                      "description": "OpenTelemetry endpoint.",
                      "type": "object",
                      "properties": {
                        "host": {
                          "type": "string",
                          "description": "Host of the OpenTelemetry in the form of <host>:<port>."
                        },
                        "batching": {
                          "description": "Batching configuration.",
                          "type": "object",
                          "properties": {
                            "latencySeconds": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Batching latency in seconds.",
                              "default": 60,
                              "minimum": 0,
                              "maximum": 65535
                            },
                            "maxMessages": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Maximum number of messages in a batch.",
                              "default": 100000,
                              "minimum": 0,
                              "maximum": 4294967295
                            }
                          }
                        },
                        "tls": {
                          "description": "TLS configuration.",
                          "type": "object",
                          "properties": {
                            "mode": {
                              "type": "string",
                              "description": "Mode for TLS.",
                              "default": "Enabled",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "OperationalMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled",
                                    "description": "Enabled is equivalent to True"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled",
                                    "description": "Disabled is equivalent to False."
                                  }
                                ]
                              }
                            },
                            "trustedCaCertificateConfigMapRef": {
                              "type": "string",
                              "description": "Trusted CA certificate config map."
                            }
                          }
                        },
                        "authentication": {
                          "description": "Authentication properties for OpenTelemetry endpoints",
                          "type": "object",
                          "properties": {
                            "method": {
                              "description": "The authentication method.",
                              "type": "string",
                              "enum": [
                                "ServiceAccountToken",
                                "X509Certificate",
                                "Anonymous"
                              ],
                              "x-ms-enum": {
                                "name": "DataflowOpenTelemetryAuthenticationMethod",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "ServiceAccountToken",
                                    "value": "ServiceAccountToken",
                                    "description": "Uses serviceaccount token."
                                  },
                                  {
                                    "name": "X509Certificate",
                                    "value": "X509Certificate",
                                    "description": "Uses x509 certificate."
                                  },
                                  {
                                    "name": "Anonymous",
                                    "value": "Anonymous",
                                    "description": "Connects anonymously."
                                  }
                                ]
                              }
                            }
                          },
                          "discriminator": "method",
                          "required": [
                            "method"
                          ]
                        }
                      },
                      "required": [
                        "host",
                        "authentication"
                      ]
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is getting provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Resource is Updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is Deleting."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been Accepted."
                          }
                        ]
                      }
                    },
                    "healthState": {
                      "type": "string",
                      "description": "The health state of the resource.",
                      "default": "Unknown",
                      "enum": [
                        "Available",
                        "Degraded",
                        "Unavailable",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceHealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "Resource is Available and functioning as expected."
                          },
                          {
                            "name": "Degraded",
                            "value": "Degraded",
                            "description": "Resource health is degraded."
                          },
                          {
                            "name": "Unavailable",
                            "value": "Unavailable",
                            "description": "Resource is not functioning as expected."
                          },
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "Resource state is unknown."
                          }
                        ]
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "endpointType"
                  ]
                },
                "extendedLocation": {
                  "description": "Edge location of the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "Type of ExtendedLocation.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "CustomLocation type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DataflowEndpointResource' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Instance dataflowEndpoint resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "endpointType": {
                      "description": "Endpoint Type.",
                      "type": "string",
                      "enum": [
                        "DataExplorer",
                        "DataLakeStorage",
                        "FabricOneLake",
                        "Kafka",
                        "LocalStorage",
                        "Mqtt",
                        "OpenTelemetry"
                      ],
                      "x-ms-enum": {
                        "name": "EndpointType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "DataExplorer",
                            "value": "DataExplorer",
                            "description": "Azure Data Explorer Type"
                          },
                          {
                            "name": "DataLakeStorage",
                            "value": "DataLakeStorage",
                            "description": "Azure Data Lake Type"
                          },
                          {
                            "name": "FabricOneLake",
                            "value": "FabricOneLake",
                            "description": "Microsoft Fabric Type"
                          },
                          {
                            "name": "Kafka",
                            "value": "Kafka",
                            "description": "Kafka Type"
                          },
                          {
                            "name": "LocalStorage",
                            "value": "LocalStorage",
                            "description": "Local Storage Type"
                          },
                          {
                            "name": "Mqtt",
                            "value": "Mqtt",
                            "description": "Broker Type"
                          },
                          {
                            "name": "OpenTelemetry",
                            "value": "OpenTelemetry",
                            "description": "OpenTelemetry Type"
                          }
                        ]
                      }
                    },
                    "hostType": {
                      "description": "The type of the Kafka host. E.g FabricRT, EventGrid.",
                      "type": "string",
                      "enum": [
                        "FabricRT",
                        "EventGrid",
                        "LocalBroker",
                        "Eventhub",
                        "CustomMqtt",
                        "CustomKafka"
                      ],
                      "x-ms-enum": {
                        "name": "DataflowEndpointHostType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "FabricRT",
                            "value": "FabricRT",
                            "description": "Fabric Real-Time Type"
                          },
                          {
                            "name": "EventGrid",
                            "value": "EventGrid",
                            "description": "EventGrid Type"
                          },
                          {
                            "name": "LocalBroker",
                            "value": "LocalBroker",
                            "description": "Local MQTT Type"
                          },
                          {
                            "name": "Eventhub",
                            "value": "Eventhub",
                            "description": "EventHub Type"
                          },
                          {
                            "name": "CustomMqtt",
                            "value": "CustomMqtt",
                            "description": "Custom MQTT Type"
                          },
                          {
                            "name": "CustomKafka",
                            "value": "CustomKafka",
                            "description": "Custom Kafka Type"
                          }
                        ]
                      }
                    },
                    "dataExplorerSettings": {
                      "description": "Azure Data Explorer endpoint.",
                      "type": "object",
                      "properties": {
                        "authentication": {
                          "description": "Authentication configuration. NOTE - only authentication property is allowed per entry.",
                          "type": "object",
                          "properties": {
                            "method": {
                              "description": "Mode of Authentication.",
                              "x-nullable": false,
                              "type": "string",
                              "enum": [
                                "SystemAssignedManagedIdentity",
                                "UserAssignedManagedIdentity"
                              ],
                              "x-ms-enum": {
                                "name": "ManagedIdentityMethod",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "SystemAssignedManagedIdentity",
                                    "value": "SystemAssignedManagedIdentity",
                                    "description": "SystemAssignedManagedIdentity type"
                                  },
                                  {
                                    "name": "UserAssignedManagedIdentity",
                                    "value": "UserAssignedManagedIdentity",
                                    "description": "UserAssignedManagedIdentity type"
                                  }
                                ]
                              }
                            },
                            "systemAssignedManagedIdentitySettings": {
                              "description": "System-assigned managed identity authentication.",
                              "type": "object",
                              "properties": {
                                "audience": {
                                  "type": "string",
                                  "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
                                }
                              }
                            },
                            "userAssignedManagedIdentitySettings": {
                              "description": "User-assigned managed identity authentication.",
                              "type": "object",
                              "properties": {
                                "clientId": {
                                  "type": "string",
                                  "description": "Client ID for the user-assigned managed identity."
                                },
                                "scope": {
                                  "type": "string",
                                  "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
                                },
                                "tenantId": {
                                  "type": "string",
                                  "description": "Tenant ID."
                                }
                              },
                              "required": [
                                "clientId",
                                "tenantId"
                              ]
                            }
                          },
                          "required": [
                            "method"
                          ]
                        },
                        "database": {
                          "type": "string",
                          "description": "Database name."
                        },
                        "host": {
                          "type": "string",
                          "description": "Host of the Azure Data Explorer in the form of <cluster>.<region>.kusto.windows.net .",
                          "pattern": ".+\\..+\\.kusto\\.windows\\.net"
                        },
                        "batching": {
                          "description": "Azure Data Explorer endpoint batching configuration.",
                          "type": "object",
                          "properties": {
                            "latencySeconds": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Batching latency in seconds.",
                              "default": 60,
                              "minimum": 0,
                              "maximum": 65535
                            },
                            "maxMessages": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Maximum number of messages in a batch.",
                              "default": 100000,
                              "minimum": 0,
                              "maximum": 4294967295
                            }
                          }
                        }
                      },
                      "required": [
                        "authentication",
                        "database",
                        "host"
                      ]
                    },
                    "dataLakeStorageSettings": {
                      "description": "Azure Data Lake endpoint.",
                      "type": "object",
                      "properties": {
                        "authentication": {
                          "description": "Authentication configuration. NOTE - only authentication property is allowed per entry.",
                          "type": "object",
                          "properties": {
                            "method": {
                              "description": "Mode of Authentication.",
                              "type": "string",
                              "enum": [
                                "SystemAssignedManagedIdentity",
                                "UserAssignedManagedIdentity",
                                "AccessToken"
                              ],
                              "x-ms-enum": {
                                "name": "DataLakeStorageAuthMethod",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "SystemAssignedManagedIdentity",
                                    "value": "SystemAssignedManagedIdentity",
                                    "description": "SystemAssignedManagedIdentity type"
                                  },
                                  {
                                    "name": "UserAssignedManagedIdentity",
                                    "value": "UserAssignedManagedIdentity",
                                    "description": "UserAssignedManagedIdentity type"
                                  },
                                  {
                                    "name": "AccessToken",
                                    "value": "AccessToken",
                                    "description": "AccessToken Option"
                                  }
                                ]
                              }
                            },
                            "accessTokenSettings": {
                              "description": "SAS token authentication.",
                              "type": "object",
                              "properties": {
                                "secretRef": {
                                  "type": "string",
                                  "description": "Token secret name."
                                }
                              },
                              "required": [
                                "secretRef"
                              ]
                            },
                            "systemAssignedManagedIdentitySettings": {
                              "description": "System-assigned managed identity authentication.",
                              "type": "object",
                              "properties": {
                                "audience": {
                                  "type": "string",
                                  "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
                                }
                              }
                            },
                            "userAssignedManagedIdentitySettings": {
                              "description": "User-assigned managed identity authentication.",
                              "type": "object",
                              "properties": {
                                "clientId": {
                                  "type": "string",
                                  "description": "Client ID for the user-assigned managed identity."
                                },
                                "scope": {
                                  "type": "string",
                                  "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
                                },
                                "tenantId": {
                                  "type": "string",
                                  "description": "Tenant ID."
                                }
                              },
                              "required": [
                                "clientId",
                                "tenantId"
                              ]
                            }
                          },
                          "required": [
                            "method"
                          ]
                        },
                        "host": {
                          "type": "string",
                          "description": "Host of the Azure Data Lake in the form of <account>.blob.core.windows.net .",
                          "pattern": ".+\\.blob\\.core\\.windows\\.net"
                        },
                        "batching": {
                          "description": "Azure Data Lake endpoint batching configuration.",
                          "type": "object",
                          "properties": {
                            "latencySeconds": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Batching latency in seconds.",
                              "default": 60,
                              "minimum": 0,
                              "maximum": 65535
                            },
                            "maxMessages": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Maximum number of messages in a batch.",
                              "default": 100000,
                              "minimum": 0,
                              "maximum": 4294967295
                            }
                          }
                        }
                      },
                      "required": [
                        "authentication",
                        "host"
                      ]
                    },
                    "fabricOneLakeSettings": {
                      "description": "Microsoft Fabric endpoint.",
                      "type": "object",
                      "properties": {
                        "authentication": {
                          "description": "Authentication configuration. NOTE - only one authentication property is allowed per entry.",
                          "type": "object",
                          "properties": {
                            "method": {
                              "description": "Mode of Authentication.",
                              "x-nullable": false,
                              "type": "string",
                              "enum": [
                                "SystemAssignedManagedIdentity",
                                "UserAssignedManagedIdentity"
                              ],
                              "x-ms-enum": {
                                "name": "ManagedIdentityMethod",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "SystemAssignedManagedIdentity",
                                    "value": "SystemAssignedManagedIdentity",
                                    "description": "SystemAssignedManagedIdentity type"
                                  },
                                  {
                                    "name": "UserAssignedManagedIdentity",
                                    "value": "UserAssignedManagedIdentity",
                                    "description": "UserAssignedManagedIdentity type"
                                  }
                                ]
                              }
                            },
                            "systemAssignedManagedIdentitySettings": {
                              "description": "System-assigned managed identity authentication.",
                              "type": "object",
                              "properties": {
                                "audience": {
                                  "type": "string",
                                  "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
                                }
                              }
                            },
                            "userAssignedManagedIdentitySettings": {
                              "description": "User-assigned managed identity authentication.",
                              "type": "object",
                              "properties": {
                                "clientId": {
                                  "type": "string",
                                  "description": "Client ID for the user-assigned managed identity."
                                },
                                "scope": {
                                  "type": "string",
                                  "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
                                },
                                "tenantId": {
                                  "type": "string",
                                  "description": "Tenant ID."
                                }
                              },
                              "required": [
                                "clientId",
                                "tenantId"
                              ]
                            }
                          },
                          "required": [
                            "method"
                          ]
                        },
                        "names": {
                          "description": "Names of the workspace and lakehouse.",
                          "type": "object",
                          "properties": {
                            "lakehouseName": {
                              "type": "string",
                              "description": "Lakehouse name."
                            },
                            "workspaceName": {
                              "type": "string",
                              "description": "Workspace name."
                            }
                          },
                          "required": [
                            "lakehouseName",
                            "workspaceName"
                          ]
                        },
                        "oneLakePathType": {
                          "description": "Type of location of the data in the workspace. Can be either tables or files.",
                          "type": "string",
                          "enum": [
                            "Files",
                            "Tables"
                          ],
                          "x-ms-enum": {
                            "name": "DataflowEndpointFabricPathType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Files",
                                "value": "Files",
                                "description": "FILES Type"
                              },
                              {
                                "name": "Tables",
                                "value": "Tables",
                                "description": "TABLES Type"
                              }
                            ]
                          }
                        },
                        "host": {
                          "type": "string",
                          "description": "Host of the Microsoft Fabric in the form of https://<host>.fabric.microsoft.com.",
                          "pattern": ".+\\.fabric\\.microsoft\\.com"
                        },
                        "batching": {
                          "description": "Batching configuration.",
                          "type": "object",
                          "properties": {
                            "latencySeconds": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Batching latency in seconds.",
                              "default": 60,
                              "minimum": 0,
                              "maximum": 65535
                            },
                            "maxMessages": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Maximum number of messages in a batch.",
                              "default": 100000,
                              "minimum": 0,
                              "maximum": 4294967295
                            }
                          }
                        }
                      },
                      "required": [
                        "authentication",
                        "names",
                        "oneLakePathType",
                        "host"
                      ]
                    },
                    "kafkaSettings": {
                      "description": "Kafka endpoint.",
                      "type": "object",
                      "properties": {
                        "authentication": {
                          "description": "Authentication configuration. NOTE - only authentication property is allowed per entry.",
                          "type": "object",
                          "properties": {
                            "method": {
                              "description": "Mode of Authentication.",
                              "type": "string",
                              "enum": [
                                "SystemAssignedManagedIdentity",
                                "UserAssignedManagedIdentity",
                                "Sasl",
                                "X509Certificate",
                                "Anonymous"
                              ],
                              "x-ms-enum": {
                                "name": "KafkaAuthMethod",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "SystemAssignedManagedIdentity",
                                    "value": "SystemAssignedManagedIdentity",
                                    "description": "SystemAssignedManagedIdentity type"
                                  },
                                  {
                                    "name": "UserAssignedManagedIdentity",
                                    "value": "UserAssignedManagedIdentity",
                                    "description": "UserAssignedManagedIdentity type"
                                  },
                                  {
                                    "name": "Sasl",
                                    "value": "Sasl",
                                    "description": "Sasl Option"
                                  },
                                  {
                                    "name": "X509Certificate",
                                    "value": "X509Certificate",
                                    "description": "x509Certificate Option"
                                  },
                                  {
                                    "name": "Anonymous",
                                    "value": "Anonymous",
                                    "description": "Anonymous Option"
                                  }
                                ]
                              }
                            },
                            "systemAssignedManagedIdentitySettings": {
                              "description": "System-assigned managed identity authentication.",
                              "type": "object",
                              "properties": {
                                "audience": {
                                  "type": "string",
                                  "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
                                }
                              }
                            },
                            "userAssignedManagedIdentitySettings": {
                              "description": "User-assigned managed identity authentication.",
                              "type": "object",
                              "properties": {
                                "clientId": {
                                  "type": "string",
                                  "description": "Client ID for the user-assigned managed identity."
                                },
                                "scope": {
                                  "type": "string",
                                  "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
                                },
                                "tenantId": {
                                  "type": "string",
                                  "description": "Tenant ID."
                                }
                              },
                              "required": [
                                "clientId",
                                "tenantId"
                              ]
                            },
                            "saslSettings": {
                              "description": "SASL authentication.",
                              "type": "object",
                              "properties": {
                                "saslType": {
                                  "description": "Type of SASL authentication. Can be PLAIN, SCRAM-SHA-256, or SCRAM-SHA-512.",
                                  "type": "string",
                                  "enum": [
                                    "Plain",
                                    "ScramSha256",
                                    "ScramSha512"
                                  ],
                                  "x-ms-enum": {
                                    "name": "DataflowEndpointAuthenticationSaslType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Plain",
                                        "value": "Plain",
                                        "description": "PLAIN Type"
                                      },
                                      {
                                        "name": "ScramSha256",
                                        "value": "ScramSha256",
                                        "description": "SCRAM_SHA_256 Type"
                                      },
                                      {
                                        "name": "ScramSha512",
                                        "value": "ScramSha512",
                                        "description": "SCRAM_SHA_512 Type"
                                      }
                                    ]
                                  }
                                },
                                "secretRef": {
                                  "type": "string",
                                  "description": "Token secret name."
                                }
                              },
                              "required": [
                                "saslType",
                                "secretRef"
                              ]
                            },
                            "x509CertificateSettings": {
                              "description": "X.509 certificate authentication.",
                              "type": "object",
                              "properties": {
                                "secretRef": {
                                  "type": "string",
                                  "description": "Secret reference of the X.509 certificate."
                                }
                              },
                              "required": [
                                "secretRef"
                              ]
                            }
                          },
                          "required": [
                            "method"
                          ]
                        },
                        "consumerGroupId": {
                          "type": "string",
                          "description": "Consumer group ID."
                        },
                        "host": {
                          "type": "string",
                          "description": "Kafka endpoint host."
                        },
                        "batching": {
                          "description": "Batching configuration.",
                          "type": "object",
                          "properties": {
                            "mode": {
                              "type": "string",
                              "description": "Mode for batching.",
                              "default": "Enabled",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "OperationalMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled",
                                    "description": "Enabled is equivalent to True"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled",
                                    "description": "Disabled is equivalent to False."
                                  }
                                ]
                              }
                            },
                            "latencyMs": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Batching latency in milliseconds.",
                              "default": 5,
                              "minimum": 0,
                              "maximum": 65535
                            },
                            "maxBytes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Maximum number of bytes in a batch.",
                              "default": 1000000,
                              "minimum": 0,
                              "maximum": 4294967295
                            },
                            "maxMessages": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Maximum number of messages in a batch.",
                              "default": 100000,
                              "minimum": 0,
                              "maximum": 4294967295
                            }
                          }
                        },
                        "copyMqttProperties": {
                          "type": "string",
                          "description": "Copy Broker properties. No effect if the endpoint is used as a source or if the dataflow doesn't have an Broker source.",
                          "default": "Enabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "OperationalMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "Enabled is equivalent to True"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "Disabled is equivalent to False."
                              }
                            ]
                          }
                        },
                        "compression": {
                          "type": "string",
                          "description": "Compression. Can be none, gzip, lz4, or snappy. No effect if the endpoint is used as a source.",
                          "default": "None",
                          "enum": [
                            "None",
                            "Gzip",
                            "Snappy",
                            "Lz4"
                          ],
                          "x-ms-enum": {
                            "name": "DataflowEndpointKafkaCompression",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "None",
                                "value": "None",
                                "description": "NONE Option"
                              },
                              {
                                "name": "Gzip",
                                "value": "Gzip",
                                "description": "Gzip Option"
                              },
                              {
                                "name": "Snappy",
                                "value": "Snappy",
                                "description": "SNAPPY Option"
                              },
                              {
                                "name": "Lz4",
                                "value": "Lz4",
                                "description": "LZ4 Option"
                              }
                            ]
                          }
                        },
                        "kafkaAcks": {
                          "type": "string",
                          "description": "Kafka acks. Can be all, one, or zero. No effect if the endpoint is used as a source.",
                          "default": "All",
                          "enum": [
                            "Zero",
                            "One",
                            "All"
                          ],
                          "x-ms-enum": {
                            "name": "DataflowEndpointKafkaAcks",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Zero",
                                "value": "Zero",
                                "description": "ZERO Option"
                              },
                              {
                                "name": "One",
                                "value": "One",
                                "description": "ONE Option"
                              },
                              {
                                "name": "All",
                                "value": "All",
                                "description": "ALL Option"
                              }
                            ]
                          }
                        },
                        "partitionStrategy": {
                          "type": "string",
                          "description": "Partition handling strategy. Can be default or static. No effect if the endpoint is used as a source.",
                          "default": "Default",
                          "enum": [
                            "Default",
                            "Static",
                            "Topic",
                            "Property"
                          ],
                          "x-ms-enum": {
                            "name": "DataflowEndpointKafkaPartitionStrategy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Default",
                                "value": "Default",
                                "description": "Default: Assigns messages to random partitions, using a round-robin algorithm."
                              },
                              {
                                "name": "Static",
                                "value": "Static",
                                "description": "Static: Assigns messages to a fixed partition number that's derived from the instance ID of the dataflow."
                              },
                              {
                                "name": "Topic",
                                "value": "Topic",
                                "description": "TOPIC Option"
                              },
                              {
                                "name": "Property",
                                "value": "Property",
                                "description": "PROPERTY Option"
                              }
                            ]
                          }
                        },
                        "tls": {
                          "description": "TLS configuration.",
                          "type": "object",
                          "properties": {
                            "mode": {
                              "type": "string",
                              "description": "Mode for TLS.",
                              "default": "Enabled",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "OperationalMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled",
                                    "description": "Enabled is equivalent to True"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled",
                                    "description": "Disabled is equivalent to False."
                                  }
                                ]
                              }
                            },
                            "trustedCaCertificateConfigMapRef": {
                              "type": "string",
                              "description": "Trusted CA certificate config map."
                            }
                          }
                        },
                        "cloudEventAttributes": {
                          "description": "Cloud event mapping config.",
                          "type": "string",
                          "enum": [
                            "Propagate",
                            "CreateOrRemap"
                          ],
                          "x-ms-enum": {
                            "name": "CloudEventAttributeType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Propagate",
                                "value": "Propagate",
                                "description": "Propagate type"
                              },
                              {
                                "name": "CreateOrRemap",
                                "value": "CreateOrRemap",
                                "description": "CreateOrRemap type"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "authentication",
                        "host"
                      ]
                    },
                    "localStorageSettings": {
                      "description": "Local persistent volume endpoint.",
                      "type": "object",
                      "properties": {
                        "persistentVolumeClaimRef": {
                          "type": "string",
                          "description": "Persistent volume claim name."
                        }
                      },
                      "required": [
                        "persistentVolumeClaimRef"
                      ]
                    },
                    "mqttSettings": {
                      "description": "Broker endpoint.",
                      "type": "object",
                      "properties": {
                        "authentication": {
                          "description": "authentication properties. DEFAULT: kubernetes.audience=aio-internal. NOTE - Enum field only property is allowed",
                          "type": "object",
                          "properties": {
                            "method": {
                              "description": "Mode of Authentication.",
                              "type": "string",
                              "enum": [
                                "SystemAssignedManagedIdentity",
                                "UserAssignedManagedIdentity",
                                "ServiceAccountToken",
                                "X509Certificate",
                                "Anonymous"
                              ],
                              "x-ms-enum": {
                                "name": "MqttAuthMethod",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "SystemAssignedManagedIdentity",
                                    "value": "SystemAssignedManagedIdentity",
                                    "description": "SystemAssignedManagedIdentity type"
                                  },
                                  {
                                    "name": "UserAssignedManagedIdentity",
                                    "value": "UserAssignedManagedIdentity",
                                    "description": "UserAssignedManagedIdentity type"
                                  },
                                  {
                                    "name": "ServiceAccountToken",
                                    "value": "ServiceAccountToken",
                                    "description": "ServiceAccountToken Option"
                                  },
                                  {
                                    "name": "X509Certificate",
                                    "value": "X509Certificate",
                                    "description": "x509Certificate Option"
                                  },
                                  {
                                    "name": "Anonymous",
                                    "value": "Anonymous",
                                    "description": "Anonymous Option"
                                  }
                                ]
                              }
                            },
                            "systemAssignedManagedIdentitySettings": {
                              "description": "System-assigned managed identity authentication.",
                              "type": "object",
                              "properties": {
                                "audience": {
                                  "type": "string",
                                  "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
                                }
                              }
                            },
                            "userAssignedManagedIdentitySettings": {
                              "description": "User-assigned managed identity authentication.",
                              "type": "object",
                              "properties": {
                                "clientId": {
                                  "type": "string",
                                  "description": "Client ID for the user-assigned managed identity."
                                },
                                "scope": {
                                  "type": "string",
                                  "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
                                },
                                "tenantId": {
                                  "type": "string",
                                  "description": "Tenant ID."
                                }
                              },
                              "required": [
                                "clientId",
                                "tenantId"
                              ]
                            },
                            "serviceAccountTokenSettings": {
                              "description": "Kubernetes service account token authentication. Default audience if not set is aio-internal",
                              "type": "object",
                              "properties": {
                                "audience": {
                                  "type": "string",
                                  "description": "Audience of the service account. Optional, defaults to the broker internal service account audience."
                                }
                              },
                              "required": [
                                "audience"
                              ]
                            },
                            "x509CertificateSettings": {
                              "description": "X.509 certificate authentication.",
                              "type": "object",
                              "properties": {
                                "secretRef": {
                                  "type": "string",
                                  "description": "Secret reference of the X.509 certificate."
                                }
                              },
                              "required": [
                                "secretRef"
                              ]
                            }
                          },
                          "required": [
                            "method"
                          ]
                        },
                        "clientIdPrefix": {
                          "type": "string",
                          "description": "Client ID prefix. Client ID generated by the dataflow is <prefix>-TBD. Optional; no prefix if omitted."
                        },
                        "host": {
                          "type": "string",
                          "description": "Host of the Broker in the form of <hostname>:<port>. Optional; connects to Broker if omitted."
                        },
                        "protocol": {
                          "type": "string",
                          "description": "Enable or disable websockets.",
                          "default": "Mqtt",
                          "enum": [
                            "Mqtt",
                            "WebSockets"
                          ],
                          "x-ms-enum": {
                            "name": "BrokerProtocolType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Mqtt",
                                "value": "Mqtt",
                                "description": "protocol broker"
                              },
                              {
                                "name": "WebSockets",
                                "value": "WebSockets",
                                "description": "protocol websocket"
                              }
                            ]
                          }
                        },
                        "keepAliveSeconds": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Broker KeepAlive for connection in seconds.",
                          "default": 60,
                          "minimum": 0
                        },
                        "retain": {
                          "type": "string",
                          "description": "Whether or not to keep the retain setting.",
                          "default": "Keep",
                          "enum": [
                            "Keep",
                            "Never"
                          ],
                          "x-ms-enum": {
                            "name": "MqttRetainType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Keep",
                                "value": "Keep",
                                "description": "Retain the messages."
                              },
                              {
                                "name": "Never",
                                "value": "Never",
                                "description": "Never retain messages."
                              }
                            ]
                          }
                        },
                        "maxInflightMessages": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The max number of messages to keep in flight. For subscribe, this is the receive maximum. For publish, this is the maximum number of messages to send before waiting for an ack.",
                          "default": 100,
                          "minimum": 0
                        },
                        "qos": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Qos for Broker connection.",
                          "default": 1,
                          "minimum": 0,
                          "maximum": 1
                        },
                        "sessionExpirySeconds": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Session expiry in seconds.",
                          "minimum": 0
                        },
                        "tls": {
                          "description": "TLS configuration.",
                          "type": "object",
                          "properties": {
                            "mode": {
                              "type": "string",
                              "description": "Mode for TLS.",
                              "default": "Enabled",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "OperationalMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled",
                                    "description": "Enabled is equivalent to True"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled",
                                    "description": "Disabled is equivalent to False."
                                  }
                                ]
                              }
                            },
                            "trustedCaCertificateConfigMapRef": {
                              "type": "string",
                              "description": "Trusted CA certificate config map."
                            }
                          }
                        },
                        "cloudEventAttributes": {
                          "description": "Cloud event mapping config.",
                          "type": "string",
                          "enum": [
                            "Propagate",
                            "CreateOrRemap"
                          ],
                          "x-ms-enum": {
                            "name": "CloudEventAttributeType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Propagate",
                                "value": "Propagate",
                                "description": "Propagate type"
                              },
                              {
                                "name": "CreateOrRemap",
                                "value": "CreateOrRemap",
                                "description": "CreateOrRemap type"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "authentication"
                      ]
                    },
                    "openTelemetrySettings": {
                      "description": "OpenTelemetry endpoint.",
                      "type": "object",
                      "properties": {
                        "host": {
                          "type": "string",
                          "description": "Host of the OpenTelemetry in the form of <host>:<port>."
                        },
                        "batching": {
                          "description": "Batching configuration.",
                          "type": "object",
                          "properties": {
                            "latencySeconds": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Batching latency in seconds.",
                              "default": 60,
                              "minimum": 0,
                              "maximum": 65535
                            },
                            "maxMessages": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Maximum number of messages in a batch.",
                              "default": 100000,
                              "minimum": 0,
                              "maximum": 4294967295
                            }
                          }
                        },
                        "tls": {
                          "description": "TLS configuration.",
                          "type": "object",
                          "properties": {
                            "mode": {
                              "type": "string",
                              "description": "Mode for TLS.",
                              "default": "Enabled",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "OperationalMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled",
                                    "description": "Enabled is equivalent to True"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled",
                                    "description": "Disabled is equivalent to False."
                                  }
                                ]
                              }
                            },
                            "trustedCaCertificateConfigMapRef": {
                              "type": "string",
                              "description": "Trusted CA certificate config map."
                            }
                          }
                        },
                        "authentication": {
                          "description": "Authentication properties for OpenTelemetry endpoints",
                          "type": "object",
                          "properties": {
                            "method": {
                              "description": "The authentication method.",
                              "type": "string",
                              "enum": [
                                "ServiceAccountToken",
                                "X509Certificate",
                                "Anonymous"
                              ],
                              "x-ms-enum": {
                                "name": "DataflowOpenTelemetryAuthenticationMethod",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "ServiceAccountToken",
                                    "value": "ServiceAccountToken",
                                    "description": "Uses serviceaccount token."
                                  },
                                  {
                                    "name": "X509Certificate",
                                    "value": "X509Certificate",
                                    "description": "Uses x509 certificate."
                                  },
                                  {
                                    "name": "Anonymous",
                                    "value": "Anonymous",
                                    "description": "Connects anonymously."
                                  }
                                ]
                              }
                            }
                          },
                          "discriminator": "method",
                          "required": [
                            "method"
                          ]
                        }
                      },
                      "required": [
                        "host",
                        "authentication"
                      ]
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is getting provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Resource is Updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is Deleting."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been Accepted."
                          }
                        ]
                      }
                    },
                    "healthState": {
                      "type": "string",
                      "description": "The health state of the resource.",
                      "default": "Unknown",
                      "enum": [
                        "Available",
                        "Degraded",
                        "Unavailable",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceHealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "Resource is Available and functioning as expected."
                          },
                          {
                            "name": "Degraded",
                            "value": "Degraded",
                            "description": "Resource health is degraded."
                          },
                          {
                            "name": "Unavailable",
                            "value": "Unavailable",
                            "description": "Resource is not functioning as expected."
                          },
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "Resource state is unknown."
                          }
                        ]
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "endpointType"
                  ]
                },
                "extendedLocation": {
                  "description": "Edge location of the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "Type of ExtendedLocation.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "CustomLocation type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Resource 'DataflowEndpointResource' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Instance dataflowEndpoint resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "endpointType": {
                      "description": "Endpoint Type.",
                      "type": "string",
                      "enum": [
                        "DataExplorer",
                        "DataLakeStorage",
                        "FabricOneLake",
                        "Kafka",
                        "LocalStorage",
                        "Mqtt",
                        "OpenTelemetry"
                      ],
                      "x-ms-enum": {
                        "name": "EndpointType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "DataExplorer",
                            "value": "DataExplorer",
                            "description": "Azure Data Explorer Type"
                          },
                          {
                            "name": "DataLakeStorage",
                            "value": "DataLakeStorage",
                            "description": "Azure Data Lake Type"
                          },
                          {
                            "name": "FabricOneLake",
                            "value": "FabricOneLake",
                            "description": "Microsoft Fabric Type"
                          },
                          {
                            "name": "Kafka",
                            "value": "Kafka",
                            "description": "Kafka Type"
                          },
                          {
                            "name": "LocalStorage",
                            "value": "LocalStorage",
                            "description": "Local Storage Type"
                          },
                          {
                            "name": "Mqtt",
                            "value": "Mqtt",
                            "description": "Broker Type"
                          },
                          {
                            "name": "OpenTelemetry",
                            "value": "OpenTelemetry",
                            "description": "OpenTelemetry Type"
                          }
                        ]
                      }
                    },
                    "hostType": {
                      "description": "The type of the Kafka host. E.g FabricRT, EventGrid.",
                      "type": "string",
                      "enum": [
                        "FabricRT",
                        "EventGrid",
                        "LocalBroker",
                        "Eventhub",
                        "CustomMqtt",
                        "CustomKafka"
                      ],
                      "x-ms-enum": {
                        "name": "DataflowEndpointHostType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "FabricRT",
                            "value": "FabricRT",
                            "description": "Fabric Real-Time Type"
                          },
                          {
                            "name": "EventGrid",
                            "value": "EventGrid",
                            "description": "EventGrid Type"
                          },
                          {
                            "name": "LocalBroker",
                            "value": "LocalBroker",
                            "description": "Local MQTT Type"
                          },
                          {
                            "name": "Eventhub",
                            "value": "Eventhub",
                            "description": "EventHub Type"
                          },
                          {
                            "name": "CustomMqtt",
                            "value": "CustomMqtt",
                            "description": "Custom MQTT Type"
                          },
                          {
                            "name": "CustomKafka",
                            "value": "CustomKafka",
                            "description": "Custom Kafka Type"
                          }
                        ]
                      }
                    },
                    "dataExplorerSettings": {
                      "description": "Azure Data Explorer endpoint.",
                      "type": "object",
                      "properties": {
                        "authentication": {
                          "description": "Authentication configuration. NOTE - only authentication property is allowed per entry.",
                          "type": "object",
                          "properties": {
                            "method": {
                              "description": "Mode of Authentication.",
                              "x-nullable": false,
                              "type": "string",
                              "enum": [
                                "SystemAssignedManagedIdentity",
                                "UserAssignedManagedIdentity"
                              ],
                              "x-ms-enum": {
                                "name": "ManagedIdentityMethod",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "SystemAssignedManagedIdentity",
                                    "value": "SystemAssignedManagedIdentity",
                                    "description": "SystemAssignedManagedIdentity type"
                                  },
                                  {
                                    "name": "UserAssignedManagedIdentity",
                                    "value": "UserAssignedManagedIdentity",
                                    "description": "UserAssignedManagedIdentity type"
                                  }
                                ]
                              }
                            },
                            "systemAssignedManagedIdentitySettings": {
                              "description": "System-assigned managed identity authentication.",
                              "type": "object",
                              "properties": {
                                "audience": {
                                  "type": "string",
                                  "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
                                }
                              }
                            },
                            "userAssignedManagedIdentitySettings": {
                              "description": "User-assigned managed identity authentication.",
                              "type": "object",
                              "properties": {
                                "clientId": {
                                  "type": "string",
                                  "description": "Client ID for the user-assigned managed identity."
                                },
                                "scope": {
                                  "type": "string",
                                  "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
                                },
                                "tenantId": {
                                  "type": "string",
                                  "description": "Tenant ID."
                                }
                              },
                              "required": [
                                "clientId",
                                "tenantId"
                              ]
                            }
                          },
                          "required": [
                            "method"
                          ]
                        },
                        "database": {
                          "type": "string",
                          "description": "Database name."
                        },
                        "host": {
                          "type": "string",
                          "description": "Host of the Azure Data Explorer in the form of <cluster>.<region>.kusto.windows.net .",
                          "pattern": ".+\\..+\\.kusto\\.windows\\.net"
                        },
                        "batching": {
                          "description": "Azure Data Explorer endpoint batching configuration.",
                          "type": "object",
                          "properties": {
                            "latencySeconds": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Batching latency in seconds.",
                              "default": 60,
                              "minimum": 0,
                              "maximum": 65535
                            },
                            "maxMessages": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Maximum number of messages in a batch.",
                              "default": 100000,
                              "minimum": 0,
                              "maximum": 4294967295
                            }
                          }
                        }
                      },
                      "required": [
                        "authentication",
                        "database",
                        "host"
                      ]
                    },
                    "dataLakeStorageSettings": {
                      "description": "Azure Data Lake endpoint.",
                      "type": "object",
                      "properties": {
                        "authentication": {
                          "description": "Authentication configuration. NOTE - only authentication property is allowed per entry.",
                          "type": "object",
                          "properties": {
                            "method": {
                              "description": "Mode of Authentication.",
                              "type": "string",
                              "enum": [
                                "SystemAssignedManagedIdentity",
                                "UserAssignedManagedIdentity",
                                "AccessToken"
                              ],
                              "x-ms-enum": {
                                "name": "DataLakeStorageAuthMethod",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "SystemAssignedManagedIdentity",
                                    "value": "SystemAssignedManagedIdentity",
                                    "description": "SystemAssignedManagedIdentity type"
                                  },
                                  {
                                    "name": "UserAssignedManagedIdentity",
                                    "value": "UserAssignedManagedIdentity",
                                    "description": "UserAssignedManagedIdentity type"
                                  },
                                  {
                                    "name": "AccessToken",
                                    "value": "AccessToken",
                                    "description": "AccessToken Option"
                                  }
                                ]
                              }
                            },
                            "accessTokenSettings": {
                              "description": "SAS token authentication.",
                              "type": "object",
                              "properties": {
                                "secretRef": {
                                  "type": "string",
                                  "description": "Token secret name."
                                }
                              },
                              "required": [
                                "secretRef"
                              ]
                            },
                            "systemAssignedManagedIdentitySettings": {
                              "description": "System-assigned managed identity authentication.",
                              "type": "object",
                              "properties": {
                                "audience": {
                                  "type": "string",
                                  "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
                                }
                              }
                            },
                            "userAssignedManagedIdentitySettings": {
                              "description": "User-assigned managed identity authentication.",
                              "type": "object",
                              "properties": {
                                "clientId": {
                                  "type": "string",
                                  "description": "Client ID for the user-assigned managed identity."
                                },
                                "scope": {
                                  "type": "string",
                                  "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
                                },
                                "tenantId": {
                                  "type": "string",
                                  "description": "Tenant ID."
                                }
                              },
                              "required": [
                                "clientId",
                                "tenantId"
                              ]
                            }
                          },
                          "required": [
                            "method"
                          ]
                        },
                        "host": {
                          "type": "string",
                          "description": "Host of the Azure Data Lake in the form of <account>.blob.core.windows.net .",
                          "pattern": ".+\\.blob\\.core\\.windows\\.net"
                        },
                        "batching": {
                          "description": "Azure Data Lake endpoint batching configuration.",
                          "type": "object",
                          "properties": {
                            "latencySeconds": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Batching latency in seconds.",
                              "default": 60,
                              "minimum": 0,
                              "maximum": 65535
                            },
                            "maxMessages": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Maximum number of messages in a batch.",
                              "default": 100000,
                              "minimum": 0,
                              "maximum": 4294967295
                            }
                          }
                        }
                      },
                      "required": [
                        "authentication",
                        "host"
                      ]
                    },
                    "fabricOneLakeSettings": {
                      "description": "Microsoft Fabric endpoint.",
                      "type": "object",
                      "properties": {
                        "authentication": {
                          "description": "Authentication configuration. NOTE - only one authentication property is allowed per entry.",
                          "type": "object",
                          "properties": {
                            "method": {
                              "description": "Mode of Authentication.",
                              "x-nullable": false,
                              "type": "string",
                              "enum": [
                                "SystemAssignedManagedIdentity",
                                "UserAssignedManagedIdentity"
                              ],
                              "x-ms-enum": {
                                "name": "ManagedIdentityMethod",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "SystemAssignedManagedIdentity",
                                    "value": "SystemAssignedManagedIdentity",
                                    "description": "SystemAssignedManagedIdentity type"
                                  },
                                  {
                                    "name": "UserAssignedManagedIdentity",
                                    "value": "UserAssignedManagedIdentity",
                                    "description": "UserAssignedManagedIdentity type"
                                  }
                                ]
                              }
                            },
                            "systemAssignedManagedIdentitySettings": {
                              "description": "System-assigned managed identity authentication.",
                              "type": "object",
                              "properties": {
                                "audience": {
                                  "type": "string",
                                  "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
                                }
                              }
                            },
                            "userAssignedManagedIdentitySettings": {
                              "description": "User-assigned managed identity authentication.",
                              "type": "object",
                              "properties": {
                                "clientId": {
                                  "type": "string",
                                  "description": "Client ID for the user-assigned managed identity."
                                },
                                "scope": {
                                  "type": "string",
                                  "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
                                },
                                "tenantId": {
                                  "type": "string",
                                  "description": "Tenant ID."
                                }
                              },
                              "required": [
                                "clientId",
                                "tenantId"
                              ]
                            }
                          },
                          "required": [
                            "method"
                          ]
                        },
                        "names": {
                          "description": "Names of the workspace and lakehouse.",
                          "type": "object",
                          "properties": {
                            "lakehouseName": {
                              "type": "string",
                              "description": "Lakehouse name."
                            },
                            "workspaceName": {
                              "type": "string",
                              "description": "Workspace name."
                            }
                          },
                          "required": [
                            "lakehouseName",
                            "workspaceName"
                          ]
                        },
                        "oneLakePathType": {
                          "description": "Type of location of the data in the workspace. Can be either tables or files.",
                          "type": "string",
                          "enum": [
                            "Files",
                            "Tables"
                          ],
                          "x-ms-enum": {
                            "name": "DataflowEndpointFabricPathType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Files",
                                "value": "Files",
                                "description": "FILES Type"
                              },
                              {
                                "name": "Tables",
                                "value": "Tables",
                                "description": "TABLES Type"
                              }
                            ]
                          }
                        },
                        "host": {
                          "type": "string",
                          "description": "Host of the Microsoft Fabric in the form of https://<host>.fabric.microsoft.com.",
                          "pattern": ".+\\.fabric\\.microsoft\\.com"
                        },
                        "batching": {
                          "description": "Batching configuration.",
                          "type": "object",
                          "properties": {
                            "latencySeconds": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Batching latency in seconds.",
                              "default": 60,
                              "minimum": 0,
                              "maximum": 65535
                            },
                            "maxMessages": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Maximum number of messages in a batch.",
                              "default": 100000,
                              "minimum": 0,
                              "maximum": 4294967295
                            }
                          }
                        }
                      },
                      "required": [
                        "authentication",
                        "names",
                        "oneLakePathType",
                        "host"
                      ]
                    },
                    "kafkaSettings": {
                      "description": "Kafka endpoint.",
                      "type": "object",
                      "properties": {
                        "authentication": {
                          "description": "Authentication configuration. NOTE - only authentication property is allowed per entry.",
                          "type": "object",
                          "properties": {
                            "method": {
                              "description": "Mode of Authentication.",
                              "type": "string",
                              "enum": [
                                "SystemAssignedManagedIdentity",
                                "UserAssignedManagedIdentity",
                                "Sasl",
                                "X509Certificate",
                                "Anonymous"
                              ],
                              "x-ms-enum": {
                                "name": "KafkaAuthMethod",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "SystemAssignedManagedIdentity",
                                    "value": "SystemAssignedManagedIdentity",
                                    "description": "SystemAssignedManagedIdentity type"
                                  },
                                  {
                                    "name": "UserAssignedManagedIdentity",
                                    "value": "UserAssignedManagedIdentity",
                                    "description": "UserAssignedManagedIdentity type"
                                  },
                                  {
                                    "name": "Sasl",
                                    "value": "Sasl",
                                    "description": "Sasl Option"
                                  },
                                  {
                                    "name": "X509Certificate",
                                    "value": "X509Certificate",
                                    "description": "x509Certificate Option"
                                  },
                                  {
                                    "name": "Anonymous",
                                    "value": "Anonymous",
                                    "description": "Anonymous Option"
                                  }
                                ]
                              }
                            },
                            "systemAssignedManagedIdentitySettings": {
                              "description": "System-assigned managed identity authentication.",
                              "type": "object",
                              "properties": {
                                "audience": {
                                  "type": "string",
                                  "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
                                }
                              }
                            },
                            "userAssignedManagedIdentitySettings": {
                              "description": "User-assigned managed identity authentication.",
                              "type": "object",
                              "properties": {
                                "clientId": {
                                  "type": "string",
                                  "description": "Client ID for the user-assigned managed identity."
                                },
                                "scope": {
                                  "type": "string",
                                  "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
                                },
                                "tenantId": {
                                  "type": "string",
                                  "description": "Tenant ID."
                                }
                              },
                              "required": [
                                "clientId",
                                "tenantId"
                              ]
                            },
                            "saslSettings": {
                              "description": "SASL authentication.",
                              "type": "object",
                              "properties": {
                                "saslType": {
                                  "description": "Type of SASL authentication. Can be PLAIN, SCRAM-SHA-256, or SCRAM-SHA-512.",
                                  "type": "string",
                                  "enum": [
                                    "Plain",
                                    "ScramSha256",
                                    "ScramSha512"
                                  ],
                                  "x-ms-enum": {
                                    "name": "DataflowEndpointAuthenticationSaslType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Plain",
                                        "value": "Plain",
                                        "description": "PLAIN Type"
                                      },
                                      {
                                        "name": "ScramSha256",
                                        "value": "ScramSha256",
                                        "description": "SCRAM_SHA_256 Type"
                                      },
                                      {
                                        "name": "ScramSha512",
                                        "value": "ScramSha512",
                                        "description": "SCRAM_SHA_512 Type"
                                      }
                                    ]
                                  }
                                },
                                "secretRef": {
                                  "type": "string",
                                  "description": "Token secret name."
                                }
                              },
                              "required": [
                                "saslType",
                                "secretRef"
                              ]
                            },
                            "x509CertificateSettings": {
                              "description": "X.509 certificate authentication.",
                              "type": "object",
                              "properties": {
                                "secretRef": {
                                  "type": "string",
                                  "description": "Secret reference of the X.509 certificate."
                                }
                              },
                              "required": [
                                "secretRef"
                              ]
                            }
                          },
                          "required": [
                            "method"
                          ]
                        },
                        "consumerGroupId": {
                          "type": "string",
                          "description": "Consumer group ID."
                        },
                        "host": {
                          "type": "string",
                          "description": "Kafka endpoint host."
                        },
                        "batching": {
                          "description": "Batching configuration.",
                          "type": "object",
                          "properties": {
                            "mode": {
                              "type": "string",
                              "description": "Mode for batching.",
                              "default": "Enabled",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "OperationalMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled",
                                    "description": "Enabled is equivalent to True"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled",
                                    "description": "Disabled is equivalent to False."
                                  }
                                ]
                              }
                            },
                            "latencyMs": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Batching latency in milliseconds.",
                              "default": 5,
                              "minimum": 0,
                              "maximum": 65535
                            },
                            "maxBytes": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Maximum number of bytes in a batch.",
                              "default": 1000000,
                              "minimum": 0,
                              "maximum": 4294967295
                            },
                            "maxMessages": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Maximum number of messages in a batch.",
                              "default": 100000,
                              "minimum": 0,
                              "maximum": 4294967295
                            }
                          }
                        },
                        "copyMqttProperties": {
                          "type": "string",
                          "description": "Copy Broker properties. No effect if the endpoint is used as a source or if the dataflow doesn't have an Broker source.",
                          "default": "Enabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "OperationalMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "Enabled is equivalent to True"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "Disabled is equivalent to False."
                              }
                            ]
                          }
                        },
                        "compression": {
                          "type": "string",
                          "description": "Compression. Can be none, gzip, lz4, or snappy. No effect if the endpoint is used as a source.",
                          "default": "None",
                          "enum": [
                            "None",
                            "Gzip",
                            "Snappy",
                            "Lz4"
                          ],
                          "x-ms-enum": {
                            "name": "DataflowEndpointKafkaCompression",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "None",
                                "value": "None",
                                "description": "NONE Option"
                              },
                              {
                                "name": "Gzip",
                                "value": "Gzip",
                                "description": "Gzip Option"
                              },
                              {
                                "name": "Snappy",
                                "value": "Snappy",
                                "description": "SNAPPY Option"
                              },
                              {
                                "name": "Lz4",
                                "value": "Lz4",
                                "description": "LZ4 Option"
                              }
                            ]
                          }
                        },
                        "kafkaAcks": {
                          "type": "string",
                          "description": "Kafka acks. Can be all, one, or zero. No effect if the endpoint is used as a source.",
                          "default": "All",
                          "enum": [
                            "Zero",
                            "One",
                            "All"
                          ],
                          "x-ms-enum": {
                            "name": "DataflowEndpointKafkaAcks",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Zero",
                                "value": "Zero",
                                "description": "ZERO Option"
                              },
                              {
                                "name": "One",
                                "value": "One",
                                "description": "ONE Option"
                              },
                              {
                                "name": "All",
                                "value": "All",
                                "description": "ALL Option"
                              }
                            ]
                          }
                        },
                        "partitionStrategy": {
                          "type": "string",
                          "description": "Partition handling strategy. Can be default or static. No effect if the endpoint is used as a source.",
                          "default": "Default",
                          "enum": [
                            "Default",
                            "Static",
                            "Topic",
                            "Property"
                          ],
                          "x-ms-enum": {
                            "name": "DataflowEndpointKafkaPartitionStrategy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Default",
                                "value": "Default",
                                "description": "Default: Assigns messages to random partitions, using a round-robin algorithm."
                              },
                              {
                                "name": "Static",
                                "value": "Static",
                                "description": "Static: Assigns messages to a fixed partition number that's derived from the instance ID of the dataflow."
                              },
                              {
                                "name": "Topic",
                                "value": "Topic",
                                "description": "TOPIC Option"
                              },
                              {
                                "name": "Property",
                                "value": "Property",
                                "description": "PROPERTY Option"
                              }
                            ]
                          }
                        },
                        "tls": {
                          "description": "TLS configuration.",
                          "type": "object",
                          "properties": {
                            "mode": {
                              "type": "string",
                              "description": "Mode for TLS.",
                              "default": "Enabled",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "OperationalMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled",
                                    "description": "Enabled is equivalent to True"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled",
                                    "description": "Disabled is equivalent to False."
                                  }
                                ]
                              }
                            },
                            "trustedCaCertificateConfigMapRef": {
                              "type": "string",
                              "description": "Trusted CA certificate config map."
                            }
                          }
                        },
                        "cloudEventAttributes": {
                          "description": "Cloud event mapping config.",
                          "type": "string",
                          "enum": [
                            "Propagate",
                            "CreateOrRemap"
                          ],
                          "x-ms-enum": {
                            "name": "CloudEventAttributeType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Propagate",
                                "value": "Propagate",
                                "description": "Propagate type"
                              },
                              {
                                "name": "CreateOrRemap",
                                "value": "CreateOrRemap",
                                "description": "CreateOrRemap type"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "authentication",
                        "host"
                      ]
                    },
                    "localStorageSettings": {
                      "description": "Local persistent volume endpoint.",
                      "type": "object",
                      "properties": {
                        "persistentVolumeClaimRef": {
                          "type": "string",
                          "description": "Persistent volume claim name."
                        }
                      },
                      "required": [
                        "persistentVolumeClaimRef"
                      ]
                    },
                    "mqttSettings": {
                      "description": "Broker endpoint.",
                      "type": "object",
                      "properties": {
                        "authentication": {
                          "description": "authentication properties. DEFAULT: kubernetes.audience=aio-internal. NOTE - Enum field only property is allowed",
                          "type": "object",
                          "properties": {
                            "method": {
                              "description": "Mode of Authentication.",
                              "type": "string",
                              "enum": [
                                "SystemAssignedManagedIdentity",
                                "UserAssignedManagedIdentity",
                                "ServiceAccountToken",
                                "X509Certificate",
                                "Anonymous"
                              ],
                              "x-ms-enum": {
                                "name": "MqttAuthMethod",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "SystemAssignedManagedIdentity",
                                    "value": "SystemAssignedManagedIdentity",
                                    "description": "SystemAssignedManagedIdentity type"
                                  },
                                  {
                                    "name": "UserAssignedManagedIdentity",
                                    "value": "UserAssignedManagedIdentity",
                                    "description": "UserAssignedManagedIdentity type"
                                  },
                                  {
                                    "name": "ServiceAccountToken",
                                    "value": "ServiceAccountToken",
                                    "description": "ServiceAccountToken Option"
                                  },
                                  {
                                    "name": "X509Certificate",
                                    "value": "X509Certificate",
                                    "description": "x509Certificate Option"
                                  },
                                  {
                                    "name": "Anonymous",
                                    "value": "Anonymous",
                                    "description": "Anonymous Option"
                                  }
                                ]
                              }
                            },
                            "systemAssignedManagedIdentitySettings": {
                              "description": "System-assigned managed identity authentication.",
                              "type": "object",
                              "properties": {
                                "audience": {
                                  "type": "string",
                                  "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
                                }
                              }
                            },
                            "userAssignedManagedIdentitySettings": {
                              "description": "User-assigned managed identity authentication.",
                              "type": "object",
                              "properties": {
                                "clientId": {
                                  "type": "string",
                                  "description": "Client ID for the user-assigned managed identity."
                                },
                                "scope": {
                                  "type": "string",
                                  "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
                                },
                                "tenantId": {
                                  "type": "string",
                                  "description": "Tenant ID."
                                }
                              },
                              "required": [
                                "clientId",
                                "tenantId"
                              ]
                            },
                            "serviceAccountTokenSettings": {
                              "description": "Kubernetes service account token authentication. Default audience if not set is aio-internal",
                              "type": "object",
                              "properties": {
                                "audience": {
                                  "type": "string",
                                  "description": "Audience of the service account. Optional, defaults to the broker internal service account audience."
                                }
                              },
                              "required": [
                                "audience"
                              ]
                            },
                            "x509CertificateSettings": {
                              "description": "X.509 certificate authentication.",
                              "type": "object",
                              "properties": {
                                "secretRef": {
                                  "type": "string",
                                  "description": "Secret reference of the X.509 certificate."
                                }
                              },
                              "required": [
                                "secretRef"
                              ]
                            }
                          },
                          "required": [
                            "method"
                          ]
                        },
                        "clientIdPrefix": {
                          "type": "string",
                          "description": "Client ID prefix. Client ID generated by the dataflow is <prefix>-TBD. Optional; no prefix if omitted."
                        },
                        "host": {
                          "type": "string",
                          "description": "Host of the Broker in the form of <hostname>:<port>. Optional; connects to Broker if omitted."
                        },
                        "protocol": {
                          "type": "string",
                          "description": "Enable or disable websockets.",
                          "default": "Mqtt",
                          "enum": [
                            "Mqtt",
                            "WebSockets"
                          ],
                          "x-ms-enum": {
                            "name": "BrokerProtocolType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Mqtt",
                                "value": "Mqtt",
                                "description": "protocol broker"
                              },
                              {
                                "name": "WebSockets",
                                "value": "WebSockets",
                                "description": "protocol websocket"
                              }
                            ]
                          }
                        },
                        "keepAliveSeconds": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Broker KeepAlive for connection in seconds.",
                          "default": 60,
                          "minimum": 0
                        },
                        "retain": {
                          "type": "string",
                          "description": "Whether or not to keep the retain setting.",
                          "default": "Keep",
                          "enum": [
                            "Keep",
                            "Never"
                          ],
                          "x-ms-enum": {
                            "name": "MqttRetainType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Keep",
                                "value": "Keep",
                                "description": "Retain the messages."
                              },
                              {
                                "name": "Never",
                                "value": "Never",
                                "description": "Never retain messages."
                              }
                            ]
                          }
                        },
                        "maxInflightMessages": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The max number of messages to keep in flight. For subscribe, this is the receive maximum. For publish, this is the maximum number of messages to send before waiting for an ack.",
                          "default": 100,
                          "minimum": 0
                        },
                        "qos": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Qos for Broker connection.",
                          "default": 1,
                          "minimum": 0,
                          "maximum": 1
                        },
                        "sessionExpirySeconds": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Session expiry in seconds.",
                          "minimum": 0
                        },
                        "tls": {
                          "description": "TLS configuration.",
                          "type": "object",
                          "properties": {
                            "mode": {
                              "type": "string",
                              "description": "Mode for TLS.",
                              "default": "Enabled",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "OperationalMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled",
                                    "description": "Enabled is equivalent to True"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled",
                                    "description": "Disabled is equivalent to False."
                                  }
                                ]
                              }
                            },
                            "trustedCaCertificateConfigMapRef": {
                              "type": "string",
                              "description": "Trusted CA certificate config map."
                            }
                          }
                        },
                        "cloudEventAttributes": {
                          "description": "Cloud event mapping config.",
                          "type": "string",
                          "enum": [
                            "Propagate",
                            "CreateOrRemap"
                          ],
                          "x-ms-enum": {
                            "name": "CloudEventAttributeType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Propagate",
                                "value": "Propagate",
                                "description": "Propagate type"
                              },
                              {
                                "name": "CreateOrRemap",
                                "value": "CreateOrRemap",
                                "description": "CreateOrRemap type"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "authentication"
                      ]
                    },
                    "openTelemetrySettings": {
                      "description": "OpenTelemetry endpoint.",
                      "type": "object",
                      "properties": {
                        "host": {
                          "type": "string",
                          "description": "Host of the OpenTelemetry in the form of <host>:<port>."
                        },
                        "batching": {
                          "description": "Batching configuration.",
                          "type": "object",
                          "properties": {
                            "latencySeconds": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Batching latency in seconds.",
                              "default": 60,
                              "minimum": 0,
                              "maximum": 65535
                            },
                            "maxMessages": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Maximum number of messages in a batch.",
                              "default": 100000,
                              "minimum": 0,
                              "maximum": 4294967295
                            }
                          }
                        },
                        "tls": {
                          "description": "TLS configuration.",
                          "type": "object",
                          "properties": {
                            "mode": {
                              "type": "string",
                              "description": "Mode for TLS.",
                              "default": "Enabled",
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "OperationalMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled",
                                    "description": "Enabled is equivalent to True"
                                  },
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled",
                                    "description": "Disabled is equivalent to False."
                                  }
                                ]
                              }
                            },
                            "trustedCaCertificateConfigMapRef": {
                              "type": "string",
                              "description": "Trusted CA certificate config map."
                            }
                          }
                        },
                        "authentication": {
                          "description": "Authentication properties for OpenTelemetry endpoints",
                          "type": "object",
                          "properties": {
                            "method": {
                              "description": "The authentication method.",
                              "type": "string",
                              "enum": [
                                "ServiceAccountToken",
                                "X509Certificate",
                                "Anonymous"
                              ],
                              "x-ms-enum": {
                                "name": "DataflowOpenTelemetryAuthenticationMethod",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "ServiceAccountToken",
                                    "value": "ServiceAccountToken",
                                    "description": "Uses serviceaccount token."
                                  },
                                  {
                                    "name": "X509Certificate",
                                    "value": "X509Certificate",
                                    "description": "Uses x509 certificate."
                                  },
                                  {
                                    "name": "Anonymous",
                                    "value": "Anonymous",
                                    "description": "Connects anonymously."
                                  }
                                ]
                              }
                            }
                          },
                          "discriminator": "method",
                          "required": [
                            "method"
                          ]
                        }
                      },
                      "required": [
                        "host",
                        "authentication"
                      ]
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is getting provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Resource is Updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is Deleting."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been Accepted."
                          }
                        ]
                      }
                    },
                    "healthState": {
                      "type": "string",
                      "description": "The health state of the resource.",
                      "default": "Unknown",
                      "enum": [
                        "Available",
                        "Degraded",
                        "Unavailable",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceHealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "Resource is Available and functioning as expected."
                          },
                          {
                            "name": "Degraded",
                            "value": "Degraded",
                            "description": "Resource health is degraded."
                          },
                          {
                            "name": "Unavailable",
                            "value": "Unavailable",
                            "description": "Resource is not functioning as expected."
                          },
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "Resource state is unknown."
                          }
                        ]
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "endpointType"
                  ]
                },
                "extendedLocation": {
                  "description": "Edge location of the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "Type of ExtendedLocation.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "CustomLocation type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                }
              }
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "DataflowEndpoint_Delete",
        "tags": [
          "DataflowEndpoint"
        ],
        "description": "Delete a DataflowEndpointResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "dataflowEndpointName",
            "in": "path",
            "description": "Name of Instance dataflowEndpoint resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperations/instances/{instanceName}/dataflowProfiles": {
      "get": {
        "operationId": "DataflowProfile_ListByResourceGroup",
        "tags": [
          "DataflowProfile"
        ],
        "description": "List DataflowProfileResource resources by InstanceResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a DataflowProfileResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The DataflowProfileResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "Instance dataflowProfile resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "diagnostics": {
                            "description": "Spec defines the desired identities of NBC diagnostics settings.",
                            "type": "object",
                            "properties": {
                              "logs": {
                                "description": "Diagnostic log settings for the resource.",
                                "type": "object",
                                "properties": {
                                  "level": {
                                    "type": "string",
                                    "description": "The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.",
                                    "default": "info"
                                  }
                                }
                              },
                              "metrics": {
                                "description": "The metrics settings for the resource.",
                                "type": "object",
                                "properties": {
                                  "prometheusPort": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The prometheus port to expose the metrics.",
                                    "default": 9600,
                                    "minimum": 0,
                                    "maximum": 65535
                                  }
                                }
                              }
                            }
                          },
                          "instanceCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "To manually scale the dataflow profile, specify the maximum number of instances you want to run.",
                            "default": 1,
                            "minimum": 1,
                            "maximum": 20
                          },
                          "provisioningState": {
                            "description": "The status of the last operation.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "Resource is getting provisioned."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "Resource is Updating."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Resource is Deleting."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "Resource has been Accepted."
                                }
                              ]
                            }
                          },
                          "healthState": {
                            "type": "string",
                            "description": "The health state of the resource.",
                            "default": "Unknown",
                            "enum": [
                              "Available",
                              "Degraded",
                              "Unavailable",
                              "Unknown"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceHealthState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Available",
                                  "value": "Available",
                                  "description": "Resource is Available and functioning as expected."
                                },
                                {
                                  "name": "Degraded",
                                  "value": "Degraded",
                                  "description": "Resource health is degraded."
                                },
                                {
                                  "name": "Unavailable",
                                  "value": "Unavailable",
                                  "description": "Resource is not functioning as expected."
                                },
                                {
                                  "name": "Unknown",
                                  "value": "Unknown",
                                  "description": "Resource state is unknown."
                                }
                              ]
                            },
                            "readOnly": true
                          }
                        }
                      },
                      "extendedLocation": {
                        "description": "Edge location of the resource.",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the extended location."
                          },
                          "type": {
                            "description": "Type of ExtendedLocation.",
                            "type": "string",
                            "enum": [
                              "CustomLocation"
                            ],
                            "x-ms-enum": {
                              "name": "ExtendedLocationType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "CustomLocation",
                                  "value": "CustomLocation",
                                  "description": "CustomLocation type"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "name",
                          "type"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperations/instances/{instanceName}/dataflowProfiles/{dataflowProfileName}": {
      "get": {
        "operationId": "DataflowProfile_Get",
        "tags": [
          "DataflowProfile"
        ],
        "description": "Get a DataflowProfileResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "dataflowProfileName",
            "in": "path",
            "description": "Name of Instance dataflowProfile resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Instance dataflowProfile resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "diagnostics": {
                      "description": "Spec defines the desired identities of NBC diagnostics settings.",
                      "type": "object",
                      "properties": {
                        "logs": {
                          "description": "Diagnostic log settings for the resource.",
                          "type": "object",
                          "properties": {
                            "level": {
                              "type": "string",
                              "description": "The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.",
                              "default": "info"
                            }
                          }
                        },
                        "metrics": {
                          "description": "The metrics settings for the resource.",
                          "type": "object",
                          "properties": {
                            "prometheusPort": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The prometheus port to expose the metrics.",
                              "default": 9600,
                              "minimum": 0,
                              "maximum": 65535
                            }
                          }
                        }
                      }
                    },
                    "instanceCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "To manually scale the dataflow profile, specify the maximum number of instances you want to run.",
                      "default": 1,
                      "minimum": 1,
                      "maximum": 20
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is getting provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Resource is Updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is Deleting."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been Accepted."
                          }
                        ]
                      }
                    },
                    "healthState": {
                      "type": "string",
                      "description": "The health state of the resource.",
                      "default": "Unknown",
                      "enum": [
                        "Available",
                        "Degraded",
                        "Unavailable",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceHealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "Resource is Available and functioning as expected."
                          },
                          {
                            "name": "Degraded",
                            "value": "Degraded",
                            "description": "Resource health is degraded."
                          },
                          {
                            "name": "Unavailable",
                            "value": "Unavailable",
                            "description": "Resource is not functioning as expected."
                          },
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "Resource state is unknown."
                          }
                        ]
                      },
                      "readOnly": true
                    }
                  }
                },
                "extendedLocation": {
                  "description": "Edge location of the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "Type of ExtendedLocation.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "CustomLocation type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "DataflowProfile_CreateOrUpdate",
        "tags": [
          "DataflowProfile"
        ],
        "description": "Create a DataflowProfileResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "dataflowProfileName",
            "in": "path",
            "description": "Name of Instance dataflowProfile resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Instance dataflowProfile resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "diagnostics": {
                      "description": "Spec defines the desired identities of NBC diagnostics settings.",
                      "type": "object",
                      "properties": {
                        "logs": {
                          "description": "Diagnostic log settings for the resource.",
                          "type": "object",
                          "properties": {
                            "level": {
                              "type": "string",
                              "description": "The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.",
                              "default": "info"
                            }
                          }
                        },
                        "metrics": {
                          "description": "The metrics settings for the resource.",
                          "type": "object",
                          "properties": {
                            "prometheusPort": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The prometheus port to expose the metrics.",
                              "default": 9600,
                              "minimum": 0,
                              "maximum": 65535
                            }
                          }
                        }
                      }
                    },
                    "instanceCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "To manually scale the dataflow profile, specify the maximum number of instances you want to run.",
                      "default": 1,
                      "minimum": 1,
                      "maximum": 20
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is getting provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Resource is Updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is Deleting."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been Accepted."
                          }
                        ]
                      }
                    },
                    "healthState": {
                      "type": "string",
                      "description": "The health state of the resource.",
                      "default": "Unknown",
                      "enum": [
                        "Available",
                        "Degraded",
                        "Unavailable",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceHealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "Resource is Available and functioning as expected."
                          },
                          {
                            "name": "Degraded",
                            "value": "Degraded",
                            "description": "Resource health is degraded."
                          },
                          {
                            "name": "Unavailable",
                            "value": "Unavailable",
                            "description": "Resource is not functioning as expected."
                          },
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "Resource state is unknown."
                          }
                        ]
                      },
                      "readOnly": true
                    }
                  }
                },
                "extendedLocation": {
                  "description": "Edge location of the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "Type of ExtendedLocation.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "CustomLocation type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DataflowProfileResource' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Instance dataflowProfile resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "diagnostics": {
                      "description": "Spec defines the desired identities of NBC diagnostics settings.",
                      "type": "object",
                      "properties": {
                        "logs": {
                          "description": "Diagnostic log settings for the resource.",
                          "type": "object",
                          "properties": {
                            "level": {
                              "type": "string",
                              "description": "The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.",
                              "default": "info"
                            }
                          }
                        },
                        "metrics": {
                          "description": "The metrics settings for the resource.",
                          "type": "object",
                          "properties": {
                            "prometheusPort": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The prometheus port to expose the metrics.",
                              "default": 9600,
                              "minimum": 0,
                              "maximum": 65535
                            }
                          }
                        }
                      }
                    },
                    "instanceCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "To manually scale the dataflow profile, specify the maximum number of instances you want to run.",
                      "default": 1,
                      "minimum": 1,
                      "maximum": 20
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is getting provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Resource is Updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is Deleting."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been Accepted."
                          }
                        ]
                      }
                    },
                    "healthState": {
                      "type": "string",
                      "description": "The health state of the resource.",
                      "default": "Unknown",
                      "enum": [
                        "Available",
                        "Degraded",
                        "Unavailable",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceHealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "Resource is Available and functioning as expected."
                          },
                          {
                            "name": "Degraded",
                            "value": "Degraded",
                            "description": "Resource health is degraded."
                          },
                          {
                            "name": "Unavailable",
                            "value": "Unavailable",
                            "description": "Resource is not functioning as expected."
                          },
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "Resource state is unknown."
                          }
                        ]
                      },
                      "readOnly": true
                    }
                  }
                },
                "extendedLocation": {
                  "description": "Edge location of the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "Type of ExtendedLocation.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "CustomLocation type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Resource 'DataflowProfileResource' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Instance dataflowProfile resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "diagnostics": {
                      "description": "Spec defines the desired identities of NBC diagnostics settings.",
                      "type": "object",
                      "properties": {
                        "logs": {
                          "description": "Diagnostic log settings for the resource.",
                          "type": "object",
                          "properties": {
                            "level": {
                              "type": "string",
                              "description": "The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.",
                              "default": "info"
                            }
                          }
                        },
                        "metrics": {
                          "description": "The metrics settings for the resource.",
                          "type": "object",
                          "properties": {
                            "prometheusPort": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The prometheus port to expose the metrics.",
                              "default": 9600,
                              "minimum": 0,
                              "maximum": 65535
                            }
                          }
                        }
                      }
                    },
                    "instanceCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "To manually scale the dataflow profile, specify the maximum number of instances you want to run.",
                      "default": 1,
                      "minimum": 1,
                      "maximum": 20
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is getting provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Resource is Updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is Deleting."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been Accepted."
                          }
                        ]
                      }
                    },
                    "healthState": {
                      "type": "string",
                      "description": "The health state of the resource.",
                      "default": "Unknown",
                      "enum": [
                        "Available",
                        "Degraded",
                        "Unavailable",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceHealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "Resource is Available and functioning as expected."
                          },
                          {
                            "name": "Degraded",
                            "value": "Degraded",
                            "description": "Resource health is degraded."
                          },
                          {
                            "name": "Unavailable",
                            "value": "Unavailable",
                            "description": "Resource is not functioning as expected."
                          },
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "Resource state is unknown."
                          }
                        ]
                      },
                      "readOnly": true
                    }
                  }
                },
                "extendedLocation": {
                  "description": "Edge location of the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "Type of ExtendedLocation.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "CustomLocation type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                }
              }
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "DataflowProfile_Delete",
        "tags": [
          "DataflowProfile"
        ],
        "description": "Delete a DataflowProfileResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "dataflowProfileName",
            "in": "path",
            "description": "Name of Instance dataflowProfile resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperations/instances/{instanceName}/dataflowProfiles/{dataflowProfileName}/dataflowGraphs": {
      "get": {
        "operationId": "DataflowGraph_ListByDataflowProfile",
        "tags": [
          "DataflowGraph"
        ],
        "description": "List DataflowGraphResource resources by DataflowProfileResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "dataflowProfileName",
            "in": "path",
            "description": "Name of Instance dataflowProfile resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a DataflowGraphResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The DataflowGraphResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "Instance dataflowEndpoint resource.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "mode": {
                            "type": "string",
                            "description": "The mode of the dataflow graph.",
                            "default": "Enabled",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "OperationalMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled",
                                  "description": "Enabled is equivalent to True"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled",
                                  "description": "Disabled is equivalent to False."
                                }
                              ]
                            }
                          },
                          "requestDiskPersistence": {
                            "type": "string",
                            "description": "Mode properties",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "OperationalMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled",
                                  "description": "Enabled is equivalent to True"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled",
                                  "description": "Disabled is equivalent to False."
                                }
                              ]
                            }
                          },
                          "nodes": {
                            "type": "array",
                            "description": "List of nodes in the dataflow graph.",
                            "items": {
                              "type": "object",
                              "description": "DataflowGraph node properties.",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of the node."
                                },
                                "nodeType": {
                                  "description": "Type of the node.",
                                  "type": "string",
                                  "enum": [
                                    "Source",
                                    "Graph",
                                    "Destination"
                                  ],
                                  "x-ms-enum": {
                                    "name": "DataflowGraphNodeType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Source",
                                        "value": "Source",
                                        "description": "Dataflow source node."
                                      },
                                      {
                                        "name": "Graph",
                                        "value": "Graph",
                                        "description": "Dataflow graph node."
                                      },
                                      {
                                        "name": "Destination",
                                        "value": "Destination",
                                        "description": "Dataflow destination node."
                                      }
                                    ]
                                  }
                                }
                              },
                              "discriminator": "nodeType",
                              "required": [
                                "name",
                                "nodeType"
                              ]
                            },
                            "x-ms-identifiers": [
                              "name"
                            ]
                          },
                          "nodeConnections": {
                            "type": "array",
                            "description": "List of connections between nodes in the dataflow graph.",
                            "items": {
                              "type": "object",
                              "description": "DataflowGraph DataflowGraphNode Connection.",
                              "properties": {
                                "from": {
                                  "description": "Information about the source node.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Name of the input node."
                                    },
                                    "schema": {
                                      "description": "Schema settings for the input node.",
                                      "type": "object",
                                      "properties": {
                                        "serializationFormat": {
                                          "description": "Output serialization format.",
                                          "type": "string",
                                          "enum": [
                                            "Delta",
                                            "Json",
                                            "Parquet",
                                            "Avro"
                                          ],
                                          "x-ms-enum": {
                                            "name": "DataflowGraphConnectionSchemaSerializationFormat",
                                            "modelAsString": true,
                                            "values": [
                                              {
                                                "name": "Delta",
                                                "value": "Delta",
                                                "description": "Delta Format"
                                              },
                                              {
                                                "name": "Json",
                                                "value": "Json",
                                                "description": "JSON Format"
                                              },
                                              {
                                                "name": "Parquet",
                                                "value": "Parquet",
                                                "description": "Parquet Format"
                                              },
                                              {
                                                "name": "Avro",
                                                "value": "Avro",
                                                "description": "Avro serialization format."
                                              }
                                            ]
                                          }
                                        },
                                        "schemaRef": {
                                          "type": "string",
                                          "description": "Reference to the schema that describes the output of the transformation."
                                        }
                                      }
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ]
                                },
                                "to": {
                                  "description": "Information about the destination node.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Name of the destination node."
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ]
                                }
                              },
                              "required": [
                                "from",
                                "to"
                              ]
                            },
                            "x-ms-identifiers": []
                          },
                          "provisioningState": {
                            "description": "The provisioning state of the dataflow graph.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "Resource is getting provisioned."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "Resource is Updating."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Resource is Deleting."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "Resource has been Accepted."
                                }
                              ]
                            }
                          },
                          "healthState": {
                            "type": "string",
                            "description": "The health state of the resource.",
                            "default": "Unknown",
                            "enum": [
                              "Available",
                              "Degraded",
                              "Unavailable",
                              "Unknown"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceHealthState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Available",
                                  "value": "Available",
                                  "description": "Resource is Available and functioning as expected."
                                },
                                {
                                  "name": "Degraded",
                                  "value": "Degraded",
                                  "description": "Resource health is degraded."
                                },
                                {
                                  "name": "Unavailable",
                                  "value": "Unavailable",
                                  "description": "Resource is not functioning as expected."
                                },
                                {
                                  "name": "Unknown",
                                  "value": "Unknown",
                                  "description": "Resource state is unknown."
                                }
                              ]
                            },
                            "readOnly": true
                          }
                        },
                        "required": [
                          "nodes",
                          "nodeConnections"
                        ]
                      },
                      "extendedLocation": {
                        "description": "Edge location of the resource.",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the extended location."
                          },
                          "type": {
                            "description": "Type of ExtendedLocation.",
                            "type": "string",
                            "enum": [
                              "CustomLocation"
                            ],
                            "x-ms-enum": {
                              "name": "ExtendedLocationType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "CustomLocation",
                                  "value": "CustomLocation",
                                  "description": "CustomLocation type"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "name",
                          "type"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperations/instances/{instanceName}/dataflowProfiles/{dataflowProfileName}/dataflowGraphs/{dataflowGraphName}": {
      "get": {
        "operationId": "DataflowGraph_Get",
        "tags": [
          "DataflowGraph"
        ],
        "description": "Get a DataflowGraphResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "dataflowProfileName",
            "in": "path",
            "description": "Name of Instance dataflowProfile resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "dataflowGraphName",
            "in": "path",
            "description": "Name of Instance dataflowEndpoint resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Instance dataflowEndpoint resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "mode": {
                      "type": "string",
                      "description": "The mode of the dataflow graph.",
                      "default": "Enabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "OperationalMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "Enabled is equivalent to True"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "Disabled is equivalent to False."
                          }
                        ]
                      }
                    },
                    "requestDiskPersistence": {
                      "type": "string",
                      "description": "Mode properties",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "OperationalMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "Enabled is equivalent to True"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "Disabled is equivalent to False."
                          }
                        ]
                      }
                    },
                    "nodes": {
                      "type": "array",
                      "description": "List of nodes in the dataflow graph.",
                      "items": {
                        "type": "object",
                        "description": "DataflowGraph node properties.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the node."
                          },
                          "nodeType": {
                            "description": "Type of the node.",
                            "type": "string",
                            "enum": [
                              "Source",
                              "Graph",
                              "Destination"
                            ],
                            "x-ms-enum": {
                              "name": "DataflowGraphNodeType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Source",
                                  "value": "Source",
                                  "description": "Dataflow source node."
                                },
                                {
                                  "name": "Graph",
                                  "value": "Graph",
                                  "description": "Dataflow graph node."
                                },
                                {
                                  "name": "Destination",
                                  "value": "Destination",
                                  "description": "Dataflow destination node."
                                }
                              ]
                            }
                          }
                        },
                        "discriminator": "nodeType",
                        "required": [
                          "name",
                          "nodeType"
                        ]
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "nodeConnections": {
                      "type": "array",
                      "description": "List of connections between nodes in the dataflow graph.",
                      "items": {
                        "type": "object",
                        "description": "DataflowGraph DataflowGraphNode Connection.",
                        "properties": {
                          "from": {
                            "description": "Information about the source node.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the input node."
                              },
                              "schema": {
                                "description": "Schema settings for the input node.",
                                "type": "object",
                                "properties": {
                                  "serializationFormat": {
                                    "description": "Output serialization format.",
                                    "type": "string",
                                    "enum": [
                                      "Delta",
                                      "Json",
                                      "Parquet",
                                      "Avro"
                                    ],
                                    "x-ms-enum": {
                                      "name": "DataflowGraphConnectionSchemaSerializationFormat",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Delta",
                                          "value": "Delta",
                                          "description": "Delta Format"
                                        },
                                        {
                                          "name": "Json",
                                          "value": "Json",
                                          "description": "JSON Format"
                                        },
                                        {
                                          "name": "Parquet",
                                          "value": "Parquet",
                                          "description": "Parquet Format"
                                        },
                                        {
                                          "name": "Avro",
                                          "value": "Avro",
                                          "description": "Avro serialization format."
                                        }
                                      ]
                                    }
                                  },
                                  "schemaRef": {
                                    "type": "string",
                                    "description": "Reference to the schema that describes the output of the transformation."
                                  }
                                }
                              }
                            },
                            "required": [
                              "name"
                            ]
                          },
                          "to": {
                            "description": "Information about the destination node.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the destination node."
                              }
                            },
                            "required": [
                              "name"
                            ]
                          }
                        },
                        "required": [
                          "from",
                          "to"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "provisioningState": {
                      "description": "The provisioning state of the dataflow graph.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is getting provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Resource is Updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is Deleting."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been Accepted."
                          }
                        ]
                      }
                    },
                    "healthState": {
                      "type": "string",
                      "description": "The health state of the resource.",
                      "default": "Unknown",
                      "enum": [
                        "Available",
                        "Degraded",
                        "Unavailable",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceHealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "Resource is Available and functioning as expected."
                          },
                          {
                            "name": "Degraded",
                            "value": "Degraded",
                            "description": "Resource health is degraded."
                          },
                          {
                            "name": "Unavailable",
                            "value": "Unavailable",
                            "description": "Resource is not functioning as expected."
                          },
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "Resource state is unknown."
                          }
                        ]
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "nodes",
                    "nodeConnections"
                  ]
                },
                "extendedLocation": {
                  "description": "Edge location of the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "Type of ExtendedLocation.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "CustomLocation type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "DataflowGraph_CreateOrUpdate",
        "tags": [
          "DataflowGraph"
        ],
        "description": "Create a DataflowGraphResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "dataflowProfileName",
            "in": "path",
            "description": "Name of Instance dataflowProfile resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "dataflowGraphName",
            "in": "path",
            "description": "Name of Instance dataflowEndpoint resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Instance dataflowEndpoint resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "mode": {
                      "type": "string",
                      "description": "The mode of the dataflow graph.",
                      "default": "Enabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "OperationalMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "Enabled is equivalent to True"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "Disabled is equivalent to False."
                          }
                        ]
                      }
                    },
                    "requestDiskPersistence": {
                      "type": "string",
                      "description": "Mode properties",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "OperationalMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "Enabled is equivalent to True"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "Disabled is equivalent to False."
                          }
                        ]
                      }
                    },
                    "nodes": {
                      "type": "array",
                      "description": "List of nodes in the dataflow graph.",
                      "items": {
                        "type": "object",
                        "description": "DataflowGraph node properties.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the node."
                          },
                          "nodeType": {
                            "description": "Type of the node.",
                            "type": "string",
                            "enum": [
                              "Source",
                              "Graph",
                              "Destination"
                            ],
                            "x-ms-enum": {
                              "name": "DataflowGraphNodeType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Source",
                                  "value": "Source",
                                  "description": "Dataflow source node."
                                },
                                {
                                  "name": "Graph",
                                  "value": "Graph",
                                  "description": "Dataflow graph node."
                                },
                                {
                                  "name": "Destination",
                                  "value": "Destination",
                                  "description": "Dataflow destination node."
                                }
                              ]
                            }
                          }
                        },
                        "discriminator": "nodeType",
                        "required": [
                          "name",
                          "nodeType"
                        ]
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "nodeConnections": {
                      "type": "array",
                      "description": "List of connections between nodes in the dataflow graph.",
                      "items": {
                        "type": "object",
                        "description": "DataflowGraph DataflowGraphNode Connection.",
                        "properties": {
                          "from": {
                            "description": "Information about the source node.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the input node."
                              },
                              "schema": {
                                "description": "Schema settings for the input node.",
                                "type": "object",
                                "properties": {
                                  "serializationFormat": {
                                    "description": "Output serialization format.",
                                    "type": "string",
                                    "enum": [
                                      "Delta",
                                      "Json",
                                      "Parquet",
                                      "Avro"
                                    ],
                                    "x-ms-enum": {
                                      "name": "DataflowGraphConnectionSchemaSerializationFormat",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Delta",
                                          "value": "Delta",
                                          "description": "Delta Format"
                                        },
                                        {
                                          "name": "Json",
                                          "value": "Json",
                                          "description": "JSON Format"
                                        },
                                        {
                                          "name": "Parquet",
                                          "value": "Parquet",
                                          "description": "Parquet Format"
                                        },
                                        {
                                          "name": "Avro",
                                          "value": "Avro",
                                          "description": "Avro serialization format."
                                        }
                                      ]
                                    }
                                  },
                                  "schemaRef": {
                                    "type": "string",
                                    "description": "Reference to the schema that describes the output of the transformation."
                                  }
                                }
                              }
                            },
                            "required": [
                              "name"
                            ]
                          },
                          "to": {
                            "description": "Information about the destination node.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the destination node."
                              }
                            },
                            "required": [
                              "name"
                            ]
                          }
                        },
                        "required": [
                          "from",
                          "to"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "provisioningState": {
                      "description": "The provisioning state of the dataflow graph.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is getting provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Resource is Updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is Deleting."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been Accepted."
                          }
                        ]
                      }
                    },
                    "healthState": {
                      "type": "string",
                      "description": "The health state of the resource.",
                      "default": "Unknown",
                      "enum": [
                        "Available",
                        "Degraded",
                        "Unavailable",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceHealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "Resource is Available and functioning as expected."
                          },
                          {
                            "name": "Degraded",
                            "value": "Degraded",
                            "description": "Resource health is degraded."
                          },
                          {
                            "name": "Unavailable",
                            "value": "Unavailable",
                            "description": "Resource is not functioning as expected."
                          },
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "Resource state is unknown."
                          }
                        ]
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "nodes",
                    "nodeConnections"
                  ]
                },
                "extendedLocation": {
                  "description": "Edge location of the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "Type of ExtendedLocation.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "CustomLocation type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DataflowGraphResource' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Instance dataflowEndpoint resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "mode": {
                      "type": "string",
                      "description": "The mode of the dataflow graph.",
                      "default": "Enabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "OperationalMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "Enabled is equivalent to True"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "Disabled is equivalent to False."
                          }
                        ]
                      }
                    },
                    "requestDiskPersistence": {
                      "type": "string",
                      "description": "Mode properties",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "OperationalMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "Enabled is equivalent to True"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "Disabled is equivalent to False."
                          }
                        ]
                      }
                    },
                    "nodes": {
                      "type": "array",
                      "description": "List of nodes in the dataflow graph.",
                      "items": {
                        "type": "object",
                        "description": "DataflowGraph node properties.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the node."
                          },
                          "nodeType": {
                            "description": "Type of the node.",
                            "type": "string",
                            "enum": [
                              "Source",
                              "Graph",
                              "Destination"
                            ],
                            "x-ms-enum": {
                              "name": "DataflowGraphNodeType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Source",
                                  "value": "Source",
                                  "description": "Dataflow source node."
                                },
                                {
                                  "name": "Graph",
                                  "value": "Graph",
                                  "description": "Dataflow graph node."
                                },
                                {
                                  "name": "Destination",
                                  "value": "Destination",
                                  "description": "Dataflow destination node."
                                }
                              ]
                            }
                          }
                        },
                        "discriminator": "nodeType",
                        "required": [
                          "name",
                          "nodeType"
                        ]
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "nodeConnections": {
                      "type": "array",
                      "description": "List of connections between nodes in the dataflow graph.",
                      "items": {
                        "type": "object",
                        "description": "DataflowGraph DataflowGraphNode Connection.",
                        "properties": {
                          "from": {
                            "description": "Information about the source node.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the input node."
                              },
                              "schema": {
                                "description": "Schema settings for the input node.",
                                "type": "object",
                                "properties": {
                                  "serializationFormat": {
                                    "description": "Output serialization format.",
                                    "type": "string",
                                    "enum": [
                                      "Delta",
                                      "Json",
                                      "Parquet",
                                      "Avro"
                                    ],
                                    "x-ms-enum": {
                                      "name": "DataflowGraphConnectionSchemaSerializationFormat",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Delta",
                                          "value": "Delta",
                                          "description": "Delta Format"
                                        },
                                        {
                                          "name": "Json",
                                          "value": "Json",
                                          "description": "JSON Format"
                                        },
                                        {
                                          "name": "Parquet",
                                          "value": "Parquet",
                                          "description": "Parquet Format"
                                        },
                                        {
                                          "name": "Avro",
                                          "value": "Avro",
                                          "description": "Avro serialization format."
                                        }
                                      ]
                                    }
                                  },
                                  "schemaRef": {
                                    "type": "string",
                                    "description": "Reference to the schema that describes the output of the transformation."
                                  }
                                }
                              }
                            },
                            "required": [
                              "name"
                            ]
                          },
                          "to": {
                            "description": "Information about the destination node.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the destination node."
                              }
                            },
                            "required": [
                              "name"
                            ]
                          }
                        },
                        "required": [
                          "from",
                          "to"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "provisioningState": {
                      "description": "The provisioning state of the dataflow graph.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is getting provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Resource is Updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is Deleting."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been Accepted."
                          }
                        ]
                      }
                    },
                    "healthState": {
                      "type": "string",
                      "description": "The health state of the resource.",
                      "default": "Unknown",
                      "enum": [
                        "Available",
                        "Degraded",
                        "Unavailable",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceHealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "Resource is Available and functioning as expected."
                          },
                          {
                            "name": "Degraded",
                            "value": "Degraded",
                            "description": "Resource health is degraded."
                          },
                          {
                            "name": "Unavailable",
                            "value": "Unavailable",
                            "description": "Resource is not functioning as expected."
                          },
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "Resource state is unknown."
                          }
                        ]
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "nodes",
                    "nodeConnections"
                  ]
                },
                "extendedLocation": {
                  "description": "Edge location of the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "Type of ExtendedLocation.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "CustomLocation type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Resource 'DataflowGraphResource' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Instance dataflowEndpoint resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "mode": {
                      "type": "string",
                      "description": "The mode of the dataflow graph.",
                      "default": "Enabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "OperationalMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "Enabled is equivalent to True"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "Disabled is equivalent to False."
                          }
                        ]
                      }
                    },
                    "requestDiskPersistence": {
                      "type": "string",
                      "description": "Mode properties",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "OperationalMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "Enabled is equivalent to True"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "Disabled is equivalent to False."
                          }
                        ]
                      }
                    },
                    "nodes": {
                      "type": "array",
                      "description": "List of nodes in the dataflow graph.",
                      "items": {
                        "type": "object",
                        "description": "DataflowGraph node properties.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the node."
                          },
                          "nodeType": {
                            "description": "Type of the node.",
                            "type": "string",
                            "enum": [
                              "Source",
                              "Graph",
                              "Destination"
                            ],
                            "x-ms-enum": {
                              "name": "DataflowGraphNodeType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Source",
                                  "value": "Source",
                                  "description": "Dataflow source node."
                                },
                                {
                                  "name": "Graph",
                                  "value": "Graph",
                                  "description": "Dataflow graph node."
                                },
                                {
                                  "name": "Destination",
                                  "value": "Destination",
                                  "description": "Dataflow destination node."
                                }
                              ]
                            }
                          }
                        },
                        "discriminator": "nodeType",
                        "required": [
                          "name",
                          "nodeType"
                        ]
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "nodeConnections": {
                      "type": "array",
                      "description": "List of connections between nodes in the dataflow graph.",
                      "items": {
                        "type": "object",
                        "description": "DataflowGraph DataflowGraphNode Connection.",
                        "properties": {
                          "from": {
                            "description": "Information about the source node.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the input node."
                              },
                              "schema": {
                                "description": "Schema settings for the input node.",
                                "type": "object",
                                "properties": {
                                  "serializationFormat": {
                                    "description": "Output serialization format.",
                                    "type": "string",
                                    "enum": [
                                      "Delta",
                                      "Json",
                                      "Parquet",
                                      "Avro"
                                    ],
                                    "x-ms-enum": {
                                      "name": "DataflowGraphConnectionSchemaSerializationFormat",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Delta",
                                          "value": "Delta",
                                          "description": "Delta Format"
                                        },
                                        {
                                          "name": "Json",
                                          "value": "Json",
                                          "description": "JSON Format"
                                        },
                                        {
                                          "name": "Parquet",
                                          "value": "Parquet",
                                          "description": "Parquet Format"
                                        },
                                        {
                                          "name": "Avro",
                                          "value": "Avro",
                                          "description": "Avro serialization format."
                                        }
                                      ]
                                    }
                                  },
                                  "schemaRef": {
                                    "type": "string",
                                    "description": "Reference to the schema that describes the output of the transformation."
                                  }
                                }
                              }
                            },
                            "required": [
                              "name"
                            ]
                          },
                          "to": {
                            "description": "Information about the destination node.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the destination node."
                              }
                            },
                            "required": [
                              "name"
                            ]
                          }
                        },
                        "required": [
                          "from",
                          "to"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "provisioningState": {
                      "description": "The provisioning state of the dataflow graph.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is getting provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Resource is Updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is Deleting."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been Accepted."
                          }
                        ]
                      }
                    },
                    "healthState": {
                      "type": "string",
                      "description": "The health state of the resource.",
                      "default": "Unknown",
                      "enum": [
                        "Available",
                        "Degraded",
                        "Unavailable",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceHealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "Resource is Available and functioning as expected."
                          },
                          {
                            "name": "Degraded",
                            "value": "Degraded",
                            "description": "Resource health is degraded."
                          },
                          {
                            "name": "Unavailable",
                            "value": "Unavailable",
                            "description": "Resource is not functioning as expected."
                          },
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "Resource state is unknown."
                          }
                        ]
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "nodes",
                    "nodeConnections"
                  ]
                },
                "extendedLocation": {
                  "description": "Edge location of the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "Type of ExtendedLocation.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "CustomLocation type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                }
              }
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "DataflowGraph_Delete",
        "tags": [
          "DataflowGraph"
        ],
        "description": "Delete a DataflowGraphResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "dataflowProfileName",
            "in": "path",
            "description": "Name of Instance dataflowProfile resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "dataflowGraphName",
            "in": "path",
            "description": "Name of Instance dataflowEndpoint resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperations/instances/{instanceName}/dataflowProfiles/{dataflowProfileName}/dataflows": {
      "get": {
        "operationId": "Dataflow_ListByProfileResource",
        "tags": [
          "Dataflow"
        ],
        "description": "List DataflowResource resources by DataflowProfileResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "dataflowProfileName",
            "in": "path",
            "description": "Name of Instance dataflowProfile resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a DataflowResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The DataflowResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "Instance dataflowProfile dataflow resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "mode": {
                            "type": "string",
                            "description": "Mode for Dataflow. Optional; defaults to Enabled.",
                            "default": "Enabled",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "OperationalMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled",
                                  "description": "Enabled is equivalent to True"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled",
                                  "description": "Disabled is equivalent to False."
                                }
                              ]
                            }
                          },
                          "requestDiskPersistence": {
                            "type": "string",
                            "description": "Mode properties",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "OperationalMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled",
                                  "description": "Enabled is equivalent to True"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled",
                                  "description": "Disabled is equivalent to False."
                                }
                              ]
                            }
                          },
                          "operations": {
                            "type": "array",
                            "description": "List of operations including source and destination references as well as transformation.",
                            "items": {
                              "type": "object",
                              "description": "Dataflow Operation properties. NOTE - One only method is allowed to be used for one entry.",
                              "properties": {
                                "operationType": {
                                  "description": "Type of operation.",
                                  "type": "string",
                                  "enum": [
                                    "Source",
                                    "Destination",
                                    "BuiltInTransformation"
                                  ],
                                  "x-ms-enum": {
                                    "name": "OperationType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Source",
                                        "value": "Source",
                                        "description": "Dataflow Source Operation"
                                      },
                                      {
                                        "name": "Destination",
                                        "value": "Destination",
                                        "description": "Dataflow Destination Operation"
                                      },
                                      {
                                        "name": "BuiltInTransformation",
                                        "value": "BuiltInTransformation",
                                        "description": "Dataflow BuiltIn Transformation Operation"
                                      }
                                    ]
                                  }
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Optional user provided name of the transformation.",
                                  "maxLength": 64
                                },
                                "sourceSettings": {
                                  "description": "Source configuration.",
                                  "type": "object",
                                  "properties": {
                                    "endpointRef": {
                                      "type": "string",
                                      "description": "Reference to the Dataflow Endpoint resource. Can only be of Broker and Kafka type."
                                    },
                                    "assetRef": {
                                      "type": "string",
                                      "description": "Reference to the resource in Azure Device Registry where the data in the endpoint originates from."
                                    },
                                    "serializationFormat": {
                                      "type": "string",
                                      "description": "Content is a JSON Schema. Allowed: JSON Schema/draft-7.",
                                      "default": "Json",
                                      "enum": [
                                        "Json"
                                      ],
                                      "x-ms-enum": {
                                        "name": "SourceSerializationFormat",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Json",
                                            "value": "Json",
                                            "description": "JSON Format"
                                          }
                                        ]
                                      }
                                    },
                                    "schemaRef": {
                                      "type": "string",
                                      "description": "Schema CR reference. Data will be deserialized according to the schema, and dropped if it doesn't match."
                                    },
                                    "dataSources": {
                                      "type": "array",
                                      "description": "List of source locations. Can be Broker or Kafka topics. Supports wildcards # and +.",
                                      "items": {
                                        "type": "string",
                                        "description": "A string with a minimum length of 1.",
                                        "minLength": 1
                                      }
                                    }
                                  },
                                  "required": [
                                    "endpointRef",
                                    "dataSources"
                                  ]
                                },
                                "builtInTransformationSettings": {
                                  "description": "Built In Transformation configuration.",
                                  "type": "object",
                                  "properties": {
                                    "serializationFormat": {
                                      "type": "string",
                                      "description": "Serialization format. Optional; defaults to JSON. Allowed value JSON Schema/draft-7, Parquet. Default: Json",
                                      "default": "Json",
                                      "enum": [
                                        "Delta",
                                        "Json",
                                        "Parquet"
                                      ],
                                      "x-ms-enum": {
                                        "name": "TransformationSerializationFormat",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Delta",
                                            "value": "Delta",
                                            "description": "Delta Format"
                                          },
                                          {
                                            "name": "Json",
                                            "value": "Json",
                                            "description": "JSON Format"
                                          },
                                          {
                                            "name": "Parquet",
                                            "value": "Parquet",
                                            "description": "Parquet Format"
                                          }
                                        ]
                                      }
                                    },
                                    "schemaRef": {
                                      "type": "string",
                                      "description": "Reference to the schema that describes the output of the transformation."
                                    },
                                    "datasets": {
                                      "type": "array",
                                      "description": "Enrich data from Broker State Store. Dataset references a key in Broker State Store.",
                                      "default": [],
                                      "maxItems": 1,
                                      "items": {
                                        "type": "object",
                                        "description": "Dataflow BuiltIn Transformation dataset properties",
                                        "properties": {
                                          "key": {
                                            "type": "string",
                                            "description": "The key of the dataset.",
                                            "maxLength": 64
                                          },
                                          "description": {
                                            "type": "string",
                                            "description": "A user provided optional description of the dataset.",
                                            "maxLength": 256
                                          },
                                          "schemaRef": {
                                            "type": "string",
                                            "description": "The reference to the schema that describes the dataset. Allowed: JSON Schema/draft-7."
                                          },
                                          "inputs": {
                                            "type": "array",
                                            "description": "List of fields for enriching from the Broker State Store.",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "expression": {
                                            "type": "string",
                                            "description": "Condition to enrich data from Broker State Store. Example: $1 < 0 || $1 > $2 (Assuming inputs section $1 and $2 are provided)"
                                          }
                                        },
                                        "required": [
                                          "key",
                                          "inputs"
                                        ]
                                      },
                                      "x-ms-identifiers": []
                                    },
                                    "filter": {
                                      "type": "array",
                                      "description": "Filters input record or datapoints based on condition.",
                                      "default": [],
                                      "items": {
                                        "type": "object",
                                        "description": "Dataflow BuiltIn Transformation filter properties",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "description": "The type of dataflow operation.",
                                            "default": "Filter",
                                            "enum": [
                                              "Filter"
                                            ],
                                            "x-ms-enum": {
                                              "name": "FilterType",
                                              "modelAsString": true,
                                              "values": [
                                                {
                                                  "name": "Filter",
                                                  "value": "Filter",
                                                  "description": "Filter type"
                                                }
                                              ]
                                            }
                                          },
                                          "description": {
                                            "type": "string",
                                            "description": "A user provided optional description of the filter.",
                                            "maxLength": 256
                                          },
                                          "inputs": {
                                            "type": "array",
                                            "description": "List of fields for filtering in JSON path expression.",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "expression": {
                                            "type": "string",
                                            "description": "Condition to filter data. Can reference input fields with {n} where n is the index of the input field starting from 1. Example: $1 < 0 || $1 > $2 (Assuming inputs section $1 and $2 are provided)"
                                          }
                                        },
                                        "required": [
                                          "inputs",
                                          "expression"
                                        ]
                                      },
                                      "x-ms-identifiers": []
                                    },
                                    "map": {
                                      "type": "array",
                                      "description": "Maps input to output message.",
                                      "default": [],
                                      "items": {
                                        "type": "object",
                                        "description": "Dataflow BuiltIn Transformation map properties",
                                        "properties": {
                                          "type": {
                                            "description": "Type of transformation.",
                                            "type": "string",
                                            "enum": [
                                              "NewProperties",
                                              "Rename",
                                              "Compute",
                                              "PassThrough",
                                              "BuiltInFunction"
                                            ],
                                            "x-ms-enum": {
                                              "name": "DataflowMappingType",
                                              "modelAsString": true,
                                              "values": [
                                                {
                                                  "name": "NewProperties",
                                                  "value": "NewProperties",
                                                  "description": "New Properties type"
                                                },
                                                {
                                                  "name": "Rename",
                                                  "value": "Rename",
                                                  "description": "Rename type"
                                                },
                                                {
                                                  "name": "Compute",
                                                  "value": "Compute",
                                                  "description": "Compute type"
                                                },
                                                {
                                                  "name": "PassThrough",
                                                  "value": "PassThrough",
                                                  "description": "Pass-through type"
                                                },
                                                {
                                                  "name": "BuiltInFunction",
                                                  "value": "BuiltInFunction",
                                                  "description": "Built in function type"
                                                }
                                              ]
                                            }
                                          },
                                          "description": {
                                            "type": "string",
                                            "description": "A user provided optional description of the mapping function.",
                                            "maxLength": 256
                                          },
                                          "inputs": {
                                            "type": "array",
                                            "description": "List of fields for mapping in JSON path expression.",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "expression": {
                                            "type": "string",
                                            "description": "Modify the inputs field(s) to the final output field. Example: $1 * 2.2 (Assuming inputs section $1 is provided)"
                                          },
                                          "output": {
                                            "type": "string",
                                            "description": "Where and how the input fields to be organized in the output record."
                                          }
                                        },
                                        "required": [
                                          "inputs",
                                          "output"
                                        ]
                                      },
                                      "x-ms-identifiers": []
                                    }
                                  }
                                },
                                "destinationSettings": {
                                  "description": "Destination configuration.",
                                  "type": "object",
                                  "properties": {
                                    "endpointRef": {
                                      "type": "string",
                                      "description": "Reference to the Endpoint CR. Can be of Broker, Kafka, Fabric, ADLS, ADX type."
                                    },
                                    "dataDestination": {
                                      "type": "string",
                                      "description": "A string with a minimum length of 1.",
                                      "minLength": 1
                                    },
                                    "headers": {
                                      "type": "array",
                                      "description": "Headers for the output data.",
                                      "items": {
                                        "type": "object",
                                        "description": "Dataflow Destination Header Action properties",
                                        "properties": {
                                          "actionType": {
                                            "description": "The type of header operation to perform.",
                                            "type": "string",
                                            "enum": [
                                              "AddIfNotPresent",
                                              "Remove",
                                              "AddOrReplace"
                                            ],
                                            "x-ms-enum": {
                                              "name": "DataflowHeaderActionType",
                                              "modelAsString": true,
                                              "values": [
                                                {
                                                  "name": "AddIfNotPresent",
                                                  "value": "AddIfNotPresent",
                                                  "description": "Add if not present type"
                                                },
                                                {
                                                  "name": "Remove",
                                                  "value": "Remove",
                                                  "description": "Remove type"
                                                },
                                                {
                                                  "name": "AddOrReplace",
                                                  "value": "AddOrReplace",
                                                  "description": "Add or Replace type"
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        "discriminator": "actionType",
                                        "required": [
                                          "actionType"
                                        ]
                                      },
                                      "x-ms-identifiers": [
                                        "actionType"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "endpointRef",
                                    "dataDestination"
                                  ]
                                }
                              },
                              "required": [
                                "operationType"
                              ]
                            },
                            "x-ms-identifiers": []
                          },
                          "provisioningState": {
                            "description": "The status of the last operation.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "Resource is getting provisioned."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "Resource is Updating."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Resource is Deleting."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "Resource has been Accepted."
                                }
                              ]
                            }
                          },
                          "healthState": {
                            "type": "string",
                            "description": "The health state of the resource.",
                            "default": "Unknown",
                            "enum": [
                              "Available",
                              "Degraded",
                              "Unavailable",
                              "Unknown"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceHealthState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Available",
                                  "value": "Available",
                                  "description": "Resource is Available and functioning as expected."
                                },
                                {
                                  "name": "Degraded",
                                  "value": "Degraded",
                                  "description": "Resource health is degraded."
                                },
                                {
                                  "name": "Unavailable",
                                  "value": "Unavailable",
                                  "description": "Resource is not functioning as expected."
                                },
                                {
                                  "name": "Unknown",
                                  "value": "Unknown",
                                  "description": "Resource state is unknown."
                                }
                              ]
                            },
                            "readOnly": true
                          }
                        },
                        "required": [
                          "operations"
                        ]
                      },
                      "extendedLocation": {
                        "description": "Edge location of the resource.",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the extended location."
                          },
                          "type": {
                            "description": "Type of ExtendedLocation.",
                            "type": "string",
                            "enum": [
                              "CustomLocation"
                            ],
                            "x-ms-enum": {
                              "name": "ExtendedLocationType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "CustomLocation",
                                  "value": "CustomLocation",
                                  "description": "CustomLocation type"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "name",
                          "type"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperations/instances/{instanceName}/dataflowProfiles/{dataflowProfileName}/dataflows/{dataflowName}": {
      "get": {
        "operationId": "Dataflow_Get",
        "tags": [
          "Dataflow"
        ],
        "description": "Get a DataflowResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "dataflowProfileName",
            "in": "path",
            "description": "Name of Instance dataflowProfile resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "dataflowName",
            "in": "path",
            "description": "Name of Instance dataflowProfile dataflow resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Instance dataflowProfile dataflow resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "mode": {
                      "type": "string",
                      "description": "Mode for Dataflow. Optional; defaults to Enabled.",
                      "default": "Enabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "OperationalMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "Enabled is equivalent to True"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "Disabled is equivalent to False."
                          }
                        ]
                      }
                    },
                    "requestDiskPersistence": {
                      "type": "string",
                      "description": "Mode properties",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "OperationalMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "Enabled is equivalent to True"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "Disabled is equivalent to False."
                          }
                        ]
                      }
                    },
                    "operations": {
                      "type": "array",
                      "description": "List of operations including source and destination references as well as transformation.",
                      "items": {
                        "type": "object",
                        "description": "Dataflow Operation properties. NOTE - One only method is allowed to be used for one entry.",
                        "properties": {
                          "operationType": {
                            "description": "Type of operation.",
                            "type": "string",
                            "enum": [
                              "Source",
                              "Destination",
                              "BuiltInTransformation"
                            ],
                            "x-ms-enum": {
                              "name": "OperationType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Source",
                                  "value": "Source",
                                  "description": "Dataflow Source Operation"
                                },
                                {
                                  "name": "Destination",
                                  "value": "Destination",
                                  "description": "Dataflow Destination Operation"
                                },
                                {
                                  "name": "BuiltInTransformation",
                                  "value": "BuiltInTransformation",
                                  "description": "Dataflow BuiltIn Transformation Operation"
                                }
                              ]
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "Optional user provided name of the transformation.",
                            "maxLength": 64
                          },
                          "sourceSettings": {
                            "description": "Source configuration.",
                            "type": "object",
                            "properties": {
                              "endpointRef": {
                                "type": "string",
                                "description": "Reference to the Dataflow Endpoint resource. Can only be of Broker and Kafka type."
                              },
                              "assetRef": {
                                "type": "string",
                                "description": "Reference to the resource in Azure Device Registry where the data in the endpoint originates from."
                              },
                              "serializationFormat": {
                                "type": "string",
                                "description": "Content is a JSON Schema. Allowed: JSON Schema/draft-7.",
                                "default": "Json",
                                "enum": [
                                  "Json"
                                ],
                                "x-ms-enum": {
                                  "name": "SourceSerializationFormat",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Json",
                                      "value": "Json",
                                      "description": "JSON Format"
                                    }
                                  ]
                                }
                              },
                              "schemaRef": {
                                "type": "string",
                                "description": "Schema CR reference. Data will be deserialized according to the schema, and dropped if it doesn't match."
                              },
                              "dataSources": {
                                "type": "array",
                                "description": "List of source locations. Can be Broker or Kafka topics. Supports wildcards # and +.",
                                "items": {
                                  "type": "string",
                                  "description": "A string with a minimum length of 1.",
                                  "minLength": 1
                                }
                              }
                            },
                            "required": [
                              "endpointRef",
                              "dataSources"
                            ]
                          },
                          "builtInTransformationSettings": {
                            "description": "Built In Transformation configuration.",
                            "type": "object",
                            "properties": {
                              "serializationFormat": {
                                "type": "string",
                                "description": "Serialization format. Optional; defaults to JSON. Allowed value JSON Schema/draft-7, Parquet. Default: Json",
                                "default": "Json",
                                "enum": [
                                  "Delta",
                                  "Json",
                                  "Parquet"
                                ],
                                "x-ms-enum": {
                                  "name": "TransformationSerializationFormat",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Delta",
                                      "value": "Delta",
                                      "description": "Delta Format"
                                    },
                                    {
                                      "name": "Json",
                                      "value": "Json",
                                      "description": "JSON Format"
                                    },
                                    {
                                      "name": "Parquet",
                                      "value": "Parquet",
                                      "description": "Parquet Format"
                                    }
                                  ]
                                }
                              },
                              "schemaRef": {
                                "type": "string",
                                "description": "Reference to the schema that describes the output of the transformation."
                              },
                              "datasets": {
                                "type": "array",
                                "description": "Enrich data from Broker State Store. Dataset references a key in Broker State Store.",
                                "default": [],
                                "maxItems": 1,
                                "items": {
                                  "type": "object",
                                  "description": "Dataflow BuiltIn Transformation dataset properties",
                                  "properties": {
                                    "key": {
                                      "type": "string",
                                      "description": "The key of the dataset.",
                                      "maxLength": 64
                                    },
                                    "description": {
                                      "type": "string",
                                      "description": "A user provided optional description of the dataset.",
                                      "maxLength": 256
                                    },
                                    "schemaRef": {
                                      "type": "string",
                                      "description": "The reference to the schema that describes the dataset. Allowed: JSON Schema/draft-7."
                                    },
                                    "inputs": {
                                      "type": "array",
                                      "description": "List of fields for enriching from the Broker State Store.",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "expression": {
                                      "type": "string",
                                      "description": "Condition to enrich data from Broker State Store. Example: $1 < 0 || $1 > $2 (Assuming inputs section $1 and $2 are provided)"
                                    }
                                  },
                                  "required": [
                                    "key",
                                    "inputs"
                                  ]
                                },
                                "x-ms-identifiers": []
                              },
                              "filter": {
                                "type": "array",
                                "description": "Filters input record or datapoints based on condition.",
                                "default": [],
                                "items": {
                                  "type": "object",
                                  "description": "Dataflow BuiltIn Transformation filter properties",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "description": "The type of dataflow operation.",
                                      "default": "Filter",
                                      "enum": [
                                        "Filter"
                                      ],
                                      "x-ms-enum": {
                                        "name": "FilterType",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Filter",
                                            "value": "Filter",
                                            "description": "Filter type"
                                          }
                                        ]
                                      }
                                    },
                                    "description": {
                                      "type": "string",
                                      "description": "A user provided optional description of the filter.",
                                      "maxLength": 256
                                    },
                                    "inputs": {
                                      "type": "array",
                                      "description": "List of fields for filtering in JSON path expression.",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "expression": {
                                      "type": "string",
                                      "description": "Condition to filter data. Can reference input fields with {n} where n is the index of the input field starting from 1. Example: $1 < 0 || $1 > $2 (Assuming inputs section $1 and $2 are provided)"
                                    }
                                  },
                                  "required": [
                                    "inputs",
                                    "expression"
                                  ]
                                },
                                "x-ms-identifiers": []
                              },
                              "map": {
                                "type": "array",
                                "description": "Maps input to output message.",
                                "default": [],
                                "items": {
                                  "type": "object",
                                  "description": "Dataflow BuiltIn Transformation map properties",
                                  "properties": {
                                    "type": {
                                      "description": "Type of transformation.",
                                      "type": "string",
                                      "enum": [
                                        "NewProperties",
                                        "Rename",
                                        "Compute",
                                        "PassThrough",
                                        "BuiltInFunction"
                                      ],
                                      "x-ms-enum": {
                                        "name": "DataflowMappingType",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "NewProperties",
                                            "value": "NewProperties",
                                            "description": "New Properties type"
                                          },
                                          {
                                            "name": "Rename",
                                            "value": "Rename",
                                            "description": "Rename type"
                                          },
                                          {
                                            "name": "Compute",
                                            "value": "Compute",
                                            "description": "Compute type"
                                          },
                                          {
                                            "name": "PassThrough",
                                            "value": "PassThrough",
                                            "description": "Pass-through type"
                                          },
                                          {
                                            "name": "BuiltInFunction",
                                            "value": "BuiltInFunction",
                                            "description": "Built in function type"
                                          }
                                        ]
                                      }
                                    },
                                    "description": {
                                      "type": "string",
                                      "description": "A user provided optional description of the mapping function.",
                                      "maxLength": 256
                                    },
                                    "inputs": {
                                      "type": "array",
                                      "description": "List of fields for mapping in JSON path expression.",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "expression": {
                                      "type": "string",
                                      "description": "Modify the inputs field(s) to the final output field. Example: $1 * 2.2 (Assuming inputs section $1 is provided)"
                                    },
                                    "output": {
                                      "type": "string",
                                      "description": "Where and how the input fields to be organized in the output record."
                                    }
                                  },
                                  "required": [
                                    "inputs",
                                    "output"
                                  ]
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "destinationSettings": {
                            "description": "Destination configuration.",
                            "type": "object",
                            "properties": {
                              "endpointRef": {
                                "type": "string",
                                "description": "Reference to the Endpoint CR. Can be of Broker, Kafka, Fabric, ADLS, ADX type."
                              },
                              "dataDestination": {
                                "type": "string",
                                "description": "A string with a minimum length of 1.",
                                "minLength": 1
                              },
                              "headers": {
                                "type": "array",
                                "description": "Headers for the output data.",
                                "items": {
                                  "type": "object",
                                  "description": "Dataflow Destination Header Action properties",
                                  "properties": {
                                    "actionType": {
                                      "description": "The type of header operation to perform.",
                                      "type": "string",
                                      "enum": [
                                        "AddIfNotPresent",
                                        "Remove",
                                        "AddOrReplace"
                                      ],
                                      "x-ms-enum": {
                                        "name": "DataflowHeaderActionType",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "AddIfNotPresent",
                                            "value": "AddIfNotPresent",
                                            "description": "Add if not present type"
                                          },
                                          {
                                            "name": "Remove",
                                            "value": "Remove",
                                            "description": "Remove type"
                                          },
                                          {
                                            "name": "AddOrReplace",
                                            "value": "AddOrReplace",
                                            "description": "Add or Replace type"
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  "discriminator": "actionType",
                                  "required": [
                                    "actionType"
                                  ]
                                },
                                "x-ms-identifiers": [
                                  "actionType"
                                ]
                              }
                            },
                            "required": [
                              "endpointRef",
                              "dataDestination"
                            ]
                          }
                        },
                        "required": [
                          "operationType"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is getting provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Resource is Updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is Deleting."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been Accepted."
                          }
                        ]
                      }
                    },
                    "healthState": {
                      "type": "string",
                      "description": "The health state of the resource.",
                      "default": "Unknown",
                      "enum": [
                        "Available",
                        "Degraded",
                        "Unavailable",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceHealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "Resource is Available and functioning as expected."
                          },
                          {
                            "name": "Degraded",
                            "value": "Degraded",
                            "description": "Resource health is degraded."
                          },
                          {
                            "name": "Unavailable",
                            "value": "Unavailable",
                            "description": "Resource is not functioning as expected."
                          },
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "Resource state is unknown."
                          }
                        ]
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "operations"
                  ]
                },
                "extendedLocation": {
                  "description": "Edge location of the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "Type of ExtendedLocation.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "CustomLocation type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Dataflow_CreateOrUpdate",
        "tags": [
          "Dataflow"
        ],
        "description": "Create a DataflowResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "dataflowProfileName",
            "in": "path",
            "description": "Name of Instance dataflowProfile resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "dataflowName",
            "in": "path",
            "description": "Name of Instance dataflowProfile dataflow resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Instance dataflowProfile dataflow resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "mode": {
                      "type": "string",
                      "description": "Mode for Dataflow. Optional; defaults to Enabled.",
                      "default": "Enabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "OperationalMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "Enabled is equivalent to True"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "Disabled is equivalent to False."
                          }
                        ]
                      }
                    },
                    "requestDiskPersistence": {
                      "type": "string",
                      "description": "Mode properties",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "OperationalMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "Enabled is equivalent to True"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "Disabled is equivalent to False."
                          }
                        ]
                      }
                    },
                    "operations": {
                      "type": "array",
                      "description": "List of operations including source and destination references as well as transformation.",
                      "items": {
                        "type": "object",
                        "description": "Dataflow Operation properties. NOTE - One only method is allowed to be used for one entry.",
                        "properties": {
                          "operationType": {
                            "description": "Type of operation.",
                            "type": "string",
                            "enum": [
                              "Source",
                              "Destination",
                              "BuiltInTransformation"
                            ],
                            "x-ms-enum": {
                              "name": "OperationType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Source",
                                  "value": "Source",
                                  "description": "Dataflow Source Operation"
                                },
                                {
                                  "name": "Destination",
                                  "value": "Destination",
                                  "description": "Dataflow Destination Operation"
                                },
                                {
                                  "name": "BuiltInTransformation",
                                  "value": "BuiltInTransformation",
                                  "description": "Dataflow BuiltIn Transformation Operation"
                                }
                              ]
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "Optional user provided name of the transformation.",
                            "maxLength": 64
                          },
                          "sourceSettings": {
                            "description": "Source configuration.",
                            "type": "object",
                            "properties": {
                              "endpointRef": {
                                "type": "string",
                                "description": "Reference to the Dataflow Endpoint resource. Can only be of Broker and Kafka type."
                              },
                              "assetRef": {
                                "type": "string",
                                "description": "Reference to the resource in Azure Device Registry where the data in the endpoint originates from."
                              },
                              "serializationFormat": {
                                "type": "string",
                                "description": "Content is a JSON Schema. Allowed: JSON Schema/draft-7.",
                                "default": "Json",
                                "enum": [
                                  "Json"
                                ],
                                "x-ms-enum": {
                                  "name": "SourceSerializationFormat",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Json",
                                      "value": "Json",
                                      "description": "JSON Format"
                                    }
                                  ]
                                }
                              },
                              "schemaRef": {
                                "type": "string",
                                "description": "Schema CR reference. Data will be deserialized according to the schema, and dropped if it doesn't match."
                              },
                              "dataSources": {
                                "type": "array",
                                "description": "List of source locations. Can be Broker or Kafka topics. Supports wildcards # and +.",
                                "items": {
                                  "type": "string",
                                  "description": "A string with a minimum length of 1.",
                                  "minLength": 1
                                }
                              }
                            },
                            "required": [
                              "endpointRef",
                              "dataSources"
                            ]
                          },
                          "builtInTransformationSettings": {
                            "description": "Built In Transformation configuration.",
                            "type": "object",
                            "properties": {
                              "serializationFormat": {
                                "type": "string",
                                "description": "Serialization format. Optional; defaults to JSON. Allowed value JSON Schema/draft-7, Parquet. Default: Json",
                                "default": "Json",
                                "enum": [
                                  "Delta",
                                  "Json",
                                  "Parquet"
                                ],
                                "x-ms-enum": {
                                  "name": "TransformationSerializationFormat",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Delta",
                                      "value": "Delta",
                                      "description": "Delta Format"
                                    },
                                    {
                                      "name": "Json",
                                      "value": "Json",
                                      "description": "JSON Format"
                                    },
                                    {
                                      "name": "Parquet",
                                      "value": "Parquet",
                                      "description": "Parquet Format"
                                    }
                                  ]
                                }
                              },
                              "schemaRef": {
                                "type": "string",
                                "description": "Reference to the schema that describes the output of the transformation."
                              },
                              "datasets": {
                                "type": "array",
                                "description": "Enrich data from Broker State Store. Dataset references a key in Broker State Store.",
                                "default": [],
                                "maxItems": 1,
                                "items": {
                                  "type": "object",
                                  "description": "Dataflow BuiltIn Transformation dataset properties",
                                  "properties": {
                                    "key": {
                                      "type": "string",
                                      "description": "The key of the dataset.",
                                      "maxLength": 64
                                    },
                                    "description": {
                                      "type": "string",
                                      "description": "A user provided optional description of the dataset.",
                                      "maxLength": 256
                                    },
                                    "schemaRef": {
                                      "type": "string",
                                      "description": "The reference to the schema that describes the dataset. Allowed: JSON Schema/draft-7."
                                    },
                                    "inputs": {
                                      "type": "array",
                                      "description": "List of fields for enriching from the Broker State Store.",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "expression": {
                                      "type": "string",
                                      "description": "Condition to enrich data from Broker State Store. Example: $1 < 0 || $1 > $2 (Assuming inputs section $1 and $2 are provided)"
                                    }
                                  },
                                  "required": [
                                    "key",
                                    "inputs"
                                  ]
                                },
                                "x-ms-identifiers": []
                              },
                              "filter": {
                                "type": "array",
                                "description": "Filters input record or datapoints based on condition.",
                                "default": [],
                                "items": {
                                  "type": "object",
                                  "description": "Dataflow BuiltIn Transformation filter properties",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "description": "The type of dataflow operation.",
                                      "default": "Filter",
                                      "enum": [
                                        "Filter"
                                      ],
                                      "x-ms-enum": {
                                        "name": "FilterType",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Filter",
                                            "value": "Filter",
                                            "description": "Filter type"
                                          }
                                        ]
                                      }
                                    },
                                    "description": {
                                      "type": "string",
                                      "description": "A user provided optional description of the filter.",
                                      "maxLength": 256
                                    },
                                    "inputs": {
                                      "type": "array",
                                      "description": "List of fields for filtering in JSON path expression.",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "expression": {
                                      "type": "string",
                                      "description": "Condition to filter data. Can reference input fields with {n} where n is the index of the input field starting from 1. Example: $1 < 0 || $1 > $2 (Assuming inputs section $1 and $2 are provided)"
                                    }
                                  },
                                  "required": [
                                    "inputs",
                                    "expression"
                                  ]
                                },
                                "x-ms-identifiers": []
                              },
                              "map": {
                                "type": "array",
                                "description": "Maps input to output message.",
                                "default": [],
                                "items": {
                                  "type": "object",
                                  "description": "Dataflow BuiltIn Transformation map properties",
                                  "properties": {
                                    "type": {
                                      "description": "Type of transformation.",
                                      "type": "string",
                                      "enum": [
                                        "NewProperties",
                                        "Rename",
                                        "Compute",
                                        "PassThrough",
                                        "BuiltInFunction"
                                      ],
                                      "x-ms-enum": {
                                        "name": "DataflowMappingType",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "NewProperties",
                                            "value": "NewProperties",
                                            "description": "New Properties type"
                                          },
                                          {
                                            "name": "Rename",
                                            "value": "Rename",
                                            "description": "Rename type"
                                          },
                                          {
                                            "name": "Compute",
                                            "value": "Compute",
                                            "description": "Compute type"
                                          },
                                          {
                                            "name": "PassThrough",
                                            "value": "PassThrough",
                                            "description": "Pass-through type"
                                          },
                                          {
                                            "name": "BuiltInFunction",
                                            "value": "BuiltInFunction",
                                            "description": "Built in function type"
                                          }
                                        ]
                                      }
                                    },
                                    "description": {
                                      "type": "string",
                                      "description": "A user provided optional description of the mapping function.",
                                      "maxLength": 256
                                    },
                                    "inputs": {
                                      "type": "array",
                                      "description": "List of fields for mapping in JSON path expression.",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "expression": {
                                      "type": "string",
                                      "description": "Modify the inputs field(s) to the final output field. Example: $1 * 2.2 (Assuming inputs section $1 is provided)"
                                    },
                                    "output": {
                                      "type": "string",
                                      "description": "Where and how the input fields to be organized in the output record."
                                    }
                                  },
                                  "required": [
                                    "inputs",
                                    "output"
                                  ]
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "destinationSettings": {
                            "description": "Destination configuration.",
                            "type": "object",
                            "properties": {
                              "endpointRef": {
                                "type": "string",
                                "description": "Reference to the Endpoint CR. Can be of Broker, Kafka, Fabric, ADLS, ADX type."
                              },
                              "dataDestination": {
                                "type": "string",
                                "description": "A string with a minimum length of 1.",
                                "minLength": 1
                              },
                              "headers": {
                                "type": "array",
                                "description": "Headers for the output data.",
                                "items": {
                                  "type": "object",
                                  "description": "Dataflow Destination Header Action properties",
                                  "properties": {
                                    "actionType": {
                                      "description": "The type of header operation to perform.",
                                      "type": "string",
                                      "enum": [
                                        "AddIfNotPresent",
                                        "Remove",
                                        "AddOrReplace"
                                      ],
                                      "x-ms-enum": {
                                        "name": "DataflowHeaderActionType",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "AddIfNotPresent",
                                            "value": "AddIfNotPresent",
                                            "description": "Add if not present type"
                                          },
                                          {
                                            "name": "Remove",
                                            "value": "Remove",
                                            "description": "Remove type"
                                          },
                                          {
                                            "name": "AddOrReplace",
                                            "value": "AddOrReplace",
                                            "description": "Add or Replace type"
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  "discriminator": "actionType",
                                  "required": [
                                    "actionType"
                                  ]
                                },
                                "x-ms-identifiers": [
                                  "actionType"
                                ]
                              }
                            },
                            "required": [
                              "endpointRef",
                              "dataDestination"
                            ]
                          }
                        },
                        "required": [
                          "operationType"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is getting provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Resource is Updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is Deleting."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been Accepted."
                          }
                        ]
                      }
                    },
                    "healthState": {
                      "type": "string",
                      "description": "The health state of the resource.",
                      "default": "Unknown",
                      "enum": [
                        "Available",
                        "Degraded",
                        "Unavailable",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceHealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "Resource is Available and functioning as expected."
                          },
                          {
                            "name": "Degraded",
                            "value": "Degraded",
                            "description": "Resource health is degraded."
                          },
                          {
                            "name": "Unavailable",
                            "value": "Unavailable",
                            "description": "Resource is not functioning as expected."
                          },
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "Resource state is unknown."
                          }
                        ]
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "operations"
                  ]
                },
                "extendedLocation": {
                  "description": "Edge location of the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "Type of ExtendedLocation.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "CustomLocation type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DataflowResource' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Instance dataflowProfile dataflow resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "mode": {
                      "type": "string",
                      "description": "Mode for Dataflow. Optional; defaults to Enabled.",
                      "default": "Enabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "OperationalMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "Enabled is equivalent to True"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "Disabled is equivalent to False."
                          }
                        ]
                      }
                    },
                    "requestDiskPersistence": {
                      "type": "string",
                      "description": "Mode properties",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "OperationalMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "Enabled is equivalent to True"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "Disabled is equivalent to False."
                          }
                        ]
                      }
                    },
                    "operations": {
                      "type": "array",
                      "description": "List of operations including source and destination references as well as transformation.",
                      "items": {
                        "type": "object",
                        "description": "Dataflow Operation properties. NOTE - One only method is allowed to be used for one entry.",
                        "properties": {
                          "operationType": {
                            "description": "Type of operation.",
                            "type": "string",
                            "enum": [
                              "Source",
                              "Destination",
                              "BuiltInTransformation"
                            ],
                            "x-ms-enum": {
                              "name": "OperationType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Source",
                                  "value": "Source",
                                  "description": "Dataflow Source Operation"
                                },
                                {
                                  "name": "Destination",
                                  "value": "Destination",
                                  "description": "Dataflow Destination Operation"
                                },
                                {
                                  "name": "BuiltInTransformation",
                                  "value": "BuiltInTransformation",
                                  "description": "Dataflow BuiltIn Transformation Operation"
                                }
                              ]
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "Optional user provided name of the transformation.",
                            "maxLength": 64
                          },
                          "sourceSettings": {
                            "description": "Source configuration.",
                            "type": "object",
                            "properties": {
                              "endpointRef": {
                                "type": "string",
                                "description": "Reference to the Dataflow Endpoint resource. Can only be of Broker and Kafka type."
                              },
                              "assetRef": {
                                "type": "string",
                                "description": "Reference to the resource in Azure Device Registry where the data in the endpoint originates from."
                              },
                              "serializationFormat": {
                                "type": "string",
                                "description": "Content is a JSON Schema. Allowed: JSON Schema/draft-7.",
                                "default": "Json",
                                "enum": [
                                  "Json"
                                ],
                                "x-ms-enum": {
                                  "name": "SourceSerializationFormat",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Json",
                                      "value": "Json",
                                      "description": "JSON Format"
                                    }
                                  ]
                                }
                              },
                              "schemaRef": {
                                "type": "string",
                                "description": "Schema CR reference. Data will be deserialized according to the schema, and dropped if it doesn't match."
                              },
                              "dataSources": {
                                "type": "array",
                                "description": "List of source locations. Can be Broker or Kafka topics. Supports wildcards # and +.",
                                "items": {
                                  "type": "string",
                                  "description": "A string with a minimum length of 1.",
                                  "minLength": 1
                                }
                              }
                            },
                            "required": [
                              "endpointRef",
                              "dataSources"
                            ]
                          },
                          "builtInTransformationSettings": {
                            "description": "Built In Transformation configuration.",
                            "type": "object",
                            "properties": {
                              "serializationFormat": {
                                "type": "string",
                                "description": "Serialization format. Optional; defaults to JSON. Allowed value JSON Schema/draft-7, Parquet. Default: Json",
                                "default": "Json",
                                "enum": [
                                  "Delta",
                                  "Json",
                                  "Parquet"
                                ],
                                "x-ms-enum": {
                                  "name": "TransformationSerializationFormat",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Delta",
                                      "value": "Delta",
                                      "description": "Delta Format"
                                    },
                                    {
                                      "name": "Json",
                                      "value": "Json",
                                      "description": "JSON Format"
                                    },
                                    {
                                      "name": "Parquet",
                                      "value": "Parquet",
                                      "description": "Parquet Format"
                                    }
                                  ]
                                }
                              },
                              "schemaRef": {
                                "type": "string",
                                "description": "Reference to the schema that describes the output of the transformation."
                              },
                              "datasets": {
                                "type": "array",
                                "description": "Enrich data from Broker State Store. Dataset references a key in Broker State Store.",
                                "default": [],
                                "maxItems": 1,
                                "items": {
                                  "type": "object",
                                  "description": "Dataflow BuiltIn Transformation dataset properties",
                                  "properties": {
                                    "key": {
                                      "type": "string",
                                      "description": "The key of the dataset.",
                                      "maxLength": 64
                                    },
                                    "description": {
                                      "type": "string",
                                      "description": "A user provided optional description of the dataset.",
                                      "maxLength": 256
                                    },
                                    "schemaRef": {
                                      "type": "string",
                                      "description": "The reference to the schema that describes the dataset. Allowed: JSON Schema/draft-7."
                                    },
                                    "inputs": {
                                      "type": "array",
                                      "description": "List of fields for enriching from the Broker State Store.",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "expression": {
                                      "type": "string",
                                      "description": "Condition to enrich data from Broker State Store. Example: $1 < 0 || $1 > $2 (Assuming inputs section $1 and $2 are provided)"
                                    }
                                  },
                                  "required": [
                                    "key",
                                    "inputs"
                                  ]
                                },
                                "x-ms-identifiers": []
                              },
                              "filter": {
                                "type": "array",
                                "description": "Filters input record or datapoints based on condition.",
                                "default": [],
                                "items": {
                                  "type": "object",
                                  "description": "Dataflow BuiltIn Transformation filter properties",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "description": "The type of dataflow operation.",
                                      "default": "Filter",
                                      "enum": [
                                        "Filter"
                                      ],
                                      "x-ms-enum": {
                                        "name": "FilterType",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Filter",
                                            "value": "Filter",
                                            "description": "Filter type"
                                          }
                                        ]
                                      }
                                    },
                                    "description": {
                                      "type": "string",
                                      "description": "A user provided optional description of the filter.",
                                      "maxLength": 256
                                    },
                                    "inputs": {
                                      "type": "array",
                                      "description": "List of fields for filtering in JSON path expression.",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "expression": {
                                      "type": "string",
                                      "description": "Condition to filter data. Can reference input fields with {n} where n is the index of the input field starting from 1. Example: $1 < 0 || $1 > $2 (Assuming inputs section $1 and $2 are provided)"
                                    }
                                  },
                                  "required": [
                                    "inputs",
                                    "expression"
                                  ]
                                },
                                "x-ms-identifiers": []
                              },
                              "map": {
                                "type": "array",
                                "description": "Maps input to output message.",
                                "default": [],
                                "items": {
                                  "type": "object",
                                  "description": "Dataflow BuiltIn Transformation map properties",
                                  "properties": {
                                    "type": {
                                      "description": "Type of transformation.",
                                      "type": "string",
                                      "enum": [
                                        "NewProperties",
                                        "Rename",
                                        "Compute",
                                        "PassThrough",
                                        "BuiltInFunction"
                                      ],
                                      "x-ms-enum": {
                                        "name": "DataflowMappingType",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "NewProperties",
                                            "value": "NewProperties",
                                            "description": "New Properties type"
                                          },
                                          {
                                            "name": "Rename",
                                            "value": "Rename",
                                            "description": "Rename type"
                                          },
                                          {
                                            "name": "Compute",
                                            "value": "Compute",
                                            "description": "Compute type"
                                          },
                                          {
                                            "name": "PassThrough",
                                            "value": "PassThrough",
                                            "description": "Pass-through type"
                                          },
                                          {
                                            "name": "BuiltInFunction",
                                            "value": "BuiltInFunction",
                                            "description": "Built in function type"
                                          }
                                        ]
                                      }
                                    },
                                    "description": {
                                      "type": "string",
                                      "description": "A user provided optional description of the mapping function.",
                                      "maxLength": 256
                                    },
                                    "inputs": {
                                      "type": "array",
                                      "description": "List of fields for mapping in JSON path expression.",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "expression": {
                                      "type": "string",
                                      "description": "Modify the inputs field(s) to the final output field. Example: $1 * 2.2 (Assuming inputs section $1 is provided)"
                                    },
                                    "output": {
                                      "type": "string",
                                      "description": "Where and how the input fields to be organized in the output record."
                                    }
                                  },
                                  "required": [
                                    "inputs",
                                    "output"
                                  ]
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "destinationSettings": {
                            "description": "Destination configuration.",
                            "type": "object",
                            "properties": {
                              "endpointRef": {
                                "type": "string",
                                "description": "Reference to the Endpoint CR. Can be of Broker, Kafka, Fabric, ADLS, ADX type."
                              },
                              "dataDestination": {
                                "type": "string",
                                "description": "A string with a minimum length of 1.",
                                "minLength": 1
                              },
                              "headers": {
                                "type": "array",
                                "description": "Headers for the output data.",
                                "items": {
                                  "type": "object",
                                  "description": "Dataflow Destination Header Action properties",
                                  "properties": {
                                    "actionType": {
                                      "description": "The type of header operation to perform.",
                                      "type": "string",
                                      "enum": [
                                        "AddIfNotPresent",
                                        "Remove",
                                        "AddOrReplace"
                                      ],
                                      "x-ms-enum": {
                                        "name": "DataflowHeaderActionType",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "AddIfNotPresent",
                                            "value": "AddIfNotPresent",
                                            "description": "Add if not present type"
                                          },
                                          {
                                            "name": "Remove",
                                            "value": "Remove",
                                            "description": "Remove type"
                                          },
                                          {
                                            "name": "AddOrReplace",
                                            "value": "AddOrReplace",
                                            "description": "Add or Replace type"
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  "discriminator": "actionType",
                                  "required": [
                                    "actionType"
                                  ]
                                },
                                "x-ms-identifiers": [
                                  "actionType"
                                ]
                              }
                            },
                            "required": [
                              "endpointRef",
                              "dataDestination"
                            ]
                          }
                        },
                        "required": [
                          "operationType"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is getting provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Resource is Updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is Deleting."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been Accepted."
                          }
                        ]
                      }
                    },
                    "healthState": {
                      "type": "string",
                      "description": "The health state of the resource.",
                      "default": "Unknown",
                      "enum": [
                        "Available",
                        "Degraded",
                        "Unavailable",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceHealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "Resource is Available and functioning as expected."
                          },
                          {
                            "name": "Degraded",
                            "value": "Degraded",
                            "description": "Resource health is degraded."
                          },
                          {
                            "name": "Unavailable",
                            "value": "Unavailable",
                            "description": "Resource is not functioning as expected."
                          },
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "Resource state is unknown."
                          }
                        ]
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "operations"
                  ]
                },
                "extendedLocation": {
                  "description": "Edge location of the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "Type of ExtendedLocation.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "CustomLocation type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Resource 'DataflowResource' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Instance dataflowProfile dataflow resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "mode": {
                      "type": "string",
                      "description": "Mode for Dataflow. Optional; defaults to Enabled.",
                      "default": "Enabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "OperationalMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "Enabled is equivalent to True"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "Disabled is equivalent to False."
                          }
                        ]
                      }
                    },
                    "requestDiskPersistence": {
                      "type": "string",
                      "description": "Mode properties",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "OperationalMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "Enabled is equivalent to True"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "Disabled is equivalent to False."
                          }
                        ]
                      }
                    },
                    "operations": {
                      "type": "array",
                      "description": "List of operations including source and destination references as well as transformation.",
                      "items": {
                        "type": "object",
                        "description": "Dataflow Operation properties. NOTE - One only method is allowed to be used for one entry.",
                        "properties": {
                          "operationType": {
                            "description": "Type of operation.",
                            "type": "string",
                            "enum": [
                              "Source",
                              "Destination",
                              "BuiltInTransformation"
                            ],
                            "x-ms-enum": {
                              "name": "OperationType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Source",
                                  "value": "Source",
                                  "description": "Dataflow Source Operation"
                                },
                                {
                                  "name": "Destination",
                                  "value": "Destination",
                                  "description": "Dataflow Destination Operation"
                                },
                                {
                                  "name": "BuiltInTransformation",
                                  "value": "BuiltInTransformation",
                                  "description": "Dataflow BuiltIn Transformation Operation"
                                }
                              ]
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "Optional user provided name of the transformation.",
                            "maxLength": 64
                          },
                          "sourceSettings": {
                            "description": "Source configuration.",
                            "type": "object",
                            "properties": {
                              "endpointRef": {
                                "type": "string",
                                "description": "Reference to the Dataflow Endpoint resource. Can only be of Broker and Kafka type."
                              },
                              "assetRef": {
                                "type": "string",
                                "description": "Reference to the resource in Azure Device Registry where the data in the endpoint originates from."
                              },
                              "serializationFormat": {
                                "type": "string",
                                "description": "Content is a JSON Schema. Allowed: JSON Schema/draft-7.",
                                "default": "Json",
                                "enum": [
                                  "Json"
                                ],
                                "x-ms-enum": {
                                  "name": "SourceSerializationFormat",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Json",
                                      "value": "Json",
                                      "description": "JSON Format"
                                    }
                                  ]
                                }
                              },
                              "schemaRef": {
                                "type": "string",
                                "description": "Schema CR reference. Data will be deserialized according to the schema, and dropped if it doesn't match."
                              },
                              "dataSources": {
                                "type": "array",
                                "description": "List of source locations. Can be Broker or Kafka topics. Supports wildcards # and +.",
                                "items": {
                                  "type": "string",
                                  "description": "A string with a minimum length of 1.",
                                  "minLength": 1
                                }
                              }
                            },
                            "required": [
                              "endpointRef",
                              "dataSources"
                            ]
                          },
                          "builtInTransformationSettings": {
                            "description": "Built In Transformation configuration.",
                            "type": "object",
                            "properties": {
                              "serializationFormat": {
                                "type": "string",
                                "description": "Serialization format. Optional; defaults to JSON. Allowed value JSON Schema/draft-7, Parquet. Default: Json",
                                "default": "Json",
                                "enum": [
                                  "Delta",
                                  "Json",
                                  "Parquet"
                                ],
                                "x-ms-enum": {
                                  "name": "TransformationSerializationFormat",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Delta",
                                      "value": "Delta",
                                      "description": "Delta Format"
                                    },
                                    {
                                      "name": "Json",
                                      "value": "Json",
                                      "description": "JSON Format"
                                    },
                                    {
                                      "name": "Parquet",
                                      "value": "Parquet",
                                      "description": "Parquet Format"
                                    }
                                  ]
                                }
                              },
                              "schemaRef": {
                                "type": "string",
                                "description": "Reference to the schema that describes the output of the transformation."
                              },
                              "datasets": {
                                "type": "array",
                                "description": "Enrich data from Broker State Store. Dataset references a key in Broker State Store.",
                                "default": [],
                                "maxItems": 1,
                                "items": {
                                  "type": "object",
                                  "description": "Dataflow BuiltIn Transformation dataset properties",
                                  "properties": {
                                    "key": {
                                      "type": "string",
                                      "description": "The key of the dataset.",
                                      "maxLength": 64
                                    },
                                    "description": {
                                      "type": "string",
                                      "description": "A user provided optional description of the dataset.",
                                      "maxLength": 256
                                    },
                                    "schemaRef": {
                                      "type": "string",
                                      "description": "The reference to the schema that describes the dataset. Allowed: JSON Schema/draft-7."
                                    },
                                    "inputs": {
                                      "type": "array",
                                      "description": "List of fields for enriching from the Broker State Store.",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "expression": {
                                      "type": "string",
                                      "description": "Condition to enrich data from Broker State Store. Example: $1 < 0 || $1 > $2 (Assuming inputs section $1 and $2 are provided)"
                                    }
                                  },
                                  "required": [
                                    "key",
                                    "inputs"
                                  ]
                                },
                                "x-ms-identifiers": []
                              },
                              "filter": {
                                "type": "array",
                                "description": "Filters input record or datapoints based on condition.",
                                "default": [],
                                "items": {
                                  "type": "object",
                                  "description": "Dataflow BuiltIn Transformation filter properties",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "description": "The type of dataflow operation.",
                                      "default": "Filter",
                                      "enum": [
                                        "Filter"
                                      ],
                                      "x-ms-enum": {
                                        "name": "FilterType",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Filter",
                                            "value": "Filter",
                                            "description": "Filter type"
                                          }
                                        ]
                                      }
                                    },
                                    "description": {
                                      "type": "string",
                                      "description": "A user provided optional description of the filter.",
                                      "maxLength": 256
                                    },
                                    "inputs": {
                                      "type": "array",
                                      "description": "List of fields for filtering in JSON path expression.",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "expression": {
                                      "type": "string",
                                      "description": "Condition to filter data. Can reference input fields with {n} where n is the index of the input field starting from 1. Example: $1 < 0 || $1 > $2 (Assuming inputs section $1 and $2 are provided)"
                                    }
                                  },
                                  "required": [
                                    "inputs",
                                    "expression"
                                  ]
                                },
                                "x-ms-identifiers": []
                              },
                              "map": {
                                "type": "array",
                                "description": "Maps input to output message.",
                                "default": [],
                                "items": {
                                  "type": "object",
                                  "description": "Dataflow BuiltIn Transformation map properties",
                                  "properties": {
                                    "type": {
                                      "description": "Type of transformation.",
                                      "type": "string",
                                      "enum": [
                                        "NewProperties",
                                        "Rename",
                                        "Compute",
                                        "PassThrough",
                                        "BuiltInFunction"
                                      ],
                                      "x-ms-enum": {
                                        "name": "DataflowMappingType",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "NewProperties",
                                            "value": "NewProperties",
                                            "description": "New Properties type"
                                          },
                                          {
                                            "name": "Rename",
                                            "value": "Rename",
                                            "description": "Rename type"
                                          },
                                          {
                                            "name": "Compute",
                                            "value": "Compute",
                                            "description": "Compute type"
                                          },
                                          {
                                            "name": "PassThrough",
                                            "value": "PassThrough",
                                            "description": "Pass-through type"
                                          },
                                          {
                                            "name": "BuiltInFunction",
                                            "value": "BuiltInFunction",
                                            "description": "Built in function type"
                                          }
                                        ]
                                      }
                                    },
                                    "description": {
                                      "type": "string",
                                      "description": "A user provided optional description of the mapping function.",
                                      "maxLength": 256
                                    },
                                    "inputs": {
                                      "type": "array",
                                      "description": "List of fields for mapping in JSON path expression.",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "expression": {
                                      "type": "string",
                                      "description": "Modify the inputs field(s) to the final output field. Example: $1 * 2.2 (Assuming inputs section $1 is provided)"
                                    },
                                    "output": {
                                      "type": "string",
                                      "description": "Where and how the input fields to be organized in the output record."
                                    }
                                  },
                                  "required": [
                                    "inputs",
                                    "output"
                                  ]
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "destinationSettings": {
                            "description": "Destination configuration.",
                            "type": "object",
                            "properties": {
                              "endpointRef": {
                                "type": "string",
                                "description": "Reference to the Endpoint CR. Can be of Broker, Kafka, Fabric, ADLS, ADX type."
                              },
                              "dataDestination": {
                                "type": "string",
                                "description": "A string with a minimum length of 1.",
                                "minLength": 1
                              },
                              "headers": {
                                "type": "array",
                                "description": "Headers for the output data.",
                                "items": {
                                  "type": "object",
                                  "description": "Dataflow Destination Header Action properties",
                                  "properties": {
                                    "actionType": {
                                      "description": "The type of header operation to perform.",
                                      "type": "string",
                                      "enum": [
                                        "AddIfNotPresent",
                                        "Remove",
                                        "AddOrReplace"
                                      ],
                                      "x-ms-enum": {
                                        "name": "DataflowHeaderActionType",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "AddIfNotPresent",
                                            "value": "AddIfNotPresent",
                                            "description": "Add if not present type"
                                          },
                                          {
                                            "name": "Remove",
                                            "value": "Remove",
                                            "description": "Remove type"
                                          },
                                          {
                                            "name": "AddOrReplace",
                                            "value": "AddOrReplace",
                                            "description": "Add or Replace type"
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  "discriminator": "actionType",
                                  "required": [
                                    "actionType"
                                  ]
                                },
                                "x-ms-identifiers": [
                                  "actionType"
                                ]
                              }
                            },
                            "required": [
                              "endpointRef",
                              "dataDestination"
                            ]
                          }
                        },
                        "required": [
                          "operationType"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is getting provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Resource is Updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is Deleting."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been Accepted."
                          }
                        ]
                      }
                    },
                    "healthState": {
                      "type": "string",
                      "description": "The health state of the resource.",
                      "default": "Unknown",
                      "enum": [
                        "Available",
                        "Degraded",
                        "Unavailable",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceHealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "Resource is Available and functioning as expected."
                          },
                          {
                            "name": "Degraded",
                            "value": "Degraded",
                            "description": "Resource health is degraded."
                          },
                          {
                            "name": "Unavailable",
                            "value": "Unavailable",
                            "description": "Resource is not functioning as expected."
                          },
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "Resource state is unknown."
                          }
                        ]
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "operations"
                  ]
                },
                "extendedLocation": {
                  "description": "Edge location of the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "Type of ExtendedLocation.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "CustomLocation type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                }
              }
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Dataflow_Delete",
        "tags": [
          "Dataflow"
        ],
        "description": "Delete a DataflowResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "dataflowProfileName",
            "in": "path",
            "description": "Name of Instance dataflowProfile resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "dataflowName",
            "in": "path",
            "description": "Name of Instance dataflowProfile dataflow resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperations/instances/{instanceName}/registryEndpoints": {
      "get": {
        "operationId": "RegistryEndpoint_ListByInstanceResource",
        "tags": [
          "RegistryEndpoint"
        ],
        "description": "List RegistryEndpointResource resources by InstanceResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a RegistryEndpointResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The RegistryEndpointResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "RegistryEndpoint resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "host": {
                            "type": "string",
                            "description": "The Container Registry endpoint hostname.",
                            "minLength": 3,
                            "maxLength": 63
                          },
                          "authentication": {
                            "description": "The authentication settings for the Azure Container Registry.",
                            "type": "object",
                            "properties": {
                              "method": {
                                "description": "The authentication method.",
                                "type": "string",
                                "enum": [
                                  "SystemAssignedManagedIdentity",
                                  "UserAssignedManagedIdentity",
                                  "Anonymous",
                                  "ArtifactPullSecret"
                                ],
                                "x-ms-enum": {
                                  "name": "RegistryEndpointAuthenticationMethod",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "SystemAssignedManagedIdentity",
                                      "value": "SystemAssignedManagedIdentity",
                                      "description": "SystemAssignedManagedIdentity type"
                                    },
                                    {
                                      "name": "UserAssignedManagedIdentity",
                                      "value": "UserAssignedManagedIdentity",
                                      "description": "UserAssignedManagedIdentity type"
                                    },
                                    {
                                      "name": "Anonymous",
                                      "value": "Anonymous",
                                      "description": "Anonymous Option"
                                    },
                                    {
                                      "name": "ArtifactPullSecret",
                                      "value": "ArtifactPullSecret",
                                      "description": "Artifact Pull Secret authentication"
                                    }
                                  ]
                                }
                              }
                            },
                            "discriminator": "method",
                            "required": [
                              "method"
                            ]
                          },
                          "provisioningState": {
                            "description": "The status of the last operation.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "Resource is getting provisioned."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "Resource is Updating."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Resource is Deleting."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "Resource has been Accepted."
                                }
                              ]
                            }
                          },
                          "healthState": {
                            "type": "string",
                            "description": "The health state of the resource.",
                            "default": "Unknown",
                            "enum": [
                              "Available",
                              "Degraded",
                              "Unavailable",
                              "Unknown"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceHealthState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Available",
                                  "value": "Available",
                                  "description": "Resource is Available and functioning as expected."
                                },
                                {
                                  "name": "Degraded",
                                  "value": "Degraded",
                                  "description": "Resource health is degraded."
                                },
                                {
                                  "name": "Unavailable",
                                  "value": "Unavailable",
                                  "description": "Resource is not functioning as expected."
                                },
                                {
                                  "name": "Unknown",
                                  "value": "Unknown",
                                  "description": "Resource state is unknown."
                                }
                              ]
                            },
                            "readOnly": true
                          },
                          "codeSigningCas": {
                            "type": "array",
                            "description": "The signing certificate authorities used by artifacts in the registry endpoint",
                            "items": {
                              "type": "object",
                              "description": "RegistryEndpoint Trust properties",
                              "properties": {
                                "type": {
                                  "description": "The trust type for the registry endpoint.",
                                  "type": "string",
                                  "enum": [
                                    "Secret",
                                    "ConfigMap"
                                  ],
                                  "x-ms-enum": {
                                    "name": "RegistryEndpointTrustedSigningKeyType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Secret",
                                        "value": "Secret",
                                        "description": "Trust settings stored in a Kubernetes Secret."
                                      },
                                      {
                                        "name": "ConfigMap",
                                        "value": "ConfigMap",
                                        "description": "Trust settings stored in a Kubernetes ConfigMap."
                                      }
                                    ]
                                  }
                                }
                              },
                              "discriminator": "type",
                              "required": [
                                "type"
                              ]
                            },
                            "x-ms-identifiers": []
                          }
                        },
                        "required": [
                          "host",
                          "authentication"
                        ]
                      },
                      "extendedLocation": {
                        "description": "Edge location of the resource.",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the extended location."
                          },
                          "type": {
                            "description": "Type of ExtendedLocation.",
                            "type": "string",
                            "enum": [
                              "CustomLocation"
                            ],
                            "x-ms-enum": {
                              "name": "ExtendedLocationType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "CustomLocation",
                                  "value": "CustomLocation",
                                  "description": "CustomLocation type"
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "name",
                          "type"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperations/instances/{instanceName}/registryEndpoints/{registryEndpointName}": {
      "get": {
        "operationId": "RegistryEndpoint_Get",
        "tags": [
          "RegistryEndpoint"
        ],
        "description": "Get a RegistryEndpointResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "registryEndpointName",
            "in": "path",
            "description": "Name of RegistryEndpoint resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "RegistryEndpoint resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "host": {
                      "type": "string",
                      "description": "The Container Registry endpoint hostname.",
                      "minLength": 3,
                      "maxLength": 63
                    },
                    "authentication": {
                      "description": "The authentication settings for the Azure Container Registry.",
                      "type": "object",
                      "properties": {
                        "method": {
                          "description": "The authentication method.",
                          "type": "string",
                          "enum": [
                            "SystemAssignedManagedIdentity",
                            "UserAssignedManagedIdentity",
                            "Anonymous",
                            "ArtifactPullSecret"
                          ],
                          "x-ms-enum": {
                            "name": "RegistryEndpointAuthenticationMethod",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "SystemAssignedManagedIdentity",
                                "value": "SystemAssignedManagedIdentity",
                                "description": "SystemAssignedManagedIdentity type"
                              },
                              {
                                "name": "UserAssignedManagedIdentity",
                                "value": "UserAssignedManagedIdentity",
                                "description": "UserAssignedManagedIdentity type"
                              },
                              {
                                "name": "Anonymous",
                                "value": "Anonymous",
                                "description": "Anonymous Option"
                              },
                              {
                                "name": "ArtifactPullSecret",
                                "value": "ArtifactPullSecret",
                                "description": "Artifact Pull Secret authentication"
                              }
                            ]
                          }
                        }
                      },
                      "discriminator": "method",
                      "required": [
                        "method"
                      ]
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is getting provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Resource is Updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is Deleting."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been Accepted."
                          }
                        ]
                      }
                    },
                    "healthState": {
                      "type": "string",
                      "description": "The health state of the resource.",
                      "default": "Unknown",
                      "enum": [
                        "Available",
                        "Degraded",
                        "Unavailable",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceHealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "Resource is Available and functioning as expected."
                          },
                          {
                            "name": "Degraded",
                            "value": "Degraded",
                            "description": "Resource health is degraded."
                          },
                          {
                            "name": "Unavailable",
                            "value": "Unavailable",
                            "description": "Resource is not functioning as expected."
                          },
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "Resource state is unknown."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "codeSigningCas": {
                      "type": "array",
                      "description": "The signing certificate authorities used by artifacts in the registry endpoint",
                      "items": {
                        "type": "object",
                        "description": "RegistryEndpoint Trust properties",
                        "properties": {
                          "type": {
                            "description": "The trust type for the registry endpoint.",
                            "type": "string",
                            "enum": [
                              "Secret",
                              "ConfigMap"
                            ],
                            "x-ms-enum": {
                              "name": "RegistryEndpointTrustedSigningKeyType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Secret",
                                  "value": "Secret",
                                  "description": "Trust settings stored in a Kubernetes Secret."
                                },
                                {
                                  "name": "ConfigMap",
                                  "value": "ConfigMap",
                                  "description": "Trust settings stored in a Kubernetes ConfigMap."
                                }
                              ]
                            }
                          }
                        },
                        "discriminator": "type",
                        "required": [
                          "type"
                        ]
                      },
                      "x-ms-identifiers": []
                    }
                  },
                  "required": [
                    "host",
                    "authentication"
                  ]
                },
                "extendedLocation": {
                  "description": "Edge location of the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "Type of ExtendedLocation.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "CustomLocation type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "RegistryEndpoint_CreateOrUpdate",
        "tags": [
          "RegistryEndpoint"
        ],
        "description": "Create a RegistryEndpointResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "registryEndpointName",
            "in": "path",
            "description": "Name of RegistryEndpoint resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "RegistryEndpoint resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "host": {
                      "type": "string",
                      "description": "The Container Registry endpoint hostname.",
                      "minLength": 3,
                      "maxLength": 63
                    },
                    "authentication": {
                      "description": "The authentication settings for the Azure Container Registry.",
                      "type": "object",
                      "properties": {
                        "method": {
                          "description": "The authentication method.",
                          "type": "string",
                          "enum": [
                            "SystemAssignedManagedIdentity",
                            "UserAssignedManagedIdentity",
                            "Anonymous",
                            "ArtifactPullSecret"
                          ],
                          "x-ms-enum": {
                            "name": "RegistryEndpointAuthenticationMethod",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "SystemAssignedManagedIdentity",
                                "value": "SystemAssignedManagedIdentity",
                                "description": "SystemAssignedManagedIdentity type"
                              },
                              {
                                "name": "UserAssignedManagedIdentity",
                                "value": "UserAssignedManagedIdentity",
                                "description": "UserAssignedManagedIdentity type"
                              },
                              {
                                "name": "Anonymous",
                                "value": "Anonymous",
                                "description": "Anonymous Option"
                              },
                              {
                                "name": "ArtifactPullSecret",
                                "value": "ArtifactPullSecret",
                                "description": "Artifact Pull Secret authentication"
                              }
                            ]
                          }
                        }
                      },
                      "discriminator": "method",
                      "required": [
                        "method"
                      ]
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is getting provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Resource is Updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is Deleting."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been Accepted."
                          }
                        ]
                      }
                    },
                    "healthState": {
                      "type": "string",
                      "description": "The health state of the resource.",
                      "default": "Unknown",
                      "enum": [
                        "Available",
                        "Degraded",
                        "Unavailable",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceHealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "Resource is Available and functioning as expected."
                          },
                          {
                            "name": "Degraded",
                            "value": "Degraded",
                            "description": "Resource health is degraded."
                          },
                          {
                            "name": "Unavailable",
                            "value": "Unavailable",
                            "description": "Resource is not functioning as expected."
                          },
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "Resource state is unknown."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "codeSigningCas": {
                      "type": "array",
                      "description": "The signing certificate authorities used by artifacts in the registry endpoint",
                      "items": {
                        "type": "object",
                        "description": "RegistryEndpoint Trust properties",
                        "properties": {
                          "type": {
                            "description": "The trust type for the registry endpoint.",
                            "type": "string",
                            "enum": [
                              "Secret",
                              "ConfigMap"
                            ],
                            "x-ms-enum": {
                              "name": "RegistryEndpointTrustedSigningKeyType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Secret",
                                  "value": "Secret",
                                  "description": "Trust settings stored in a Kubernetes Secret."
                                },
                                {
                                  "name": "ConfigMap",
                                  "value": "ConfigMap",
                                  "description": "Trust settings stored in a Kubernetes ConfigMap."
                                }
                              ]
                            }
                          }
                        },
                        "discriminator": "type",
                        "required": [
                          "type"
                        ]
                      },
                      "x-ms-identifiers": []
                    }
                  },
                  "required": [
                    "host",
                    "authentication"
                  ]
                },
                "extendedLocation": {
                  "description": "Edge location of the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "Type of ExtendedLocation.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "CustomLocation type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'RegistryEndpointResource' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "RegistryEndpoint resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "host": {
                      "type": "string",
                      "description": "The Container Registry endpoint hostname.",
                      "minLength": 3,
                      "maxLength": 63
                    },
                    "authentication": {
                      "description": "The authentication settings for the Azure Container Registry.",
                      "type": "object",
                      "properties": {
                        "method": {
                          "description": "The authentication method.",
                          "type": "string",
                          "enum": [
                            "SystemAssignedManagedIdentity",
                            "UserAssignedManagedIdentity",
                            "Anonymous",
                            "ArtifactPullSecret"
                          ],
                          "x-ms-enum": {
                            "name": "RegistryEndpointAuthenticationMethod",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "SystemAssignedManagedIdentity",
                                "value": "SystemAssignedManagedIdentity",
                                "description": "SystemAssignedManagedIdentity type"
                              },
                              {
                                "name": "UserAssignedManagedIdentity",
                                "value": "UserAssignedManagedIdentity",
                                "description": "UserAssignedManagedIdentity type"
                              },
                              {
                                "name": "Anonymous",
                                "value": "Anonymous",
                                "description": "Anonymous Option"
                              },
                              {
                                "name": "ArtifactPullSecret",
                                "value": "ArtifactPullSecret",
                                "description": "Artifact Pull Secret authentication"
                              }
                            ]
                          }
                        }
                      },
                      "discriminator": "method",
                      "required": [
                        "method"
                      ]
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is getting provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Resource is Updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is Deleting."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been Accepted."
                          }
                        ]
                      }
                    },
                    "healthState": {
                      "type": "string",
                      "description": "The health state of the resource.",
                      "default": "Unknown",
                      "enum": [
                        "Available",
                        "Degraded",
                        "Unavailable",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceHealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "Resource is Available and functioning as expected."
                          },
                          {
                            "name": "Degraded",
                            "value": "Degraded",
                            "description": "Resource health is degraded."
                          },
                          {
                            "name": "Unavailable",
                            "value": "Unavailable",
                            "description": "Resource is not functioning as expected."
                          },
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "Resource state is unknown."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "codeSigningCas": {
                      "type": "array",
                      "description": "The signing certificate authorities used by artifacts in the registry endpoint",
                      "items": {
                        "type": "object",
                        "description": "RegistryEndpoint Trust properties",
                        "properties": {
                          "type": {
                            "description": "The trust type for the registry endpoint.",
                            "type": "string",
                            "enum": [
                              "Secret",
                              "ConfigMap"
                            ],
                            "x-ms-enum": {
                              "name": "RegistryEndpointTrustedSigningKeyType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Secret",
                                  "value": "Secret",
                                  "description": "Trust settings stored in a Kubernetes Secret."
                                },
                                {
                                  "name": "ConfigMap",
                                  "value": "ConfigMap",
                                  "description": "Trust settings stored in a Kubernetes ConfigMap."
                                }
                              ]
                            }
                          }
                        },
                        "discriminator": "type",
                        "required": [
                          "type"
                        ]
                      },
                      "x-ms-identifiers": []
                    }
                  },
                  "required": [
                    "host",
                    "authentication"
                  ]
                },
                "extendedLocation": {
                  "description": "Edge location of the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "Type of ExtendedLocation.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "CustomLocation type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Resource 'RegistryEndpointResource' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "RegistryEndpoint resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "host": {
                      "type": "string",
                      "description": "The Container Registry endpoint hostname.",
                      "minLength": 3,
                      "maxLength": 63
                    },
                    "authentication": {
                      "description": "The authentication settings for the Azure Container Registry.",
                      "type": "object",
                      "properties": {
                        "method": {
                          "description": "The authentication method.",
                          "type": "string",
                          "enum": [
                            "SystemAssignedManagedIdentity",
                            "UserAssignedManagedIdentity",
                            "Anonymous",
                            "ArtifactPullSecret"
                          ],
                          "x-ms-enum": {
                            "name": "RegistryEndpointAuthenticationMethod",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "SystemAssignedManagedIdentity",
                                "value": "SystemAssignedManagedIdentity",
                                "description": "SystemAssignedManagedIdentity type"
                              },
                              {
                                "name": "UserAssignedManagedIdentity",
                                "value": "UserAssignedManagedIdentity",
                                "description": "UserAssignedManagedIdentity type"
                              },
                              {
                                "name": "Anonymous",
                                "value": "Anonymous",
                                "description": "Anonymous Option"
                              },
                              {
                                "name": "ArtifactPullSecret",
                                "value": "ArtifactPullSecret",
                                "description": "Artifact Pull Secret authentication"
                              }
                            ]
                          }
                        }
                      },
                      "discriminator": "method",
                      "required": [
                        "method"
                      ]
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is getting provisioned."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "Resource is Updating."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "Resource is Deleting."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Resource has been Accepted."
                          }
                        ]
                      }
                    },
                    "healthState": {
                      "type": "string",
                      "description": "The health state of the resource.",
                      "default": "Unknown",
                      "enum": [
                        "Available",
                        "Degraded",
                        "Unavailable",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceHealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Available",
                            "value": "Available",
                            "description": "Resource is Available and functioning as expected."
                          },
                          {
                            "name": "Degraded",
                            "value": "Degraded",
                            "description": "Resource health is degraded."
                          },
                          {
                            "name": "Unavailable",
                            "value": "Unavailable",
                            "description": "Resource is not functioning as expected."
                          },
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "Resource state is unknown."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "codeSigningCas": {
                      "type": "array",
                      "description": "The signing certificate authorities used by artifacts in the registry endpoint",
                      "items": {
                        "type": "object",
                        "description": "RegistryEndpoint Trust properties",
                        "properties": {
                          "type": {
                            "description": "The trust type for the registry endpoint.",
                            "type": "string",
                            "enum": [
                              "Secret",
                              "ConfigMap"
                            ],
                            "x-ms-enum": {
                              "name": "RegistryEndpointTrustedSigningKeyType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Secret",
                                  "value": "Secret",
                                  "description": "Trust settings stored in a Kubernetes Secret."
                                },
                                {
                                  "name": "ConfigMap",
                                  "value": "ConfigMap",
                                  "description": "Trust settings stored in a Kubernetes ConfigMap."
                                }
                              ]
                            }
                          }
                        },
                        "discriminator": "type",
                        "required": [
                          "type"
                        ]
                      },
                      "x-ms-identifiers": []
                    }
                  },
                  "required": [
                    "host",
                    "authentication"
                  ]
                },
                "extendedLocation": {
                  "description": "Edge location of the resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "Type of ExtendedLocation.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "CustomLocation",
                            "value": "CustomLocation",
                            "description": "CustomLocation type"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "type"
                  ]
                }
              }
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "RegistryEndpoint_Delete",
        "tags": [
          "RegistryEndpoint"
        ],
        "description": "Delete a RegistryEndpointResource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          },
          {
            "name": "registryEndpointName",
            "in": "path",
            "description": "Name of RegistryEndpoint resource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    }
  },
  "definitions": {
    "AccessTokenMethod": {
      "type": "string",
      "description": "Access Token Method",
      "enum": [
        "AccessToken"
      ],
      "x-ms-enum": {
        "name": "AccessTokenMethod",
        "modelAsString": true,
        "values": [
          {
            "name": "AccessToken",
            "value": "AccessToken",
            "description": "AccessToken Option"
          }
        ]
      }
    },
    "AdvancedSettings": {
      "type": "object",
      "description": "Broker Advanced Settings",
      "properties": {
        "clients": {
          "description": "Configurations related to All Clients.",
          "type": "object",
          "properties": {
            "maxSessionExpirySeconds": {
              "type": "integer",
              "format": "int32",
              "description": "Upper bound of Session Expiry Interval, in seconds.",
              "minimum": 1,
              "maximum": 4294967295
            },
            "maxMessageExpirySeconds": {
              "type": "integer",
              "format": "int32",
              "description": "Upper bound of Message Expiry Interval, in seconds.",
              "minimum": 1,
              "maximum": 4294967295
            },
            "maxPacketSizeBytes": {
              "type": "integer",
              "format": "int32",
              "description": "Max message size for a packet in Bytes.",
              "minimum": 1,
              "maximum": 268435456
            },
            "subscriberQueueLimit": {
              "description": "The limit on the number of queued messages for a subscriber.",
              "type": "object",
              "properties": {
                "length": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The maximum length of the queue before messages start getting dropped.",
                  "minimum": 1
                },
                "strategy": {
                  "type": "string",
                  "description": "The strategy to use for dropping messages from the queue.",
                  "default": "None",
                  "enum": [
                    "None",
                    "DropOldest"
                  ],
                  "x-ms-enum": {
                    "name": "SubscriberMessageDropStrategy",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "None",
                        "value": "None",
                        "description": "Messages are never dropped."
                      },
                      {
                        "name": "DropOldest",
                        "value": "DropOldest",
                        "description": "The oldest message is dropped."
                      }
                    ]
                  }
                }
              }
            },
            "maxReceiveMaximum": {
              "type": "integer",
              "format": "int32",
              "description": "Upper bound of Receive Maximum that a client can request in the CONNECT packet.",
              "minimum": 1,
              "maximum": 65535
            },
            "maxKeepAliveSeconds": {
              "type": "integer",
              "format": "int32",
              "description": "Upper bound of a client's Keep Alive, in seconds.",
              "minimum": 0,
              "maximum": 65535
            }
          }
        },
        "encryptInternalTraffic": {
          "type": "string",
          "description": "The setting to enable or disable encryption of internal Traffic.",
          "default": "Enabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "OperationalMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "Enabled is equivalent to True"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "Disabled is equivalent to False."
              }
            ]
          }
        },
        "internalCerts": {
          "description": "Certificate rotation and private key configuration.",
          "type": "object",
          "properties": {
            "duration": {
              "type": "string",
              "description": "Lifetime of certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."
            },
            "renewBefore": {
              "type": "string",
              "description": "When to begin renewing certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."
            },
            "privateKey": {
              "description": "Configuration of certificate private key.",
              "type": "object",
              "properties": {
                "algorithm": {
                  "description": "algorithm for private key.",
                  "type": "string",
                  "enum": [
                    "Ec256",
                    "Ec384",
                    "Ec521",
                    "Ed25519",
                    "Rsa2048",
                    "Rsa4096",
                    "Rsa8192"
                  ],
                  "x-ms-enum": {
                    "name": "PrivateKeyAlgorithm",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Ec256",
                        "value": "Ec256",
                        "description": "Algorithm - ec256."
                      },
                      {
                        "name": "Ec384",
                        "value": "Ec384",
                        "description": "Algorithm - ec384."
                      },
                      {
                        "name": "Ec521",
                        "value": "Ec521",
                        "description": "Algorithm - ec521."
                      },
                      {
                        "name": "Ed25519",
                        "value": "Ed25519",
                        "description": "Algorithm - ed25519."
                      },
                      {
                        "name": "Rsa2048",
                        "value": "Rsa2048",
                        "description": "Algorithm - rsa2048."
                      },
                      {
                        "name": "Rsa4096",
                        "value": "Rsa4096",
                        "description": "Algorithm - rsa4096."
                      },
                      {
                        "name": "Rsa8192",
                        "value": "Rsa8192",
                        "description": "Algorithm - rsa8192."
                      }
                    ]
                  }
                },
                "rotationPolicy": {
                  "description": "cert-manager private key rotationPolicy.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never"
                  ],
                  "x-ms-enum": {
                    "name": "PrivateKeyRotationPolicy",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Always",
                        "value": "Always",
                        "description": "Rotation Policy - Always."
                      },
                      {
                        "name": "Never",
                        "value": "Never",
                        "description": "Rotation Policy - Never."
                      }
                    ]
                  }
                }
              },
              "required": [
                "algorithm",
                "rotationPolicy"
              ]
            }
          },
          "required": [
            "duration",
            "renewBefore",
            "privateKey"
          ]
        }
      }
    },
    "AkriConnectorAllocatedDevice": {
      "type": "object",
      "description": "AkriConnector allocated device.",
      "properties": {
        "deviceInboundEndpointName": {
          "type": "string",
          "description": "The name of the inbound endpoint for the device.",
          "readOnly": true
        },
        "deviceName": {
          "type": "string",
          "description": "The name of the device.",
          "readOnly": true
        }
      },
      "required": [
        "deviceInboundEndpointName",
        "deviceName"
      ]
    },
    "AkriConnectorProperties": {
      "type": "object",
      "description": "AkriConnector properties.",
      "properties": {
        "provisioningState": {
          "description": "The status of the last operation.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Updating",
            "Deleting",
            "Accepted"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Provisioning",
                "value": "Provisioning",
                "description": "Resource is getting provisioned."
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "Resource is Updating."
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "Resource is Deleting."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "Resource has been Accepted."
              }
            ]
          }
        },
        "allocatedDevices": {
          "type": "array",
          "description": "The allocated devices for the connector.",
          "items": {
            "type": "object",
            "description": "AkriConnector allocated device.",
            "properties": {
              "deviceInboundEndpointName": {
                "type": "string",
                "description": "The name of the inbound endpoint for the device.",
                "readOnly": true
              },
              "deviceName": {
                "type": "string",
                "description": "The name of the device.",
                "readOnly": true
              }
            },
            "required": [
              "deviceInboundEndpointName",
              "deviceName"
            ]
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "deviceInboundEndpointName",
            "deviceName"
          ]
        },
        "healthState": {
          "type": "string",
          "description": "The health state of the resource.",
          "default": "Unknown",
          "enum": [
            "Available",
            "Degraded",
            "Unavailable",
            "Unknown"
          ],
          "x-ms-enum": {
            "name": "ResourceHealthState",
            "modelAsString": true,
            "values": [
              {
                "name": "Available",
                "value": "Available",
                "description": "Resource is Available and functioning as expected."
              },
              {
                "name": "Degraded",
                "value": "Degraded",
                "description": "Resource health is degraded."
              },
              {
                "name": "Unavailable",
                "value": "Unavailable",
                "description": "Resource is not functioning as expected."
              },
              {
                "name": "Unknown",
                "value": "Unknown",
                "description": "Resource state is unknown."
              }
            ]
          },
          "readOnly": true
        }
      }
    },
    "AkriConnectorResource": {
      "type": "object",
      "description": "AkriConnector resource.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "The status of the last operation.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "Resource is getting provisioned."
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "Resource is Updating."
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "Resource is Deleting."
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "Resource has been Accepted."
                  }
                ]
              }
            },
            "allocatedDevices": {
              "type": "array",
              "description": "The allocated devices for the connector.",
              "items": {
                "type": "object",
                "description": "AkriConnector allocated device.",
                "properties": {
                  "deviceInboundEndpointName": {
                    "type": "string",
                    "description": "The name of the inbound endpoint for the device.",
                    "readOnly": true
                  },
                  "deviceName": {
                    "type": "string",
                    "description": "The name of the device.",
                    "readOnly": true
                  }
                },
                "required": [
                  "deviceInboundEndpointName",
                  "deviceName"
                ]
              },
              "readOnly": true,
              "x-ms-identifiers": [
                "deviceInboundEndpointName",
                "deviceName"
              ]
            },
            "healthState": {
              "type": "string",
              "description": "The health state of the resource.",
              "default": "Unknown",
              "enum": [
                "Available",
                "Degraded",
                "Unavailable",
                "Unknown"
              ],
              "x-ms-enum": {
                "name": "ResourceHealthState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Available",
                    "value": "Available",
                    "description": "Resource is Available and functioning as expected."
                  },
                  {
                    "name": "Degraded",
                    "value": "Degraded",
                    "description": "Resource health is degraded."
                  },
                  {
                    "name": "Unavailable",
                    "value": "Unavailable",
                    "description": "Resource is not functioning as expected."
                  },
                  {
                    "name": "Unknown",
                    "value": "Unknown",
                    "description": "Resource state is unknown."
                  }
                ]
              },
              "readOnly": true
            }
          }
        },
        "extendedLocation": {
          "description": "Edge location of the resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the extended location."
            },
            "type": {
              "description": "Type of ExtendedLocation.",
              "type": "string",
              "enum": [
                "CustomLocation"
              ],
              "x-ms-enum": {
                "name": "ExtendedLocationType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "CustomLocation",
                    "value": "CustomLocation",
                    "description": "CustomLocation type"
                  }
                ]
              }
            }
          },
          "required": [
            "name",
            "type"
          ]
        }
      }
    },
    "AkriConnectorResourceListResult": {
      "type": "object",
      "description": "The response of a AkriConnectorResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The AkriConnectorResource items on this page",
          "items": {
            "type": "object",
            "description": "AkriConnector resource.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "The status of the last operation.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Provisioning",
                      "Updating",
                      "Deleting",
                      "Accepted"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Provisioning",
                          "value": "Provisioning",
                          "description": "Resource is getting provisioned."
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "Resource is Updating."
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "Resource is Deleting."
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "Resource has been Accepted."
                        }
                      ]
                    }
                  },
                  "allocatedDevices": {
                    "type": "array",
                    "description": "The allocated devices for the connector.",
                    "items": {
                      "type": "object",
                      "description": "AkriConnector allocated device.",
                      "properties": {
                        "deviceInboundEndpointName": {
                          "type": "string",
                          "description": "The name of the inbound endpoint for the device.",
                          "readOnly": true
                        },
                        "deviceName": {
                          "type": "string",
                          "description": "The name of the device.",
                          "readOnly": true
                        }
                      },
                      "required": [
                        "deviceInboundEndpointName",
                        "deviceName"
                      ]
                    },
                    "readOnly": true,
                    "x-ms-identifiers": [
                      "deviceInboundEndpointName",
                      "deviceName"
                    ]
                  },
                  "healthState": {
                    "type": "string",
                    "description": "The health state of the resource.",
                    "default": "Unknown",
                    "enum": [
                      "Available",
                      "Degraded",
                      "Unavailable",
                      "Unknown"
                    ],
                    "x-ms-enum": {
                      "name": "ResourceHealthState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Available",
                          "value": "Available",
                          "description": "Resource is Available and functioning as expected."
                        },
                        {
                          "name": "Degraded",
                          "value": "Degraded",
                          "description": "Resource health is degraded."
                        },
                        {
                          "name": "Unavailable",
                          "value": "Unavailable",
                          "description": "Resource is not functioning as expected."
                        },
                        {
                          "name": "Unknown",
                          "value": "Unknown",
                          "description": "Resource state is unknown."
                        }
                      ]
                    },
                    "readOnly": true
                  }
                }
              },
              "extendedLocation": {
                "description": "Edge location of the resource.",
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the extended location."
                  },
                  "type": {
                    "description": "Type of ExtendedLocation.",
                    "type": "string",
                    "enum": [
                      "CustomLocation"
                    ],
                    "x-ms-enum": {
                      "name": "ExtendedLocationType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "CustomLocation",
                          "value": "CustomLocation",
                          "description": "CustomLocation type"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "name",
                  "type"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "AkriConnectorTemplateAioMetadata": {
      "type": "object",
      "description": "AkriConnectorTemplateAioMetadata properties.",
      "properties": {
        "aioMinVersion": {
          "type": "string",
          "description": "The minimum version of AIO required for the connector."
        },
        "aioMaxVersion": {
          "type": "string",
          "description": "The maximum version of AIO required for the connector."
        }
      }
    },
    "AkriConnectorTemplateAllocation": {
      "type": "object",
      "description": "AkriConnectorTemplateAllocation properties.",
      "properties": {
        "policy": {
          "description": "The allocation policy type.",
          "type": "string",
          "enum": [
            "Bucketized"
          ],
          "x-ms-enum": {
            "name": "AkriConnectorTemplateAllocationPolicy",
            "modelAsString": true,
            "values": [
              {
                "name": "Bucketized",
                "value": "Bucketized",
                "description": "Bucketized allocation policy."
              }
            ]
          }
        }
      },
      "discriminator": "policy",
      "required": [
        "policy"
      ]
    },
    "AkriConnectorTemplateAllocationPolicy": {
      "type": "string",
      "description": "AkriConnectorTemplateAllocationPolicy properties.",
      "enum": [
        "Bucketized"
      ],
      "x-ms-enum": {
        "name": "AkriConnectorTemplateAllocationPolicy",
        "modelAsString": true,
        "values": [
          {
            "name": "Bucketized",
            "value": "Bucketized",
            "description": "Bucketized allocation policy."
          }
        ]
      }
    },
    "AkriConnectorTemplateBucketizedAllocation": {
      "type": "object",
      "description": "AkriConnectorTemplateBucketizedAllocation properties.",
      "properties": {
        "bucketSize": {
          "type": "integer",
          "format": "int32",
          "description": "The bucketized allocation of AEPs for connectors.",
          "minimum": 1,
          "maximum": 100
        }
      },
      "required": [
        "bucketSize"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "AkriConnectorTemplateAllocation properties.",
          "properties": {
            "policy": {
              "description": "The allocation policy type.",
              "type": "string",
              "enum": [
                "Bucketized"
              ],
              "x-ms-enum": {
                "name": "AkriConnectorTemplateAllocationPolicy",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Bucketized",
                    "value": "Bucketized",
                    "description": "Bucketized allocation policy."
                  }
                ]
              }
            }
          },
          "discriminator": "policy",
          "required": [
            "policy"
          ]
        }
      ],
      "x-ms-discriminator-value": "Bucketized"
    },
    "AkriConnectorTemplateDeviceInboundEndpointType": {
      "type": "object",
      "description": "AkriConnectorTemplateDeviceInboundEndpointType properties.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The display name of the device inbound endpoint."
        },
        "endpointType": {
          "description": "The type of the device inbound endpoint.",
          "type": "string",
          "minLength": 1
        },
        "version": {
          "description": "The version of the device inbound endpoint.",
          "type": "string",
          "minLength": 1
        }
      },
      "required": [
        "endpointType"
      ]
    },
    "AkriConnectorTemplateDiagnostics": {
      "type": "object",
      "description": "AkriConnectorTemplateDiagnostics properties.",
      "properties": {
        "logs": {
          "description": "The log settings for the Connector template.",
          "type": "object",
          "properties": {
            "level": {
              "type": "string",
              "description": "The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.",
              "default": "info"
            }
          }
        }
      },
      "required": [
        "logs"
      ]
    },
    "AkriConnectorTemplateManagedConfiguration": {
      "type": "object",
      "description": "AkriConnectorTemplateManagedConfiguration properties.",
      "properties": {
        "managedConfigurationSettings": {
          "description": "The managed configuration settings.",
          "type": "object",
          "properties": {
            "managedConfigurationType": {
              "description": "The type of the managed configuration.",
              "type": "string",
              "enum": [
                "ImageConfiguration",
                "StatefulSetConfiguration"
              ],
              "x-ms-enum": {
                "name": "AkriConnectorTemplateManagedConfigurationType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "ImageConfiguration",
                    "value": "ImageConfiguration",
                    "description": "Image Configuration Type."
                  },
                  {
                    "name": "StatefulSetConfiguration",
                    "value": "StatefulSetConfiguration",
                    "description": "StatefulSet Configuration Type."
                  }
                ]
              }
            },
            "allocation": {
              "type": "object",
              "description": "AkriConnectorTemplateAllocation properties.",
              "properties": {
                "policy": {
                  "description": "The allocation policy type.",
                  "type": "string",
                  "enum": [
                    "Bucketized"
                  ],
                  "x-ms-enum": {
                    "name": "AkriConnectorTemplateAllocationPolicy",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Bucketized",
                        "value": "Bucketized",
                        "description": "Bucketized allocation policy."
                      }
                    ]
                  }
                }
              },
              "discriminator": "policy",
              "required": [
                "policy"
              ]
            },
            "persistentVolumeClaims": {
              "type": "array",
              "description": "The persistent volume claims for the managed configuration.",
              "items": {
                "type": "object",
                "description": "AkriConnectorTemplatePersistentVolumeClaim properties.",
                "properties": {
                  "claimName": {
                    "type": "string",
                    "description": "The name of the persistent volume claim."
                  },
                  "mountPath": {
                    "type": "string",
                    "description": "The mount path for the persistent volume claim."
                  }
                },
                "required": [
                  "claimName",
                  "mountPath"
                ]
              },
              "x-ms-identifiers": [
                "claimName"
              ]
            },
            "additionalConfiguration": {
              "type": "object",
              "description": "Additional configuration for the image of the managed configuration.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "persistentVolumeClaimTemplates": {
              "type": "array",
              "description": "The persistent volume claim templates for the managed configuration.\nSee https://raw.githubusercontent.com/kubernetes/kubernetes/refs/heads/master/api/openapi-spec/v3/apis__apps__v1_openapi.json.",
              "items": {
                "type": "object",
                "additionalProperties": {}
              },
              "x-ms-identifiers": []
            },
            "secrets": {
              "type": "array",
              "description": "Connector secrets that will be mounted onto all connector instances.",
              "items": {
                "type": "object",
                "description": "AkriConnectorsSecret properties.",
                "properties": {
                  "secretKey": {
                    "type": "string",
                    "description": "The key in the secret to be mounted."
                  },
                  "secretAlias": {
                    "type": "string",
                    "description": "The application-defined alias for the secret."
                  },
                  "secretRef": {
                    "type": "string",
                    "description": "The name of the secret to be mounted."
                  }
                },
                "required": [
                  "secretKey",
                  "secretAlias",
                  "secretRef"
                ]
              },
              "x-ms-identifiers": [
                "secretAlias"
              ]
            },
            "trustSettings": {
              "description": "Trust list for the connector. This is used to specify the certificates that all connector instances should trust.",
              "type": "object",
              "properties": {
                "trustListSecretRef": {
                  "type": "string",
                  "description": "The secret reference for certificates to trust."
                }
              },
              "required": [
                "trustListSecretRef"
              ]
            }
          },
          "discriminator": "managedConfigurationType",
          "required": [
            "managedConfigurationType"
          ]
        }
      },
      "required": [
        "managedConfigurationSettings"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "AkriConnectorTemplateRuntimeConfiguration properties.",
          "properties": {
            "runtimeConfigurationType": {
              "description": "Runtime configuration type for the Connector template.",
              "type": "string",
              "enum": [
                "ManagedConfiguration"
              ],
              "x-ms-enum": {
                "name": "AkriConnectorTemplateRuntimeConfigurationType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "ManagedConfiguration",
                    "value": "ManagedConfiguration",
                    "description": "Managed Configuration Type."
                  }
                ]
              }
            }
          },
          "discriminator": "runtimeConfigurationType",
          "required": [
            "runtimeConfigurationType"
          ]
        }
      ],
      "x-ms-discriminator-value": "ManagedConfiguration"
    },
    "AkriConnectorTemplateManagedConfigurationSettings": {
      "type": "object",
      "description": "AkriConnectorTemplateManagedConfiguration properties.",
      "properties": {
        "managedConfigurationType": {
          "description": "The type of the managed configuration.",
          "type": "string",
          "enum": [
            "ImageConfiguration",
            "StatefulSetConfiguration"
          ],
          "x-ms-enum": {
            "name": "AkriConnectorTemplateManagedConfigurationType",
            "modelAsString": true,
            "values": [
              {
                "name": "ImageConfiguration",
                "value": "ImageConfiguration",
                "description": "Image Configuration Type."
              },
              {
                "name": "StatefulSetConfiguration",
                "value": "StatefulSetConfiguration",
                "description": "StatefulSet Configuration Type."
              }
            ]
          }
        },
        "allocation": {
          "type": "object",
          "description": "AkriConnectorTemplateAllocation properties.",
          "properties": {
            "policy": {
              "description": "The allocation policy type.",
              "type": "string",
              "enum": [
                "Bucketized"
              ],
              "x-ms-enum": {
                "name": "AkriConnectorTemplateAllocationPolicy",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Bucketized",
                    "value": "Bucketized",
                    "description": "Bucketized allocation policy."
                  }
                ]
              }
            }
          },
          "discriminator": "policy",
          "required": [
            "policy"
          ]
        },
        "persistentVolumeClaims": {
          "type": "array",
          "description": "The persistent volume claims for the managed configuration.",
          "items": {
            "type": "object",
            "description": "AkriConnectorTemplatePersistentVolumeClaim properties.",
            "properties": {
              "claimName": {
                "type": "string",
                "description": "The name of the persistent volume claim."
              },
              "mountPath": {
                "type": "string",
                "description": "The mount path for the persistent volume claim."
              }
            },
            "required": [
              "claimName",
              "mountPath"
            ]
          },
          "x-ms-identifiers": [
            "claimName"
          ]
        },
        "additionalConfiguration": {
          "type": "object",
          "description": "Additional configuration for the image of the managed configuration.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "persistentVolumeClaimTemplates": {
          "type": "array",
          "description": "The persistent volume claim templates for the managed configuration.\nSee https://raw.githubusercontent.com/kubernetes/kubernetes/refs/heads/master/api/openapi-spec/v3/apis__apps__v1_openapi.json.",
          "items": {
            "type": "object",
            "additionalProperties": {}
          },
          "x-ms-identifiers": []
        },
        "secrets": {
          "type": "array",
          "description": "Connector secrets that will be mounted onto all connector instances.",
          "items": {
            "type": "object",
            "description": "AkriConnectorsSecret properties.",
            "properties": {
              "secretKey": {
                "type": "string",
                "description": "The key in the secret to be mounted."
              },
              "secretAlias": {
                "type": "string",
                "description": "The application-defined alias for the secret."
              },
              "secretRef": {
                "type": "string",
                "description": "The name of the secret to be mounted."
              }
            },
            "required": [
              "secretKey",
              "secretAlias",
              "secretRef"
            ]
          },
          "x-ms-identifiers": [
            "secretAlias"
          ]
        },
        "trustSettings": {
          "description": "Trust list for the connector. This is used to specify the certificates that all connector instances should trust.",
          "type": "object",
          "properties": {
            "trustListSecretRef": {
              "type": "string",
              "description": "The secret reference for certificates to trust."
            }
          },
          "required": [
            "trustListSecretRef"
          ]
        }
      },
      "discriminator": "managedConfigurationType",
      "required": [
        "managedConfigurationType"
      ]
    },
    "AkriConnectorTemplateManagedConfigurationType": {
      "type": "string",
      "description": "Managed configuration types.",
      "enum": [
        "ImageConfiguration",
        "StatefulSetConfiguration"
      ],
      "x-ms-enum": {
        "name": "AkriConnectorTemplateManagedConfigurationType",
        "modelAsString": true,
        "values": [
          {
            "name": "ImageConfiguration",
            "value": "ImageConfiguration",
            "description": "Image Configuration Type."
          },
          {
            "name": "StatefulSetConfiguration",
            "value": "StatefulSetConfiguration",
            "description": "StatefulSet Configuration Type."
          }
        ]
      }
    },
    "AkriConnectorTemplatePersistentVolumeClaim": {
      "type": "object",
      "description": "AkriConnectorTemplatePersistentVolumeClaim properties.",
      "properties": {
        "claimName": {
          "type": "string",
          "description": "The name of the persistent volume claim."
        },
        "mountPath": {
          "type": "string",
          "description": "The mount path for the persistent volume claim."
        }
      },
      "required": [
        "claimName",
        "mountPath"
      ]
    },
    "AkriConnectorTemplateProperties": {
      "type": "object",
      "description": "AkriConnectorTemplate properties.",
      "properties": {
        "provisioningState": {
          "description": "The status of the last operation.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Updating",
            "Deleting",
            "Accepted"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Provisioning",
                "value": "Provisioning",
                "description": "Resource is getting provisioned."
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "Resource is Updating."
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "Resource is Deleting."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "Resource has been Accepted."
              }
            ]
          }
        },
        "aioMetadata": {
          "description": "Metadata about AIO.",
          "type": "object",
          "properties": {
            "aioMinVersion": {
              "type": "string",
              "description": "The minimum version of AIO required for the connector."
            },
            "aioMaxVersion": {
              "type": "string",
              "description": "The maximum version of AIO required for the connector."
            }
          }
        },
        "runtimeConfiguration": {
          "description": "The runtime configuration for the Connector template.",
          "type": "object",
          "properties": {
            "runtimeConfigurationType": {
              "description": "Runtime configuration type for the Connector template.",
              "type": "string",
              "enum": [
                "ManagedConfiguration"
              ],
              "x-ms-enum": {
                "name": "AkriConnectorTemplateRuntimeConfigurationType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "ManagedConfiguration",
                    "value": "ManagedConfiguration",
                    "description": "Managed Configuration Type."
                  }
                ]
              }
            }
          },
          "discriminator": "runtimeConfigurationType",
          "required": [
            "runtimeConfigurationType"
          ]
        },
        "diagnostics": {
          "description": "Diagnostics settings for the Connector template.",
          "type": "object",
          "properties": {
            "logs": {
              "description": "The log settings for the Connector template.",
              "type": "object",
              "properties": {
                "level": {
                  "type": "string",
                  "description": "The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.",
                  "default": "info"
                }
              }
            }
          },
          "required": [
            "logs"
          ]
        },
        "deviceInboundEndpointTypes": {
          "type": "array",
          "description": "Device inbound endpoint types.",
          "minItems": 1,
          "items": {
            "type": "object",
            "description": "AkriConnectorTemplateDeviceInboundEndpointType properties.",
            "properties": {
              "displayName": {
                "type": "string",
                "description": "The display name of the device inbound endpoint."
              },
              "endpointType": {
                "description": "The type of the device inbound endpoint.",
                "type": "string",
                "minLength": 1
              },
              "version": {
                "description": "The version of the device inbound endpoint.",
                "type": "string",
                "minLength": 1
              }
            },
            "required": [
              "endpointType"
            ]
          },
          "x-ms-identifiers": [
            "endpointType",
            "version"
          ]
        },
        "mqttConnectionConfiguration": {
          "description": "Mqtt connection configuration settings.",
          "type": "object",
          "properties": {
            "authentication": {
              "description": "Authentication properties.",
              "type": "object",
              "properties": {
                "method": {
                  "description": "The authentication method for the MQTT connection.",
                  "type": "string",
                  "enum": [
                    "ServiceAccountToken"
                  ],
                  "x-ms-enum": {
                    "name": "AkriConnectorsMqttAuthenticationMethod",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "ServiceAccountToken",
                        "value": "ServiceAccountToken",
                        "description": "Service Account Token authentication."
                      }
                    ]
                  }
                }
              },
              "discriminator": "method",
              "required": [
                "method"
              ]
            },
            "host": {
              "type": "string",
              "description": "Host of the Broker in the form of <hostname>:<port>."
            },
            "protocol": {
              "description": "The protocol to use for the connection. Currently only `mqtt` is supported.",
              "type": "string",
              "enum": [
                "Mqtt"
              ],
              "x-ms-enum": {
                "name": "AkriConnectorsMqttProtocolType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Mqtt",
                    "value": "Mqtt",
                    "description": "Mqtt protocol."
                  }
                ]
              }
            },
            "keepAliveSeconds": {
              "type": "integer",
              "format": "int32",
              "description": "KeepAlive for connection in seconds.",
              "minimum": 0
            },
            "maxInflightMessages": {
              "type": "integer",
              "format": "int32",
              "description": "The max number of messages to keep in flight. For subscribe, this is the receive maximum. For publish, this is the maximum number of messages to send before waiting for an ack.",
              "minimum": 0
            },
            "sessionExpirySeconds": {
              "type": "integer",
              "format": "int32",
              "description": "Session expiry in seconds.",
              "minimum": 0
            },
            "tls": {
              "description": "TLS configuration.",
              "type": "object",
              "properties": {
                "mode": {
                  "type": "string",
                  "description": "Mode for TLS.",
                  "default": "Enabled",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "OperationalMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled",
                        "description": "Enabled is equivalent to True"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled",
                        "description": "Disabled is equivalent to False."
                      }
                    ]
                  }
                },
                "trustedCaCertificateConfigMapRef": {
                  "type": "string",
                  "description": "Trusted CA certificate config map."
                }
              }
            }
          }
        },
        "connectorMetadataRef": {
          "type": "string",
          "description": "A reference to a connector metadata document reference in a container registry."
        },
        "healthState": {
          "type": "string",
          "description": "The health state of the resource.",
          "default": "Unknown",
          "enum": [
            "Available",
            "Degraded",
            "Unavailable",
            "Unknown"
          ],
          "x-ms-enum": {
            "name": "ResourceHealthState",
            "modelAsString": true,
            "values": [
              {
                "name": "Available",
                "value": "Available",
                "description": "Resource is Available and functioning as expected."
              },
              {
                "name": "Degraded",
                "value": "Degraded",
                "description": "Resource health is degraded."
              },
              {
                "name": "Unavailable",
                "value": "Unavailable",
                "description": "Resource is not functioning as expected."
              },
              {
                "name": "Unknown",
                "value": "Unknown",
                "description": "Resource state is unknown."
              }
            ]
          },
          "readOnly": true
        }
      },
      "required": [
        "runtimeConfiguration",
        "deviceInboundEndpointTypes"
      ]
    },
    "AkriConnectorTemplateResource": {
      "type": "object",
      "description": "AkriConnectorTemplate resource.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "The status of the last operation.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "Resource is getting provisioned."
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "Resource is Updating."
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "Resource is Deleting."
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "Resource has been Accepted."
                  }
                ]
              }
            },
            "aioMetadata": {
              "description": "Metadata about AIO.",
              "type": "object",
              "properties": {
                "aioMinVersion": {
                  "type": "string",
                  "description": "The minimum version of AIO required for the connector."
                },
                "aioMaxVersion": {
                  "type": "string",
                  "description": "The maximum version of AIO required for the connector."
                }
              }
            },
            "runtimeConfiguration": {
              "description": "The runtime configuration for the Connector template.",
              "type": "object",
              "properties": {
                "runtimeConfigurationType": {
                  "description": "Runtime configuration type for the Connector template.",
                  "type": "string",
                  "enum": [
                    "ManagedConfiguration"
                  ],
                  "x-ms-enum": {
                    "name": "AkriConnectorTemplateRuntimeConfigurationType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "ManagedConfiguration",
                        "value": "ManagedConfiguration",
                        "description": "Managed Configuration Type."
                      }
                    ]
                  }
                }
              },
              "discriminator": "runtimeConfigurationType",
              "required": [
                "runtimeConfigurationType"
              ]
            },
            "diagnostics": {
              "description": "Diagnostics settings for the Connector template.",
              "type": "object",
              "properties": {
                "logs": {
                  "description": "The log settings for the Connector template.",
                  "type": "object",
                  "properties": {
                    "level": {
                      "type": "string",
                      "description": "The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.",
                      "default": "info"
                    }
                  }
                }
              },
              "required": [
                "logs"
              ]
            },
            "deviceInboundEndpointTypes": {
              "type": "array",
              "description": "Device inbound endpoint types.",
              "minItems": 1,
              "items": {
                "type": "object",
                "description": "AkriConnectorTemplateDeviceInboundEndpointType properties.",
                "properties": {
                  "displayName": {
                    "type": "string",
                    "description": "The display name of the device inbound endpoint."
                  },
                  "endpointType": {
                    "description": "The type of the device inbound endpoint.",
                    "type": "string",
                    "minLength": 1
                  },
                  "version": {
                    "description": "The version of the device inbound endpoint.",
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": [
                  "endpointType"
                ]
              },
              "x-ms-identifiers": [
                "endpointType",
                "version"
              ]
            },
            "mqttConnectionConfiguration": {
              "description": "Mqtt connection configuration settings.",
              "type": "object",
              "properties": {
                "authentication": {
                  "description": "Authentication properties.",
                  "type": "object",
                  "properties": {
                    "method": {
                      "description": "The authentication method for the MQTT connection.",
                      "type": "string",
                      "enum": [
                        "ServiceAccountToken"
                      ],
                      "x-ms-enum": {
                        "name": "AkriConnectorsMqttAuthenticationMethod",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "ServiceAccountToken",
                            "value": "ServiceAccountToken",
                            "description": "Service Account Token authentication."
                          }
                        ]
                      }
                    }
                  },
                  "discriminator": "method",
                  "required": [
                    "method"
                  ]
                },
                "host": {
                  "type": "string",
                  "description": "Host of the Broker in the form of <hostname>:<port>."
                },
                "protocol": {
                  "description": "The protocol to use for the connection. Currently only `mqtt` is supported.",
                  "type": "string",
                  "enum": [
                    "Mqtt"
                  ],
                  "x-ms-enum": {
                    "name": "AkriConnectorsMqttProtocolType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Mqtt",
                        "value": "Mqtt",
                        "description": "Mqtt protocol."
                      }
                    ]
                  }
                },
                "keepAliveSeconds": {
                  "type": "integer",
                  "format": "int32",
                  "description": "KeepAlive for connection in seconds.",
                  "minimum": 0
                },
                "maxInflightMessages": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The max number of messages to keep in flight. For subscribe, this is the receive maximum. For publish, this is the maximum number of messages to send before waiting for an ack.",
                  "minimum": 0
                },
                "sessionExpirySeconds": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Session expiry in seconds.",
                  "minimum": 0
                },
                "tls": {
                  "description": "TLS configuration.",
                  "type": "object",
                  "properties": {
                    "mode": {
                      "type": "string",
                      "description": "Mode for TLS.",
                      "default": "Enabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "OperationalMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "Enabled is equivalent to True"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "Disabled is equivalent to False."
                          }
                        ]
                      }
                    },
                    "trustedCaCertificateConfigMapRef": {
                      "type": "string",
                      "description": "Trusted CA certificate config map."
                    }
                  }
                }
              }
            },
            "connectorMetadataRef": {
              "type": "string",
              "description": "A reference to a connector metadata document reference in a container registry."
            },
            "healthState": {
              "type": "string",
              "description": "The health state of the resource.",
              "default": "Unknown",
              "enum": [
                "Available",
                "Degraded",
                "Unavailable",
                "Unknown"
              ],
              "x-ms-enum": {
                "name": "ResourceHealthState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Available",
                    "value": "Available",
                    "description": "Resource is Available and functioning as expected."
                  },
                  {
                    "name": "Degraded",
                    "value": "Degraded",
                    "description": "Resource health is degraded."
                  },
                  {
                    "name": "Unavailable",
                    "value": "Unavailable",
                    "description": "Resource is not functioning as expected."
                  },
                  {
                    "name": "Unknown",
                    "value": "Unknown",
                    "description": "Resource state is unknown."
                  }
                ]
              },
              "readOnly": true
            }
          },
          "required": [
            "runtimeConfiguration",
            "deviceInboundEndpointTypes"
          ]
        },
        "extendedLocation": {
          "description": "Edge location of the resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the extended location."
            },
            "type": {
              "description": "Type of ExtendedLocation.",
              "type": "string",
              "enum": [
                "CustomLocation"
              ],
              "x-ms-enum": {
                "name": "ExtendedLocationType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "CustomLocation",
                    "value": "CustomLocation",
                    "description": "CustomLocation type"
                  }
                ]
              }
            }
          },
          "required": [
            "name",
            "type"
          ]
        }
      }
    },
    "AkriConnectorTemplateResourceListResult": {
      "type": "object",
      "description": "The response of a AkriConnectorTemplateResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The AkriConnectorTemplateResource items on this page",
          "items": {
            "type": "object",
            "description": "AkriConnectorTemplate resource.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "The status of the last operation.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Provisioning",
                      "Updating",
                      "Deleting",
                      "Accepted"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Provisioning",
                          "value": "Provisioning",
                          "description": "Resource is getting provisioned."
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "Resource is Updating."
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "Resource is Deleting."
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "Resource has been Accepted."
                        }
                      ]
                    }
                  },
                  "aioMetadata": {
                    "description": "Metadata about AIO.",
                    "type": "object",
                    "properties": {
                      "aioMinVersion": {
                        "type": "string",
                        "description": "The minimum version of AIO required for the connector."
                      },
                      "aioMaxVersion": {
                        "type": "string",
                        "description": "The maximum version of AIO required for the connector."
                      }
                    }
                  },
                  "runtimeConfiguration": {
                    "description": "The runtime configuration for the Connector template.",
                    "type": "object",
                    "properties": {
                      "runtimeConfigurationType": {
                        "description": "Runtime configuration type for the Connector template.",
                        "type": "string",
                        "enum": [
                          "ManagedConfiguration"
                        ],
                        "x-ms-enum": {
                          "name": "AkriConnectorTemplateRuntimeConfigurationType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "ManagedConfiguration",
                              "value": "ManagedConfiguration",
                              "description": "Managed Configuration Type."
                            }
                          ]
                        }
                      }
                    },
                    "discriminator": "runtimeConfigurationType",
                    "required": [
                      "runtimeConfigurationType"
                    ]
                  },
                  "diagnostics": {
                    "description": "Diagnostics settings for the Connector template.",
                    "type": "object",
                    "properties": {
                      "logs": {
                        "description": "The log settings for the Connector template.",
                        "type": "object",
                        "properties": {
                          "level": {
                            "type": "string",
                            "description": "The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.",
                            "default": "info"
                          }
                        }
                      }
                    },
                    "required": [
                      "logs"
                    ]
                  },
                  "deviceInboundEndpointTypes": {
                    "type": "array",
                    "description": "Device inbound endpoint types.",
                    "minItems": 1,
                    "items": {
                      "type": "object",
                      "description": "AkriConnectorTemplateDeviceInboundEndpointType properties.",
                      "properties": {
                        "displayName": {
                          "type": "string",
                          "description": "The display name of the device inbound endpoint."
                        },
                        "endpointType": {
                          "description": "The type of the device inbound endpoint.",
                          "type": "string",
                          "minLength": 1
                        },
                        "version": {
                          "description": "The version of the device inbound endpoint.",
                          "type": "string",
                          "minLength": 1
                        }
                      },
                      "required": [
                        "endpointType"
                      ]
                    },
                    "x-ms-identifiers": [
                      "endpointType",
                      "version"
                    ]
                  },
                  "mqttConnectionConfiguration": {
                    "description": "Mqtt connection configuration settings.",
                    "type": "object",
                    "properties": {
                      "authentication": {
                        "description": "Authentication properties.",
                        "type": "object",
                        "properties": {
                          "method": {
                            "description": "The authentication method for the MQTT connection.",
                            "type": "string",
                            "enum": [
                              "ServiceAccountToken"
                            ],
                            "x-ms-enum": {
                              "name": "AkriConnectorsMqttAuthenticationMethod",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "ServiceAccountToken",
                                  "value": "ServiceAccountToken",
                                  "description": "Service Account Token authentication."
                                }
                              ]
                            }
                          }
                        },
                        "discriminator": "method",
                        "required": [
                          "method"
                        ]
                      },
                      "host": {
                        "type": "string",
                        "description": "Host of the Broker in the form of <hostname>:<port>."
                      },
                      "protocol": {
                        "description": "The protocol to use for the connection. Currently only `mqtt` is supported.",
                        "type": "string",
                        "enum": [
                          "Mqtt"
                        ],
                        "x-ms-enum": {
                          "name": "AkriConnectorsMqttProtocolType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Mqtt",
                              "value": "Mqtt",
                              "description": "Mqtt protocol."
                            }
                          ]
                        }
                      },
                      "keepAliveSeconds": {
                        "type": "integer",
                        "format": "int32",
                        "description": "KeepAlive for connection in seconds.",
                        "minimum": 0
                      },
                      "maxInflightMessages": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The max number of messages to keep in flight. For subscribe, this is the receive maximum. For publish, this is the maximum number of messages to send before waiting for an ack.",
                        "minimum": 0
                      },
                      "sessionExpirySeconds": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Session expiry in seconds.",
                        "minimum": 0
                      },
                      "tls": {
                        "description": "TLS configuration.",
                        "type": "object",
                        "properties": {
                          "mode": {
                            "type": "string",
                            "description": "Mode for TLS.",
                            "default": "Enabled",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "OperationalMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled",
                                  "description": "Enabled is equivalent to True"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled",
                                  "description": "Disabled is equivalent to False."
                                }
                              ]
                            }
                          },
                          "trustedCaCertificateConfigMapRef": {
                            "type": "string",
                            "description": "Trusted CA certificate config map."
                          }
                        }
                      }
                    }
                  },
                  "connectorMetadataRef": {
                    "type": "string",
                    "description": "A reference to a connector metadata document reference in a container registry."
                  },
                  "healthState": {
                    "type": "string",
                    "description": "The health state of the resource.",
                    "default": "Unknown",
                    "enum": [
                      "Available",
                      "Degraded",
                      "Unavailable",
                      "Unknown"
                    ],
                    "x-ms-enum": {
                      "name": "ResourceHealthState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Available",
                          "value": "Available",
                          "description": "Resource is Available and functioning as expected."
                        },
                        {
                          "name": "Degraded",
                          "value": "Degraded",
                          "description": "Resource health is degraded."
                        },
                        {
                          "name": "Unavailable",
                          "value": "Unavailable",
                          "description": "Resource is not functioning as expected."
                        },
                        {
                          "name": "Unknown",
                          "value": "Unknown",
                          "description": "Resource state is unknown."
                        }
                      ]
                    },
                    "readOnly": true
                  }
                },
                "required": [
                  "runtimeConfiguration",
                  "deviceInboundEndpointTypes"
                ]
              },
              "extendedLocation": {
                "description": "Edge location of the resource.",
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the extended location."
                  },
                  "type": {
                    "description": "Type of ExtendedLocation.",
                    "type": "string",
                    "enum": [
                      "CustomLocation"
                    ],
                    "x-ms-enum": {
                      "name": "ExtendedLocationType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "CustomLocation",
                          "value": "CustomLocation",
                          "description": "CustomLocation type"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "name",
                  "type"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "AkriConnectorTemplateRuntimeConfiguration": {
      "type": "object",
      "description": "AkriConnectorTemplateRuntimeConfiguration properties.",
      "properties": {
        "runtimeConfigurationType": {
          "description": "Runtime configuration type for the Connector template.",
          "type": "string",
          "enum": [
            "ManagedConfiguration"
          ],
          "x-ms-enum": {
            "name": "AkriConnectorTemplateRuntimeConfigurationType",
            "modelAsString": true,
            "values": [
              {
                "name": "ManagedConfiguration",
                "value": "ManagedConfiguration",
                "description": "Managed Configuration Type."
              }
            ]
          }
        }
      },
      "discriminator": "runtimeConfigurationType",
      "required": [
        "runtimeConfigurationType"
      ]
    },
    "AkriConnectorTemplateRuntimeConfigurationType": {
      "type": "string",
      "description": "Runtime configuration types.",
      "enum": [
        "ManagedConfiguration"
      ],
      "x-ms-enum": {
        "name": "AkriConnectorTemplateRuntimeConfigurationType",
        "modelAsString": true,
        "values": [
          {
            "name": "ManagedConfiguration",
            "value": "ManagedConfiguration",
            "description": "Managed Configuration Type."
          }
        ]
      }
    },
    "AkriConnectorTemplateRuntimeImageConfiguration": {
      "type": "object",
      "description": "AkriConnectorTemplateRuntimeImageConfiguration properties.",
      "properties": {
        "imageConfigurationSettings": {
          "description": "The image configuration settings.",
          "type": "object",
          "properties": {
            "imageName": {
              "type": "string",
              "description": "The image name without any registry reference, tag or digest."
            },
            "imagePullPolicy": {
              "description": "The pull policy of the image.",
              "type": "string",
              "enum": [
                "Always",
                "IfNotPresent",
                "Never"
              ],
              "x-ms-enum": {
                "name": "AkriConnectorsImagePullPolicy",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Always",
                    "value": "Always",
                    "description": "Always pull the image."
                  },
                  {
                    "name": "IfNotPresent",
                    "value": "IfNotPresent",
                    "description": "IfNotPresent pull the image."
                  },
                  {
                    "name": "Never",
                    "value": "Never",
                    "description": "Never pull the image."
                  }
                ]
              }
            },
            "replicas": {
              "type": "integer",
              "format": "int32",
              "description": "The number of replicas to be set up."
            },
            "registrySettings": {
              "description": "The registry settings for the image. You can omit this field if using the default docker hub repository or using a local image.",
              "type": "object",
              "properties": {
                "registrySettingsType": {
                  "type": "string",
                  "description": "AkriConnectorsRegistrySettings properties.",
                  "enum": [
                    "RegistryEndpointRef",
                    "ContainerRegistry"
                  ],
                  "x-ms-enum": {
                    "name": "AkriConnectorsRegistrySettingsType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "RegistryEndpointRef",
                        "value": "RegistryEndpointRef",
                        "description": "A Registry Endpoint reference."
                      },
                      {
                        "name": "ContainerRegistry",
                        "value": "ContainerRegistry",
                        "description": "A Container Registry reference."
                      }
                    ]
                  }
                }
              },
              "discriminator": "registrySettingsType",
              "required": [
                "registrySettingsType"
              ]
            },
            "tagDigestSettings": {
              "description": "Optional image tag or digest. If not specified, the default tag is `latest`.",
              "type": "object",
              "properties": {
                "tagDigestType": {
                  "description": "The tag or digest type.",
                  "type": "string",
                  "enum": [
                    "Tag",
                    "Digest"
                  ],
                  "x-ms-enum": {
                    "name": "AkriConnectorsTagDigestType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Tag",
                        "value": "Tag",
                        "description": "Indicates that a tag should be specified."
                      },
                      {
                        "name": "Digest",
                        "value": "Digest",
                        "description": "Indicates that a digest should be specified."
                      }
                    ]
                  }
                }
              },
              "discriminator": "tagDigestType",
              "required": [
                "tagDigestType"
              ]
            }
          },
          "required": [
            "imageName"
          ]
        }
      },
      "required": [
        "imageConfigurationSettings"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "AkriConnectorTemplateManagedConfiguration properties.",
          "properties": {
            "managedConfigurationType": {
              "description": "The type of the managed configuration.",
              "type": "string",
              "enum": [
                "ImageConfiguration",
                "StatefulSetConfiguration"
              ],
              "x-ms-enum": {
                "name": "AkriConnectorTemplateManagedConfigurationType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "ImageConfiguration",
                    "value": "ImageConfiguration",
                    "description": "Image Configuration Type."
                  },
                  {
                    "name": "StatefulSetConfiguration",
                    "value": "StatefulSetConfiguration",
                    "description": "StatefulSet Configuration Type."
                  }
                ]
              }
            },
            "allocation": {
              "type": "object",
              "description": "AkriConnectorTemplateAllocation properties.",
              "properties": {
                "policy": {
                  "description": "The allocation policy type.",
                  "type": "string",
                  "enum": [
                    "Bucketized"
                  ],
                  "x-ms-enum": {
                    "name": "AkriConnectorTemplateAllocationPolicy",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Bucketized",
                        "value": "Bucketized",
                        "description": "Bucketized allocation policy."
                      }
                    ]
                  }
                }
              },
              "discriminator": "policy",
              "required": [
                "policy"
              ]
            },
            "persistentVolumeClaims": {
              "type": "array",
              "description": "The persistent volume claims for the managed configuration.",
              "items": {
                "type": "object",
                "description": "AkriConnectorTemplatePersistentVolumeClaim properties.",
                "properties": {
                  "claimName": {
                    "type": "string",
                    "description": "The name of the persistent volume claim."
                  },
                  "mountPath": {
                    "type": "string",
                    "description": "The mount path for the persistent volume claim."
                  }
                },
                "required": [
                  "claimName",
                  "mountPath"
                ]
              },
              "x-ms-identifiers": [
                "claimName"
              ]
            },
            "additionalConfiguration": {
              "type": "object",
              "description": "Additional configuration for the image of the managed configuration.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "persistentVolumeClaimTemplates": {
              "type": "array",
              "description": "The persistent volume claim templates for the managed configuration.\nSee https://raw.githubusercontent.com/kubernetes/kubernetes/refs/heads/master/api/openapi-spec/v3/apis__apps__v1_openapi.json.",
              "items": {
                "type": "object",
                "additionalProperties": {}
              },
              "x-ms-identifiers": []
            },
            "secrets": {
              "type": "array",
              "description": "Connector secrets that will be mounted onto all connector instances.",
              "items": {
                "type": "object",
                "description": "AkriConnectorsSecret properties.",
                "properties": {
                  "secretKey": {
                    "type": "string",
                    "description": "The key in the secret to be mounted."
                  },
                  "secretAlias": {
                    "type": "string",
                    "description": "The application-defined alias for the secret."
                  },
                  "secretRef": {
                    "type": "string",
                    "description": "The name of the secret to be mounted."
                  }
                },
                "required": [
                  "secretKey",
                  "secretAlias",
                  "secretRef"
                ]
              },
              "x-ms-identifiers": [
                "secretAlias"
              ]
            },
            "trustSettings": {
              "description": "Trust list for the connector. This is used to specify the certificates that all connector instances should trust.",
              "type": "object",
              "properties": {
                "trustListSecretRef": {
                  "type": "string",
                  "description": "The secret reference for certificates to trust."
                }
              },
              "required": [
                "trustListSecretRef"
              ]
            }
          },
          "discriminator": "managedConfigurationType",
          "required": [
            "managedConfigurationType"
          ]
        }
      ],
      "x-ms-discriminator-value": "ImageConfiguration"
    },
    "AkriConnectorTemplateRuntimeImageConfigurationSettings": {
      "type": "object",
      "description": "AkriConnectorTemplateRuntimeImageConfiguration properties.",
      "properties": {
        "imageName": {
          "type": "string",
          "description": "The image name without any registry reference, tag or digest."
        },
        "imagePullPolicy": {
          "description": "The pull policy of the image.",
          "type": "string",
          "enum": [
            "Always",
            "IfNotPresent",
            "Never"
          ],
          "x-ms-enum": {
            "name": "AkriConnectorsImagePullPolicy",
            "modelAsString": true,
            "values": [
              {
                "name": "Always",
                "value": "Always",
                "description": "Always pull the image."
              },
              {
                "name": "IfNotPresent",
                "value": "IfNotPresent",
                "description": "IfNotPresent pull the image."
              },
              {
                "name": "Never",
                "value": "Never",
                "description": "Never pull the image."
              }
            ]
          }
        },
        "replicas": {
          "type": "integer",
          "format": "int32",
          "description": "The number of replicas to be set up."
        },
        "registrySettings": {
          "description": "The registry settings for the image. You can omit this field if using the default docker hub repository or using a local image.",
          "type": "object",
          "properties": {
            "registrySettingsType": {
              "type": "string",
              "description": "AkriConnectorsRegistrySettings properties.",
              "enum": [
                "RegistryEndpointRef",
                "ContainerRegistry"
              ],
              "x-ms-enum": {
                "name": "AkriConnectorsRegistrySettingsType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "RegistryEndpointRef",
                    "value": "RegistryEndpointRef",
                    "description": "A Registry Endpoint reference."
                  },
                  {
                    "name": "ContainerRegistry",
                    "value": "ContainerRegistry",
                    "description": "A Container Registry reference."
                  }
                ]
              }
            }
          },
          "discriminator": "registrySettingsType",
          "required": [
            "registrySettingsType"
          ]
        },
        "tagDigestSettings": {
          "description": "Optional image tag or digest. If not specified, the default tag is `latest`.",
          "type": "object",
          "properties": {
            "tagDigestType": {
              "description": "The tag or digest type.",
              "type": "string",
              "enum": [
                "Tag",
                "Digest"
              ],
              "x-ms-enum": {
                "name": "AkriConnectorsTagDigestType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Tag",
                    "value": "Tag",
                    "description": "Indicates that a tag should be specified."
                  },
                  {
                    "name": "Digest",
                    "value": "Digest",
                    "description": "Indicates that a digest should be specified."
                  }
                ]
              }
            }
          },
          "discriminator": "tagDigestType",
          "required": [
            "tagDigestType"
          ]
        }
      },
      "required": [
        "imageName"
      ]
    },
    "AkriConnectorTemplateRuntimeStatefulSetConfiguration": {
      "type": "object",
      "description": "AkriConnectorTemplateRuntimeStatefulSetConfiguration properties.",
      "properties": {
        "statefulSetConfigurationSettings": {
          "type": "object",
          "description": "The stateful set configuration settings. This corresponds to the Kubernetes StatefulSet resource.\nSee https://raw.githubusercontent.com/kubernetes/kubernetes/refs/heads/master/api/openapi-spec/v3/apis__apps__v1_openapi.json#/components/schemas/io.k8s.api.apps.v1.StatefulSetSpec",
          "additionalProperties": {}
        }
      },
      "required": [
        "statefulSetConfigurationSettings"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "AkriConnectorTemplateManagedConfiguration properties.",
          "properties": {
            "managedConfigurationType": {
              "description": "The type of the managed configuration.",
              "type": "string",
              "enum": [
                "ImageConfiguration",
                "StatefulSetConfiguration"
              ],
              "x-ms-enum": {
                "name": "AkriConnectorTemplateManagedConfigurationType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "ImageConfiguration",
                    "value": "ImageConfiguration",
                    "description": "Image Configuration Type."
                  },
                  {
                    "name": "StatefulSetConfiguration",
                    "value": "StatefulSetConfiguration",
                    "description": "StatefulSet Configuration Type."
                  }
                ]
              }
            },
            "allocation": {
              "type": "object",
              "description": "AkriConnectorTemplateAllocation properties.",
              "properties": {
                "policy": {
                  "description": "The allocation policy type.",
                  "type": "string",
                  "enum": [
                    "Bucketized"
                  ],
                  "x-ms-enum": {
                    "name": "AkriConnectorTemplateAllocationPolicy",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Bucketized",
                        "value": "Bucketized",
                        "description": "Bucketized allocation policy."
                      }
                    ]
                  }
                }
              },
              "discriminator": "policy",
              "required": [
                "policy"
              ]
            },
            "persistentVolumeClaims": {
              "type": "array",
              "description": "The persistent volume claims for the managed configuration.",
              "items": {
                "type": "object",
                "description": "AkriConnectorTemplatePersistentVolumeClaim properties.",
                "properties": {
                  "claimName": {
                    "type": "string",
                    "description": "The name of the persistent volume claim."
                  },
                  "mountPath": {
                    "type": "string",
                    "description": "The mount path for the persistent volume claim."
                  }
                },
                "required": [
                  "claimName",
                  "mountPath"
                ]
              },
              "x-ms-identifiers": [
                "claimName"
              ]
            },
            "additionalConfiguration": {
              "type": "object",
              "description": "Additional configuration for the image of the managed configuration.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "persistentVolumeClaimTemplates": {
              "type": "array",
              "description": "The persistent volume claim templates for the managed configuration.\nSee https://raw.githubusercontent.com/kubernetes/kubernetes/refs/heads/master/api/openapi-spec/v3/apis__apps__v1_openapi.json.",
              "items": {
                "type": "object",
                "additionalProperties": {}
              },
              "x-ms-identifiers": []
            },
            "secrets": {
              "type": "array",
              "description": "Connector secrets that will be mounted onto all connector instances.",
              "items": {
                "type": "object",
                "description": "AkriConnectorsSecret properties.",
                "properties": {
                  "secretKey": {
                    "type": "string",
                    "description": "The key in the secret to be mounted."
                  },
                  "secretAlias": {
                    "type": "string",
                    "description": "The application-defined alias for the secret."
                  },
                  "secretRef": {
                    "type": "string",
                    "description": "The name of the secret to be mounted."
                  }
                },
                "required": [
                  "secretKey",
                  "secretAlias",
                  "secretRef"
                ]
              },
              "x-ms-identifiers": [
                "secretAlias"
              ]
            },
            "trustSettings": {
              "description": "Trust list for the connector. This is used to specify the certificates that all connector instances should trust.",
              "type": "object",
              "properties": {
                "trustListSecretRef": {
                  "type": "string",
                  "description": "The secret reference for certificates to trust."
                }
              },
              "required": [
                "trustListSecretRef"
              ]
            }
          },
          "discriminator": "managedConfigurationType",
          "required": [
            "managedConfigurationType"
          ]
        }
      ],
      "x-ms-discriminator-value": "StatefulSetConfiguration"
    },
    "AkriConnectorTemplateTrustList": {
      "type": "object",
      "description": "AkriConnectorTemplateTrustList properties.",
      "properties": {
        "trustListSecretRef": {
          "type": "string",
          "description": "The secret reference for certificates to trust."
        }
      },
      "required": [
        "trustListSecretRef"
      ]
    },
    "AkriConnectorsContainerRegistry": {
      "type": "object",
      "description": "AkriConnectorsContainerRegistry properties.",
      "properties": {
        "containerRegistrySettings": {
          "description": "The registry settings for the container registry.",
          "type": "object",
          "properties": {
            "registry": {
              "type": "string",
              "description": "The container registry to use for the artifact."
            },
            "imagePullSecrets": {
              "type": "array",
              "description": "Optional list of references to secrets in the same namespace to use for pulling the connector image.",
              "items": {
                "type": "object",
                "description": "AkriConnectorsImagePullSecret properties.",
                "properties": {
                  "secretRef": {
                    "type": "string",
                    "description": "The name of the image pull secret."
                  }
                },
                "required": [
                  "secretRef"
                ]
              },
              "x-ms-identifiers": [
                "secretRef"
              ]
            }
          },
          "required": [
            "registry"
          ]
        }
      },
      "required": [
        "containerRegistrySettings"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "AkriConnectorsRegistrySettings properties.",
          "properties": {
            "registrySettingsType": {
              "type": "string",
              "description": "AkriConnectorsRegistrySettings properties.",
              "enum": [
                "RegistryEndpointRef",
                "ContainerRegistry"
              ],
              "x-ms-enum": {
                "name": "AkriConnectorsRegistrySettingsType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "RegistryEndpointRef",
                    "value": "RegistryEndpointRef",
                    "description": "A Registry Endpoint reference."
                  },
                  {
                    "name": "ContainerRegistry",
                    "value": "ContainerRegistry",
                    "description": "A Container Registry reference."
                  }
                ]
              }
            }
          },
          "discriminator": "registrySettingsType",
          "required": [
            "registrySettingsType"
          ]
        }
      ],
      "x-ms-discriminator-value": "ContainerRegistry"
    },
    "AkriConnectorsContainerRegistrySettings": {
      "type": "object",
      "description": "AkriConnectorsContainerRegistry properties.",
      "properties": {
        "registry": {
          "type": "string",
          "description": "The container registry to use for the artifact."
        },
        "imagePullSecrets": {
          "type": "array",
          "description": "Optional list of references to secrets in the same namespace to use for pulling the connector image.",
          "items": {
            "type": "object",
            "description": "AkriConnectorsImagePullSecret properties.",
            "properties": {
              "secretRef": {
                "type": "string",
                "description": "The name of the image pull secret."
              }
            },
            "required": [
              "secretRef"
            ]
          },
          "x-ms-identifiers": [
            "secretRef"
          ]
        }
      },
      "required": [
        "registry"
      ]
    },
    "AkriConnectorsDiagnosticsLogs": {
      "type": "object",
      "description": "AkriConnectorsDiagnostic Log properties.",
      "properties": {
        "level": {
          "type": "string",
          "description": "The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.",
          "default": "info"
        }
      }
    },
    "AkriConnectorsDigest": {
      "type": "object",
      "description": "AkriConnectorsDigest properties.",
      "properties": {
        "digest": {
          "type": "string",
          "description": "The digest of the image."
        }
      },
      "required": [
        "digest"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "AkriConnectorsTagDigestSettings properties.",
          "properties": {
            "tagDigestType": {
              "description": "The tag or digest type.",
              "type": "string",
              "enum": [
                "Tag",
                "Digest"
              ],
              "x-ms-enum": {
                "name": "AkriConnectorsTagDigestType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Tag",
                    "value": "Tag",
                    "description": "Indicates that a tag should be specified."
                  },
                  {
                    "name": "Digest",
                    "value": "Digest",
                    "description": "Indicates that a digest should be specified."
                  }
                ]
              }
            }
          },
          "discriminator": "tagDigestType",
          "required": [
            "tagDigestType"
          ]
        }
      ],
      "x-ms-discriminator-value": "Digest"
    },
    "AkriConnectorsImagePullPolicy": {
      "type": "string",
      "description": "Image pull policy.",
      "enum": [
        "Always",
        "IfNotPresent",
        "Never"
      ],
      "x-ms-enum": {
        "name": "AkriConnectorsImagePullPolicy",
        "modelAsString": true,
        "values": [
          {
            "name": "Always",
            "value": "Always",
            "description": "Always pull the image."
          },
          {
            "name": "IfNotPresent",
            "value": "IfNotPresent",
            "description": "IfNotPresent pull the image."
          },
          {
            "name": "Never",
            "value": "Never",
            "description": "Never pull the image."
          }
        ]
      }
    },
    "AkriConnectorsImagePullSecret": {
      "type": "object",
      "description": "AkriConnectorsImagePullSecret properties.",
      "properties": {
        "secretRef": {
          "type": "string",
          "description": "The name of the image pull secret."
        }
      },
      "required": [
        "secretRef"
      ]
    },
    "AkriConnectorsMqttAuthentication": {
      "type": "object",
      "description": "AkriConnectorsMqttAuthentication properties.",
      "properties": {
        "method": {
          "description": "The authentication method for the MQTT connection.",
          "type": "string",
          "enum": [
            "ServiceAccountToken"
          ],
          "x-ms-enum": {
            "name": "AkriConnectorsMqttAuthenticationMethod",
            "modelAsString": true,
            "values": [
              {
                "name": "ServiceAccountToken",
                "value": "ServiceAccountToken",
                "description": "Service Account Token authentication."
              }
            ]
          }
        }
      },
      "discriminator": "method",
      "required": [
        "method"
      ]
    },
    "AkriConnectorsMqttAuthenticationMethod": {
      "type": "string",
      "description": "AkriConnectorsMqttAuthenticationMethod properties.",
      "enum": [
        "ServiceAccountToken"
      ],
      "x-ms-enum": {
        "name": "AkriConnectorsMqttAuthenticationMethod",
        "modelAsString": true,
        "values": [
          {
            "name": "ServiceAccountToken",
            "value": "ServiceAccountToken",
            "description": "Service Account Token authentication."
          }
        ]
      }
    },
    "AkriConnectorsMqttConnectionConfiguration": {
      "type": "object",
      "description": "AkriConnectorsMqttConnectionConfiguration properties.",
      "properties": {
        "authentication": {
          "description": "Authentication properties.",
          "type": "object",
          "properties": {
            "method": {
              "description": "The authentication method for the MQTT connection.",
              "type": "string",
              "enum": [
                "ServiceAccountToken"
              ],
              "x-ms-enum": {
                "name": "AkriConnectorsMqttAuthenticationMethod",
                "modelAsString": true,
                "values": [
                  {
                    "name": "ServiceAccountToken",
                    "value": "ServiceAccountToken",
                    "description": "Service Account Token authentication."
                  }
                ]
              }
            }
          },
          "discriminator": "method",
          "required": [
            "method"
          ]
        },
        "host": {
          "type": "string",
          "description": "Host of the Broker in the form of <hostname>:<port>."
        },
        "protocol": {
          "description": "The protocol to use for the connection. Currently only `mqtt` is supported.",
          "type": "string",
          "enum": [
            "Mqtt"
          ],
          "x-ms-enum": {
            "name": "AkriConnectorsMqttProtocolType",
            "modelAsString": true,
            "values": [
              {
                "name": "Mqtt",
                "value": "Mqtt",
                "description": "Mqtt protocol."
              }
            ]
          }
        },
        "keepAliveSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "KeepAlive for connection in seconds.",
          "minimum": 0
        },
        "maxInflightMessages": {
          "type": "integer",
          "format": "int32",
          "description": "The max number of messages to keep in flight. For subscribe, this is the receive maximum. For publish, this is the maximum number of messages to send before waiting for an ack.",
          "minimum": 0
        },
        "sessionExpirySeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Session expiry in seconds.",
          "minimum": 0
        },
        "tls": {
          "description": "TLS configuration.",
          "type": "object",
          "properties": {
            "mode": {
              "type": "string",
              "description": "Mode for TLS.",
              "default": "Enabled",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "OperationalMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled",
                    "description": "Enabled is equivalent to True"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "Disabled is equivalent to False."
                  }
                ]
              }
            },
            "trustedCaCertificateConfigMapRef": {
              "type": "string",
              "description": "Trusted CA certificate config map."
            }
          }
        }
      }
    },
    "AkriConnectorsMqttProtocolType": {
      "type": "string",
      "description": "Mqtt protocol types.",
      "enum": [
        "Mqtt"
      ],
      "x-ms-enum": {
        "name": "AkriConnectorsMqttProtocolType",
        "modelAsString": true,
        "values": [
          {
            "name": "Mqtt",
            "value": "Mqtt",
            "description": "Mqtt protocol."
          }
        ]
      }
    },
    "AkriConnectorsRegistryEndpointRef": {
      "type": "object",
      "description": "AkriConnectorsRegistryEndpointRef properties.",
      "properties": {
        "registryEndpointRef": {
          "type": "string",
          "description": "The name of the registry endpoint."
        }
      },
      "required": [
        "registryEndpointRef"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "AkriConnectorsRegistrySettings properties.",
          "properties": {
            "registrySettingsType": {
              "type": "string",
              "description": "AkriConnectorsRegistrySettings properties.",
              "enum": [
                "RegistryEndpointRef",
                "ContainerRegistry"
              ],
              "x-ms-enum": {
                "name": "AkriConnectorsRegistrySettingsType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "RegistryEndpointRef",
                    "value": "RegistryEndpointRef",
                    "description": "A Registry Endpoint reference."
                  },
                  {
                    "name": "ContainerRegistry",
                    "value": "ContainerRegistry",
                    "description": "A Container Registry reference."
                  }
                ]
              }
            }
          },
          "discriminator": "registrySettingsType",
          "required": [
            "registrySettingsType"
          ]
        }
      ],
      "x-ms-discriminator-value": "RegistryEndpointRef"
    },
    "AkriConnectorsRegistrySettings": {
      "type": "object",
      "description": "AkriConnectorsRegistrySettings properties.",
      "properties": {
        "registrySettingsType": {
          "type": "string",
          "description": "AkriConnectorsRegistrySettings properties.",
          "enum": [
            "RegistryEndpointRef",
            "ContainerRegistry"
          ],
          "x-ms-enum": {
            "name": "AkriConnectorsRegistrySettingsType",
            "modelAsString": true,
            "values": [
              {
                "name": "RegistryEndpointRef",
                "value": "RegistryEndpointRef",
                "description": "A Registry Endpoint reference."
              },
              {
                "name": "ContainerRegistry",
                "value": "ContainerRegistry",
                "description": "A Container Registry reference."
              }
            ]
          }
        }
      },
      "discriminator": "registrySettingsType",
      "required": [
        "registrySettingsType"
      ]
    },
    "AkriConnectorsRegistrySettingsType": {
      "type": "string",
      "description": "AkriConnectorsRegistrySettings properties.",
      "enum": [
        "RegistryEndpointRef",
        "ContainerRegistry"
      ],
      "x-ms-enum": {
        "name": "AkriConnectorsRegistrySettingsType",
        "modelAsString": true,
        "values": [
          {
            "name": "RegistryEndpointRef",
            "value": "RegistryEndpointRef",
            "description": "A Registry Endpoint reference."
          },
          {
            "name": "ContainerRegistry",
            "value": "ContainerRegistry",
            "description": "A Container Registry reference."
          }
        ]
      }
    },
    "AkriConnectorsSecret": {
      "type": "object",
      "description": "AkriConnectorsSecret properties.",
      "properties": {
        "secretKey": {
          "type": "string",
          "description": "The key in the secret to be mounted."
        },
        "secretAlias": {
          "type": "string",
          "description": "The application-defined alias for the secret."
        },
        "secretRef": {
          "type": "string",
          "description": "The name of the secret to be mounted."
        }
      },
      "required": [
        "secretKey",
        "secretAlias",
        "secretRef"
      ]
    },
    "AkriConnectorsServiceAccountAuthentication": {
      "type": "object",
      "description": "AkriConnectorsServiceAccountAuthentication properties.",
      "properties": {
        "serviceAccountTokenSettings": {
          "description": "The service account token for the MQTT connection.",
          "type": "object",
          "properties": {
            "audience": {
              "type": "string",
              "description": "The audience for the service account token."
            }
          },
          "required": [
            "audience"
          ]
        }
      },
      "required": [
        "serviceAccountTokenSettings"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "AkriConnectorsMqttAuthentication properties.",
          "properties": {
            "method": {
              "description": "The authentication method for the MQTT connection.",
              "type": "string",
              "enum": [
                "ServiceAccountToken"
              ],
              "x-ms-enum": {
                "name": "AkriConnectorsMqttAuthenticationMethod",
                "modelAsString": true,
                "values": [
                  {
                    "name": "ServiceAccountToken",
                    "value": "ServiceAccountToken",
                    "description": "Service Account Token authentication."
                  }
                ]
              }
            }
          },
          "discriminator": "method",
          "required": [
            "method"
          ]
        }
      ],
      "x-ms-discriminator-value": "ServiceAccountToken"
    },
    "AkriConnectorsServiceAccountTokenSettings": {
      "type": "object",
      "description": "AkriConnectorsServiceAccountTokenSettings properties.",
      "properties": {
        "audience": {
          "type": "string",
          "description": "The audience for the service account token."
        }
      },
      "required": [
        "audience"
      ]
    },
    "AkriConnectorsTag": {
      "type": "object",
      "description": "AkriConnectorsTag properties.",
      "properties": {
        "tag": {
          "type": "string",
          "description": "The tag of the image."
        }
      },
      "required": [
        "tag"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "AkriConnectorsTagDigestSettings properties.",
          "properties": {
            "tagDigestType": {
              "description": "The tag or digest type.",
              "type": "string",
              "enum": [
                "Tag",
                "Digest"
              ],
              "x-ms-enum": {
                "name": "AkriConnectorsTagDigestType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Tag",
                    "value": "Tag",
                    "description": "Indicates that a tag should be specified."
                  },
                  {
                    "name": "Digest",
                    "value": "Digest",
                    "description": "Indicates that a digest should be specified."
                  }
                ]
              }
            }
          },
          "discriminator": "tagDigestType",
          "required": [
            "tagDigestType"
          ]
        }
      ],
      "x-ms-discriminator-value": "Tag"
    },
    "AkriConnectorsTagDigestSettings": {
      "type": "object",
      "description": "AkriConnectorsTagDigestSettings properties.",
      "properties": {
        "tagDigestType": {
          "description": "The tag or digest type.",
          "type": "string",
          "enum": [
            "Tag",
            "Digest"
          ],
          "x-ms-enum": {
            "name": "AkriConnectorsTagDigestType",
            "modelAsString": true,
            "values": [
              {
                "name": "Tag",
                "value": "Tag",
                "description": "Indicates that a tag should be specified."
              },
              {
                "name": "Digest",
                "value": "Digest",
                "description": "Indicates that a digest should be specified."
              }
            ]
          }
        }
      },
      "discriminator": "tagDigestType",
      "required": [
        "tagDigestType"
      ]
    },
    "AkriConnectorsTagDigestType": {
      "type": "string",
      "description": "AkriConnectorsTagDigestType values.",
      "enum": [
        "Tag",
        "Digest"
      ],
      "x-ms-enum": {
        "name": "AkriConnectorsTagDigestType",
        "modelAsString": true,
        "values": [
          {
            "name": "Tag",
            "value": "Tag",
            "description": "Indicates that a tag should be specified."
          },
          {
            "name": "Digest",
            "value": "Digest",
            "description": "Indicates that a digest should be specified."
          }
        ]
      }
    },
    "AnonymousMethod": {
      "type": "string",
      "description": "x509 Certificate Method",
      "enum": [
        "Anonymous"
      ],
      "x-ms-enum": {
        "name": "AnonymousMethod",
        "modelAsString": true,
        "values": [
          {
            "name": "Anonymous",
            "value": "Anonymous",
            "description": "Anonymous Option"
          }
        ]
      }
    },
    "AuthorizationConfig": {
      "type": "object",
      "description": "Broker AuthorizationConfig properties",
      "properties": {
        "cache": {
          "type": "string",
          "description": "Enable caching of the authorization rules.",
          "default": "Enabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "OperationalMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "Enabled is equivalent to True"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "Disabled is equivalent to False."
              }
            ]
          }
        },
        "rules": {
          "type": "array",
          "description": "The authorization rules to follow. If no rule is set, but Authorization Resource is used that would mean DenyAll.",
          "items": {
            "type": "object",
            "description": "AuthorizationConfig Rule Properties",
            "properties": {
              "brokerResources": {
                "type": "array",
                "description": "Give access to Broker methods and topics.",
                "items": {
                  "type": "object",
                  "description": "Broker Resource Rule properties. This defines the objects that represent the actions or topics, such as - method.Connect, method.Publish, etc.",
                  "properties": {
                    "method": {
                      "description": "Give access for a Broker method (i.e., Connect, Subscribe, or Publish).",
                      "type": "string",
                      "enum": [
                        "Connect",
                        "Publish",
                        "Subscribe"
                      ],
                      "x-ms-enum": {
                        "name": "BrokerResourceDefinitionMethods",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Connect",
                            "value": "Connect",
                            "description": "Allowed Connecting to Broker"
                          },
                          {
                            "name": "Publish",
                            "value": "Publish",
                            "description": "Allowed Publishing to Broker"
                          },
                          {
                            "name": "Subscribe",
                            "value": "Subscribe",
                            "description": "Allowed Subscribing to Broker"
                          }
                        ]
                      }
                    },
                    "clientIds": {
                      "type": "array",
                      "description": "A list of client IDs that match the clients. The client IDs are case-sensitive and must match the client IDs provided by the clients during connection. This subfield may be set if the method is Connect.",
                      "default": [],
                      "items": {
                        "type": "string"
                      }
                    },
                    "topics": {
                      "type": "array",
                      "description": "A list of topics or topic patterns that match the topics that the clients can publish or subscribe to. This subfield is required if the method is Publish or Subscribe.",
                      "default": [],
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "method"
                  ]
                },
                "x-ms-identifiers": []
              },
              "principals": {
                "description": "Give access to clients based on the following properties.",
                "type": "object",
                "properties": {
                  "attributes": {
                    "type": "array",
                    "description": "A list of key-value pairs that match the attributes of the clients. The attributes are case-sensitive and must match the attributes provided by the clients during authentication.",
                    "default": [],
                    "items": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "x-ms-identifiers": []
                  },
                  "clientIds": {
                    "type": "array",
                    "description": "A list of client IDs that match the clients. The client IDs are case-sensitive and must match the client IDs provided by the clients during connection.",
                    "default": [],
                    "items": {
                      "type": "string"
                    }
                  },
                  "usernames": {
                    "type": "array",
                    "description": "A list of usernames that match the clients. The usernames are case-sensitive and must match the usernames provided by the clients during authentication.",
                    "default": [],
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "stateStoreResources": {
                "type": "array",
                "description": "Give access to state store resources.",
                "items": {
                  "type": "object",
                  "description": "State Store Resource Rule properties.",
                  "properties": {
                    "keyType": {
                      "description": "Allowed keyTypes pattern, string, binary. The key type used for matching, for example pattern tries to match the key to a glob-style pattern and string checks key is equal to value provided in keys.",
                      "type": "string",
                      "enum": [
                        "Pattern",
                        "String",
                        "Binary"
                      ],
                      "x-ms-enum": {
                        "name": "StateStoreResourceKeyTypes",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Pattern",
                            "value": "Pattern",
                            "description": "Key type - pattern"
                          },
                          {
                            "name": "String",
                            "value": "String",
                            "description": "Key type - string"
                          },
                          {
                            "name": "Binary",
                            "value": "Binary",
                            "description": "Key type - binary"
                          }
                        ]
                      }
                    },
                    "keys": {
                      "type": "array",
                      "description": "Give access to state store keys for the corresponding principals defined. When key type is pattern set glob-style pattern (e.g., '*', 'clients/*').",
                      "items": {
                        "type": "string"
                      }
                    },
                    "method": {
                      "description": "Give access for `Read`, `Write` and `ReadWrite` access level.",
                      "type": "string",
                      "enum": [
                        "Read",
                        "Write",
                        "ReadWrite"
                      ],
                      "x-ms-enum": {
                        "name": "StateStoreResourceDefinitionMethods",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Read",
                            "value": "Read",
                            "description": "Get/KeyNotify from Store"
                          },
                          {
                            "name": "Write",
                            "value": "Write",
                            "description": "Set/Delete in Store"
                          },
                          {
                            "name": "ReadWrite",
                            "value": "ReadWrite",
                            "description": "Allowed all operations on Store - Get/KeyNotify/Set/Delete"
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "keyType",
                    "keys",
                    "method"
                  ]
                },
                "x-ms-identifiers": []
              }
            },
            "required": [
              "brokerResources",
              "principals"
            ]
          },
          "x-ms-identifiers": []
        }
      }
    },
    "AuthorizationRule": {
      "type": "object",
      "description": "AuthorizationConfig Rule Properties",
      "properties": {
        "brokerResources": {
          "type": "array",
          "description": "Give access to Broker methods and topics.",
          "items": {
            "type": "object",
            "description": "Broker Resource Rule properties. This defines the objects that represent the actions or topics, such as - method.Connect, method.Publish, etc.",
            "properties": {
              "method": {
                "description": "Give access for a Broker method (i.e., Connect, Subscribe, or Publish).",
                "type": "string",
                "enum": [
                  "Connect",
                  "Publish",
                  "Subscribe"
                ],
                "x-ms-enum": {
                  "name": "BrokerResourceDefinitionMethods",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Connect",
                      "value": "Connect",
                      "description": "Allowed Connecting to Broker"
                    },
                    {
                      "name": "Publish",
                      "value": "Publish",
                      "description": "Allowed Publishing to Broker"
                    },
                    {
                      "name": "Subscribe",
                      "value": "Subscribe",
                      "description": "Allowed Subscribing to Broker"
                    }
                  ]
                }
              },
              "clientIds": {
                "type": "array",
                "description": "A list of client IDs that match the clients. The client IDs are case-sensitive and must match the client IDs provided by the clients during connection. This subfield may be set if the method is Connect.",
                "default": [],
                "items": {
                  "type": "string"
                }
              },
              "topics": {
                "type": "array",
                "description": "A list of topics or topic patterns that match the topics that the clients can publish or subscribe to. This subfield is required if the method is Publish or Subscribe.",
                "default": [],
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "method"
            ]
          },
          "x-ms-identifiers": []
        },
        "principals": {
          "description": "Give access to clients based on the following properties.",
          "type": "object",
          "properties": {
            "attributes": {
              "type": "array",
              "description": "A list of key-value pairs that match the attributes of the clients. The attributes are case-sensitive and must match the attributes provided by the clients during authentication.",
              "default": [],
              "items": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "x-ms-identifiers": []
            },
            "clientIds": {
              "type": "array",
              "description": "A list of client IDs that match the clients. The client IDs are case-sensitive and must match the client IDs provided by the clients during connection.",
              "default": [],
              "items": {
                "type": "string"
              }
            },
            "usernames": {
              "type": "array",
              "description": "A list of usernames that match the clients. The usernames are case-sensitive and must match the usernames provided by the clients during authentication.",
              "default": [],
              "items": {
                "type": "string"
              }
            }
          }
        },
        "stateStoreResources": {
          "type": "array",
          "description": "Give access to state store resources.",
          "items": {
            "type": "object",
            "description": "State Store Resource Rule properties.",
            "properties": {
              "keyType": {
                "description": "Allowed keyTypes pattern, string, binary. The key type used for matching, for example pattern tries to match the key to a glob-style pattern and string checks key is equal to value provided in keys.",
                "type": "string",
                "enum": [
                  "Pattern",
                  "String",
                  "Binary"
                ],
                "x-ms-enum": {
                  "name": "StateStoreResourceKeyTypes",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Pattern",
                      "value": "Pattern",
                      "description": "Key type - pattern"
                    },
                    {
                      "name": "String",
                      "value": "String",
                      "description": "Key type - string"
                    },
                    {
                      "name": "Binary",
                      "value": "Binary",
                      "description": "Key type - binary"
                    }
                  ]
                }
              },
              "keys": {
                "type": "array",
                "description": "Give access to state store keys for the corresponding principals defined. When key type is pattern set glob-style pattern (e.g., '*', 'clients/*').",
                "items": {
                  "type": "string"
                }
              },
              "method": {
                "description": "Give access for `Read`, `Write` and `ReadWrite` access level.",
                "type": "string",
                "enum": [
                  "Read",
                  "Write",
                  "ReadWrite"
                ],
                "x-ms-enum": {
                  "name": "StateStoreResourceDefinitionMethods",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Read",
                      "value": "Read",
                      "description": "Get/KeyNotify from Store"
                    },
                    {
                      "name": "Write",
                      "value": "Write",
                      "description": "Set/Delete in Store"
                    },
                    {
                      "name": "ReadWrite",
                      "value": "ReadWrite",
                      "description": "Allowed all operations on Store - Get/KeyNotify/Set/Delete"
                    }
                  ]
                }
              }
            },
            "required": [
              "keyType",
              "keys",
              "method"
            ]
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "brokerResources",
        "principals"
      ]
    },
    "AzureDeviceRegistryNamespaceID": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an Azure Resource Manager resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.DeviceRegistry/namespaces"
          }
        ]
      }
    },
    "AzureDeviceRegistryNamespaceRef": {
      "type": "object",
      "description": "Azure Device Registry Namespace reference.",
      "properties": {
        "resourceId": {
          "description": "The resource ID of the Azure Device Registry Namespace.",
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.DeviceRegistry/namespaces"
              }
            ]
          }
        }
      },
      "required": [
        "resourceId"
      ]
    },
    "BackendChain": {
      "type": "object",
      "description": "Desired properties of the backend instances of the broker",
      "properties": {
        "partitions": {
          "type": "integer",
          "format": "int32",
          "description": "The desired number of physical backend partitions.",
          "minimum": 1,
          "maximum": 16
        },
        "redundancyFactor": {
          "type": "integer",
          "format": "int32",
          "description": "The desired numbers of backend replicas (pods) in a physical partition.",
          "minimum": 1,
          "maximum": 5
        },
        "workers": {
          "type": "integer",
          "format": "int32",
          "description": "Number of logical backend workers per replica (pod).",
          "default": 1,
          "minimum": 1,
          "maximum": 16
        }
      },
      "required": [
        "partitions",
        "redundancyFactor"
      ]
    },
    "BatchingConfiguration": {
      "type": "object",
      "description": "Batching configuration",
      "properties": {
        "latencySeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Batching latency in seconds.",
          "default": 60,
          "minimum": 0,
          "maximum": 65535
        },
        "maxMessages": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of messages in a batch.",
          "default": 100000,
          "minimum": 0,
          "maximum": 4294967295
        }
      }
    },
    "BrokerAuthenticationMethod": {
      "type": "string",
      "description": "Broker Authentication Mode",
      "enum": [
        "Custom",
        "ServiceAccountToken",
        "X509"
      ],
      "x-ms-enum": {
        "name": "BrokerAuthenticationMethod",
        "modelAsString": true,
        "values": [
          {
            "name": "Custom",
            "value": "Custom",
            "description": "Custom authentication configuration."
          },
          {
            "name": "ServiceAccountToken",
            "value": "ServiceAccountToken",
            "description": "ServiceAccountToken authentication configuration."
          },
          {
            "name": "X509",
            "value": "X509",
            "description": "X.509 authentication configuration."
          }
        ]
      }
    },
    "BrokerAuthenticationProperties": {
      "type": "object",
      "description": "BrokerAuthentication Resource properties",
      "properties": {
        "authenticationMethods": {
          "type": "array",
          "description": "Defines a set of Broker authentication methods to be used on `BrokerListeners`. For each array element one authenticator type supported.",
          "items": {
            "type": "object",
            "description": "Set of broker authentication policies. Only one method is supported for each entry.",
            "properties": {
              "method": {
                "description": "Custom authentication configuration.",
                "type": "string",
                "enum": [
                  "Custom",
                  "ServiceAccountToken",
                  "X509"
                ],
                "x-ms-enum": {
                  "name": "BrokerAuthenticationMethod",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Custom",
                      "value": "Custom",
                      "description": "Custom authentication configuration."
                    },
                    {
                      "name": "ServiceAccountToken",
                      "value": "ServiceAccountToken",
                      "description": "ServiceAccountToken authentication configuration."
                    },
                    {
                      "name": "X509",
                      "value": "X509",
                      "description": "X.509 authentication configuration."
                    }
                  ]
                }
              },
              "customSettings": {
                "description": "Custom authentication configuration.",
                "type": "object",
                "properties": {
                  "auth": {
                    "description": "Optional authentication needed for authenticating with the custom authentication server.",
                    "type": "object",
                    "properties": {
                      "x509": {
                        "description": "X509 Custom Auth type details.",
                        "type": "object",
                        "properties": {
                          "secretRef": {
                            "type": "string",
                            "description": "Kubernetes secret containing an X.509 client certificate. This is a reference to the secret through an identifying name, not the secret itself."
                          }
                        },
                        "required": [
                          "secretRef"
                        ]
                      }
                    },
                    "required": [
                      "x509"
                    ]
                  },
                  "caCertConfigMap": {
                    "type": "string",
                    "description": "Optional CA certificate for validating the custom authentication server's certificate."
                  },
                  "endpoint": {
                    "type": "string",
                    "format": "uri",
                    "description": "Endpoint of the custom authentication server. Must be an HTTPS endpoint.",
                    "pattern": "^https://.*$"
                  },
                  "headers": {
                    "type": "object",
                    "description": "Additional HTTP headers to pass to the custom authentication server.",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "endpoint"
                ]
              },
              "serviceAccountTokenSettings": {
                "description": "ServiceAccountToken authentication configuration.",
                "type": "object",
                "properties": {
                  "audiences": {
                    "type": "array",
                    "description": "List of allowed audience.",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "audiences"
                ]
              },
              "x509Settings": {
                "description": "X.509 authentication configuration.",
                "type": "object",
                "properties": {
                  "authorizationAttributes": {
                    "type": "object",
                    "description": "X509 authorization attributes properties.",
                    "additionalProperties": {
                      "type": "object",
                      "description": "BrokerAuthenticatorMethodX509Attributes properties.",
                      "properties": {
                        "attributes": {
                          "type": "object",
                          "description": "Attributes object.",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "subject": {
                          "type": "string",
                          "description": "Subject of the X509 attribute."
                        }
                      },
                      "required": [
                        "attributes",
                        "subject"
                      ]
                    }
                  },
                  "trustedClientCaCert": {
                    "type": "string",
                    "description": "Name of the trusted client ca cert resource.",
                    "default": "client-ca"
                  },
                  "additionalValidation": {
                    "description": "X509 authentication attributes properties.",
                    "type": "string",
                    "enum": [
                      "None",
                      "AzureDeviceRegistry"
                    ],
                    "x-ms-enum": {
                      "name": "BrokerAuthenticatorValidationMethods",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "None",
                          "value": "None",
                          "description": "No additional validation is performed"
                        },
                        {
                          "name": "AzureDeviceRegistry",
                          "value": "AzureDeviceRegistry",
                          "description": "Additional validation is performed using the Azure Device Registry."
                        }
                      ]
                    }
                  }
                }
              }
            },
            "required": [
              "method"
            ]
          },
          "x-ms-identifiers": []
        },
        "provisioningState": {
          "description": "The status of the last operation.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Updating",
            "Deleting",
            "Accepted"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Provisioning",
                "value": "Provisioning",
                "description": "Resource is getting provisioned."
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "Resource is Updating."
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "Resource is Deleting."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "Resource has been Accepted."
              }
            ]
          }
        },
        "healthState": {
          "type": "string",
          "description": "The health state of the resource.",
          "default": "Unknown",
          "enum": [
            "Available",
            "Degraded",
            "Unavailable",
            "Unknown"
          ],
          "x-ms-enum": {
            "name": "ResourceHealthState",
            "modelAsString": true,
            "values": [
              {
                "name": "Available",
                "value": "Available",
                "description": "Resource is Available and functioning as expected."
              },
              {
                "name": "Degraded",
                "value": "Degraded",
                "description": "Resource health is degraded."
              },
              {
                "name": "Unavailable",
                "value": "Unavailable",
                "description": "Resource is not functioning as expected."
              },
              {
                "name": "Unknown",
                "value": "Unknown",
                "description": "Resource state is unknown."
              }
            ]
          },
          "readOnly": true
        }
      },
      "required": [
        "authenticationMethods"
      ]
    },
    "BrokerAuthenticationResource": {
      "type": "object",
      "description": "Instance broker authentication resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "authenticationMethods": {
              "type": "array",
              "description": "Defines a set of Broker authentication methods to be used on `BrokerListeners`. For each array element one authenticator type supported.",
              "items": {
                "type": "object",
                "description": "Set of broker authentication policies. Only one method is supported for each entry.",
                "properties": {
                  "method": {
                    "description": "Custom authentication configuration.",
                    "type": "string",
                    "enum": [
                      "Custom",
                      "ServiceAccountToken",
                      "X509"
                    ],
                    "x-ms-enum": {
                      "name": "BrokerAuthenticationMethod",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Custom",
                          "value": "Custom",
                          "description": "Custom authentication configuration."
                        },
                        {
                          "name": "ServiceAccountToken",
                          "value": "ServiceAccountToken",
                          "description": "ServiceAccountToken authentication configuration."
                        },
                        {
                          "name": "X509",
                          "value": "X509",
                          "description": "X.509 authentication configuration."
                        }
                      ]
                    }
                  },
                  "customSettings": {
                    "description": "Custom authentication configuration.",
                    "type": "object",
                    "properties": {
                      "auth": {
                        "description": "Optional authentication needed for authenticating with the custom authentication server.",
                        "type": "object",
                        "properties": {
                          "x509": {
                            "description": "X509 Custom Auth type details.",
                            "type": "object",
                            "properties": {
                              "secretRef": {
                                "type": "string",
                                "description": "Kubernetes secret containing an X.509 client certificate. This is a reference to the secret through an identifying name, not the secret itself."
                              }
                            },
                            "required": [
                              "secretRef"
                            ]
                          }
                        },
                        "required": [
                          "x509"
                        ]
                      },
                      "caCertConfigMap": {
                        "type": "string",
                        "description": "Optional CA certificate for validating the custom authentication server's certificate."
                      },
                      "endpoint": {
                        "type": "string",
                        "format": "uri",
                        "description": "Endpoint of the custom authentication server. Must be an HTTPS endpoint.",
                        "pattern": "^https://.*$"
                      },
                      "headers": {
                        "type": "object",
                        "description": "Additional HTTP headers to pass to the custom authentication server.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "endpoint"
                    ]
                  },
                  "serviceAccountTokenSettings": {
                    "description": "ServiceAccountToken authentication configuration.",
                    "type": "object",
                    "properties": {
                      "audiences": {
                        "type": "array",
                        "description": "List of allowed audience.",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "audiences"
                    ]
                  },
                  "x509Settings": {
                    "description": "X.509 authentication configuration.",
                    "type": "object",
                    "properties": {
                      "authorizationAttributes": {
                        "type": "object",
                        "description": "X509 authorization attributes properties.",
                        "additionalProperties": {
                          "type": "object",
                          "description": "BrokerAuthenticatorMethodX509Attributes properties.",
                          "properties": {
                            "attributes": {
                              "type": "object",
                              "description": "Attributes object.",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "subject": {
                              "type": "string",
                              "description": "Subject of the X509 attribute."
                            }
                          },
                          "required": [
                            "attributes",
                            "subject"
                          ]
                        }
                      },
                      "trustedClientCaCert": {
                        "type": "string",
                        "description": "Name of the trusted client ca cert resource.",
                        "default": "client-ca"
                      },
                      "additionalValidation": {
                        "description": "X509 authentication attributes properties.",
                        "type": "string",
                        "enum": [
                          "None",
                          "AzureDeviceRegistry"
                        ],
                        "x-ms-enum": {
                          "name": "BrokerAuthenticatorValidationMethods",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "None",
                              "value": "None",
                              "description": "No additional validation is performed"
                            },
                            {
                              "name": "AzureDeviceRegistry",
                              "value": "AzureDeviceRegistry",
                              "description": "Additional validation is performed using the Azure Device Registry."
                            }
                          ]
                        }
                      }
                    }
                  }
                },
                "required": [
                  "method"
                ]
              },
              "x-ms-identifiers": []
            },
            "provisioningState": {
              "description": "The status of the last operation.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "Resource is getting provisioned."
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "Resource is Updating."
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "Resource is Deleting."
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "Resource has been Accepted."
                  }
                ]
              }
            },
            "healthState": {
              "type": "string",
              "description": "The health state of the resource.",
              "default": "Unknown",
              "enum": [
                "Available",
                "Degraded",
                "Unavailable",
                "Unknown"
              ],
              "x-ms-enum": {
                "name": "ResourceHealthState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Available",
                    "value": "Available",
                    "description": "Resource is Available and functioning as expected."
                  },
                  {
                    "name": "Degraded",
                    "value": "Degraded",
                    "description": "Resource health is degraded."
                  },
                  {
                    "name": "Unavailable",
                    "value": "Unavailable",
                    "description": "Resource is not functioning as expected."
                  },
                  {
                    "name": "Unknown",
                    "value": "Unknown",
                    "description": "Resource state is unknown."
                  }
                ]
              },
              "readOnly": true
            }
          },
          "required": [
            "authenticationMethods"
          ]
        },
        "extendedLocation": {
          "description": "Edge location of the resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the extended location."
            },
            "type": {
              "description": "Type of ExtendedLocation.",
              "type": "string",
              "enum": [
                "CustomLocation"
              ],
              "x-ms-enum": {
                "name": "ExtendedLocationType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "CustomLocation",
                    "value": "CustomLocation",
                    "description": "CustomLocation type"
                  }
                ]
              }
            }
          },
          "required": [
            "name",
            "type"
          ]
        }
      }
    },
    "BrokerAuthenticationResourceListResult": {
      "type": "object",
      "description": "The response of a BrokerAuthenticationResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The BrokerAuthenticationResource items on this page",
          "items": {
            "type": "object",
            "description": "Instance broker authentication resource",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "authenticationMethods": {
                    "type": "array",
                    "description": "Defines a set of Broker authentication methods to be used on `BrokerListeners`. For each array element one authenticator type supported.",
                    "items": {
                      "type": "object",
                      "description": "Set of broker authentication policies. Only one method is supported for each entry.",
                      "properties": {
                        "method": {
                          "description": "Custom authentication configuration.",
                          "type": "string",
                          "enum": [
                            "Custom",
                            "ServiceAccountToken",
                            "X509"
                          ],
                          "x-ms-enum": {
                            "name": "BrokerAuthenticationMethod",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Custom",
                                "value": "Custom",
                                "description": "Custom authentication configuration."
                              },
                              {
                                "name": "ServiceAccountToken",
                                "value": "ServiceAccountToken",
                                "description": "ServiceAccountToken authentication configuration."
                              },
                              {
                                "name": "X509",
                                "value": "X509",
                                "description": "X.509 authentication configuration."
                              }
                            ]
                          }
                        },
                        "customSettings": {
                          "description": "Custom authentication configuration.",
                          "type": "object",
                          "properties": {
                            "auth": {
                              "description": "Optional authentication needed for authenticating with the custom authentication server.",
                              "type": "object",
                              "properties": {
                                "x509": {
                                  "description": "X509 Custom Auth type details.",
                                  "type": "object",
                                  "properties": {
                                    "secretRef": {
                                      "type": "string",
                                      "description": "Kubernetes secret containing an X.509 client certificate. This is a reference to the secret through an identifying name, not the secret itself."
                                    }
                                  },
                                  "required": [
                                    "secretRef"
                                  ]
                                }
                              },
                              "required": [
                                "x509"
                              ]
                            },
                            "caCertConfigMap": {
                              "type": "string",
                              "description": "Optional CA certificate for validating the custom authentication server's certificate."
                            },
                            "endpoint": {
                              "type": "string",
                              "format": "uri",
                              "description": "Endpoint of the custom authentication server. Must be an HTTPS endpoint.",
                              "pattern": "^https://.*$"
                            },
                            "headers": {
                              "type": "object",
                              "description": "Additional HTTP headers to pass to the custom authentication server.",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          },
                          "required": [
                            "endpoint"
                          ]
                        },
                        "serviceAccountTokenSettings": {
                          "description": "ServiceAccountToken authentication configuration.",
                          "type": "object",
                          "properties": {
                            "audiences": {
                              "type": "array",
                              "description": "List of allowed audience.",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "required": [
                            "audiences"
                          ]
                        },
                        "x509Settings": {
                          "description": "X.509 authentication configuration.",
                          "type": "object",
                          "properties": {
                            "authorizationAttributes": {
                              "type": "object",
                              "description": "X509 authorization attributes properties.",
                              "additionalProperties": {
                                "type": "object",
                                "description": "BrokerAuthenticatorMethodX509Attributes properties.",
                                "properties": {
                                  "attributes": {
                                    "type": "object",
                                    "description": "Attributes object.",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "subject": {
                                    "type": "string",
                                    "description": "Subject of the X509 attribute."
                                  }
                                },
                                "required": [
                                  "attributes",
                                  "subject"
                                ]
                              }
                            },
                            "trustedClientCaCert": {
                              "type": "string",
                              "description": "Name of the trusted client ca cert resource.",
                              "default": "client-ca"
                            },
                            "additionalValidation": {
                              "description": "X509 authentication attributes properties.",
                              "type": "string",
                              "enum": [
                                "None",
                                "AzureDeviceRegistry"
                              ],
                              "x-ms-enum": {
                                "name": "BrokerAuthenticatorValidationMethods",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "None",
                                    "value": "None",
                                    "description": "No additional validation is performed"
                                  },
                                  {
                                    "name": "AzureDeviceRegistry",
                                    "value": "AzureDeviceRegistry",
                                    "description": "Additional validation is performed using the Azure Device Registry."
                                  }
                                ]
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "method"
                      ]
                    },
                    "x-ms-identifiers": []
                  },
                  "provisioningState": {
                    "description": "The status of the last operation.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Provisioning",
                      "Updating",
                      "Deleting",
                      "Accepted"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Provisioning",
                          "value": "Provisioning",
                          "description": "Resource is getting provisioned."
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "Resource is Updating."
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "Resource is Deleting."
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "Resource has been Accepted."
                        }
                      ]
                    }
                  },
                  "healthState": {
                    "type": "string",
                    "description": "The health state of the resource.",
                    "default": "Unknown",
                    "enum": [
                      "Available",
                      "Degraded",
                      "Unavailable",
                      "Unknown"
                    ],
                    "x-ms-enum": {
                      "name": "ResourceHealthState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Available",
                          "value": "Available",
                          "description": "Resource is Available and functioning as expected."
                        },
                        {
                          "name": "Degraded",
                          "value": "Degraded",
                          "description": "Resource health is degraded."
                        },
                        {
                          "name": "Unavailable",
                          "value": "Unavailable",
                          "description": "Resource is not functioning as expected."
                        },
                        {
                          "name": "Unknown",
                          "value": "Unknown",
                          "description": "Resource state is unknown."
                        }
                      ]
                    },
                    "readOnly": true
                  }
                },
                "required": [
                  "authenticationMethods"
                ]
              },
              "extendedLocation": {
                "description": "Edge location of the resource.",
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the extended location."
                  },
                  "type": {
                    "description": "Type of ExtendedLocation.",
                    "type": "string",
                    "enum": [
                      "CustomLocation"
                    ],
                    "x-ms-enum": {
                      "name": "ExtendedLocationType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "CustomLocation",
                          "value": "CustomLocation",
                          "description": "CustomLocation type"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "name",
                  "type"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "BrokerAuthenticatorCustomAuth": {
      "type": "object",
      "description": "Custom Authentication properties",
      "properties": {
        "x509": {
          "description": "X509 Custom Auth type details.",
          "type": "object",
          "properties": {
            "secretRef": {
              "type": "string",
              "description": "Kubernetes secret containing an X.509 client certificate. This is a reference to the secret through an identifying name, not the secret itself."
            }
          },
          "required": [
            "secretRef"
          ]
        }
      },
      "required": [
        "x509"
      ]
    },
    "BrokerAuthenticatorMethodCustom": {
      "type": "object",
      "description": "Custom method for BrokerAuthentication",
      "properties": {
        "auth": {
          "description": "Optional authentication needed for authenticating with the custom authentication server.",
          "type": "object",
          "properties": {
            "x509": {
              "description": "X509 Custom Auth type details.",
              "type": "object",
              "properties": {
                "secretRef": {
                  "type": "string",
                  "description": "Kubernetes secret containing an X.509 client certificate. This is a reference to the secret through an identifying name, not the secret itself."
                }
              },
              "required": [
                "secretRef"
              ]
            }
          },
          "required": [
            "x509"
          ]
        },
        "caCertConfigMap": {
          "type": "string",
          "description": "Optional CA certificate for validating the custom authentication server's certificate."
        },
        "endpoint": {
          "type": "string",
          "format": "uri",
          "description": "Endpoint of the custom authentication server. Must be an HTTPS endpoint.",
          "pattern": "^https://.*$"
        },
        "headers": {
          "type": "object",
          "description": "Additional HTTP headers to pass to the custom authentication server.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "required": [
        "endpoint"
      ]
    },
    "BrokerAuthenticatorMethodSat": {
      "type": "object",
      "description": "Service Account Token for BrokerAuthentication",
      "properties": {
        "audiences": {
          "type": "array",
          "description": "List of allowed audience.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "audiences"
      ]
    },
    "BrokerAuthenticatorMethodX509": {
      "type": "object",
      "description": "X509 for BrokerAuthentication.",
      "properties": {
        "authorizationAttributes": {
          "type": "object",
          "description": "X509 authorization attributes properties.",
          "additionalProperties": {
            "type": "object",
            "description": "BrokerAuthenticatorMethodX509Attributes properties.",
            "properties": {
              "attributes": {
                "type": "object",
                "description": "Attributes object.",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "subject": {
                "type": "string",
                "description": "Subject of the X509 attribute."
              }
            },
            "required": [
              "attributes",
              "subject"
            ]
          }
        },
        "trustedClientCaCert": {
          "type": "string",
          "description": "Name of the trusted client ca cert resource.",
          "default": "client-ca"
        },
        "additionalValidation": {
          "description": "X509 authentication attributes properties.",
          "type": "string",
          "enum": [
            "None",
            "AzureDeviceRegistry"
          ],
          "x-ms-enum": {
            "name": "BrokerAuthenticatorValidationMethods",
            "modelAsString": true,
            "values": [
              {
                "name": "None",
                "value": "None",
                "description": "No additional validation is performed"
              },
              {
                "name": "AzureDeviceRegistry",
                "value": "AzureDeviceRegistry",
                "description": "Additional validation is performed using the Azure Device Registry."
              }
            ]
          }
        }
      }
    },
    "BrokerAuthenticatorMethodX509Attributes": {
      "type": "object",
      "description": "BrokerAuthenticatorMethodX509Attributes properties.",
      "properties": {
        "attributes": {
          "type": "object",
          "description": "Attributes object.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "subject": {
          "type": "string",
          "description": "Subject of the X509 attribute."
        }
      },
      "required": [
        "attributes",
        "subject"
      ]
    },
    "BrokerAuthenticatorMethods": {
      "type": "object",
      "description": "Set of broker authentication policies. Only one method is supported for each entry.",
      "properties": {
        "method": {
          "description": "Custom authentication configuration.",
          "type": "string",
          "enum": [
            "Custom",
            "ServiceAccountToken",
            "X509"
          ],
          "x-ms-enum": {
            "name": "BrokerAuthenticationMethod",
            "modelAsString": true,
            "values": [
              {
                "name": "Custom",
                "value": "Custom",
                "description": "Custom authentication configuration."
              },
              {
                "name": "ServiceAccountToken",
                "value": "ServiceAccountToken",
                "description": "ServiceAccountToken authentication configuration."
              },
              {
                "name": "X509",
                "value": "X509",
                "description": "X.509 authentication configuration."
              }
            ]
          }
        },
        "customSettings": {
          "description": "Custom authentication configuration.",
          "type": "object",
          "properties": {
            "auth": {
              "description": "Optional authentication needed for authenticating with the custom authentication server.",
              "type": "object",
              "properties": {
                "x509": {
                  "description": "X509 Custom Auth type details.",
                  "type": "object",
                  "properties": {
                    "secretRef": {
                      "type": "string",
                      "description": "Kubernetes secret containing an X.509 client certificate. This is a reference to the secret through an identifying name, not the secret itself."
                    }
                  },
                  "required": [
                    "secretRef"
                  ]
                }
              },
              "required": [
                "x509"
              ]
            },
            "caCertConfigMap": {
              "type": "string",
              "description": "Optional CA certificate for validating the custom authentication server's certificate."
            },
            "endpoint": {
              "type": "string",
              "format": "uri",
              "description": "Endpoint of the custom authentication server. Must be an HTTPS endpoint.",
              "pattern": "^https://.*$"
            },
            "headers": {
              "type": "object",
              "description": "Additional HTTP headers to pass to the custom authentication server.",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "required": [
            "endpoint"
          ]
        },
        "serviceAccountTokenSettings": {
          "description": "ServiceAccountToken authentication configuration.",
          "type": "object",
          "properties": {
            "audiences": {
              "type": "array",
              "description": "List of allowed audience.",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "audiences"
          ]
        },
        "x509Settings": {
          "description": "X.509 authentication configuration.",
          "type": "object",
          "properties": {
            "authorizationAttributes": {
              "type": "object",
              "description": "X509 authorization attributes properties.",
              "additionalProperties": {
                "type": "object",
                "description": "BrokerAuthenticatorMethodX509Attributes properties.",
                "properties": {
                  "attributes": {
                    "type": "object",
                    "description": "Attributes object.",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "subject": {
                    "type": "string",
                    "description": "Subject of the X509 attribute."
                  }
                },
                "required": [
                  "attributes",
                  "subject"
                ]
              }
            },
            "trustedClientCaCert": {
              "type": "string",
              "description": "Name of the trusted client ca cert resource.",
              "default": "client-ca"
            },
            "additionalValidation": {
              "description": "X509 authentication attributes properties.",
              "type": "string",
              "enum": [
                "None",
                "AzureDeviceRegistry"
              ],
              "x-ms-enum": {
                "name": "BrokerAuthenticatorValidationMethods",
                "modelAsString": true,
                "values": [
                  {
                    "name": "None",
                    "value": "None",
                    "description": "No additional validation is performed"
                  },
                  {
                    "name": "AzureDeviceRegistry",
                    "value": "AzureDeviceRegistry",
                    "description": "Additional validation is performed using the Azure Device Registry."
                  }
                ]
              }
            }
          }
        }
      },
      "required": [
        "method"
      ]
    },
    "BrokerAuthenticatorValidationMethods": {
      "type": "string",
      "description": "X509 authentication validation methods.",
      "enum": [
        "None",
        "AzureDeviceRegistry"
      ],
      "x-ms-enum": {
        "name": "BrokerAuthenticatorValidationMethods",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None",
            "description": "No additional validation is performed"
          },
          {
            "name": "AzureDeviceRegistry",
            "value": "AzureDeviceRegistry",
            "description": "Additional validation is performed using the Azure Device Registry."
          }
        ]
      }
    },
    "BrokerAuthorizationProperties": {
      "type": "object",
      "description": "BrokerAuthorization Resource properties",
      "properties": {
        "authorizationPolicies": {
          "description": "The list of authorization policies supported by the Authorization Resource.",
          "type": "object",
          "properties": {
            "cache": {
              "type": "string",
              "description": "Enable caching of the authorization rules.",
              "default": "Enabled",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "OperationalMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled",
                    "description": "Enabled is equivalent to True"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "Disabled is equivalent to False."
                  }
                ]
              }
            },
            "rules": {
              "type": "array",
              "description": "The authorization rules to follow. If no rule is set, but Authorization Resource is used that would mean DenyAll.",
              "items": {
                "type": "object",
                "description": "AuthorizationConfig Rule Properties",
                "properties": {
                  "brokerResources": {
                    "type": "array",
                    "description": "Give access to Broker methods and topics.",
                    "items": {
                      "type": "object",
                      "description": "Broker Resource Rule properties. This defines the objects that represent the actions or topics, such as - method.Connect, method.Publish, etc.",
                      "properties": {
                        "method": {
                          "description": "Give access for a Broker method (i.e., Connect, Subscribe, or Publish).",
                          "type": "string",
                          "enum": [
                            "Connect",
                            "Publish",
                            "Subscribe"
                          ],
                          "x-ms-enum": {
                            "name": "BrokerResourceDefinitionMethods",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Connect",
                                "value": "Connect",
                                "description": "Allowed Connecting to Broker"
                              },
                              {
                                "name": "Publish",
                                "value": "Publish",
                                "description": "Allowed Publishing to Broker"
                              },
                              {
                                "name": "Subscribe",
                                "value": "Subscribe",
                                "description": "Allowed Subscribing to Broker"
                              }
                            ]
                          }
                        },
                        "clientIds": {
                          "type": "array",
                          "description": "A list of client IDs that match the clients. The client IDs are case-sensitive and must match the client IDs provided by the clients during connection. This subfield may be set if the method is Connect.",
                          "default": [],
                          "items": {
                            "type": "string"
                          }
                        },
                        "topics": {
                          "type": "array",
                          "description": "A list of topics or topic patterns that match the topics that the clients can publish or subscribe to. This subfield is required if the method is Publish or Subscribe.",
                          "default": [],
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "method"
                      ]
                    },
                    "x-ms-identifiers": []
                  },
                  "principals": {
                    "description": "Give access to clients based on the following properties.",
                    "type": "object",
                    "properties": {
                      "attributes": {
                        "type": "array",
                        "description": "A list of key-value pairs that match the attributes of the clients. The attributes are case-sensitive and must match the attributes provided by the clients during authentication.",
                        "default": [],
                        "items": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "x-ms-identifiers": []
                      },
                      "clientIds": {
                        "type": "array",
                        "description": "A list of client IDs that match the clients. The client IDs are case-sensitive and must match the client IDs provided by the clients during connection.",
                        "default": [],
                        "items": {
                          "type": "string"
                        }
                      },
                      "usernames": {
                        "type": "array",
                        "description": "A list of usernames that match the clients. The usernames are case-sensitive and must match the usernames provided by the clients during authentication.",
                        "default": [],
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "stateStoreResources": {
                    "type": "array",
                    "description": "Give access to state store resources.",
                    "items": {
                      "type": "object",
                      "description": "State Store Resource Rule properties.",
                      "properties": {
                        "keyType": {
                          "description": "Allowed keyTypes pattern, string, binary. The key type used for matching, for example pattern tries to match the key to a glob-style pattern and string checks key is equal to value provided in keys.",
                          "type": "string",
                          "enum": [
                            "Pattern",
                            "String",
                            "Binary"
                          ],
                          "x-ms-enum": {
                            "name": "StateStoreResourceKeyTypes",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Pattern",
                                "value": "Pattern",
                                "description": "Key type - pattern"
                              },
                              {
                                "name": "String",
                                "value": "String",
                                "description": "Key type - string"
                              },
                              {
                                "name": "Binary",
                                "value": "Binary",
                                "description": "Key type - binary"
                              }
                            ]
                          }
                        },
                        "keys": {
                          "type": "array",
                          "description": "Give access to state store keys for the corresponding principals defined. When key type is pattern set glob-style pattern (e.g., '*', 'clients/*').",
                          "items": {
                            "type": "string"
                          }
                        },
                        "method": {
                          "description": "Give access for `Read`, `Write` and `ReadWrite` access level.",
                          "type": "string",
                          "enum": [
                            "Read",
                            "Write",
                            "ReadWrite"
                          ],
                          "x-ms-enum": {
                            "name": "StateStoreResourceDefinitionMethods",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Read",
                                "value": "Read",
                                "description": "Get/KeyNotify from Store"
                              },
                              {
                                "name": "Write",
                                "value": "Write",
                                "description": "Set/Delete in Store"
                              },
                              {
                                "name": "ReadWrite",
                                "value": "ReadWrite",
                                "description": "Allowed all operations on Store - Get/KeyNotify/Set/Delete"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "keyType",
                        "keys",
                        "method"
                      ]
                    },
                    "x-ms-identifiers": []
                  }
                },
                "required": [
                  "brokerResources",
                  "principals"
                ]
              },
              "x-ms-identifiers": []
            }
          }
        },
        "provisioningState": {
          "description": "The status of the last operation.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Updating",
            "Deleting",
            "Accepted"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Provisioning",
                "value": "Provisioning",
                "description": "Resource is getting provisioned."
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "Resource is Updating."
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "Resource is Deleting."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "Resource has been Accepted."
              }
            ]
          }
        },
        "healthState": {
          "type": "string",
          "description": "The health state of the resource.",
          "default": "Unknown",
          "enum": [
            "Available",
            "Degraded",
            "Unavailable",
            "Unknown"
          ],
          "x-ms-enum": {
            "name": "ResourceHealthState",
            "modelAsString": true,
            "values": [
              {
                "name": "Available",
                "value": "Available",
                "description": "Resource is Available and functioning as expected."
              },
              {
                "name": "Degraded",
                "value": "Degraded",
                "description": "Resource health is degraded."
              },
              {
                "name": "Unavailable",
                "value": "Unavailable",
                "description": "Resource is not functioning as expected."
              },
              {
                "name": "Unknown",
                "value": "Unknown",
                "description": "Resource state is unknown."
              }
            ]
          },
          "readOnly": true
        }
      },
      "required": [
        "authorizationPolicies"
      ]
    },
    "BrokerAuthorizationResource": {
      "type": "object",
      "description": "Instance broker authorizations resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "authorizationPolicies": {
              "description": "The list of authorization policies supported by the Authorization Resource.",
              "type": "object",
              "properties": {
                "cache": {
                  "type": "string",
                  "description": "Enable caching of the authorization rules.",
                  "default": "Enabled",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "OperationalMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled",
                        "description": "Enabled is equivalent to True"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled",
                        "description": "Disabled is equivalent to False."
                      }
                    ]
                  }
                },
                "rules": {
                  "type": "array",
                  "description": "The authorization rules to follow. If no rule is set, but Authorization Resource is used that would mean DenyAll.",
                  "items": {
                    "type": "object",
                    "description": "AuthorizationConfig Rule Properties",
                    "properties": {
                      "brokerResources": {
                        "type": "array",
                        "description": "Give access to Broker methods and topics.",
                        "items": {
                          "type": "object",
                          "description": "Broker Resource Rule properties. This defines the objects that represent the actions or topics, such as - method.Connect, method.Publish, etc.",
                          "properties": {
                            "method": {
                              "description": "Give access for a Broker method (i.e., Connect, Subscribe, or Publish).",
                              "type": "string",
                              "enum": [
                                "Connect",
                                "Publish",
                                "Subscribe"
                              ],
                              "x-ms-enum": {
                                "name": "BrokerResourceDefinitionMethods",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Connect",
                                    "value": "Connect",
                                    "description": "Allowed Connecting to Broker"
                                  },
                                  {
                                    "name": "Publish",
                                    "value": "Publish",
                                    "description": "Allowed Publishing to Broker"
                                  },
                                  {
                                    "name": "Subscribe",
                                    "value": "Subscribe",
                                    "description": "Allowed Subscribing to Broker"
                                  }
                                ]
                              }
                            },
                            "clientIds": {
                              "type": "array",
                              "description": "A list of client IDs that match the clients. The client IDs are case-sensitive and must match the client IDs provided by the clients during connection. This subfield may be set if the method is Connect.",
                              "default": [],
                              "items": {
                                "type": "string"
                              }
                            },
                            "topics": {
                              "type": "array",
                              "description": "A list of topics or topic patterns that match the topics that the clients can publish or subscribe to. This subfield is required if the method is Publish or Subscribe.",
                              "default": [],
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "required": [
                            "method"
                          ]
                        },
                        "x-ms-identifiers": []
                      },
                      "principals": {
                        "description": "Give access to clients based on the following properties.",
                        "type": "object",
                        "properties": {
                          "attributes": {
                            "type": "array",
                            "description": "A list of key-value pairs that match the attributes of the clients. The attributes are case-sensitive and must match the attributes provided by the clients during authentication.",
                            "default": [],
                            "items": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "clientIds": {
                            "type": "array",
                            "description": "A list of client IDs that match the clients. The client IDs are case-sensitive and must match the client IDs provided by the clients during connection.",
                            "default": [],
                            "items": {
                              "type": "string"
                            }
                          },
                          "usernames": {
                            "type": "array",
                            "description": "A list of usernames that match the clients. The usernames are case-sensitive and must match the usernames provided by the clients during authentication.",
                            "default": [],
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "stateStoreResources": {
                        "type": "array",
                        "description": "Give access to state store resources.",
                        "items": {
                          "type": "object",
                          "description": "State Store Resource Rule properties.",
                          "properties": {
                            "keyType": {
                              "description": "Allowed keyTypes pattern, string, binary. The key type used for matching, for example pattern tries to match the key to a glob-style pattern and string checks key is equal to value provided in keys.",
                              "type": "string",
                              "enum": [
                                "Pattern",
                                "String",
                                "Binary"
                              ],
                              "x-ms-enum": {
                                "name": "StateStoreResourceKeyTypes",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Pattern",
                                    "value": "Pattern",
                                    "description": "Key type - pattern"
                                  },
                                  {
                                    "name": "String",
                                    "value": "String",
                                    "description": "Key type - string"
                                  },
                                  {
                                    "name": "Binary",
                                    "value": "Binary",
                                    "description": "Key type - binary"
                                  }
                                ]
                              }
                            },
                            "keys": {
                              "type": "array",
                              "description": "Give access to state store keys for the corresponding principals defined. When key type is pattern set glob-style pattern (e.g., '*', 'clients/*').",
                              "items": {
                                "type": "string"
                              }
                            },
                            "method": {
                              "description": "Give access for `Read`, `Write` and `ReadWrite` access level.",
                              "type": "string",
                              "enum": [
                                "Read",
                                "Write",
                                "ReadWrite"
                              ],
                              "x-ms-enum": {
                                "name": "StateStoreResourceDefinitionMethods",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Read",
                                    "value": "Read",
                                    "description": "Get/KeyNotify from Store"
                                  },
                                  {
                                    "name": "Write",
                                    "value": "Write",
                                    "description": "Set/Delete in Store"
                                  },
                                  {
                                    "name": "ReadWrite",
                                    "value": "ReadWrite",
                                    "description": "Allowed all operations on Store - Get/KeyNotify/Set/Delete"
                                  }
                                ]
                              }
                            }
                          },
                          "required": [
                            "keyType",
                            "keys",
                            "method"
                          ]
                        },
                        "x-ms-identifiers": []
                      }
                    },
                    "required": [
                      "brokerResources",
                      "principals"
                    ]
                  },
                  "x-ms-identifiers": []
                }
              }
            },
            "provisioningState": {
              "description": "The status of the last operation.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "Resource is getting provisioned."
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "Resource is Updating."
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "Resource is Deleting."
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "Resource has been Accepted."
                  }
                ]
              }
            },
            "healthState": {
              "type": "string",
              "description": "The health state of the resource.",
              "default": "Unknown",
              "enum": [
                "Available",
                "Degraded",
                "Unavailable",
                "Unknown"
              ],
              "x-ms-enum": {
                "name": "ResourceHealthState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Available",
                    "value": "Available",
                    "description": "Resource is Available and functioning as expected."
                  },
                  {
                    "name": "Degraded",
                    "value": "Degraded",
                    "description": "Resource health is degraded."
                  },
                  {
                    "name": "Unavailable",
                    "value": "Unavailable",
                    "description": "Resource is not functioning as expected."
                  },
                  {
                    "name": "Unknown",
                    "value": "Unknown",
                    "description": "Resource state is unknown."
                  }
                ]
              },
              "readOnly": true
            }
          },
          "required": [
            "authorizationPolicies"
          ]
        },
        "extendedLocation": {
          "description": "Edge location of the resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the extended location."
            },
            "type": {
              "description": "Type of ExtendedLocation.",
              "type": "string",
              "enum": [
                "CustomLocation"
              ],
              "x-ms-enum": {
                "name": "ExtendedLocationType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "CustomLocation",
                    "value": "CustomLocation",
                    "description": "CustomLocation type"
                  }
                ]
              }
            }
          },
          "required": [
            "name",
            "type"
          ]
        }
      }
    },
    "BrokerAuthorizationResourceListResult": {
      "type": "object",
      "description": "The response of a BrokerAuthorizationResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The BrokerAuthorizationResource items on this page",
          "items": {
            "type": "object",
            "description": "Instance broker authorizations resource",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "authorizationPolicies": {
                    "description": "The list of authorization policies supported by the Authorization Resource.",
                    "type": "object",
                    "properties": {
                      "cache": {
                        "type": "string",
                        "description": "Enable caching of the authorization rules.",
                        "default": "Enabled",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "name": "OperationalMode",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Enabled",
                              "value": "Enabled",
                              "description": "Enabled is equivalent to True"
                            },
                            {
                              "name": "Disabled",
                              "value": "Disabled",
                              "description": "Disabled is equivalent to False."
                            }
                          ]
                        }
                      },
                      "rules": {
                        "type": "array",
                        "description": "The authorization rules to follow. If no rule is set, but Authorization Resource is used that would mean DenyAll.",
                        "items": {
                          "type": "object",
                          "description": "AuthorizationConfig Rule Properties",
                          "properties": {
                            "brokerResources": {
                              "type": "array",
                              "description": "Give access to Broker methods and topics.",
                              "items": {
                                "type": "object",
                                "description": "Broker Resource Rule properties. This defines the objects that represent the actions or topics, such as - method.Connect, method.Publish, etc.",
                                "properties": {
                                  "method": {
                                    "description": "Give access for a Broker method (i.e., Connect, Subscribe, or Publish).",
                                    "type": "string",
                                    "enum": [
                                      "Connect",
                                      "Publish",
                                      "Subscribe"
                                    ],
                                    "x-ms-enum": {
                                      "name": "BrokerResourceDefinitionMethods",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Connect",
                                          "value": "Connect",
                                          "description": "Allowed Connecting to Broker"
                                        },
                                        {
                                          "name": "Publish",
                                          "value": "Publish",
                                          "description": "Allowed Publishing to Broker"
                                        },
                                        {
                                          "name": "Subscribe",
                                          "value": "Subscribe",
                                          "description": "Allowed Subscribing to Broker"
                                        }
                                      ]
                                    }
                                  },
                                  "clientIds": {
                                    "type": "array",
                                    "description": "A list of client IDs that match the clients. The client IDs are case-sensitive and must match the client IDs provided by the clients during connection. This subfield may be set if the method is Connect.",
                                    "default": [],
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "topics": {
                                    "type": "array",
                                    "description": "A list of topics or topic patterns that match the topics that the clients can publish or subscribe to. This subfield is required if the method is Publish or Subscribe.",
                                    "default": [],
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "required": [
                                  "method"
                                ]
                              },
                              "x-ms-identifiers": []
                            },
                            "principals": {
                              "description": "Give access to clients based on the following properties.",
                              "type": "object",
                              "properties": {
                                "attributes": {
                                  "type": "array",
                                  "description": "A list of key-value pairs that match the attributes of the clients. The attributes are case-sensitive and must match the attributes provided by the clients during authentication.",
                                  "default": [],
                                  "items": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "x-ms-identifiers": []
                                },
                                "clientIds": {
                                  "type": "array",
                                  "description": "A list of client IDs that match the clients. The client IDs are case-sensitive and must match the client IDs provided by the clients during connection.",
                                  "default": [],
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "usernames": {
                                  "type": "array",
                                  "description": "A list of usernames that match the clients. The usernames are case-sensitive and must match the usernames provided by the clients during authentication.",
                                  "default": [],
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "stateStoreResources": {
                              "type": "array",
                              "description": "Give access to state store resources.",
                              "items": {
                                "type": "object",
                                "description": "State Store Resource Rule properties.",
                                "properties": {
                                  "keyType": {
                                    "description": "Allowed keyTypes pattern, string, binary. The key type used for matching, for example pattern tries to match the key to a glob-style pattern and string checks key is equal to value provided in keys.",
                                    "type": "string",
                                    "enum": [
                                      "Pattern",
                                      "String",
                                      "Binary"
                                    ],
                                    "x-ms-enum": {
                                      "name": "StateStoreResourceKeyTypes",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Pattern",
                                          "value": "Pattern",
                                          "description": "Key type - pattern"
                                        },
                                        {
                                          "name": "String",
                                          "value": "String",
                                          "description": "Key type - string"
                                        },
                                        {
                                          "name": "Binary",
                                          "value": "Binary",
                                          "description": "Key type - binary"
                                        }
                                      ]
                                    }
                                  },
                                  "keys": {
                                    "type": "array",
                                    "description": "Give access to state store keys for the corresponding principals defined. When key type is pattern set glob-style pattern (e.g., '*', 'clients/*').",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "method": {
                                    "description": "Give access for `Read`, `Write` and `ReadWrite` access level.",
                                    "type": "string",
                                    "enum": [
                                      "Read",
                                      "Write",
                                      "ReadWrite"
                                    ],
                                    "x-ms-enum": {
                                      "name": "StateStoreResourceDefinitionMethods",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Read",
                                          "value": "Read",
                                          "description": "Get/KeyNotify from Store"
                                        },
                                        {
                                          "name": "Write",
                                          "value": "Write",
                                          "description": "Set/Delete in Store"
                                        },
                                        {
                                          "name": "ReadWrite",
                                          "value": "ReadWrite",
                                          "description": "Allowed all operations on Store - Get/KeyNotify/Set/Delete"
                                        }
                                      ]
                                    }
                                  }
                                },
                                "required": [
                                  "keyType",
                                  "keys",
                                  "method"
                                ]
                              },
                              "x-ms-identifiers": []
                            }
                          },
                          "required": [
                            "brokerResources",
                            "principals"
                          ]
                        },
                        "x-ms-identifiers": []
                      }
                    }
                  },
                  "provisioningState": {
                    "description": "The status of the last operation.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Provisioning",
                      "Updating",
                      "Deleting",
                      "Accepted"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Provisioning",
                          "value": "Provisioning",
                          "description": "Resource is getting provisioned."
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "Resource is Updating."
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "Resource is Deleting."
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "Resource has been Accepted."
                        }
                      ]
                    }
                  },
                  "healthState": {
                    "type": "string",
                    "description": "The health state of the resource.",
                    "default": "Unknown",
                    "enum": [
                      "Available",
                      "Degraded",
                      "Unavailable",
                      "Unknown"
                    ],
                    "x-ms-enum": {
                      "name": "ResourceHealthState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Available",
                          "value": "Available",
                          "description": "Resource is Available and functioning as expected."
                        },
                        {
                          "name": "Degraded",
                          "value": "Degraded",
                          "description": "Resource health is degraded."
                        },
                        {
                          "name": "Unavailable",
                          "value": "Unavailable",
                          "description": "Resource is not functioning as expected."
                        },
                        {
                          "name": "Unknown",
                          "value": "Unknown",
                          "description": "Resource state is unknown."
                        }
                      ]
                    },
                    "readOnly": true
                  }
                },
                "required": [
                  "authorizationPolicies"
                ]
              },
              "extendedLocation": {
                "description": "Edge location of the resource.",
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the extended location."
                  },
                  "type": {
                    "description": "Type of ExtendedLocation.",
                    "type": "string",
                    "enum": [
                      "CustomLocation"
                    ],
                    "x-ms-enum": {
                      "name": "ExtendedLocationType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "CustomLocation",
                          "value": "CustomLocation",
                          "description": "CustomLocation type"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "name",
                  "type"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "BrokerDiagnostics": {
      "type": "object",
      "description": "Broker Diagnostic Setting properties",
      "properties": {
        "logs": {
          "description": "Diagnostic log settings for the resource.",
          "type": "object",
          "properties": {
            "level": {
              "type": "string",
              "description": "The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.",
              "default": "info"
            }
          }
        },
        "metrics": {
          "description": "The metrics settings for the resource.",
          "type": "object",
          "properties": {
            "prometheusPort": {
              "type": "integer",
              "format": "int32",
              "description": "The prometheus port to expose the metrics.",
              "default": 9600,
              "minimum": 0,
              "maximum": 65535
            }
          }
        },
        "selfCheck": {
          "description": "The self check properties.",
          "type": "object",
          "properties": {
            "mode": {
              "type": "string",
              "description": "The toggle to enable/disable self check.",
              "default": "Enabled",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "OperationalMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled",
                    "description": "Enabled is equivalent to True"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "Disabled is equivalent to False."
                  }
                ]
              }
            },
            "intervalSeconds": {
              "type": "integer",
              "format": "int32",
              "description": "The self check interval.",
              "default": 30,
              "minimum": 30,
              "maximum": 300
            },
            "timeoutSeconds": {
              "type": "integer",
              "format": "int32",
              "description": "The timeout for self check.",
              "default": 15,
              "minimum": 5,
              "maximum": 120
            }
          }
        },
        "traces": {
          "description": "The trace properties.",
          "type": "object",
          "properties": {
            "mode": {
              "type": "string",
              "description": "The toggle to enable/disable traces.",
              "default": "Enabled",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "OperationalMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled",
                    "description": "Enabled is equivalent to True"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "Disabled is equivalent to False."
                  }
                ]
              }
            },
            "cacheSizeMegabytes": {
              "type": "integer",
              "format": "int32",
              "description": "The cache size in megabytes.",
              "default": 16,
              "minimum": 1,
              "maximum": 128
            },
            "selfTracing": {
              "description": "The self tracing properties.",
              "type": "object",
              "properties": {
                "mode": {
                  "type": "string",
                  "description": "The toggle to enable/disable self tracing.",
                  "default": "Enabled",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "OperationalMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled",
                        "description": "Enabled is equivalent to True"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled",
                        "description": "Disabled is equivalent to False."
                      }
                    ]
                  }
                },
                "intervalSeconds": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The self tracing interval.",
                  "default": 30,
                  "minimum": 1,
                  "maximum": 300
                }
              }
            },
            "spanChannelCapacity": {
              "type": "integer",
              "format": "int32",
              "description": "The span channel capacity.",
              "default": 1000,
              "minimum": 1000,
              "maximum": 100000
            }
          }
        }
      }
    },
    "BrokerListenerProperties": {
      "type": "object",
      "description": "Defines a Broker listener. A listener is a collection of ports on which the broker accepts connections from clients.",
      "properties": {
        "serviceName": {
          "type": "string",
          "description": "Kubernetes Service name of this listener."
        },
        "ports": {
          "type": "array",
          "description": "Ports on which this listener accepts client connections.",
          "items": {
            "type": "object",
            "description": "Defines a TCP port on which a `BrokerListener` listens.",
            "properties": {
              "authenticationRef": {
                "type": "string",
                "description": "Reference to client authentication settings. Omit to disable authentication."
              },
              "authorizationRef": {
                "type": "string",
                "description": "Reference to client authorization settings. Omit to disable authorization."
              },
              "nodePort": {
                "type": "integer",
                "format": "int32",
                "description": "Kubernetes node port. Only relevant when this port is associated with a `NodePort` listener.",
                "minimum": 0,
                "maximum": 65535
              },
              "port": {
                "type": "integer",
                "format": "int32",
                "description": "TCP port for accepting client connections.",
                "minimum": 0,
                "maximum": 65535
              },
              "protocol": {
                "type": "string",
                "description": "Protocol to use for client connections.",
                "default": "Mqtt",
                "enum": [
                  "Mqtt",
                  "WebSockets"
                ],
                "x-ms-enum": {
                  "name": "BrokerProtocolType",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Mqtt",
                      "value": "Mqtt",
                      "description": "protocol broker"
                    },
                    {
                      "name": "WebSockets",
                      "value": "WebSockets",
                      "description": "protocol websocket"
                    }
                  ]
                }
              },
              "tls": {
                "description": "TLS server certificate settings for this port. Omit to disable TLS.",
                "type": "object",
                "properties": {
                  "mode": {
                    "description": "Mode of TLS server certificate management.",
                    "type": "string",
                    "enum": [
                      "Automatic",
                      "Manual"
                    ],
                    "x-ms-enum": {
                      "name": "TlsCertMethodMode",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Automatic",
                          "value": "Automatic",
                          "description": "Automatic TLS server certificate configuration."
                        },
                        {
                          "name": "Manual",
                          "value": "Manual",
                          "description": "Manual TLS server certificate configuration."
                        }
                      ]
                    }
                  },
                  "certManagerCertificateSpec": {
                    "description": "Option 1 - Automatic TLS server certificate management with cert-manager.",
                    "type": "object",
                    "properties": {
                      "duration": {
                        "type": "string",
                        "description": "Lifetime of certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."
                      },
                      "secretName": {
                        "type": "string",
                        "description": "Secret for storing server certificate. Any existing data will be overwritten. This is a reference to the secret through an identifying name, not the secret itself."
                      },
                      "renewBefore": {
                        "type": "string",
                        "description": "When to begin renewing certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."
                      },
                      "issuerRef": {
                        "description": "cert-manager issuerRef.",
                        "type": "object",
                        "properties": {
                          "group": {
                            "type": "string",
                            "description": "group of issuer.",
                            "default": "cert-manager.io"
                          },
                          "kind": {
                            "description": "kind of issuer (Issuer or ClusterIssuer).",
                            "type": "string",
                            "enum": [
                              "Issuer",
                              "ClusterIssuer"
                            ],
                            "x-ms-enum": {
                              "name": "CertManagerIssuerKind",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Issuer",
                                  "value": "Issuer",
                                  "description": "Issuer kind."
                                },
                                {
                                  "name": "ClusterIssuer",
                                  "value": "ClusterIssuer",
                                  "description": "ClusterIssuer kind."
                                }
                              ]
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "name of issuer."
                          }
                        },
                        "required": [
                          "group",
                          "kind",
                          "name"
                        ]
                      },
                      "privateKey": {
                        "description": "Type of certificate private key.",
                        "type": "object",
                        "properties": {
                          "algorithm": {
                            "description": "algorithm for private key.",
                            "type": "string",
                            "enum": [
                              "Ec256",
                              "Ec384",
                              "Ec521",
                              "Ed25519",
                              "Rsa2048",
                              "Rsa4096",
                              "Rsa8192"
                            ],
                            "x-ms-enum": {
                              "name": "PrivateKeyAlgorithm",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Ec256",
                                  "value": "Ec256",
                                  "description": "Algorithm - ec256."
                                },
                                {
                                  "name": "Ec384",
                                  "value": "Ec384",
                                  "description": "Algorithm - ec384."
                                },
                                {
                                  "name": "Ec521",
                                  "value": "Ec521",
                                  "description": "Algorithm - ec521."
                                },
                                {
                                  "name": "Ed25519",
                                  "value": "Ed25519",
                                  "description": "Algorithm - ed25519."
                                },
                                {
                                  "name": "Rsa2048",
                                  "value": "Rsa2048",
                                  "description": "Algorithm - rsa2048."
                                },
                                {
                                  "name": "Rsa4096",
                                  "value": "Rsa4096",
                                  "description": "Algorithm - rsa4096."
                                },
                                {
                                  "name": "Rsa8192",
                                  "value": "Rsa8192",
                                  "description": "Algorithm - rsa8192."
                                }
                              ]
                            }
                          },
                          "rotationPolicy": {
                            "description": "cert-manager private key rotationPolicy.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "Never"
                            ],
                            "x-ms-enum": {
                              "name": "PrivateKeyRotationPolicy",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Always",
                                  "value": "Always",
                                  "description": "Rotation Policy - Always."
                                },
                                {
                                  "name": "Never",
                                  "value": "Never",
                                  "description": "Rotation Policy - Never."
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "algorithm",
                          "rotationPolicy"
                        ]
                      },
                      "san": {
                        "description": "Additional Subject Alternative Names (SANs) to include in the certificate.",
                        "type": "object",
                        "properties": {
                          "dns": {
                            "type": "array",
                            "description": "DNS SANs.",
                            "default": [],
                            "items": {
                              "type": "string"
                            }
                          },
                          "ip": {
                            "type": "array",
                            "description": "IP address SANs.",
                            "default": [],
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "dns",
                          "ip"
                        ]
                      }
                    },
                    "required": [
                      "issuerRef"
                    ]
                  },
                  "manual": {
                    "description": "Option 2 - Manual TLS server certificate management through a defined secret.",
                    "type": "object",
                    "properties": {
                      "secretRef": {
                        "type": "string",
                        "description": "Kubernetes secret containing an X.509 client certificate. This is a reference to the secret through an identifying name, not the secret itself."
                      }
                    },
                    "required": [
                      "secretRef"
                    ]
                  }
                },
                "required": [
                  "mode"
                ]
              }
            },
            "required": [
              "port"
            ]
          },
          "x-ms-identifiers": [
            "port"
          ]
        },
        "serviceType": {
          "type": "string",
          "description": "Kubernetes Service type of this listener.",
          "default": "ClusterIp",
          "enum": [
            "ClusterIp",
            "LoadBalancer",
            "NodePort"
          ],
          "x-ms-enum": {
            "name": "ServiceType",
            "modelAsString": true,
            "values": [
              {
                "name": "ClusterIp",
                "value": "ClusterIp",
                "description": "Cluster IP Service."
              },
              {
                "name": "LoadBalancer",
                "value": "LoadBalancer",
                "description": "Load Balancer Service."
              },
              {
                "name": "NodePort",
                "value": "NodePort",
                "description": "Node Port Service."
              }
            ]
          }
        },
        "provisioningState": {
          "description": "The status of the last operation.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Updating",
            "Deleting",
            "Accepted"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Provisioning",
                "value": "Provisioning",
                "description": "Resource is getting provisioned."
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "Resource is Updating."
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "Resource is Deleting."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "Resource has been Accepted."
              }
            ]
          }
        },
        "healthState": {
          "type": "string",
          "description": "The health state of the resource.",
          "default": "Unknown",
          "enum": [
            "Available",
            "Degraded",
            "Unavailable",
            "Unknown"
          ],
          "x-ms-enum": {
            "name": "ResourceHealthState",
            "modelAsString": true,
            "values": [
              {
                "name": "Available",
                "value": "Available",
                "description": "Resource is Available and functioning as expected."
              },
              {
                "name": "Degraded",
                "value": "Degraded",
                "description": "Resource health is degraded."
              },
              {
                "name": "Unavailable",
                "value": "Unavailable",
                "description": "Resource is not functioning as expected."
              },
              {
                "name": "Unknown",
                "value": "Unknown",
                "description": "Resource state is unknown."
              }
            ]
          },
          "readOnly": true
        }
      },
      "required": [
        "ports"
      ]
    },
    "BrokerListenerResource": {
      "type": "object",
      "description": "Instance broker resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "serviceName": {
              "type": "string",
              "description": "Kubernetes Service name of this listener."
            },
            "ports": {
              "type": "array",
              "description": "Ports on which this listener accepts client connections.",
              "items": {
                "type": "object",
                "description": "Defines a TCP port on which a `BrokerListener` listens.",
                "properties": {
                  "authenticationRef": {
                    "type": "string",
                    "description": "Reference to client authentication settings. Omit to disable authentication."
                  },
                  "authorizationRef": {
                    "type": "string",
                    "description": "Reference to client authorization settings. Omit to disable authorization."
                  },
                  "nodePort": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Kubernetes node port. Only relevant when this port is associated with a `NodePort` listener.",
                    "minimum": 0,
                    "maximum": 65535
                  },
                  "port": {
                    "type": "integer",
                    "format": "int32",
                    "description": "TCP port for accepting client connections.",
                    "minimum": 0,
                    "maximum": 65535
                  },
                  "protocol": {
                    "type": "string",
                    "description": "Protocol to use for client connections.",
                    "default": "Mqtt",
                    "enum": [
                      "Mqtt",
                      "WebSockets"
                    ],
                    "x-ms-enum": {
                      "name": "BrokerProtocolType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Mqtt",
                          "value": "Mqtt",
                          "description": "protocol broker"
                        },
                        {
                          "name": "WebSockets",
                          "value": "WebSockets",
                          "description": "protocol websocket"
                        }
                      ]
                    }
                  },
                  "tls": {
                    "description": "TLS server certificate settings for this port. Omit to disable TLS.",
                    "type": "object",
                    "properties": {
                      "mode": {
                        "description": "Mode of TLS server certificate management.",
                        "type": "string",
                        "enum": [
                          "Automatic",
                          "Manual"
                        ],
                        "x-ms-enum": {
                          "name": "TlsCertMethodMode",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Automatic",
                              "value": "Automatic",
                              "description": "Automatic TLS server certificate configuration."
                            },
                            {
                              "name": "Manual",
                              "value": "Manual",
                              "description": "Manual TLS server certificate configuration."
                            }
                          ]
                        }
                      },
                      "certManagerCertificateSpec": {
                        "description": "Option 1 - Automatic TLS server certificate management with cert-manager.",
                        "type": "object",
                        "properties": {
                          "duration": {
                            "type": "string",
                            "description": "Lifetime of certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."
                          },
                          "secretName": {
                            "type": "string",
                            "description": "Secret for storing server certificate. Any existing data will be overwritten. This is a reference to the secret through an identifying name, not the secret itself."
                          },
                          "renewBefore": {
                            "type": "string",
                            "description": "When to begin renewing certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."
                          },
                          "issuerRef": {
                            "description": "cert-manager issuerRef.",
                            "type": "object",
                            "properties": {
                              "group": {
                                "type": "string",
                                "description": "group of issuer.",
                                "default": "cert-manager.io"
                              },
                              "kind": {
                                "description": "kind of issuer (Issuer or ClusterIssuer).",
                                "type": "string",
                                "enum": [
                                  "Issuer",
                                  "ClusterIssuer"
                                ],
                                "x-ms-enum": {
                                  "name": "CertManagerIssuerKind",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Issuer",
                                      "value": "Issuer",
                                      "description": "Issuer kind."
                                    },
                                    {
                                      "name": "ClusterIssuer",
                                      "value": "ClusterIssuer",
                                      "description": "ClusterIssuer kind."
                                    }
                                  ]
                                }
                              },
                              "name": {
                                "type": "string",
                                "description": "name of issuer."
                              }
                            },
                            "required": [
                              "group",
                              "kind",
                              "name"
                            ]
                          },
                          "privateKey": {
                            "description": "Type of certificate private key.",
                            "type": "object",
                            "properties": {
                              "algorithm": {
                                "description": "algorithm for private key.",
                                "type": "string",
                                "enum": [
                                  "Ec256",
                                  "Ec384",
                                  "Ec521",
                                  "Ed25519",
                                  "Rsa2048",
                                  "Rsa4096",
                                  "Rsa8192"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateKeyAlgorithm",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Ec256",
                                      "value": "Ec256",
                                      "description": "Algorithm - ec256."
                                    },
                                    {
                                      "name": "Ec384",
                                      "value": "Ec384",
                                      "description": "Algorithm - ec384."
                                    },
                                    {
                                      "name": "Ec521",
                                      "value": "Ec521",
                                      "description": "Algorithm - ec521."
                                    },
                                    {
                                      "name": "Ed25519",
                                      "value": "Ed25519",
                                      "description": "Algorithm - ed25519."
                                    },
                                    {
                                      "name": "Rsa2048",
                                      "value": "Rsa2048",
                                      "description": "Algorithm - rsa2048."
                                    },
                                    {
                                      "name": "Rsa4096",
                                      "value": "Rsa4096",
                                      "description": "Algorithm - rsa4096."
                                    },
                                    {
                                      "name": "Rsa8192",
                                      "value": "Rsa8192",
                                      "description": "Algorithm - rsa8192."
                                    }
                                  ]
                                }
                              },
                              "rotationPolicy": {
                                "description": "cert-manager private key rotationPolicy.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "Never"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateKeyRotationPolicy",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Always",
                                      "value": "Always",
                                      "description": "Rotation Policy - Always."
                                    },
                                    {
                                      "name": "Never",
                                      "value": "Never",
                                      "description": "Rotation Policy - Never."
                                    }
                                  ]
                                }
                              }
                            },
                            "required": [
                              "algorithm",
                              "rotationPolicy"
                            ]
                          },
                          "san": {
                            "description": "Additional Subject Alternative Names (SANs) to include in the certificate.",
                            "type": "object",
                            "properties": {
                              "dns": {
                                "type": "array",
                                "description": "DNS SANs.",
                                "default": [],
                                "items": {
                                  "type": "string"
                                }
                              },
                              "ip": {
                                "type": "array",
                                "description": "IP address SANs.",
                                "default": [],
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "required": [
                              "dns",
                              "ip"
                            ]
                          }
                        },
                        "required": [
                          "issuerRef"
                        ]
                      },
                      "manual": {
                        "description": "Option 2 - Manual TLS server certificate management through a defined secret.",
                        "type": "object",
                        "properties": {
                          "secretRef": {
                            "type": "string",
                            "description": "Kubernetes secret containing an X.509 client certificate. This is a reference to the secret through an identifying name, not the secret itself."
                          }
                        },
                        "required": [
                          "secretRef"
                        ]
                      }
                    },
                    "required": [
                      "mode"
                    ]
                  }
                },
                "required": [
                  "port"
                ]
              },
              "x-ms-identifiers": [
                "port"
              ]
            },
            "serviceType": {
              "type": "string",
              "description": "Kubernetes Service type of this listener.",
              "default": "ClusterIp",
              "enum": [
                "ClusterIp",
                "LoadBalancer",
                "NodePort"
              ],
              "x-ms-enum": {
                "name": "ServiceType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "ClusterIp",
                    "value": "ClusterIp",
                    "description": "Cluster IP Service."
                  },
                  {
                    "name": "LoadBalancer",
                    "value": "LoadBalancer",
                    "description": "Load Balancer Service."
                  },
                  {
                    "name": "NodePort",
                    "value": "NodePort",
                    "description": "Node Port Service."
                  }
                ]
              }
            },
            "provisioningState": {
              "description": "The status of the last operation.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "Resource is getting provisioned."
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "Resource is Updating."
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "Resource is Deleting."
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "Resource has been Accepted."
                  }
                ]
              }
            },
            "healthState": {
              "type": "string",
              "description": "The health state of the resource.",
              "default": "Unknown",
              "enum": [
                "Available",
                "Degraded",
                "Unavailable",
                "Unknown"
              ],
              "x-ms-enum": {
                "name": "ResourceHealthState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Available",
                    "value": "Available",
                    "description": "Resource is Available and functioning as expected."
                  },
                  {
                    "name": "Degraded",
                    "value": "Degraded",
                    "description": "Resource health is degraded."
                  },
                  {
                    "name": "Unavailable",
                    "value": "Unavailable",
                    "description": "Resource is not functioning as expected."
                  },
                  {
                    "name": "Unknown",
                    "value": "Unknown",
                    "description": "Resource state is unknown."
                  }
                ]
              },
              "readOnly": true
            }
          },
          "required": [
            "ports"
          ]
        },
        "extendedLocation": {
          "description": "Edge location of the resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the extended location."
            },
            "type": {
              "description": "Type of ExtendedLocation.",
              "type": "string",
              "enum": [
                "CustomLocation"
              ],
              "x-ms-enum": {
                "name": "ExtendedLocationType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "CustomLocation",
                    "value": "CustomLocation",
                    "description": "CustomLocation type"
                  }
                ]
              }
            }
          },
          "required": [
            "name",
            "type"
          ]
        }
      }
    },
    "BrokerListenerResourceListResult": {
      "type": "object",
      "description": "The response of a BrokerListenerResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The BrokerListenerResource items on this page",
          "items": {
            "type": "object",
            "description": "Instance broker resource",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "serviceName": {
                    "type": "string",
                    "description": "Kubernetes Service name of this listener."
                  },
                  "ports": {
                    "type": "array",
                    "description": "Ports on which this listener accepts client connections.",
                    "items": {
                      "type": "object",
                      "description": "Defines a TCP port on which a `BrokerListener` listens.",
                      "properties": {
                        "authenticationRef": {
                          "type": "string",
                          "description": "Reference to client authentication settings. Omit to disable authentication."
                        },
                        "authorizationRef": {
                          "type": "string",
                          "description": "Reference to client authorization settings. Omit to disable authorization."
                        },
                        "nodePort": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Kubernetes node port. Only relevant when this port is associated with a `NodePort` listener.",
                          "minimum": 0,
                          "maximum": 65535
                        },
                        "port": {
                          "type": "integer",
                          "format": "int32",
                          "description": "TCP port for accepting client connections.",
                          "minimum": 0,
                          "maximum": 65535
                        },
                        "protocol": {
                          "type": "string",
                          "description": "Protocol to use for client connections.",
                          "default": "Mqtt",
                          "enum": [
                            "Mqtt",
                            "WebSockets"
                          ],
                          "x-ms-enum": {
                            "name": "BrokerProtocolType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Mqtt",
                                "value": "Mqtt",
                                "description": "protocol broker"
                              },
                              {
                                "name": "WebSockets",
                                "value": "WebSockets",
                                "description": "protocol websocket"
                              }
                            ]
                          }
                        },
                        "tls": {
                          "description": "TLS server certificate settings for this port. Omit to disable TLS.",
                          "type": "object",
                          "properties": {
                            "mode": {
                              "description": "Mode of TLS server certificate management.",
                              "type": "string",
                              "enum": [
                                "Automatic",
                                "Manual"
                              ],
                              "x-ms-enum": {
                                "name": "TlsCertMethodMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Automatic",
                                    "value": "Automatic",
                                    "description": "Automatic TLS server certificate configuration."
                                  },
                                  {
                                    "name": "Manual",
                                    "value": "Manual",
                                    "description": "Manual TLS server certificate configuration."
                                  }
                                ]
                              }
                            },
                            "certManagerCertificateSpec": {
                              "description": "Option 1 - Automatic TLS server certificate management with cert-manager.",
                              "type": "object",
                              "properties": {
                                "duration": {
                                  "type": "string",
                                  "description": "Lifetime of certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."
                                },
                                "secretName": {
                                  "type": "string",
                                  "description": "Secret for storing server certificate. Any existing data will be overwritten. This is a reference to the secret through an identifying name, not the secret itself."
                                },
                                "renewBefore": {
                                  "type": "string",
                                  "description": "When to begin renewing certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."
                                },
                                "issuerRef": {
                                  "description": "cert-manager issuerRef.",
                                  "type": "object",
                                  "properties": {
                                    "group": {
                                      "type": "string",
                                      "description": "group of issuer.",
                                      "default": "cert-manager.io"
                                    },
                                    "kind": {
                                      "description": "kind of issuer (Issuer or ClusterIssuer).",
                                      "type": "string",
                                      "enum": [
                                        "Issuer",
                                        "ClusterIssuer"
                                      ],
                                      "x-ms-enum": {
                                        "name": "CertManagerIssuerKind",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Issuer",
                                            "value": "Issuer",
                                            "description": "Issuer kind."
                                          },
                                          {
                                            "name": "ClusterIssuer",
                                            "value": "ClusterIssuer",
                                            "description": "ClusterIssuer kind."
                                          }
                                        ]
                                      }
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "name of issuer."
                                    }
                                  },
                                  "required": [
                                    "group",
                                    "kind",
                                    "name"
                                  ]
                                },
                                "privateKey": {
                                  "description": "Type of certificate private key.",
                                  "type": "object",
                                  "properties": {
                                    "algorithm": {
                                      "description": "algorithm for private key.",
                                      "type": "string",
                                      "enum": [
                                        "Ec256",
                                        "Ec384",
                                        "Ec521",
                                        "Ed25519",
                                        "Rsa2048",
                                        "Rsa4096",
                                        "Rsa8192"
                                      ],
                                      "x-ms-enum": {
                                        "name": "PrivateKeyAlgorithm",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Ec256",
                                            "value": "Ec256",
                                            "description": "Algorithm - ec256."
                                          },
                                          {
                                            "name": "Ec384",
                                            "value": "Ec384",
                                            "description": "Algorithm - ec384."
                                          },
                                          {
                                            "name": "Ec521",
                                            "value": "Ec521",
                                            "description": "Algorithm - ec521."
                                          },
                                          {
                                            "name": "Ed25519",
                                            "value": "Ed25519",
                                            "description": "Algorithm - ed25519."
                                          },
                                          {
                                            "name": "Rsa2048",
                                            "value": "Rsa2048",
                                            "description": "Algorithm - rsa2048."
                                          },
                                          {
                                            "name": "Rsa4096",
                                            "value": "Rsa4096",
                                            "description": "Algorithm - rsa4096."
                                          },
                                          {
                                            "name": "Rsa8192",
                                            "value": "Rsa8192",
                                            "description": "Algorithm - rsa8192."
                                          }
                                        ]
                                      }
                                    },
                                    "rotationPolicy": {
                                      "description": "cert-manager private key rotationPolicy.",
                                      "type": "string",
                                      "enum": [
                                        "Always",
                                        "Never"
                                      ],
                                      "x-ms-enum": {
                                        "name": "PrivateKeyRotationPolicy",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Always",
                                            "value": "Always",
                                            "description": "Rotation Policy - Always."
                                          },
                                          {
                                            "name": "Never",
                                            "value": "Never",
                                            "description": "Rotation Policy - Never."
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  "required": [
                                    "algorithm",
                                    "rotationPolicy"
                                  ]
                                },
                                "san": {
                                  "description": "Additional Subject Alternative Names (SANs) to include in the certificate.",
                                  "type": "object",
                                  "properties": {
                                    "dns": {
                                      "type": "array",
                                      "description": "DNS SANs.",
                                      "default": [],
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "ip": {
                                      "type": "array",
                                      "description": "IP address SANs.",
                                      "default": [],
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "dns",
                                    "ip"
                                  ]
                                }
                              },
                              "required": [
                                "issuerRef"
                              ]
                            },
                            "manual": {
                              "description": "Option 2 - Manual TLS server certificate management through a defined secret.",
                              "type": "object",
                              "properties": {
                                "secretRef": {
                                  "type": "string",
                                  "description": "Kubernetes secret containing an X.509 client certificate. This is a reference to the secret through an identifying name, not the secret itself."
                                }
                              },
                              "required": [
                                "secretRef"
                              ]
                            }
                          },
                          "required": [
                            "mode"
                          ]
                        }
                      },
                      "required": [
                        "port"
                      ]
                    },
                    "x-ms-identifiers": [
                      "port"
                    ]
                  },
                  "serviceType": {
                    "type": "string",
                    "description": "Kubernetes Service type of this listener.",
                    "default": "ClusterIp",
                    "enum": [
                      "ClusterIp",
                      "LoadBalancer",
                      "NodePort"
                    ],
                    "x-ms-enum": {
                      "name": "ServiceType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "ClusterIp",
                          "value": "ClusterIp",
                          "description": "Cluster IP Service."
                        },
                        {
                          "name": "LoadBalancer",
                          "value": "LoadBalancer",
                          "description": "Load Balancer Service."
                        },
                        {
                          "name": "NodePort",
                          "value": "NodePort",
                          "description": "Node Port Service."
                        }
                      ]
                    }
                  },
                  "provisioningState": {
                    "description": "The status of the last operation.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Provisioning",
                      "Updating",
                      "Deleting",
                      "Accepted"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Provisioning",
                          "value": "Provisioning",
                          "description": "Resource is getting provisioned."
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "Resource is Updating."
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "Resource is Deleting."
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "Resource has been Accepted."
                        }
                      ]
                    }
                  },
                  "healthState": {
                    "type": "string",
                    "description": "The health state of the resource.",
                    "default": "Unknown",
                    "enum": [
                      "Available",
                      "Degraded",
                      "Unavailable",
                      "Unknown"
                    ],
                    "x-ms-enum": {
                      "name": "ResourceHealthState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Available",
                          "value": "Available",
                          "description": "Resource is Available and functioning as expected."
                        },
                        {
                          "name": "Degraded",
                          "value": "Degraded",
                          "description": "Resource health is degraded."
                        },
                        {
                          "name": "Unavailable",
                          "value": "Unavailable",
                          "description": "Resource is not functioning as expected."
                        },
                        {
                          "name": "Unknown",
                          "value": "Unknown",
                          "description": "Resource state is unknown."
                        }
                      ]
                    },
                    "readOnly": true
                  }
                },
                "required": [
                  "ports"
                ]
              },
              "extendedLocation": {
                "description": "Edge location of the resource.",
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the extended location."
                  },
                  "type": {
                    "description": "Type of ExtendedLocation.",
                    "type": "string",
                    "enum": [
                      "CustomLocation"
                    ],
                    "x-ms-enum": {
                      "name": "ExtendedLocationType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "CustomLocation",
                          "value": "CustomLocation",
                          "description": "CustomLocation type"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "name",
                  "type"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "BrokerMemoryProfile": {
      "type": "string",
      "description": "The memory profile settings of the Broker",
      "enum": [
        "Tiny",
        "Low",
        "Medium",
        "High"
      ],
      "x-ms-enum": {
        "name": "BrokerMemoryProfile",
        "modelAsString": true,
        "values": [
          {
            "name": "Tiny",
            "value": "Tiny",
            "description": "Tiny memory profile."
          },
          {
            "name": "Low",
            "value": "Low",
            "description": "Low memory profile."
          },
          {
            "name": "Medium",
            "value": "Medium",
            "description": "Medium memory profile."
          },
          {
            "name": "High",
            "value": "High",
            "description": "High memory profile."
          }
        ]
      }
    },
    "BrokerPersistence": {
      "type": "object",
      "description": "Disk persistence configuration.\n\nWhen persistence is enabled, certain items (non-performance-critical data) selected for persistence will reside only on disk. Below are the affected items: \n\n- Retained messages will be stored on disk only. \n- WILL messages will be stored on disk only. \n- DSS key/value pairs will be stored on disk only, except for performance-critical items like timed locks, which remain in both disk and memory for improved performance.\n\nOptional. Everything is in-memory if not set. \nNote: if configured, all MQTT session states are written to disk.",
      "properties": {
        "maxSize": {
          "type": "string",
          "description": "The max size of the message buffer on disk. If a PVC template is specified using persistentVolumeClaimSpec Then this size is used as the request and limit sizes of that template. If a PVC template isn't specified Then local-path provisioner is requested with this size limit. Required.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "persistentVolumeClaimSpec": {
          "description": "Use the specified persistent volume claim template to mount a persistent volume. Same object as in diskBackedMessageBuffer, but with a limitation that access modes field must be set to `ReadWriteOncePod`.\n\nIf unset, a default PVC with default properties will be used. Among other things this PVC will use the cluster default storage class, which may or may not be using a local path provisioner. User is opting in to sub-optimal behavior if they leave this unset or set it without the storage class field, and their cluster default is not a local path class.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "object",
          "properties": {
            "volumeName": {
              "type": "string",
              "description": "VolumeName is the binding reference to the PersistentVolume backing this claim."
            },
            "volumeMode": {
              "type": "string",
              "description": "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature."
            },
            "storageClassName": {
              "type": "string",
              "description": "Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"
            },
            "accessModes": {
              "type": "array",
              "description": "AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
              "items": {
                "type": "string"
              }
            },
            "dataSource": {
              "description": "This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.",
              "type": "object",
              "properties": {
                "apiGroup": {
                  "type": "string",
                  "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                },
                "kind": {
                  "type": "string",
                  "description": "Kind is the type of resource being referenced"
                },
                "name": {
                  "type": "string",
                  "description": "Name is the name of resource being referenced"
                }
              },
              "required": [
                "kind",
                "name"
              ]
            },
            "dataSourceRef": {
              "description": "Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.",
              "type": "object",
              "properties": {
                "apiGroup": {
                  "type": "string",
                  "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                },
                "kind": {
                  "type": "string",
                  "description": "Kind is the type of resource being referenced"
                },
                "name": {
                  "type": "string",
                  "description": "Name is the name of resource being referenced"
                },
                "namespace": {
                  "type": "string",
                  "description": "Namespace is the namespace of the resource being referenced. This field is required when the resource has a namespace."
                }
              },
              "required": [
                "kind",
                "name"
              ]
            },
            "resources": {
              "description": "Resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
              "type": "object",
              "properties": {
                "limits": {
                  "type": "object",
                  "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "requests": {
                  "type": "object",
                  "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "claims": {
                  "type": "array",
                  "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.\n\nThis is an alpha field and requires enabling the DynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                  "items": {
                    "type": "object",
                    "description": "VolumeClaimResourceRequirementsClaims properties.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the resource. This must match the name of a resource in spec.resourceClaims."
                      }
                    },
                    "required": [
                      "name"
                    ]
                  },
                  "x-ms-identifiers": []
                }
              }
            },
            "selector": {
              "description": "A label query over volumes to consider for binding.",
              "type": "object",
              "properties": {
                "matchExpressions": {
                  "type": "array",
                  "description": "MatchExpressions is a list of label selector requirements. The requirements are ANDed.",
                  "items": {
                    "type": "object",
                    "description": "VolumeClaimSpecSelectorMatchExpressions properties",
                    "properties": {
                      "key": {
                        "type": "string",
                        "description": "key is the label key that the selector applies to."
                      },
                      "operator": {
                        "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                        "type": "string",
                        "enum": [
                          "In",
                          "NotIn",
                          "Exists",
                          "DoesNotExist"
                        ],
                        "x-ms-enum": {
                          "name": "OperatorValues",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "In",
                              "value": "In",
                              "description": "In operator."
                            },
                            {
                              "name": "NotIn",
                              "value": "NotIn",
                              "description": "NotIn operator."
                            },
                            {
                              "name": "Exists",
                              "value": "Exists",
                              "description": "Exists operator."
                            },
                            {
                              "name": "DoesNotExist",
                              "value": "DoesNotExist",
                              "description": "DoesNotExist operator."
                            }
                          ]
                        }
                      },
                      "values": {
                        "type": "array",
                        "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "key",
                      "operator"
                    ]
                  },
                  "x-ms-identifiers": []
                },
                "matchLabels": {
                  "type": "object",
                  "description": "MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "retain": {
          "description": "Controls which topic's retained messages should be persisted to disk.",
          "type": "object",
          "properties": {
            "mode": {
              "description": "'All' to persist all retain messages, 'None' to not persist any, 'Custom' to persist only the specified topics.",
              "type": "string",
              "enum": [
                "All",
                "None",
                "Custom"
              ],
              "x-ms-enum": {
                "name": "BrokerPersistencePolicyMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "All",
                    "value": "All",
                    "description": "Policy mode for All."
                  },
                  {
                    "name": "None",
                    "value": "None",
                    "description": "Policy mode for None."
                  },
                  {
                    "name": "Custom",
                    "value": "Custom",
                    "description": "Indicates that the policy is a custom policy."
                  }
                ]
              }
            }
          },
          "discriminator": "mode",
          "required": [
            "mode"
          ]
        },
        "stateStore": {
          "description": "Controls which keys should be persisted to disk for the state store.",
          "type": "object",
          "properties": {
            "mode": {
              "description": "'All' to persist all keys, 'None' to not persist any, 'Custom' to persist only the specified keys.",
              "type": "string",
              "enum": [
                "All",
                "None",
                "Custom"
              ],
              "x-ms-enum": {
                "name": "BrokerPersistencePolicyMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "All",
                    "value": "All",
                    "description": "Policy mode for All."
                  },
                  {
                    "name": "None",
                    "value": "None",
                    "description": "Policy mode for None."
                  },
                  {
                    "name": "Custom",
                    "value": "Custom",
                    "description": "Indicates that the policy is a custom policy."
                  }
                ]
              }
            }
          },
          "discriminator": "mode",
          "required": [
            "mode"
          ]
        },
        "subscriberQueue": {
          "description": "Controls which subscriber message queues should be persisted to disk. Important: to facilitate reconnection, session state metadata are ALWAYS written to disk if any persistence setting is specified, even if this section isn't set.",
          "type": "object",
          "properties": {
            "mode": {
              "description": "'All' to persist all subscriber queues, 'None' to not persist any, 'Custom' to persist only the specified queues.",
              "type": "string",
              "enum": [
                "All",
                "None",
                "Custom"
              ],
              "x-ms-enum": {
                "name": "BrokerPersistencePolicyMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "All",
                    "value": "All",
                    "description": "Policy mode for All."
                  },
                  {
                    "name": "None",
                    "value": "None",
                    "description": "Policy mode for None."
                  },
                  {
                    "name": "Custom",
                    "value": "Custom",
                    "description": "Indicates that the policy is a custom policy."
                  }
                ]
              }
            }
          },
          "discriminator": "mode",
          "required": [
            "mode"
          ]
        },
        "encryption": {
          "description": "Controls settings related to encryption of the persistence database. Optional, defaults to enabling encryption.",
          "type": "object",
          "properties": {
            "mode": {
              "type": "string",
              "description": "Mode properties",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "OperationalMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled",
                    "description": "Enabled is equivalent to True"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "Disabled is equivalent to False."
                  }
                ]
              }
            }
          },
          "required": [
            "mode"
          ]
        }
      },
      "required": [
        "maxSize"
      ]
    },
    "BrokerPersistenceEncryption": {
      "type": "object",
      "description": "Broker Persistence Encryption properties.",
      "properties": {
        "mode": {
          "type": "string",
          "description": "Mode properties",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "OperationalMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "Enabled is equivalent to True"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "Disabled is equivalent to False."
              }
            ]
          }
        }
      },
      "required": [
        "mode"
      ]
    },
    "BrokerPersistencePolicyMode": {
      "type": "string",
      "description": "Broker Persistence Policy Mode values.",
      "enum": [
        "All",
        "None",
        "Custom"
      ],
      "x-ms-enum": {
        "name": "BrokerPersistencePolicyMode",
        "modelAsString": true,
        "values": [
          {
            "name": "All",
            "value": "All",
            "description": "Policy mode for All."
          },
          {
            "name": "None",
            "value": "None",
            "description": "Policy mode for None."
          },
          {
            "name": "Custom",
            "value": "Custom",
            "description": "Indicates that the policy is a custom policy."
          }
        ]
      }
    },
    "BrokerProperties": {
      "type": "object",
      "description": "Broker Resource properties",
      "properties": {
        "advanced": {
          "description": "Advanced settings of Broker.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "object",
          "properties": {
            "clients": {
              "description": "Configurations related to All Clients.",
              "type": "object",
              "properties": {
                "maxSessionExpirySeconds": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Upper bound of Session Expiry Interval, in seconds.",
                  "minimum": 1,
                  "maximum": 4294967295
                },
                "maxMessageExpirySeconds": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Upper bound of Message Expiry Interval, in seconds.",
                  "minimum": 1,
                  "maximum": 4294967295
                },
                "maxPacketSizeBytes": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Max message size for a packet in Bytes.",
                  "minimum": 1,
                  "maximum": 268435456
                },
                "subscriberQueueLimit": {
                  "description": "The limit on the number of queued messages for a subscriber.",
                  "type": "object",
                  "properties": {
                    "length": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The maximum length of the queue before messages start getting dropped.",
                      "minimum": 1
                    },
                    "strategy": {
                      "type": "string",
                      "description": "The strategy to use for dropping messages from the queue.",
                      "default": "None",
                      "enum": [
                        "None",
                        "DropOldest"
                      ],
                      "x-ms-enum": {
                        "name": "SubscriberMessageDropStrategy",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "None",
                            "value": "None",
                            "description": "Messages are never dropped."
                          },
                          {
                            "name": "DropOldest",
                            "value": "DropOldest",
                            "description": "The oldest message is dropped."
                          }
                        ]
                      }
                    }
                  }
                },
                "maxReceiveMaximum": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Upper bound of Receive Maximum that a client can request in the CONNECT packet.",
                  "minimum": 1,
                  "maximum": 65535
                },
                "maxKeepAliveSeconds": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Upper bound of a client's Keep Alive, in seconds.",
                  "minimum": 0,
                  "maximum": 65535
                }
              }
            },
            "encryptInternalTraffic": {
              "type": "string",
              "description": "The setting to enable or disable encryption of internal Traffic.",
              "default": "Enabled",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "OperationalMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled",
                    "description": "Enabled is equivalent to True"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "Disabled is equivalent to False."
                  }
                ]
              }
            },
            "internalCerts": {
              "description": "Certificate rotation and private key configuration.",
              "type": "object",
              "properties": {
                "duration": {
                  "type": "string",
                  "description": "Lifetime of certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."
                },
                "renewBefore": {
                  "type": "string",
                  "description": "When to begin renewing certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."
                },
                "privateKey": {
                  "description": "Configuration of certificate private key.",
                  "type": "object",
                  "properties": {
                    "algorithm": {
                      "description": "algorithm for private key.",
                      "type": "string",
                      "enum": [
                        "Ec256",
                        "Ec384",
                        "Ec521",
                        "Ed25519",
                        "Rsa2048",
                        "Rsa4096",
                        "Rsa8192"
                      ],
                      "x-ms-enum": {
                        "name": "PrivateKeyAlgorithm",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Ec256",
                            "value": "Ec256",
                            "description": "Algorithm - ec256."
                          },
                          {
                            "name": "Ec384",
                            "value": "Ec384",
                            "description": "Algorithm - ec384."
                          },
                          {
                            "name": "Ec521",
                            "value": "Ec521",
                            "description": "Algorithm - ec521."
                          },
                          {
                            "name": "Ed25519",
                            "value": "Ed25519",
                            "description": "Algorithm - ed25519."
                          },
                          {
                            "name": "Rsa2048",
                            "value": "Rsa2048",
                            "description": "Algorithm - rsa2048."
                          },
                          {
                            "name": "Rsa4096",
                            "value": "Rsa4096",
                            "description": "Algorithm - rsa4096."
                          },
                          {
                            "name": "Rsa8192",
                            "value": "Rsa8192",
                            "description": "Algorithm - rsa8192."
                          }
                        ]
                      }
                    },
                    "rotationPolicy": {
                      "description": "cert-manager private key rotationPolicy.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "Never"
                      ],
                      "x-ms-enum": {
                        "name": "PrivateKeyRotationPolicy",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Always",
                            "value": "Always",
                            "description": "Rotation Policy - Always."
                          },
                          {
                            "name": "Never",
                            "value": "Never",
                            "description": "Rotation Policy - Never."
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "algorithm",
                    "rotationPolicy"
                  ]
                }
              },
              "required": [
                "duration",
                "renewBefore",
                "privateKey"
              ]
            }
          }
        },
        "cardinality": {
          "description": "The cardinality details of the broker.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "object",
          "properties": {
            "backendChain": {
              "description": "The backend broker desired properties",
              "type": "object",
              "properties": {
                "partitions": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The desired number of physical backend partitions.",
                  "minimum": 1,
                  "maximum": 16
                },
                "redundancyFactor": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The desired numbers of backend replicas (pods) in a physical partition.",
                  "minimum": 1,
                  "maximum": 5
                },
                "workers": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of logical backend workers per replica (pod).",
                  "default": 1,
                  "minimum": 1,
                  "maximum": 16
                }
              },
              "required": [
                "partitions",
                "redundancyFactor"
              ]
            },
            "frontend": {
              "description": "The frontend desired properties",
              "type": "object",
              "properties": {
                "replicas": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The desired number of frontend instances (pods).",
                  "minimum": 1,
                  "maximum": 16
                },
                "workers": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of logical frontend workers per instance (pod).",
                  "default": 2,
                  "minimum": 1,
                  "maximum": 16
                }
              },
              "required": [
                "replicas"
              ]
            }
          },
          "required": [
            "backendChain",
            "frontend"
          ]
        },
        "diagnostics": {
          "description": "Spec defines the desired identities of Broker diagnostics settings.",
          "type": "object",
          "properties": {
            "logs": {
              "description": "Diagnostic log settings for the resource.",
              "type": "object",
              "properties": {
                "level": {
                  "type": "string",
                  "description": "The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.",
                  "default": "info"
                }
              }
            },
            "metrics": {
              "description": "The metrics settings for the resource.",
              "type": "object",
              "properties": {
                "prometheusPort": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The prometheus port to expose the metrics.",
                  "default": 9600,
                  "minimum": 0,
                  "maximum": 65535
                }
              }
            },
            "selfCheck": {
              "description": "The self check properties.",
              "type": "object",
              "properties": {
                "mode": {
                  "type": "string",
                  "description": "The toggle to enable/disable self check.",
                  "default": "Enabled",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "OperationalMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled",
                        "description": "Enabled is equivalent to True"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled",
                        "description": "Disabled is equivalent to False."
                      }
                    ]
                  }
                },
                "intervalSeconds": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The self check interval.",
                  "default": 30,
                  "minimum": 30,
                  "maximum": 300
                },
                "timeoutSeconds": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The timeout for self check.",
                  "default": 15,
                  "minimum": 5,
                  "maximum": 120
                }
              }
            },
            "traces": {
              "description": "The trace properties.",
              "type": "object",
              "properties": {
                "mode": {
                  "type": "string",
                  "description": "The toggle to enable/disable traces.",
                  "default": "Enabled",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "OperationalMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled",
                        "description": "Enabled is equivalent to True"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled",
                        "description": "Disabled is equivalent to False."
                      }
                    ]
                  }
                },
                "cacheSizeMegabytes": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The cache size in megabytes.",
                  "default": 16,
                  "minimum": 1,
                  "maximum": 128
                },
                "selfTracing": {
                  "description": "The self tracing properties.",
                  "type": "object",
                  "properties": {
                    "mode": {
                      "type": "string",
                      "description": "The toggle to enable/disable self tracing.",
                      "default": "Enabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "OperationalMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "Enabled is equivalent to True"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "Disabled is equivalent to False."
                          }
                        ]
                      }
                    },
                    "intervalSeconds": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The self tracing interval.",
                      "default": 30,
                      "minimum": 1,
                      "maximum": 300
                    }
                  }
                },
                "spanChannelCapacity": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The span channel capacity.",
                  "default": 1000,
                  "minimum": 1000,
                  "maximum": 100000
                }
              }
            }
          }
        },
        "diskBackedMessageBuffer": {
          "description": "Settings of Disk Backed Message Buffer.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "object",
          "properties": {
            "maxSize": {
              "type": "string",
              "description": "The max size of the message buffer on disk. If a PVC template is specified using one of ephemeralVolumeClaimSpec or persistentVolumeClaimSpec, then this size is used as the request and limit sizes of that template. If neither ephemeralVolumeClaimSpec nor persistentVolumeClaimSpec are specified, then an emptyDir volume is mounted with this size as its limit. See <https://kubernetes.io/docs/concepts/storage/volumes/#emptydir> for details.",
              "pattern": "^[0-9]+[KMGTPE]$"
            },
            "ephemeralVolumeClaimSpec": {
              "description": "Use the specified persistent volume claim template to mount a \"generic ephemeral volume\" for the message buffer. See <https://kubernetes.io/docs/concepts/storage/ephemeral-volumes/#generic-ephemeral-volumes> for details.",
              "type": "object",
              "properties": {
                "volumeName": {
                  "type": "string",
                  "description": "VolumeName is the binding reference to the PersistentVolume backing this claim."
                },
                "volumeMode": {
                  "type": "string",
                  "description": "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature."
                },
                "storageClassName": {
                  "type": "string",
                  "description": "Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"
                },
                "accessModes": {
                  "type": "array",
                  "description": "AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                  "items": {
                    "type": "string"
                  }
                },
                "dataSource": {
                  "description": "This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.",
                  "type": "object",
                  "properties": {
                    "apiGroup": {
                      "type": "string",
                      "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                    },
                    "kind": {
                      "type": "string",
                      "description": "Kind is the type of resource being referenced"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name is the name of resource being referenced"
                    }
                  },
                  "required": [
                    "kind",
                    "name"
                  ]
                },
                "dataSourceRef": {
                  "description": "Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.",
                  "type": "object",
                  "properties": {
                    "apiGroup": {
                      "type": "string",
                      "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                    },
                    "kind": {
                      "type": "string",
                      "description": "Kind is the type of resource being referenced"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name is the name of resource being referenced"
                    },
                    "namespace": {
                      "type": "string",
                      "description": "Namespace is the namespace of the resource being referenced. This field is required when the resource has a namespace."
                    }
                  },
                  "required": [
                    "kind",
                    "name"
                  ]
                },
                "resources": {
                  "description": "Resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                  "type": "object",
                  "properties": {
                    "limits": {
                      "type": "object",
                      "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "requests": {
                      "type": "object",
                      "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "claims": {
                      "type": "array",
                      "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.\n\nThis is an alpha field and requires enabling the DynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                      "items": {
                        "type": "object",
                        "description": "VolumeClaimResourceRequirementsClaims properties.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the resource. This must match the name of a resource in spec.resourceClaims."
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "x-ms-identifiers": []
                    }
                  }
                },
                "selector": {
                  "description": "A label query over volumes to consider for binding.",
                  "type": "object",
                  "properties": {
                    "matchExpressions": {
                      "type": "array",
                      "description": "MatchExpressions is a list of label selector requirements. The requirements are ANDed.",
                      "items": {
                        "type": "object",
                        "description": "VolumeClaimSpecSelectorMatchExpressions properties",
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "key is the label key that the selector applies to."
                          },
                          "operator": {
                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                            "type": "string",
                            "enum": [
                              "In",
                              "NotIn",
                              "Exists",
                              "DoesNotExist"
                            ],
                            "x-ms-enum": {
                              "name": "OperatorValues",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "In",
                                  "value": "In",
                                  "description": "In operator."
                                },
                                {
                                  "name": "NotIn",
                                  "value": "NotIn",
                                  "description": "NotIn operator."
                                },
                                {
                                  "name": "Exists",
                                  "value": "Exists",
                                  "description": "Exists operator."
                                },
                                {
                                  "name": "DoesNotExist",
                                  "value": "DoesNotExist",
                                  "description": "DoesNotExist operator."
                                }
                              ]
                            }
                          },
                          "values": {
                            "type": "array",
                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "key",
                          "operator"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "matchLabels": {
                      "type": "object",
                      "description": "MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "persistentVolumeClaimSpec": {
              "description": "Use the specified persistent volume claim template to mount a persistent volume for the message buffer.",
              "type": "object",
              "properties": {
                "volumeName": {
                  "type": "string",
                  "description": "VolumeName is the binding reference to the PersistentVolume backing this claim."
                },
                "volumeMode": {
                  "type": "string",
                  "description": "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature."
                },
                "storageClassName": {
                  "type": "string",
                  "description": "Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"
                },
                "accessModes": {
                  "type": "array",
                  "description": "AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                  "items": {
                    "type": "string"
                  }
                },
                "dataSource": {
                  "description": "This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.",
                  "type": "object",
                  "properties": {
                    "apiGroup": {
                      "type": "string",
                      "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                    },
                    "kind": {
                      "type": "string",
                      "description": "Kind is the type of resource being referenced"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name is the name of resource being referenced"
                    }
                  },
                  "required": [
                    "kind",
                    "name"
                  ]
                },
                "dataSourceRef": {
                  "description": "Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.",
                  "type": "object",
                  "properties": {
                    "apiGroup": {
                      "type": "string",
                      "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                    },
                    "kind": {
                      "type": "string",
                      "description": "Kind is the type of resource being referenced"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name is the name of resource being referenced"
                    },
                    "namespace": {
                      "type": "string",
                      "description": "Namespace is the namespace of the resource being referenced. This field is required when the resource has a namespace."
                    }
                  },
                  "required": [
                    "kind",
                    "name"
                  ]
                },
                "resources": {
                  "description": "Resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                  "type": "object",
                  "properties": {
                    "limits": {
                      "type": "object",
                      "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "requests": {
                      "type": "object",
                      "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "claims": {
                      "type": "array",
                      "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.\n\nThis is an alpha field and requires enabling the DynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                      "items": {
                        "type": "object",
                        "description": "VolumeClaimResourceRequirementsClaims properties.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the resource. This must match the name of a resource in spec.resourceClaims."
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "x-ms-identifiers": []
                    }
                  }
                },
                "selector": {
                  "description": "A label query over volumes to consider for binding.",
                  "type": "object",
                  "properties": {
                    "matchExpressions": {
                      "type": "array",
                      "description": "MatchExpressions is a list of label selector requirements. The requirements are ANDed.",
                      "items": {
                        "type": "object",
                        "description": "VolumeClaimSpecSelectorMatchExpressions properties",
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "key is the label key that the selector applies to."
                          },
                          "operator": {
                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                            "type": "string",
                            "enum": [
                              "In",
                              "NotIn",
                              "Exists",
                              "DoesNotExist"
                            ],
                            "x-ms-enum": {
                              "name": "OperatorValues",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "In",
                                  "value": "In",
                                  "description": "In operator."
                                },
                                {
                                  "name": "NotIn",
                                  "value": "NotIn",
                                  "description": "NotIn operator."
                                },
                                {
                                  "name": "Exists",
                                  "value": "Exists",
                                  "description": "Exists operator."
                                },
                                {
                                  "name": "DoesNotExist",
                                  "value": "DoesNotExist",
                                  "description": "DoesNotExist operator."
                                }
                              ]
                            }
                          },
                          "values": {
                            "type": "array",
                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "key",
                          "operator"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "matchLabels": {
                      "type": "object",
                      "description": "MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "required": [
            "maxSize"
          ]
        },
        "generateResourceLimits": {
          "description": "This setting controls whether Kubernetes CPU resource limits are requested. Increasing the number of replicas or workers proportionally increases the amount of CPU resources requested. If this setting is enabled and there are insufficient CPU resources, an error will be emitted.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "object",
          "properties": {
            "cpu": {
              "type": "string",
              "description": "The toggle to enable/disable cpu resource limits.",
              "default": "Enabled",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "OperationalMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled",
                    "description": "Enabled is equivalent to True"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "Disabled is equivalent to False."
                  }
                ]
              }
            }
          }
        },
        "memoryProfile": {
          "type": "string",
          "description": "Memory profile of Broker.",
          "default": "Medium",
          "enum": [
            "Tiny",
            "Low",
            "Medium",
            "High"
          ],
          "x-ms-enum": {
            "name": "BrokerMemoryProfile",
            "modelAsString": true,
            "values": [
              {
                "name": "Tiny",
                "value": "Tiny",
                "description": "Tiny memory profile."
              },
              {
                "name": "Low",
                "value": "Low",
                "description": "Low memory profile."
              },
              {
                "name": "Medium",
                "value": "Medium",
                "description": "Medium memory profile."
              },
              {
                "name": "High",
                "value": "High",
                "description": "High memory profile."
              }
            ]
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "persistence": {
          "description": "The persistence settings of the Broker.",
          "type": "object",
          "properties": {
            "maxSize": {
              "type": "string",
              "description": "The max size of the message buffer on disk. If a PVC template is specified using persistentVolumeClaimSpec Then this size is used as the request and limit sizes of that template. If a PVC template isn't specified Then local-path provisioner is requested with this size limit. Required.",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "persistentVolumeClaimSpec": {
              "description": "Use the specified persistent volume claim template to mount a persistent volume. Same object as in diskBackedMessageBuffer, but with a limitation that access modes field must be set to `ReadWriteOncePod`.\n\nIf unset, a default PVC with default properties will be used. Among other things this PVC will use the cluster default storage class, which may or may not be using a local path provisioner. User is opting in to sub-optimal behavior if they leave this unset or set it without the storage class field, and their cluster default is not a local path class.",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "object",
              "properties": {
                "volumeName": {
                  "type": "string",
                  "description": "VolumeName is the binding reference to the PersistentVolume backing this claim."
                },
                "volumeMode": {
                  "type": "string",
                  "description": "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature."
                },
                "storageClassName": {
                  "type": "string",
                  "description": "Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"
                },
                "accessModes": {
                  "type": "array",
                  "description": "AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                  "items": {
                    "type": "string"
                  }
                },
                "dataSource": {
                  "description": "This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.",
                  "type": "object",
                  "properties": {
                    "apiGroup": {
                      "type": "string",
                      "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                    },
                    "kind": {
                      "type": "string",
                      "description": "Kind is the type of resource being referenced"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name is the name of resource being referenced"
                    }
                  },
                  "required": [
                    "kind",
                    "name"
                  ]
                },
                "dataSourceRef": {
                  "description": "Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.",
                  "type": "object",
                  "properties": {
                    "apiGroup": {
                      "type": "string",
                      "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                    },
                    "kind": {
                      "type": "string",
                      "description": "Kind is the type of resource being referenced"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name is the name of resource being referenced"
                    },
                    "namespace": {
                      "type": "string",
                      "description": "Namespace is the namespace of the resource being referenced. This field is required when the resource has a namespace."
                    }
                  },
                  "required": [
                    "kind",
                    "name"
                  ]
                },
                "resources": {
                  "description": "Resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                  "type": "object",
                  "properties": {
                    "limits": {
                      "type": "object",
                      "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "requests": {
                      "type": "object",
                      "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "claims": {
                      "type": "array",
                      "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.\n\nThis is an alpha field and requires enabling the DynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                      "items": {
                        "type": "object",
                        "description": "VolumeClaimResourceRequirementsClaims properties.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the resource. This must match the name of a resource in spec.resourceClaims."
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "x-ms-identifiers": []
                    }
                  }
                },
                "selector": {
                  "description": "A label query over volumes to consider for binding.",
                  "type": "object",
                  "properties": {
                    "matchExpressions": {
                      "type": "array",
                      "description": "MatchExpressions is a list of label selector requirements. The requirements are ANDed.",
                      "items": {
                        "type": "object",
                        "description": "VolumeClaimSpecSelectorMatchExpressions properties",
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "key is the label key that the selector applies to."
                          },
                          "operator": {
                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                            "type": "string",
                            "enum": [
                              "In",
                              "NotIn",
                              "Exists",
                              "DoesNotExist"
                            ],
                            "x-ms-enum": {
                              "name": "OperatorValues",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "In",
                                  "value": "In",
                                  "description": "In operator."
                                },
                                {
                                  "name": "NotIn",
                                  "value": "NotIn",
                                  "description": "NotIn operator."
                                },
                                {
                                  "name": "Exists",
                                  "value": "Exists",
                                  "description": "Exists operator."
                                },
                                {
                                  "name": "DoesNotExist",
                                  "value": "DoesNotExist",
                                  "description": "DoesNotExist operator."
                                }
                              ]
                            }
                          },
                          "values": {
                            "type": "array",
                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "key",
                          "operator"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "matchLabels": {
                      "type": "object",
                      "description": "MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "retain": {
              "description": "Controls which topic's retained messages should be persisted to disk.",
              "type": "object",
              "properties": {
                "mode": {
                  "description": "'All' to persist all retain messages, 'None' to not persist any, 'Custom' to persist only the specified topics.",
                  "type": "string",
                  "enum": [
                    "All",
                    "None",
                    "Custom"
                  ],
                  "x-ms-enum": {
                    "name": "BrokerPersistencePolicyMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "All",
                        "value": "All",
                        "description": "Policy mode for All."
                      },
                      {
                        "name": "None",
                        "value": "None",
                        "description": "Policy mode for None."
                      },
                      {
                        "name": "Custom",
                        "value": "Custom",
                        "description": "Indicates that the policy is a custom policy."
                      }
                    ]
                  }
                }
              },
              "discriminator": "mode",
              "required": [
                "mode"
              ]
            },
            "stateStore": {
              "description": "Controls which keys should be persisted to disk for the state store.",
              "type": "object",
              "properties": {
                "mode": {
                  "description": "'All' to persist all keys, 'None' to not persist any, 'Custom' to persist only the specified keys.",
                  "type": "string",
                  "enum": [
                    "All",
                    "None",
                    "Custom"
                  ],
                  "x-ms-enum": {
                    "name": "BrokerPersistencePolicyMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "All",
                        "value": "All",
                        "description": "Policy mode for All."
                      },
                      {
                        "name": "None",
                        "value": "None",
                        "description": "Policy mode for None."
                      },
                      {
                        "name": "Custom",
                        "value": "Custom",
                        "description": "Indicates that the policy is a custom policy."
                      }
                    ]
                  }
                }
              },
              "discriminator": "mode",
              "required": [
                "mode"
              ]
            },
            "subscriberQueue": {
              "description": "Controls which subscriber message queues should be persisted to disk. Important: to facilitate reconnection, session state metadata are ALWAYS written to disk if any persistence setting is specified, even if this section isn't set.",
              "type": "object",
              "properties": {
                "mode": {
                  "description": "'All' to persist all subscriber queues, 'None' to not persist any, 'Custom' to persist only the specified queues.",
                  "type": "string",
                  "enum": [
                    "All",
                    "None",
                    "Custom"
                  ],
                  "x-ms-enum": {
                    "name": "BrokerPersistencePolicyMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "All",
                        "value": "All",
                        "description": "Policy mode for All."
                      },
                      {
                        "name": "None",
                        "value": "None",
                        "description": "Policy mode for None."
                      },
                      {
                        "name": "Custom",
                        "value": "Custom",
                        "description": "Indicates that the policy is a custom policy."
                      }
                    ]
                  }
                }
              },
              "discriminator": "mode",
              "required": [
                "mode"
              ]
            },
            "encryption": {
              "description": "Controls settings related to encryption of the persistence database. Optional, defaults to enabling encryption.",
              "type": "object",
              "properties": {
                "mode": {
                  "type": "string",
                  "description": "Mode properties",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "OperationalMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled",
                        "description": "Enabled is equivalent to True"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled",
                        "description": "Disabled is equivalent to False."
                      }
                    ]
                  }
                }
              },
              "required": [
                "mode"
              ]
            }
          },
          "required": [
            "maxSize"
          ]
        },
        "provisioningState": {
          "description": "The status of the last operation.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Updating",
            "Deleting",
            "Accepted"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Provisioning",
                "value": "Provisioning",
                "description": "Resource is getting provisioned."
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "Resource is Updating."
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "Resource is Deleting."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "Resource has been Accepted."
              }
            ]
          }
        },
        "healthState": {
          "type": "string",
          "description": "The health state of the resource.",
          "default": "Unknown",
          "enum": [
            "Available",
            "Degraded",
            "Unavailable",
            "Unknown"
          ],
          "x-ms-enum": {
            "name": "ResourceHealthState",
            "modelAsString": true,
            "values": [
              {
                "name": "Available",
                "value": "Available",
                "description": "Resource is Available and functioning as expected."
              },
              {
                "name": "Degraded",
                "value": "Degraded",
                "description": "Resource health is degraded."
              },
              {
                "name": "Unavailable",
                "value": "Unavailable",
                "description": "Resource is not functioning as expected."
              },
              {
                "name": "Unknown",
                "value": "Unknown",
                "description": "Resource state is unknown."
              }
            ]
          },
          "readOnly": true
        }
      }
    },
    "BrokerProtocolType": {
      "type": "string",
      "description": "Broker Protocol types",
      "enum": [
        "Mqtt",
        "WebSockets"
      ],
      "x-ms-enum": {
        "name": "BrokerProtocolType",
        "modelAsString": true,
        "values": [
          {
            "name": "Mqtt",
            "value": "Mqtt",
            "description": "protocol broker"
          },
          {
            "name": "WebSockets",
            "value": "WebSockets",
            "description": "protocol websocket"
          }
        ]
      }
    },
    "BrokerResource": {
      "type": "object",
      "description": "Instance broker resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "advanced": {
              "description": "Advanced settings of Broker.",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "object",
              "properties": {
                "clients": {
                  "description": "Configurations related to All Clients.",
                  "type": "object",
                  "properties": {
                    "maxSessionExpirySeconds": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Upper bound of Session Expiry Interval, in seconds.",
                      "minimum": 1,
                      "maximum": 4294967295
                    },
                    "maxMessageExpirySeconds": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Upper bound of Message Expiry Interval, in seconds.",
                      "minimum": 1,
                      "maximum": 4294967295
                    },
                    "maxPacketSizeBytes": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Max message size for a packet in Bytes.",
                      "minimum": 1,
                      "maximum": 268435456
                    },
                    "subscriberQueueLimit": {
                      "description": "The limit on the number of queued messages for a subscriber.",
                      "type": "object",
                      "properties": {
                        "length": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The maximum length of the queue before messages start getting dropped.",
                          "minimum": 1
                        },
                        "strategy": {
                          "type": "string",
                          "description": "The strategy to use for dropping messages from the queue.",
                          "default": "None",
                          "enum": [
                            "None",
                            "DropOldest"
                          ],
                          "x-ms-enum": {
                            "name": "SubscriberMessageDropStrategy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "None",
                                "value": "None",
                                "description": "Messages are never dropped."
                              },
                              {
                                "name": "DropOldest",
                                "value": "DropOldest",
                                "description": "The oldest message is dropped."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "maxReceiveMaximum": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Upper bound of Receive Maximum that a client can request in the CONNECT packet.",
                      "minimum": 1,
                      "maximum": 65535
                    },
                    "maxKeepAliveSeconds": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Upper bound of a client's Keep Alive, in seconds.",
                      "minimum": 0,
                      "maximum": 65535
                    }
                  }
                },
                "encryptInternalTraffic": {
                  "type": "string",
                  "description": "The setting to enable or disable encryption of internal Traffic.",
                  "default": "Enabled",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "OperationalMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled",
                        "description": "Enabled is equivalent to True"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled",
                        "description": "Disabled is equivalent to False."
                      }
                    ]
                  }
                },
                "internalCerts": {
                  "description": "Certificate rotation and private key configuration.",
                  "type": "object",
                  "properties": {
                    "duration": {
                      "type": "string",
                      "description": "Lifetime of certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."
                    },
                    "renewBefore": {
                      "type": "string",
                      "description": "When to begin renewing certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."
                    },
                    "privateKey": {
                      "description": "Configuration of certificate private key.",
                      "type": "object",
                      "properties": {
                        "algorithm": {
                          "description": "algorithm for private key.",
                          "type": "string",
                          "enum": [
                            "Ec256",
                            "Ec384",
                            "Ec521",
                            "Ed25519",
                            "Rsa2048",
                            "Rsa4096",
                            "Rsa8192"
                          ],
                          "x-ms-enum": {
                            "name": "PrivateKeyAlgorithm",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Ec256",
                                "value": "Ec256",
                                "description": "Algorithm - ec256."
                              },
                              {
                                "name": "Ec384",
                                "value": "Ec384",
                                "description": "Algorithm - ec384."
                              },
                              {
                                "name": "Ec521",
                                "value": "Ec521",
                                "description": "Algorithm - ec521."
                              },
                              {
                                "name": "Ed25519",
                                "value": "Ed25519",
                                "description": "Algorithm - ed25519."
                              },
                              {
                                "name": "Rsa2048",
                                "value": "Rsa2048",
                                "description": "Algorithm - rsa2048."
                              },
                              {
                                "name": "Rsa4096",
                                "value": "Rsa4096",
                                "description": "Algorithm - rsa4096."
                              },
                              {
                                "name": "Rsa8192",
                                "value": "Rsa8192",
                                "description": "Algorithm - rsa8192."
                              }
                            ]
                          }
                        },
                        "rotationPolicy": {
                          "description": "cert-manager private key rotationPolicy.",
                          "type": "string",
                          "enum": [
                            "Always",
                            "Never"
                          ],
                          "x-ms-enum": {
                            "name": "PrivateKeyRotationPolicy",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Always",
                                "value": "Always",
                                "description": "Rotation Policy - Always."
                              },
                              {
                                "name": "Never",
                                "value": "Never",
                                "description": "Rotation Policy - Never."
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "algorithm",
                        "rotationPolicy"
                      ]
                    }
                  },
                  "required": [
                    "duration",
                    "renewBefore",
                    "privateKey"
                  ]
                }
              }
            },
            "cardinality": {
              "description": "The cardinality details of the broker.",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "object",
              "properties": {
                "backendChain": {
                  "description": "The backend broker desired properties",
                  "type": "object",
                  "properties": {
                    "partitions": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The desired number of physical backend partitions.",
                      "minimum": 1,
                      "maximum": 16
                    },
                    "redundancyFactor": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The desired numbers of backend replicas (pods) in a physical partition.",
                      "minimum": 1,
                      "maximum": 5
                    },
                    "workers": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Number of logical backend workers per replica (pod).",
                      "default": 1,
                      "minimum": 1,
                      "maximum": 16
                    }
                  },
                  "required": [
                    "partitions",
                    "redundancyFactor"
                  ]
                },
                "frontend": {
                  "description": "The frontend desired properties",
                  "type": "object",
                  "properties": {
                    "replicas": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The desired number of frontend instances (pods).",
                      "minimum": 1,
                      "maximum": 16
                    },
                    "workers": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Number of logical frontend workers per instance (pod).",
                      "default": 2,
                      "minimum": 1,
                      "maximum": 16
                    }
                  },
                  "required": [
                    "replicas"
                  ]
                }
              },
              "required": [
                "backendChain",
                "frontend"
              ]
            },
            "diagnostics": {
              "description": "Spec defines the desired identities of Broker diagnostics settings.",
              "type": "object",
              "properties": {
                "logs": {
                  "description": "Diagnostic log settings for the resource.",
                  "type": "object",
                  "properties": {
                    "level": {
                      "type": "string",
                      "description": "The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.",
                      "default": "info"
                    }
                  }
                },
                "metrics": {
                  "description": "The metrics settings for the resource.",
                  "type": "object",
                  "properties": {
                    "prometheusPort": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The prometheus port to expose the metrics.",
                      "default": 9600,
                      "minimum": 0,
                      "maximum": 65535
                    }
                  }
                },
                "selfCheck": {
                  "description": "The self check properties.",
                  "type": "object",
                  "properties": {
                    "mode": {
                      "type": "string",
                      "description": "The toggle to enable/disable self check.",
                      "default": "Enabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "OperationalMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "Enabled is equivalent to True"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "Disabled is equivalent to False."
                          }
                        ]
                      }
                    },
                    "intervalSeconds": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The self check interval.",
                      "default": 30,
                      "minimum": 30,
                      "maximum": 300
                    },
                    "timeoutSeconds": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The timeout for self check.",
                      "default": 15,
                      "minimum": 5,
                      "maximum": 120
                    }
                  }
                },
                "traces": {
                  "description": "The trace properties.",
                  "type": "object",
                  "properties": {
                    "mode": {
                      "type": "string",
                      "description": "The toggle to enable/disable traces.",
                      "default": "Enabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "OperationalMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "Enabled is equivalent to True"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "Disabled is equivalent to False."
                          }
                        ]
                      }
                    },
                    "cacheSizeMegabytes": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The cache size in megabytes.",
                      "default": 16,
                      "minimum": 1,
                      "maximum": 128
                    },
                    "selfTracing": {
                      "description": "The self tracing properties.",
                      "type": "object",
                      "properties": {
                        "mode": {
                          "type": "string",
                          "description": "The toggle to enable/disable self tracing.",
                          "default": "Enabled",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "OperationalMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "Enabled is equivalent to True"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "Disabled is equivalent to False."
                              }
                            ]
                          }
                        },
                        "intervalSeconds": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The self tracing interval.",
                          "default": 30,
                          "minimum": 1,
                          "maximum": 300
                        }
                      }
                    },
                    "spanChannelCapacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The span channel capacity.",
                      "default": 1000,
                      "minimum": 1000,
                      "maximum": 100000
                    }
                  }
                }
              }
            },
            "diskBackedMessageBuffer": {
              "description": "Settings of Disk Backed Message Buffer.",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "object",
              "properties": {
                "maxSize": {
                  "type": "string",
                  "description": "The max size of the message buffer on disk. If a PVC template is specified using one of ephemeralVolumeClaimSpec or persistentVolumeClaimSpec, then this size is used as the request and limit sizes of that template. If neither ephemeralVolumeClaimSpec nor persistentVolumeClaimSpec are specified, then an emptyDir volume is mounted with this size as its limit. See <https://kubernetes.io/docs/concepts/storage/volumes/#emptydir> for details.",
                  "pattern": "^[0-9]+[KMGTPE]$"
                },
                "ephemeralVolumeClaimSpec": {
                  "description": "Use the specified persistent volume claim template to mount a \"generic ephemeral volume\" for the message buffer. See <https://kubernetes.io/docs/concepts/storage/ephemeral-volumes/#generic-ephemeral-volumes> for details.",
                  "type": "object",
                  "properties": {
                    "volumeName": {
                      "type": "string",
                      "description": "VolumeName is the binding reference to the PersistentVolume backing this claim."
                    },
                    "volumeMode": {
                      "type": "string",
                      "description": "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature."
                    },
                    "storageClassName": {
                      "type": "string",
                      "description": "Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"
                    },
                    "accessModes": {
                      "type": "array",
                      "description": "AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                      "items": {
                        "type": "string"
                      }
                    },
                    "dataSource": {
                      "description": "This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.",
                      "type": "object",
                      "properties": {
                        "apiGroup": {
                          "type": "string",
                          "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                        },
                        "kind": {
                          "type": "string",
                          "description": "Kind is the type of resource being referenced"
                        },
                        "name": {
                          "type": "string",
                          "description": "Name is the name of resource being referenced"
                        }
                      },
                      "required": [
                        "kind",
                        "name"
                      ]
                    },
                    "dataSourceRef": {
                      "description": "Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.",
                      "type": "object",
                      "properties": {
                        "apiGroup": {
                          "type": "string",
                          "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                        },
                        "kind": {
                          "type": "string",
                          "description": "Kind is the type of resource being referenced"
                        },
                        "name": {
                          "type": "string",
                          "description": "Name is the name of resource being referenced"
                        },
                        "namespace": {
                          "type": "string",
                          "description": "Namespace is the namespace of the resource being referenced. This field is required when the resource has a namespace."
                        }
                      },
                      "required": [
                        "kind",
                        "name"
                      ]
                    },
                    "resources": {
                      "description": "Resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                      "type": "object",
                      "properties": {
                        "limits": {
                          "type": "object",
                          "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "requests": {
                          "type": "object",
                          "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "claims": {
                          "type": "array",
                          "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.\n\nThis is an alpha field and requires enabling the DynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                          "items": {
                            "type": "object",
                            "description": "VolumeClaimResourceRequirementsClaims properties.",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the resource. This must match the name of a resource in spec.resourceClaims."
                              }
                            },
                            "required": [
                              "name"
                            ]
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "selector": {
                      "description": "A label query over volumes to consider for binding.",
                      "type": "object",
                      "properties": {
                        "matchExpressions": {
                          "type": "array",
                          "description": "MatchExpressions is a list of label selector requirements. The requirements are ANDed.",
                          "items": {
                            "type": "object",
                            "description": "VolumeClaimSpecSelectorMatchExpressions properties",
                            "properties": {
                              "key": {
                                "type": "string",
                                "description": "key is the label key that the selector applies to."
                              },
                              "operator": {
                                "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                "type": "string",
                                "enum": [
                                  "In",
                                  "NotIn",
                                  "Exists",
                                  "DoesNotExist"
                                ],
                                "x-ms-enum": {
                                  "name": "OperatorValues",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "In",
                                      "value": "In",
                                      "description": "In operator."
                                    },
                                    {
                                      "name": "NotIn",
                                      "value": "NotIn",
                                      "description": "NotIn operator."
                                    },
                                    {
                                      "name": "Exists",
                                      "value": "Exists",
                                      "description": "Exists operator."
                                    },
                                    {
                                      "name": "DoesNotExist",
                                      "value": "DoesNotExist",
                                      "description": "DoesNotExist operator."
                                    }
                                  ]
                                }
                              },
                              "values": {
                                "type": "array",
                                "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "required": [
                              "key",
                              "operator"
                            ]
                          },
                          "x-ms-identifiers": []
                        },
                        "matchLabels": {
                          "type": "object",
                          "description": "MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "persistentVolumeClaimSpec": {
                  "description": "Use the specified persistent volume claim template to mount a persistent volume for the message buffer.",
                  "type": "object",
                  "properties": {
                    "volumeName": {
                      "type": "string",
                      "description": "VolumeName is the binding reference to the PersistentVolume backing this claim."
                    },
                    "volumeMode": {
                      "type": "string",
                      "description": "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature."
                    },
                    "storageClassName": {
                      "type": "string",
                      "description": "Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"
                    },
                    "accessModes": {
                      "type": "array",
                      "description": "AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                      "items": {
                        "type": "string"
                      }
                    },
                    "dataSource": {
                      "description": "This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.",
                      "type": "object",
                      "properties": {
                        "apiGroup": {
                          "type": "string",
                          "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                        },
                        "kind": {
                          "type": "string",
                          "description": "Kind is the type of resource being referenced"
                        },
                        "name": {
                          "type": "string",
                          "description": "Name is the name of resource being referenced"
                        }
                      },
                      "required": [
                        "kind",
                        "name"
                      ]
                    },
                    "dataSourceRef": {
                      "description": "Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.",
                      "type": "object",
                      "properties": {
                        "apiGroup": {
                          "type": "string",
                          "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                        },
                        "kind": {
                          "type": "string",
                          "description": "Kind is the type of resource being referenced"
                        },
                        "name": {
                          "type": "string",
                          "description": "Name is the name of resource being referenced"
                        },
                        "namespace": {
                          "type": "string",
                          "description": "Namespace is the namespace of the resource being referenced. This field is required when the resource has a namespace."
                        }
                      },
                      "required": [
                        "kind",
                        "name"
                      ]
                    },
                    "resources": {
                      "description": "Resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                      "type": "object",
                      "properties": {
                        "limits": {
                          "type": "object",
                          "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "requests": {
                          "type": "object",
                          "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "claims": {
                          "type": "array",
                          "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.\n\nThis is an alpha field and requires enabling the DynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                          "items": {
                            "type": "object",
                            "description": "VolumeClaimResourceRequirementsClaims properties.",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the resource. This must match the name of a resource in spec.resourceClaims."
                              }
                            },
                            "required": [
                              "name"
                            ]
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "selector": {
                      "description": "A label query over volumes to consider for binding.",
                      "type": "object",
                      "properties": {
                        "matchExpressions": {
                          "type": "array",
                          "description": "MatchExpressions is a list of label selector requirements. The requirements are ANDed.",
                          "items": {
                            "type": "object",
                            "description": "VolumeClaimSpecSelectorMatchExpressions properties",
                            "properties": {
                              "key": {
                                "type": "string",
                                "description": "key is the label key that the selector applies to."
                              },
                              "operator": {
                                "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                "type": "string",
                                "enum": [
                                  "In",
                                  "NotIn",
                                  "Exists",
                                  "DoesNotExist"
                                ],
                                "x-ms-enum": {
                                  "name": "OperatorValues",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "In",
                                      "value": "In",
                                      "description": "In operator."
                                    },
                                    {
                                      "name": "NotIn",
                                      "value": "NotIn",
                                      "description": "NotIn operator."
                                    },
                                    {
                                      "name": "Exists",
                                      "value": "Exists",
                                      "description": "Exists operator."
                                    },
                                    {
                                      "name": "DoesNotExist",
                                      "value": "DoesNotExist",
                                      "description": "DoesNotExist operator."
                                    }
                                  ]
                                }
                              },
                              "values": {
                                "type": "array",
                                "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "required": [
                              "key",
                              "operator"
                            ]
                          },
                          "x-ms-identifiers": []
                        },
                        "matchLabels": {
                          "type": "object",
                          "description": "MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "maxSize"
              ]
            },
            "generateResourceLimits": {
              "description": "This setting controls whether Kubernetes CPU resource limits are requested. Increasing the number of replicas or workers proportionally increases the amount of CPU resources requested. If this setting is enabled and there are insufficient CPU resources, an error will be emitted.",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "object",
              "properties": {
                "cpu": {
                  "type": "string",
                  "description": "The toggle to enable/disable cpu resource limits.",
                  "default": "Enabled",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "OperationalMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled",
                        "description": "Enabled is equivalent to True"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled",
                        "description": "Disabled is equivalent to False."
                      }
                    ]
                  }
                }
              }
            },
            "memoryProfile": {
              "type": "string",
              "description": "Memory profile of Broker.",
              "default": "Medium",
              "enum": [
                "Tiny",
                "Low",
                "Medium",
                "High"
              ],
              "x-ms-enum": {
                "name": "BrokerMemoryProfile",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Tiny",
                    "value": "Tiny",
                    "description": "Tiny memory profile."
                  },
                  {
                    "name": "Low",
                    "value": "Low",
                    "description": "Low memory profile."
                  },
                  {
                    "name": "Medium",
                    "value": "Medium",
                    "description": "Medium memory profile."
                  },
                  {
                    "name": "High",
                    "value": "High",
                    "description": "High memory profile."
                  }
                ]
              },
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "persistence": {
              "description": "The persistence settings of the Broker.",
              "type": "object",
              "properties": {
                "maxSize": {
                  "type": "string",
                  "description": "The max size of the message buffer on disk. If a PVC template is specified using persistentVolumeClaimSpec Then this size is used as the request and limit sizes of that template. If a PVC template isn't specified Then local-path provisioner is requested with this size limit. Required.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "persistentVolumeClaimSpec": {
                  "description": "Use the specified persistent volume claim template to mount a persistent volume. Same object as in diskBackedMessageBuffer, but with a limitation that access modes field must be set to `ReadWriteOncePod`.\n\nIf unset, a default PVC with default properties will be used. Among other things this PVC will use the cluster default storage class, which may or may not be using a local path provisioner. User is opting in to sub-optimal behavior if they leave this unset or set it without the storage class field, and their cluster default is not a local path class.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "volumeName": {
                      "type": "string",
                      "description": "VolumeName is the binding reference to the PersistentVolume backing this claim."
                    },
                    "volumeMode": {
                      "type": "string",
                      "description": "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature."
                    },
                    "storageClassName": {
                      "type": "string",
                      "description": "Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"
                    },
                    "accessModes": {
                      "type": "array",
                      "description": "AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                      "items": {
                        "type": "string"
                      }
                    },
                    "dataSource": {
                      "description": "This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.",
                      "type": "object",
                      "properties": {
                        "apiGroup": {
                          "type": "string",
                          "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                        },
                        "kind": {
                          "type": "string",
                          "description": "Kind is the type of resource being referenced"
                        },
                        "name": {
                          "type": "string",
                          "description": "Name is the name of resource being referenced"
                        }
                      },
                      "required": [
                        "kind",
                        "name"
                      ]
                    },
                    "dataSourceRef": {
                      "description": "Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.",
                      "type": "object",
                      "properties": {
                        "apiGroup": {
                          "type": "string",
                          "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                        },
                        "kind": {
                          "type": "string",
                          "description": "Kind is the type of resource being referenced"
                        },
                        "name": {
                          "type": "string",
                          "description": "Name is the name of resource being referenced"
                        },
                        "namespace": {
                          "type": "string",
                          "description": "Namespace is the namespace of the resource being referenced. This field is required when the resource has a namespace."
                        }
                      },
                      "required": [
                        "kind",
                        "name"
                      ]
                    },
                    "resources": {
                      "description": "Resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                      "type": "object",
                      "properties": {
                        "limits": {
                          "type": "object",
                          "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "requests": {
                          "type": "object",
                          "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "claims": {
                          "type": "array",
                          "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.\n\nThis is an alpha field and requires enabling the DynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                          "items": {
                            "type": "object",
                            "description": "VolumeClaimResourceRequirementsClaims properties.",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the resource. This must match the name of a resource in spec.resourceClaims."
                              }
                            },
                            "required": [
                              "name"
                            ]
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "selector": {
                      "description": "A label query over volumes to consider for binding.",
                      "type": "object",
                      "properties": {
                        "matchExpressions": {
                          "type": "array",
                          "description": "MatchExpressions is a list of label selector requirements. The requirements are ANDed.",
                          "items": {
                            "type": "object",
                            "description": "VolumeClaimSpecSelectorMatchExpressions properties",
                            "properties": {
                              "key": {
                                "type": "string",
                                "description": "key is the label key that the selector applies to."
                              },
                              "operator": {
                                "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                "type": "string",
                                "enum": [
                                  "In",
                                  "NotIn",
                                  "Exists",
                                  "DoesNotExist"
                                ],
                                "x-ms-enum": {
                                  "name": "OperatorValues",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "In",
                                      "value": "In",
                                      "description": "In operator."
                                    },
                                    {
                                      "name": "NotIn",
                                      "value": "NotIn",
                                      "description": "NotIn operator."
                                    },
                                    {
                                      "name": "Exists",
                                      "value": "Exists",
                                      "description": "Exists operator."
                                    },
                                    {
                                      "name": "DoesNotExist",
                                      "value": "DoesNotExist",
                                      "description": "DoesNotExist operator."
                                    }
                                  ]
                                }
                              },
                              "values": {
                                "type": "array",
                                "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "required": [
                              "key",
                              "operator"
                            ]
                          },
                          "x-ms-identifiers": []
                        },
                        "matchLabels": {
                          "type": "object",
                          "description": "MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "retain": {
                  "description": "Controls which topic's retained messages should be persisted to disk.",
                  "type": "object",
                  "properties": {
                    "mode": {
                      "description": "'All' to persist all retain messages, 'None' to not persist any, 'Custom' to persist only the specified topics.",
                      "type": "string",
                      "enum": [
                        "All",
                        "None",
                        "Custom"
                      ],
                      "x-ms-enum": {
                        "name": "BrokerPersistencePolicyMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "All",
                            "value": "All",
                            "description": "Policy mode for All."
                          },
                          {
                            "name": "None",
                            "value": "None",
                            "description": "Policy mode for None."
                          },
                          {
                            "name": "Custom",
                            "value": "Custom",
                            "description": "Indicates that the policy is a custom policy."
                          }
                        ]
                      }
                    }
                  },
                  "discriminator": "mode",
                  "required": [
                    "mode"
                  ]
                },
                "stateStore": {
                  "description": "Controls which keys should be persisted to disk for the state store.",
                  "type": "object",
                  "properties": {
                    "mode": {
                      "description": "'All' to persist all keys, 'None' to not persist any, 'Custom' to persist only the specified keys.",
                      "type": "string",
                      "enum": [
                        "All",
                        "None",
                        "Custom"
                      ],
                      "x-ms-enum": {
                        "name": "BrokerPersistencePolicyMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "All",
                            "value": "All",
                            "description": "Policy mode for All."
                          },
                          {
                            "name": "None",
                            "value": "None",
                            "description": "Policy mode for None."
                          },
                          {
                            "name": "Custom",
                            "value": "Custom",
                            "description": "Indicates that the policy is a custom policy."
                          }
                        ]
                      }
                    }
                  },
                  "discriminator": "mode",
                  "required": [
                    "mode"
                  ]
                },
                "subscriberQueue": {
                  "description": "Controls which subscriber message queues should be persisted to disk. Important: to facilitate reconnection, session state metadata are ALWAYS written to disk if any persistence setting is specified, even if this section isn't set.",
                  "type": "object",
                  "properties": {
                    "mode": {
                      "description": "'All' to persist all subscriber queues, 'None' to not persist any, 'Custom' to persist only the specified queues.",
                      "type": "string",
                      "enum": [
                        "All",
                        "None",
                        "Custom"
                      ],
                      "x-ms-enum": {
                        "name": "BrokerPersistencePolicyMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "All",
                            "value": "All",
                            "description": "Policy mode for All."
                          },
                          {
                            "name": "None",
                            "value": "None",
                            "description": "Policy mode for None."
                          },
                          {
                            "name": "Custom",
                            "value": "Custom",
                            "description": "Indicates that the policy is a custom policy."
                          }
                        ]
                      }
                    }
                  },
                  "discriminator": "mode",
                  "required": [
                    "mode"
                  ]
                },
                "encryption": {
                  "description": "Controls settings related to encryption of the persistence database. Optional, defaults to enabling encryption.",
                  "type": "object",
                  "properties": {
                    "mode": {
                      "type": "string",
                      "description": "Mode properties",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "OperationalMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "Enabled is equivalent to True"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "Disabled is equivalent to False."
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "mode"
                  ]
                }
              },
              "required": [
                "maxSize"
              ]
            },
            "provisioningState": {
              "description": "The status of the last operation.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "Resource is getting provisioned."
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "Resource is Updating."
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "Resource is Deleting."
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "Resource has been Accepted."
                  }
                ]
              }
            },
            "healthState": {
              "type": "string",
              "description": "The health state of the resource.",
              "default": "Unknown",
              "enum": [
                "Available",
                "Degraded",
                "Unavailable",
                "Unknown"
              ],
              "x-ms-enum": {
                "name": "ResourceHealthState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Available",
                    "value": "Available",
                    "description": "Resource is Available and functioning as expected."
                  },
                  {
                    "name": "Degraded",
                    "value": "Degraded",
                    "description": "Resource health is degraded."
                  },
                  {
                    "name": "Unavailable",
                    "value": "Unavailable",
                    "description": "Resource is not functioning as expected."
                  },
                  {
                    "name": "Unknown",
                    "value": "Unknown",
                    "description": "Resource state is unknown."
                  }
                ]
              },
              "readOnly": true
            }
          }
        },
        "extendedLocation": {
          "description": "Edge location of the resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the extended location."
            },
            "type": {
              "description": "Type of ExtendedLocation.",
              "type": "string",
              "enum": [
                "CustomLocation"
              ],
              "x-ms-enum": {
                "name": "ExtendedLocationType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "CustomLocation",
                    "value": "CustomLocation",
                    "description": "CustomLocation type"
                  }
                ]
              }
            }
          },
          "required": [
            "name",
            "type"
          ]
        }
      }
    },
    "BrokerResourceDefinitionMethods": {
      "type": "string",
      "description": "BrokerResourceDefinitionMethods methods allowed",
      "enum": [
        "Connect",
        "Publish",
        "Subscribe"
      ],
      "x-ms-enum": {
        "name": "BrokerResourceDefinitionMethods",
        "modelAsString": true,
        "values": [
          {
            "name": "Connect",
            "value": "Connect",
            "description": "Allowed Connecting to Broker"
          },
          {
            "name": "Publish",
            "value": "Publish",
            "description": "Allowed Publishing to Broker"
          },
          {
            "name": "Subscribe",
            "value": "Subscribe",
            "description": "Allowed Subscribing to Broker"
          }
        ]
      }
    },
    "BrokerResourceListResult": {
      "type": "object",
      "description": "The response of a BrokerResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The BrokerResource items on this page",
          "items": {
            "type": "object",
            "description": "Instance broker resource",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "advanced": {
                    "description": "Advanced settings of Broker.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "type": "object",
                    "properties": {
                      "clients": {
                        "description": "Configurations related to All Clients.",
                        "type": "object",
                        "properties": {
                          "maxSessionExpirySeconds": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Upper bound of Session Expiry Interval, in seconds.",
                            "minimum": 1,
                            "maximum": 4294967295
                          },
                          "maxMessageExpirySeconds": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Upper bound of Message Expiry Interval, in seconds.",
                            "minimum": 1,
                            "maximum": 4294967295
                          },
                          "maxPacketSizeBytes": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Max message size for a packet in Bytes.",
                            "minimum": 1,
                            "maximum": 268435456
                          },
                          "subscriberQueueLimit": {
                            "description": "The limit on the number of queued messages for a subscriber.",
                            "type": "object",
                            "properties": {
                              "length": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The maximum length of the queue before messages start getting dropped.",
                                "minimum": 1
                              },
                              "strategy": {
                                "type": "string",
                                "description": "The strategy to use for dropping messages from the queue.",
                                "default": "None",
                                "enum": [
                                  "None",
                                  "DropOldest"
                                ],
                                "x-ms-enum": {
                                  "name": "SubscriberMessageDropStrategy",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "None",
                                      "value": "None",
                                      "description": "Messages are never dropped."
                                    },
                                    {
                                      "name": "DropOldest",
                                      "value": "DropOldest",
                                      "description": "The oldest message is dropped."
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "maxReceiveMaximum": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Upper bound of Receive Maximum that a client can request in the CONNECT packet.",
                            "minimum": 1,
                            "maximum": 65535
                          },
                          "maxKeepAliveSeconds": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Upper bound of a client's Keep Alive, in seconds.",
                            "minimum": 0,
                            "maximum": 65535
                          }
                        }
                      },
                      "encryptInternalTraffic": {
                        "type": "string",
                        "description": "The setting to enable or disable encryption of internal Traffic.",
                        "default": "Enabled",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "name": "OperationalMode",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Enabled",
                              "value": "Enabled",
                              "description": "Enabled is equivalent to True"
                            },
                            {
                              "name": "Disabled",
                              "value": "Disabled",
                              "description": "Disabled is equivalent to False."
                            }
                          ]
                        }
                      },
                      "internalCerts": {
                        "description": "Certificate rotation and private key configuration.",
                        "type": "object",
                        "properties": {
                          "duration": {
                            "type": "string",
                            "description": "Lifetime of certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."
                          },
                          "renewBefore": {
                            "type": "string",
                            "description": "When to begin renewing certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."
                          },
                          "privateKey": {
                            "description": "Configuration of certificate private key.",
                            "type": "object",
                            "properties": {
                              "algorithm": {
                                "description": "algorithm for private key.",
                                "type": "string",
                                "enum": [
                                  "Ec256",
                                  "Ec384",
                                  "Ec521",
                                  "Ed25519",
                                  "Rsa2048",
                                  "Rsa4096",
                                  "Rsa8192"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateKeyAlgorithm",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Ec256",
                                      "value": "Ec256",
                                      "description": "Algorithm - ec256."
                                    },
                                    {
                                      "name": "Ec384",
                                      "value": "Ec384",
                                      "description": "Algorithm - ec384."
                                    },
                                    {
                                      "name": "Ec521",
                                      "value": "Ec521",
                                      "description": "Algorithm - ec521."
                                    },
                                    {
                                      "name": "Ed25519",
                                      "value": "Ed25519",
                                      "description": "Algorithm - ed25519."
                                    },
                                    {
                                      "name": "Rsa2048",
                                      "value": "Rsa2048",
                                      "description": "Algorithm - rsa2048."
                                    },
                                    {
                                      "name": "Rsa4096",
                                      "value": "Rsa4096",
                                      "description": "Algorithm - rsa4096."
                                    },
                                    {
                                      "name": "Rsa8192",
                                      "value": "Rsa8192",
                                      "description": "Algorithm - rsa8192."
                                    }
                                  ]
                                }
                              },
                              "rotationPolicy": {
                                "description": "cert-manager private key rotationPolicy.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "Never"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateKeyRotationPolicy",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Always",
                                      "value": "Always",
                                      "description": "Rotation Policy - Always."
                                    },
                                    {
                                      "name": "Never",
                                      "value": "Never",
                                      "description": "Rotation Policy - Never."
                                    }
                                  ]
                                }
                              }
                            },
                            "required": [
                              "algorithm",
                              "rotationPolicy"
                            ]
                          }
                        },
                        "required": [
                          "duration",
                          "renewBefore",
                          "privateKey"
                        ]
                      }
                    }
                  },
                  "cardinality": {
                    "description": "The cardinality details of the broker.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "type": "object",
                    "properties": {
                      "backendChain": {
                        "description": "The backend broker desired properties",
                        "type": "object",
                        "properties": {
                          "partitions": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The desired number of physical backend partitions.",
                            "minimum": 1,
                            "maximum": 16
                          },
                          "redundancyFactor": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The desired numbers of backend replicas (pods) in a physical partition.",
                            "minimum": 1,
                            "maximum": 5
                          },
                          "workers": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Number of logical backend workers per replica (pod).",
                            "default": 1,
                            "minimum": 1,
                            "maximum": 16
                          }
                        },
                        "required": [
                          "partitions",
                          "redundancyFactor"
                        ]
                      },
                      "frontend": {
                        "description": "The frontend desired properties",
                        "type": "object",
                        "properties": {
                          "replicas": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The desired number of frontend instances (pods).",
                            "minimum": 1,
                            "maximum": 16
                          },
                          "workers": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Number of logical frontend workers per instance (pod).",
                            "default": 2,
                            "minimum": 1,
                            "maximum": 16
                          }
                        },
                        "required": [
                          "replicas"
                        ]
                      }
                    },
                    "required": [
                      "backendChain",
                      "frontend"
                    ]
                  },
                  "diagnostics": {
                    "description": "Spec defines the desired identities of Broker diagnostics settings.",
                    "type": "object",
                    "properties": {
                      "logs": {
                        "description": "Diagnostic log settings for the resource.",
                        "type": "object",
                        "properties": {
                          "level": {
                            "type": "string",
                            "description": "The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.",
                            "default": "info"
                          }
                        }
                      },
                      "metrics": {
                        "description": "The metrics settings for the resource.",
                        "type": "object",
                        "properties": {
                          "prometheusPort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The prometheus port to expose the metrics.",
                            "default": 9600,
                            "minimum": 0,
                            "maximum": 65535
                          }
                        }
                      },
                      "selfCheck": {
                        "description": "The self check properties.",
                        "type": "object",
                        "properties": {
                          "mode": {
                            "type": "string",
                            "description": "The toggle to enable/disable self check.",
                            "default": "Enabled",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "OperationalMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled",
                                  "description": "Enabled is equivalent to True"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled",
                                  "description": "Disabled is equivalent to False."
                                }
                              ]
                            }
                          },
                          "intervalSeconds": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The self check interval.",
                            "default": 30,
                            "minimum": 30,
                            "maximum": 300
                          },
                          "timeoutSeconds": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The timeout for self check.",
                            "default": 15,
                            "minimum": 5,
                            "maximum": 120
                          }
                        }
                      },
                      "traces": {
                        "description": "The trace properties.",
                        "type": "object",
                        "properties": {
                          "mode": {
                            "type": "string",
                            "description": "The toggle to enable/disable traces.",
                            "default": "Enabled",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "OperationalMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled",
                                  "description": "Enabled is equivalent to True"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled",
                                  "description": "Disabled is equivalent to False."
                                }
                              ]
                            }
                          },
                          "cacheSizeMegabytes": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The cache size in megabytes.",
                            "default": 16,
                            "minimum": 1,
                            "maximum": 128
                          },
                          "selfTracing": {
                            "description": "The self tracing properties.",
                            "type": "object",
                            "properties": {
                              "mode": {
                                "type": "string",
                                "description": "The toggle to enable/disable self tracing.",
                                "default": "Enabled",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "OperationalMode",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled",
                                      "description": "Enabled is equivalent to True"
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled",
                                      "description": "Disabled is equivalent to False."
                                    }
                                  ]
                                }
                              },
                              "intervalSeconds": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The self tracing interval.",
                                "default": 30,
                                "minimum": 1,
                                "maximum": 300
                              }
                            }
                          },
                          "spanChannelCapacity": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The span channel capacity.",
                            "default": 1000,
                            "minimum": 1000,
                            "maximum": 100000
                          }
                        }
                      }
                    }
                  },
                  "diskBackedMessageBuffer": {
                    "description": "Settings of Disk Backed Message Buffer.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "type": "object",
                    "properties": {
                      "maxSize": {
                        "type": "string",
                        "description": "The max size of the message buffer on disk. If a PVC template is specified using one of ephemeralVolumeClaimSpec or persistentVolumeClaimSpec, then this size is used as the request and limit sizes of that template. If neither ephemeralVolumeClaimSpec nor persistentVolumeClaimSpec are specified, then an emptyDir volume is mounted with this size as its limit. See <https://kubernetes.io/docs/concepts/storage/volumes/#emptydir> for details.",
                        "pattern": "^[0-9]+[KMGTPE]$"
                      },
                      "ephemeralVolumeClaimSpec": {
                        "description": "Use the specified persistent volume claim template to mount a \"generic ephemeral volume\" for the message buffer. See <https://kubernetes.io/docs/concepts/storage/ephemeral-volumes/#generic-ephemeral-volumes> for details.",
                        "type": "object",
                        "properties": {
                          "volumeName": {
                            "type": "string",
                            "description": "VolumeName is the binding reference to the PersistentVolume backing this claim."
                          },
                          "volumeMode": {
                            "type": "string",
                            "description": "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature."
                          },
                          "storageClassName": {
                            "type": "string",
                            "description": "Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"
                          },
                          "accessModes": {
                            "type": "array",
                            "description": "AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                            "items": {
                              "type": "string"
                            }
                          },
                          "dataSource": {
                            "description": "This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.",
                            "type": "object",
                            "properties": {
                              "apiGroup": {
                                "type": "string",
                                "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                              },
                              "kind": {
                                "type": "string",
                                "description": "Kind is the type of resource being referenced"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name is the name of resource being referenced"
                              }
                            },
                            "required": [
                              "kind",
                              "name"
                            ]
                          },
                          "dataSourceRef": {
                            "description": "Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.",
                            "type": "object",
                            "properties": {
                              "apiGroup": {
                                "type": "string",
                                "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                              },
                              "kind": {
                                "type": "string",
                                "description": "Kind is the type of resource being referenced"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name is the name of resource being referenced"
                              },
                              "namespace": {
                                "type": "string",
                                "description": "Namespace is the namespace of the resource being referenced. This field is required when the resource has a namespace."
                              }
                            },
                            "required": [
                              "kind",
                              "name"
                            ]
                          },
                          "resources": {
                            "description": "Resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                            "type": "object",
                            "properties": {
                              "limits": {
                                "type": "object",
                                "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "requests": {
                                "type": "object",
                                "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "claims": {
                                "type": "array",
                                "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.\n\nThis is an alpha field and requires enabling the DynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                                "items": {
                                  "type": "object",
                                  "description": "VolumeClaimResourceRequirementsClaims properties.",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Name of the resource. This must match the name of a resource in spec.resourceClaims."
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ]
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "selector": {
                            "description": "A label query over volumes to consider for binding.",
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "description": "MatchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                "items": {
                                  "type": "object",
                                  "description": "VolumeClaimSpecSelectorMatchExpressions properties",
                                  "properties": {
                                    "key": {
                                      "type": "string",
                                      "description": "key is the label key that the selector applies to."
                                    },
                                    "operator": {
                                      "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                      "type": "string",
                                      "enum": [
                                        "In",
                                        "NotIn",
                                        "Exists",
                                        "DoesNotExist"
                                      ],
                                      "x-ms-enum": {
                                        "name": "OperatorValues",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "In",
                                            "value": "In",
                                            "description": "In operator."
                                          },
                                          {
                                            "name": "NotIn",
                                            "value": "NotIn",
                                            "description": "NotIn operator."
                                          },
                                          {
                                            "name": "Exists",
                                            "value": "Exists",
                                            "description": "Exists operator."
                                          },
                                          {
                                            "name": "DoesNotExist",
                                            "value": "DoesNotExist",
                                            "description": "DoesNotExist operator."
                                          }
                                        ]
                                      }
                                    },
                                    "values": {
                                      "type": "array",
                                      "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "key",
                                    "operator"
                                  ]
                                },
                                "x-ms-identifiers": []
                              },
                              "matchLabels": {
                                "type": "object",
                                "description": "MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "persistentVolumeClaimSpec": {
                        "description": "Use the specified persistent volume claim template to mount a persistent volume for the message buffer.",
                        "type": "object",
                        "properties": {
                          "volumeName": {
                            "type": "string",
                            "description": "VolumeName is the binding reference to the PersistentVolume backing this claim."
                          },
                          "volumeMode": {
                            "type": "string",
                            "description": "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature."
                          },
                          "storageClassName": {
                            "type": "string",
                            "description": "Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"
                          },
                          "accessModes": {
                            "type": "array",
                            "description": "AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                            "items": {
                              "type": "string"
                            }
                          },
                          "dataSource": {
                            "description": "This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.",
                            "type": "object",
                            "properties": {
                              "apiGroup": {
                                "type": "string",
                                "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                              },
                              "kind": {
                                "type": "string",
                                "description": "Kind is the type of resource being referenced"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name is the name of resource being referenced"
                              }
                            },
                            "required": [
                              "kind",
                              "name"
                            ]
                          },
                          "dataSourceRef": {
                            "description": "Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.",
                            "type": "object",
                            "properties": {
                              "apiGroup": {
                                "type": "string",
                                "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                              },
                              "kind": {
                                "type": "string",
                                "description": "Kind is the type of resource being referenced"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name is the name of resource being referenced"
                              },
                              "namespace": {
                                "type": "string",
                                "description": "Namespace is the namespace of the resource being referenced. This field is required when the resource has a namespace."
                              }
                            },
                            "required": [
                              "kind",
                              "name"
                            ]
                          },
                          "resources": {
                            "description": "Resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                            "type": "object",
                            "properties": {
                              "limits": {
                                "type": "object",
                                "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "requests": {
                                "type": "object",
                                "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "claims": {
                                "type": "array",
                                "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.\n\nThis is an alpha field and requires enabling the DynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                                "items": {
                                  "type": "object",
                                  "description": "VolumeClaimResourceRequirementsClaims properties.",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Name of the resource. This must match the name of a resource in spec.resourceClaims."
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ]
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "selector": {
                            "description": "A label query over volumes to consider for binding.",
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "description": "MatchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                "items": {
                                  "type": "object",
                                  "description": "VolumeClaimSpecSelectorMatchExpressions properties",
                                  "properties": {
                                    "key": {
                                      "type": "string",
                                      "description": "key is the label key that the selector applies to."
                                    },
                                    "operator": {
                                      "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                      "type": "string",
                                      "enum": [
                                        "In",
                                        "NotIn",
                                        "Exists",
                                        "DoesNotExist"
                                      ],
                                      "x-ms-enum": {
                                        "name": "OperatorValues",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "In",
                                            "value": "In",
                                            "description": "In operator."
                                          },
                                          {
                                            "name": "NotIn",
                                            "value": "NotIn",
                                            "description": "NotIn operator."
                                          },
                                          {
                                            "name": "Exists",
                                            "value": "Exists",
                                            "description": "Exists operator."
                                          },
                                          {
                                            "name": "DoesNotExist",
                                            "value": "DoesNotExist",
                                            "description": "DoesNotExist operator."
                                          }
                                        ]
                                      }
                                    },
                                    "values": {
                                      "type": "array",
                                      "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "key",
                                    "operator"
                                  ]
                                },
                                "x-ms-identifiers": []
                              },
                              "matchLabels": {
                                "type": "object",
                                "description": "MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "maxSize"
                    ]
                  },
                  "generateResourceLimits": {
                    "description": "This setting controls whether Kubernetes CPU resource limits are requested. Increasing the number of replicas or workers proportionally increases the amount of CPU resources requested. If this setting is enabled and there are insufficient CPU resources, an error will be emitted.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "type": "object",
                    "properties": {
                      "cpu": {
                        "type": "string",
                        "description": "The toggle to enable/disable cpu resource limits.",
                        "default": "Enabled",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "name": "OperationalMode",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Enabled",
                              "value": "Enabled",
                              "description": "Enabled is equivalent to True"
                            },
                            {
                              "name": "Disabled",
                              "value": "Disabled",
                              "description": "Disabled is equivalent to False."
                            }
                          ]
                        }
                      }
                    }
                  },
                  "memoryProfile": {
                    "type": "string",
                    "description": "Memory profile of Broker.",
                    "default": "Medium",
                    "enum": [
                      "Tiny",
                      "Low",
                      "Medium",
                      "High"
                    ],
                    "x-ms-enum": {
                      "name": "BrokerMemoryProfile",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Tiny",
                          "value": "Tiny",
                          "description": "Tiny memory profile."
                        },
                        {
                          "name": "Low",
                          "value": "Low",
                          "description": "Low memory profile."
                        },
                        {
                          "name": "Medium",
                          "value": "Medium",
                          "description": "Medium memory profile."
                        },
                        {
                          "name": "High",
                          "value": "High",
                          "description": "High memory profile."
                        }
                      ]
                    },
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "persistence": {
                    "description": "The persistence settings of the Broker.",
                    "type": "object",
                    "properties": {
                      "maxSize": {
                        "type": "string",
                        "description": "The max size of the message buffer on disk. If a PVC template is specified using persistentVolumeClaimSpec Then this size is used as the request and limit sizes of that template. If a PVC template isn't specified Then local-path provisioner is requested with this size limit. Required.",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "persistentVolumeClaimSpec": {
                        "description": "Use the specified persistent volume claim template to mount a persistent volume. Same object as in diskBackedMessageBuffer, but with a limitation that access modes field must be set to `ReadWriteOncePod`.\n\nIf unset, a default PVC with default properties will be used. Among other things this PVC will use the cluster default storage class, which may or may not be using a local path provisioner. User is opting in to sub-optimal behavior if they leave this unset or set it without the storage class field, and their cluster default is not a local path class.",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "type": "object",
                        "properties": {
                          "volumeName": {
                            "type": "string",
                            "description": "VolumeName is the binding reference to the PersistentVolume backing this claim."
                          },
                          "volumeMode": {
                            "type": "string",
                            "description": "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature."
                          },
                          "storageClassName": {
                            "type": "string",
                            "description": "Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"
                          },
                          "accessModes": {
                            "type": "array",
                            "description": "AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                            "items": {
                              "type": "string"
                            }
                          },
                          "dataSource": {
                            "description": "This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.",
                            "type": "object",
                            "properties": {
                              "apiGroup": {
                                "type": "string",
                                "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                              },
                              "kind": {
                                "type": "string",
                                "description": "Kind is the type of resource being referenced"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name is the name of resource being referenced"
                              }
                            },
                            "required": [
                              "kind",
                              "name"
                            ]
                          },
                          "dataSourceRef": {
                            "description": "Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.",
                            "type": "object",
                            "properties": {
                              "apiGroup": {
                                "type": "string",
                                "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                              },
                              "kind": {
                                "type": "string",
                                "description": "Kind is the type of resource being referenced"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name is the name of resource being referenced"
                              },
                              "namespace": {
                                "type": "string",
                                "description": "Namespace is the namespace of the resource being referenced. This field is required when the resource has a namespace."
                              }
                            },
                            "required": [
                              "kind",
                              "name"
                            ]
                          },
                          "resources": {
                            "description": "Resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                            "type": "object",
                            "properties": {
                              "limits": {
                                "type": "object",
                                "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "requests": {
                                "type": "object",
                                "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "claims": {
                                "type": "array",
                                "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.\n\nThis is an alpha field and requires enabling the DynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                                "items": {
                                  "type": "object",
                                  "description": "VolumeClaimResourceRequirementsClaims properties.",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Name of the resource. This must match the name of a resource in spec.resourceClaims."
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ]
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "selector": {
                            "description": "A label query over volumes to consider for binding.",
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "description": "MatchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                "items": {
                                  "type": "object",
                                  "description": "VolumeClaimSpecSelectorMatchExpressions properties",
                                  "properties": {
                                    "key": {
                                      "type": "string",
                                      "description": "key is the label key that the selector applies to."
                                    },
                                    "operator": {
                                      "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                      "type": "string",
                                      "enum": [
                                        "In",
                                        "NotIn",
                                        "Exists",
                                        "DoesNotExist"
                                      ],
                                      "x-ms-enum": {
                                        "name": "OperatorValues",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "In",
                                            "value": "In",
                                            "description": "In operator."
                                          },
                                          {
                                            "name": "NotIn",
                                            "value": "NotIn",
                                            "description": "NotIn operator."
                                          },
                                          {
                                            "name": "Exists",
                                            "value": "Exists",
                                            "description": "Exists operator."
                                          },
                                          {
                                            "name": "DoesNotExist",
                                            "value": "DoesNotExist",
                                            "description": "DoesNotExist operator."
                                          }
                                        ]
                                      }
                                    },
                                    "values": {
                                      "type": "array",
                                      "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "required": [
                                    "key",
                                    "operator"
                                  ]
                                },
                                "x-ms-identifiers": []
                              },
                              "matchLabels": {
                                "type": "object",
                                "description": "MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "retain": {
                        "description": "Controls which topic's retained messages should be persisted to disk.",
                        "type": "object",
                        "properties": {
                          "mode": {
                            "description": "'All' to persist all retain messages, 'None' to not persist any, 'Custom' to persist only the specified topics.",
                            "type": "string",
                            "enum": [
                              "All",
                              "None",
                              "Custom"
                            ],
                            "x-ms-enum": {
                              "name": "BrokerPersistencePolicyMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "All",
                                  "value": "All",
                                  "description": "Policy mode for All."
                                },
                                {
                                  "name": "None",
                                  "value": "None",
                                  "description": "Policy mode for None."
                                },
                                {
                                  "name": "Custom",
                                  "value": "Custom",
                                  "description": "Indicates that the policy is a custom policy."
                                }
                              ]
                            }
                          }
                        },
                        "discriminator": "mode",
                        "required": [
                          "mode"
                        ]
                      },
                      "stateStore": {
                        "description": "Controls which keys should be persisted to disk for the state store.",
                        "type": "object",
                        "properties": {
                          "mode": {
                            "description": "'All' to persist all keys, 'None' to not persist any, 'Custom' to persist only the specified keys.",
                            "type": "string",
                            "enum": [
                              "All",
                              "None",
                              "Custom"
                            ],
                            "x-ms-enum": {
                              "name": "BrokerPersistencePolicyMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "All",
                                  "value": "All",
                                  "description": "Policy mode for All."
                                },
                                {
                                  "name": "None",
                                  "value": "None",
                                  "description": "Policy mode for None."
                                },
                                {
                                  "name": "Custom",
                                  "value": "Custom",
                                  "description": "Indicates that the policy is a custom policy."
                                }
                              ]
                            }
                          }
                        },
                        "discriminator": "mode",
                        "required": [
                          "mode"
                        ]
                      },
                      "subscriberQueue": {
                        "description": "Controls which subscriber message queues should be persisted to disk. Important: to facilitate reconnection, session state metadata are ALWAYS written to disk if any persistence setting is specified, even if this section isn't set.",
                        "type": "object",
                        "properties": {
                          "mode": {
                            "description": "'All' to persist all subscriber queues, 'None' to not persist any, 'Custom' to persist only the specified queues.",
                            "type": "string",
                            "enum": [
                              "All",
                              "None",
                              "Custom"
                            ],
                            "x-ms-enum": {
                              "name": "BrokerPersistencePolicyMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "All",
                                  "value": "All",
                                  "description": "Policy mode for All."
                                },
                                {
                                  "name": "None",
                                  "value": "None",
                                  "description": "Policy mode for None."
                                },
                                {
                                  "name": "Custom",
                                  "value": "Custom",
                                  "description": "Indicates that the policy is a custom policy."
                                }
                              ]
                            }
                          }
                        },
                        "discriminator": "mode",
                        "required": [
                          "mode"
                        ]
                      },
                      "encryption": {
                        "description": "Controls settings related to encryption of the persistence database. Optional, defaults to enabling encryption.",
                        "type": "object",
                        "properties": {
                          "mode": {
                            "type": "string",
                            "description": "Mode properties",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "OperationalMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled",
                                  "description": "Enabled is equivalent to True"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled",
                                  "description": "Disabled is equivalent to False."
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "mode"
                        ]
                      }
                    },
                    "required": [
                      "maxSize"
                    ]
                  },
                  "provisioningState": {
                    "description": "The status of the last operation.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Provisioning",
                      "Updating",
                      "Deleting",
                      "Accepted"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Provisioning",
                          "value": "Provisioning",
                          "description": "Resource is getting provisioned."
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "Resource is Updating."
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "Resource is Deleting."
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "Resource has been Accepted."
                        }
                      ]
                    }
                  },
                  "healthState": {
                    "type": "string",
                    "description": "The health state of the resource.",
                    "default": "Unknown",
                    "enum": [
                      "Available",
                      "Degraded",
                      "Unavailable",
                      "Unknown"
                    ],
                    "x-ms-enum": {
                      "name": "ResourceHealthState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Available",
                          "value": "Available",
                          "description": "Resource is Available and functioning as expected."
                        },
                        {
                          "name": "Degraded",
                          "value": "Degraded",
                          "description": "Resource health is degraded."
                        },
                        {
                          "name": "Unavailable",
                          "value": "Unavailable",
                          "description": "Resource is not functioning as expected."
                        },
                        {
                          "name": "Unknown",
                          "value": "Unknown",
                          "description": "Resource state is unknown."
                        }
                      ]
                    },
                    "readOnly": true
                  }
                }
              },
              "extendedLocation": {
                "description": "Edge location of the resource.",
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the extended location."
                  },
                  "type": {
                    "description": "Type of ExtendedLocation.",
                    "type": "string",
                    "enum": [
                      "CustomLocation"
                    ],
                    "x-ms-enum": {
                      "name": "ExtendedLocationType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "CustomLocation",
                          "value": "CustomLocation",
                          "description": "CustomLocation type"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "name",
                  "type"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "BrokerResourceRule": {
      "type": "object",
      "description": "Broker Resource Rule properties. This defines the objects that represent the actions or topics, such as - method.Connect, method.Publish, etc.",
      "properties": {
        "method": {
          "description": "Give access for a Broker method (i.e., Connect, Subscribe, or Publish).",
          "type": "string",
          "enum": [
            "Connect",
            "Publish",
            "Subscribe"
          ],
          "x-ms-enum": {
            "name": "BrokerResourceDefinitionMethods",
            "modelAsString": true,
            "values": [
              {
                "name": "Connect",
                "value": "Connect",
                "description": "Allowed Connecting to Broker"
              },
              {
                "name": "Publish",
                "value": "Publish",
                "description": "Allowed Publishing to Broker"
              },
              {
                "name": "Subscribe",
                "value": "Subscribe",
                "description": "Allowed Subscribing to Broker"
              }
            ]
          }
        },
        "clientIds": {
          "type": "array",
          "description": "A list of client IDs that match the clients. The client IDs are case-sensitive and must match the client IDs provided by the clients during connection. This subfield may be set if the method is Connect.",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "topics": {
          "type": "array",
          "description": "A list of topics or topic patterns that match the topics that the clients can publish or subscribe to. This subfield is required if the method is Publish or Subscribe.",
          "default": [],
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "method"
      ]
    },
    "BrokerRetainMessagesCustomPolicy": {
      "type": "object",
      "description": "Custom Broker Retain Message Policy.",
      "properties": {
        "retainSettings": {
          "description": "Settings for the policy.",
          "type": "object",
          "properties": {
            "topics": {
              "type": "array",
              "description": "List of topics under which retained messages would be persisted to disk. Wildcards # and + supported.",
              "items": {
                "type": "string"
              }
            },
            "dynamic": {
              "description": "Controls if MQTT clients can request for disk persistence via `MQTTv5` user property. Works in addition to other groups (logical OR).",
              "type": "object",
              "properties": {
                "mode": {
                  "type": "string",
                  "description": "Mode properties",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "OperationalMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled",
                        "description": "Enabled is equivalent to True"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled",
                        "description": "Disabled is equivalent to False."
                      }
                    ]
                  }
                }
              },
              "required": [
                "mode"
              ]
            }
          }
        }
      },
      "required": [
        "retainSettings"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "Broker Retain policy properties.",
          "properties": {
            "mode": {
              "description": "'All' to persist all retain messages, 'None' to not persist any, 'Custom' to persist only the specified topics.",
              "type": "string",
              "enum": [
                "All",
                "None",
                "Custom"
              ],
              "x-ms-enum": {
                "name": "BrokerPersistencePolicyMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "All",
                    "value": "All",
                    "description": "Policy mode for All."
                  },
                  {
                    "name": "None",
                    "value": "None",
                    "description": "Policy mode for None."
                  },
                  {
                    "name": "Custom",
                    "value": "Custom",
                    "description": "Indicates that the policy is a custom policy."
                  }
                ]
              }
            }
          },
          "discriminator": "mode",
          "required": [
            "mode"
          ]
        }
      ],
      "x-ms-discriminator-value": "Custom"
    },
    "BrokerRetainMessagesDynamic": {
      "type": "object",
      "description": "Dynamic settings of BrokerRetainMessagesCustomPolicy.",
      "properties": {
        "mode": {
          "type": "string",
          "description": "Mode properties",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "OperationalMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "Enabled is equivalent to True"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "Disabled is equivalent to False."
              }
            ]
          }
        }
      },
      "required": [
        "mode"
      ]
    },
    "BrokerRetainMessagesPolicy": {
      "type": "object",
      "description": "Broker Retain policy properties.",
      "properties": {
        "mode": {
          "description": "'All' to persist all retain messages, 'None' to not persist any, 'Custom' to persist only the specified topics.",
          "type": "string",
          "enum": [
            "All",
            "None",
            "Custom"
          ],
          "x-ms-enum": {
            "name": "BrokerPersistencePolicyMode",
            "modelAsString": true,
            "values": [
              {
                "name": "All",
                "value": "All",
                "description": "Policy mode for All."
              },
              {
                "name": "None",
                "value": "None",
                "description": "Policy mode for None."
              },
              {
                "name": "Custom",
                "value": "Custom",
                "description": "Indicates that the policy is a custom policy."
              }
            ]
          }
        }
      },
      "discriminator": "mode",
      "required": [
        "mode"
      ]
    },
    "BrokerRetainMessagesSettings": {
      "type": "object",
      "description": "Broker Retain Messages properties.",
      "properties": {
        "topics": {
          "type": "array",
          "description": "List of topics under which retained messages would be persisted to disk. Wildcards # and + supported.",
          "items": {
            "type": "string"
          }
        },
        "dynamic": {
          "description": "Controls if MQTT clients can request for disk persistence via `MQTTv5` user property. Works in addition to other groups (logical OR).",
          "type": "object",
          "properties": {
            "mode": {
              "type": "string",
              "description": "Mode properties",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "OperationalMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled",
                    "description": "Enabled is equivalent to True"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "Disabled is equivalent to False."
                  }
                ]
              }
            }
          },
          "required": [
            "mode"
          ]
        }
      }
    },
    "BrokerStateStoreCustomPolicy": {
      "type": "object",
      "description": "Broker State Store Custom Policy.",
      "properties": {
        "stateStoreSettings": {
          "description": "Settings for the policy.",
          "type": "object",
          "properties": {
            "stateStoreResources": {
              "type": "array",
              "description": "List of key and key type to persist to disk.",
              "items": {
                "type": "object",
                "description": "Broker State Store Policy Resources properties.",
                "properties": {
                  "keyType": {
                    "description": "The key to persist to disk.",
                    "type": "string",
                    "enum": [
                      "Pattern",
                      "String",
                      "Binary"
                    ],
                    "x-ms-enum": {
                      "name": "BrokerStateStoreKeyType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Pattern",
                          "value": "Pattern",
                          "description": "Used for glob-style pattern matching."
                        },
                        {
                          "name": "String",
                          "value": "String",
                          "description": "Used to do exact match, for example, when a key contains characters that might be otherwise matched as a pattern (*, ?, [0-9])."
                        },
                        {
                          "name": "Binary",
                          "value": "Binary",
                          "description": "Used to match a binary key."
                        }
                      ]
                    }
                  },
                  "keys": {
                    "type": "array",
                    "description": "List of keys to persist to disk, required.",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "keyType",
                  "keys"
                ]
              },
              "x-ms-identifiers": []
            },
            "dynamic": {
              "description": "Controls if MQTT clients can request for disk persistence via `MQTTv5` user property. Works in addition to other groups (logical OR).",
              "type": "object",
              "properties": {
                "mode": {
                  "type": "string",
                  "description": "Mode properties",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "OperationalMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled",
                        "description": "Enabled is equivalent to True"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled",
                        "description": "Disabled is equivalent to False."
                      }
                    ]
                  }
                }
              },
              "required": [
                "mode"
              ]
            }
          }
        }
      },
      "required": [
        "stateStoreSettings"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "Broker State Store Policy.",
          "properties": {
            "mode": {
              "description": "'All' to persist all keys, 'None' to not persist any, 'Custom' to persist only the specified keys.",
              "type": "string",
              "enum": [
                "All",
                "None",
                "Custom"
              ],
              "x-ms-enum": {
                "name": "BrokerPersistencePolicyMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "All",
                    "value": "All",
                    "description": "Policy mode for All."
                  },
                  {
                    "name": "None",
                    "value": "None",
                    "description": "Policy mode for None."
                  },
                  {
                    "name": "Custom",
                    "value": "Custom",
                    "description": "Indicates that the policy is a custom policy."
                  }
                ]
              }
            }
          },
          "discriminator": "mode",
          "required": [
            "mode"
          ]
        }
      ],
      "x-ms-discriminator-value": "Custom"
    },
    "BrokerStateStoreDynamic": {
      "type": "object",
      "description": "Dynamic settings of BrokerStateStoreCustomPolicy.",
      "properties": {
        "mode": {
          "type": "string",
          "description": "Mode properties",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "OperationalMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "Enabled is equivalent to True"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "Disabled is equivalent to False."
              }
            ]
          }
        }
      },
      "required": [
        "mode"
      ]
    },
    "BrokerStateStoreKeyType": {
      "type": "string",
      "description": "Broker State Store Key Type properties.",
      "enum": [
        "Pattern",
        "String",
        "Binary"
      ],
      "x-ms-enum": {
        "name": "BrokerStateStoreKeyType",
        "modelAsString": true,
        "values": [
          {
            "name": "Pattern",
            "value": "Pattern",
            "description": "Used for glob-style pattern matching."
          },
          {
            "name": "String",
            "value": "String",
            "description": "Used to do exact match, for example, when a key contains characters that might be otherwise matched as a pattern (*, ?, [0-9])."
          },
          {
            "name": "Binary",
            "value": "Binary",
            "description": "Used to match a binary key."
          }
        ]
      }
    },
    "BrokerStateStorePolicy": {
      "type": "object",
      "description": "Broker State Store Policy.",
      "properties": {
        "mode": {
          "description": "'All' to persist all keys, 'None' to not persist any, 'Custom' to persist only the specified keys.",
          "type": "string",
          "enum": [
            "All",
            "None",
            "Custom"
          ],
          "x-ms-enum": {
            "name": "BrokerPersistencePolicyMode",
            "modelAsString": true,
            "values": [
              {
                "name": "All",
                "value": "All",
                "description": "Policy mode for All."
              },
              {
                "name": "None",
                "value": "None",
                "description": "Policy mode for None."
              },
              {
                "name": "Custom",
                "value": "Custom",
                "description": "Indicates that the policy is a custom policy."
              }
            ]
          }
        }
      },
      "discriminator": "mode",
      "required": [
        "mode"
      ]
    },
    "BrokerStateStorePolicyResources": {
      "type": "object",
      "description": "Broker State Store Policy Resources properties.",
      "properties": {
        "keyType": {
          "description": "The key to persist to disk.",
          "type": "string",
          "enum": [
            "Pattern",
            "String",
            "Binary"
          ],
          "x-ms-enum": {
            "name": "BrokerStateStoreKeyType",
            "modelAsString": true,
            "values": [
              {
                "name": "Pattern",
                "value": "Pattern",
                "description": "Used for glob-style pattern matching."
              },
              {
                "name": "String",
                "value": "String",
                "description": "Used to do exact match, for example, when a key contains characters that might be otherwise matched as a pattern (*, ?, [0-9])."
              },
              {
                "name": "Binary",
                "value": "Binary",
                "description": "Used to match a binary key."
              }
            ]
          }
        },
        "keys": {
          "type": "array",
          "description": "List of keys to persist to disk, required.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "keyType",
        "keys"
      ]
    },
    "BrokerStateStorePolicySettings": {
      "type": "object",
      "description": "Broker State Store Custom Policy Settings.",
      "properties": {
        "stateStoreResources": {
          "type": "array",
          "description": "List of key and key type to persist to disk.",
          "items": {
            "type": "object",
            "description": "Broker State Store Policy Resources properties.",
            "properties": {
              "keyType": {
                "description": "The key to persist to disk.",
                "type": "string",
                "enum": [
                  "Pattern",
                  "String",
                  "Binary"
                ],
                "x-ms-enum": {
                  "name": "BrokerStateStoreKeyType",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Pattern",
                      "value": "Pattern",
                      "description": "Used for glob-style pattern matching."
                    },
                    {
                      "name": "String",
                      "value": "String",
                      "description": "Used to do exact match, for example, when a key contains characters that might be otherwise matched as a pattern (*, ?, [0-9])."
                    },
                    {
                      "name": "Binary",
                      "value": "Binary",
                      "description": "Used to match a binary key."
                    }
                  ]
                }
              },
              "keys": {
                "type": "array",
                "description": "List of keys to persist to disk, required.",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "keyType",
              "keys"
            ]
          },
          "x-ms-identifiers": []
        },
        "dynamic": {
          "description": "Controls if MQTT clients can request for disk persistence via `MQTTv5` user property. Works in addition to other groups (logical OR).",
          "type": "object",
          "properties": {
            "mode": {
              "type": "string",
              "description": "Mode properties",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "OperationalMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled",
                    "description": "Enabled is equivalent to True"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "Disabled is equivalent to False."
                  }
                ]
              }
            }
          },
          "required": [
            "mode"
          ]
        }
      }
    },
    "BrokerSubscriberQueueCustomPolicy": {
      "type": "object",
      "description": "Custom Subscriber Queue Policy Properties.",
      "properties": {
        "subscriberQueueSettings": {
          "description": "Custom policy, required if mode is Custom. Subscriber queues from all groups are persisted to disk (logical OR).",
          "type": "object",
          "properties": {
            "subscriberClientIds": {
              "type": "array",
              "description": "List of client IDs of the subscribers, wildcard * supported.",
              "items": {
                "type": "string"
              }
            },
            "dynamic": {
              "description": "Controls if MQTT clients can request for disk persistence via `MQTTv5` user property. Works in addition to other groups (logical OR).",
              "type": "object",
              "properties": {
                "mode": {
                  "type": "string",
                  "description": "Mode properties",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "OperationalMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled",
                        "description": "Enabled is equivalent to True"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled",
                        "description": "Disabled is equivalent to False."
                      }
                    ]
                  }
                }
              },
              "required": [
                "mode"
              ]
            }
          }
        }
      },
      "required": [
        "subscriberQueueSettings"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "Broker Subscriber Queue Policy properties.",
          "properties": {
            "mode": {
              "description": "'All' to persist all subscriber queues, 'None' to not persist any, 'Custom' to persist only the specified queues.",
              "type": "string",
              "enum": [
                "All",
                "None",
                "Custom"
              ],
              "x-ms-enum": {
                "name": "BrokerPersistencePolicyMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "All",
                    "value": "All",
                    "description": "Policy mode for All."
                  },
                  {
                    "name": "None",
                    "value": "None",
                    "description": "Policy mode for None."
                  },
                  {
                    "name": "Custom",
                    "value": "Custom",
                    "description": "Indicates that the policy is a custom policy."
                  }
                ]
              }
            }
          },
          "discriminator": "mode",
          "required": [
            "mode"
          ]
        }
      ],
      "x-ms-discriminator-value": "Custom"
    },
    "BrokerSubscriberQueueCustomPolicySettings": {
      "type": "object",
      "description": "Broker Subscriber Queue Custom Policy properties.",
      "properties": {
        "subscriberClientIds": {
          "type": "array",
          "description": "List of client IDs of the subscribers, wildcard * supported.",
          "items": {
            "type": "string"
          }
        },
        "dynamic": {
          "description": "Controls if MQTT clients can request for disk persistence via `MQTTv5` user property. Works in addition to other groups (logical OR).",
          "type": "object",
          "properties": {
            "mode": {
              "type": "string",
              "description": "Mode properties",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "OperationalMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled",
                    "description": "Enabled is equivalent to True"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "Disabled is equivalent to False."
                  }
                ]
              }
            }
          },
          "required": [
            "mode"
          ]
        }
      }
    },
    "BrokerSubscriberQueueDynamic": {
      "type": "object",
      "description": "Dynamic settings of BrokerSubscriberQueueCustomPolicy.",
      "properties": {
        "mode": {
          "type": "string",
          "description": "Mode properties",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "OperationalMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "Enabled is equivalent to True"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "Disabled is equivalent to False."
              }
            ]
          }
        }
      },
      "required": [
        "mode"
      ]
    },
    "BrokerSubscriberQueuePolicy": {
      "type": "object",
      "description": "Broker Subscriber Queue Policy properties.",
      "properties": {
        "mode": {
          "description": "'All' to persist all subscriber queues, 'None' to not persist any, 'Custom' to persist only the specified queues.",
          "type": "string",
          "enum": [
            "All",
            "None",
            "Custom"
          ],
          "x-ms-enum": {
            "name": "BrokerPersistencePolicyMode",
            "modelAsString": true,
            "values": [
              {
                "name": "All",
                "value": "All",
                "description": "Policy mode for All."
              },
              {
                "name": "None",
                "value": "None",
                "description": "Policy mode for None."
              },
              {
                "name": "Custom",
                "value": "Custom",
                "description": "Indicates that the policy is a custom policy."
              }
            ]
          }
        }
      },
      "discriminator": "mode",
      "required": [
        "mode"
      ]
    },
    "Cardinality": {
      "type": "object",
      "description": "Cardinality properties",
      "properties": {
        "backendChain": {
          "description": "The backend broker desired properties",
          "type": "object",
          "properties": {
            "partitions": {
              "type": "integer",
              "format": "int32",
              "description": "The desired number of physical backend partitions.",
              "minimum": 1,
              "maximum": 16
            },
            "redundancyFactor": {
              "type": "integer",
              "format": "int32",
              "description": "The desired numbers of backend replicas (pods) in a physical partition.",
              "minimum": 1,
              "maximum": 5
            },
            "workers": {
              "type": "integer",
              "format": "int32",
              "description": "Number of logical backend workers per replica (pod).",
              "default": 1,
              "minimum": 1,
              "maximum": 16
            }
          },
          "required": [
            "partitions",
            "redundancyFactor"
          ]
        },
        "frontend": {
          "description": "The frontend desired properties",
          "type": "object",
          "properties": {
            "replicas": {
              "type": "integer",
              "format": "int32",
              "description": "The desired number of frontend instances (pods).",
              "minimum": 1,
              "maximum": 16
            },
            "workers": {
              "type": "integer",
              "format": "int32",
              "description": "Number of logical frontend workers per instance (pod).",
              "default": 2,
              "minimum": 1,
              "maximum": 16
            }
          },
          "required": [
            "replicas"
          ]
        }
      },
      "required": [
        "backendChain",
        "frontend"
      ]
    },
    "CertManagerCertOptions": {
      "type": "object",
      "description": "Cert Manager Cert properties",
      "properties": {
        "duration": {
          "type": "string",
          "description": "Lifetime of certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."
        },
        "renewBefore": {
          "type": "string",
          "description": "When to begin renewing certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."
        },
        "privateKey": {
          "description": "Configuration of certificate private key.",
          "type": "object",
          "properties": {
            "algorithm": {
              "description": "algorithm for private key.",
              "type": "string",
              "enum": [
                "Ec256",
                "Ec384",
                "Ec521",
                "Ed25519",
                "Rsa2048",
                "Rsa4096",
                "Rsa8192"
              ],
              "x-ms-enum": {
                "name": "PrivateKeyAlgorithm",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Ec256",
                    "value": "Ec256",
                    "description": "Algorithm - ec256."
                  },
                  {
                    "name": "Ec384",
                    "value": "Ec384",
                    "description": "Algorithm - ec384."
                  },
                  {
                    "name": "Ec521",
                    "value": "Ec521",
                    "description": "Algorithm - ec521."
                  },
                  {
                    "name": "Ed25519",
                    "value": "Ed25519",
                    "description": "Algorithm - ed25519."
                  },
                  {
                    "name": "Rsa2048",
                    "value": "Rsa2048",
                    "description": "Algorithm - rsa2048."
                  },
                  {
                    "name": "Rsa4096",
                    "value": "Rsa4096",
                    "description": "Algorithm - rsa4096."
                  },
                  {
                    "name": "Rsa8192",
                    "value": "Rsa8192",
                    "description": "Algorithm - rsa8192."
                  }
                ]
              }
            },
            "rotationPolicy": {
              "description": "cert-manager private key rotationPolicy.",
              "type": "string",
              "enum": [
                "Always",
                "Never"
              ],
              "x-ms-enum": {
                "name": "PrivateKeyRotationPolicy",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Always",
                    "value": "Always",
                    "description": "Rotation Policy - Always."
                  },
                  {
                    "name": "Never",
                    "value": "Never",
                    "description": "Rotation Policy - Never."
                  }
                ]
              }
            }
          },
          "required": [
            "algorithm",
            "rotationPolicy"
          ]
        }
      },
      "required": [
        "duration",
        "renewBefore",
        "privateKey"
      ]
    },
    "CertManagerCertificateSpec": {
      "type": "object",
      "description": "Automatic TLS server certificate management with cert-manager",
      "properties": {
        "duration": {
          "type": "string",
          "description": "Lifetime of certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."
        },
        "secretName": {
          "type": "string",
          "description": "Secret for storing server certificate. Any existing data will be overwritten. This is a reference to the secret through an identifying name, not the secret itself."
        },
        "renewBefore": {
          "type": "string",
          "description": "When to begin renewing certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."
        },
        "issuerRef": {
          "description": "cert-manager issuerRef.",
          "type": "object",
          "properties": {
            "group": {
              "type": "string",
              "description": "group of issuer.",
              "default": "cert-manager.io"
            },
            "kind": {
              "description": "kind of issuer (Issuer or ClusterIssuer).",
              "type": "string",
              "enum": [
                "Issuer",
                "ClusterIssuer"
              ],
              "x-ms-enum": {
                "name": "CertManagerIssuerKind",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Issuer",
                    "value": "Issuer",
                    "description": "Issuer kind."
                  },
                  {
                    "name": "ClusterIssuer",
                    "value": "ClusterIssuer",
                    "description": "ClusterIssuer kind."
                  }
                ]
              }
            },
            "name": {
              "type": "string",
              "description": "name of issuer."
            }
          },
          "required": [
            "group",
            "kind",
            "name"
          ]
        },
        "privateKey": {
          "description": "Type of certificate private key.",
          "type": "object",
          "properties": {
            "algorithm": {
              "description": "algorithm for private key.",
              "type": "string",
              "enum": [
                "Ec256",
                "Ec384",
                "Ec521",
                "Ed25519",
                "Rsa2048",
                "Rsa4096",
                "Rsa8192"
              ],
              "x-ms-enum": {
                "name": "PrivateKeyAlgorithm",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Ec256",
                    "value": "Ec256",
                    "description": "Algorithm - ec256."
                  },
                  {
                    "name": "Ec384",
                    "value": "Ec384",
                    "description": "Algorithm - ec384."
                  },
                  {
                    "name": "Ec521",
                    "value": "Ec521",
                    "description": "Algorithm - ec521."
                  },
                  {
                    "name": "Ed25519",
                    "value": "Ed25519",
                    "description": "Algorithm - ed25519."
                  },
                  {
                    "name": "Rsa2048",
                    "value": "Rsa2048",
                    "description": "Algorithm - rsa2048."
                  },
                  {
                    "name": "Rsa4096",
                    "value": "Rsa4096",
                    "description": "Algorithm - rsa4096."
                  },
                  {
                    "name": "Rsa8192",
                    "value": "Rsa8192",
                    "description": "Algorithm - rsa8192."
                  }
                ]
              }
            },
            "rotationPolicy": {
              "description": "cert-manager private key rotationPolicy.",
              "type": "string",
              "enum": [
                "Always",
                "Never"
              ],
              "x-ms-enum": {
                "name": "PrivateKeyRotationPolicy",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Always",
                    "value": "Always",
                    "description": "Rotation Policy - Always."
                  },
                  {
                    "name": "Never",
                    "value": "Never",
                    "description": "Rotation Policy - Never."
                  }
                ]
              }
            }
          },
          "required": [
            "algorithm",
            "rotationPolicy"
          ]
        },
        "san": {
          "description": "Additional Subject Alternative Names (SANs) to include in the certificate.",
          "type": "object",
          "properties": {
            "dns": {
              "type": "array",
              "description": "DNS SANs.",
              "default": [],
              "items": {
                "type": "string"
              }
            },
            "ip": {
              "type": "array",
              "description": "IP address SANs.",
              "default": [],
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "dns",
            "ip"
          ]
        }
      },
      "required": [
        "issuerRef"
      ]
    },
    "CertManagerIssuerKind": {
      "type": "string",
      "description": "CertManagerIssuerKind properties",
      "enum": [
        "Issuer",
        "ClusterIssuer"
      ],
      "x-ms-enum": {
        "name": "CertManagerIssuerKind",
        "modelAsString": true,
        "values": [
          {
            "name": "Issuer",
            "value": "Issuer",
            "description": "Issuer kind."
          },
          {
            "name": "ClusterIssuer",
            "value": "ClusterIssuer",
            "description": "ClusterIssuer kind."
          }
        ]
      }
    },
    "CertManagerIssuerRef": {
      "type": "object",
      "description": "Cert-Manager issuerRef properties",
      "properties": {
        "group": {
          "type": "string",
          "description": "group of issuer.",
          "default": "cert-manager.io"
        },
        "kind": {
          "description": "kind of issuer (Issuer or ClusterIssuer).",
          "type": "string",
          "enum": [
            "Issuer",
            "ClusterIssuer"
          ],
          "x-ms-enum": {
            "name": "CertManagerIssuerKind",
            "modelAsString": true,
            "values": [
              {
                "name": "Issuer",
                "value": "Issuer",
                "description": "Issuer kind."
              },
              {
                "name": "ClusterIssuer",
                "value": "ClusterIssuer",
                "description": "ClusterIssuer kind."
              }
            ]
          }
        },
        "name": {
          "type": "string",
          "description": "name of issuer."
        }
      },
      "required": [
        "group",
        "kind",
        "name"
      ]
    },
    "CertManagerPrivateKey": {
      "type": "object",
      "description": "Cert Manager private key properties",
      "properties": {
        "algorithm": {
          "description": "algorithm for private key.",
          "type": "string",
          "enum": [
            "Ec256",
            "Ec384",
            "Ec521",
            "Ed25519",
            "Rsa2048",
            "Rsa4096",
            "Rsa8192"
          ],
          "x-ms-enum": {
            "name": "PrivateKeyAlgorithm",
            "modelAsString": true,
            "values": [
              {
                "name": "Ec256",
                "value": "Ec256",
                "description": "Algorithm - ec256."
              },
              {
                "name": "Ec384",
                "value": "Ec384",
                "description": "Algorithm - ec384."
              },
              {
                "name": "Ec521",
                "value": "Ec521",
                "description": "Algorithm - ec521."
              },
              {
                "name": "Ed25519",
                "value": "Ed25519",
                "description": "Algorithm - ed25519."
              },
              {
                "name": "Rsa2048",
                "value": "Rsa2048",
                "description": "Algorithm - rsa2048."
              },
              {
                "name": "Rsa4096",
                "value": "Rsa4096",
                "description": "Algorithm - rsa4096."
              },
              {
                "name": "Rsa8192",
                "value": "Rsa8192",
                "description": "Algorithm - rsa8192."
              }
            ]
          }
        },
        "rotationPolicy": {
          "description": "cert-manager private key rotationPolicy.",
          "type": "string",
          "enum": [
            "Always",
            "Never"
          ],
          "x-ms-enum": {
            "name": "PrivateKeyRotationPolicy",
            "modelAsString": true,
            "values": [
              {
                "name": "Always",
                "value": "Always",
                "description": "Rotation Policy - Always."
              },
              {
                "name": "Never",
                "value": "Never",
                "description": "Rotation Policy - Never."
              }
            ]
          }
        }
      },
      "required": [
        "algorithm",
        "rotationPolicy"
      ]
    },
    "ClientConfig": {
      "type": "object",
      "description": "The settings of Client Config.",
      "properties": {
        "maxSessionExpirySeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Upper bound of Session Expiry Interval, in seconds.",
          "minimum": 1,
          "maximum": 4294967295
        },
        "maxMessageExpirySeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Upper bound of Message Expiry Interval, in seconds.",
          "minimum": 1,
          "maximum": 4294967295
        },
        "maxPacketSizeBytes": {
          "type": "integer",
          "format": "int32",
          "description": "Max message size for a packet in Bytes.",
          "minimum": 1,
          "maximum": 268435456
        },
        "subscriberQueueLimit": {
          "description": "The limit on the number of queued messages for a subscriber.",
          "type": "object",
          "properties": {
            "length": {
              "type": "integer",
              "format": "int64",
              "description": "The maximum length of the queue before messages start getting dropped.",
              "minimum": 1
            },
            "strategy": {
              "type": "string",
              "description": "The strategy to use for dropping messages from the queue.",
              "default": "None",
              "enum": [
                "None",
                "DropOldest"
              ],
              "x-ms-enum": {
                "name": "SubscriberMessageDropStrategy",
                "modelAsString": true,
                "values": [
                  {
                    "name": "None",
                    "value": "None",
                    "description": "Messages are never dropped."
                  },
                  {
                    "name": "DropOldest",
                    "value": "DropOldest",
                    "description": "The oldest message is dropped."
                  }
                ]
              }
            }
          }
        },
        "maxReceiveMaximum": {
          "type": "integer",
          "format": "int32",
          "description": "Upper bound of Receive Maximum that a client can request in the CONNECT packet.",
          "minimum": 1,
          "maximum": 65535
        },
        "maxKeepAliveSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Upper bound of a client's Keep Alive, in seconds.",
          "minimum": 0,
          "maximum": 65535
        }
      }
    },
    "CloudEventAttributeType": {
      "type": "string",
      "description": "How to map events to the cloud.",
      "enum": [
        "Propagate",
        "CreateOrRemap"
      ],
      "x-ms-enum": {
        "name": "CloudEventAttributeType",
        "modelAsString": true,
        "values": [
          {
            "name": "Propagate",
            "value": "Propagate",
            "description": "Propagate type"
          },
          {
            "name": "CreateOrRemap",
            "value": "CreateOrRemap",
            "description": "CreateOrRemap type"
          }
        ]
      }
    },
    "DataExplorerAuthMethod": {
      "x-nullable": false,
      "type": "string",
      "description": "Managed Identity Method",
      "enum": [
        "SystemAssignedManagedIdentity",
        "UserAssignedManagedIdentity"
      ],
      "x-ms-enum": {
        "name": "ManagedIdentityMethod",
        "modelAsString": true,
        "values": [
          {
            "name": "SystemAssignedManagedIdentity",
            "value": "SystemAssignedManagedIdentity",
            "description": "SystemAssignedManagedIdentity type"
          },
          {
            "name": "UserAssignedManagedIdentity",
            "value": "UserAssignedManagedIdentity",
            "description": "UserAssignedManagedIdentity type"
          }
        ]
      }
    },
    "DataLakeStorageAuthMethod": {
      "type": "string",
      "description": "DataflowEndpoint Data Lake Storage Authentication Method properties",
      "enum": [
        "SystemAssignedManagedIdentity",
        "UserAssignedManagedIdentity",
        "AccessToken"
      ],
      "x-ms-enum": {
        "name": "DataLakeStorageAuthMethod",
        "modelAsString": true,
        "values": [
          {
            "name": "SystemAssignedManagedIdentity",
            "value": "SystemAssignedManagedIdentity",
            "description": "SystemAssignedManagedIdentity type"
          },
          {
            "name": "UserAssignedManagedIdentity",
            "value": "UserAssignedManagedIdentity",
            "description": "UserAssignedManagedIdentity type"
          },
          {
            "name": "AccessToken",
            "value": "AccessToken",
            "description": "AccessToken Option"
          }
        ]
      }
    },
    "DataflowBuiltInTransformationDataset": {
      "type": "object",
      "description": "Dataflow BuiltIn Transformation dataset properties",
      "properties": {
        "key": {
          "type": "string",
          "description": "The key of the dataset.",
          "maxLength": 64
        },
        "description": {
          "type": "string",
          "description": "A user provided optional description of the dataset.",
          "maxLength": 256
        },
        "schemaRef": {
          "type": "string",
          "description": "The reference to the schema that describes the dataset. Allowed: JSON Schema/draft-7."
        },
        "inputs": {
          "type": "array",
          "description": "List of fields for enriching from the Broker State Store.",
          "items": {
            "type": "string"
          }
        },
        "expression": {
          "type": "string",
          "description": "Condition to enrich data from Broker State Store. Example: $1 < 0 || $1 > $2 (Assuming inputs section $1 and $2 are provided)"
        }
      },
      "required": [
        "key",
        "inputs"
      ]
    },
    "DataflowBuiltInTransformationFilter": {
      "type": "object",
      "description": "Dataflow BuiltIn Transformation filter properties",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of dataflow operation.",
          "default": "Filter",
          "enum": [
            "Filter"
          ],
          "x-ms-enum": {
            "name": "FilterType",
            "modelAsString": true,
            "values": [
              {
                "name": "Filter",
                "value": "Filter",
                "description": "Filter type"
              }
            ]
          }
        },
        "description": {
          "type": "string",
          "description": "A user provided optional description of the filter.",
          "maxLength": 256
        },
        "inputs": {
          "type": "array",
          "description": "List of fields for filtering in JSON path expression.",
          "items": {
            "type": "string"
          }
        },
        "expression": {
          "type": "string",
          "description": "Condition to filter data. Can reference input fields with {n} where n is the index of the input field starting from 1. Example: $1 < 0 || $1 > $2 (Assuming inputs section $1 and $2 are provided)"
        }
      },
      "required": [
        "inputs",
        "expression"
      ]
    },
    "DataflowBuiltInTransformationMap": {
      "type": "object",
      "description": "Dataflow BuiltIn Transformation map properties",
      "properties": {
        "type": {
          "description": "Type of transformation.",
          "type": "string",
          "enum": [
            "NewProperties",
            "Rename",
            "Compute",
            "PassThrough",
            "BuiltInFunction"
          ],
          "x-ms-enum": {
            "name": "DataflowMappingType",
            "modelAsString": true,
            "values": [
              {
                "name": "NewProperties",
                "value": "NewProperties",
                "description": "New Properties type"
              },
              {
                "name": "Rename",
                "value": "Rename",
                "description": "Rename type"
              },
              {
                "name": "Compute",
                "value": "Compute",
                "description": "Compute type"
              },
              {
                "name": "PassThrough",
                "value": "PassThrough",
                "description": "Pass-through type"
              },
              {
                "name": "BuiltInFunction",
                "value": "BuiltInFunction",
                "description": "Built in function type"
              }
            ]
          }
        },
        "description": {
          "type": "string",
          "description": "A user provided optional description of the mapping function.",
          "maxLength": 256
        },
        "inputs": {
          "type": "array",
          "description": "List of fields for mapping in JSON path expression.",
          "items": {
            "type": "string"
          }
        },
        "expression": {
          "type": "string",
          "description": "Modify the inputs field(s) to the final output field. Example: $1 * 2.2 (Assuming inputs section $1 is provided)"
        },
        "output": {
          "type": "string",
          "description": "Where and how the input fields to be organized in the output record."
        }
      },
      "required": [
        "inputs",
        "output"
      ]
    },
    "DataflowBuiltInTransformationSettings": {
      "type": "object",
      "description": "Dataflow BuiltIn Transformation properties",
      "properties": {
        "serializationFormat": {
          "type": "string",
          "description": "Serialization format. Optional; defaults to JSON. Allowed value JSON Schema/draft-7, Parquet. Default: Json",
          "default": "Json",
          "enum": [
            "Delta",
            "Json",
            "Parquet"
          ],
          "x-ms-enum": {
            "name": "TransformationSerializationFormat",
            "modelAsString": true,
            "values": [
              {
                "name": "Delta",
                "value": "Delta",
                "description": "Delta Format"
              },
              {
                "name": "Json",
                "value": "Json",
                "description": "JSON Format"
              },
              {
                "name": "Parquet",
                "value": "Parquet",
                "description": "Parquet Format"
              }
            ]
          }
        },
        "schemaRef": {
          "type": "string",
          "description": "Reference to the schema that describes the output of the transformation."
        },
        "datasets": {
          "type": "array",
          "description": "Enrich data from Broker State Store. Dataset references a key in Broker State Store.",
          "default": [],
          "maxItems": 1,
          "items": {
            "type": "object",
            "description": "Dataflow BuiltIn Transformation dataset properties",
            "properties": {
              "key": {
                "type": "string",
                "description": "The key of the dataset.",
                "maxLength": 64
              },
              "description": {
                "type": "string",
                "description": "A user provided optional description of the dataset.",
                "maxLength": 256
              },
              "schemaRef": {
                "type": "string",
                "description": "The reference to the schema that describes the dataset. Allowed: JSON Schema/draft-7."
              },
              "inputs": {
                "type": "array",
                "description": "List of fields for enriching from the Broker State Store.",
                "items": {
                  "type": "string"
                }
              },
              "expression": {
                "type": "string",
                "description": "Condition to enrich data from Broker State Store. Example: $1 < 0 || $1 > $2 (Assuming inputs section $1 and $2 are provided)"
              }
            },
            "required": [
              "key",
              "inputs"
            ]
          },
          "x-ms-identifiers": []
        },
        "filter": {
          "type": "array",
          "description": "Filters input record or datapoints based on condition.",
          "default": [],
          "items": {
            "type": "object",
            "description": "Dataflow BuiltIn Transformation filter properties",
            "properties": {
              "type": {
                "type": "string",
                "description": "The type of dataflow operation.",
                "default": "Filter",
                "enum": [
                  "Filter"
                ],
                "x-ms-enum": {
                  "name": "FilterType",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Filter",
                      "value": "Filter",
                      "description": "Filter type"
                    }
                  ]
                }
              },
              "description": {
                "type": "string",
                "description": "A user provided optional description of the filter.",
                "maxLength": 256
              },
              "inputs": {
                "type": "array",
                "description": "List of fields for filtering in JSON path expression.",
                "items": {
                  "type": "string"
                }
              },
              "expression": {
                "type": "string",
                "description": "Condition to filter data. Can reference input fields with {n} where n is the index of the input field starting from 1. Example: $1 < 0 || $1 > $2 (Assuming inputs section $1 and $2 are provided)"
              }
            },
            "required": [
              "inputs",
              "expression"
            ]
          },
          "x-ms-identifiers": []
        },
        "map": {
          "type": "array",
          "description": "Maps input to output message.",
          "default": [],
          "items": {
            "type": "object",
            "description": "Dataflow BuiltIn Transformation map properties",
            "properties": {
              "type": {
                "description": "Type of transformation.",
                "type": "string",
                "enum": [
                  "NewProperties",
                  "Rename",
                  "Compute",
                  "PassThrough",
                  "BuiltInFunction"
                ],
                "x-ms-enum": {
                  "name": "DataflowMappingType",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "NewProperties",
                      "value": "NewProperties",
                      "description": "New Properties type"
                    },
                    {
                      "name": "Rename",
                      "value": "Rename",
                      "description": "Rename type"
                    },
                    {
                      "name": "Compute",
                      "value": "Compute",
                      "description": "Compute type"
                    },
                    {
                      "name": "PassThrough",
                      "value": "PassThrough",
                      "description": "Pass-through type"
                    },
                    {
                      "name": "BuiltInFunction",
                      "value": "BuiltInFunction",
                      "description": "Built in function type"
                    }
                  ]
                }
              },
              "description": {
                "type": "string",
                "description": "A user provided optional description of the mapping function.",
                "maxLength": 256
              },
              "inputs": {
                "type": "array",
                "description": "List of fields for mapping in JSON path expression.",
                "items": {
                  "type": "string"
                }
              },
              "expression": {
                "type": "string",
                "description": "Modify the inputs field(s) to the final output field. Example: $1 * 2.2 (Assuming inputs section $1 is provided)"
              },
              "output": {
                "type": "string",
                "description": "Where and how the input fields to be organized in the output record."
              }
            },
            "required": [
              "inputs",
              "output"
            ]
          },
          "x-ms-identifiers": []
        }
      }
    },
    "DataflowDestinationAddIfNotPresentHeaderAction": {
      "type": "object",
      "description": "Dataflow Destination Add if not present HeaderAction properties",
      "properties": {
        "key": {
          "type": "string",
          "description": "The name of the header to add."
        },
        "value": {
          "type": "string",
          "description": "The value of the header to add."
        }
      },
      "required": [
        "key",
        "value"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "Dataflow Destination Header Action properties",
          "properties": {
            "actionType": {
              "description": "The type of header operation to perform.",
              "type": "string",
              "enum": [
                "AddIfNotPresent",
                "Remove",
                "AddOrReplace"
              ],
              "x-ms-enum": {
                "name": "DataflowHeaderActionType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "AddIfNotPresent",
                    "value": "AddIfNotPresent",
                    "description": "Add if not present type"
                  },
                  {
                    "name": "Remove",
                    "value": "Remove",
                    "description": "Remove type"
                  },
                  {
                    "name": "AddOrReplace",
                    "value": "AddOrReplace",
                    "description": "Add or Replace type"
                  }
                ]
              }
            }
          },
          "discriminator": "actionType",
          "required": [
            "actionType"
          ]
        }
      ],
      "x-ms-discriminator-value": "AddIfNotPresent"
    },
    "DataflowDestinationAddOrReplaceHeaderAction": {
      "type": "object",
      "description": "Dataflow Destination Add or Replace HeaderAction properties",
      "properties": {
        "key": {
          "type": "string",
          "description": "The name of the header to add or replace."
        },
        "value": {
          "type": "string",
          "description": "The value of the header to add or replace."
        }
      },
      "required": [
        "key",
        "value"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "Dataflow Destination Header Action properties",
          "properties": {
            "actionType": {
              "description": "The type of header operation to perform.",
              "type": "string",
              "enum": [
                "AddIfNotPresent",
                "Remove",
                "AddOrReplace"
              ],
              "x-ms-enum": {
                "name": "DataflowHeaderActionType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "AddIfNotPresent",
                    "value": "AddIfNotPresent",
                    "description": "Add if not present type"
                  },
                  {
                    "name": "Remove",
                    "value": "Remove",
                    "description": "Remove type"
                  },
                  {
                    "name": "AddOrReplace",
                    "value": "AddOrReplace",
                    "description": "Add or Replace type"
                  }
                ]
              }
            }
          },
          "discriminator": "actionType",
          "required": [
            "actionType"
          ]
        }
      ],
      "x-ms-discriminator-value": "AddOrReplace"
    },
    "DataflowDestinationHeaderAction": {
      "type": "object",
      "description": "Dataflow Destination Header Action properties",
      "properties": {
        "actionType": {
          "description": "The type of header operation to perform.",
          "type": "string",
          "enum": [
            "AddIfNotPresent",
            "Remove",
            "AddOrReplace"
          ],
          "x-ms-enum": {
            "name": "DataflowHeaderActionType",
            "modelAsString": true,
            "values": [
              {
                "name": "AddIfNotPresent",
                "value": "AddIfNotPresent",
                "description": "Add if not present type"
              },
              {
                "name": "Remove",
                "value": "Remove",
                "description": "Remove type"
              },
              {
                "name": "AddOrReplace",
                "value": "AddOrReplace",
                "description": "Add or Replace type"
              }
            ]
          }
        }
      },
      "discriminator": "actionType",
      "required": [
        "actionType"
      ]
    },
    "DataflowDestinationOperationSettings": {
      "type": "object",
      "description": "Dataflow Destination Operation properties",
      "properties": {
        "endpointRef": {
          "type": "string",
          "description": "Reference to the Endpoint CR. Can be of Broker, Kafka, Fabric, ADLS, ADX type."
        },
        "dataDestination": {
          "type": "string",
          "description": "A string with a minimum length of 1.",
          "minLength": 1
        },
        "headers": {
          "type": "array",
          "description": "Headers for the output data.",
          "items": {
            "type": "object",
            "description": "Dataflow Destination Header Action properties",
            "properties": {
              "actionType": {
                "description": "The type of header operation to perform.",
                "type": "string",
                "enum": [
                  "AddIfNotPresent",
                  "Remove",
                  "AddOrReplace"
                ],
                "x-ms-enum": {
                  "name": "DataflowHeaderActionType",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "AddIfNotPresent",
                      "value": "AddIfNotPresent",
                      "description": "Add if not present type"
                    },
                    {
                      "name": "Remove",
                      "value": "Remove",
                      "description": "Remove type"
                    },
                    {
                      "name": "AddOrReplace",
                      "value": "AddOrReplace",
                      "description": "Add or Replace type"
                    }
                  ]
                }
              }
            },
            "discriminator": "actionType",
            "required": [
              "actionType"
            ]
          },
          "x-ms-identifiers": [
            "actionType"
          ]
        }
      },
      "required": [
        "endpointRef",
        "dataDestination"
      ]
    },
    "DataflowDestinationRemoveHeaderAction": {
      "type": "object",
      "description": "Dataflow Destination Remove HeaderAction properties",
      "properties": {
        "key": {
          "type": "string",
          "description": "The name of the header to remove."
        }
      },
      "required": [
        "key"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "Dataflow Destination Header Action properties",
          "properties": {
            "actionType": {
              "description": "The type of header operation to perform.",
              "type": "string",
              "enum": [
                "AddIfNotPresent",
                "Remove",
                "AddOrReplace"
              ],
              "x-ms-enum": {
                "name": "DataflowHeaderActionType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "AddIfNotPresent",
                    "value": "AddIfNotPresent",
                    "description": "Add if not present type"
                  },
                  {
                    "name": "Remove",
                    "value": "Remove",
                    "description": "Remove type"
                  },
                  {
                    "name": "AddOrReplace",
                    "value": "AddOrReplace",
                    "description": "Add or Replace type"
                  }
                ]
              }
            }
          },
          "discriminator": "actionType",
          "required": [
            "actionType"
          ]
        }
      ],
      "x-ms-discriminator-value": "Remove"
    },
    "DataflowEndpointAuthenticationAccessToken": {
      "type": "object",
      "description": "DataflowEndpoint Authentication Access Token properties",
      "properties": {
        "secretRef": {
          "type": "string",
          "description": "Token secret name."
        }
      },
      "required": [
        "secretRef"
      ]
    },
    "DataflowEndpointAuthenticationAnonymous": {
      "type": "object",
      "description": "DataflowEndpoint Anonymous Authentication properties",
      "additionalProperties": false
    },
    "DataflowEndpointAuthenticationSasl": {
      "type": "object",
      "description": "DataflowEndpoint Authentication Sasl properties",
      "properties": {
        "saslType": {
          "description": "Type of SASL authentication. Can be PLAIN, SCRAM-SHA-256, or SCRAM-SHA-512.",
          "type": "string",
          "enum": [
            "Plain",
            "ScramSha256",
            "ScramSha512"
          ],
          "x-ms-enum": {
            "name": "DataflowEndpointAuthenticationSaslType",
            "modelAsString": true,
            "values": [
              {
                "name": "Plain",
                "value": "Plain",
                "description": "PLAIN Type"
              },
              {
                "name": "ScramSha256",
                "value": "ScramSha256",
                "description": "SCRAM_SHA_256 Type"
              },
              {
                "name": "ScramSha512",
                "value": "ScramSha512",
                "description": "SCRAM_SHA_512 Type"
              }
            ]
          }
        },
        "secretRef": {
          "type": "string",
          "description": "Token secret name."
        }
      },
      "required": [
        "saslType",
        "secretRef"
      ]
    },
    "DataflowEndpointAuthenticationSaslType": {
      "type": "string",
      "description": "DataflowEndpoint Authentication Sasl Type properties",
      "enum": [
        "Plain",
        "ScramSha256",
        "ScramSha512"
      ],
      "x-ms-enum": {
        "name": "DataflowEndpointAuthenticationSaslType",
        "modelAsString": true,
        "values": [
          {
            "name": "Plain",
            "value": "Plain",
            "description": "PLAIN Type"
          },
          {
            "name": "ScramSha256",
            "value": "ScramSha256",
            "description": "SCRAM_SHA_256 Type"
          },
          {
            "name": "ScramSha512",
            "value": "ScramSha512",
            "description": "SCRAM_SHA_512 Type"
          }
        ]
      }
    },
    "DataflowEndpointAuthenticationServiceAccountToken": {
      "type": "object",
      "description": "Service Account Token for BrokerAuthentication",
      "properties": {
        "audience": {
          "type": "string",
          "description": "Audience of the service account. Optional, defaults to the broker internal service account audience."
        }
      },
      "required": [
        "audience"
      ]
    },
    "DataflowEndpointAuthenticationSystemAssignedManagedIdentity": {
      "type": "object",
      "description": "DataflowEndpoint Authentication SystemAssignedManagedIdentity properties",
      "properties": {
        "audience": {
          "type": "string",
          "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
        }
      }
    },
    "DataflowEndpointAuthenticationUserAssignedManagedIdentity": {
      "type": "object",
      "description": "DataflowEndpoint Authentication UserAssignedManagedIdentity properties",
      "properties": {
        "clientId": {
          "type": "string",
          "description": "Client ID for the user-assigned managed identity."
        },
        "scope": {
          "type": "string",
          "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
        },
        "tenantId": {
          "type": "string",
          "description": "Tenant ID."
        }
      },
      "required": [
        "clientId",
        "tenantId"
      ]
    },
    "DataflowEndpointAuthenticationX509": {
      "type": "object",
      "description": "DataflowEndpoint Authentication X509 properties",
      "properties": {
        "secretRef": {
          "type": "string",
          "description": "Secret reference of the X.509 certificate."
        }
      },
      "required": [
        "secretRef"
      ]
    },
    "DataflowEndpointDataExplorer": {
      "type": "object",
      "description": "Azure Data Explorer endpoint properties",
      "properties": {
        "authentication": {
          "description": "Authentication configuration. NOTE - only authentication property is allowed per entry.",
          "type": "object",
          "properties": {
            "method": {
              "description": "Mode of Authentication.",
              "x-nullable": false,
              "type": "string",
              "enum": [
                "SystemAssignedManagedIdentity",
                "UserAssignedManagedIdentity"
              ],
              "x-ms-enum": {
                "name": "ManagedIdentityMethod",
                "modelAsString": true,
                "values": [
                  {
                    "name": "SystemAssignedManagedIdentity",
                    "value": "SystemAssignedManagedIdentity",
                    "description": "SystemAssignedManagedIdentity type"
                  },
                  {
                    "name": "UserAssignedManagedIdentity",
                    "value": "UserAssignedManagedIdentity",
                    "description": "UserAssignedManagedIdentity type"
                  }
                ]
              }
            },
            "systemAssignedManagedIdentitySettings": {
              "description": "System-assigned managed identity authentication.",
              "type": "object",
              "properties": {
                "audience": {
                  "type": "string",
                  "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
                }
              }
            },
            "userAssignedManagedIdentitySettings": {
              "description": "User-assigned managed identity authentication.",
              "type": "object",
              "properties": {
                "clientId": {
                  "type": "string",
                  "description": "Client ID for the user-assigned managed identity."
                },
                "scope": {
                  "type": "string",
                  "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
                },
                "tenantId": {
                  "type": "string",
                  "description": "Tenant ID."
                }
              },
              "required": [
                "clientId",
                "tenantId"
              ]
            }
          },
          "required": [
            "method"
          ]
        },
        "database": {
          "type": "string",
          "description": "Database name."
        },
        "host": {
          "type": "string",
          "description": "Host of the Azure Data Explorer in the form of <cluster>.<region>.kusto.windows.net .",
          "pattern": ".+\\..+\\.kusto\\.windows\\.net"
        },
        "batching": {
          "description": "Azure Data Explorer endpoint batching configuration.",
          "type": "object",
          "properties": {
            "latencySeconds": {
              "type": "integer",
              "format": "int32",
              "description": "Batching latency in seconds.",
              "default": 60,
              "minimum": 0,
              "maximum": 65535
            },
            "maxMessages": {
              "type": "integer",
              "format": "int32",
              "description": "Maximum number of messages in a batch.",
              "default": 100000,
              "minimum": 0,
              "maximum": 4294967295
            }
          }
        }
      },
      "required": [
        "authentication",
        "database",
        "host"
      ]
    },
    "DataflowEndpointDataExplorerAuthentication": {
      "type": "object",
      "description": "Azure Data Explorer Authentication properties. NOTE - only authentication property is allowed per entry.",
      "properties": {
        "method": {
          "description": "Mode of Authentication.",
          "x-nullable": false,
          "type": "string",
          "enum": [
            "SystemAssignedManagedIdentity",
            "UserAssignedManagedIdentity"
          ],
          "x-ms-enum": {
            "name": "ManagedIdentityMethod",
            "modelAsString": true,
            "values": [
              {
                "name": "SystemAssignedManagedIdentity",
                "value": "SystemAssignedManagedIdentity",
                "description": "SystemAssignedManagedIdentity type"
              },
              {
                "name": "UserAssignedManagedIdentity",
                "value": "UserAssignedManagedIdentity",
                "description": "UserAssignedManagedIdentity type"
              }
            ]
          }
        },
        "systemAssignedManagedIdentitySettings": {
          "description": "System-assigned managed identity authentication.",
          "type": "object",
          "properties": {
            "audience": {
              "type": "string",
              "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
            }
          }
        },
        "userAssignedManagedIdentitySettings": {
          "description": "User-assigned managed identity authentication.",
          "type": "object",
          "properties": {
            "clientId": {
              "type": "string",
              "description": "Client ID for the user-assigned managed identity."
            },
            "scope": {
              "type": "string",
              "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
            },
            "tenantId": {
              "type": "string",
              "description": "Tenant ID."
            }
          },
          "required": [
            "clientId",
            "tenantId"
          ]
        }
      },
      "required": [
        "method"
      ]
    },
    "DataflowEndpointDataLakeStorage": {
      "type": "object",
      "description": "Azure Data Lake endpoint properties",
      "properties": {
        "authentication": {
          "description": "Authentication configuration. NOTE - only authentication property is allowed per entry.",
          "type": "object",
          "properties": {
            "method": {
              "description": "Mode of Authentication.",
              "type": "string",
              "enum": [
                "SystemAssignedManagedIdentity",
                "UserAssignedManagedIdentity",
                "AccessToken"
              ],
              "x-ms-enum": {
                "name": "DataLakeStorageAuthMethod",
                "modelAsString": true,
                "values": [
                  {
                    "name": "SystemAssignedManagedIdentity",
                    "value": "SystemAssignedManagedIdentity",
                    "description": "SystemAssignedManagedIdentity type"
                  },
                  {
                    "name": "UserAssignedManagedIdentity",
                    "value": "UserAssignedManagedIdentity",
                    "description": "UserAssignedManagedIdentity type"
                  },
                  {
                    "name": "AccessToken",
                    "value": "AccessToken",
                    "description": "AccessToken Option"
                  }
                ]
              }
            },
            "accessTokenSettings": {
              "description": "SAS token authentication.",
              "type": "object",
              "properties": {
                "secretRef": {
                  "type": "string",
                  "description": "Token secret name."
                }
              },
              "required": [
                "secretRef"
              ]
            },
            "systemAssignedManagedIdentitySettings": {
              "description": "System-assigned managed identity authentication.",
              "type": "object",
              "properties": {
                "audience": {
                  "type": "string",
                  "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
                }
              }
            },
            "userAssignedManagedIdentitySettings": {
              "description": "User-assigned managed identity authentication.",
              "type": "object",
              "properties": {
                "clientId": {
                  "type": "string",
                  "description": "Client ID for the user-assigned managed identity."
                },
                "scope": {
                  "type": "string",
                  "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
                },
                "tenantId": {
                  "type": "string",
                  "description": "Tenant ID."
                }
              },
              "required": [
                "clientId",
                "tenantId"
              ]
            }
          },
          "required": [
            "method"
          ]
        },
        "host": {
          "type": "string",
          "description": "Host of the Azure Data Lake in the form of <account>.blob.core.windows.net .",
          "pattern": ".+\\.blob\\.core\\.windows\\.net"
        },
        "batching": {
          "description": "Azure Data Lake endpoint batching configuration.",
          "type": "object",
          "properties": {
            "latencySeconds": {
              "type": "integer",
              "format": "int32",
              "description": "Batching latency in seconds.",
              "default": 60,
              "minimum": 0,
              "maximum": 65535
            },
            "maxMessages": {
              "type": "integer",
              "format": "int32",
              "description": "Maximum number of messages in a batch.",
              "default": 100000,
              "minimum": 0,
              "maximum": 4294967295
            }
          }
        }
      },
      "required": [
        "authentication",
        "host"
      ]
    },
    "DataflowEndpointDataLakeStorageAuthentication": {
      "type": "object",
      "description": "Azure Data Lake endpoint Authentication properties.  NOTE Enum - Only one method is supported for one entry",
      "properties": {
        "method": {
          "description": "Mode of Authentication.",
          "type": "string",
          "enum": [
            "SystemAssignedManagedIdentity",
            "UserAssignedManagedIdentity",
            "AccessToken"
          ],
          "x-ms-enum": {
            "name": "DataLakeStorageAuthMethod",
            "modelAsString": true,
            "values": [
              {
                "name": "SystemAssignedManagedIdentity",
                "value": "SystemAssignedManagedIdentity",
                "description": "SystemAssignedManagedIdentity type"
              },
              {
                "name": "UserAssignedManagedIdentity",
                "value": "UserAssignedManagedIdentity",
                "description": "UserAssignedManagedIdentity type"
              },
              {
                "name": "AccessToken",
                "value": "AccessToken",
                "description": "AccessToken Option"
              }
            ]
          }
        },
        "accessTokenSettings": {
          "description": "SAS token authentication.",
          "type": "object",
          "properties": {
            "secretRef": {
              "type": "string",
              "description": "Token secret name."
            }
          },
          "required": [
            "secretRef"
          ]
        },
        "systemAssignedManagedIdentitySettings": {
          "description": "System-assigned managed identity authentication.",
          "type": "object",
          "properties": {
            "audience": {
              "type": "string",
              "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
            }
          }
        },
        "userAssignedManagedIdentitySettings": {
          "description": "User-assigned managed identity authentication.",
          "type": "object",
          "properties": {
            "clientId": {
              "type": "string",
              "description": "Client ID for the user-assigned managed identity."
            },
            "scope": {
              "type": "string",
              "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
            },
            "tenantId": {
              "type": "string",
              "description": "Tenant ID."
            }
          },
          "required": [
            "clientId",
            "tenantId"
          ]
        }
      },
      "required": [
        "method"
      ]
    },
    "DataflowEndpointFabricOneLake": {
      "type": "object",
      "description": "Microsoft Fabric endpoint properties",
      "properties": {
        "authentication": {
          "description": "Authentication configuration. NOTE - only one authentication property is allowed per entry.",
          "type": "object",
          "properties": {
            "method": {
              "description": "Mode of Authentication.",
              "x-nullable": false,
              "type": "string",
              "enum": [
                "SystemAssignedManagedIdentity",
                "UserAssignedManagedIdentity"
              ],
              "x-ms-enum": {
                "name": "ManagedIdentityMethod",
                "modelAsString": true,
                "values": [
                  {
                    "name": "SystemAssignedManagedIdentity",
                    "value": "SystemAssignedManagedIdentity",
                    "description": "SystemAssignedManagedIdentity type"
                  },
                  {
                    "name": "UserAssignedManagedIdentity",
                    "value": "UserAssignedManagedIdentity",
                    "description": "UserAssignedManagedIdentity type"
                  }
                ]
              }
            },
            "systemAssignedManagedIdentitySettings": {
              "description": "System-assigned managed identity authentication.",
              "type": "object",
              "properties": {
                "audience": {
                  "type": "string",
                  "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
                }
              }
            },
            "userAssignedManagedIdentitySettings": {
              "description": "User-assigned managed identity authentication.",
              "type": "object",
              "properties": {
                "clientId": {
                  "type": "string",
                  "description": "Client ID for the user-assigned managed identity."
                },
                "scope": {
                  "type": "string",
                  "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
                },
                "tenantId": {
                  "type": "string",
                  "description": "Tenant ID."
                }
              },
              "required": [
                "clientId",
                "tenantId"
              ]
            }
          },
          "required": [
            "method"
          ]
        },
        "names": {
          "description": "Names of the workspace and lakehouse.",
          "type": "object",
          "properties": {
            "lakehouseName": {
              "type": "string",
              "description": "Lakehouse name."
            },
            "workspaceName": {
              "type": "string",
              "description": "Workspace name."
            }
          },
          "required": [
            "lakehouseName",
            "workspaceName"
          ]
        },
        "oneLakePathType": {
          "description": "Type of location of the data in the workspace. Can be either tables or files.",
          "type": "string",
          "enum": [
            "Files",
            "Tables"
          ],
          "x-ms-enum": {
            "name": "DataflowEndpointFabricPathType",
            "modelAsString": true,
            "values": [
              {
                "name": "Files",
                "value": "Files",
                "description": "FILES Type"
              },
              {
                "name": "Tables",
                "value": "Tables",
                "description": "TABLES Type"
              }
            ]
          }
        },
        "host": {
          "type": "string",
          "description": "Host of the Microsoft Fabric in the form of https://<host>.fabric.microsoft.com.",
          "pattern": ".+\\.fabric\\.microsoft\\.com"
        },
        "batching": {
          "description": "Batching configuration.",
          "type": "object",
          "properties": {
            "latencySeconds": {
              "type": "integer",
              "format": "int32",
              "description": "Batching latency in seconds.",
              "default": 60,
              "minimum": 0,
              "maximum": 65535
            },
            "maxMessages": {
              "type": "integer",
              "format": "int32",
              "description": "Maximum number of messages in a batch.",
              "default": 100000,
              "minimum": 0,
              "maximum": 4294967295
            }
          }
        }
      },
      "required": [
        "authentication",
        "names",
        "oneLakePathType",
        "host"
      ]
    },
    "DataflowEndpointFabricOneLakeAuthentication": {
      "type": "object",
      "description": "Microsoft Fabric endpoint. Authentication properties. NOTE - Only one method is supported for one entry",
      "properties": {
        "method": {
          "description": "Mode of Authentication.",
          "x-nullable": false,
          "type": "string",
          "enum": [
            "SystemAssignedManagedIdentity",
            "UserAssignedManagedIdentity"
          ],
          "x-ms-enum": {
            "name": "ManagedIdentityMethod",
            "modelAsString": true,
            "values": [
              {
                "name": "SystemAssignedManagedIdentity",
                "value": "SystemAssignedManagedIdentity",
                "description": "SystemAssignedManagedIdentity type"
              },
              {
                "name": "UserAssignedManagedIdentity",
                "value": "UserAssignedManagedIdentity",
                "description": "UserAssignedManagedIdentity type"
              }
            ]
          }
        },
        "systemAssignedManagedIdentitySettings": {
          "description": "System-assigned managed identity authentication.",
          "type": "object",
          "properties": {
            "audience": {
              "type": "string",
              "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
            }
          }
        },
        "userAssignedManagedIdentitySettings": {
          "description": "User-assigned managed identity authentication.",
          "type": "object",
          "properties": {
            "clientId": {
              "type": "string",
              "description": "Client ID for the user-assigned managed identity."
            },
            "scope": {
              "type": "string",
              "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
            },
            "tenantId": {
              "type": "string",
              "description": "Tenant ID."
            }
          },
          "required": [
            "clientId",
            "tenantId"
          ]
        }
      },
      "required": [
        "method"
      ]
    },
    "DataflowEndpointFabricOneLakeNames": {
      "type": "object",
      "description": "Microsoft Fabric endpoint Names properties",
      "properties": {
        "lakehouseName": {
          "type": "string",
          "description": "Lakehouse name."
        },
        "workspaceName": {
          "type": "string",
          "description": "Workspace name."
        }
      },
      "required": [
        "lakehouseName",
        "workspaceName"
      ]
    },
    "DataflowEndpointFabricPathType": {
      "type": "string",
      "description": "DataflowEndpoint Fabric Path Type properties",
      "enum": [
        "Files",
        "Tables"
      ],
      "x-ms-enum": {
        "name": "DataflowEndpointFabricPathType",
        "modelAsString": true,
        "values": [
          {
            "name": "Files",
            "value": "Files",
            "description": "FILES Type"
          },
          {
            "name": "Tables",
            "value": "Tables",
            "description": "TABLES Type"
          }
        ]
      }
    },
    "DataflowEndpointHostType": {
      "type": "string",
      "description": "DataflowEndpoint Host Type properties",
      "enum": [
        "FabricRT",
        "EventGrid",
        "LocalBroker",
        "Eventhub",
        "CustomMqtt",
        "CustomKafka"
      ],
      "x-ms-enum": {
        "name": "DataflowEndpointHostType",
        "modelAsString": true,
        "values": [
          {
            "name": "FabricRT",
            "value": "FabricRT",
            "description": "Fabric Real-Time Type"
          },
          {
            "name": "EventGrid",
            "value": "EventGrid",
            "description": "EventGrid Type"
          },
          {
            "name": "LocalBroker",
            "value": "LocalBroker",
            "description": "Local MQTT Type"
          },
          {
            "name": "Eventhub",
            "value": "Eventhub",
            "description": "EventHub Type"
          },
          {
            "name": "CustomMqtt",
            "value": "CustomMqtt",
            "description": "Custom MQTT Type"
          },
          {
            "name": "CustomKafka",
            "value": "CustomKafka",
            "description": "Custom Kafka Type"
          }
        ]
      }
    },
    "DataflowEndpointKafka": {
      "type": "object",
      "description": "Kafka endpoint properties",
      "properties": {
        "authentication": {
          "description": "Authentication configuration. NOTE - only authentication property is allowed per entry.",
          "type": "object",
          "properties": {
            "method": {
              "description": "Mode of Authentication.",
              "type": "string",
              "enum": [
                "SystemAssignedManagedIdentity",
                "UserAssignedManagedIdentity",
                "Sasl",
                "X509Certificate",
                "Anonymous"
              ],
              "x-ms-enum": {
                "name": "KafkaAuthMethod",
                "modelAsString": true,
                "values": [
                  {
                    "name": "SystemAssignedManagedIdentity",
                    "value": "SystemAssignedManagedIdentity",
                    "description": "SystemAssignedManagedIdentity type"
                  },
                  {
                    "name": "UserAssignedManagedIdentity",
                    "value": "UserAssignedManagedIdentity",
                    "description": "UserAssignedManagedIdentity type"
                  },
                  {
                    "name": "Sasl",
                    "value": "Sasl",
                    "description": "Sasl Option"
                  },
                  {
                    "name": "X509Certificate",
                    "value": "X509Certificate",
                    "description": "x509Certificate Option"
                  },
                  {
                    "name": "Anonymous",
                    "value": "Anonymous",
                    "description": "Anonymous Option"
                  }
                ]
              }
            },
            "systemAssignedManagedIdentitySettings": {
              "description": "System-assigned managed identity authentication.",
              "type": "object",
              "properties": {
                "audience": {
                  "type": "string",
                  "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
                }
              }
            },
            "userAssignedManagedIdentitySettings": {
              "description": "User-assigned managed identity authentication.",
              "type": "object",
              "properties": {
                "clientId": {
                  "type": "string",
                  "description": "Client ID for the user-assigned managed identity."
                },
                "scope": {
                  "type": "string",
                  "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
                },
                "tenantId": {
                  "type": "string",
                  "description": "Tenant ID."
                }
              },
              "required": [
                "clientId",
                "tenantId"
              ]
            },
            "saslSettings": {
              "description": "SASL authentication.",
              "type": "object",
              "properties": {
                "saslType": {
                  "description": "Type of SASL authentication. Can be PLAIN, SCRAM-SHA-256, or SCRAM-SHA-512.",
                  "type": "string",
                  "enum": [
                    "Plain",
                    "ScramSha256",
                    "ScramSha512"
                  ],
                  "x-ms-enum": {
                    "name": "DataflowEndpointAuthenticationSaslType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Plain",
                        "value": "Plain",
                        "description": "PLAIN Type"
                      },
                      {
                        "name": "ScramSha256",
                        "value": "ScramSha256",
                        "description": "SCRAM_SHA_256 Type"
                      },
                      {
                        "name": "ScramSha512",
                        "value": "ScramSha512",
                        "description": "SCRAM_SHA_512 Type"
                      }
                    ]
                  }
                },
                "secretRef": {
                  "type": "string",
                  "description": "Token secret name."
                }
              },
              "required": [
                "saslType",
                "secretRef"
              ]
            },
            "x509CertificateSettings": {
              "description": "X.509 certificate authentication.",
              "type": "object",
              "properties": {
                "secretRef": {
                  "type": "string",
                  "description": "Secret reference of the X.509 certificate."
                }
              },
              "required": [
                "secretRef"
              ]
            }
          },
          "required": [
            "method"
          ]
        },
        "consumerGroupId": {
          "type": "string",
          "description": "Consumer group ID."
        },
        "host": {
          "type": "string",
          "description": "Kafka endpoint host."
        },
        "batching": {
          "description": "Batching configuration.",
          "type": "object",
          "properties": {
            "mode": {
              "type": "string",
              "description": "Mode for batching.",
              "default": "Enabled",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "OperationalMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled",
                    "description": "Enabled is equivalent to True"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "Disabled is equivalent to False."
                  }
                ]
              }
            },
            "latencyMs": {
              "type": "integer",
              "format": "int32",
              "description": "Batching latency in milliseconds.",
              "default": 5,
              "minimum": 0,
              "maximum": 65535
            },
            "maxBytes": {
              "type": "integer",
              "format": "int32",
              "description": "Maximum number of bytes in a batch.",
              "default": 1000000,
              "minimum": 0,
              "maximum": 4294967295
            },
            "maxMessages": {
              "type": "integer",
              "format": "int32",
              "description": "Maximum number of messages in a batch.",
              "default": 100000,
              "minimum": 0,
              "maximum": 4294967295
            }
          }
        },
        "copyMqttProperties": {
          "type": "string",
          "description": "Copy Broker properties. No effect if the endpoint is used as a source or if the dataflow doesn't have an Broker source.",
          "default": "Enabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "OperationalMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "Enabled is equivalent to True"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "Disabled is equivalent to False."
              }
            ]
          }
        },
        "compression": {
          "type": "string",
          "description": "Compression. Can be none, gzip, lz4, or snappy. No effect if the endpoint is used as a source.",
          "default": "None",
          "enum": [
            "None",
            "Gzip",
            "Snappy",
            "Lz4"
          ],
          "x-ms-enum": {
            "name": "DataflowEndpointKafkaCompression",
            "modelAsString": true,
            "values": [
              {
                "name": "None",
                "value": "None",
                "description": "NONE Option"
              },
              {
                "name": "Gzip",
                "value": "Gzip",
                "description": "Gzip Option"
              },
              {
                "name": "Snappy",
                "value": "Snappy",
                "description": "SNAPPY Option"
              },
              {
                "name": "Lz4",
                "value": "Lz4",
                "description": "LZ4 Option"
              }
            ]
          }
        },
        "kafkaAcks": {
          "type": "string",
          "description": "Kafka acks. Can be all, one, or zero. No effect if the endpoint is used as a source.",
          "default": "All",
          "enum": [
            "Zero",
            "One",
            "All"
          ],
          "x-ms-enum": {
            "name": "DataflowEndpointKafkaAcks",
            "modelAsString": true,
            "values": [
              {
                "name": "Zero",
                "value": "Zero",
                "description": "ZERO Option"
              },
              {
                "name": "One",
                "value": "One",
                "description": "ONE Option"
              },
              {
                "name": "All",
                "value": "All",
                "description": "ALL Option"
              }
            ]
          }
        },
        "partitionStrategy": {
          "type": "string",
          "description": "Partition handling strategy. Can be default or static. No effect if the endpoint is used as a source.",
          "default": "Default",
          "enum": [
            "Default",
            "Static",
            "Topic",
            "Property"
          ],
          "x-ms-enum": {
            "name": "DataflowEndpointKafkaPartitionStrategy",
            "modelAsString": true,
            "values": [
              {
                "name": "Default",
                "value": "Default",
                "description": "Default: Assigns messages to random partitions, using a round-robin algorithm."
              },
              {
                "name": "Static",
                "value": "Static",
                "description": "Static: Assigns messages to a fixed partition number that's derived from the instance ID of the dataflow."
              },
              {
                "name": "Topic",
                "value": "Topic",
                "description": "TOPIC Option"
              },
              {
                "name": "Property",
                "value": "Property",
                "description": "PROPERTY Option"
              }
            ]
          }
        },
        "tls": {
          "description": "TLS configuration.",
          "type": "object",
          "properties": {
            "mode": {
              "type": "string",
              "description": "Mode for TLS.",
              "default": "Enabled",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "OperationalMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled",
                    "description": "Enabled is equivalent to True"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "Disabled is equivalent to False."
                  }
                ]
              }
            },
            "trustedCaCertificateConfigMapRef": {
              "type": "string",
              "description": "Trusted CA certificate config map."
            }
          }
        },
        "cloudEventAttributes": {
          "description": "Cloud event mapping config.",
          "type": "string",
          "enum": [
            "Propagate",
            "CreateOrRemap"
          ],
          "x-ms-enum": {
            "name": "CloudEventAttributeType",
            "modelAsString": true,
            "values": [
              {
                "name": "Propagate",
                "value": "Propagate",
                "description": "Propagate type"
              },
              {
                "name": "CreateOrRemap",
                "value": "CreateOrRemap",
                "description": "CreateOrRemap type"
              }
            ]
          }
        }
      },
      "required": [
        "authentication",
        "host"
      ]
    },
    "DataflowEndpointKafkaAcks": {
      "type": "string",
      "description": "DataflowEndpoint Kafka Acks properties",
      "enum": [
        "Zero",
        "One",
        "All"
      ],
      "x-ms-enum": {
        "name": "DataflowEndpointKafkaAcks",
        "modelAsString": true,
        "values": [
          {
            "name": "Zero",
            "value": "Zero",
            "description": "ZERO Option"
          },
          {
            "name": "One",
            "value": "One",
            "description": "ONE Option"
          },
          {
            "name": "All",
            "value": "All",
            "description": "ALL Option"
          }
        ]
      }
    },
    "DataflowEndpointKafkaAuthentication": {
      "type": "object",
      "description": "Kafka endpoint Authentication properties. NOTE - only authentication property is allowed per entry",
      "properties": {
        "method": {
          "description": "Mode of Authentication.",
          "type": "string",
          "enum": [
            "SystemAssignedManagedIdentity",
            "UserAssignedManagedIdentity",
            "Sasl",
            "X509Certificate",
            "Anonymous"
          ],
          "x-ms-enum": {
            "name": "KafkaAuthMethod",
            "modelAsString": true,
            "values": [
              {
                "name": "SystemAssignedManagedIdentity",
                "value": "SystemAssignedManagedIdentity",
                "description": "SystemAssignedManagedIdentity type"
              },
              {
                "name": "UserAssignedManagedIdentity",
                "value": "UserAssignedManagedIdentity",
                "description": "UserAssignedManagedIdentity type"
              },
              {
                "name": "Sasl",
                "value": "Sasl",
                "description": "Sasl Option"
              },
              {
                "name": "X509Certificate",
                "value": "X509Certificate",
                "description": "x509Certificate Option"
              },
              {
                "name": "Anonymous",
                "value": "Anonymous",
                "description": "Anonymous Option"
              }
            ]
          }
        },
        "systemAssignedManagedIdentitySettings": {
          "description": "System-assigned managed identity authentication.",
          "type": "object",
          "properties": {
            "audience": {
              "type": "string",
              "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
            }
          }
        },
        "userAssignedManagedIdentitySettings": {
          "description": "User-assigned managed identity authentication.",
          "type": "object",
          "properties": {
            "clientId": {
              "type": "string",
              "description": "Client ID for the user-assigned managed identity."
            },
            "scope": {
              "type": "string",
              "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
            },
            "tenantId": {
              "type": "string",
              "description": "Tenant ID."
            }
          },
          "required": [
            "clientId",
            "tenantId"
          ]
        },
        "saslSettings": {
          "description": "SASL authentication.",
          "type": "object",
          "properties": {
            "saslType": {
              "description": "Type of SASL authentication. Can be PLAIN, SCRAM-SHA-256, or SCRAM-SHA-512.",
              "type": "string",
              "enum": [
                "Plain",
                "ScramSha256",
                "ScramSha512"
              ],
              "x-ms-enum": {
                "name": "DataflowEndpointAuthenticationSaslType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Plain",
                    "value": "Plain",
                    "description": "PLAIN Type"
                  },
                  {
                    "name": "ScramSha256",
                    "value": "ScramSha256",
                    "description": "SCRAM_SHA_256 Type"
                  },
                  {
                    "name": "ScramSha512",
                    "value": "ScramSha512",
                    "description": "SCRAM_SHA_512 Type"
                  }
                ]
              }
            },
            "secretRef": {
              "type": "string",
              "description": "Token secret name."
            }
          },
          "required": [
            "saslType",
            "secretRef"
          ]
        },
        "x509CertificateSettings": {
          "description": "X.509 certificate authentication.",
          "type": "object",
          "properties": {
            "secretRef": {
              "type": "string",
              "description": "Secret reference of the X.509 certificate."
            }
          },
          "required": [
            "secretRef"
          ]
        }
      },
      "required": [
        "method"
      ]
    },
    "DataflowEndpointKafkaBatching": {
      "type": "object",
      "description": "Kafka endpoint Batching properties",
      "properties": {
        "mode": {
          "type": "string",
          "description": "Mode for batching.",
          "default": "Enabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "OperationalMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "Enabled is equivalent to True"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "Disabled is equivalent to False."
              }
            ]
          }
        },
        "latencyMs": {
          "type": "integer",
          "format": "int32",
          "description": "Batching latency in milliseconds.",
          "default": 5,
          "minimum": 0,
          "maximum": 65535
        },
        "maxBytes": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of bytes in a batch.",
          "default": 1000000,
          "minimum": 0,
          "maximum": 4294967295
        },
        "maxMessages": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of messages in a batch.",
          "default": 100000,
          "minimum": 0,
          "maximum": 4294967295
        }
      }
    },
    "DataflowEndpointKafkaCompression": {
      "type": "string",
      "description": "Kafka endpoint Compression properties",
      "enum": [
        "None",
        "Gzip",
        "Snappy",
        "Lz4"
      ],
      "x-ms-enum": {
        "name": "DataflowEndpointKafkaCompression",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None",
            "description": "NONE Option"
          },
          {
            "name": "Gzip",
            "value": "Gzip",
            "description": "Gzip Option"
          },
          {
            "name": "Snappy",
            "value": "Snappy",
            "description": "SNAPPY Option"
          },
          {
            "name": "Lz4",
            "value": "Lz4",
            "description": "LZ4 Option"
          }
        ]
      }
    },
    "DataflowEndpointKafkaPartitionStrategy": {
      "type": "string",
      "description": "DataflowEndpoint Kafka Partition Strategy properties",
      "enum": [
        "Default",
        "Static",
        "Topic",
        "Property"
      ],
      "x-ms-enum": {
        "name": "DataflowEndpointKafkaPartitionStrategy",
        "modelAsString": true,
        "values": [
          {
            "name": "Default",
            "value": "Default",
            "description": "Default: Assigns messages to random partitions, using a round-robin algorithm."
          },
          {
            "name": "Static",
            "value": "Static",
            "description": "Static: Assigns messages to a fixed partition number that's derived from the instance ID of the dataflow."
          },
          {
            "name": "Topic",
            "value": "Topic",
            "description": "TOPIC Option"
          },
          {
            "name": "Property",
            "value": "Property",
            "description": "PROPERTY Option"
          }
        ]
      }
    },
    "DataflowEndpointLocalStorage": {
      "type": "object",
      "description": "Local persistent volume endpoint properties",
      "properties": {
        "persistentVolumeClaimRef": {
          "type": "string",
          "description": "Persistent volume claim name."
        }
      },
      "required": [
        "persistentVolumeClaimRef"
      ]
    },
    "DataflowEndpointMqtt": {
      "type": "object",
      "description": "Broker endpoint properties",
      "properties": {
        "authentication": {
          "description": "authentication properties. DEFAULT: kubernetes.audience=aio-internal. NOTE - Enum field only property is allowed",
          "type": "object",
          "properties": {
            "method": {
              "description": "Mode of Authentication.",
              "type": "string",
              "enum": [
                "SystemAssignedManagedIdentity",
                "UserAssignedManagedIdentity",
                "ServiceAccountToken",
                "X509Certificate",
                "Anonymous"
              ],
              "x-ms-enum": {
                "name": "MqttAuthMethod",
                "modelAsString": true,
                "values": [
                  {
                    "name": "SystemAssignedManagedIdentity",
                    "value": "SystemAssignedManagedIdentity",
                    "description": "SystemAssignedManagedIdentity type"
                  },
                  {
                    "name": "UserAssignedManagedIdentity",
                    "value": "UserAssignedManagedIdentity",
                    "description": "UserAssignedManagedIdentity type"
                  },
                  {
                    "name": "ServiceAccountToken",
                    "value": "ServiceAccountToken",
                    "description": "ServiceAccountToken Option"
                  },
                  {
                    "name": "X509Certificate",
                    "value": "X509Certificate",
                    "description": "x509Certificate Option"
                  },
                  {
                    "name": "Anonymous",
                    "value": "Anonymous",
                    "description": "Anonymous Option"
                  }
                ]
              }
            },
            "systemAssignedManagedIdentitySettings": {
              "description": "System-assigned managed identity authentication.",
              "type": "object",
              "properties": {
                "audience": {
                  "type": "string",
                  "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
                }
              }
            },
            "userAssignedManagedIdentitySettings": {
              "description": "User-assigned managed identity authentication.",
              "type": "object",
              "properties": {
                "clientId": {
                  "type": "string",
                  "description": "Client ID for the user-assigned managed identity."
                },
                "scope": {
                  "type": "string",
                  "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
                },
                "tenantId": {
                  "type": "string",
                  "description": "Tenant ID."
                }
              },
              "required": [
                "clientId",
                "tenantId"
              ]
            },
            "serviceAccountTokenSettings": {
              "description": "Kubernetes service account token authentication. Default audience if not set is aio-internal",
              "type": "object",
              "properties": {
                "audience": {
                  "type": "string",
                  "description": "Audience of the service account. Optional, defaults to the broker internal service account audience."
                }
              },
              "required": [
                "audience"
              ]
            },
            "x509CertificateSettings": {
              "description": "X.509 certificate authentication.",
              "type": "object",
              "properties": {
                "secretRef": {
                  "type": "string",
                  "description": "Secret reference of the X.509 certificate."
                }
              },
              "required": [
                "secretRef"
              ]
            }
          },
          "required": [
            "method"
          ]
        },
        "clientIdPrefix": {
          "type": "string",
          "description": "Client ID prefix. Client ID generated by the dataflow is <prefix>-TBD. Optional; no prefix if omitted."
        },
        "host": {
          "type": "string",
          "description": "Host of the Broker in the form of <hostname>:<port>. Optional; connects to Broker if omitted."
        },
        "protocol": {
          "type": "string",
          "description": "Enable or disable websockets.",
          "default": "Mqtt",
          "enum": [
            "Mqtt",
            "WebSockets"
          ],
          "x-ms-enum": {
            "name": "BrokerProtocolType",
            "modelAsString": true,
            "values": [
              {
                "name": "Mqtt",
                "value": "Mqtt",
                "description": "protocol broker"
              },
              {
                "name": "WebSockets",
                "value": "WebSockets",
                "description": "protocol websocket"
              }
            ]
          }
        },
        "keepAliveSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Broker KeepAlive for connection in seconds.",
          "default": 60,
          "minimum": 0
        },
        "retain": {
          "type": "string",
          "description": "Whether or not to keep the retain setting.",
          "default": "Keep",
          "enum": [
            "Keep",
            "Never"
          ],
          "x-ms-enum": {
            "name": "MqttRetainType",
            "modelAsString": true,
            "values": [
              {
                "name": "Keep",
                "value": "Keep",
                "description": "Retain the messages."
              },
              {
                "name": "Never",
                "value": "Never",
                "description": "Never retain messages."
              }
            ]
          }
        },
        "maxInflightMessages": {
          "type": "integer",
          "format": "int32",
          "description": "The max number of messages to keep in flight. For subscribe, this is the receive maximum. For publish, this is the maximum number of messages to send before waiting for an ack.",
          "default": 100,
          "minimum": 0
        },
        "qos": {
          "type": "integer",
          "format": "int32",
          "description": "Qos for Broker connection.",
          "default": 1,
          "minimum": 0,
          "maximum": 1
        },
        "sessionExpirySeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Session expiry in seconds.",
          "minimum": 0
        },
        "tls": {
          "description": "TLS configuration.",
          "type": "object",
          "properties": {
            "mode": {
              "type": "string",
              "description": "Mode for TLS.",
              "default": "Enabled",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "OperationalMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled",
                    "description": "Enabled is equivalent to True"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "Disabled is equivalent to False."
                  }
                ]
              }
            },
            "trustedCaCertificateConfigMapRef": {
              "type": "string",
              "description": "Trusted CA certificate config map."
            }
          }
        },
        "cloudEventAttributes": {
          "description": "Cloud event mapping config.",
          "type": "string",
          "enum": [
            "Propagate",
            "CreateOrRemap"
          ],
          "x-ms-enum": {
            "name": "CloudEventAttributeType",
            "modelAsString": true,
            "values": [
              {
                "name": "Propagate",
                "value": "Propagate",
                "description": "Propagate type"
              },
              {
                "name": "CreateOrRemap",
                "value": "CreateOrRemap",
                "description": "CreateOrRemap type"
              }
            ]
          }
        }
      },
      "required": [
        "authentication"
      ]
    },
    "DataflowEndpointMqttAuthentication": {
      "type": "object",
      "description": "Mqtt endpoint Authentication properties. NOTE - only authentication property is allowed per entry.",
      "properties": {
        "method": {
          "description": "Mode of Authentication.",
          "type": "string",
          "enum": [
            "SystemAssignedManagedIdentity",
            "UserAssignedManagedIdentity",
            "ServiceAccountToken",
            "X509Certificate",
            "Anonymous"
          ],
          "x-ms-enum": {
            "name": "MqttAuthMethod",
            "modelAsString": true,
            "values": [
              {
                "name": "SystemAssignedManagedIdentity",
                "value": "SystemAssignedManagedIdentity",
                "description": "SystemAssignedManagedIdentity type"
              },
              {
                "name": "UserAssignedManagedIdentity",
                "value": "UserAssignedManagedIdentity",
                "description": "UserAssignedManagedIdentity type"
              },
              {
                "name": "ServiceAccountToken",
                "value": "ServiceAccountToken",
                "description": "ServiceAccountToken Option"
              },
              {
                "name": "X509Certificate",
                "value": "X509Certificate",
                "description": "x509Certificate Option"
              },
              {
                "name": "Anonymous",
                "value": "Anonymous",
                "description": "Anonymous Option"
              }
            ]
          }
        },
        "systemAssignedManagedIdentitySettings": {
          "description": "System-assigned managed identity authentication.",
          "type": "object",
          "properties": {
            "audience": {
              "type": "string",
              "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
            }
          }
        },
        "userAssignedManagedIdentitySettings": {
          "description": "User-assigned managed identity authentication.",
          "type": "object",
          "properties": {
            "clientId": {
              "type": "string",
              "description": "Client ID for the user-assigned managed identity."
            },
            "scope": {
              "type": "string",
              "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
            },
            "tenantId": {
              "type": "string",
              "description": "Tenant ID."
            }
          },
          "required": [
            "clientId",
            "tenantId"
          ]
        },
        "serviceAccountTokenSettings": {
          "description": "Kubernetes service account token authentication. Default audience if not set is aio-internal",
          "type": "object",
          "properties": {
            "audience": {
              "type": "string",
              "description": "Audience of the service account. Optional, defaults to the broker internal service account audience."
            }
          },
          "required": [
            "audience"
          ]
        },
        "x509CertificateSettings": {
          "description": "X.509 certificate authentication.",
          "type": "object",
          "properties": {
            "secretRef": {
              "type": "string",
              "description": "Secret reference of the X.509 certificate."
            }
          },
          "required": [
            "secretRef"
          ]
        }
      },
      "required": [
        "method"
      ]
    },
    "DataflowEndpointOpenTelemetry": {
      "type": "object",
      "description": "OpenTelemetry endpoint properties.",
      "properties": {
        "host": {
          "type": "string",
          "description": "Host of the OpenTelemetry in the form of <host>:<port>."
        },
        "batching": {
          "description": "Batching configuration.",
          "type": "object",
          "properties": {
            "latencySeconds": {
              "type": "integer",
              "format": "int32",
              "description": "Batching latency in seconds.",
              "default": 60,
              "minimum": 0,
              "maximum": 65535
            },
            "maxMessages": {
              "type": "integer",
              "format": "int32",
              "description": "Maximum number of messages in a batch.",
              "default": 100000,
              "minimum": 0,
              "maximum": 4294967295
            }
          }
        },
        "tls": {
          "description": "TLS configuration.",
          "type": "object",
          "properties": {
            "mode": {
              "type": "string",
              "description": "Mode for TLS.",
              "default": "Enabled",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "OperationalMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled",
                    "description": "Enabled is equivalent to True"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "Disabled is equivalent to False."
                  }
                ]
              }
            },
            "trustedCaCertificateConfigMapRef": {
              "type": "string",
              "description": "Trusted CA certificate config map."
            }
          }
        },
        "authentication": {
          "description": "Authentication properties for OpenTelemetry endpoints",
          "type": "object",
          "properties": {
            "method": {
              "description": "The authentication method.",
              "type": "string",
              "enum": [
                "ServiceAccountToken",
                "X509Certificate",
                "Anonymous"
              ],
              "x-ms-enum": {
                "name": "DataflowOpenTelemetryAuthenticationMethod",
                "modelAsString": true,
                "values": [
                  {
                    "name": "ServiceAccountToken",
                    "value": "ServiceAccountToken",
                    "description": "Uses serviceaccount token."
                  },
                  {
                    "name": "X509Certificate",
                    "value": "X509Certificate",
                    "description": "Uses x509 certificate."
                  },
                  {
                    "name": "Anonymous",
                    "value": "Anonymous",
                    "description": "Connects anonymously."
                  }
                ]
              }
            }
          },
          "discriminator": "method",
          "required": [
            "method"
          ]
        }
      },
      "required": [
        "host",
        "authentication"
      ]
    },
    "DataflowEndpointProperties": {
      "type": "object",
      "description": "DataflowEndpoint Resource properties. NOTE - Only one type of endpoint is supported for one Resource",
      "properties": {
        "endpointType": {
          "description": "Endpoint Type.",
          "type": "string",
          "enum": [
            "DataExplorer",
            "DataLakeStorage",
            "FabricOneLake",
            "Kafka",
            "LocalStorage",
            "Mqtt",
            "OpenTelemetry"
          ],
          "x-ms-enum": {
            "name": "EndpointType",
            "modelAsString": true,
            "values": [
              {
                "name": "DataExplorer",
                "value": "DataExplorer",
                "description": "Azure Data Explorer Type"
              },
              {
                "name": "DataLakeStorage",
                "value": "DataLakeStorage",
                "description": "Azure Data Lake Type"
              },
              {
                "name": "FabricOneLake",
                "value": "FabricOneLake",
                "description": "Microsoft Fabric Type"
              },
              {
                "name": "Kafka",
                "value": "Kafka",
                "description": "Kafka Type"
              },
              {
                "name": "LocalStorage",
                "value": "LocalStorage",
                "description": "Local Storage Type"
              },
              {
                "name": "Mqtt",
                "value": "Mqtt",
                "description": "Broker Type"
              },
              {
                "name": "OpenTelemetry",
                "value": "OpenTelemetry",
                "description": "OpenTelemetry Type"
              }
            ]
          }
        },
        "hostType": {
          "description": "The type of the Kafka host. E.g FabricRT, EventGrid.",
          "type": "string",
          "enum": [
            "FabricRT",
            "EventGrid",
            "LocalBroker",
            "Eventhub",
            "CustomMqtt",
            "CustomKafka"
          ],
          "x-ms-enum": {
            "name": "DataflowEndpointHostType",
            "modelAsString": true,
            "values": [
              {
                "name": "FabricRT",
                "value": "FabricRT",
                "description": "Fabric Real-Time Type"
              },
              {
                "name": "EventGrid",
                "value": "EventGrid",
                "description": "EventGrid Type"
              },
              {
                "name": "LocalBroker",
                "value": "LocalBroker",
                "description": "Local MQTT Type"
              },
              {
                "name": "Eventhub",
                "value": "Eventhub",
                "description": "EventHub Type"
              },
              {
                "name": "CustomMqtt",
                "value": "CustomMqtt",
                "description": "Custom MQTT Type"
              },
              {
                "name": "CustomKafka",
                "value": "CustomKafka",
                "description": "Custom Kafka Type"
              }
            ]
          }
        },
        "dataExplorerSettings": {
          "description": "Azure Data Explorer endpoint.",
          "type": "object",
          "properties": {
            "authentication": {
              "description": "Authentication configuration. NOTE - only authentication property is allowed per entry.",
              "type": "object",
              "properties": {
                "method": {
                  "description": "Mode of Authentication.",
                  "x-nullable": false,
                  "type": "string",
                  "enum": [
                    "SystemAssignedManagedIdentity",
                    "UserAssignedManagedIdentity"
                  ],
                  "x-ms-enum": {
                    "name": "ManagedIdentityMethod",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "SystemAssignedManagedIdentity",
                        "value": "SystemAssignedManagedIdentity",
                        "description": "SystemAssignedManagedIdentity type"
                      },
                      {
                        "name": "UserAssignedManagedIdentity",
                        "value": "UserAssignedManagedIdentity",
                        "description": "UserAssignedManagedIdentity type"
                      }
                    ]
                  }
                },
                "systemAssignedManagedIdentitySettings": {
                  "description": "System-assigned managed identity authentication.",
                  "type": "object",
                  "properties": {
                    "audience": {
                      "type": "string",
                      "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
                    }
                  }
                },
                "userAssignedManagedIdentitySettings": {
                  "description": "User-assigned managed identity authentication.",
                  "type": "object",
                  "properties": {
                    "clientId": {
                      "type": "string",
                      "description": "Client ID for the user-assigned managed identity."
                    },
                    "scope": {
                      "type": "string",
                      "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "Tenant ID."
                    }
                  },
                  "required": [
                    "clientId",
                    "tenantId"
                  ]
                }
              },
              "required": [
                "method"
              ]
            },
            "database": {
              "type": "string",
              "description": "Database name."
            },
            "host": {
              "type": "string",
              "description": "Host of the Azure Data Explorer in the form of <cluster>.<region>.kusto.windows.net .",
              "pattern": ".+\\..+\\.kusto\\.windows\\.net"
            },
            "batching": {
              "description": "Azure Data Explorer endpoint batching configuration.",
              "type": "object",
              "properties": {
                "latencySeconds": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Batching latency in seconds.",
                  "default": 60,
                  "minimum": 0,
                  "maximum": 65535
                },
                "maxMessages": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Maximum number of messages in a batch.",
                  "default": 100000,
                  "minimum": 0,
                  "maximum": 4294967295
                }
              }
            }
          },
          "required": [
            "authentication",
            "database",
            "host"
          ]
        },
        "dataLakeStorageSettings": {
          "description": "Azure Data Lake endpoint.",
          "type": "object",
          "properties": {
            "authentication": {
              "description": "Authentication configuration. NOTE - only authentication property is allowed per entry.",
              "type": "object",
              "properties": {
                "method": {
                  "description": "Mode of Authentication.",
                  "type": "string",
                  "enum": [
                    "SystemAssignedManagedIdentity",
                    "UserAssignedManagedIdentity",
                    "AccessToken"
                  ],
                  "x-ms-enum": {
                    "name": "DataLakeStorageAuthMethod",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "SystemAssignedManagedIdentity",
                        "value": "SystemAssignedManagedIdentity",
                        "description": "SystemAssignedManagedIdentity type"
                      },
                      {
                        "name": "UserAssignedManagedIdentity",
                        "value": "UserAssignedManagedIdentity",
                        "description": "UserAssignedManagedIdentity type"
                      },
                      {
                        "name": "AccessToken",
                        "value": "AccessToken",
                        "description": "AccessToken Option"
                      }
                    ]
                  }
                },
                "accessTokenSettings": {
                  "description": "SAS token authentication.",
                  "type": "object",
                  "properties": {
                    "secretRef": {
                      "type": "string",
                      "description": "Token secret name."
                    }
                  },
                  "required": [
                    "secretRef"
                  ]
                },
                "systemAssignedManagedIdentitySettings": {
                  "description": "System-assigned managed identity authentication.",
                  "type": "object",
                  "properties": {
                    "audience": {
                      "type": "string",
                      "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
                    }
                  }
                },
                "userAssignedManagedIdentitySettings": {
                  "description": "User-assigned managed identity authentication.",
                  "type": "object",
                  "properties": {
                    "clientId": {
                      "type": "string",
                      "description": "Client ID for the user-assigned managed identity."
                    },
                    "scope": {
                      "type": "string",
                      "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "Tenant ID."
                    }
                  },
                  "required": [
                    "clientId",
                    "tenantId"
                  ]
                }
              },
              "required": [
                "method"
              ]
            },
            "host": {
              "type": "string",
              "description": "Host of the Azure Data Lake in the form of <account>.blob.core.windows.net .",
              "pattern": ".+\\.blob\\.core\\.windows\\.net"
            },
            "batching": {
              "description": "Azure Data Lake endpoint batching configuration.",
              "type": "object",
              "properties": {
                "latencySeconds": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Batching latency in seconds.",
                  "default": 60,
                  "minimum": 0,
                  "maximum": 65535
                },
                "maxMessages": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Maximum number of messages in a batch.",
                  "default": 100000,
                  "minimum": 0,
                  "maximum": 4294967295
                }
              }
            }
          },
          "required": [
            "authentication",
            "host"
          ]
        },
        "fabricOneLakeSettings": {
          "description": "Microsoft Fabric endpoint.",
          "type": "object",
          "properties": {
            "authentication": {
              "description": "Authentication configuration. NOTE - only one authentication property is allowed per entry.",
              "type": "object",
              "properties": {
                "method": {
                  "description": "Mode of Authentication.",
                  "x-nullable": false,
                  "type": "string",
                  "enum": [
                    "SystemAssignedManagedIdentity",
                    "UserAssignedManagedIdentity"
                  ],
                  "x-ms-enum": {
                    "name": "ManagedIdentityMethod",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "SystemAssignedManagedIdentity",
                        "value": "SystemAssignedManagedIdentity",
                        "description": "SystemAssignedManagedIdentity type"
                      },
                      {
                        "name": "UserAssignedManagedIdentity",
                        "value": "UserAssignedManagedIdentity",
                        "description": "UserAssignedManagedIdentity type"
                      }
                    ]
                  }
                },
                "systemAssignedManagedIdentitySettings": {
                  "description": "System-assigned managed identity authentication.",
                  "type": "object",
                  "properties": {
                    "audience": {
                      "type": "string",
                      "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
                    }
                  }
                },
                "userAssignedManagedIdentitySettings": {
                  "description": "User-assigned managed identity authentication.",
                  "type": "object",
                  "properties": {
                    "clientId": {
                      "type": "string",
                      "description": "Client ID for the user-assigned managed identity."
                    },
                    "scope": {
                      "type": "string",
                      "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "Tenant ID."
                    }
                  },
                  "required": [
                    "clientId",
                    "tenantId"
                  ]
                }
              },
              "required": [
                "method"
              ]
            },
            "names": {
              "description": "Names of the workspace and lakehouse.",
              "type": "object",
              "properties": {
                "lakehouseName": {
                  "type": "string",
                  "description": "Lakehouse name."
                },
                "workspaceName": {
                  "type": "string",
                  "description": "Workspace name."
                }
              },
              "required": [
                "lakehouseName",
                "workspaceName"
              ]
            },
            "oneLakePathType": {
              "description": "Type of location of the data in the workspace. Can be either tables or files.",
              "type": "string",
              "enum": [
                "Files",
                "Tables"
              ],
              "x-ms-enum": {
                "name": "DataflowEndpointFabricPathType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Files",
                    "value": "Files",
                    "description": "FILES Type"
                  },
                  {
                    "name": "Tables",
                    "value": "Tables",
                    "description": "TABLES Type"
                  }
                ]
              }
            },
            "host": {
              "type": "string",
              "description": "Host of the Microsoft Fabric in the form of https://<host>.fabric.microsoft.com.",
              "pattern": ".+\\.fabric\\.microsoft\\.com"
            },
            "batching": {
              "description": "Batching configuration.",
              "type": "object",
              "properties": {
                "latencySeconds": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Batching latency in seconds.",
                  "default": 60,
                  "minimum": 0,
                  "maximum": 65535
                },
                "maxMessages": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Maximum number of messages in a batch.",
                  "default": 100000,
                  "minimum": 0,
                  "maximum": 4294967295
                }
              }
            }
          },
          "required": [
            "authentication",
            "names",
            "oneLakePathType",
            "host"
          ]
        },
        "kafkaSettings": {
          "description": "Kafka endpoint.",
          "type": "object",
          "properties": {
            "authentication": {
              "description": "Authentication configuration. NOTE - only authentication property is allowed per entry.",
              "type": "object",
              "properties": {
                "method": {
                  "description": "Mode of Authentication.",
                  "type": "string",
                  "enum": [
                    "SystemAssignedManagedIdentity",
                    "UserAssignedManagedIdentity",
                    "Sasl",
                    "X509Certificate",
                    "Anonymous"
                  ],
                  "x-ms-enum": {
                    "name": "KafkaAuthMethod",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "SystemAssignedManagedIdentity",
                        "value": "SystemAssignedManagedIdentity",
                        "description": "SystemAssignedManagedIdentity type"
                      },
                      {
                        "name": "UserAssignedManagedIdentity",
                        "value": "UserAssignedManagedIdentity",
                        "description": "UserAssignedManagedIdentity type"
                      },
                      {
                        "name": "Sasl",
                        "value": "Sasl",
                        "description": "Sasl Option"
                      },
                      {
                        "name": "X509Certificate",
                        "value": "X509Certificate",
                        "description": "x509Certificate Option"
                      },
                      {
                        "name": "Anonymous",
                        "value": "Anonymous",
                        "description": "Anonymous Option"
                      }
                    ]
                  }
                },
                "systemAssignedManagedIdentitySettings": {
                  "description": "System-assigned managed identity authentication.",
                  "type": "object",
                  "properties": {
                    "audience": {
                      "type": "string",
                      "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
                    }
                  }
                },
                "userAssignedManagedIdentitySettings": {
                  "description": "User-assigned managed identity authentication.",
                  "type": "object",
                  "properties": {
                    "clientId": {
                      "type": "string",
                      "description": "Client ID for the user-assigned managed identity."
                    },
                    "scope": {
                      "type": "string",
                      "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "Tenant ID."
                    }
                  },
                  "required": [
                    "clientId",
                    "tenantId"
                  ]
                },
                "saslSettings": {
                  "description": "SASL authentication.",
                  "type": "object",
                  "properties": {
                    "saslType": {
                      "description": "Type of SASL authentication. Can be PLAIN, SCRAM-SHA-256, or SCRAM-SHA-512.",
                      "type": "string",
                      "enum": [
                        "Plain",
                        "ScramSha256",
                        "ScramSha512"
                      ],
                      "x-ms-enum": {
                        "name": "DataflowEndpointAuthenticationSaslType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Plain",
                            "value": "Plain",
                            "description": "PLAIN Type"
                          },
                          {
                            "name": "ScramSha256",
                            "value": "ScramSha256",
                            "description": "SCRAM_SHA_256 Type"
                          },
                          {
                            "name": "ScramSha512",
                            "value": "ScramSha512",
                            "description": "SCRAM_SHA_512 Type"
                          }
                        ]
                      }
                    },
                    "secretRef": {
                      "type": "string",
                      "description": "Token secret name."
                    }
                  },
                  "required": [
                    "saslType",
                    "secretRef"
                  ]
                },
                "x509CertificateSettings": {
                  "description": "X.509 certificate authentication.",
                  "type": "object",
                  "properties": {
                    "secretRef": {
                      "type": "string",
                      "description": "Secret reference of the X.509 certificate."
                    }
                  },
                  "required": [
                    "secretRef"
                  ]
                }
              },
              "required": [
                "method"
              ]
            },
            "consumerGroupId": {
              "type": "string",
              "description": "Consumer group ID."
            },
            "host": {
              "type": "string",
              "description": "Kafka endpoint host."
            },
            "batching": {
              "description": "Batching configuration.",
              "type": "object",
              "properties": {
                "mode": {
                  "type": "string",
                  "description": "Mode for batching.",
                  "default": "Enabled",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "OperationalMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled",
                        "description": "Enabled is equivalent to True"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled",
                        "description": "Disabled is equivalent to False."
                      }
                    ]
                  }
                },
                "latencyMs": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Batching latency in milliseconds.",
                  "default": 5,
                  "minimum": 0,
                  "maximum": 65535
                },
                "maxBytes": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Maximum number of bytes in a batch.",
                  "default": 1000000,
                  "minimum": 0,
                  "maximum": 4294967295
                },
                "maxMessages": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Maximum number of messages in a batch.",
                  "default": 100000,
                  "minimum": 0,
                  "maximum": 4294967295
                }
              }
            },
            "copyMqttProperties": {
              "type": "string",
              "description": "Copy Broker properties. No effect if the endpoint is used as a source or if the dataflow doesn't have an Broker source.",
              "default": "Enabled",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "OperationalMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled",
                    "description": "Enabled is equivalent to True"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "Disabled is equivalent to False."
                  }
                ]
              }
            },
            "compression": {
              "type": "string",
              "description": "Compression. Can be none, gzip, lz4, or snappy. No effect if the endpoint is used as a source.",
              "default": "None",
              "enum": [
                "None",
                "Gzip",
                "Snappy",
                "Lz4"
              ],
              "x-ms-enum": {
                "name": "DataflowEndpointKafkaCompression",
                "modelAsString": true,
                "values": [
                  {
                    "name": "None",
                    "value": "None",
                    "description": "NONE Option"
                  },
                  {
                    "name": "Gzip",
                    "value": "Gzip",
                    "description": "Gzip Option"
                  },
                  {
                    "name": "Snappy",
                    "value": "Snappy",
                    "description": "SNAPPY Option"
                  },
                  {
                    "name": "Lz4",
                    "value": "Lz4",
                    "description": "LZ4 Option"
                  }
                ]
              }
            },
            "kafkaAcks": {
              "type": "string",
              "description": "Kafka acks. Can be all, one, or zero. No effect if the endpoint is used as a source.",
              "default": "All",
              "enum": [
                "Zero",
                "One",
                "All"
              ],
              "x-ms-enum": {
                "name": "DataflowEndpointKafkaAcks",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Zero",
                    "value": "Zero",
                    "description": "ZERO Option"
                  },
                  {
                    "name": "One",
                    "value": "One",
                    "description": "ONE Option"
                  },
                  {
                    "name": "All",
                    "value": "All",
                    "description": "ALL Option"
                  }
                ]
              }
            },
            "partitionStrategy": {
              "type": "string",
              "description": "Partition handling strategy. Can be default or static. No effect if the endpoint is used as a source.",
              "default": "Default",
              "enum": [
                "Default",
                "Static",
                "Topic",
                "Property"
              ],
              "x-ms-enum": {
                "name": "DataflowEndpointKafkaPartitionStrategy",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Default",
                    "value": "Default",
                    "description": "Default: Assigns messages to random partitions, using a round-robin algorithm."
                  },
                  {
                    "name": "Static",
                    "value": "Static",
                    "description": "Static: Assigns messages to a fixed partition number that's derived from the instance ID of the dataflow."
                  },
                  {
                    "name": "Topic",
                    "value": "Topic",
                    "description": "TOPIC Option"
                  },
                  {
                    "name": "Property",
                    "value": "Property",
                    "description": "PROPERTY Option"
                  }
                ]
              }
            },
            "tls": {
              "description": "TLS configuration.",
              "type": "object",
              "properties": {
                "mode": {
                  "type": "string",
                  "description": "Mode for TLS.",
                  "default": "Enabled",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "OperationalMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled",
                        "description": "Enabled is equivalent to True"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled",
                        "description": "Disabled is equivalent to False."
                      }
                    ]
                  }
                },
                "trustedCaCertificateConfigMapRef": {
                  "type": "string",
                  "description": "Trusted CA certificate config map."
                }
              }
            },
            "cloudEventAttributes": {
              "description": "Cloud event mapping config.",
              "type": "string",
              "enum": [
                "Propagate",
                "CreateOrRemap"
              ],
              "x-ms-enum": {
                "name": "CloudEventAttributeType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Propagate",
                    "value": "Propagate",
                    "description": "Propagate type"
                  },
                  {
                    "name": "CreateOrRemap",
                    "value": "CreateOrRemap",
                    "description": "CreateOrRemap type"
                  }
                ]
              }
            }
          },
          "required": [
            "authentication",
            "host"
          ]
        },
        "localStorageSettings": {
          "description": "Local persistent volume endpoint.",
          "type": "object",
          "properties": {
            "persistentVolumeClaimRef": {
              "type": "string",
              "description": "Persistent volume claim name."
            }
          },
          "required": [
            "persistentVolumeClaimRef"
          ]
        },
        "mqttSettings": {
          "description": "Broker endpoint.",
          "type": "object",
          "properties": {
            "authentication": {
              "description": "authentication properties. DEFAULT: kubernetes.audience=aio-internal. NOTE - Enum field only property is allowed",
              "type": "object",
              "properties": {
                "method": {
                  "description": "Mode of Authentication.",
                  "type": "string",
                  "enum": [
                    "SystemAssignedManagedIdentity",
                    "UserAssignedManagedIdentity",
                    "ServiceAccountToken",
                    "X509Certificate",
                    "Anonymous"
                  ],
                  "x-ms-enum": {
                    "name": "MqttAuthMethod",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "SystemAssignedManagedIdentity",
                        "value": "SystemAssignedManagedIdentity",
                        "description": "SystemAssignedManagedIdentity type"
                      },
                      {
                        "name": "UserAssignedManagedIdentity",
                        "value": "UserAssignedManagedIdentity",
                        "description": "UserAssignedManagedIdentity type"
                      },
                      {
                        "name": "ServiceAccountToken",
                        "value": "ServiceAccountToken",
                        "description": "ServiceAccountToken Option"
                      },
                      {
                        "name": "X509Certificate",
                        "value": "X509Certificate",
                        "description": "x509Certificate Option"
                      },
                      {
                        "name": "Anonymous",
                        "value": "Anonymous",
                        "description": "Anonymous Option"
                      }
                    ]
                  }
                },
                "systemAssignedManagedIdentitySettings": {
                  "description": "System-assigned managed identity authentication.",
                  "type": "object",
                  "properties": {
                    "audience": {
                      "type": "string",
                      "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
                    }
                  }
                },
                "userAssignedManagedIdentitySettings": {
                  "description": "User-assigned managed identity authentication.",
                  "type": "object",
                  "properties": {
                    "clientId": {
                      "type": "string",
                      "description": "Client ID for the user-assigned managed identity."
                    },
                    "scope": {
                      "type": "string",
                      "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "Tenant ID."
                    }
                  },
                  "required": [
                    "clientId",
                    "tenantId"
                  ]
                },
                "serviceAccountTokenSettings": {
                  "description": "Kubernetes service account token authentication. Default audience if not set is aio-internal",
                  "type": "object",
                  "properties": {
                    "audience": {
                      "type": "string",
                      "description": "Audience of the service account. Optional, defaults to the broker internal service account audience."
                    }
                  },
                  "required": [
                    "audience"
                  ]
                },
                "x509CertificateSettings": {
                  "description": "X.509 certificate authentication.",
                  "type": "object",
                  "properties": {
                    "secretRef": {
                      "type": "string",
                      "description": "Secret reference of the X.509 certificate."
                    }
                  },
                  "required": [
                    "secretRef"
                  ]
                }
              },
              "required": [
                "method"
              ]
            },
            "clientIdPrefix": {
              "type": "string",
              "description": "Client ID prefix. Client ID generated by the dataflow is <prefix>-TBD. Optional; no prefix if omitted."
            },
            "host": {
              "type": "string",
              "description": "Host of the Broker in the form of <hostname>:<port>. Optional; connects to Broker if omitted."
            },
            "protocol": {
              "type": "string",
              "description": "Enable or disable websockets.",
              "default": "Mqtt",
              "enum": [
                "Mqtt",
                "WebSockets"
              ],
              "x-ms-enum": {
                "name": "BrokerProtocolType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Mqtt",
                    "value": "Mqtt",
                    "description": "protocol broker"
                  },
                  {
                    "name": "WebSockets",
                    "value": "WebSockets",
                    "description": "protocol websocket"
                  }
                ]
              }
            },
            "keepAliveSeconds": {
              "type": "integer",
              "format": "int32",
              "description": "Broker KeepAlive for connection in seconds.",
              "default": 60,
              "minimum": 0
            },
            "retain": {
              "type": "string",
              "description": "Whether or not to keep the retain setting.",
              "default": "Keep",
              "enum": [
                "Keep",
                "Never"
              ],
              "x-ms-enum": {
                "name": "MqttRetainType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Keep",
                    "value": "Keep",
                    "description": "Retain the messages."
                  },
                  {
                    "name": "Never",
                    "value": "Never",
                    "description": "Never retain messages."
                  }
                ]
              }
            },
            "maxInflightMessages": {
              "type": "integer",
              "format": "int32",
              "description": "The max number of messages to keep in flight. For subscribe, this is the receive maximum. For publish, this is the maximum number of messages to send before waiting for an ack.",
              "default": 100,
              "minimum": 0
            },
            "qos": {
              "type": "integer",
              "format": "int32",
              "description": "Qos for Broker connection.",
              "default": 1,
              "minimum": 0,
              "maximum": 1
            },
            "sessionExpirySeconds": {
              "type": "integer",
              "format": "int32",
              "description": "Session expiry in seconds.",
              "minimum": 0
            },
            "tls": {
              "description": "TLS configuration.",
              "type": "object",
              "properties": {
                "mode": {
                  "type": "string",
                  "description": "Mode for TLS.",
                  "default": "Enabled",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "OperationalMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled",
                        "description": "Enabled is equivalent to True"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled",
                        "description": "Disabled is equivalent to False."
                      }
                    ]
                  }
                },
                "trustedCaCertificateConfigMapRef": {
                  "type": "string",
                  "description": "Trusted CA certificate config map."
                }
              }
            },
            "cloudEventAttributes": {
              "description": "Cloud event mapping config.",
              "type": "string",
              "enum": [
                "Propagate",
                "CreateOrRemap"
              ],
              "x-ms-enum": {
                "name": "CloudEventAttributeType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Propagate",
                    "value": "Propagate",
                    "description": "Propagate type"
                  },
                  {
                    "name": "CreateOrRemap",
                    "value": "CreateOrRemap",
                    "description": "CreateOrRemap type"
                  }
                ]
              }
            }
          },
          "required": [
            "authentication"
          ]
        },
        "openTelemetrySettings": {
          "description": "OpenTelemetry endpoint.",
          "type": "object",
          "properties": {
            "host": {
              "type": "string",
              "description": "Host of the OpenTelemetry in the form of <host>:<port>."
            },
            "batching": {
              "description": "Batching configuration.",
              "type": "object",
              "properties": {
                "latencySeconds": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Batching latency in seconds.",
                  "default": 60,
                  "minimum": 0,
                  "maximum": 65535
                },
                "maxMessages": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Maximum number of messages in a batch.",
                  "default": 100000,
                  "minimum": 0,
                  "maximum": 4294967295
                }
              }
            },
            "tls": {
              "description": "TLS configuration.",
              "type": "object",
              "properties": {
                "mode": {
                  "type": "string",
                  "description": "Mode for TLS.",
                  "default": "Enabled",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "OperationalMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled",
                        "description": "Enabled is equivalent to True"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled",
                        "description": "Disabled is equivalent to False."
                      }
                    ]
                  }
                },
                "trustedCaCertificateConfigMapRef": {
                  "type": "string",
                  "description": "Trusted CA certificate config map."
                }
              }
            },
            "authentication": {
              "description": "Authentication properties for OpenTelemetry endpoints",
              "type": "object",
              "properties": {
                "method": {
                  "description": "The authentication method.",
                  "type": "string",
                  "enum": [
                    "ServiceAccountToken",
                    "X509Certificate",
                    "Anonymous"
                  ],
                  "x-ms-enum": {
                    "name": "DataflowOpenTelemetryAuthenticationMethod",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "ServiceAccountToken",
                        "value": "ServiceAccountToken",
                        "description": "Uses serviceaccount token."
                      },
                      {
                        "name": "X509Certificate",
                        "value": "X509Certificate",
                        "description": "Uses x509 certificate."
                      },
                      {
                        "name": "Anonymous",
                        "value": "Anonymous",
                        "description": "Connects anonymously."
                      }
                    ]
                  }
                }
              },
              "discriminator": "method",
              "required": [
                "method"
              ]
            }
          },
          "required": [
            "host",
            "authentication"
          ]
        },
        "provisioningState": {
          "description": "The status of the last operation.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Updating",
            "Deleting",
            "Accepted"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Provisioning",
                "value": "Provisioning",
                "description": "Resource is getting provisioned."
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "Resource is Updating."
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "Resource is Deleting."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "Resource has been Accepted."
              }
            ]
          }
        },
        "healthState": {
          "type": "string",
          "description": "The health state of the resource.",
          "default": "Unknown",
          "enum": [
            "Available",
            "Degraded",
            "Unavailable",
            "Unknown"
          ],
          "x-ms-enum": {
            "name": "ResourceHealthState",
            "modelAsString": true,
            "values": [
              {
                "name": "Available",
                "value": "Available",
                "description": "Resource is Available and functioning as expected."
              },
              {
                "name": "Degraded",
                "value": "Degraded",
                "description": "Resource health is degraded."
              },
              {
                "name": "Unavailable",
                "value": "Unavailable",
                "description": "Resource is not functioning as expected."
              },
              {
                "name": "Unknown",
                "value": "Unknown",
                "description": "Resource state is unknown."
              }
            ]
          },
          "readOnly": true
        }
      },
      "required": [
        "endpointType"
      ]
    },
    "DataflowEndpointResource": {
      "type": "object",
      "description": "Instance dataflowEndpoint resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "endpointType": {
              "description": "Endpoint Type.",
              "type": "string",
              "enum": [
                "DataExplorer",
                "DataLakeStorage",
                "FabricOneLake",
                "Kafka",
                "LocalStorage",
                "Mqtt",
                "OpenTelemetry"
              ],
              "x-ms-enum": {
                "name": "EndpointType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "DataExplorer",
                    "value": "DataExplorer",
                    "description": "Azure Data Explorer Type"
                  },
                  {
                    "name": "DataLakeStorage",
                    "value": "DataLakeStorage",
                    "description": "Azure Data Lake Type"
                  },
                  {
                    "name": "FabricOneLake",
                    "value": "FabricOneLake",
                    "description": "Microsoft Fabric Type"
                  },
                  {
                    "name": "Kafka",
                    "value": "Kafka",
                    "description": "Kafka Type"
                  },
                  {
                    "name": "LocalStorage",
                    "value": "LocalStorage",
                    "description": "Local Storage Type"
                  },
                  {
                    "name": "Mqtt",
                    "value": "Mqtt",
                    "description": "Broker Type"
                  },
                  {
                    "name": "OpenTelemetry",
                    "value": "OpenTelemetry",
                    "description": "OpenTelemetry Type"
                  }
                ]
              }
            },
            "hostType": {
              "description": "The type of the Kafka host. E.g FabricRT, EventGrid.",
              "type": "string",
              "enum": [
                "FabricRT",
                "EventGrid",
                "LocalBroker",
                "Eventhub",
                "CustomMqtt",
                "CustomKafka"
              ],
              "x-ms-enum": {
                "name": "DataflowEndpointHostType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "FabricRT",
                    "value": "FabricRT",
                    "description": "Fabric Real-Time Type"
                  },
                  {
                    "name": "EventGrid",
                    "value": "EventGrid",
                    "description": "EventGrid Type"
                  },
                  {
                    "name": "LocalBroker",
                    "value": "LocalBroker",
                    "description": "Local MQTT Type"
                  },
                  {
                    "name": "Eventhub",
                    "value": "Eventhub",
                    "description": "EventHub Type"
                  },
                  {
                    "name": "CustomMqtt",
                    "value": "CustomMqtt",
                    "description": "Custom MQTT Type"
                  },
                  {
                    "name": "CustomKafka",
                    "value": "CustomKafka",
                    "description": "Custom Kafka Type"
                  }
                ]
              }
            },
            "dataExplorerSettings": {
              "description": "Azure Data Explorer endpoint.",
              "type": "object",
              "properties": {
                "authentication": {
                  "description": "Authentication configuration. NOTE - only authentication property is allowed per entry.",
                  "type": "object",
                  "properties": {
                    "method": {
                      "description": "Mode of Authentication.",
                      "x-nullable": false,
                      "type": "string",
                      "enum": [
                        "SystemAssignedManagedIdentity",
                        "UserAssignedManagedIdentity"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedIdentityMethod",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "SystemAssignedManagedIdentity",
                            "value": "SystemAssignedManagedIdentity",
                            "description": "SystemAssignedManagedIdentity type"
                          },
                          {
                            "name": "UserAssignedManagedIdentity",
                            "value": "UserAssignedManagedIdentity",
                            "description": "UserAssignedManagedIdentity type"
                          }
                        ]
                      }
                    },
                    "systemAssignedManagedIdentitySettings": {
                      "description": "System-assigned managed identity authentication.",
                      "type": "object",
                      "properties": {
                        "audience": {
                          "type": "string",
                          "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
                        }
                      }
                    },
                    "userAssignedManagedIdentitySettings": {
                      "description": "User-assigned managed identity authentication.",
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "type": "string",
                          "description": "Client ID for the user-assigned managed identity."
                        },
                        "scope": {
                          "type": "string",
                          "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
                        },
                        "tenantId": {
                          "type": "string",
                          "description": "Tenant ID."
                        }
                      },
                      "required": [
                        "clientId",
                        "tenantId"
                      ]
                    }
                  },
                  "required": [
                    "method"
                  ]
                },
                "database": {
                  "type": "string",
                  "description": "Database name."
                },
                "host": {
                  "type": "string",
                  "description": "Host of the Azure Data Explorer in the form of <cluster>.<region>.kusto.windows.net .",
                  "pattern": ".+\\..+\\.kusto\\.windows\\.net"
                },
                "batching": {
                  "description": "Azure Data Explorer endpoint batching configuration.",
                  "type": "object",
                  "properties": {
                    "latencySeconds": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Batching latency in seconds.",
                      "default": 60,
                      "minimum": 0,
                      "maximum": 65535
                    },
                    "maxMessages": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Maximum number of messages in a batch.",
                      "default": 100000,
                      "minimum": 0,
                      "maximum": 4294967295
                    }
                  }
                }
              },
              "required": [
                "authentication",
                "database",
                "host"
              ]
            },
            "dataLakeStorageSettings": {
              "description": "Azure Data Lake endpoint.",
              "type": "object",
              "properties": {
                "authentication": {
                  "description": "Authentication configuration. NOTE - only authentication property is allowed per entry.",
                  "type": "object",
                  "properties": {
                    "method": {
                      "description": "Mode of Authentication.",
                      "type": "string",
                      "enum": [
                        "SystemAssignedManagedIdentity",
                        "UserAssignedManagedIdentity",
                        "AccessToken"
                      ],
                      "x-ms-enum": {
                        "name": "DataLakeStorageAuthMethod",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "SystemAssignedManagedIdentity",
                            "value": "SystemAssignedManagedIdentity",
                            "description": "SystemAssignedManagedIdentity type"
                          },
                          {
                            "name": "UserAssignedManagedIdentity",
                            "value": "UserAssignedManagedIdentity",
                            "description": "UserAssignedManagedIdentity type"
                          },
                          {
                            "name": "AccessToken",
                            "value": "AccessToken",
                            "description": "AccessToken Option"
                          }
                        ]
                      }
                    },
                    "accessTokenSettings": {
                      "description": "SAS token authentication.",
                      "type": "object",
                      "properties": {
                        "secretRef": {
                          "type": "string",
                          "description": "Token secret name."
                        }
                      },
                      "required": [
                        "secretRef"
                      ]
                    },
                    "systemAssignedManagedIdentitySettings": {
                      "description": "System-assigned managed identity authentication.",
                      "type": "object",
                      "properties": {
                        "audience": {
                          "type": "string",
                          "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
                        }
                      }
                    },
                    "userAssignedManagedIdentitySettings": {
                      "description": "User-assigned managed identity authentication.",
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "type": "string",
                          "description": "Client ID for the user-assigned managed identity."
                        },
                        "scope": {
                          "type": "string",
                          "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
                        },
                        "tenantId": {
                          "type": "string",
                          "description": "Tenant ID."
                        }
                      },
                      "required": [
                        "clientId",
                        "tenantId"
                      ]
                    }
                  },
                  "required": [
                    "method"
                  ]
                },
                "host": {
                  "type": "string",
                  "description": "Host of the Azure Data Lake in the form of <account>.blob.core.windows.net .",
                  "pattern": ".+\\.blob\\.core\\.windows\\.net"
                },
                "batching": {
                  "description": "Azure Data Lake endpoint batching configuration.",
                  "type": "object",
                  "properties": {
                    "latencySeconds": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Batching latency in seconds.",
                      "default": 60,
                      "minimum": 0,
                      "maximum": 65535
                    },
                    "maxMessages": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Maximum number of messages in a batch.",
                      "default": 100000,
                      "minimum": 0,
                      "maximum": 4294967295
                    }
                  }
                }
              },
              "required": [
                "authentication",
                "host"
              ]
            },
            "fabricOneLakeSettings": {
              "description": "Microsoft Fabric endpoint.",
              "type": "object",
              "properties": {
                "authentication": {
                  "description": "Authentication configuration. NOTE - only one authentication property is allowed per entry.",
                  "type": "object",
                  "properties": {
                    "method": {
                      "description": "Mode of Authentication.",
                      "x-nullable": false,
                      "type": "string",
                      "enum": [
                        "SystemAssignedManagedIdentity",
                        "UserAssignedManagedIdentity"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedIdentityMethod",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "SystemAssignedManagedIdentity",
                            "value": "SystemAssignedManagedIdentity",
                            "description": "SystemAssignedManagedIdentity type"
                          },
                          {
                            "name": "UserAssignedManagedIdentity",
                            "value": "UserAssignedManagedIdentity",
                            "description": "UserAssignedManagedIdentity type"
                          }
                        ]
                      }
                    },
                    "systemAssignedManagedIdentitySettings": {
                      "description": "System-assigned managed identity authentication.",
                      "type": "object",
                      "properties": {
                        "audience": {
                          "type": "string",
                          "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
                        }
                      }
                    },
                    "userAssignedManagedIdentitySettings": {
                      "description": "User-assigned managed identity authentication.",
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "type": "string",
                          "description": "Client ID for the user-assigned managed identity."
                        },
                        "scope": {
                          "type": "string",
                          "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
                        },
                        "tenantId": {
                          "type": "string",
                          "description": "Tenant ID."
                        }
                      },
                      "required": [
                        "clientId",
                        "tenantId"
                      ]
                    }
                  },
                  "required": [
                    "method"
                  ]
                },
                "names": {
                  "description": "Names of the workspace and lakehouse.",
                  "type": "object",
                  "properties": {
                    "lakehouseName": {
                      "type": "string",
                      "description": "Lakehouse name."
                    },
                    "workspaceName": {
                      "type": "string",
                      "description": "Workspace name."
                    }
                  },
                  "required": [
                    "lakehouseName",
                    "workspaceName"
                  ]
                },
                "oneLakePathType": {
                  "description": "Type of location of the data in the workspace. Can be either tables or files.",
                  "type": "string",
                  "enum": [
                    "Files",
                    "Tables"
                  ],
                  "x-ms-enum": {
                    "name": "DataflowEndpointFabricPathType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Files",
                        "value": "Files",
                        "description": "FILES Type"
                      },
                      {
                        "name": "Tables",
                        "value": "Tables",
                        "description": "TABLES Type"
                      }
                    ]
                  }
                },
                "host": {
                  "type": "string",
                  "description": "Host of the Microsoft Fabric in the form of https://<host>.fabric.microsoft.com.",
                  "pattern": ".+\\.fabric\\.microsoft\\.com"
                },
                "batching": {
                  "description": "Batching configuration.",
                  "type": "object",
                  "properties": {
                    "latencySeconds": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Batching latency in seconds.",
                      "default": 60,
                      "minimum": 0,
                      "maximum": 65535
                    },
                    "maxMessages": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Maximum number of messages in a batch.",
                      "default": 100000,
                      "minimum": 0,
                      "maximum": 4294967295
                    }
                  }
                }
              },
              "required": [
                "authentication",
                "names",
                "oneLakePathType",
                "host"
              ]
            },
            "kafkaSettings": {
              "description": "Kafka endpoint.",
              "type": "object",
              "properties": {
                "authentication": {
                  "description": "Authentication configuration. NOTE - only authentication property is allowed per entry.",
                  "type": "object",
                  "properties": {
                    "method": {
                      "description": "Mode of Authentication.",
                      "type": "string",
                      "enum": [
                        "SystemAssignedManagedIdentity",
                        "UserAssignedManagedIdentity",
                        "Sasl",
                        "X509Certificate",
                        "Anonymous"
                      ],
                      "x-ms-enum": {
                        "name": "KafkaAuthMethod",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "SystemAssignedManagedIdentity",
                            "value": "SystemAssignedManagedIdentity",
                            "description": "SystemAssignedManagedIdentity type"
                          },
                          {
                            "name": "UserAssignedManagedIdentity",
                            "value": "UserAssignedManagedIdentity",
                            "description": "UserAssignedManagedIdentity type"
                          },
                          {
                            "name": "Sasl",
                            "value": "Sasl",
                            "description": "Sasl Option"
                          },
                          {
                            "name": "X509Certificate",
                            "value": "X509Certificate",
                            "description": "x509Certificate Option"
                          },
                          {
                            "name": "Anonymous",
                            "value": "Anonymous",
                            "description": "Anonymous Option"
                          }
                        ]
                      }
                    },
                    "systemAssignedManagedIdentitySettings": {
                      "description": "System-assigned managed identity authentication.",
                      "type": "object",
                      "properties": {
                        "audience": {
                          "type": "string",
                          "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
                        }
                      }
                    },
                    "userAssignedManagedIdentitySettings": {
                      "description": "User-assigned managed identity authentication.",
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "type": "string",
                          "description": "Client ID for the user-assigned managed identity."
                        },
                        "scope": {
                          "type": "string",
                          "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
                        },
                        "tenantId": {
                          "type": "string",
                          "description": "Tenant ID."
                        }
                      },
                      "required": [
                        "clientId",
                        "tenantId"
                      ]
                    },
                    "saslSettings": {
                      "description": "SASL authentication.",
                      "type": "object",
                      "properties": {
                        "saslType": {
                          "description": "Type of SASL authentication. Can be PLAIN, SCRAM-SHA-256, or SCRAM-SHA-512.",
                          "type": "string",
                          "enum": [
                            "Plain",
                            "ScramSha256",
                            "ScramSha512"
                          ],
                          "x-ms-enum": {
                            "name": "DataflowEndpointAuthenticationSaslType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Plain",
                                "value": "Plain",
                                "description": "PLAIN Type"
                              },
                              {
                                "name": "ScramSha256",
                                "value": "ScramSha256",
                                "description": "SCRAM_SHA_256 Type"
                              },
                              {
                                "name": "ScramSha512",
                                "value": "ScramSha512",
                                "description": "SCRAM_SHA_512 Type"
                              }
                            ]
                          }
                        },
                        "secretRef": {
                          "type": "string",
                          "description": "Token secret name."
                        }
                      },
                      "required": [
                        "saslType",
                        "secretRef"
                      ]
                    },
                    "x509CertificateSettings": {
                      "description": "X.509 certificate authentication.",
                      "type": "object",
                      "properties": {
                        "secretRef": {
                          "type": "string",
                          "description": "Secret reference of the X.509 certificate."
                        }
                      },
                      "required": [
                        "secretRef"
                      ]
                    }
                  },
                  "required": [
                    "method"
                  ]
                },
                "consumerGroupId": {
                  "type": "string",
                  "description": "Consumer group ID."
                },
                "host": {
                  "type": "string",
                  "description": "Kafka endpoint host."
                },
                "batching": {
                  "description": "Batching configuration.",
                  "type": "object",
                  "properties": {
                    "mode": {
                      "type": "string",
                      "description": "Mode for batching.",
                      "default": "Enabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "OperationalMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "Enabled is equivalent to True"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "Disabled is equivalent to False."
                          }
                        ]
                      }
                    },
                    "latencyMs": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Batching latency in milliseconds.",
                      "default": 5,
                      "minimum": 0,
                      "maximum": 65535
                    },
                    "maxBytes": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Maximum number of bytes in a batch.",
                      "default": 1000000,
                      "minimum": 0,
                      "maximum": 4294967295
                    },
                    "maxMessages": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Maximum number of messages in a batch.",
                      "default": 100000,
                      "minimum": 0,
                      "maximum": 4294967295
                    }
                  }
                },
                "copyMqttProperties": {
                  "type": "string",
                  "description": "Copy Broker properties. No effect if the endpoint is used as a source or if the dataflow doesn't have an Broker source.",
                  "default": "Enabled",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "OperationalMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled",
                        "description": "Enabled is equivalent to True"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled",
                        "description": "Disabled is equivalent to False."
                      }
                    ]
                  }
                },
                "compression": {
                  "type": "string",
                  "description": "Compression. Can be none, gzip, lz4, or snappy. No effect if the endpoint is used as a source.",
                  "default": "None",
                  "enum": [
                    "None",
                    "Gzip",
                    "Snappy",
                    "Lz4"
                  ],
                  "x-ms-enum": {
                    "name": "DataflowEndpointKafkaCompression",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "None",
                        "value": "None",
                        "description": "NONE Option"
                      },
                      {
                        "name": "Gzip",
                        "value": "Gzip",
                        "description": "Gzip Option"
                      },
                      {
                        "name": "Snappy",
                        "value": "Snappy",
                        "description": "SNAPPY Option"
                      },
                      {
                        "name": "Lz4",
                        "value": "Lz4",
                        "description": "LZ4 Option"
                      }
                    ]
                  }
                },
                "kafkaAcks": {
                  "type": "string",
                  "description": "Kafka acks. Can be all, one, or zero. No effect if the endpoint is used as a source.",
                  "default": "All",
                  "enum": [
                    "Zero",
                    "One",
                    "All"
                  ],
                  "x-ms-enum": {
                    "name": "DataflowEndpointKafkaAcks",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Zero",
                        "value": "Zero",
                        "description": "ZERO Option"
                      },
                      {
                        "name": "One",
                        "value": "One",
                        "description": "ONE Option"
                      },
                      {
                        "name": "All",
                        "value": "All",
                        "description": "ALL Option"
                      }
                    ]
                  }
                },
                "partitionStrategy": {
                  "type": "string",
                  "description": "Partition handling strategy. Can be default or static. No effect if the endpoint is used as a source.",
                  "default": "Default",
                  "enum": [
                    "Default",
                    "Static",
                    "Topic",
                    "Property"
                  ],
                  "x-ms-enum": {
                    "name": "DataflowEndpointKafkaPartitionStrategy",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Default",
                        "value": "Default",
                        "description": "Default: Assigns messages to random partitions, using a round-robin algorithm."
                      },
                      {
                        "name": "Static",
                        "value": "Static",
                        "description": "Static: Assigns messages to a fixed partition number that's derived from the instance ID of the dataflow."
                      },
                      {
                        "name": "Topic",
                        "value": "Topic",
                        "description": "TOPIC Option"
                      },
                      {
                        "name": "Property",
                        "value": "Property",
                        "description": "PROPERTY Option"
                      }
                    ]
                  }
                },
                "tls": {
                  "description": "TLS configuration.",
                  "type": "object",
                  "properties": {
                    "mode": {
                      "type": "string",
                      "description": "Mode for TLS.",
                      "default": "Enabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "OperationalMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "Enabled is equivalent to True"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "Disabled is equivalent to False."
                          }
                        ]
                      }
                    },
                    "trustedCaCertificateConfigMapRef": {
                      "type": "string",
                      "description": "Trusted CA certificate config map."
                    }
                  }
                },
                "cloudEventAttributes": {
                  "description": "Cloud event mapping config.",
                  "type": "string",
                  "enum": [
                    "Propagate",
                    "CreateOrRemap"
                  ],
                  "x-ms-enum": {
                    "name": "CloudEventAttributeType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Propagate",
                        "value": "Propagate",
                        "description": "Propagate type"
                      },
                      {
                        "name": "CreateOrRemap",
                        "value": "CreateOrRemap",
                        "description": "CreateOrRemap type"
                      }
                    ]
                  }
                }
              },
              "required": [
                "authentication",
                "host"
              ]
            },
            "localStorageSettings": {
              "description": "Local persistent volume endpoint.",
              "type": "object",
              "properties": {
                "persistentVolumeClaimRef": {
                  "type": "string",
                  "description": "Persistent volume claim name."
                }
              },
              "required": [
                "persistentVolumeClaimRef"
              ]
            },
            "mqttSettings": {
              "description": "Broker endpoint.",
              "type": "object",
              "properties": {
                "authentication": {
                  "description": "authentication properties. DEFAULT: kubernetes.audience=aio-internal. NOTE - Enum field only property is allowed",
                  "type": "object",
                  "properties": {
                    "method": {
                      "description": "Mode of Authentication.",
                      "type": "string",
                      "enum": [
                        "SystemAssignedManagedIdentity",
                        "UserAssignedManagedIdentity",
                        "ServiceAccountToken",
                        "X509Certificate",
                        "Anonymous"
                      ],
                      "x-ms-enum": {
                        "name": "MqttAuthMethod",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "SystemAssignedManagedIdentity",
                            "value": "SystemAssignedManagedIdentity",
                            "description": "SystemAssignedManagedIdentity type"
                          },
                          {
                            "name": "UserAssignedManagedIdentity",
                            "value": "UserAssignedManagedIdentity",
                            "description": "UserAssignedManagedIdentity type"
                          },
                          {
                            "name": "ServiceAccountToken",
                            "value": "ServiceAccountToken",
                            "description": "ServiceAccountToken Option"
                          },
                          {
                            "name": "X509Certificate",
                            "value": "X509Certificate",
                            "description": "x509Certificate Option"
                          },
                          {
                            "name": "Anonymous",
                            "value": "Anonymous",
                            "description": "Anonymous Option"
                          }
                        ]
                      }
                    },
                    "systemAssignedManagedIdentitySettings": {
                      "description": "System-assigned managed identity authentication.",
                      "type": "object",
                      "properties": {
                        "audience": {
                          "type": "string",
                          "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
                        }
                      }
                    },
                    "userAssignedManagedIdentitySettings": {
                      "description": "User-assigned managed identity authentication.",
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "type": "string",
                          "description": "Client ID for the user-assigned managed identity."
                        },
                        "scope": {
                          "type": "string",
                          "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
                        },
                        "tenantId": {
                          "type": "string",
                          "description": "Tenant ID."
                        }
                      },
                      "required": [
                        "clientId",
                        "tenantId"
                      ]
                    },
                    "serviceAccountTokenSettings": {
                      "description": "Kubernetes service account token authentication. Default audience if not set is aio-internal",
                      "type": "object",
                      "properties": {
                        "audience": {
                          "type": "string",
                          "description": "Audience of the service account. Optional, defaults to the broker internal service account audience."
                        }
                      },
                      "required": [
                        "audience"
                      ]
                    },
                    "x509CertificateSettings": {
                      "description": "X.509 certificate authentication.",
                      "type": "object",
                      "properties": {
                        "secretRef": {
                          "type": "string",
                          "description": "Secret reference of the X.509 certificate."
                        }
                      },
                      "required": [
                        "secretRef"
                      ]
                    }
                  },
                  "required": [
                    "method"
                  ]
                },
                "clientIdPrefix": {
                  "type": "string",
                  "description": "Client ID prefix. Client ID generated by the dataflow is <prefix>-TBD. Optional; no prefix if omitted."
                },
                "host": {
                  "type": "string",
                  "description": "Host of the Broker in the form of <hostname>:<port>. Optional; connects to Broker if omitted."
                },
                "protocol": {
                  "type": "string",
                  "description": "Enable or disable websockets.",
                  "default": "Mqtt",
                  "enum": [
                    "Mqtt",
                    "WebSockets"
                  ],
                  "x-ms-enum": {
                    "name": "BrokerProtocolType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Mqtt",
                        "value": "Mqtt",
                        "description": "protocol broker"
                      },
                      {
                        "name": "WebSockets",
                        "value": "WebSockets",
                        "description": "protocol websocket"
                      }
                    ]
                  }
                },
                "keepAliveSeconds": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Broker KeepAlive for connection in seconds.",
                  "default": 60,
                  "minimum": 0
                },
                "retain": {
                  "type": "string",
                  "description": "Whether or not to keep the retain setting.",
                  "default": "Keep",
                  "enum": [
                    "Keep",
                    "Never"
                  ],
                  "x-ms-enum": {
                    "name": "MqttRetainType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Keep",
                        "value": "Keep",
                        "description": "Retain the messages."
                      },
                      {
                        "name": "Never",
                        "value": "Never",
                        "description": "Never retain messages."
                      }
                    ]
                  }
                },
                "maxInflightMessages": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The max number of messages to keep in flight. For subscribe, this is the receive maximum. For publish, this is the maximum number of messages to send before waiting for an ack.",
                  "default": 100,
                  "minimum": 0
                },
                "qos": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Qos for Broker connection.",
                  "default": 1,
                  "minimum": 0,
                  "maximum": 1
                },
                "sessionExpirySeconds": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Session expiry in seconds.",
                  "minimum": 0
                },
                "tls": {
                  "description": "TLS configuration.",
                  "type": "object",
                  "properties": {
                    "mode": {
                      "type": "string",
                      "description": "Mode for TLS.",
                      "default": "Enabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "OperationalMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "Enabled is equivalent to True"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "Disabled is equivalent to False."
                          }
                        ]
                      }
                    },
                    "trustedCaCertificateConfigMapRef": {
                      "type": "string",
                      "description": "Trusted CA certificate config map."
                    }
                  }
                },
                "cloudEventAttributes": {
                  "description": "Cloud event mapping config.",
                  "type": "string",
                  "enum": [
                    "Propagate",
                    "CreateOrRemap"
                  ],
                  "x-ms-enum": {
                    "name": "CloudEventAttributeType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Propagate",
                        "value": "Propagate",
                        "description": "Propagate type"
                      },
                      {
                        "name": "CreateOrRemap",
                        "value": "CreateOrRemap",
                        "description": "CreateOrRemap type"
                      }
                    ]
                  }
                }
              },
              "required": [
                "authentication"
              ]
            },
            "openTelemetrySettings": {
              "description": "OpenTelemetry endpoint.",
              "type": "object",
              "properties": {
                "host": {
                  "type": "string",
                  "description": "Host of the OpenTelemetry in the form of <host>:<port>."
                },
                "batching": {
                  "description": "Batching configuration.",
                  "type": "object",
                  "properties": {
                    "latencySeconds": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Batching latency in seconds.",
                      "default": 60,
                      "minimum": 0,
                      "maximum": 65535
                    },
                    "maxMessages": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Maximum number of messages in a batch.",
                      "default": 100000,
                      "minimum": 0,
                      "maximum": 4294967295
                    }
                  }
                },
                "tls": {
                  "description": "TLS configuration.",
                  "type": "object",
                  "properties": {
                    "mode": {
                      "type": "string",
                      "description": "Mode for TLS.",
                      "default": "Enabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "OperationalMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "Enabled is equivalent to True"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "Disabled is equivalent to False."
                          }
                        ]
                      }
                    },
                    "trustedCaCertificateConfigMapRef": {
                      "type": "string",
                      "description": "Trusted CA certificate config map."
                    }
                  }
                },
                "authentication": {
                  "description": "Authentication properties for OpenTelemetry endpoints",
                  "type": "object",
                  "properties": {
                    "method": {
                      "description": "The authentication method.",
                      "type": "string",
                      "enum": [
                        "ServiceAccountToken",
                        "X509Certificate",
                        "Anonymous"
                      ],
                      "x-ms-enum": {
                        "name": "DataflowOpenTelemetryAuthenticationMethod",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "ServiceAccountToken",
                            "value": "ServiceAccountToken",
                            "description": "Uses serviceaccount token."
                          },
                          {
                            "name": "X509Certificate",
                            "value": "X509Certificate",
                            "description": "Uses x509 certificate."
                          },
                          {
                            "name": "Anonymous",
                            "value": "Anonymous",
                            "description": "Connects anonymously."
                          }
                        ]
                      }
                    }
                  },
                  "discriminator": "method",
                  "required": [
                    "method"
                  ]
                }
              },
              "required": [
                "host",
                "authentication"
              ]
            },
            "provisioningState": {
              "description": "The status of the last operation.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "Resource is getting provisioned."
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "Resource is Updating."
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "Resource is Deleting."
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "Resource has been Accepted."
                  }
                ]
              }
            },
            "healthState": {
              "type": "string",
              "description": "The health state of the resource.",
              "default": "Unknown",
              "enum": [
                "Available",
                "Degraded",
                "Unavailable",
                "Unknown"
              ],
              "x-ms-enum": {
                "name": "ResourceHealthState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Available",
                    "value": "Available",
                    "description": "Resource is Available and functioning as expected."
                  },
                  {
                    "name": "Degraded",
                    "value": "Degraded",
                    "description": "Resource health is degraded."
                  },
                  {
                    "name": "Unavailable",
                    "value": "Unavailable",
                    "description": "Resource is not functioning as expected."
                  },
                  {
                    "name": "Unknown",
                    "value": "Unknown",
                    "description": "Resource state is unknown."
                  }
                ]
              },
              "readOnly": true
            }
          },
          "required": [
            "endpointType"
          ]
        },
        "extendedLocation": {
          "description": "Edge location of the resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the extended location."
            },
            "type": {
              "description": "Type of ExtendedLocation.",
              "type": "string",
              "enum": [
                "CustomLocation"
              ],
              "x-ms-enum": {
                "name": "ExtendedLocationType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "CustomLocation",
                    "value": "CustomLocation",
                    "description": "CustomLocation type"
                  }
                ]
              }
            }
          },
          "required": [
            "name",
            "type"
          ]
        }
      }
    },
    "DataflowEndpointResourceListResult": {
      "type": "object",
      "description": "The response of a DataflowEndpointResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DataflowEndpointResource items on this page",
          "items": {
            "type": "object",
            "description": "Instance dataflowEndpoint resource",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "endpointType": {
                    "description": "Endpoint Type.",
                    "type": "string",
                    "enum": [
                      "DataExplorer",
                      "DataLakeStorage",
                      "FabricOneLake",
                      "Kafka",
                      "LocalStorage",
                      "Mqtt",
                      "OpenTelemetry"
                    ],
                    "x-ms-enum": {
                      "name": "EndpointType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "DataExplorer",
                          "value": "DataExplorer",
                          "description": "Azure Data Explorer Type"
                        },
                        {
                          "name": "DataLakeStorage",
                          "value": "DataLakeStorage",
                          "description": "Azure Data Lake Type"
                        },
                        {
                          "name": "FabricOneLake",
                          "value": "FabricOneLake",
                          "description": "Microsoft Fabric Type"
                        },
                        {
                          "name": "Kafka",
                          "value": "Kafka",
                          "description": "Kafka Type"
                        },
                        {
                          "name": "LocalStorage",
                          "value": "LocalStorage",
                          "description": "Local Storage Type"
                        },
                        {
                          "name": "Mqtt",
                          "value": "Mqtt",
                          "description": "Broker Type"
                        },
                        {
                          "name": "OpenTelemetry",
                          "value": "OpenTelemetry",
                          "description": "OpenTelemetry Type"
                        }
                      ]
                    }
                  },
                  "hostType": {
                    "description": "The type of the Kafka host. E.g FabricRT, EventGrid.",
                    "type": "string",
                    "enum": [
                      "FabricRT",
                      "EventGrid",
                      "LocalBroker",
                      "Eventhub",
                      "CustomMqtt",
                      "CustomKafka"
                    ],
                    "x-ms-enum": {
                      "name": "DataflowEndpointHostType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "FabricRT",
                          "value": "FabricRT",
                          "description": "Fabric Real-Time Type"
                        },
                        {
                          "name": "EventGrid",
                          "value": "EventGrid",
                          "description": "EventGrid Type"
                        },
                        {
                          "name": "LocalBroker",
                          "value": "LocalBroker",
                          "description": "Local MQTT Type"
                        },
                        {
                          "name": "Eventhub",
                          "value": "Eventhub",
                          "description": "EventHub Type"
                        },
                        {
                          "name": "CustomMqtt",
                          "value": "CustomMqtt",
                          "description": "Custom MQTT Type"
                        },
                        {
                          "name": "CustomKafka",
                          "value": "CustomKafka",
                          "description": "Custom Kafka Type"
                        }
                      ]
                    }
                  },
                  "dataExplorerSettings": {
                    "description": "Azure Data Explorer endpoint.",
                    "type": "object",
                    "properties": {
                      "authentication": {
                        "description": "Authentication configuration. NOTE - only authentication property is allowed per entry.",
                        "type": "object",
                        "properties": {
                          "method": {
                            "description": "Mode of Authentication.",
                            "x-nullable": false,
                            "type": "string",
                            "enum": [
                              "SystemAssignedManagedIdentity",
                              "UserAssignedManagedIdentity"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedIdentityMethod",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "SystemAssignedManagedIdentity",
                                  "value": "SystemAssignedManagedIdentity",
                                  "description": "SystemAssignedManagedIdentity type"
                                },
                                {
                                  "name": "UserAssignedManagedIdentity",
                                  "value": "UserAssignedManagedIdentity",
                                  "description": "UserAssignedManagedIdentity type"
                                }
                              ]
                            }
                          },
                          "systemAssignedManagedIdentitySettings": {
                            "description": "System-assigned managed identity authentication.",
                            "type": "object",
                            "properties": {
                              "audience": {
                                "type": "string",
                                "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
                              }
                            }
                          },
                          "userAssignedManagedIdentitySettings": {
                            "description": "User-assigned managed identity authentication.",
                            "type": "object",
                            "properties": {
                              "clientId": {
                                "type": "string",
                                "description": "Client ID for the user-assigned managed identity."
                              },
                              "scope": {
                                "type": "string",
                                "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
                              },
                              "tenantId": {
                                "type": "string",
                                "description": "Tenant ID."
                              }
                            },
                            "required": [
                              "clientId",
                              "tenantId"
                            ]
                          }
                        },
                        "required": [
                          "method"
                        ]
                      },
                      "database": {
                        "type": "string",
                        "description": "Database name."
                      },
                      "host": {
                        "type": "string",
                        "description": "Host of the Azure Data Explorer in the form of <cluster>.<region>.kusto.windows.net .",
                        "pattern": ".+\\..+\\.kusto\\.windows\\.net"
                      },
                      "batching": {
                        "description": "Azure Data Explorer endpoint batching configuration.",
                        "type": "object",
                        "properties": {
                          "latencySeconds": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Batching latency in seconds.",
                            "default": 60,
                            "minimum": 0,
                            "maximum": 65535
                          },
                          "maxMessages": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Maximum number of messages in a batch.",
                            "default": 100000,
                            "minimum": 0,
                            "maximum": 4294967295
                          }
                        }
                      }
                    },
                    "required": [
                      "authentication",
                      "database",
                      "host"
                    ]
                  },
                  "dataLakeStorageSettings": {
                    "description": "Azure Data Lake endpoint.",
                    "type": "object",
                    "properties": {
                      "authentication": {
                        "description": "Authentication configuration. NOTE - only authentication property is allowed per entry.",
                        "type": "object",
                        "properties": {
                          "method": {
                            "description": "Mode of Authentication.",
                            "type": "string",
                            "enum": [
                              "SystemAssignedManagedIdentity",
                              "UserAssignedManagedIdentity",
                              "AccessToken"
                            ],
                            "x-ms-enum": {
                              "name": "DataLakeStorageAuthMethod",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "SystemAssignedManagedIdentity",
                                  "value": "SystemAssignedManagedIdentity",
                                  "description": "SystemAssignedManagedIdentity type"
                                },
                                {
                                  "name": "UserAssignedManagedIdentity",
                                  "value": "UserAssignedManagedIdentity",
                                  "description": "UserAssignedManagedIdentity type"
                                },
                                {
                                  "name": "AccessToken",
                                  "value": "AccessToken",
                                  "description": "AccessToken Option"
                                }
                              ]
                            }
                          },
                          "accessTokenSettings": {
                            "description": "SAS token authentication.",
                            "type": "object",
                            "properties": {
                              "secretRef": {
                                "type": "string",
                                "description": "Token secret name."
                              }
                            },
                            "required": [
                              "secretRef"
                            ]
                          },
                          "systemAssignedManagedIdentitySettings": {
                            "description": "System-assigned managed identity authentication.",
                            "type": "object",
                            "properties": {
                              "audience": {
                                "type": "string",
                                "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
                              }
                            }
                          },
                          "userAssignedManagedIdentitySettings": {
                            "description": "User-assigned managed identity authentication.",
                            "type": "object",
                            "properties": {
                              "clientId": {
                                "type": "string",
                                "description": "Client ID for the user-assigned managed identity."
                              },
                              "scope": {
                                "type": "string",
                                "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
                              },
                              "tenantId": {
                                "type": "string",
                                "description": "Tenant ID."
                              }
                            },
                            "required": [
                              "clientId",
                              "tenantId"
                            ]
                          }
                        },
                        "required": [
                          "method"
                        ]
                      },
                      "host": {
                        "type": "string",
                        "description": "Host of the Azure Data Lake in the form of <account>.blob.core.windows.net .",
                        "pattern": ".+\\.blob\\.core\\.windows\\.net"
                      },
                      "batching": {
                        "description": "Azure Data Lake endpoint batching configuration.",
                        "type": "object",
                        "properties": {
                          "latencySeconds": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Batching latency in seconds.",
                            "default": 60,
                            "minimum": 0,
                            "maximum": 65535
                          },
                          "maxMessages": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Maximum number of messages in a batch.",
                            "default": 100000,
                            "minimum": 0,
                            "maximum": 4294967295
                          }
                        }
                      }
                    },
                    "required": [
                      "authentication",
                      "host"
                    ]
                  },
                  "fabricOneLakeSettings": {
                    "description": "Microsoft Fabric endpoint.",
                    "type": "object",
                    "properties": {
                      "authentication": {
                        "description": "Authentication configuration. NOTE - only one authentication property is allowed per entry.",
                        "type": "object",
                        "properties": {
                          "method": {
                            "description": "Mode of Authentication.",
                            "x-nullable": false,
                            "type": "string",
                            "enum": [
                              "SystemAssignedManagedIdentity",
                              "UserAssignedManagedIdentity"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedIdentityMethod",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "SystemAssignedManagedIdentity",
                                  "value": "SystemAssignedManagedIdentity",
                                  "description": "SystemAssignedManagedIdentity type"
                                },
                                {
                                  "name": "UserAssignedManagedIdentity",
                                  "value": "UserAssignedManagedIdentity",
                                  "description": "UserAssignedManagedIdentity type"
                                }
                              ]
                            }
                          },
                          "systemAssignedManagedIdentitySettings": {
                            "description": "System-assigned managed identity authentication.",
                            "type": "object",
                            "properties": {
                              "audience": {
                                "type": "string",
                                "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
                              }
                            }
                          },
                          "userAssignedManagedIdentitySettings": {
                            "description": "User-assigned managed identity authentication.",
                            "type": "object",
                            "properties": {
                              "clientId": {
                                "type": "string",
                                "description": "Client ID for the user-assigned managed identity."
                              },
                              "scope": {
                                "type": "string",
                                "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
                              },
                              "tenantId": {
                                "type": "string",
                                "description": "Tenant ID."
                              }
                            },
                            "required": [
                              "clientId",
                              "tenantId"
                            ]
                          }
                        },
                        "required": [
                          "method"
                        ]
                      },
                      "names": {
                        "description": "Names of the workspace and lakehouse.",
                        "type": "object",
                        "properties": {
                          "lakehouseName": {
                            "type": "string",
                            "description": "Lakehouse name."
                          },
                          "workspaceName": {
                            "type": "string",
                            "description": "Workspace name."
                          }
                        },
                        "required": [
                          "lakehouseName",
                          "workspaceName"
                        ]
                      },
                      "oneLakePathType": {
                        "description": "Type of location of the data in the workspace. Can be either tables or files.",
                        "type": "string",
                        "enum": [
                          "Files",
                          "Tables"
                        ],
                        "x-ms-enum": {
                          "name": "DataflowEndpointFabricPathType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Files",
                              "value": "Files",
                              "description": "FILES Type"
                            },
                            {
                              "name": "Tables",
                              "value": "Tables",
                              "description": "TABLES Type"
                            }
                          ]
                        }
                      },
                      "host": {
                        "type": "string",
                        "description": "Host of the Microsoft Fabric in the form of https://<host>.fabric.microsoft.com.",
                        "pattern": ".+\\.fabric\\.microsoft\\.com"
                      },
                      "batching": {
                        "description": "Batching configuration.",
                        "type": "object",
                        "properties": {
                          "latencySeconds": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Batching latency in seconds.",
                            "default": 60,
                            "minimum": 0,
                            "maximum": 65535
                          },
                          "maxMessages": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Maximum number of messages in a batch.",
                            "default": 100000,
                            "minimum": 0,
                            "maximum": 4294967295
                          }
                        }
                      }
                    },
                    "required": [
                      "authentication",
                      "names",
                      "oneLakePathType",
                      "host"
                    ]
                  },
                  "kafkaSettings": {
                    "description": "Kafka endpoint.",
                    "type": "object",
                    "properties": {
                      "authentication": {
                        "description": "Authentication configuration. NOTE - only authentication property is allowed per entry.",
                        "type": "object",
                        "properties": {
                          "method": {
                            "description": "Mode of Authentication.",
                            "type": "string",
                            "enum": [
                              "SystemAssignedManagedIdentity",
                              "UserAssignedManagedIdentity",
                              "Sasl",
                              "X509Certificate",
                              "Anonymous"
                            ],
                            "x-ms-enum": {
                              "name": "KafkaAuthMethod",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "SystemAssignedManagedIdentity",
                                  "value": "SystemAssignedManagedIdentity",
                                  "description": "SystemAssignedManagedIdentity type"
                                },
                                {
                                  "name": "UserAssignedManagedIdentity",
                                  "value": "UserAssignedManagedIdentity",
                                  "description": "UserAssignedManagedIdentity type"
                                },
                                {
                                  "name": "Sasl",
                                  "value": "Sasl",
                                  "description": "Sasl Option"
                                },
                                {
                                  "name": "X509Certificate",
                                  "value": "X509Certificate",
                                  "description": "x509Certificate Option"
                                },
                                {
                                  "name": "Anonymous",
                                  "value": "Anonymous",
                                  "description": "Anonymous Option"
                                }
                              ]
                            }
                          },
                          "systemAssignedManagedIdentitySettings": {
                            "description": "System-assigned managed identity authentication.",
                            "type": "object",
                            "properties": {
                              "audience": {
                                "type": "string",
                                "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
                              }
                            }
                          },
                          "userAssignedManagedIdentitySettings": {
                            "description": "User-assigned managed identity authentication.",
                            "type": "object",
                            "properties": {
                              "clientId": {
                                "type": "string",
                                "description": "Client ID for the user-assigned managed identity."
                              },
                              "scope": {
                                "type": "string",
                                "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
                              },
                              "tenantId": {
                                "type": "string",
                                "description": "Tenant ID."
                              }
                            },
                            "required": [
                              "clientId",
                              "tenantId"
                            ]
                          },
                          "saslSettings": {
                            "description": "SASL authentication.",
                            "type": "object",
                            "properties": {
                              "saslType": {
                                "description": "Type of SASL authentication. Can be PLAIN, SCRAM-SHA-256, or SCRAM-SHA-512.",
                                "type": "string",
                                "enum": [
                                  "Plain",
                                  "ScramSha256",
                                  "ScramSha512"
                                ],
                                "x-ms-enum": {
                                  "name": "DataflowEndpointAuthenticationSaslType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Plain",
                                      "value": "Plain",
                                      "description": "PLAIN Type"
                                    },
                                    {
                                      "name": "ScramSha256",
                                      "value": "ScramSha256",
                                      "description": "SCRAM_SHA_256 Type"
                                    },
                                    {
                                      "name": "ScramSha512",
                                      "value": "ScramSha512",
                                      "description": "SCRAM_SHA_512 Type"
                                    }
                                  ]
                                }
                              },
                              "secretRef": {
                                "type": "string",
                                "description": "Token secret name."
                              }
                            },
                            "required": [
                              "saslType",
                              "secretRef"
                            ]
                          },
                          "x509CertificateSettings": {
                            "description": "X.509 certificate authentication.",
                            "type": "object",
                            "properties": {
                              "secretRef": {
                                "type": "string",
                                "description": "Secret reference of the X.509 certificate."
                              }
                            },
                            "required": [
                              "secretRef"
                            ]
                          }
                        },
                        "required": [
                          "method"
                        ]
                      },
                      "consumerGroupId": {
                        "type": "string",
                        "description": "Consumer group ID."
                      },
                      "host": {
                        "type": "string",
                        "description": "Kafka endpoint host."
                      },
                      "batching": {
                        "description": "Batching configuration.",
                        "type": "object",
                        "properties": {
                          "mode": {
                            "type": "string",
                            "description": "Mode for batching.",
                            "default": "Enabled",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "OperationalMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled",
                                  "description": "Enabled is equivalent to True"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled",
                                  "description": "Disabled is equivalent to False."
                                }
                              ]
                            }
                          },
                          "latencyMs": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Batching latency in milliseconds.",
                            "default": 5,
                            "minimum": 0,
                            "maximum": 65535
                          },
                          "maxBytes": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Maximum number of bytes in a batch.",
                            "default": 1000000,
                            "minimum": 0,
                            "maximum": 4294967295
                          },
                          "maxMessages": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Maximum number of messages in a batch.",
                            "default": 100000,
                            "minimum": 0,
                            "maximum": 4294967295
                          }
                        }
                      },
                      "copyMqttProperties": {
                        "type": "string",
                        "description": "Copy Broker properties. No effect if the endpoint is used as a source or if the dataflow doesn't have an Broker source.",
                        "default": "Enabled",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "name": "OperationalMode",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Enabled",
                              "value": "Enabled",
                              "description": "Enabled is equivalent to True"
                            },
                            {
                              "name": "Disabled",
                              "value": "Disabled",
                              "description": "Disabled is equivalent to False."
                            }
                          ]
                        }
                      },
                      "compression": {
                        "type": "string",
                        "description": "Compression. Can be none, gzip, lz4, or snappy. No effect if the endpoint is used as a source.",
                        "default": "None",
                        "enum": [
                          "None",
                          "Gzip",
                          "Snappy",
                          "Lz4"
                        ],
                        "x-ms-enum": {
                          "name": "DataflowEndpointKafkaCompression",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "None",
                              "value": "None",
                              "description": "NONE Option"
                            },
                            {
                              "name": "Gzip",
                              "value": "Gzip",
                              "description": "Gzip Option"
                            },
                            {
                              "name": "Snappy",
                              "value": "Snappy",
                              "description": "SNAPPY Option"
                            },
                            {
                              "name": "Lz4",
                              "value": "Lz4",
                              "description": "LZ4 Option"
                            }
                          ]
                        }
                      },
                      "kafkaAcks": {
                        "type": "string",
                        "description": "Kafka acks. Can be all, one, or zero. No effect if the endpoint is used as a source.",
                        "default": "All",
                        "enum": [
                          "Zero",
                          "One",
                          "All"
                        ],
                        "x-ms-enum": {
                          "name": "DataflowEndpointKafkaAcks",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Zero",
                              "value": "Zero",
                              "description": "ZERO Option"
                            },
                            {
                              "name": "One",
                              "value": "One",
                              "description": "ONE Option"
                            },
                            {
                              "name": "All",
                              "value": "All",
                              "description": "ALL Option"
                            }
                          ]
                        }
                      },
                      "partitionStrategy": {
                        "type": "string",
                        "description": "Partition handling strategy. Can be default or static. No effect if the endpoint is used as a source.",
                        "default": "Default",
                        "enum": [
                          "Default",
                          "Static",
                          "Topic",
                          "Property"
                        ],
                        "x-ms-enum": {
                          "name": "DataflowEndpointKafkaPartitionStrategy",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Default",
                              "value": "Default",
                              "description": "Default: Assigns messages to random partitions, using a round-robin algorithm."
                            },
                            {
                              "name": "Static",
                              "value": "Static",
                              "description": "Static: Assigns messages to a fixed partition number that's derived from the instance ID of the dataflow."
                            },
                            {
                              "name": "Topic",
                              "value": "Topic",
                              "description": "TOPIC Option"
                            },
                            {
                              "name": "Property",
                              "value": "Property",
                              "description": "PROPERTY Option"
                            }
                          ]
                        }
                      },
                      "tls": {
                        "description": "TLS configuration.",
                        "type": "object",
                        "properties": {
                          "mode": {
                            "type": "string",
                            "description": "Mode for TLS.",
                            "default": "Enabled",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "OperationalMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled",
                                  "description": "Enabled is equivalent to True"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled",
                                  "description": "Disabled is equivalent to False."
                                }
                              ]
                            }
                          },
                          "trustedCaCertificateConfigMapRef": {
                            "type": "string",
                            "description": "Trusted CA certificate config map."
                          }
                        }
                      },
                      "cloudEventAttributes": {
                        "description": "Cloud event mapping config.",
                        "type": "string",
                        "enum": [
                          "Propagate",
                          "CreateOrRemap"
                        ],
                        "x-ms-enum": {
                          "name": "CloudEventAttributeType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Propagate",
                              "value": "Propagate",
                              "description": "Propagate type"
                            },
                            {
                              "name": "CreateOrRemap",
                              "value": "CreateOrRemap",
                              "description": "CreateOrRemap type"
                            }
                          ]
                        }
                      }
                    },
                    "required": [
                      "authentication",
                      "host"
                    ]
                  },
                  "localStorageSettings": {
                    "description": "Local persistent volume endpoint.",
                    "type": "object",
                    "properties": {
                      "persistentVolumeClaimRef": {
                        "type": "string",
                        "description": "Persistent volume claim name."
                      }
                    },
                    "required": [
                      "persistentVolumeClaimRef"
                    ]
                  },
                  "mqttSettings": {
                    "description": "Broker endpoint.",
                    "type": "object",
                    "properties": {
                      "authentication": {
                        "description": "authentication properties. DEFAULT: kubernetes.audience=aio-internal. NOTE - Enum field only property is allowed",
                        "type": "object",
                        "properties": {
                          "method": {
                            "description": "Mode of Authentication.",
                            "type": "string",
                            "enum": [
                              "SystemAssignedManagedIdentity",
                              "UserAssignedManagedIdentity",
                              "ServiceAccountToken",
                              "X509Certificate",
                              "Anonymous"
                            ],
                            "x-ms-enum": {
                              "name": "MqttAuthMethod",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "SystemAssignedManagedIdentity",
                                  "value": "SystemAssignedManagedIdentity",
                                  "description": "SystemAssignedManagedIdentity type"
                                },
                                {
                                  "name": "UserAssignedManagedIdentity",
                                  "value": "UserAssignedManagedIdentity",
                                  "description": "UserAssignedManagedIdentity type"
                                },
                                {
                                  "name": "ServiceAccountToken",
                                  "value": "ServiceAccountToken",
                                  "description": "ServiceAccountToken Option"
                                },
                                {
                                  "name": "X509Certificate",
                                  "value": "X509Certificate",
                                  "description": "x509Certificate Option"
                                },
                                {
                                  "name": "Anonymous",
                                  "value": "Anonymous",
                                  "description": "Anonymous Option"
                                }
                              ]
                            }
                          },
                          "systemAssignedManagedIdentitySettings": {
                            "description": "System-assigned managed identity authentication.",
                            "type": "object",
                            "properties": {
                              "audience": {
                                "type": "string",
                                "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
                              }
                            }
                          },
                          "userAssignedManagedIdentitySettings": {
                            "description": "User-assigned managed identity authentication.",
                            "type": "object",
                            "properties": {
                              "clientId": {
                                "type": "string",
                                "description": "Client ID for the user-assigned managed identity."
                              },
                              "scope": {
                                "type": "string",
                                "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
                              },
                              "tenantId": {
                                "type": "string",
                                "description": "Tenant ID."
                              }
                            },
                            "required": [
                              "clientId",
                              "tenantId"
                            ]
                          },
                          "serviceAccountTokenSettings": {
                            "description": "Kubernetes service account token authentication. Default audience if not set is aio-internal",
                            "type": "object",
                            "properties": {
                              "audience": {
                                "type": "string",
                                "description": "Audience of the service account. Optional, defaults to the broker internal service account audience."
                              }
                            },
                            "required": [
                              "audience"
                            ]
                          },
                          "x509CertificateSettings": {
                            "description": "X.509 certificate authentication.",
                            "type": "object",
                            "properties": {
                              "secretRef": {
                                "type": "string",
                                "description": "Secret reference of the X.509 certificate."
                              }
                            },
                            "required": [
                              "secretRef"
                            ]
                          }
                        },
                        "required": [
                          "method"
                        ]
                      },
                      "clientIdPrefix": {
                        "type": "string",
                        "description": "Client ID prefix. Client ID generated by the dataflow is <prefix>-TBD. Optional; no prefix if omitted."
                      },
                      "host": {
                        "type": "string",
                        "description": "Host of the Broker in the form of <hostname>:<port>. Optional; connects to Broker if omitted."
                      },
                      "protocol": {
                        "type": "string",
                        "description": "Enable or disable websockets.",
                        "default": "Mqtt",
                        "enum": [
                          "Mqtt",
                          "WebSockets"
                        ],
                        "x-ms-enum": {
                          "name": "BrokerProtocolType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Mqtt",
                              "value": "Mqtt",
                              "description": "protocol broker"
                            },
                            {
                              "name": "WebSockets",
                              "value": "WebSockets",
                              "description": "protocol websocket"
                            }
                          ]
                        }
                      },
                      "keepAliveSeconds": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Broker KeepAlive for connection in seconds.",
                        "default": 60,
                        "minimum": 0
                      },
                      "retain": {
                        "type": "string",
                        "description": "Whether or not to keep the retain setting.",
                        "default": "Keep",
                        "enum": [
                          "Keep",
                          "Never"
                        ],
                        "x-ms-enum": {
                          "name": "MqttRetainType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Keep",
                              "value": "Keep",
                              "description": "Retain the messages."
                            },
                            {
                              "name": "Never",
                              "value": "Never",
                              "description": "Never retain messages."
                            }
                          ]
                        }
                      },
                      "maxInflightMessages": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The max number of messages to keep in flight. For subscribe, this is the receive maximum. For publish, this is the maximum number of messages to send before waiting for an ack.",
                        "default": 100,
                        "minimum": 0
                      },
                      "qos": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Qos for Broker connection.",
                        "default": 1,
                        "minimum": 0,
                        "maximum": 1
                      },
                      "sessionExpirySeconds": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Session expiry in seconds.",
                        "minimum": 0
                      },
                      "tls": {
                        "description": "TLS configuration.",
                        "type": "object",
                        "properties": {
                          "mode": {
                            "type": "string",
                            "description": "Mode for TLS.",
                            "default": "Enabled",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "OperationalMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled",
                                  "description": "Enabled is equivalent to True"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled",
                                  "description": "Disabled is equivalent to False."
                                }
                              ]
                            }
                          },
                          "trustedCaCertificateConfigMapRef": {
                            "type": "string",
                            "description": "Trusted CA certificate config map."
                          }
                        }
                      },
                      "cloudEventAttributes": {
                        "description": "Cloud event mapping config.",
                        "type": "string",
                        "enum": [
                          "Propagate",
                          "CreateOrRemap"
                        ],
                        "x-ms-enum": {
                          "name": "CloudEventAttributeType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Propagate",
                              "value": "Propagate",
                              "description": "Propagate type"
                            },
                            {
                              "name": "CreateOrRemap",
                              "value": "CreateOrRemap",
                              "description": "CreateOrRemap type"
                            }
                          ]
                        }
                      }
                    },
                    "required": [
                      "authentication"
                    ]
                  },
                  "openTelemetrySettings": {
                    "description": "OpenTelemetry endpoint.",
                    "type": "object",
                    "properties": {
                      "host": {
                        "type": "string",
                        "description": "Host of the OpenTelemetry in the form of <host>:<port>."
                      },
                      "batching": {
                        "description": "Batching configuration.",
                        "type": "object",
                        "properties": {
                          "latencySeconds": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Batching latency in seconds.",
                            "default": 60,
                            "minimum": 0,
                            "maximum": 65535
                          },
                          "maxMessages": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Maximum number of messages in a batch.",
                            "default": 100000,
                            "minimum": 0,
                            "maximum": 4294967295
                          }
                        }
                      },
                      "tls": {
                        "description": "TLS configuration.",
                        "type": "object",
                        "properties": {
                          "mode": {
                            "type": "string",
                            "description": "Mode for TLS.",
                            "default": "Enabled",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "OperationalMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled",
                                  "description": "Enabled is equivalent to True"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled",
                                  "description": "Disabled is equivalent to False."
                                }
                              ]
                            }
                          },
                          "trustedCaCertificateConfigMapRef": {
                            "type": "string",
                            "description": "Trusted CA certificate config map."
                          }
                        }
                      },
                      "authentication": {
                        "description": "Authentication properties for OpenTelemetry endpoints",
                        "type": "object",
                        "properties": {
                          "method": {
                            "description": "The authentication method.",
                            "type": "string",
                            "enum": [
                              "ServiceAccountToken",
                              "X509Certificate",
                              "Anonymous"
                            ],
                            "x-ms-enum": {
                              "name": "DataflowOpenTelemetryAuthenticationMethod",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "ServiceAccountToken",
                                  "value": "ServiceAccountToken",
                                  "description": "Uses serviceaccount token."
                                },
                                {
                                  "name": "X509Certificate",
                                  "value": "X509Certificate",
                                  "description": "Uses x509 certificate."
                                },
                                {
                                  "name": "Anonymous",
                                  "value": "Anonymous",
                                  "description": "Connects anonymously."
                                }
                              ]
                            }
                          }
                        },
                        "discriminator": "method",
                        "required": [
                          "method"
                        ]
                      }
                    },
                    "required": [
                      "host",
                      "authentication"
                    ]
                  },
                  "provisioningState": {
                    "description": "The status of the last operation.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Provisioning",
                      "Updating",
                      "Deleting",
                      "Accepted"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Provisioning",
                          "value": "Provisioning",
                          "description": "Resource is getting provisioned."
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "Resource is Updating."
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "Resource is Deleting."
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "Resource has been Accepted."
                        }
                      ]
                    }
                  },
                  "healthState": {
                    "type": "string",
                    "description": "The health state of the resource.",
                    "default": "Unknown",
                    "enum": [
                      "Available",
                      "Degraded",
                      "Unavailable",
                      "Unknown"
                    ],
                    "x-ms-enum": {
                      "name": "ResourceHealthState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Available",
                          "value": "Available",
                          "description": "Resource is Available and functioning as expected."
                        },
                        {
                          "name": "Degraded",
                          "value": "Degraded",
                          "description": "Resource health is degraded."
                        },
                        {
                          "name": "Unavailable",
                          "value": "Unavailable",
                          "description": "Resource is not functioning as expected."
                        },
                        {
                          "name": "Unknown",
                          "value": "Unknown",
                          "description": "Resource state is unknown."
                        }
                      ]
                    },
                    "readOnly": true
                  }
                },
                "required": [
                  "endpointType"
                ]
              },
              "extendedLocation": {
                "description": "Edge location of the resource.",
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the extended location."
                  },
                  "type": {
                    "description": "Type of ExtendedLocation.",
                    "type": "string",
                    "enum": [
                      "CustomLocation"
                    ],
                    "x-ms-enum": {
                      "name": "ExtendedLocationType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "CustomLocation",
                          "value": "CustomLocation",
                          "description": "CustomLocation type"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "name",
                  "type"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DataflowGraphConnectionInput": {
      "type": "object",
      "description": "DataflowGraph DataflowGraphNode Connection Input.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the input node."
        },
        "schema": {
          "description": "Schema settings for the input node.",
          "type": "object",
          "properties": {
            "serializationFormat": {
              "description": "Output serialization format.",
              "type": "string",
              "enum": [
                "Delta",
                "Json",
                "Parquet",
                "Avro"
              ],
              "x-ms-enum": {
                "name": "DataflowGraphConnectionSchemaSerializationFormat",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Delta",
                    "value": "Delta",
                    "description": "Delta Format"
                  },
                  {
                    "name": "Json",
                    "value": "Json",
                    "description": "JSON Format"
                  },
                  {
                    "name": "Parquet",
                    "value": "Parquet",
                    "description": "Parquet Format"
                  },
                  {
                    "name": "Avro",
                    "value": "Avro",
                    "description": "Avro serialization format."
                  }
                ]
              }
            },
            "schemaRef": {
              "type": "string",
              "description": "Reference to the schema that describes the output of the transformation."
            }
          }
        }
      },
      "required": [
        "name"
      ]
    },
    "DataflowGraphConnectionOutput": {
      "type": "object",
      "description": "DataflowGraph DataflowGraphNode Connection Output.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the destination node."
        }
      },
      "required": [
        "name"
      ]
    },
    "DataflowGraphConnectionSchemaSerializationFormat": {
      "type": "string",
      "description": "Serialization format for dataflow graph connection.",
      "enum": [
        "Delta",
        "Json",
        "Parquet",
        "Avro"
      ],
      "x-ms-enum": {
        "name": "DataflowGraphConnectionSchemaSerializationFormat",
        "modelAsString": true,
        "values": [
          {
            "name": "Delta",
            "value": "Delta",
            "description": "Delta Format"
          },
          {
            "name": "Json",
            "value": "Json",
            "description": "JSON Format"
          },
          {
            "name": "Parquet",
            "value": "Parquet",
            "description": "Parquet Format"
          },
          {
            "name": "Avro",
            "value": "Avro",
            "description": "Avro serialization format."
          }
        ]
      }
    },
    "DataflowGraphConnectionSchemaSettings": {
      "type": "object",
      "description": "DataflowGraph connection node output schema settings.",
      "properties": {
        "serializationFormat": {
          "description": "Output serialization format.",
          "type": "string",
          "enum": [
            "Delta",
            "Json",
            "Parquet",
            "Avro"
          ],
          "x-ms-enum": {
            "name": "DataflowGraphConnectionSchemaSerializationFormat",
            "modelAsString": true,
            "values": [
              {
                "name": "Delta",
                "value": "Delta",
                "description": "Delta Format"
              },
              {
                "name": "Json",
                "value": "Json",
                "description": "JSON Format"
              },
              {
                "name": "Parquet",
                "value": "Parquet",
                "description": "Parquet Format"
              },
              {
                "name": "Avro",
                "value": "Avro",
                "description": "Avro serialization format."
              }
            ]
          }
        },
        "schemaRef": {
          "type": "string",
          "description": "Reference to the schema that describes the output of the transformation."
        }
      }
    },
    "DataflowGraphDestinationAddIfNotPresentHeaderAction": {
      "type": "object",
      "description": "DataflowGraph Destination Add if not present HeaderAction properties.",
      "properties": {
        "key": {
          "type": "string",
          "description": "The name of the header to add."
        },
        "value": {
          "type": "string",
          "description": "The value of the header to add."
        }
      },
      "required": [
        "key",
        "value"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "DataflowGraph Destination Header Action.",
          "properties": {
            "actionType": {
              "description": "The type of header operation to perform.",
              "type": "string",
              "enum": [
                "AddIfNotPresent",
                "Remove",
                "AddOrReplace"
              ],
              "x-ms-enum": {
                "name": "DataflowGraphDestinationHeaderActionType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "AddIfNotPresent",
                    "value": "AddIfNotPresent",
                    "description": "Add if not present type."
                  },
                  {
                    "name": "Remove",
                    "value": "Remove",
                    "description": "Remove type."
                  },
                  {
                    "name": "AddOrReplace",
                    "value": "AddOrReplace",
                    "description": "Add or Replace type."
                  }
                ]
              }
            }
          },
          "discriminator": "actionType",
          "required": [
            "actionType"
          ]
        }
      ],
      "x-ms-discriminator-value": "AddIfNotPresent"
    },
    "DataflowGraphDestinationAddOrReplaceHeaderAction": {
      "type": "object",
      "description": "DataflowGraph Destination Add or Replace HeaderAction properties.",
      "properties": {
        "key": {
          "type": "string",
          "description": "The name of the header to add or replace."
        },
        "value": {
          "type": "string",
          "description": "The value of the header to add or replace."
        }
      },
      "required": [
        "key",
        "value"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "DataflowGraph Destination Header Action.",
          "properties": {
            "actionType": {
              "description": "The type of header operation to perform.",
              "type": "string",
              "enum": [
                "AddIfNotPresent",
                "Remove",
                "AddOrReplace"
              ],
              "x-ms-enum": {
                "name": "DataflowGraphDestinationHeaderActionType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "AddIfNotPresent",
                    "value": "AddIfNotPresent",
                    "description": "Add if not present type."
                  },
                  {
                    "name": "Remove",
                    "value": "Remove",
                    "description": "Remove type."
                  },
                  {
                    "name": "AddOrReplace",
                    "value": "AddOrReplace",
                    "description": "Add or Replace type."
                  }
                ]
              }
            }
          },
          "discriminator": "actionType",
          "required": [
            "actionType"
          ]
        }
      ],
      "x-ms-discriminator-value": "AddOrReplace"
    },
    "DataflowGraphDestinationHeaderAction": {
      "type": "object",
      "description": "DataflowGraph Destination Header Action.",
      "properties": {
        "actionType": {
          "description": "The type of header operation to perform.",
          "type": "string",
          "enum": [
            "AddIfNotPresent",
            "Remove",
            "AddOrReplace"
          ],
          "x-ms-enum": {
            "name": "DataflowGraphDestinationHeaderActionType",
            "modelAsString": true,
            "values": [
              {
                "name": "AddIfNotPresent",
                "value": "AddIfNotPresent",
                "description": "Add if not present type."
              },
              {
                "name": "Remove",
                "value": "Remove",
                "description": "Remove type."
              },
              {
                "name": "AddOrReplace",
                "value": "AddOrReplace",
                "description": "Add or Replace type."
              }
            ]
          }
        }
      },
      "discriminator": "actionType",
      "required": [
        "actionType"
      ]
    },
    "DataflowGraphDestinationHeaderActionType": {
      "type": "string",
      "description": "DataflowGraph Destination Header Action Types.",
      "enum": [
        "AddIfNotPresent",
        "Remove",
        "AddOrReplace"
      ],
      "x-ms-enum": {
        "name": "DataflowGraphDestinationHeaderActionType",
        "modelAsString": true,
        "values": [
          {
            "name": "AddIfNotPresent",
            "value": "AddIfNotPresent",
            "description": "Add if not present type."
          },
          {
            "name": "Remove",
            "value": "Remove",
            "description": "Remove type."
          },
          {
            "name": "AddOrReplace",
            "value": "AddOrReplace",
            "description": "Add or Replace type."
          }
        ]
      }
    },
    "DataflowGraphDestinationNode": {
      "type": "object",
      "description": "DataflowGraph destination node properties.",
      "properties": {
        "destinationSettings": {
          "description": "Destination configuration.",
          "type": "object",
          "properties": {
            "endpointRef": {
              "type": "string",
              "description": "The name of the DataflowEndpoint resource ."
            },
            "dataDestination": {
              "type": "string",
              "description": "Data destination at the endpoint."
            },
            "headers": {
              "type": "array",
              "description": "Headers for the output data.",
              "items": {
                "type": "object",
                "description": "DataflowGraph Destination Header Action.",
                "properties": {
                  "actionType": {
                    "description": "The type of header operation to perform.",
                    "type": "string",
                    "enum": [
                      "AddIfNotPresent",
                      "Remove",
                      "AddOrReplace"
                    ],
                    "x-ms-enum": {
                      "name": "DataflowGraphDestinationHeaderActionType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "AddIfNotPresent",
                          "value": "AddIfNotPresent",
                          "description": "Add if not present type."
                        },
                        {
                          "name": "Remove",
                          "value": "Remove",
                          "description": "Remove type."
                        },
                        {
                          "name": "AddOrReplace",
                          "value": "AddOrReplace",
                          "description": "Add or Replace type."
                        }
                      ]
                    }
                  }
                },
                "discriminator": "actionType",
                "required": [
                  "actionType"
                ]
              },
              "x-ms-identifiers": [
                "actionType"
              ]
            }
          },
          "required": [
            "endpointRef",
            "dataDestination"
          ]
        }
      },
      "required": [
        "destinationSettings"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "DataflowGraph node properties.",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the node."
            },
            "nodeType": {
              "description": "Type of the node.",
              "type": "string",
              "enum": [
                "Source",
                "Graph",
                "Destination"
              ],
              "x-ms-enum": {
                "name": "DataflowGraphNodeType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Source",
                    "value": "Source",
                    "description": "Dataflow source node."
                  },
                  {
                    "name": "Graph",
                    "value": "Graph",
                    "description": "Dataflow graph node."
                  },
                  {
                    "name": "Destination",
                    "value": "Destination",
                    "description": "Dataflow destination node."
                  }
                ]
              }
            }
          },
          "discriminator": "nodeType",
          "required": [
            "name",
            "nodeType"
          ]
        }
      ],
      "x-ms-discriminator-value": "Destination"
    },
    "DataflowGraphDestinationNodeSettings": {
      "type": "object",
      "description": "DataflowGraph destination node settings.",
      "properties": {
        "endpointRef": {
          "type": "string",
          "description": "The name of the DataflowEndpoint resource ."
        },
        "dataDestination": {
          "type": "string",
          "description": "Data destination at the endpoint."
        },
        "headers": {
          "type": "array",
          "description": "Headers for the output data.",
          "items": {
            "type": "object",
            "description": "DataflowGraph Destination Header Action.",
            "properties": {
              "actionType": {
                "description": "The type of header operation to perform.",
                "type": "string",
                "enum": [
                  "AddIfNotPresent",
                  "Remove",
                  "AddOrReplace"
                ],
                "x-ms-enum": {
                  "name": "DataflowGraphDestinationHeaderActionType",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "AddIfNotPresent",
                      "value": "AddIfNotPresent",
                      "description": "Add if not present type."
                    },
                    {
                      "name": "Remove",
                      "value": "Remove",
                      "description": "Remove type."
                    },
                    {
                      "name": "AddOrReplace",
                      "value": "AddOrReplace",
                      "description": "Add or Replace type."
                    }
                  ]
                }
              }
            },
            "discriminator": "actionType",
            "required": [
              "actionType"
            ]
          },
          "x-ms-identifiers": [
            "actionType"
          ]
        }
      },
      "required": [
        "endpointRef",
        "dataDestination"
      ]
    },
    "DataflowGraphDestinationRemoveHeaderAction": {
      "type": "object",
      "description": "DataflowGraph Destination Remove HeaderAction properties.",
      "properties": {
        "key": {
          "type": "string",
          "description": "The name of the header to remove."
        }
      },
      "required": [
        "key"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "DataflowGraph Destination Header Action.",
          "properties": {
            "actionType": {
              "description": "The type of header operation to perform.",
              "type": "string",
              "enum": [
                "AddIfNotPresent",
                "Remove",
                "AddOrReplace"
              ],
              "x-ms-enum": {
                "name": "DataflowGraphDestinationHeaderActionType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "AddIfNotPresent",
                    "value": "AddIfNotPresent",
                    "description": "Add if not present type."
                  },
                  {
                    "name": "Remove",
                    "value": "Remove",
                    "description": "Remove type."
                  },
                  {
                    "name": "AddOrReplace",
                    "value": "AddOrReplace",
                    "description": "Add or Replace type."
                  }
                ]
              }
            }
          },
          "discriminator": "actionType",
          "required": [
            "actionType"
          ]
        }
      ],
      "x-ms-discriminator-value": "Remove"
    },
    "DataflowGraphGraphNode": {
      "type": "object",
      "description": "DataflowGraph graph node properties.",
      "properties": {
        "graphSettings": {
          "description": "Graph configuration.",
          "type": "object",
          "properties": {
            "registryEndpointRef": {
              "type": "string",
              "description": "Reference to the registry endpoint for pulling the artifact."
            },
            "artifact": {
              "type": "string",
              "description": "The artifact name and version to pull. This should be in the format `<artifact-name>:<version>`."
            },
            "configuration": {
              "type": "array",
              "description": "Configuration key-value pairs.",
              "items": {
                "type": "object",
                "description": "DataflowGraph graph node configuration.",
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "Key of the configuration."
                  },
                  "value": {
                    "type": "string",
                    "description": "Value of the configuration."
                  }
                },
                "required": [
                  "key",
                  "value"
                ]
              },
              "x-ms-identifiers": [
                "key"
              ]
            }
          },
          "required": [
            "registryEndpointRef",
            "artifact"
          ]
        }
      },
      "required": [
        "graphSettings"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "DataflowGraph node properties.",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the node."
            },
            "nodeType": {
              "description": "Type of the node.",
              "type": "string",
              "enum": [
                "Source",
                "Graph",
                "Destination"
              ],
              "x-ms-enum": {
                "name": "DataflowGraphNodeType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Source",
                    "value": "Source",
                    "description": "Dataflow source node."
                  },
                  {
                    "name": "Graph",
                    "value": "Graph",
                    "description": "Dataflow graph node."
                  },
                  {
                    "name": "Destination",
                    "value": "Destination",
                    "description": "Dataflow destination node."
                  }
                ]
              }
            }
          },
          "discriminator": "nodeType",
          "required": [
            "name",
            "nodeType"
          ]
        }
      ],
      "x-ms-discriminator-value": "Graph"
    },
    "DataflowGraphGraphNodeConfiguration": {
      "type": "object",
      "description": "DataflowGraph graph node configuration.",
      "properties": {
        "key": {
          "type": "string",
          "description": "Key of the configuration."
        },
        "value": {
          "type": "string",
          "description": "Value of the configuration."
        }
      },
      "required": [
        "key",
        "value"
      ]
    },
    "DataflowGraphNode": {
      "type": "object",
      "description": "DataflowGraph node properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the node."
        },
        "nodeType": {
          "description": "Type of the node.",
          "type": "string",
          "enum": [
            "Source",
            "Graph",
            "Destination"
          ],
          "x-ms-enum": {
            "name": "DataflowGraphNodeType",
            "modelAsString": true,
            "values": [
              {
                "name": "Source",
                "value": "Source",
                "description": "Dataflow source node."
              },
              {
                "name": "Graph",
                "value": "Graph",
                "description": "Dataflow graph node."
              },
              {
                "name": "Destination",
                "value": "Destination",
                "description": "Dataflow destination node."
              }
            ]
          }
        }
      },
      "discriminator": "nodeType",
      "required": [
        "name",
        "nodeType"
      ]
    },
    "DataflowGraphNodeConnection": {
      "type": "object",
      "description": "DataflowGraph DataflowGraphNode Connection.",
      "properties": {
        "from": {
          "description": "Information about the source node.",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the input node."
            },
            "schema": {
              "description": "Schema settings for the input node.",
              "type": "object",
              "properties": {
                "serializationFormat": {
                  "description": "Output serialization format.",
                  "type": "string",
                  "enum": [
                    "Delta",
                    "Json",
                    "Parquet",
                    "Avro"
                  ],
                  "x-ms-enum": {
                    "name": "DataflowGraphConnectionSchemaSerializationFormat",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Delta",
                        "value": "Delta",
                        "description": "Delta Format"
                      },
                      {
                        "name": "Json",
                        "value": "Json",
                        "description": "JSON Format"
                      },
                      {
                        "name": "Parquet",
                        "value": "Parquet",
                        "description": "Parquet Format"
                      },
                      {
                        "name": "Avro",
                        "value": "Avro",
                        "description": "Avro serialization format."
                      }
                    ]
                  }
                },
                "schemaRef": {
                  "type": "string",
                  "description": "Reference to the schema that describes the output of the transformation."
                }
              }
            }
          },
          "required": [
            "name"
          ]
        },
        "to": {
          "description": "Information about the destination node.",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the destination node."
            }
          },
          "required": [
            "name"
          ]
        }
      },
      "required": [
        "from",
        "to"
      ]
    },
    "DataflowGraphNodeGraphSettings": {
      "type": "object",
      "description": "DataflowGraph graph node settings.",
      "properties": {
        "registryEndpointRef": {
          "type": "string",
          "description": "Reference to the registry endpoint for pulling the artifact."
        },
        "artifact": {
          "type": "string",
          "description": "The artifact name and version to pull. This should be in the format `<artifact-name>:<version>`."
        },
        "configuration": {
          "type": "array",
          "description": "Configuration key-value pairs.",
          "items": {
            "type": "object",
            "description": "DataflowGraph graph node configuration.",
            "properties": {
              "key": {
                "type": "string",
                "description": "Key of the configuration."
              },
              "value": {
                "type": "string",
                "description": "Value of the configuration."
              }
            },
            "required": [
              "key",
              "value"
            ]
          },
          "x-ms-identifiers": [
            "key"
          ]
        }
      },
      "required": [
        "registryEndpointRef",
        "artifact"
      ]
    },
    "DataflowGraphNodeType": {
      "type": "string",
      "description": "DataflowGraph node types.",
      "enum": [
        "Source",
        "Graph",
        "Destination"
      ],
      "x-ms-enum": {
        "name": "DataflowGraphNodeType",
        "modelAsString": true,
        "values": [
          {
            "name": "Source",
            "value": "Source",
            "description": "Dataflow source node."
          },
          {
            "name": "Graph",
            "value": "Graph",
            "description": "Dataflow graph node."
          },
          {
            "name": "Destination",
            "value": "Destination",
            "description": "Dataflow destination node."
          }
        ]
      }
    },
    "DataflowGraphProperties": {
      "type": "object",
      "description": "DataflowGraph properties.",
      "properties": {
        "mode": {
          "type": "string",
          "description": "The mode of the dataflow graph.",
          "default": "Enabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "OperationalMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "Enabled is equivalent to True"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "Disabled is equivalent to False."
              }
            ]
          }
        },
        "requestDiskPersistence": {
          "type": "string",
          "description": "Mode properties",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "OperationalMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "Enabled is equivalent to True"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "Disabled is equivalent to False."
              }
            ]
          }
        },
        "nodes": {
          "type": "array",
          "description": "List of nodes in the dataflow graph.",
          "items": {
            "type": "object",
            "description": "DataflowGraph node properties.",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the node."
              },
              "nodeType": {
                "description": "Type of the node.",
                "type": "string",
                "enum": [
                  "Source",
                  "Graph",
                  "Destination"
                ],
                "x-ms-enum": {
                  "name": "DataflowGraphNodeType",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Source",
                      "value": "Source",
                      "description": "Dataflow source node."
                    },
                    {
                      "name": "Graph",
                      "value": "Graph",
                      "description": "Dataflow graph node."
                    },
                    {
                      "name": "Destination",
                      "value": "Destination",
                      "description": "Dataflow destination node."
                    }
                  ]
                }
              }
            },
            "discriminator": "nodeType",
            "required": [
              "name",
              "nodeType"
            ]
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nodeConnections": {
          "type": "array",
          "description": "List of connections between nodes in the dataflow graph.",
          "items": {
            "type": "object",
            "description": "DataflowGraph DataflowGraphNode Connection.",
            "properties": {
              "from": {
                "description": "Information about the source node.",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the input node."
                  },
                  "schema": {
                    "description": "Schema settings for the input node.",
                    "type": "object",
                    "properties": {
                      "serializationFormat": {
                        "description": "Output serialization format.",
                        "type": "string",
                        "enum": [
                          "Delta",
                          "Json",
                          "Parquet",
                          "Avro"
                        ],
                        "x-ms-enum": {
                          "name": "DataflowGraphConnectionSchemaSerializationFormat",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Delta",
                              "value": "Delta",
                              "description": "Delta Format"
                            },
                            {
                              "name": "Json",
                              "value": "Json",
                              "description": "JSON Format"
                            },
                            {
                              "name": "Parquet",
                              "value": "Parquet",
                              "description": "Parquet Format"
                            },
                            {
                              "name": "Avro",
                              "value": "Avro",
                              "description": "Avro serialization format."
                            }
                          ]
                        }
                      },
                      "schemaRef": {
                        "type": "string",
                        "description": "Reference to the schema that describes the output of the transformation."
                      }
                    }
                  }
                },
                "required": [
                  "name"
                ]
              },
              "to": {
                "description": "Information about the destination node.",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the destination node."
                  }
                },
                "required": [
                  "name"
                ]
              }
            },
            "required": [
              "from",
              "to"
            ]
          },
          "x-ms-identifiers": []
        },
        "provisioningState": {
          "description": "The provisioning state of the dataflow graph.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Updating",
            "Deleting",
            "Accepted"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Provisioning",
                "value": "Provisioning",
                "description": "Resource is getting provisioned."
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "Resource is Updating."
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "Resource is Deleting."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "Resource has been Accepted."
              }
            ]
          }
        },
        "healthState": {
          "type": "string",
          "description": "The health state of the resource.",
          "default": "Unknown",
          "enum": [
            "Available",
            "Degraded",
            "Unavailable",
            "Unknown"
          ],
          "x-ms-enum": {
            "name": "ResourceHealthState",
            "modelAsString": true,
            "values": [
              {
                "name": "Available",
                "value": "Available",
                "description": "Resource is Available and functioning as expected."
              },
              {
                "name": "Degraded",
                "value": "Degraded",
                "description": "Resource health is degraded."
              },
              {
                "name": "Unavailable",
                "value": "Unavailable",
                "description": "Resource is not functioning as expected."
              },
              {
                "name": "Unknown",
                "value": "Unknown",
                "description": "Resource state is unknown."
              }
            ]
          },
          "readOnly": true
        }
      },
      "required": [
        "nodes",
        "nodeConnections"
      ]
    },
    "DataflowGraphResource": {
      "type": "object",
      "description": "Instance dataflowEndpoint resource.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "mode": {
              "type": "string",
              "description": "The mode of the dataflow graph.",
              "default": "Enabled",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "OperationalMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled",
                    "description": "Enabled is equivalent to True"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "Disabled is equivalent to False."
                  }
                ]
              }
            },
            "requestDiskPersistence": {
              "type": "string",
              "description": "Mode properties",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "OperationalMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled",
                    "description": "Enabled is equivalent to True"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "Disabled is equivalent to False."
                  }
                ]
              }
            },
            "nodes": {
              "type": "array",
              "description": "List of nodes in the dataflow graph.",
              "items": {
                "type": "object",
                "description": "DataflowGraph node properties.",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the node."
                  },
                  "nodeType": {
                    "description": "Type of the node.",
                    "type": "string",
                    "enum": [
                      "Source",
                      "Graph",
                      "Destination"
                    ],
                    "x-ms-enum": {
                      "name": "DataflowGraphNodeType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Source",
                          "value": "Source",
                          "description": "Dataflow source node."
                        },
                        {
                          "name": "Graph",
                          "value": "Graph",
                          "description": "Dataflow graph node."
                        },
                        {
                          "name": "Destination",
                          "value": "Destination",
                          "description": "Dataflow destination node."
                        }
                      ]
                    }
                  }
                },
                "discriminator": "nodeType",
                "required": [
                  "name",
                  "nodeType"
                ]
              },
              "x-ms-identifiers": [
                "name"
              ]
            },
            "nodeConnections": {
              "type": "array",
              "description": "List of connections between nodes in the dataflow graph.",
              "items": {
                "type": "object",
                "description": "DataflowGraph DataflowGraphNode Connection.",
                "properties": {
                  "from": {
                    "description": "Information about the source node.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the input node."
                      },
                      "schema": {
                        "description": "Schema settings for the input node.",
                        "type": "object",
                        "properties": {
                          "serializationFormat": {
                            "description": "Output serialization format.",
                            "type": "string",
                            "enum": [
                              "Delta",
                              "Json",
                              "Parquet",
                              "Avro"
                            ],
                            "x-ms-enum": {
                              "name": "DataflowGraphConnectionSchemaSerializationFormat",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Delta",
                                  "value": "Delta",
                                  "description": "Delta Format"
                                },
                                {
                                  "name": "Json",
                                  "value": "Json",
                                  "description": "JSON Format"
                                },
                                {
                                  "name": "Parquet",
                                  "value": "Parquet",
                                  "description": "Parquet Format"
                                },
                                {
                                  "name": "Avro",
                                  "value": "Avro",
                                  "description": "Avro serialization format."
                                }
                              ]
                            }
                          },
                          "schemaRef": {
                            "type": "string",
                            "description": "Reference to the schema that describes the output of the transformation."
                          }
                        }
                      }
                    },
                    "required": [
                      "name"
                    ]
                  },
                  "to": {
                    "description": "Information about the destination node.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the destination node."
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                },
                "required": [
                  "from",
                  "to"
                ]
              },
              "x-ms-identifiers": []
            },
            "provisioningState": {
              "description": "The provisioning state of the dataflow graph.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "Resource is getting provisioned."
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "Resource is Updating."
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "Resource is Deleting."
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "Resource has been Accepted."
                  }
                ]
              }
            },
            "healthState": {
              "type": "string",
              "description": "The health state of the resource.",
              "default": "Unknown",
              "enum": [
                "Available",
                "Degraded",
                "Unavailable",
                "Unknown"
              ],
              "x-ms-enum": {
                "name": "ResourceHealthState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Available",
                    "value": "Available",
                    "description": "Resource is Available and functioning as expected."
                  },
                  {
                    "name": "Degraded",
                    "value": "Degraded",
                    "description": "Resource health is degraded."
                  },
                  {
                    "name": "Unavailable",
                    "value": "Unavailable",
                    "description": "Resource is not functioning as expected."
                  },
                  {
                    "name": "Unknown",
                    "value": "Unknown",
                    "description": "Resource state is unknown."
                  }
                ]
              },
              "readOnly": true
            }
          },
          "required": [
            "nodes",
            "nodeConnections"
          ]
        },
        "extendedLocation": {
          "description": "Edge location of the resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the extended location."
            },
            "type": {
              "description": "Type of ExtendedLocation.",
              "type": "string",
              "enum": [
                "CustomLocation"
              ],
              "x-ms-enum": {
                "name": "ExtendedLocationType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "CustomLocation",
                    "value": "CustomLocation",
                    "description": "CustomLocation type"
                  }
                ]
              }
            }
          },
          "required": [
            "name",
            "type"
          ]
        }
      }
    },
    "DataflowGraphResourceListResult": {
      "type": "object",
      "description": "The response of a DataflowGraphResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DataflowGraphResource items on this page",
          "items": {
            "type": "object",
            "description": "Instance dataflowEndpoint resource.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "mode": {
                    "type": "string",
                    "description": "The mode of the dataflow graph.",
                    "default": "Enabled",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "name": "OperationalMode",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Enabled",
                          "value": "Enabled",
                          "description": "Enabled is equivalent to True"
                        },
                        {
                          "name": "Disabled",
                          "value": "Disabled",
                          "description": "Disabled is equivalent to False."
                        }
                      ]
                    }
                  },
                  "requestDiskPersistence": {
                    "type": "string",
                    "description": "Mode properties",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "name": "OperationalMode",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Enabled",
                          "value": "Enabled",
                          "description": "Enabled is equivalent to True"
                        },
                        {
                          "name": "Disabled",
                          "value": "Disabled",
                          "description": "Disabled is equivalent to False."
                        }
                      ]
                    }
                  },
                  "nodes": {
                    "type": "array",
                    "description": "List of nodes in the dataflow graph.",
                    "items": {
                      "type": "object",
                      "description": "DataflowGraph node properties.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the node."
                        },
                        "nodeType": {
                          "description": "Type of the node.",
                          "type": "string",
                          "enum": [
                            "Source",
                            "Graph",
                            "Destination"
                          ],
                          "x-ms-enum": {
                            "name": "DataflowGraphNodeType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Source",
                                "value": "Source",
                                "description": "Dataflow source node."
                              },
                              {
                                "name": "Graph",
                                "value": "Graph",
                                "description": "Dataflow graph node."
                              },
                              {
                                "name": "Destination",
                                "value": "Destination",
                                "description": "Dataflow destination node."
                              }
                            ]
                          }
                        }
                      },
                      "discriminator": "nodeType",
                      "required": [
                        "name",
                        "nodeType"
                      ]
                    },
                    "x-ms-identifiers": [
                      "name"
                    ]
                  },
                  "nodeConnections": {
                    "type": "array",
                    "description": "List of connections between nodes in the dataflow graph.",
                    "items": {
                      "type": "object",
                      "description": "DataflowGraph DataflowGraphNode Connection.",
                      "properties": {
                        "from": {
                          "description": "Information about the source node.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of the input node."
                            },
                            "schema": {
                              "description": "Schema settings for the input node.",
                              "type": "object",
                              "properties": {
                                "serializationFormat": {
                                  "description": "Output serialization format.",
                                  "type": "string",
                                  "enum": [
                                    "Delta",
                                    "Json",
                                    "Parquet",
                                    "Avro"
                                  ],
                                  "x-ms-enum": {
                                    "name": "DataflowGraphConnectionSchemaSerializationFormat",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Delta",
                                        "value": "Delta",
                                        "description": "Delta Format"
                                      },
                                      {
                                        "name": "Json",
                                        "value": "Json",
                                        "description": "JSON Format"
                                      },
                                      {
                                        "name": "Parquet",
                                        "value": "Parquet",
                                        "description": "Parquet Format"
                                      },
                                      {
                                        "name": "Avro",
                                        "value": "Avro",
                                        "description": "Avro serialization format."
                                      }
                                    ]
                                  }
                                },
                                "schemaRef": {
                                  "type": "string",
                                  "description": "Reference to the schema that describes the output of the transformation."
                                }
                              }
                            }
                          },
                          "required": [
                            "name"
                          ]
                        },
                        "to": {
                          "description": "Information about the destination node.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of the destination node."
                            }
                          },
                          "required": [
                            "name"
                          ]
                        }
                      },
                      "required": [
                        "from",
                        "to"
                      ]
                    },
                    "x-ms-identifiers": []
                  },
                  "provisioningState": {
                    "description": "The provisioning state of the dataflow graph.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Provisioning",
                      "Updating",
                      "Deleting",
                      "Accepted"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Provisioning",
                          "value": "Provisioning",
                          "description": "Resource is getting provisioned."
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "Resource is Updating."
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "Resource is Deleting."
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "Resource has been Accepted."
                        }
                      ]
                    }
                  },
                  "healthState": {
                    "type": "string",
                    "description": "The health state of the resource.",
                    "default": "Unknown",
                    "enum": [
                      "Available",
                      "Degraded",
                      "Unavailable",
                      "Unknown"
                    ],
                    "x-ms-enum": {
                      "name": "ResourceHealthState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Available",
                          "value": "Available",
                          "description": "Resource is Available and functioning as expected."
                        },
                        {
                          "name": "Degraded",
                          "value": "Degraded",
                          "description": "Resource health is degraded."
                        },
                        {
                          "name": "Unavailable",
                          "value": "Unavailable",
                          "description": "Resource is not functioning as expected."
                        },
                        {
                          "name": "Unknown",
                          "value": "Unknown",
                          "description": "Resource state is unknown."
                        }
                      ]
                    },
                    "readOnly": true
                  }
                },
                "required": [
                  "nodes",
                  "nodeConnections"
                ]
              },
              "extendedLocation": {
                "description": "Edge location of the resource.",
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the extended location."
                  },
                  "type": {
                    "description": "Type of ExtendedLocation.",
                    "type": "string",
                    "enum": [
                      "CustomLocation"
                    ],
                    "x-ms-enum": {
                      "name": "ExtendedLocationType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "CustomLocation",
                          "value": "CustomLocation",
                          "description": "CustomLocation type"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "name",
                  "type"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DataflowGraphSourceNode": {
      "type": "object",
      "description": "DataflowGraph source node properties.",
      "properties": {
        "sourceSettings": {
          "description": "Source configuration.",
          "type": "object",
          "properties": {
            "endpointRef": {
              "type": "string",
              "description": "The endpoint reference for the source."
            },
            "dataSources": {
              "type": "array",
              "description": "List of data sources.",
              "items": {
                "type": "string"
              }
            },
            "assetRef": {
              "type": "string",
              "description": "Reference to the resource in Azure Device Registry where the data in the endpoint originates from."
            }
          },
          "required": [
            "endpointRef",
            "dataSources"
          ]
        }
      },
      "required": [
        "sourceSettings"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "DataflowGraph node properties.",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the node."
            },
            "nodeType": {
              "description": "Type of the node.",
              "type": "string",
              "enum": [
                "Source",
                "Graph",
                "Destination"
              ],
              "x-ms-enum": {
                "name": "DataflowGraphNodeType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Source",
                    "value": "Source",
                    "description": "Dataflow source node."
                  },
                  {
                    "name": "Graph",
                    "value": "Graph",
                    "description": "Dataflow graph node."
                  },
                  {
                    "name": "Destination",
                    "value": "Destination",
                    "description": "Dataflow destination node."
                  }
                ]
              }
            }
          },
          "discriminator": "nodeType",
          "required": [
            "name",
            "nodeType"
          ]
        }
      ],
      "x-ms-discriminator-value": "Source"
    },
    "DataflowGraphSourceSettings": {
      "type": "object",
      "description": "DataflowGraph source node settings.",
      "properties": {
        "endpointRef": {
          "type": "string",
          "description": "The endpoint reference for the source."
        },
        "dataSources": {
          "type": "array",
          "description": "List of data sources.",
          "items": {
            "type": "string"
          }
        },
        "assetRef": {
          "type": "string",
          "description": "Reference to the resource in Azure Device Registry where the data in the endpoint originates from."
        }
      },
      "required": [
        "endpointRef",
        "dataSources"
      ]
    },
    "DataflowHeaderActionType": {
      "type": "string",
      "description": "Dataflow Destination Header Action Types",
      "enum": [
        "AddIfNotPresent",
        "Remove",
        "AddOrReplace"
      ],
      "x-ms-enum": {
        "name": "DataflowHeaderActionType",
        "modelAsString": true,
        "values": [
          {
            "name": "AddIfNotPresent",
            "value": "AddIfNotPresent",
            "description": "Add if not present type"
          },
          {
            "name": "Remove",
            "value": "Remove",
            "description": "Remove type"
          },
          {
            "name": "AddOrReplace",
            "value": "AddOrReplace",
            "description": "Add or Replace type"
          }
        ]
      }
    },
    "DataflowMappingType": {
      "type": "string",
      "description": "Dataflow type mapping properties",
      "enum": [
        "NewProperties",
        "Rename",
        "Compute",
        "PassThrough",
        "BuiltInFunction"
      ],
      "x-ms-enum": {
        "name": "DataflowMappingType",
        "modelAsString": true,
        "values": [
          {
            "name": "NewProperties",
            "value": "NewProperties",
            "description": "New Properties type"
          },
          {
            "name": "Rename",
            "value": "Rename",
            "description": "Rename type"
          },
          {
            "name": "Compute",
            "value": "Compute",
            "description": "Compute type"
          },
          {
            "name": "PassThrough",
            "value": "PassThrough",
            "description": "Pass-through type"
          },
          {
            "name": "BuiltInFunction",
            "value": "BuiltInFunction",
            "description": "Built in function type"
          }
        ]
      }
    },
    "DataflowOpenTelemetryAnonymousAuthentication": {
      "type": "object",
      "description": "DataflowOpenTelemetryAnonymousAuthentication properties.",
      "properties": {
        "anonymousSettings": {
          "description": "Settings for the anonymous connection",
          "type": "object",
          "additionalProperties": false
        }
      },
      "required": [
        "anonymousSettings"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "Dataflow OpenTelemetry authentication properties.",
          "properties": {
            "method": {
              "description": "The authentication method.",
              "type": "string",
              "enum": [
                "ServiceAccountToken",
                "X509Certificate",
                "Anonymous"
              ],
              "x-ms-enum": {
                "name": "DataflowOpenTelemetryAuthenticationMethod",
                "modelAsString": true,
                "values": [
                  {
                    "name": "ServiceAccountToken",
                    "value": "ServiceAccountToken",
                    "description": "Uses serviceaccount token."
                  },
                  {
                    "name": "X509Certificate",
                    "value": "X509Certificate",
                    "description": "Uses x509 certificate."
                  },
                  {
                    "name": "Anonymous",
                    "value": "Anonymous",
                    "description": "Connects anonymously."
                  }
                ]
              }
            }
          },
          "discriminator": "method",
          "required": [
            "method"
          ]
        }
      ],
      "x-ms-discriminator-value": "Anonymous"
    },
    "DataflowOpenTelemetryAuthentication": {
      "type": "object",
      "description": "Dataflow OpenTelemetry authentication properties.",
      "properties": {
        "method": {
          "description": "The authentication method.",
          "type": "string",
          "enum": [
            "ServiceAccountToken",
            "X509Certificate",
            "Anonymous"
          ],
          "x-ms-enum": {
            "name": "DataflowOpenTelemetryAuthenticationMethod",
            "modelAsString": true,
            "values": [
              {
                "name": "ServiceAccountToken",
                "value": "ServiceAccountToken",
                "description": "Uses serviceaccount token."
              },
              {
                "name": "X509Certificate",
                "value": "X509Certificate",
                "description": "Uses x509 certificate."
              },
              {
                "name": "Anonymous",
                "value": "Anonymous",
                "description": "Connects anonymously."
              }
            ]
          }
        }
      },
      "discriminator": "method",
      "required": [
        "method"
      ]
    },
    "DataflowOpenTelemetryAuthenticationMethod": {
      "type": "string",
      "description": "Dataflow OpenTelemetry authentication method values.",
      "enum": [
        "ServiceAccountToken",
        "X509Certificate",
        "Anonymous"
      ],
      "x-ms-enum": {
        "name": "DataflowOpenTelemetryAuthenticationMethod",
        "modelAsString": true,
        "values": [
          {
            "name": "ServiceAccountToken",
            "value": "ServiceAccountToken",
            "description": "Uses serviceaccount token."
          },
          {
            "name": "X509Certificate",
            "value": "X509Certificate",
            "description": "Uses x509 certificate."
          },
          {
            "name": "Anonymous",
            "value": "Anonymous",
            "description": "Connects anonymously."
          }
        ]
      }
    },
    "DataflowOpenTelemetryServiceAccountAuthentication": {
      "type": "object",
      "description": "DataflowOpenTelemetryServiceAccountAuthentication properties.",
      "properties": {
        "serviceAccountTokenSettings": {
          "description": "Kubernetes service account token authentication.",
          "type": "object",
          "properties": {
            "audience": {
              "type": "string",
              "description": "Audience of the service account. Optional, defaults to the broker internal service account audience."
            }
          },
          "required": [
            "audience"
          ]
        }
      },
      "required": [
        "serviceAccountTokenSettings"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "Dataflow OpenTelemetry authentication properties.",
          "properties": {
            "method": {
              "description": "The authentication method.",
              "type": "string",
              "enum": [
                "ServiceAccountToken",
                "X509Certificate",
                "Anonymous"
              ],
              "x-ms-enum": {
                "name": "DataflowOpenTelemetryAuthenticationMethod",
                "modelAsString": true,
                "values": [
                  {
                    "name": "ServiceAccountToken",
                    "value": "ServiceAccountToken",
                    "description": "Uses serviceaccount token."
                  },
                  {
                    "name": "X509Certificate",
                    "value": "X509Certificate",
                    "description": "Uses x509 certificate."
                  },
                  {
                    "name": "Anonymous",
                    "value": "Anonymous",
                    "description": "Connects anonymously."
                  }
                ]
              }
            }
          },
          "discriminator": "method",
          "required": [
            "method"
          ]
        }
      ],
      "x-ms-discriminator-value": "ServiceAccountToken"
    },
    "DataflowOpenTelemetryX509CertificateAuthentication": {
      "type": "object",
      "description": "DataflowOpenTelemetryX509CertificateAuthentication properties.",
      "properties": {
        "x509CertificateSettings": {
          "description": "X.509 certificate authentication settings.",
          "type": "object",
          "properties": {
            "secretRef": {
              "type": "string",
              "description": "Secret reference of the X.509 certificate."
            }
          },
          "required": [
            "secretRef"
          ]
        }
      },
      "required": [
        "x509CertificateSettings"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "Dataflow OpenTelemetry authentication properties.",
          "properties": {
            "method": {
              "description": "The authentication method.",
              "type": "string",
              "enum": [
                "ServiceAccountToken",
                "X509Certificate",
                "Anonymous"
              ],
              "x-ms-enum": {
                "name": "DataflowOpenTelemetryAuthenticationMethod",
                "modelAsString": true,
                "values": [
                  {
                    "name": "ServiceAccountToken",
                    "value": "ServiceAccountToken",
                    "description": "Uses serviceaccount token."
                  },
                  {
                    "name": "X509Certificate",
                    "value": "X509Certificate",
                    "description": "Uses x509 certificate."
                  },
                  {
                    "name": "Anonymous",
                    "value": "Anonymous",
                    "description": "Connects anonymously."
                  }
                ]
              }
            }
          },
          "discriminator": "method",
          "required": [
            "method"
          ]
        }
      ],
      "x-ms-discriminator-value": "X509Certificate"
    },
    "DataflowOperation": {
      "type": "object",
      "description": "Dataflow Operation properties. NOTE - One only method is allowed to be used for one entry.",
      "properties": {
        "operationType": {
          "description": "Type of operation.",
          "type": "string",
          "enum": [
            "Source",
            "Destination",
            "BuiltInTransformation"
          ],
          "x-ms-enum": {
            "name": "OperationType",
            "modelAsString": true,
            "values": [
              {
                "name": "Source",
                "value": "Source",
                "description": "Dataflow Source Operation"
              },
              {
                "name": "Destination",
                "value": "Destination",
                "description": "Dataflow Destination Operation"
              },
              {
                "name": "BuiltInTransformation",
                "value": "BuiltInTransformation",
                "description": "Dataflow BuiltIn Transformation Operation"
              }
            ]
          }
        },
        "name": {
          "type": "string",
          "description": "Optional user provided name of the transformation.",
          "maxLength": 64
        },
        "sourceSettings": {
          "description": "Source configuration.",
          "type": "object",
          "properties": {
            "endpointRef": {
              "type": "string",
              "description": "Reference to the Dataflow Endpoint resource. Can only be of Broker and Kafka type."
            },
            "assetRef": {
              "type": "string",
              "description": "Reference to the resource in Azure Device Registry where the data in the endpoint originates from."
            },
            "serializationFormat": {
              "type": "string",
              "description": "Content is a JSON Schema. Allowed: JSON Schema/draft-7.",
              "default": "Json",
              "enum": [
                "Json"
              ],
              "x-ms-enum": {
                "name": "SourceSerializationFormat",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Json",
                    "value": "Json",
                    "description": "JSON Format"
                  }
                ]
              }
            },
            "schemaRef": {
              "type": "string",
              "description": "Schema CR reference. Data will be deserialized according to the schema, and dropped if it doesn't match."
            },
            "dataSources": {
              "type": "array",
              "description": "List of source locations. Can be Broker or Kafka topics. Supports wildcards # and +.",
              "items": {
                "type": "string",
                "description": "A string with a minimum length of 1.",
                "minLength": 1
              }
            }
          },
          "required": [
            "endpointRef",
            "dataSources"
          ]
        },
        "builtInTransformationSettings": {
          "description": "Built In Transformation configuration.",
          "type": "object",
          "properties": {
            "serializationFormat": {
              "type": "string",
              "description": "Serialization format. Optional; defaults to JSON. Allowed value JSON Schema/draft-7, Parquet. Default: Json",
              "default": "Json",
              "enum": [
                "Delta",
                "Json",
                "Parquet"
              ],
              "x-ms-enum": {
                "name": "TransformationSerializationFormat",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Delta",
                    "value": "Delta",
                    "description": "Delta Format"
                  },
                  {
                    "name": "Json",
                    "value": "Json",
                    "description": "JSON Format"
                  },
                  {
                    "name": "Parquet",
                    "value": "Parquet",
                    "description": "Parquet Format"
                  }
                ]
              }
            },
            "schemaRef": {
              "type": "string",
              "description": "Reference to the schema that describes the output of the transformation."
            },
            "datasets": {
              "type": "array",
              "description": "Enrich data from Broker State Store. Dataset references a key in Broker State Store.",
              "default": [],
              "maxItems": 1,
              "items": {
                "type": "object",
                "description": "Dataflow BuiltIn Transformation dataset properties",
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "The key of the dataset.",
                    "maxLength": 64
                  },
                  "description": {
                    "type": "string",
                    "description": "A user provided optional description of the dataset.",
                    "maxLength": 256
                  },
                  "schemaRef": {
                    "type": "string",
                    "description": "The reference to the schema that describes the dataset. Allowed: JSON Schema/draft-7."
                  },
                  "inputs": {
                    "type": "array",
                    "description": "List of fields for enriching from the Broker State Store.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "expression": {
                    "type": "string",
                    "description": "Condition to enrich data from Broker State Store. Example: $1 < 0 || $1 > $2 (Assuming inputs section $1 and $2 are provided)"
                  }
                },
                "required": [
                  "key",
                  "inputs"
                ]
              },
              "x-ms-identifiers": []
            },
            "filter": {
              "type": "array",
              "description": "Filters input record or datapoints based on condition.",
              "default": [],
              "items": {
                "type": "object",
                "description": "Dataflow BuiltIn Transformation filter properties",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The type of dataflow operation.",
                    "default": "Filter",
                    "enum": [
                      "Filter"
                    ],
                    "x-ms-enum": {
                      "name": "FilterType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Filter",
                          "value": "Filter",
                          "description": "Filter type"
                        }
                      ]
                    }
                  },
                  "description": {
                    "type": "string",
                    "description": "A user provided optional description of the filter.",
                    "maxLength": 256
                  },
                  "inputs": {
                    "type": "array",
                    "description": "List of fields for filtering in JSON path expression.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "expression": {
                    "type": "string",
                    "description": "Condition to filter data. Can reference input fields with {n} where n is the index of the input field starting from 1. Example: $1 < 0 || $1 > $2 (Assuming inputs section $1 and $2 are provided)"
                  }
                },
                "required": [
                  "inputs",
                  "expression"
                ]
              },
              "x-ms-identifiers": []
            },
            "map": {
              "type": "array",
              "description": "Maps input to output message.",
              "default": [],
              "items": {
                "type": "object",
                "description": "Dataflow BuiltIn Transformation map properties",
                "properties": {
                  "type": {
                    "description": "Type of transformation.",
                    "type": "string",
                    "enum": [
                      "NewProperties",
                      "Rename",
                      "Compute",
                      "PassThrough",
                      "BuiltInFunction"
                    ],
                    "x-ms-enum": {
                      "name": "DataflowMappingType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "NewProperties",
                          "value": "NewProperties",
                          "description": "New Properties type"
                        },
                        {
                          "name": "Rename",
                          "value": "Rename",
                          "description": "Rename type"
                        },
                        {
                          "name": "Compute",
                          "value": "Compute",
                          "description": "Compute type"
                        },
                        {
                          "name": "PassThrough",
                          "value": "PassThrough",
                          "description": "Pass-through type"
                        },
                        {
                          "name": "BuiltInFunction",
                          "value": "BuiltInFunction",
                          "description": "Built in function type"
                        }
                      ]
                    }
                  },
                  "description": {
                    "type": "string",
                    "description": "A user provided optional description of the mapping function.",
                    "maxLength": 256
                  },
                  "inputs": {
                    "type": "array",
                    "description": "List of fields for mapping in JSON path expression.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "expression": {
                    "type": "string",
                    "description": "Modify the inputs field(s) to the final output field. Example: $1 * 2.2 (Assuming inputs section $1 is provided)"
                  },
                  "output": {
                    "type": "string",
                    "description": "Where and how the input fields to be organized in the output record."
                  }
                },
                "required": [
                  "inputs",
                  "output"
                ]
              },
              "x-ms-identifiers": []
            }
          }
        },
        "destinationSettings": {
          "description": "Destination configuration.",
          "type": "object",
          "properties": {
            "endpointRef": {
              "type": "string",
              "description": "Reference to the Endpoint CR. Can be of Broker, Kafka, Fabric, ADLS, ADX type."
            },
            "dataDestination": {
              "type": "string",
              "description": "A string with a minimum length of 1.",
              "minLength": 1
            },
            "headers": {
              "type": "array",
              "description": "Headers for the output data.",
              "items": {
                "type": "object",
                "description": "Dataflow Destination Header Action properties",
                "properties": {
                  "actionType": {
                    "description": "The type of header operation to perform.",
                    "type": "string",
                    "enum": [
                      "AddIfNotPresent",
                      "Remove",
                      "AddOrReplace"
                    ],
                    "x-ms-enum": {
                      "name": "DataflowHeaderActionType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "AddIfNotPresent",
                          "value": "AddIfNotPresent",
                          "description": "Add if not present type"
                        },
                        {
                          "name": "Remove",
                          "value": "Remove",
                          "description": "Remove type"
                        },
                        {
                          "name": "AddOrReplace",
                          "value": "AddOrReplace",
                          "description": "Add or Replace type"
                        }
                      ]
                    }
                  }
                },
                "discriminator": "actionType",
                "required": [
                  "actionType"
                ]
              },
              "x-ms-identifiers": [
                "actionType"
              ]
            }
          },
          "required": [
            "endpointRef",
            "dataDestination"
          ]
        }
      },
      "required": [
        "operationType"
      ]
    },
    "DataflowProfileProperties": {
      "type": "object",
      "description": "DataflowProfile Resource properties",
      "properties": {
        "diagnostics": {
          "description": "Spec defines the desired identities of NBC diagnostics settings.",
          "type": "object",
          "properties": {
            "logs": {
              "description": "Diagnostic log settings for the resource.",
              "type": "object",
              "properties": {
                "level": {
                  "type": "string",
                  "description": "The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.",
                  "default": "info"
                }
              }
            },
            "metrics": {
              "description": "The metrics settings for the resource.",
              "type": "object",
              "properties": {
                "prometheusPort": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The prometheus port to expose the metrics.",
                  "default": 9600,
                  "minimum": 0,
                  "maximum": 65535
                }
              }
            }
          }
        },
        "instanceCount": {
          "type": "integer",
          "format": "int32",
          "description": "To manually scale the dataflow profile, specify the maximum number of instances you want to run.",
          "default": 1,
          "minimum": 1,
          "maximum": 20
        },
        "provisioningState": {
          "description": "The status of the last operation.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Updating",
            "Deleting",
            "Accepted"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Provisioning",
                "value": "Provisioning",
                "description": "Resource is getting provisioned."
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "Resource is Updating."
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "Resource is Deleting."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "Resource has been Accepted."
              }
            ]
          }
        },
        "healthState": {
          "type": "string",
          "description": "The health state of the resource.",
          "default": "Unknown",
          "enum": [
            "Available",
            "Degraded",
            "Unavailable",
            "Unknown"
          ],
          "x-ms-enum": {
            "name": "ResourceHealthState",
            "modelAsString": true,
            "values": [
              {
                "name": "Available",
                "value": "Available",
                "description": "Resource is Available and functioning as expected."
              },
              {
                "name": "Degraded",
                "value": "Degraded",
                "description": "Resource health is degraded."
              },
              {
                "name": "Unavailable",
                "value": "Unavailable",
                "description": "Resource is not functioning as expected."
              },
              {
                "name": "Unknown",
                "value": "Unknown",
                "description": "Resource state is unknown."
              }
            ]
          },
          "readOnly": true
        }
      }
    },
    "DataflowProfileResource": {
      "type": "object",
      "description": "Instance dataflowProfile resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "diagnostics": {
              "description": "Spec defines the desired identities of NBC diagnostics settings.",
              "type": "object",
              "properties": {
                "logs": {
                  "description": "Diagnostic log settings for the resource.",
                  "type": "object",
                  "properties": {
                    "level": {
                      "type": "string",
                      "description": "The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.",
                      "default": "info"
                    }
                  }
                },
                "metrics": {
                  "description": "The metrics settings for the resource.",
                  "type": "object",
                  "properties": {
                    "prometheusPort": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The prometheus port to expose the metrics.",
                      "default": 9600,
                      "minimum": 0,
                      "maximum": 65535
                    }
                  }
                }
              }
            },
            "instanceCount": {
              "type": "integer",
              "format": "int32",
              "description": "To manually scale the dataflow profile, specify the maximum number of instances you want to run.",
              "default": 1,
              "minimum": 1,
              "maximum": 20
            },
            "provisioningState": {
              "description": "The status of the last operation.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "Resource is getting provisioned."
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "Resource is Updating."
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "Resource is Deleting."
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "Resource has been Accepted."
                  }
                ]
              }
            },
            "healthState": {
              "type": "string",
              "description": "The health state of the resource.",
              "default": "Unknown",
              "enum": [
                "Available",
                "Degraded",
                "Unavailable",
                "Unknown"
              ],
              "x-ms-enum": {
                "name": "ResourceHealthState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Available",
                    "value": "Available",
                    "description": "Resource is Available and functioning as expected."
                  },
                  {
                    "name": "Degraded",
                    "value": "Degraded",
                    "description": "Resource health is degraded."
                  },
                  {
                    "name": "Unavailable",
                    "value": "Unavailable",
                    "description": "Resource is not functioning as expected."
                  },
                  {
                    "name": "Unknown",
                    "value": "Unknown",
                    "description": "Resource state is unknown."
                  }
                ]
              },
              "readOnly": true
            }
          }
        },
        "extendedLocation": {
          "description": "Edge location of the resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the extended location."
            },
            "type": {
              "description": "Type of ExtendedLocation.",
              "type": "string",
              "enum": [
                "CustomLocation"
              ],
              "x-ms-enum": {
                "name": "ExtendedLocationType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "CustomLocation",
                    "value": "CustomLocation",
                    "description": "CustomLocation type"
                  }
                ]
              }
            }
          },
          "required": [
            "name",
            "type"
          ]
        }
      }
    },
    "DataflowProfileResourceListResult": {
      "type": "object",
      "description": "The response of a DataflowProfileResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DataflowProfileResource items on this page",
          "items": {
            "type": "object",
            "description": "Instance dataflowProfile resource",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "diagnostics": {
                    "description": "Spec defines the desired identities of NBC diagnostics settings.",
                    "type": "object",
                    "properties": {
                      "logs": {
                        "description": "Diagnostic log settings for the resource.",
                        "type": "object",
                        "properties": {
                          "level": {
                            "type": "string",
                            "description": "The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.",
                            "default": "info"
                          }
                        }
                      },
                      "metrics": {
                        "description": "The metrics settings for the resource.",
                        "type": "object",
                        "properties": {
                          "prometheusPort": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The prometheus port to expose the metrics.",
                            "default": 9600,
                            "minimum": 0,
                            "maximum": 65535
                          }
                        }
                      }
                    }
                  },
                  "instanceCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "To manually scale the dataflow profile, specify the maximum number of instances you want to run.",
                    "default": 1,
                    "minimum": 1,
                    "maximum": 20
                  },
                  "provisioningState": {
                    "description": "The status of the last operation.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Provisioning",
                      "Updating",
                      "Deleting",
                      "Accepted"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Provisioning",
                          "value": "Provisioning",
                          "description": "Resource is getting provisioned."
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "Resource is Updating."
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "Resource is Deleting."
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "Resource has been Accepted."
                        }
                      ]
                    }
                  },
                  "healthState": {
                    "type": "string",
                    "description": "The health state of the resource.",
                    "default": "Unknown",
                    "enum": [
                      "Available",
                      "Degraded",
                      "Unavailable",
                      "Unknown"
                    ],
                    "x-ms-enum": {
                      "name": "ResourceHealthState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Available",
                          "value": "Available",
                          "description": "Resource is Available and functioning as expected."
                        },
                        {
                          "name": "Degraded",
                          "value": "Degraded",
                          "description": "Resource health is degraded."
                        },
                        {
                          "name": "Unavailable",
                          "value": "Unavailable",
                          "description": "Resource is not functioning as expected."
                        },
                        {
                          "name": "Unknown",
                          "value": "Unknown",
                          "description": "Resource state is unknown."
                        }
                      ]
                    },
                    "readOnly": true
                  }
                }
              },
              "extendedLocation": {
                "description": "Edge location of the resource.",
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the extended location."
                  },
                  "type": {
                    "description": "Type of ExtendedLocation.",
                    "type": "string",
                    "enum": [
                      "CustomLocation"
                    ],
                    "x-ms-enum": {
                      "name": "ExtendedLocationType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "CustomLocation",
                          "value": "CustomLocation",
                          "description": "CustomLocation type"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "name",
                  "type"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DataflowProperties": {
      "type": "object",
      "description": "Dataflow Resource properties",
      "properties": {
        "mode": {
          "type": "string",
          "description": "Mode for Dataflow. Optional; defaults to Enabled.",
          "default": "Enabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "OperationalMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "Enabled is equivalent to True"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "Disabled is equivalent to False."
              }
            ]
          }
        },
        "requestDiskPersistence": {
          "type": "string",
          "description": "Mode properties",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "OperationalMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "Enabled is equivalent to True"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "Disabled is equivalent to False."
              }
            ]
          }
        },
        "operations": {
          "type": "array",
          "description": "List of operations including source and destination references as well as transformation.",
          "items": {
            "type": "object",
            "description": "Dataflow Operation properties. NOTE - One only method is allowed to be used for one entry.",
            "properties": {
              "operationType": {
                "description": "Type of operation.",
                "type": "string",
                "enum": [
                  "Source",
                  "Destination",
                  "BuiltInTransformation"
                ],
                "x-ms-enum": {
                  "name": "OperationType",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Source",
                      "value": "Source",
                      "description": "Dataflow Source Operation"
                    },
                    {
                      "name": "Destination",
                      "value": "Destination",
                      "description": "Dataflow Destination Operation"
                    },
                    {
                      "name": "BuiltInTransformation",
                      "value": "BuiltInTransformation",
                      "description": "Dataflow BuiltIn Transformation Operation"
                    }
                  ]
                }
              },
              "name": {
                "type": "string",
                "description": "Optional user provided name of the transformation.",
                "maxLength": 64
              },
              "sourceSettings": {
                "description": "Source configuration.",
                "type": "object",
                "properties": {
                  "endpointRef": {
                    "type": "string",
                    "description": "Reference to the Dataflow Endpoint resource. Can only be of Broker and Kafka type."
                  },
                  "assetRef": {
                    "type": "string",
                    "description": "Reference to the resource in Azure Device Registry where the data in the endpoint originates from."
                  },
                  "serializationFormat": {
                    "type": "string",
                    "description": "Content is a JSON Schema. Allowed: JSON Schema/draft-7.",
                    "default": "Json",
                    "enum": [
                      "Json"
                    ],
                    "x-ms-enum": {
                      "name": "SourceSerializationFormat",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Json",
                          "value": "Json",
                          "description": "JSON Format"
                        }
                      ]
                    }
                  },
                  "schemaRef": {
                    "type": "string",
                    "description": "Schema CR reference. Data will be deserialized according to the schema, and dropped if it doesn't match."
                  },
                  "dataSources": {
                    "type": "array",
                    "description": "List of source locations. Can be Broker or Kafka topics. Supports wildcards # and +.",
                    "items": {
                      "type": "string",
                      "description": "A string with a minimum length of 1.",
                      "minLength": 1
                    }
                  }
                },
                "required": [
                  "endpointRef",
                  "dataSources"
                ]
              },
              "builtInTransformationSettings": {
                "description": "Built In Transformation configuration.",
                "type": "object",
                "properties": {
                  "serializationFormat": {
                    "type": "string",
                    "description": "Serialization format. Optional; defaults to JSON. Allowed value JSON Schema/draft-7, Parquet. Default: Json",
                    "default": "Json",
                    "enum": [
                      "Delta",
                      "Json",
                      "Parquet"
                    ],
                    "x-ms-enum": {
                      "name": "TransformationSerializationFormat",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Delta",
                          "value": "Delta",
                          "description": "Delta Format"
                        },
                        {
                          "name": "Json",
                          "value": "Json",
                          "description": "JSON Format"
                        },
                        {
                          "name": "Parquet",
                          "value": "Parquet",
                          "description": "Parquet Format"
                        }
                      ]
                    }
                  },
                  "schemaRef": {
                    "type": "string",
                    "description": "Reference to the schema that describes the output of the transformation."
                  },
                  "datasets": {
                    "type": "array",
                    "description": "Enrich data from Broker State Store. Dataset references a key in Broker State Store.",
                    "default": [],
                    "maxItems": 1,
                    "items": {
                      "type": "object",
                      "description": "Dataflow BuiltIn Transformation dataset properties",
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "The key of the dataset.",
                          "maxLength": 64
                        },
                        "description": {
                          "type": "string",
                          "description": "A user provided optional description of the dataset.",
                          "maxLength": 256
                        },
                        "schemaRef": {
                          "type": "string",
                          "description": "The reference to the schema that describes the dataset. Allowed: JSON Schema/draft-7."
                        },
                        "inputs": {
                          "type": "array",
                          "description": "List of fields for enriching from the Broker State Store.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "expression": {
                          "type": "string",
                          "description": "Condition to enrich data from Broker State Store. Example: $1 < 0 || $1 > $2 (Assuming inputs section $1 and $2 are provided)"
                        }
                      },
                      "required": [
                        "key",
                        "inputs"
                      ]
                    },
                    "x-ms-identifiers": []
                  },
                  "filter": {
                    "type": "array",
                    "description": "Filters input record or datapoints based on condition.",
                    "default": [],
                    "items": {
                      "type": "object",
                      "description": "Dataflow BuiltIn Transformation filter properties",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "The type of dataflow operation.",
                          "default": "Filter",
                          "enum": [
                            "Filter"
                          ],
                          "x-ms-enum": {
                            "name": "FilterType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Filter",
                                "value": "Filter",
                                "description": "Filter type"
                              }
                            ]
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "A user provided optional description of the filter.",
                          "maxLength": 256
                        },
                        "inputs": {
                          "type": "array",
                          "description": "List of fields for filtering in JSON path expression.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "expression": {
                          "type": "string",
                          "description": "Condition to filter data. Can reference input fields with {n} where n is the index of the input field starting from 1. Example: $1 < 0 || $1 > $2 (Assuming inputs section $1 and $2 are provided)"
                        }
                      },
                      "required": [
                        "inputs",
                        "expression"
                      ]
                    },
                    "x-ms-identifiers": []
                  },
                  "map": {
                    "type": "array",
                    "description": "Maps input to output message.",
                    "default": [],
                    "items": {
                      "type": "object",
                      "description": "Dataflow BuiltIn Transformation map properties",
                      "properties": {
                        "type": {
                          "description": "Type of transformation.",
                          "type": "string",
                          "enum": [
                            "NewProperties",
                            "Rename",
                            "Compute",
                            "PassThrough",
                            "BuiltInFunction"
                          ],
                          "x-ms-enum": {
                            "name": "DataflowMappingType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "NewProperties",
                                "value": "NewProperties",
                                "description": "New Properties type"
                              },
                              {
                                "name": "Rename",
                                "value": "Rename",
                                "description": "Rename type"
                              },
                              {
                                "name": "Compute",
                                "value": "Compute",
                                "description": "Compute type"
                              },
                              {
                                "name": "PassThrough",
                                "value": "PassThrough",
                                "description": "Pass-through type"
                              },
                              {
                                "name": "BuiltInFunction",
                                "value": "BuiltInFunction",
                                "description": "Built in function type"
                              }
                            ]
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "A user provided optional description of the mapping function.",
                          "maxLength": 256
                        },
                        "inputs": {
                          "type": "array",
                          "description": "List of fields for mapping in JSON path expression.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "expression": {
                          "type": "string",
                          "description": "Modify the inputs field(s) to the final output field. Example: $1 * 2.2 (Assuming inputs section $1 is provided)"
                        },
                        "output": {
                          "type": "string",
                          "description": "Where and how the input fields to be organized in the output record."
                        }
                      },
                      "required": [
                        "inputs",
                        "output"
                      ]
                    },
                    "x-ms-identifiers": []
                  }
                }
              },
              "destinationSettings": {
                "description": "Destination configuration.",
                "type": "object",
                "properties": {
                  "endpointRef": {
                    "type": "string",
                    "description": "Reference to the Endpoint CR. Can be of Broker, Kafka, Fabric, ADLS, ADX type."
                  },
                  "dataDestination": {
                    "type": "string",
                    "description": "A string with a minimum length of 1.",
                    "minLength": 1
                  },
                  "headers": {
                    "type": "array",
                    "description": "Headers for the output data.",
                    "items": {
                      "type": "object",
                      "description": "Dataflow Destination Header Action properties",
                      "properties": {
                        "actionType": {
                          "description": "The type of header operation to perform.",
                          "type": "string",
                          "enum": [
                            "AddIfNotPresent",
                            "Remove",
                            "AddOrReplace"
                          ],
                          "x-ms-enum": {
                            "name": "DataflowHeaderActionType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "AddIfNotPresent",
                                "value": "AddIfNotPresent",
                                "description": "Add if not present type"
                              },
                              {
                                "name": "Remove",
                                "value": "Remove",
                                "description": "Remove type"
                              },
                              {
                                "name": "AddOrReplace",
                                "value": "AddOrReplace",
                                "description": "Add or Replace type"
                              }
                            ]
                          }
                        }
                      },
                      "discriminator": "actionType",
                      "required": [
                        "actionType"
                      ]
                    },
                    "x-ms-identifiers": [
                      "actionType"
                    ]
                  }
                },
                "required": [
                  "endpointRef",
                  "dataDestination"
                ]
              }
            },
            "required": [
              "operationType"
            ]
          },
          "x-ms-identifiers": []
        },
        "provisioningState": {
          "description": "The status of the last operation.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Updating",
            "Deleting",
            "Accepted"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Provisioning",
                "value": "Provisioning",
                "description": "Resource is getting provisioned."
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "Resource is Updating."
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "Resource is Deleting."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "Resource has been Accepted."
              }
            ]
          }
        },
        "healthState": {
          "type": "string",
          "description": "The health state of the resource.",
          "default": "Unknown",
          "enum": [
            "Available",
            "Degraded",
            "Unavailable",
            "Unknown"
          ],
          "x-ms-enum": {
            "name": "ResourceHealthState",
            "modelAsString": true,
            "values": [
              {
                "name": "Available",
                "value": "Available",
                "description": "Resource is Available and functioning as expected."
              },
              {
                "name": "Degraded",
                "value": "Degraded",
                "description": "Resource health is degraded."
              },
              {
                "name": "Unavailable",
                "value": "Unavailable",
                "description": "Resource is not functioning as expected."
              },
              {
                "name": "Unknown",
                "value": "Unknown",
                "description": "Resource state is unknown."
              }
            ]
          },
          "readOnly": true
        }
      },
      "required": [
        "operations"
      ]
    },
    "DataflowResource": {
      "type": "object",
      "description": "Instance dataflowProfile dataflow resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "mode": {
              "type": "string",
              "description": "Mode for Dataflow. Optional; defaults to Enabled.",
              "default": "Enabled",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "OperationalMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled",
                    "description": "Enabled is equivalent to True"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "Disabled is equivalent to False."
                  }
                ]
              }
            },
            "requestDiskPersistence": {
              "type": "string",
              "description": "Mode properties",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "OperationalMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled",
                    "description": "Enabled is equivalent to True"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "Disabled is equivalent to False."
                  }
                ]
              }
            },
            "operations": {
              "type": "array",
              "description": "List of operations including source and destination references as well as transformation.",
              "items": {
                "type": "object",
                "description": "Dataflow Operation properties. NOTE - One only method is allowed to be used for one entry.",
                "properties": {
                  "operationType": {
                    "description": "Type of operation.",
                    "type": "string",
                    "enum": [
                      "Source",
                      "Destination",
                      "BuiltInTransformation"
                    ],
                    "x-ms-enum": {
                      "name": "OperationType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Source",
                          "value": "Source",
                          "description": "Dataflow Source Operation"
                        },
                        {
                          "name": "Destination",
                          "value": "Destination",
                          "description": "Dataflow Destination Operation"
                        },
                        {
                          "name": "BuiltInTransformation",
                          "value": "BuiltInTransformation",
                          "description": "Dataflow BuiltIn Transformation Operation"
                        }
                      ]
                    }
                  },
                  "name": {
                    "type": "string",
                    "description": "Optional user provided name of the transformation.",
                    "maxLength": 64
                  },
                  "sourceSettings": {
                    "description": "Source configuration.",
                    "type": "object",
                    "properties": {
                      "endpointRef": {
                        "type": "string",
                        "description": "Reference to the Dataflow Endpoint resource. Can only be of Broker and Kafka type."
                      },
                      "assetRef": {
                        "type": "string",
                        "description": "Reference to the resource in Azure Device Registry where the data in the endpoint originates from."
                      },
                      "serializationFormat": {
                        "type": "string",
                        "description": "Content is a JSON Schema. Allowed: JSON Schema/draft-7.",
                        "default": "Json",
                        "enum": [
                          "Json"
                        ],
                        "x-ms-enum": {
                          "name": "SourceSerializationFormat",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Json",
                              "value": "Json",
                              "description": "JSON Format"
                            }
                          ]
                        }
                      },
                      "schemaRef": {
                        "type": "string",
                        "description": "Schema CR reference. Data will be deserialized according to the schema, and dropped if it doesn't match."
                      },
                      "dataSources": {
                        "type": "array",
                        "description": "List of source locations. Can be Broker or Kafka topics. Supports wildcards # and +.",
                        "items": {
                          "type": "string",
                          "description": "A string with a minimum length of 1.",
                          "minLength": 1
                        }
                      }
                    },
                    "required": [
                      "endpointRef",
                      "dataSources"
                    ]
                  },
                  "builtInTransformationSettings": {
                    "description": "Built In Transformation configuration.",
                    "type": "object",
                    "properties": {
                      "serializationFormat": {
                        "type": "string",
                        "description": "Serialization format. Optional; defaults to JSON. Allowed value JSON Schema/draft-7, Parquet. Default: Json",
                        "default": "Json",
                        "enum": [
                          "Delta",
                          "Json",
                          "Parquet"
                        ],
                        "x-ms-enum": {
                          "name": "TransformationSerializationFormat",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Delta",
                              "value": "Delta",
                              "description": "Delta Format"
                            },
                            {
                              "name": "Json",
                              "value": "Json",
                              "description": "JSON Format"
                            },
                            {
                              "name": "Parquet",
                              "value": "Parquet",
                              "description": "Parquet Format"
                            }
                          ]
                        }
                      },
                      "schemaRef": {
                        "type": "string",
                        "description": "Reference to the schema that describes the output of the transformation."
                      },
                      "datasets": {
                        "type": "array",
                        "description": "Enrich data from Broker State Store. Dataset references a key in Broker State Store.",
                        "default": [],
                        "maxItems": 1,
                        "items": {
                          "type": "object",
                          "description": "Dataflow BuiltIn Transformation dataset properties",
                          "properties": {
                            "key": {
                              "type": "string",
                              "description": "The key of the dataset.",
                              "maxLength": 64
                            },
                            "description": {
                              "type": "string",
                              "description": "A user provided optional description of the dataset.",
                              "maxLength": 256
                            },
                            "schemaRef": {
                              "type": "string",
                              "description": "The reference to the schema that describes the dataset. Allowed: JSON Schema/draft-7."
                            },
                            "inputs": {
                              "type": "array",
                              "description": "List of fields for enriching from the Broker State Store.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "expression": {
                              "type": "string",
                              "description": "Condition to enrich data from Broker State Store. Example: $1 < 0 || $1 > $2 (Assuming inputs section $1 and $2 are provided)"
                            }
                          },
                          "required": [
                            "key",
                            "inputs"
                          ]
                        },
                        "x-ms-identifiers": []
                      },
                      "filter": {
                        "type": "array",
                        "description": "Filters input record or datapoints based on condition.",
                        "default": [],
                        "items": {
                          "type": "object",
                          "description": "Dataflow BuiltIn Transformation filter properties",
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "The type of dataflow operation.",
                              "default": "Filter",
                              "enum": [
                                "Filter"
                              ],
                              "x-ms-enum": {
                                "name": "FilterType",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Filter",
                                    "value": "Filter",
                                    "description": "Filter type"
                                  }
                                ]
                              }
                            },
                            "description": {
                              "type": "string",
                              "description": "A user provided optional description of the filter.",
                              "maxLength": 256
                            },
                            "inputs": {
                              "type": "array",
                              "description": "List of fields for filtering in JSON path expression.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "expression": {
                              "type": "string",
                              "description": "Condition to filter data. Can reference input fields with {n} where n is the index of the input field starting from 1. Example: $1 < 0 || $1 > $2 (Assuming inputs section $1 and $2 are provided)"
                            }
                          },
                          "required": [
                            "inputs",
                            "expression"
                          ]
                        },
                        "x-ms-identifiers": []
                      },
                      "map": {
                        "type": "array",
                        "description": "Maps input to output message.",
                        "default": [],
                        "items": {
                          "type": "object",
                          "description": "Dataflow BuiltIn Transformation map properties",
                          "properties": {
                            "type": {
                              "description": "Type of transformation.",
                              "type": "string",
                              "enum": [
                                "NewProperties",
                                "Rename",
                                "Compute",
                                "PassThrough",
                                "BuiltInFunction"
                              ],
                              "x-ms-enum": {
                                "name": "DataflowMappingType",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "NewProperties",
                                    "value": "NewProperties",
                                    "description": "New Properties type"
                                  },
                                  {
                                    "name": "Rename",
                                    "value": "Rename",
                                    "description": "Rename type"
                                  },
                                  {
                                    "name": "Compute",
                                    "value": "Compute",
                                    "description": "Compute type"
                                  },
                                  {
                                    "name": "PassThrough",
                                    "value": "PassThrough",
                                    "description": "Pass-through type"
                                  },
                                  {
                                    "name": "BuiltInFunction",
                                    "value": "BuiltInFunction",
                                    "description": "Built in function type"
                                  }
                                ]
                              }
                            },
                            "description": {
                              "type": "string",
                              "description": "A user provided optional description of the mapping function.",
                              "maxLength": 256
                            },
                            "inputs": {
                              "type": "array",
                              "description": "List of fields for mapping in JSON path expression.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "expression": {
                              "type": "string",
                              "description": "Modify the inputs field(s) to the final output field. Example: $1 * 2.2 (Assuming inputs section $1 is provided)"
                            },
                            "output": {
                              "type": "string",
                              "description": "Where and how the input fields to be organized in the output record."
                            }
                          },
                          "required": [
                            "inputs",
                            "output"
                          ]
                        },
                        "x-ms-identifiers": []
                      }
                    }
                  },
                  "destinationSettings": {
                    "description": "Destination configuration.",
                    "type": "object",
                    "properties": {
                      "endpointRef": {
                        "type": "string",
                        "description": "Reference to the Endpoint CR. Can be of Broker, Kafka, Fabric, ADLS, ADX type."
                      },
                      "dataDestination": {
                        "type": "string",
                        "description": "A string with a minimum length of 1.",
                        "minLength": 1
                      },
                      "headers": {
                        "type": "array",
                        "description": "Headers for the output data.",
                        "items": {
                          "type": "object",
                          "description": "Dataflow Destination Header Action properties",
                          "properties": {
                            "actionType": {
                              "description": "The type of header operation to perform.",
                              "type": "string",
                              "enum": [
                                "AddIfNotPresent",
                                "Remove",
                                "AddOrReplace"
                              ],
                              "x-ms-enum": {
                                "name": "DataflowHeaderActionType",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "AddIfNotPresent",
                                    "value": "AddIfNotPresent",
                                    "description": "Add if not present type"
                                  },
                                  {
                                    "name": "Remove",
                                    "value": "Remove",
                                    "description": "Remove type"
                                  },
                                  {
                                    "name": "AddOrReplace",
                                    "value": "AddOrReplace",
                                    "description": "Add or Replace type"
                                  }
                                ]
                              }
                            }
                          },
                          "discriminator": "actionType",
                          "required": [
                            "actionType"
                          ]
                        },
                        "x-ms-identifiers": [
                          "actionType"
                        ]
                      }
                    },
                    "required": [
                      "endpointRef",
                      "dataDestination"
                    ]
                  }
                },
                "required": [
                  "operationType"
                ]
              },
              "x-ms-identifiers": []
            },
            "provisioningState": {
              "description": "The status of the last operation.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "Resource is getting provisioned."
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "Resource is Updating."
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "Resource is Deleting."
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "Resource has been Accepted."
                  }
                ]
              }
            },
            "healthState": {
              "type": "string",
              "description": "The health state of the resource.",
              "default": "Unknown",
              "enum": [
                "Available",
                "Degraded",
                "Unavailable",
                "Unknown"
              ],
              "x-ms-enum": {
                "name": "ResourceHealthState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Available",
                    "value": "Available",
                    "description": "Resource is Available and functioning as expected."
                  },
                  {
                    "name": "Degraded",
                    "value": "Degraded",
                    "description": "Resource health is degraded."
                  },
                  {
                    "name": "Unavailable",
                    "value": "Unavailable",
                    "description": "Resource is not functioning as expected."
                  },
                  {
                    "name": "Unknown",
                    "value": "Unknown",
                    "description": "Resource state is unknown."
                  }
                ]
              },
              "readOnly": true
            }
          },
          "required": [
            "operations"
          ]
        },
        "extendedLocation": {
          "description": "Edge location of the resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the extended location."
            },
            "type": {
              "description": "Type of ExtendedLocation.",
              "type": "string",
              "enum": [
                "CustomLocation"
              ],
              "x-ms-enum": {
                "name": "ExtendedLocationType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "CustomLocation",
                    "value": "CustomLocation",
                    "description": "CustomLocation type"
                  }
                ]
              }
            }
          },
          "required": [
            "name",
            "type"
          ]
        }
      }
    },
    "DataflowResourceListResult": {
      "type": "object",
      "description": "The response of a DataflowResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DataflowResource items on this page",
          "items": {
            "type": "object",
            "description": "Instance dataflowProfile dataflow resource",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "mode": {
                    "type": "string",
                    "description": "Mode for Dataflow. Optional; defaults to Enabled.",
                    "default": "Enabled",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "name": "OperationalMode",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Enabled",
                          "value": "Enabled",
                          "description": "Enabled is equivalent to True"
                        },
                        {
                          "name": "Disabled",
                          "value": "Disabled",
                          "description": "Disabled is equivalent to False."
                        }
                      ]
                    }
                  },
                  "requestDiskPersistence": {
                    "type": "string",
                    "description": "Mode properties",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "name": "OperationalMode",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Enabled",
                          "value": "Enabled",
                          "description": "Enabled is equivalent to True"
                        },
                        {
                          "name": "Disabled",
                          "value": "Disabled",
                          "description": "Disabled is equivalent to False."
                        }
                      ]
                    }
                  },
                  "operations": {
                    "type": "array",
                    "description": "List of operations including source and destination references as well as transformation.",
                    "items": {
                      "type": "object",
                      "description": "Dataflow Operation properties. NOTE - One only method is allowed to be used for one entry.",
                      "properties": {
                        "operationType": {
                          "description": "Type of operation.",
                          "type": "string",
                          "enum": [
                            "Source",
                            "Destination",
                            "BuiltInTransformation"
                          ],
                          "x-ms-enum": {
                            "name": "OperationType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Source",
                                "value": "Source",
                                "description": "Dataflow Source Operation"
                              },
                              {
                                "name": "Destination",
                                "value": "Destination",
                                "description": "Dataflow Destination Operation"
                              },
                              {
                                "name": "BuiltInTransformation",
                                "value": "BuiltInTransformation",
                                "description": "Dataflow BuiltIn Transformation Operation"
                              }
                            ]
                          }
                        },
                        "name": {
                          "type": "string",
                          "description": "Optional user provided name of the transformation.",
                          "maxLength": 64
                        },
                        "sourceSettings": {
                          "description": "Source configuration.",
                          "type": "object",
                          "properties": {
                            "endpointRef": {
                              "type": "string",
                              "description": "Reference to the Dataflow Endpoint resource. Can only be of Broker and Kafka type."
                            },
                            "assetRef": {
                              "type": "string",
                              "description": "Reference to the resource in Azure Device Registry where the data in the endpoint originates from."
                            },
                            "serializationFormat": {
                              "type": "string",
                              "description": "Content is a JSON Schema. Allowed: JSON Schema/draft-7.",
                              "default": "Json",
                              "enum": [
                                "Json"
                              ],
                              "x-ms-enum": {
                                "name": "SourceSerializationFormat",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Json",
                                    "value": "Json",
                                    "description": "JSON Format"
                                  }
                                ]
                              }
                            },
                            "schemaRef": {
                              "type": "string",
                              "description": "Schema CR reference. Data will be deserialized according to the schema, and dropped if it doesn't match."
                            },
                            "dataSources": {
                              "type": "array",
                              "description": "List of source locations. Can be Broker or Kafka topics. Supports wildcards # and +.",
                              "items": {
                                "type": "string",
                                "description": "A string with a minimum length of 1.",
                                "minLength": 1
                              }
                            }
                          },
                          "required": [
                            "endpointRef",
                            "dataSources"
                          ]
                        },
                        "builtInTransformationSettings": {
                          "description": "Built In Transformation configuration.",
                          "type": "object",
                          "properties": {
                            "serializationFormat": {
                              "type": "string",
                              "description": "Serialization format. Optional; defaults to JSON. Allowed value JSON Schema/draft-7, Parquet. Default: Json",
                              "default": "Json",
                              "enum": [
                                "Delta",
                                "Json",
                                "Parquet"
                              ],
                              "x-ms-enum": {
                                "name": "TransformationSerializationFormat",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Delta",
                                    "value": "Delta",
                                    "description": "Delta Format"
                                  },
                                  {
                                    "name": "Json",
                                    "value": "Json",
                                    "description": "JSON Format"
                                  },
                                  {
                                    "name": "Parquet",
                                    "value": "Parquet",
                                    "description": "Parquet Format"
                                  }
                                ]
                              }
                            },
                            "schemaRef": {
                              "type": "string",
                              "description": "Reference to the schema that describes the output of the transformation."
                            },
                            "datasets": {
                              "type": "array",
                              "description": "Enrich data from Broker State Store. Dataset references a key in Broker State Store.",
                              "default": [],
                              "maxItems": 1,
                              "items": {
                                "type": "object",
                                "description": "Dataflow BuiltIn Transformation dataset properties",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "The key of the dataset.",
                                    "maxLength": 64
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "A user provided optional description of the dataset.",
                                    "maxLength": 256
                                  },
                                  "schemaRef": {
                                    "type": "string",
                                    "description": "The reference to the schema that describes the dataset. Allowed: JSON Schema/draft-7."
                                  },
                                  "inputs": {
                                    "type": "array",
                                    "description": "List of fields for enriching from the Broker State Store.",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "expression": {
                                    "type": "string",
                                    "description": "Condition to enrich data from Broker State Store. Example: $1 < 0 || $1 > $2 (Assuming inputs section $1 and $2 are provided)"
                                  }
                                },
                                "required": [
                                  "key",
                                  "inputs"
                                ]
                              },
                              "x-ms-identifiers": []
                            },
                            "filter": {
                              "type": "array",
                              "description": "Filters input record or datapoints based on condition.",
                              "default": [],
                              "items": {
                                "type": "object",
                                "description": "Dataflow BuiltIn Transformation filter properties",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "description": "The type of dataflow operation.",
                                    "default": "Filter",
                                    "enum": [
                                      "Filter"
                                    ],
                                    "x-ms-enum": {
                                      "name": "FilterType",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Filter",
                                          "value": "Filter",
                                          "description": "Filter type"
                                        }
                                      ]
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "A user provided optional description of the filter.",
                                    "maxLength": 256
                                  },
                                  "inputs": {
                                    "type": "array",
                                    "description": "List of fields for filtering in JSON path expression.",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "expression": {
                                    "type": "string",
                                    "description": "Condition to filter data. Can reference input fields with {n} where n is the index of the input field starting from 1. Example: $1 < 0 || $1 > $2 (Assuming inputs section $1 and $2 are provided)"
                                  }
                                },
                                "required": [
                                  "inputs",
                                  "expression"
                                ]
                              },
                              "x-ms-identifiers": []
                            },
                            "map": {
                              "type": "array",
                              "description": "Maps input to output message.",
                              "default": [],
                              "items": {
                                "type": "object",
                                "description": "Dataflow BuiltIn Transformation map properties",
                                "properties": {
                                  "type": {
                                    "description": "Type of transformation.",
                                    "type": "string",
                                    "enum": [
                                      "NewProperties",
                                      "Rename",
                                      "Compute",
                                      "PassThrough",
                                      "BuiltInFunction"
                                    ],
                                    "x-ms-enum": {
                                      "name": "DataflowMappingType",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "NewProperties",
                                          "value": "NewProperties",
                                          "description": "New Properties type"
                                        },
                                        {
                                          "name": "Rename",
                                          "value": "Rename",
                                          "description": "Rename type"
                                        },
                                        {
                                          "name": "Compute",
                                          "value": "Compute",
                                          "description": "Compute type"
                                        },
                                        {
                                          "name": "PassThrough",
                                          "value": "PassThrough",
                                          "description": "Pass-through type"
                                        },
                                        {
                                          "name": "BuiltInFunction",
                                          "value": "BuiltInFunction",
                                          "description": "Built in function type"
                                        }
                                      ]
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "A user provided optional description of the mapping function.",
                                    "maxLength": 256
                                  },
                                  "inputs": {
                                    "type": "array",
                                    "description": "List of fields for mapping in JSON path expression.",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "expression": {
                                    "type": "string",
                                    "description": "Modify the inputs field(s) to the final output field. Example: $1 * 2.2 (Assuming inputs section $1 is provided)"
                                  },
                                  "output": {
                                    "type": "string",
                                    "description": "Where and how the input fields to be organized in the output record."
                                  }
                                },
                                "required": [
                                  "inputs",
                                  "output"
                                ]
                              },
                              "x-ms-identifiers": []
                            }
                          }
                        },
                        "destinationSettings": {
                          "description": "Destination configuration.",
                          "type": "object",
                          "properties": {
                            "endpointRef": {
                              "type": "string",
                              "description": "Reference to the Endpoint CR. Can be of Broker, Kafka, Fabric, ADLS, ADX type."
                            },
                            "dataDestination": {
                              "type": "string",
                              "description": "A string with a minimum length of 1.",
                              "minLength": 1
                            },
                            "headers": {
                              "type": "array",
                              "description": "Headers for the output data.",
                              "items": {
                                "type": "object",
                                "description": "Dataflow Destination Header Action properties",
                                "properties": {
                                  "actionType": {
                                    "description": "The type of header operation to perform.",
                                    "type": "string",
                                    "enum": [
                                      "AddIfNotPresent",
                                      "Remove",
                                      "AddOrReplace"
                                    ],
                                    "x-ms-enum": {
                                      "name": "DataflowHeaderActionType",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "AddIfNotPresent",
                                          "value": "AddIfNotPresent",
                                          "description": "Add if not present type"
                                        },
                                        {
                                          "name": "Remove",
                                          "value": "Remove",
                                          "description": "Remove type"
                                        },
                                        {
                                          "name": "AddOrReplace",
                                          "value": "AddOrReplace",
                                          "description": "Add or Replace type"
                                        }
                                      ]
                                    }
                                  }
                                },
                                "discriminator": "actionType",
                                "required": [
                                  "actionType"
                                ]
                              },
                              "x-ms-identifiers": [
                                "actionType"
                              ]
                            }
                          },
                          "required": [
                            "endpointRef",
                            "dataDestination"
                          ]
                        }
                      },
                      "required": [
                        "operationType"
                      ]
                    },
                    "x-ms-identifiers": []
                  },
                  "provisioningState": {
                    "description": "The status of the last operation.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Provisioning",
                      "Updating",
                      "Deleting",
                      "Accepted"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Provisioning",
                          "value": "Provisioning",
                          "description": "Resource is getting provisioned."
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "Resource is Updating."
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "Resource is Deleting."
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "Resource has been Accepted."
                        }
                      ]
                    }
                  },
                  "healthState": {
                    "type": "string",
                    "description": "The health state of the resource.",
                    "default": "Unknown",
                    "enum": [
                      "Available",
                      "Degraded",
                      "Unavailable",
                      "Unknown"
                    ],
                    "x-ms-enum": {
                      "name": "ResourceHealthState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Available",
                          "value": "Available",
                          "description": "Resource is Available and functioning as expected."
                        },
                        {
                          "name": "Degraded",
                          "value": "Degraded",
                          "description": "Resource health is degraded."
                        },
                        {
                          "name": "Unavailable",
                          "value": "Unavailable",
                          "description": "Resource is not functioning as expected."
                        },
                        {
                          "name": "Unknown",
                          "value": "Unknown",
                          "description": "Resource state is unknown."
                        }
                      ]
                    },
                    "readOnly": true
                  }
                },
                "required": [
                  "operations"
                ]
              },
              "extendedLocation": {
                "description": "Edge location of the resource.",
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the extended location."
                  },
                  "type": {
                    "description": "Type of ExtendedLocation.",
                    "type": "string",
                    "enum": [
                      "CustomLocation"
                    ],
                    "x-ms-enum": {
                      "name": "ExtendedLocationType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "CustomLocation",
                          "value": "CustomLocation",
                          "description": "CustomLocation type"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "name",
                  "type"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DataflowSourceOperationSettings": {
      "type": "object",
      "description": "Dataflow Source Operation properties",
      "properties": {
        "endpointRef": {
          "type": "string",
          "description": "Reference to the Dataflow Endpoint resource. Can only be of Broker and Kafka type."
        },
        "assetRef": {
          "type": "string",
          "description": "Reference to the resource in Azure Device Registry where the data in the endpoint originates from."
        },
        "serializationFormat": {
          "type": "string",
          "description": "Content is a JSON Schema. Allowed: JSON Schema/draft-7.",
          "default": "Json",
          "enum": [
            "Json"
          ],
          "x-ms-enum": {
            "name": "SourceSerializationFormat",
            "modelAsString": true,
            "values": [
              {
                "name": "Json",
                "value": "Json",
                "description": "JSON Format"
              }
            ]
          }
        },
        "schemaRef": {
          "type": "string",
          "description": "Schema CR reference. Data will be deserialized according to the schema, and dropped if it doesn't match."
        },
        "dataSources": {
          "type": "array",
          "description": "List of source locations. Can be Broker or Kafka topics. Supports wildcards # and +.",
          "items": {
            "type": "string",
            "description": "A string with a minimum length of 1.",
            "minLength": 1
          }
        }
      },
      "required": [
        "endpointRef",
        "dataSources"
      ]
    },
    "DiagnosticsLogs": {
      "type": "object",
      "description": "Diagnostic Log properties",
      "properties": {
        "level": {
          "type": "string",
          "description": "The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.",
          "default": "info"
        }
      }
    },
    "DiskBackedMessageBuffer": {
      "type": "object",
      "description": "DiskBackedMessageBuffer properties",
      "properties": {
        "maxSize": {
          "type": "string",
          "description": "The max size of the message buffer on disk. If a PVC template is specified using one of ephemeralVolumeClaimSpec or persistentVolumeClaimSpec, then this size is used as the request and limit sizes of that template. If neither ephemeralVolumeClaimSpec nor persistentVolumeClaimSpec are specified, then an emptyDir volume is mounted with this size as its limit. See <https://kubernetes.io/docs/concepts/storage/volumes/#emptydir> for details.",
          "pattern": "^[0-9]+[KMGTPE]$"
        },
        "ephemeralVolumeClaimSpec": {
          "description": "Use the specified persistent volume claim template to mount a \"generic ephemeral volume\" for the message buffer. See <https://kubernetes.io/docs/concepts/storage/ephemeral-volumes/#generic-ephemeral-volumes> for details.",
          "type": "object",
          "properties": {
            "volumeName": {
              "type": "string",
              "description": "VolumeName is the binding reference to the PersistentVolume backing this claim."
            },
            "volumeMode": {
              "type": "string",
              "description": "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature."
            },
            "storageClassName": {
              "type": "string",
              "description": "Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"
            },
            "accessModes": {
              "type": "array",
              "description": "AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
              "items": {
                "type": "string"
              }
            },
            "dataSource": {
              "description": "This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.",
              "type": "object",
              "properties": {
                "apiGroup": {
                  "type": "string",
                  "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                },
                "kind": {
                  "type": "string",
                  "description": "Kind is the type of resource being referenced"
                },
                "name": {
                  "type": "string",
                  "description": "Name is the name of resource being referenced"
                }
              },
              "required": [
                "kind",
                "name"
              ]
            },
            "dataSourceRef": {
              "description": "Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.",
              "type": "object",
              "properties": {
                "apiGroup": {
                  "type": "string",
                  "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                },
                "kind": {
                  "type": "string",
                  "description": "Kind is the type of resource being referenced"
                },
                "name": {
                  "type": "string",
                  "description": "Name is the name of resource being referenced"
                },
                "namespace": {
                  "type": "string",
                  "description": "Namespace is the namespace of the resource being referenced. This field is required when the resource has a namespace."
                }
              },
              "required": [
                "kind",
                "name"
              ]
            },
            "resources": {
              "description": "Resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
              "type": "object",
              "properties": {
                "limits": {
                  "type": "object",
                  "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "requests": {
                  "type": "object",
                  "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "claims": {
                  "type": "array",
                  "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.\n\nThis is an alpha field and requires enabling the DynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                  "items": {
                    "type": "object",
                    "description": "VolumeClaimResourceRequirementsClaims properties.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the resource. This must match the name of a resource in spec.resourceClaims."
                      }
                    },
                    "required": [
                      "name"
                    ]
                  },
                  "x-ms-identifiers": []
                }
              }
            },
            "selector": {
              "description": "A label query over volumes to consider for binding.",
              "type": "object",
              "properties": {
                "matchExpressions": {
                  "type": "array",
                  "description": "MatchExpressions is a list of label selector requirements. The requirements are ANDed.",
                  "items": {
                    "type": "object",
                    "description": "VolumeClaimSpecSelectorMatchExpressions properties",
                    "properties": {
                      "key": {
                        "type": "string",
                        "description": "key is the label key that the selector applies to."
                      },
                      "operator": {
                        "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                        "type": "string",
                        "enum": [
                          "In",
                          "NotIn",
                          "Exists",
                          "DoesNotExist"
                        ],
                        "x-ms-enum": {
                          "name": "OperatorValues",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "In",
                              "value": "In",
                              "description": "In operator."
                            },
                            {
                              "name": "NotIn",
                              "value": "NotIn",
                              "description": "NotIn operator."
                            },
                            {
                              "name": "Exists",
                              "value": "Exists",
                              "description": "Exists operator."
                            },
                            {
                              "name": "DoesNotExist",
                              "value": "DoesNotExist",
                              "description": "DoesNotExist operator."
                            }
                          ]
                        }
                      },
                      "values": {
                        "type": "array",
                        "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "key",
                      "operator"
                    ]
                  },
                  "x-ms-identifiers": []
                },
                "matchLabels": {
                  "type": "object",
                  "description": "MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "persistentVolumeClaimSpec": {
          "description": "Use the specified persistent volume claim template to mount a persistent volume for the message buffer.",
          "type": "object",
          "properties": {
            "volumeName": {
              "type": "string",
              "description": "VolumeName is the binding reference to the PersistentVolume backing this claim."
            },
            "volumeMode": {
              "type": "string",
              "description": "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature."
            },
            "storageClassName": {
              "type": "string",
              "description": "Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"
            },
            "accessModes": {
              "type": "array",
              "description": "AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
              "items": {
                "type": "string"
              }
            },
            "dataSource": {
              "description": "This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.",
              "type": "object",
              "properties": {
                "apiGroup": {
                  "type": "string",
                  "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                },
                "kind": {
                  "type": "string",
                  "description": "Kind is the type of resource being referenced"
                },
                "name": {
                  "type": "string",
                  "description": "Name is the name of resource being referenced"
                }
              },
              "required": [
                "kind",
                "name"
              ]
            },
            "dataSourceRef": {
              "description": "Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.",
              "type": "object",
              "properties": {
                "apiGroup": {
                  "type": "string",
                  "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
                },
                "kind": {
                  "type": "string",
                  "description": "Kind is the type of resource being referenced"
                },
                "name": {
                  "type": "string",
                  "description": "Name is the name of resource being referenced"
                },
                "namespace": {
                  "type": "string",
                  "description": "Namespace is the namespace of the resource being referenced. This field is required when the resource has a namespace."
                }
              },
              "required": [
                "kind",
                "name"
              ]
            },
            "resources": {
              "description": "Resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
              "type": "object",
              "properties": {
                "limits": {
                  "type": "object",
                  "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "requests": {
                  "type": "object",
                  "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "claims": {
                  "type": "array",
                  "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.\n\nThis is an alpha field and requires enabling the DynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                  "items": {
                    "type": "object",
                    "description": "VolumeClaimResourceRequirementsClaims properties.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the resource. This must match the name of a resource in spec.resourceClaims."
                      }
                    },
                    "required": [
                      "name"
                    ]
                  },
                  "x-ms-identifiers": []
                }
              }
            },
            "selector": {
              "description": "A label query over volumes to consider for binding.",
              "type": "object",
              "properties": {
                "matchExpressions": {
                  "type": "array",
                  "description": "MatchExpressions is a list of label selector requirements. The requirements are ANDed.",
                  "items": {
                    "type": "object",
                    "description": "VolumeClaimSpecSelectorMatchExpressions properties",
                    "properties": {
                      "key": {
                        "type": "string",
                        "description": "key is the label key that the selector applies to."
                      },
                      "operator": {
                        "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                        "type": "string",
                        "enum": [
                          "In",
                          "NotIn",
                          "Exists",
                          "DoesNotExist"
                        ],
                        "x-ms-enum": {
                          "name": "OperatorValues",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "In",
                              "value": "In",
                              "description": "In operator."
                            },
                            {
                              "name": "NotIn",
                              "value": "NotIn",
                              "description": "NotIn operator."
                            },
                            {
                              "name": "Exists",
                              "value": "Exists",
                              "description": "Exists operator."
                            },
                            {
                              "name": "DoesNotExist",
                              "value": "DoesNotExist",
                              "description": "DoesNotExist operator."
                            }
                          ]
                        }
                      },
                      "values": {
                        "type": "array",
                        "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "key",
                      "operator"
                    ]
                  },
                  "x-ms-identifiers": []
                },
                "matchLabels": {
                  "type": "object",
                  "description": "MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "required": [
        "maxSize"
      ]
    },
    "EndpointType": {
      "type": "string",
      "description": "DataflowEndpoint Type properties",
      "enum": [
        "DataExplorer",
        "DataLakeStorage",
        "FabricOneLake",
        "Kafka",
        "LocalStorage",
        "Mqtt",
        "OpenTelemetry"
      ],
      "x-ms-enum": {
        "name": "EndpointType",
        "modelAsString": true,
        "values": [
          {
            "name": "DataExplorer",
            "value": "DataExplorer",
            "description": "Azure Data Explorer Type"
          },
          {
            "name": "DataLakeStorage",
            "value": "DataLakeStorage",
            "description": "Azure Data Lake Type"
          },
          {
            "name": "FabricOneLake",
            "value": "FabricOneLake",
            "description": "Microsoft Fabric Type"
          },
          {
            "name": "Kafka",
            "value": "Kafka",
            "description": "Kafka Type"
          },
          {
            "name": "LocalStorage",
            "value": "LocalStorage",
            "description": "Local Storage Type"
          },
          {
            "name": "Mqtt",
            "value": "Mqtt",
            "description": "Broker Type"
          },
          {
            "name": "OpenTelemetry",
            "value": "OpenTelemetry",
            "description": "OpenTelemetry Type"
          }
        ]
      }
    },
    "ExtendedLocation": {
      "type": "object",
      "description": "Extended location is an extension of Azure locations. They provide a way to use their Azure ARC enabled Kubernetes clusters as target locations for deploying Azure services instances.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the extended location."
        },
        "type": {
          "description": "Type of ExtendedLocation.",
          "type": "string",
          "enum": [
            "CustomLocation"
          ],
          "x-ms-enum": {
            "name": "ExtendedLocationType",
            "modelAsString": true,
            "values": [
              {
                "name": "CustomLocation",
                "value": "CustomLocation",
                "description": "CustomLocation type"
              }
            ]
          }
        }
      },
      "required": [
        "name",
        "type"
      ]
    },
    "ExtendedLocationType": {
      "type": "string",
      "description": "The enum defining type of ExtendedLocation accepted.",
      "enum": [
        "CustomLocation"
      ],
      "x-ms-enum": {
        "name": "ExtendedLocationType",
        "modelAsString": true,
        "values": [
          {
            "name": "CustomLocation",
            "value": "CustomLocation",
            "description": "CustomLocation type"
          }
        ]
      }
    },
    "FabricOneLakeAuthMethod": {
      "x-nullable": false,
      "type": "string",
      "description": "Managed Identity Method",
      "enum": [
        "SystemAssignedManagedIdentity",
        "UserAssignedManagedIdentity"
      ],
      "x-ms-enum": {
        "name": "ManagedIdentityMethod",
        "modelAsString": true,
        "values": [
          {
            "name": "SystemAssignedManagedIdentity",
            "value": "SystemAssignedManagedIdentity",
            "description": "SystemAssignedManagedIdentity type"
          },
          {
            "name": "UserAssignedManagedIdentity",
            "value": "UserAssignedManagedIdentity",
            "description": "UserAssignedManagedIdentity type"
          }
        ]
      }
    },
    "FilterType": {
      "type": "string",
      "description": "Filter Type properties",
      "enum": [
        "Filter"
      ],
      "x-ms-enum": {
        "name": "FilterType",
        "modelAsString": true,
        "values": [
          {
            "name": "Filter",
            "value": "Filter",
            "description": "Filter type"
          }
        ]
      }
    },
    "Frontend": {
      "type": "object",
      "description": "The desired properties of the frontend instances of the Broker",
      "properties": {
        "replicas": {
          "type": "integer",
          "format": "int32",
          "description": "The desired number of frontend instances (pods).",
          "minimum": 1,
          "maximum": 16
        },
        "workers": {
          "type": "integer",
          "format": "int32",
          "description": "Number of logical frontend workers per instance (pod).",
          "default": 2,
          "minimum": 1,
          "maximum": 16
        }
      },
      "required": [
        "replicas"
      ]
    },
    "GenerateResourceLimits": {
      "type": "object",
      "description": "GenerateResourceLimits properties",
      "properties": {
        "cpu": {
          "type": "string",
          "description": "The toggle to enable/disable cpu resource limits.",
          "default": "Enabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "OperationalMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "Enabled is equivalent to True"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "Disabled is equivalent to False."
              }
            ]
          }
        }
      }
    },
    "InstanceFeature": {
      "type": "object",
      "description": "The features of the AIO Instance.",
      "properties": {
        "mode": {
          "description": "The state of the feature.",
          "type": "string",
          "enum": [
            "Stable",
            "Preview",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "InstanceFeatureMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Stable",
                "value": "Stable",
                "description": "Opt in to enable a stable feature"
              },
              {
                "name": "Preview",
                "value": "Preview",
                "description": "Opt in to enable a preview feature"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "Opt out of a feature"
              }
            ]
          }
        },
        "settings": {
          "type": "object",
          "description": "The settings of the feature.",
          "additionalProperties": {
            "type": "string",
            "description": "Mode properties",
            "enum": [
              "Enabled",
              "Disabled"
            ],
            "x-ms-enum": {
              "name": "OperationalMode",
              "modelAsString": true,
              "values": [
                {
                  "name": "Enabled",
                  "value": "Enabled",
                  "description": "Enabled is equivalent to True"
                },
                {
                  "name": "Disabled",
                  "value": "Disabled",
                  "description": "Disabled is equivalent to False."
                }
              ]
            }
          }
        }
      }
    },
    "InstanceFeatureMode": {
      "type": "string",
      "description": "The enum defining mode of a feature.",
      "enum": [
        "Stable",
        "Preview",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "InstanceFeatureMode",
        "modelAsString": true,
        "values": [
          {
            "name": "Stable",
            "value": "Stable",
            "description": "Opt in to enable a stable feature"
          },
          {
            "name": "Preview",
            "value": "Preview",
            "description": "Opt in to enable a preview feature"
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "Opt out of a feature"
          }
        ]
      }
    },
    "InstancePatchModel": {
      "type": "object",
      "description": "The Instance update model.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "identity": {
          "description": "The managed service identities assigned to this resource.",
          "type": "object",
          "properties": {
            "principalId": {
              "type": "string",
              "format": "uuid",
              "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "format": "uuid",
              "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "x-ms-enum": {
                "name": "ManagedServiceIdentityType",
                "modelAsString": true
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "title": "User-Assigned Identities",
              "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
              "additionalProperties": {
                "x-nullable": true,
                "type": "object",
                "description": "User assigned identity properties",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The principal ID of the assigned identity.",
                    "readOnly": true
                  },
                  "clientId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The client ID of the assigned identity.",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "required": [
            "type"
          ]
        }
      }
    },
    "InstanceProperties": {
      "type": "object",
      "description": "The properties of the Instance resource.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Detailed description of the Instance."
        },
        "provisioningState": {
          "description": "The status of the last operation.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Updating",
            "Deleting",
            "Accepted"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Provisioning",
                "value": "Provisioning",
                "description": "Resource is getting provisioned."
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "Resource is Updating."
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "Resource is Deleting."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "Resource has been Accepted."
              }
            ]
          }
        },
        "version": {
          "type": "string",
          "description": "The Azure IoT Operations version.",
          "readOnly": true
        },
        "schemaRegistryRef": {
          "description": "The reference to the Schema Registry for this AIO Instance.",
          "type": "object",
          "properties": {
            "resourceId": {
              "description": "The resource ID of the Schema Registry.",
              "type": "string",
              "format": "arm-id",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.DeviceRegistry/schemaRegistries"
                  }
                ]
              }
            }
          },
          "required": [
            "resourceId"
          ]
        },
        "defaultSecretProviderClassRef": {
          "description": "The reference to the AIO Secret provider class.",
          "type": "object",
          "properties": {
            "resourceId": {
              "description": "The resource ID of the AIO Secret provider class.",
              "type": "string",
              "format": "arm-id",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.SecretSyncController/azureKeyVaultSecretProviderClasses"
                  }
                ]
              }
            }
          },
          "required": [
            "resourceId"
          ]
        },
        "features": {
          "type": "object",
          "description": "The features of the AIO Instance.",
          "additionalProperties": {
            "type": "object",
            "description": "The features of the AIO Instance.",
            "properties": {
              "mode": {
                "description": "The state of the feature.",
                "type": "string",
                "enum": [
                  "Stable",
                  "Preview",
                  "Disabled"
                ],
                "x-ms-enum": {
                  "name": "InstanceFeatureMode",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Stable",
                      "value": "Stable",
                      "description": "Opt in to enable a stable feature"
                    },
                    {
                      "name": "Preview",
                      "value": "Preview",
                      "description": "Opt in to enable a preview feature"
                    },
                    {
                      "name": "Disabled",
                      "value": "Disabled",
                      "description": "Opt out of a feature"
                    }
                  ]
                }
              },
              "settings": {
                "type": "object",
                "description": "The settings of the feature.",
                "additionalProperties": {
                  "type": "string",
                  "description": "Mode properties",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "OperationalMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled",
                        "description": "Enabled is equivalent to True"
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled",
                        "description": "Disabled is equivalent to False."
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "adrNamespaceRef": {
          "description": "The Azure Device Registry Namespace used by Assets, Discovered Assets and devices",
          "type": "object",
          "properties": {
            "resourceId": {
              "description": "The resource ID of the Azure Device Registry Namespace.",
              "type": "string",
              "format": "arm-id",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.DeviceRegistry/namespaces"
                  }
                ]
              }
            }
          },
          "required": [
            "resourceId"
          ]
        },
        "healthState": {
          "type": "string",
          "description": "The health state of the resource.",
          "default": "Unknown",
          "enum": [
            "Available",
            "Degraded",
            "Unavailable",
            "Unknown"
          ],
          "x-ms-enum": {
            "name": "ResourceHealthState",
            "modelAsString": true,
            "values": [
              {
                "name": "Available",
                "value": "Available",
                "description": "Resource is Available and functioning as expected."
              },
              {
                "name": "Degraded",
                "value": "Degraded",
                "description": "Resource health is degraded."
              },
              {
                "name": "Unavailable",
                "value": "Unavailable",
                "description": "Resource is not functioning as expected."
              },
              {
                "name": "Unknown",
                "value": "Unknown",
                "description": "Resource state is unknown."
              }
            ]
          },
          "readOnly": true
        }
      },
      "required": [
        "schemaRegistryRef"
      ]
    },
    "InstanceResource": {
      "type": "object",
      "description": "A Instance resource is a logical container for a set of child resources.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "description": {
              "type": "string",
              "description": "Detailed description of the Instance."
            },
            "provisioningState": {
              "description": "The status of the last operation.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "Resource is getting provisioned."
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "Resource is Updating."
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "Resource is Deleting."
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "Resource has been Accepted."
                  }
                ]
              }
            },
            "version": {
              "type": "string",
              "description": "The Azure IoT Operations version.",
              "readOnly": true
            },
            "schemaRegistryRef": {
              "description": "The reference to the Schema Registry for this AIO Instance.",
              "type": "object",
              "properties": {
                "resourceId": {
                  "description": "The resource ID of the Schema Registry.",
                  "type": "string",
                  "format": "arm-id",
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "Microsoft.DeviceRegistry/schemaRegistries"
                      }
                    ]
                  }
                }
              },
              "required": [
                "resourceId"
              ]
            },
            "defaultSecretProviderClassRef": {
              "description": "The reference to the AIO Secret provider class.",
              "type": "object",
              "properties": {
                "resourceId": {
                  "description": "The resource ID of the AIO Secret provider class.",
                  "type": "string",
                  "format": "arm-id",
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "Microsoft.SecretSyncController/azureKeyVaultSecretProviderClasses"
                      }
                    ]
                  }
                }
              },
              "required": [
                "resourceId"
              ]
            },
            "features": {
              "type": "object",
              "description": "The features of the AIO Instance.",
              "additionalProperties": {
                "type": "object",
                "description": "The features of the AIO Instance.",
                "properties": {
                  "mode": {
                    "description": "The state of the feature.",
                    "type": "string",
                    "enum": [
                      "Stable",
                      "Preview",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "name": "InstanceFeatureMode",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Stable",
                          "value": "Stable",
                          "description": "Opt in to enable a stable feature"
                        },
                        {
                          "name": "Preview",
                          "value": "Preview",
                          "description": "Opt in to enable a preview feature"
                        },
                        {
                          "name": "Disabled",
                          "value": "Disabled",
                          "description": "Opt out of a feature"
                        }
                      ]
                    }
                  },
                  "settings": {
                    "type": "object",
                    "description": "The settings of the feature.",
                    "additionalProperties": {
                      "type": "string",
                      "description": "Mode properties",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "OperationalMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "Enabled is equivalent to True"
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "Disabled is equivalent to False."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "adrNamespaceRef": {
              "description": "The Azure Device Registry Namespace used by Assets, Discovered Assets and devices",
              "type": "object",
              "properties": {
                "resourceId": {
                  "description": "The resource ID of the Azure Device Registry Namespace.",
                  "type": "string",
                  "format": "arm-id",
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "Microsoft.DeviceRegistry/namespaces"
                      }
                    ]
                  }
                }
              },
              "required": [
                "resourceId"
              ]
            },
            "healthState": {
              "type": "string",
              "description": "The health state of the resource.",
              "default": "Unknown",
              "enum": [
                "Available",
                "Degraded",
                "Unavailable",
                "Unknown"
              ],
              "x-ms-enum": {
                "name": "ResourceHealthState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Available",
                    "value": "Available",
                    "description": "Resource is Available and functioning as expected."
                  },
                  {
                    "name": "Degraded",
                    "value": "Degraded",
                    "description": "Resource health is degraded."
                  },
                  {
                    "name": "Unavailable",
                    "value": "Unavailable",
                    "description": "Resource is not functioning as expected."
                  },
                  {
                    "name": "Unknown",
                    "value": "Unknown",
                    "description": "Resource state is unknown."
                  }
                ]
              },
              "readOnly": true
            }
          },
          "required": [
            "schemaRegistryRef"
          ]
        },
        "extendedLocation": {
          "description": "Edge location of the resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the extended location."
            },
            "type": {
              "description": "Type of ExtendedLocation.",
              "type": "string",
              "enum": [
                "CustomLocation"
              ],
              "x-ms-enum": {
                "name": "ExtendedLocationType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "CustomLocation",
                    "value": "CustomLocation",
                    "description": "CustomLocation type"
                  }
                ]
              }
            }
          },
          "required": [
            "name",
            "type"
          ]
        },
        "identity": {
          "description": "The managed service identities assigned to this resource.",
          "type": "object",
          "properties": {
            "principalId": {
              "type": "string",
              "format": "uuid",
              "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "format": "uuid",
              "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "x-ms-enum": {
                "name": "ManagedServiceIdentityType",
                "modelAsString": true
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "title": "User-Assigned Identities",
              "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
              "additionalProperties": {
                "x-nullable": true,
                "type": "object",
                "description": "User assigned identity properties",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The principal ID of the assigned identity.",
                    "readOnly": true
                  },
                  "clientId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The client ID of the assigned identity.",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "required": [
            "type"
          ]
        }
      },
      "required": [
        "extendedLocation"
      ]
    },
    "InstanceResourceListResult": {
      "type": "object",
      "description": "The response of a InstanceResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The InstanceResource items on this page",
          "items": {
            "type": "object",
            "description": "A Instance resource is a logical container for a set of child resources.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Detailed description of the Instance."
                  },
                  "provisioningState": {
                    "description": "The status of the last operation.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Provisioning",
                      "Updating",
                      "Deleting",
                      "Accepted"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Provisioning",
                          "value": "Provisioning",
                          "description": "Resource is getting provisioned."
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "Resource is Updating."
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "Resource is Deleting."
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "Resource has been Accepted."
                        }
                      ]
                    }
                  },
                  "version": {
                    "type": "string",
                    "description": "The Azure IoT Operations version.",
                    "readOnly": true
                  },
                  "schemaRegistryRef": {
                    "description": "The reference to the Schema Registry for this AIO Instance.",
                    "type": "object",
                    "properties": {
                      "resourceId": {
                        "description": "The resource ID of the Schema Registry.",
                        "type": "string",
                        "format": "arm-id",
                        "x-ms-arm-id-details": {
                          "allowedResources": [
                            {
                              "type": "Microsoft.DeviceRegistry/schemaRegistries"
                            }
                          ]
                        }
                      }
                    },
                    "required": [
                      "resourceId"
                    ]
                  },
                  "defaultSecretProviderClassRef": {
                    "description": "The reference to the AIO Secret provider class.",
                    "type": "object",
                    "properties": {
                      "resourceId": {
                        "description": "The resource ID of the AIO Secret provider class.",
                        "type": "string",
                        "format": "arm-id",
                        "x-ms-arm-id-details": {
                          "allowedResources": [
                            {
                              "type": "Microsoft.SecretSyncController/azureKeyVaultSecretProviderClasses"
                            }
                          ]
                        }
                      }
                    },
                    "required": [
                      "resourceId"
                    ]
                  },
                  "features": {
                    "type": "object",
                    "description": "The features of the AIO Instance.",
                    "additionalProperties": {
                      "type": "object",
                      "description": "The features of the AIO Instance.",
                      "properties": {
                        "mode": {
                          "description": "The state of the feature.",
                          "type": "string",
                          "enum": [
                            "Stable",
                            "Preview",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "InstanceFeatureMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Stable",
                                "value": "Stable",
                                "description": "Opt in to enable a stable feature"
                              },
                              {
                                "name": "Preview",
                                "value": "Preview",
                                "description": "Opt in to enable a preview feature"
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "Opt out of a feature"
                              }
                            ]
                          }
                        },
                        "settings": {
                          "type": "object",
                          "description": "The settings of the feature.",
                          "additionalProperties": {
                            "type": "string",
                            "description": "Mode properties",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "OperationalMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled",
                                  "description": "Enabled is equivalent to True"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled",
                                  "description": "Disabled is equivalent to False."
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  },
                  "adrNamespaceRef": {
                    "description": "The Azure Device Registry Namespace used by Assets, Discovered Assets and devices",
                    "type": "object",
                    "properties": {
                      "resourceId": {
                        "description": "The resource ID of the Azure Device Registry Namespace.",
                        "type": "string",
                        "format": "arm-id",
                        "x-ms-arm-id-details": {
                          "allowedResources": [
                            {
                              "type": "Microsoft.DeviceRegistry/namespaces"
                            }
                          ]
                        }
                      }
                    },
                    "required": [
                      "resourceId"
                    ]
                  },
                  "healthState": {
                    "type": "string",
                    "description": "The health state of the resource.",
                    "default": "Unknown",
                    "enum": [
                      "Available",
                      "Degraded",
                      "Unavailable",
                      "Unknown"
                    ],
                    "x-ms-enum": {
                      "name": "ResourceHealthState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Available",
                          "value": "Available",
                          "description": "Resource is Available and functioning as expected."
                        },
                        {
                          "name": "Degraded",
                          "value": "Degraded",
                          "description": "Resource health is degraded."
                        },
                        {
                          "name": "Unavailable",
                          "value": "Unavailable",
                          "description": "Resource is not functioning as expected."
                        },
                        {
                          "name": "Unknown",
                          "value": "Unknown",
                          "description": "Resource state is unknown."
                        }
                      ]
                    },
                    "readOnly": true
                  }
                },
                "required": [
                  "schemaRegistryRef"
                ]
              },
              "extendedLocation": {
                "description": "Edge location of the resource.",
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the extended location."
                  },
                  "type": {
                    "description": "Type of ExtendedLocation.",
                    "type": "string",
                    "enum": [
                      "CustomLocation"
                    ],
                    "x-ms-enum": {
                      "name": "ExtendedLocationType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "CustomLocation",
                          "value": "CustomLocation",
                          "description": "CustomLocation type"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "name",
                  "type"
                ]
              },
              "identity": {
                "description": "The managed service identities assigned to this resource.",
                "type": "object",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                    "readOnly": true
                  },
                  "tenantId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                    "readOnly": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                    "enum": [
                      "None",
                      "SystemAssigned",
                      "UserAssigned",
                      "SystemAssigned,UserAssigned"
                    ],
                    "x-ms-enum": {
                      "name": "ManagedServiceIdentityType",
                      "modelAsString": true
                    }
                  },
                  "userAssignedIdentities": {
                    "type": "object",
                    "title": "User-Assigned Identities",
                    "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                    "additionalProperties": {
                      "x-nullable": true,
                      "type": "object",
                      "description": "User assigned identity properties",
                      "properties": {
                        "principalId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The principal ID of the assigned identity.",
                          "readOnly": true
                        },
                        "clientId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The client ID of the assigned identity.",
                          "readOnly": true
                        }
                      }
                    }
                  }
                },
                "required": [
                  "type"
                ]
              }
            },
            "required": [
              "extendedLocation"
            ]
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "KafkaAuthMethod": {
      "type": "string",
      "description": "DataflowEndpoint Kafka Authentication Method properties",
      "enum": [
        "SystemAssignedManagedIdentity",
        "UserAssignedManagedIdentity",
        "Sasl",
        "X509Certificate",
        "Anonymous"
      ],
      "x-ms-enum": {
        "name": "KafkaAuthMethod",
        "modelAsString": true,
        "values": [
          {
            "name": "SystemAssignedManagedIdentity",
            "value": "SystemAssignedManagedIdentity",
            "description": "SystemAssignedManagedIdentity type"
          },
          {
            "name": "UserAssignedManagedIdentity",
            "value": "UserAssignedManagedIdentity",
            "description": "UserAssignedManagedIdentity type"
          },
          {
            "name": "Sasl",
            "value": "Sasl",
            "description": "Sasl Option"
          },
          {
            "name": "X509Certificate",
            "value": "X509Certificate",
            "description": "x509Certificate Option"
          },
          {
            "name": "Anonymous",
            "value": "Anonymous",
            "description": "Anonymous Option"
          }
        ]
      }
    },
    "KubernetesReference": {
      "type": "object",
      "description": "Kubernetes reference",
      "properties": {
        "apiGroup": {
          "type": "string",
          "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
        },
        "kind": {
          "type": "string",
          "description": "Kind is the type of resource being referenced"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of resource being referenced"
        },
        "namespace": {
          "type": "string",
          "description": "Namespace is the namespace of the resource being referenced. This field is required when the resource has a namespace."
        }
      },
      "required": [
        "kind",
        "name"
      ]
    },
    "ListenerPort": {
      "type": "object",
      "description": "Defines a TCP port on which a `BrokerListener` listens.",
      "properties": {
        "authenticationRef": {
          "type": "string",
          "description": "Reference to client authentication settings. Omit to disable authentication."
        },
        "authorizationRef": {
          "type": "string",
          "description": "Reference to client authorization settings. Omit to disable authorization."
        },
        "nodePort": {
          "type": "integer",
          "format": "int32",
          "description": "Kubernetes node port. Only relevant when this port is associated with a `NodePort` listener.",
          "minimum": 0,
          "maximum": 65535
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "TCP port for accepting client connections.",
          "minimum": 0,
          "maximum": 65535
        },
        "protocol": {
          "type": "string",
          "description": "Protocol to use for client connections.",
          "default": "Mqtt",
          "enum": [
            "Mqtt",
            "WebSockets"
          ],
          "x-ms-enum": {
            "name": "BrokerProtocolType",
            "modelAsString": true,
            "values": [
              {
                "name": "Mqtt",
                "value": "Mqtt",
                "description": "protocol broker"
              },
              {
                "name": "WebSockets",
                "value": "WebSockets",
                "description": "protocol websocket"
              }
            ]
          }
        },
        "tls": {
          "description": "TLS server certificate settings for this port. Omit to disable TLS.",
          "type": "object",
          "properties": {
            "mode": {
              "description": "Mode of TLS server certificate management.",
              "type": "string",
              "enum": [
                "Automatic",
                "Manual"
              ],
              "x-ms-enum": {
                "name": "TlsCertMethodMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Automatic",
                    "value": "Automatic",
                    "description": "Automatic TLS server certificate configuration."
                  },
                  {
                    "name": "Manual",
                    "value": "Manual",
                    "description": "Manual TLS server certificate configuration."
                  }
                ]
              }
            },
            "certManagerCertificateSpec": {
              "description": "Option 1 - Automatic TLS server certificate management with cert-manager.",
              "type": "object",
              "properties": {
                "duration": {
                  "type": "string",
                  "description": "Lifetime of certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."
                },
                "secretName": {
                  "type": "string",
                  "description": "Secret for storing server certificate. Any existing data will be overwritten. This is a reference to the secret through an identifying name, not the secret itself."
                },
                "renewBefore": {
                  "type": "string",
                  "description": "When to begin renewing certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."
                },
                "issuerRef": {
                  "description": "cert-manager issuerRef.",
                  "type": "object",
                  "properties": {
                    "group": {
                      "type": "string",
                      "description": "group of issuer.",
                      "default": "cert-manager.io"
                    },
                    "kind": {
                      "description": "kind of issuer (Issuer or ClusterIssuer).",
                      "type": "string",
                      "enum": [
                        "Issuer",
                        "ClusterIssuer"
                      ],
                      "x-ms-enum": {
                        "name": "CertManagerIssuerKind",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Issuer",
                            "value": "Issuer",
                            "description": "Issuer kind."
                          },
                          {
                            "name": "ClusterIssuer",
                            "value": "ClusterIssuer",
                            "description": "ClusterIssuer kind."
                          }
                        ]
                      }
                    },
                    "name": {
                      "type": "string",
                      "description": "name of issuer."
                    }
                  },
                  "required": [
                    "group",
                    "kind",
                    "name"
                  ]
                },
                "privateKey": {
                  "description": "Type of certificate private key.",
                  "type": "object",
                  "properties": {
                    "algorithm": {
                      "description": "algorithm for private key.",
                      "type": "string",
                      "enum": [
                        "Ec256",
                        "Ec384",
                        "Ec521",
                        "Ed25519",
                        "Rsa2048",
                        "Rsa4096",
                        "Rsa8192"
                      ],
                      "x-ms-enum": {
                        "name": "PrivateKeyAlgorithm",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Ec256",
                            "value": "Ec256",
                            "description": "Algorithm - ec256."
                          },
                          {
                            "name": "Ec384",
                            "value": "Ec384",
                            "description": "Algorithm - ec384."
                          },
                          {
                            "name": "Ec521",
                            "value": "Ec521",
                            "description": "Algorithm - ec521."
                          },
                          {
                            "name": "Ed25519",
                            "value": "Ed25519",
                            "description": "Algorithm - ed25519."
                          },
                          {
                            "name": "Rsa2048",
                            "value": "Rsa2048",
                            "description": "Algorithm - rsa2048."
                          },
                          {
                            "name": "Rsa4096",
                            "value": "Rsa4096",
                            "description": "Algorithm - rsa4096."
                          },
                          {
                            "name": "Rsa8192",
                            "value": "Rsa8192",
                            "description": "Algorithm - rsa8192."
                          }
                        ]
                      }
                    },
                    "rotationPolicy": {
                      "description": "cert-manager private key rotationPolicy.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "Never"
                      ],
                      "x-ms-enum": {
                        "name": "PrivateKeyRotationPolicy",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Always",
                            "value": "Always",
                            "description": "Rotation Policy - Always."
                          },
                          {
                            "name": "Never",
                            "value": "Never",
                            "description": "Rotation Policy - Never."
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "algorithm",
                    "rotationPolicy"
                  ]
                },
                "san": {
                  "description": "Additional Subject Alternative Names (SANs) to include in the certificate.",
                  "type": "object",
                  "properties": {
                    "dns": {
                      "type": "array",
                      "description": "DNS SANs.",
                      "default": [],
                      "items": {
                        "type": "string"
                      }
                    },
                    "ip": {
                      "type": "array",
                      "description": "IP address SANs.",
                      "default": [],
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "dns",
                    "ip"
                  ]
                }
              },
              "required": [
                "issuerRef"
              ]
            },
            "manual": {
              "description": "Option 2 - Manual TLS server certificate management through a defined secret.",
              "type": "object",
              "properties": {
                "secretRef": {
                  "type": "string",
                  "description": "Kubernetes secret containing an X.509 client certificate. This is a reference to the secret through an identifying name, not the secret itself."
                }
              },
              "required": [
                "secretRef"
              ]
            }
          },
          "required": [
            "mode"
          ]
        }
      },
      "required": [
        "port"
      ]
    },
    "LocalKubernetesReference": {
      "type": "object",
      "description": "Kubernetes reference",
      "properties": {
        "apiGroup": {
          "type": "string",
          "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
        },
        "kind": {
          "type": "string",
          "description": "Kind is the type of resource being referenced"
        },
        "name": {
          "type": "string",
          "description": "Name is the name of resource being referenced"
        }
      },
      "required": [
        "kind",
        "name"
      ]
    },
    "ManagedIdentity": {
      "type": "object",
      "description": "System and Use Assigned Managed Identity properties",
      "properties": {
        "systemAssignedManagedIdentitySettings": {
          "description": "System-assigned managed identity authentication.",
          "type": "object",
          "properties": {
            "audience": {
              "type": "string",
              "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
            }
          }
        },
        "userAssignedManagedIdentitySettings": {
          "description": "User-assigned managed identity authentication.",
          "type": "object",
          "properties": {
            "clientId": {
              "type": "string",
              "description": "Client ID for the user-assigned managed identity."
            },
            "scope": {
              "type": "string",
              "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
            },
            "tenantId": {
              "type": "string",
              "description": "Tenant ID."
            }
          },
          "required": [
            "clientId",
            "tenantId"
          ]
        }
      }
    },
    "ManagedIdentityMethod": {
      "type": "string",
      "description": "Managed Identity Method",
      "enum": [
        "SystemAssignedManagedIdentity",
        "UserAssignedManagedIdentity"
      ],
      "x-ms-enum": {
        "name": "ManagedIdentityMethod",
        "modelAsString": true,
        "values": [
          {
            "name": "SystemAssignedManagedIdentity",
            "value": "SystemAssignedManagedIdentity",
            "description": "SystemAssignedManagedIdentity type"
          },
          {
            "name": "UserAssignedManagedIdentity",
            "value": "UserAssignedManagedIdentity",
            "description": "UserAssignedManagedIdentity type"
          }
        ]
      }
    },
    "MetricProperties": {
      "type": "object",
      "description": "Metric properties",
      "properties": {
        "logs": {
          "description": "Diagnostic log settings for the resource.",
          "type": "object",
          "properties": {
            "level": {
              "type": "string",
              "description": "The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.",
              "default": "info"
            }
          }
        },
        "metrics": {
          "description": "The metrics settings for the resource.",
          "type": "object",
          "properties": {
            "prometheusPort": {
              "type": "integer",
              "format": "int32",
              "description": "The prometheus port to expose the metrics.",
              "default": 9600,
              "minimum": 0,
              "maximum": 65535
            }
          }
        }
      }
    },
    "Metrics": {
      "type": "object",
      "description": "Diagnostic Metrics properties",
      "properties": {
        "prometheusPort": {
          "type": "integer",
          "format": "int32",
          "description": "The prometheus port to expose the metrics.",
          "default": 9600,
          "minimum": 0,
          "maximum": 65535
        }
      }
    },
    "MqttAuthMethod": {
      "type": "string",
      "description": "DataflowEndpoint Mqtt Authentication Method properties",
      "enum": [
        "SystemAssignedManagedIdentity",
        "UserAssignedManagedIdentity",
        "ServiceAccountToken",
        "X509Certificate",
        "Anonymous"
      ],
      "x-ms-enum": {
        "name": "MqttAuthMethod",
        "modelAsString": true,
        "values": [
          {
            "name": "SystemAssignedManagedIdentity",
            "value": "SystemAssignedManagedIdentity",
            "description": "SystemAssignedManagedIdentity type"
          },
          {
            "name": "UserAssignedManagedIdentity",
            "value": "UserAssignedManagedIdentity",
            "description": "UserAssignedManagedIdentity type"
          },
          {
            "name": "ServiceAccountToken",
            "value": "ServiceAccountToken",
            "description": "ServiceAccountToken Option"
          },
          {
            "name": "X509Certificate",
            "value": "X509Certificate",
            "description": "x509Certificate Option"
          },
          {
            "name": "Anonymous",
            "value": "Anonymous",
            "description": "Anonymous Option"
          }
        ]
      }
    },
    "MqttRetainType": {
      "type": "string",
      "description": "Broker Retain types",
      "enum": [
        "Keep",
        "Never"
      ],
      "x-ms-enum": {
        "name": "MqttRetainType",
        "modelAsString": true,
        "values": [
          {
            "name": "Keep",
            "value": "Keep",
            "description": "Retain the messages."
          },
          {
            "name": "Never",
            "value": "Never",
            "description": "Never retain messages."
          }
        ]
      }
    },
    "NonEmptyString": {
      "type": "string",
      "description": "A string with a minimum length of 1.",
      "minLength": 1
    },
    "OperationType": {
      "type": "string",
      "description": "Dataflow Operation Type properties",
      "enum": [
        "Source",
        "Destination",
        "BuiltInTransformation"
      ],
      "x-ms-enum": {
        "name": "OperationType",
        "modelAsString": true,
        "values": [
          {
            "name": "Source",
            "value": "Source",
            "description": "Dataflow Source Operation"
          },
          {
            "name": "Destination",
            "value": "Destination",
            "description": "Dataflow Destination Operation"
          },
          {
            "name": "BuiltInTransformation",
            "value": "BuiltInTransformation",
            "description": "Dataflow BuiltIn Transformation Operation"
          }
        ]
      }
    },
    "OperationalMode": {
      "type": "string",
      "description": "Mode properties",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "OperationalMode",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "Enabled is equivalent to True"
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "Disabled is equivalent to False."
          }
        ]
      }
    },
    "OperatorValues": {
      "type": "string",
      "description": "Valid operators are In, NotIn, Exists and DoesNotExist.",
      "enum": [
        "In",
        "NotIn",
        "Exists",
        "DoesNotExist"
      ],
      "x-ms-enum": {
        "name": "OperatorValues",
        "modelAsString": true,
        "values": [
          {
            "name": "In",
            "value": "In",
            "description": "In operator."
          },
          {
            "name": "NotIn",
            "value": "NotIn",
            "description": "NotIn operator."
          },
          {
            "name": "Exists",
            "value": "Exists",
            "description": "Exists operator."
          },
          {
            "name": "DoesNotExist",
            "value": "DoesNotExist",
            "description": "DoesNotExist operator."
          }
        ]
      }
    },
    "PrincipalDefinition": {
      "type": "object",
      "description": "PrincipalDefinition properties of Rule",
      "properties": {
        "attributes": {
          "type": "array",
          "description": "A list of key-value pairs that match the attributes of the clients. The attributes are case-sensitive and must match the attributes provided by the clients during authentication.",
          "default": [],
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "x-ms-identifiers": []
        },
        "clientIds": {
          "type": "array",
          "description": "A list of client IDs that match the clients. The client IDs are case-sensitive and must match the client IDs provided by the clients during connection.",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "usernames": {
          "type": "array",
          "description": "A list of usernames that match the clients. The usernames are case-sensitive and must match the usernames provided by the clients during authentication.",
          "default": [],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PrivateKeyAlgorithm": {
      "type": "string",
      "description": "Private key algorithm types.",
      "enum": [
        "Ec256",
        "Ec384",
        "Ec521",
        "Ed25519",
        "Rsa2048",
        "Rsa4096",
        "Rsa8192"
      ],
      "x-ms-enum": {
        "name": "PrivateKeyAlgorithm",
        "modelAsString": true,
        "values": [
          {
            "name": "Ec256",
            "value": "Ec256",
            "description": "Algorithm - ec256."
          },
          {
            "name": "Ec384",
            "value": "Ec384",
            "description": "Algorithm - ec384."
          },
          {
            "name": "Ec521",
            "value": "Ec521",
            "description": "Algorithm - ec521."
          },
          {
            "name": "Ed25519",
            "value": "Ed25519",
            "description": "Algorithm - ed25519."
          },
          {
            "name": "Rsa2048",
            "value": "Rsa2048",
            "description": "Algorithm - rsa2048."
          },
          {
            "name": "Rsa4096",
            "value": "Rsa4096",
            "description": "Algorithm - rsa4096."
          },
          {
            "name": "Rsa8192",
            "value": "Rsa8192",
            "description": "Algorithm - rsa8192."
          }
        ]
      }
    },
    "PrivateKeyRotationPolicy": {
      "type": "string",
      "description": "Private key rotation policy.",
      "enum": [
        "Always",
        "Never"
      ],
      "x-ms-enum": {
        "name": "PrivateKeyRotationPolicy",
        "modelAsString": true,
        "values": [
          {
            "name": "Always",
            "value": "Always",
            "description": "Rotation Policy - Always."
          },
          {
            "name": "Never",
            "value": "Never",
            "description": "Rotation Policy - Never."
          }
        ]
      }
    },
    "ProfileDiagnostics": {
      "type": "object",
      "description": "DataflowProfile Diagnostics properties",
      "properties": {
        "logs": {
          "description": "Diagnostic log settings for the resource.",
          "type": "object",
          "properties": {
            "level": {
              "type": "string",
              "description": "The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.",
              "default": "info"
            }
          }
        },
        "metrics": {
          "description": "The metrics settings for the resource.",
          "type": "object",
          "properties": {
            "prometheusPort": {
              "type": "integer",
              "format": "int32",
              "description": "The prometheus port to expose the metrics.",
              "default": 9600,
              "minimum": 0,
              "maximum": 65535
            }
          }
        }
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "The enum defining status of resource.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Provisioning",
        "Updating",
        "Deleting",
        "Accepted"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Provisioning",
            "value": "Provisioning",
            "description": "Resource is getting provisioned."
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "Resource is Updating."
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "Resource is Deleting."
          },
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "Resource has been Accepted."
          }
        ]
      },
      "readOnly": true
    },
    "RegistryEndpointAnonymousAuthentication": {
      "type": "object",
      "description": "Anonymous authentication",
      "properties": {
        "anonymousSettings": {
          "description": "Anonymous authentication properties",
          "type": "object",
          "additionalProperties": false
        }
      },
      "required": [
        "anonymousSettings"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "Model for RegistryEndpointAuthentication",
          "properties": {
            "method": {
              "description": "The authentication method.",
              "type": "string",
              "enum": [
                "SystemAssignedManagedIdentity",
                "UserAssignedManagedIdentity",
                "Anonymous",
                "ArtifactPullSecret"
              ],
              "x-ms-enum": {
                "name": "RegistryEndpointAuthenticationMethod",
                "modelAsString": true,
                "values": [
                  {
                    "name": "SystemAssignedManagedIdentity",
                    "value": "SystemAssignedManagedIdentity",
                    "description": "SystemAssignedManagedIdentity type"
                  },
                  {
                    "name": "UserAssignedManagedIdentity",
                    "value": "UserAssignedManagedIdentity",
                    "description": "UserAssignedManagedIdentity type"
                  },
                  {
                    "name": "Anonymous",
                    "value": "Anonymous",
                    "description": "Anonymous Option"
                  },
                  {
                    "name": "ArtifactPullSecret",
                    "value": "ArtifactPullSecret",
                    "description": "Artifact Pull Secret authentication"
                  }
                ]
              }
            }
          },
          "discriminator": "method",
          "required": [
            "method"
          ]
        }
      ],
      "x-ms-discriminator-value": "Anonymous"
    },
    "RegistryEndpointAnonymousSettings": {
      "type": "object",
      "description": "RegistryEndpoint Anonymous authentication properties",
      "additionalProperties": false
    },
    "RegistryEndpointArtifactPullSecretAuthentication": {
      "type": "object",
      "description": "Artifact Pull Secret authentication",
      "properties": {
        "artifactPullSecretSettings": {
          "description": "Artifact Pull Secret authentication properties",
          "type": "object",
          "properties": {
            "secretRef": {
              "type": "string",
              "description": "The name of the kubernetes secret that contains the artifact pull secret."
            }
          },
          "required": [
            "secretRef"
          ]
        }
      },
      "required": [
        "artifactPullSecretSettings"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "Model for RegistryEndpointAuthentication",
          "properties": {
            "method": {
              "description": "The authentication method.",
              "type": "string",
              "enum": [
                "SystemAssignedManagedIdentity",
                "UserAssignedManagedIdentity",
                "Anonymous",
                "ArtifactPullSecret"
              ],
              "x-ms-enum": {
                "name": "RegistryEndpointAuthenticationMethod",
                "modelAsString": true,
                "values": [
                  {
                    "name": "SystemAssignedManagedIdentity",
                    "value": "SystemAssignedManagedIdentity",
                    "description": "SystemAssignedManagedIdentity type"
                  },
                  {
                    "name": "UserAssignedManagedIdentity",
                    "value": "UserAssignedManagedIdentity",
                    "description": "UserAssignedManagedIdentity type"
                  },
                  {
                    "name": "Anonymous",
                    "value": "Anonymous",
                    "description": "Anonymous Option"
                  },
                  {
                    "name": "ArtifactPullSecret",
                    "value": "ArtifactPullSecret",
                    "description": "Artifact Pull Secret authentication"
                  }
                ]
              }
            }
          },
          "discriminator": "method",
          "required": [
            "method"
          ]
        }
      ],
      "x-ms-discriminator-value": "ArtifactPullSecret"
    },
    "RegistryEndpointArtifactPullSecretSettings": {
      "type": "object",
      "description": "RegistryEndpoint Artifact Pull Secret authentication properties",
      "properties": {
        "secretRef": {
          "type": "string",
          "description": "The name of the kubernetes secret that contains the artifact pull secret."
        }
      },
      "required": [
        "secretRef"
      ]
    },
    "RegistryEndpointAuthentication": {
      "type": "object",
      "description": "Model for RegistryEndpointAuthentication",
      "properties": {
        "method": {
          "description": "The authentication method.",
          "type": "string",
          "enum": [
            "SystemAssignedManagedIdentity",
            "UserAssignedManagedIdentity",
            "Anonymous",
            "ArtifactPullSecret"
          ],
          "x-ms-enum": {
            "name": "RegistryEndpointAuthenticationMethod",
            "modelAsString": true,
            "values": [
              {
                "name": "SystemAssignedManagedIdentity",
                "value": "SystemAssignedManagedIdentity",
                "description": "SystemAssignedManagedIdentity type"
              },
              {
                "name": "UserAssignedManagedIdentity",
                "value": "UserAssignedManagedIdentity",
                "description": "UserAssignedManagedIdentity type"
              },
              {
                "name": "Anonymous",
                "value": "Anonymous",
                "description": "Anonymous Option"
              },
              {
                "name": "ArtifactPullSecret",
                "value": "ArtifactPullSecret",
                "description": "Artifact Pull Secret authentication"
              }
            ]
          }
        }
      },
      "discriminator": "method",
      "required": [
        "method"
      ]
    },
    "RegistryEndpointAuthenticationMethod": {
      "type": "string",
      "description": "The authentication method.",
      "enum": [
        "SystemAssignedManagedIdentity",
        "UserAssignedManagedIdentity",
        "Anonymous",
        "ArtifactPullSecret"
      ],
      "x-ms-enum": {
        "name": "RegistryEndpointAuthenticationMethod",
        "modelAsString": true,
        "values": [
          {
            "name": "SystemAssignedManagedIdentity",
            "value": "SystemAssignedManagedIdentity",
            "description": "SystemAssignedManagedIdentity type"
          },
          {
            "name": "UserAssignedManagedIdentity",
            "value": "UserAssignedManagedIdentity",
            "description": "UserAssignedManagedIdentity type"
          },
          {
            "name": "Anonymous",
            "value": "Anonymous",
            "description": "Anonymous Option"
          },
          {
            "name": "ArtifactPullSecret",
            "value": "ArtifactPullSecret",
            "description": "Artifact Pull Secret authentication"
          }
        ]
      }
    },
    "RegistryEndpointProperties": {
      "type": "object",
      "description": "RegistryEndpoint properties",
      "properties": {
        "host": {
          "type": "string",
          "description": "The Container Registry endpoint hostname.",
          "minLength": 3,
          "maxLength": 63
        },
        "authentication": {
          "description": "The authentication settings for the Azure Container Registry.",
          "type": "object",
          "properties": {
            "method": {
              "description": "The authentication method.",
              "type": "string",
              "enum": [
                "SystemAssignedManagedIdentity",
                "UserAssignedManagedIdentity",
                "Anonymous",
                "ArtifactPullSecret"
              ],
              "x-ms-enum": {
                "name": "RegistryEndpointAuthenticationMethod",
                "modelAsString": true,
                "values": [
                  {
                    "name": "SystemAssignedManagedIdentity",
                    "value": "SystemAssignedManagedIdentity",
                    "description": "SystemAssignedManagedIdentity type"
                  },
                  {
                    "name": "UserAssignedManagedIdentity",
                    "value": "UserAssignedManagedIdentity",
                    "description": "UserAssignedManagedIdentity type"
                  },
                  {
                    "name": "Anonymous",
                    "value": "Anonymous",
                    "description": "Anonymous Option"
                  },
                  {
                    "name": "ArtifactPullSecret",
                    "value": "ArtifactPullSecret",
                    "description": "Artifact Pull Secret authentication"
                  }
                ]
              }
            }
          },
          "discriminator": "method",
          "required": [
            "method"
          ]
        },
        "provisioningState": {
          "description": "The status of the last operation.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Updating",
            "Deleting",
            "Accepted"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Provisioning",
                "value": "Provisioning",
                "description": "Resource is getting provisioned."
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "Resource is Updating."
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "Resource is Deleting."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "Resource has been Accepted."
              }
            ]
          }
        },
        "healthState": {
          "type": "string",
          "description": "The health state of the resource.",
          "default": "Unknown",
          "enum": [
            "Available",
            "Degraded",
            "Unavailable",
            "Unknown"
          ],
          "x-ms-enum": {
            "name": "ResourceHealthState",
            "modelAsString": true,
            "values": [
              {
                "name": "Available",
                "value": "Available",
                "description": "Resource is Available and functioning as expected."
              },
              {
                "name": "Degraded",
                "value": "Degraded",
                "description": "Resource health is degraded."
              },
              {
                "name": "Unavailable",
                "value": "Unavailable",
                "description": "Resource is not functioning as expected."
              },
              {
                "name": "Unknown",
                "value": "Unknown",
                "description": "Resource state is unknown."
              }
            ]
          },
          "readOnly": true
        },
        "codeSigningCas": {
          "type": "array",
          "description": "The signing certificate authorities used by artifacts in the registry endpoint",
          "items": {
            "type": "object",
            "description": "RegistryEndpoint Trust properties",
            "properties": {
              "type": {
                "description": "The trust type for the registry endpoint.",
                "type": "string",
                "enum": [
                  "Secret",
                  "ConfigMap"
                ],
                "x-ms-enum": {
                  "name": "RegistryEndpointTrustedSigningKeyType",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Secret",
                      "value": "Secret",
                      "description": "Trust settings stored in a Kubernetes Secret."
                    },
                    {
                      "name": "ConfigMap",
                      "value": "ConfigMap",
                      "description": "Trust settings stored in a Kubernetes ConfigMap."
                    }
                  ]
                }
              }
            },
            "discriminator": "type",
            "required": [
              "type"
            ]
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "host",
        "authentication"
      ]
    },
    "RegistryEndpointResource": {
      "type": "object",
      "description": "RegistryEndpoint resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "host": {
              "type": "string",
              "description": "The Container Registry endpoint hostname.",
              "minLength": 3,
              "maxLength": 63
            },
            "authentication": {
              "description": "The authentication settings for the Azure Container Registry.",
              "type": "object",
              "properties": {
                "method": {
                  "description": "The authentication method.",
                  "type": "string",
                  "enum": [
                    "SystemAssignedManagedIdentity",
                    "UserAssignedManagedIdentity",
                    "Anonymous",
                    "ArtifactPullSecret"
                  ],
                  "x-ms-enum": {
                    "name": "RegistryEndpointAuthenticationMethod",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "SystemAssignedManagedIdentity",
                        "value": "SystemAssignedManagedIdentity",
                        "description": "SystemAssignedManagedIdentity type"
                      },
                      {
                        "name": "UserAssignedManagedIdentity",
                        "value": "UserAssignedManagedIdentity",
                        "description": "UserAssignedManagedIdentity type"
                      },
                      {
                        "name": "Anonymous",
                        "value": "Anonymous",
                        "description": "Anonymous Option"
                      },
                      {
                        "name": "ArtifactPullSecret",
                        "value": "ArtifactPullSecret",
                        "description": "Artifact Pull Secret authentication"
                      }
                    ]
                  }
                }
              },
              "discriminator": "method",
              "required": [
                "method"
              ]
            },
            "provisioningState": {
              "description": "The status of the last operation.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "Resource is getting provisioned."
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "Resource is Updating."
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "Resource is Deleting."
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "Resource has been Accepted."
                  }
                ]
              }
            },
            "healthState": {
              "type": "string",
              "description": "The health state of the resource.",
              "default": "Unknown",
              "enum": [
                "Available",
                "Degraded",
                "Unavailable",
                "Unknown"
              ],
              "x-ms-enum": {
                "name": "ResourceHealthState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Available",
                    "value": "Available",
                    "description": "Resource is Available and functioning as expected."
                  },
                  {
                    "name": "Degraded",
                    "value": "Degraded",
                    "description": "Resource health is degraded."
                  },
                  {
                    "name": "Unavailable",
                    "value": "Unavailable",
                    "description": "Resource is not functioning as expected."
                  },
                  {
                    "name": "Unknown",
                    "value": "Unknown",
                    "description": "Resource state is unknown."
                  }
                ]
              },
              "readOnly": true
            },
            "codeSigningCas": {
              "type": "array",
              "description": "The signing certificate authorities used by artifacts in the registry endpoint",
              "items": {
                "type": "object",
                "description": "RegistryEndpoint Trust properties",
                "properties": {
                  "type": {
                    "description": "The trust type for the registry endpoint.",
                    "type": "string",
                    "enum": [
                      "Secret",
                      "ConfigMap"
                    ],
                    "x-ms-enum": {
                      "name": "RegistryEndpointTrustedSigningKeyType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Secret",
                          "value": "Secret",
                          "description": "Trust settings stored in a Kubernetes Secret."
                        },
                        {
                          "name": "ConfigMap",
                          "value": "ConfigMap",
                          "description": "Trust settings stored in a Kubernetes ConfigMap."
                        }
                      ]
                    }
                  }
                },
                "discriminator": "type",
                "required": [
                  "type"
                ]
              },
              "x-ms-identifiers": []
            }
          },
          "required": [
            "host",
            "authentication"
          ]
        },
        "extendedLocation": {
          "description": "Edge location of the resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the extended location."
            },
            "type": {
              "description": "Type of ExtendedLocation.",
              "type": "string",
              "enum": [
                "CustomLocation"
              ],
              "x-ms-enum": {
                "name": "ExtendedLocationType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "CustomLocation",
                    "value": "CustomLocation",
                    "description": "CustomLocation type"
                  }
                ]
              }
            }
          },
          "required": [
            "name",
            "type"
          ]
        }
      }
    },
    "RegistryEndpointResourceListResult": {
      "type": "object",
      "description": "The response of a RegistryEndpointResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The RegistryEndpointResource items on this page",
          "items": {
            "type": "object",
            "description": "RegistryEndpoint resource",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "host": {
                    "type": "string",
                    "description": "The Container Registry endpoint hostname.",
                    "minLength": 3,
                    "maxLength": 63
                  },
                  "authentication": {
                    "description": "The authentication settings for the Azure Container Registry.",
                    "type": "object",
                    "properties": {
                      "method": {
                        "description": "The authentication method.",
                        "type": "string",
                        "enum": [
                          "SystemAssignedManagedIdentity",
                          "UserAssignedManagedIdentity",
                          "Anonymous",
                          "ArtifactPullSecret"
                        ],
                        "x-ms-enum": {
                          "name": "RegistryEndpointAuthenticationMethod",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "SystemAssignedManagedIdentity",
                              "value": "SystemAssignedManagedIdentity",
                              "description": "SystemAssignedManagedIdentity type"
                            },
                            {
                              "name": "UserAssignedManagedIdentity",
                              "value": "UserAssignedManagedIdentity",
                              "description": "UserAssignedManagedIdentity type"
                            },
                            {
                              "name": "Anonymous",
                              "value": "Anonymous",
                              "description": "Anonymous Option"
                            },
                            {
                              "name": "ArtifactPullSecret",
                              "value": "ArtifactPullSecret",
                              "description": "Artifact Pull Secret authentication"
                            }
                          ]
                        }
                      }
                    },
                    "discriminator": "method",
                    "required": [
                      "method"
                    ]
                  },
                  "provisioningState": {
                    "description": "The status of the last operation.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Provisioning",
                      "Updating",
                      "Deleting",
                      "Accepted"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Provisioning",
                          "value": "Provisioning",
                          "description": "Resource is getting provisioned."
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "Resource is Updating."
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "Resource is Deleting."
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "Resource has been Accepted."
                        }
                      ]
                    }
                  },
                  "healthState": {
                    "type": "string",
                    "description": "The health state of the resource.",
                    "default": "Unknown",
                    "enum": [
                      "Available",
                      "Degraded",
                      "Unavailable",
                      "Unknown"
                    ],
                    "x-ms-enum": {
                      "name": "ResourceHealthState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Available",
                          "value": "Available",
                          "description": "Resource is Available and functioning as expected."
                        },
                        {
                          "name": "Degraded",
                          "value": "Degraded",
                          "description": "Resource health is degraded."
                        },
                        {
                          "name": "Unavailable",
                          "value": "Unavailable",
                          "description": "Resource is not functioning as expected."
                        },
                        {
                          "name": "Unknown",
                          "value": "Unknown",
                          "description": "Resource state is unknown."
                        }
                      ]
                    },
                    "readOnly": true
                  },
                  "codeSigningCas": {
                    "type": "array",
                    "description": "The signing certificate authorities used by artifacts in the registry endpoint",
                    "items": {
                      "type": "object",
                      "description": "RegistryEndpoint Trust properties",
                      "properties": {
                        "type": {
                          "description": "The trust type for the registry endpoint.",
                          "type": "string",
                          "enum": [
                            "Secret",
                            "ConfigMap"
                          ],
                          "x-ms-enum": {
                            "name": "RegistryEndpointTrustedSigningKeyType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Secret",
                                "value": "Secret",
                                "description": "Trust settings stored in a Kubernetes Secret."
                              },
                              {
                                "name": "ConfigMap",
                                "value": "ConfigMap",
                                "description": "Trust settings stored in a Kubernetes ConfigMap."
                              }
                            ]
                          }
                        }
                      },
                      "discriminator": "type",
                      "required": [
                        "type"
                      ]
                    },
                    "x-ms-identifiers": []
                  }
                },
                "required": [
                  "host",
                  "authentication"
                ]
              },
              "extendedLocation": {
                "description": "Edge location of the resource.",
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the extended location."
                  },
                  "type": {
                    "description": "Type of ExtendedLocation.",
                    "type": "string",
                    "enum": [
                      "CustomLocation"
                    ],
                    "x-ms-enum": {
                      "name": "ExtendedLocationType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "CustomLocation",
                          "value": "CustomLocation",
                          "description": "CustomLocation type"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "name",
                  "type"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "RegistryEndpointSystemAssignedIdentityAuthentication": {
      "type": "object",
      "description": "System assigned identity authentication",
      "properties": {
        "systemAssignedManagedIdentitySettings": {
          "description": "System assigned managed identity properties",
          "type": "object",
          "properties": {
            "audience": {
              "type": "string",
              "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
            }
          }
        }
      },
      "required": [
        "systemAssignedManagedIdentitySettings"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "Model for RegistryEndpointAuthentication",
          "properties": {
            "method": {
              "description": "The authentication method.",
              "type": "string",
              "enum": [
                "SystemAssignedManagedIdentity",
                "UserAssignedManagedIdentity",
                "Anonymous",
                "ArtifactPullSecret"
              ],
              "x-ms-enum": {
                "name": "RegistryEndpointAuthenticationMethod",
                "modelAsString": true,
                "values": [
                  {
                    "name": "SystemAssignedManagedIdentity",
                    "value": "SystemAssignedManagedIdentity",
                    "description": "SystemAssignedManagedIdentity type"
                  },
                  {
                    "name": "UserAssignedManagedIdentity",
                    "value": "UserAssignedManagedIdentity",
                    "description": "UserAssignedManagedIdentity type"
                  },
                  {
                    "name": "Anonymous",
                    "value": "Anonymous",
                    "description": "Anonymous Option"
                  },
                  {
                    "name": "ArtifactPullSecret",
                    "value": "ArtifactPullSecret",
                    "description": "Artifact Pull Secret authentication"
                  }
                ]
              }
            }
          },
          "discriminator": "method",
          "required": [
            "method"
          ]
        }
      ],
      "x-ms-discriminator-value": "SystemAssignedManagedIdentity"
    },
    "RegistryEndpointSystemAssignedManagedIdentitySettings": {
      "type": "object",
      "description": "System assigned managed identity properties",
      "properties": {
        "audience": {
          "type": "string",
          "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration."
        }
      }
    },
    "RegistryEndpointTrustedSigningKey": {
      "type": "object",
      "description": "RegistryEndpoint Trust properties",
      "properties": {
        "type": {
          "description": "The trust type for the registry endpoint.",
          "type": "string",
          "enum": [
            "Secret",
            "ConfigMap"
          ],
          "x-ms-enum": {
            "name": "RegistryEndpointTrustedSigningKeyType",
            "modelAsString": true,
            "values": [
              {
                "name": "Secret",
                "value": "Secret",
                "description": "Trust settings stored in a Kubernetes Secret."
              },
              {
                "name": "ConfigMap",
                "value": "ConfigMap",
                "description": "Trust settings stored in a Kubernetes ConfigMap."
              }
            ]
          }
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "RegistryEndpointTrustedSigningKeyConfigMap": {
      "type": "object",
      "description": "Settings for RegistryEndpoint trust provided through a configmap.",
      "properties": {
        "configMapRef": {
          "type": "string",
          "description": "The name of the configmap."
        }
      },
      "required": [
        "configMapRef"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "RegistryEndpoint Trust properties",
          "properties": {
            "type": {
              "description": "The trust type for the registry endpoint.",
              "type": "string",
              "enum": [
                "Secret",
                "ConfigMap"
              ],
              "x-ms-enum": {
                "name": "RegistryEndpointTrustedSigningKeyType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Secret",
                    "value": "Secret",
                    "description": "Trust settings stored in a Kubernetes Secret."
                  },
                  {
                    "name": "ConfigMap",
                    "value": "ConfigMap",
                    "description": "Trust settings stored in a Kubernetes ConfigMap."
                  }
                ]
              }
            }
          },
          "discriminator": "type",
          "required": [
            "type"
          ]
        }
      ],
      "x-ms-discriminator-value": "ConfigMap"
    },
    "RegistryEndpointTrustedSigningKeySecret": {
      "type": "object",
      "description": "Settings for RegistryEndpoint trust provided through a secret.",
      "properties": {
        "secretRef": {
          "type": "string",
          "description": "The name of the secret."
        }
      },
      "required": [
        "secretRef"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "RegistryEndpoint Trust properties",
          "properties": {
            "type": {
              "description": "The trust type for the registry endpoint.",
              "type": "string",
              "enum": [
                "Secret",
                "ConfigMap"
              ],
              "x-ms-enum": {
                "name": "RegistryEndpointTrustedSigningKeyType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Secret",
                    "value": "Secret",
                    "description": "Trust settings stored in a Kubernetes Secret."
                  },
                  {
                    "name": "ConfigMap",
                    "value": "ConfigMap",
                    "description": "Trust settings stored in a Kubernetes ConfigMap."
                  }
                ]
              }
            }
          },
          "discriminator": "type",
          "required": [
            "type"
          ]
        }
      ],
      "x-ms-discriminator-value": "Secret"
    },
    "RegistryEndpointTrustedSigningKeyType": {
      "type": "string",
      "description": "RegistryEndpointTrustedSigningKeyType values",
      "enum": [
        "Secret",
        "ConfigMap"
      ],
      "x-ms-enum": {
        "name": "RegistryEndpointTrustedSigningKeyType",
        "modelAsString": true,
        "values": [
          {
            "name": "Secret",
            "value": "Secret",
            "description": "Trust settings stored in a Kubernetes Secret."
          },
          {
            "name": "ConfigMap",
            "value": "ConfigMap",
            "description": "Trust settings stored in a Kubernetes ConfigMap."
          }
        ]
      }
    },
    "RegistryEndpointUserAssignedIdentityAuthentication": {
      "type": "object",
      "description": "User assigned identity authentication",
      "properties": {
        "userAssignedManagedIdentitySettings": {
          "description": "User assigned managed identity properties",
          "type": "object",
          "properties": {
            "clientId": {
              "type": "string",
              "description": "Client ID for the user-assigned managed identity."
            },
            "scope": {
              "type": "string",
              "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
            },
            "tenantId": {
              "type": "string",
              "description": "Tenant ID."
            }
          },
          "required": [
            "clientId",
            "tenantId"
          ]
        }
      },
      "required": [
        "userAssignedManagedIdentitySettings"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "Model for RegistryEndpointAuthentication",
          "properties": {
            "method": {
              "description": "The authentication method.",
              "type": "string",
              "enum": [
                "SystemAssignedManagedIdentity",
                "UserAssignedManagedIdentity",
                "Anonymous",
                "ArtifactPullSecret"
              ],
              "x-ms-enum": {
                "name": "RegistryEndpointAuthenticationMethod",
                "modelAsString": true,
                "values": [
                  {
                    "name": "SystemAssignedManagedIdentity",
                    "value": "SystemAssignedManagedIdentity",
                    "description": "SystemAssignedManagedIdentity type"
                  },
                  {
                    "name": "UserAssignedManagedIdentity",
                    "value": "UserAssignedManagedIdentity",
                    "description": "UserAssignedManagedIdentity type"
                  },
                  {
                    "name": "Anonymous",
                    "value": "Anonymous",
                    "description": "Anonymous Option"
                  },
                  {
                    "name": "ArtifactPullSecret",
                    "value": "ArtifactPullSecret",
                    "description": "Artifact Pull Secret authentication"
                  }
                ]
              }
            }
          },
          "discriminator": "method",
          "required": [
            "method"
          ]
        }
      ],
      "x-ms-discriminator-value": "UserAssignedManagedIdentity"
    },
    "RegistryEndpointUserAssignedManagedIdentitySettings": {
      "type": "object",
      "description": "User assigned managed identity properties",
      "properties": {
        "clientId": {
          "type": "string",
          "description": "Client ID for the user-assigned managed identity."
        },
        "scope": {
          "type": "string",
          "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix."
        },
        "tenantId": {
          "type": "string",
          "description": "Tenant ID."
        }
      },
      "required": [
        "clientId",
        "tenantId"
      ]
    },
    "ResourceHealthState": {
      "type": "string",
      "description": "The health state of the resource.",
      "enum": [
        "Available",
        "Degraded",
        "Unavailable",
        "Unknown"
      ],
      "x-ms-enum": {
        "name": "ResourceHealthState",
        "modelAsString": true,
        "values": [
          {
            "name": "Available",
            "value": "Available",
            "description": "Resource is Available and functioning as expected."
          },
          {
            "name": "Degraded",
            "value": "Degraded",
            "description": "Resource health is degraded."
          },
          {
            "name": "Unavailable",
            "value": "Unavailable",
            "description": "Resource is not functioning as expected."
          },
          {
            "name": "Unknown",
            "value": "Unknown",
            "description": "Resource state is unknown."
          }
        ]
      }
    },
    "SanForCert": {
      "type": "object",
      "description": "Subject Alternative Names (SANs) for certificate.",
      "properties": {
        "dns": {
          "type": "array",
          "description": "DNS SANs.",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "ip": {
          "type": "array",
          "description": "IP address SANs.",
          "default": [],
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "dns",
        "ip"
      ]
    },
    "SaslMethod": {
      "type": "string",
      "description": "Sasl Method",
      "enum": [
        "Sasl"
      ],
      "x-ms-enum": {
        "name": "SaslMethod",
        "modelAsString": true,
        "values": [
          {
            "name": "Sasl",
            "value": "Sasl",
            "description": "Sasl Option"
          }
        ]
      }
    },
    "SchemaRegistryID": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an Azure Resource Manager resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.DeviceRegistry/schemaRegistries"
          }
        ]
      }
    },
    "SchemaRegistryRef": {
      "type": "object",
      "description": "The reference to the Schema Registry for this AIO Instance.",
      "properties": {
        "resourceId": {
          "description": "The resource ID of the Schema Registry.",
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.DeviceRegistry/schemaRegistries"
              }
            ]
          }
        }
      },
      "required": [
        "resourceId"
      ]
    },
    "SecretProviderClassID": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an Azure Resource Manager resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.SecretSyncController/azureKeyVaultSecretProviderClasses"
          }
        ]
      }
    },
    "SecretProviderClassRef": {
      "type": "object",
      "description": "The reference to the AIO Secret provider class.",
      "properties": {
        "resourceId": {
          "description": "The resource ID of the AIO Secret provider class.",
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.SecretSyncController/azureKeyVaultSecretProviderClasses"
              }
            ]
          }
        }
      },
      "required": [
        "resourceId"
      ]
    },
    "SelfCheck": {
      "type": "object",
      "description": "Broker Diagnostic Self check properties",
      "properties": {
        "mode": {
          "type": "string",
          "description": "The toggle to enable/disable self check.",
          "default": "Enabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "OperationalMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "Enabled is equivalent to True"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "Disabled is equivalent to False."
              }
            ]
          }
        },
        "intervalSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "The self check interval.",
          "default": 30,
          "minimum": 30,
          "maximum": 300
        },
        "timeoutSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "The timeout for self check.",
          "default": 15,
          "minimum": 5,
          "maximum": 120
        }
      }
    },
    "SelfTracing": {
      "type": "object",
      "description": "Diagnostic Self tracing properties",
      "properties": {
        "mode": {
          "type": "string",
          "description": "The toggle to enable/disable self tracing.",
          "default": "Enabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "OperationalMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "Enabled is equivalent to True"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "Disabled is equivalent to False."
              }
            ]
          }
        },
        "intervalSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "The self tracing interval.",
          "default": 30,
          "minimum": 1,
          "maximum": 300
        }
      }
    },
    "ServiceAccountTokenMethod": {
      "type": "string",
      "description": "Service Account Token Method",
      "enum": [
        "ServiceAccountToken"
      ],
      "x-ms-enum": {
        "name": "ServiceAccountTokenMethod",
        "modelAsString": true,
        "values": [
          {
            "name": "ServiceAccountToken",
            "value": "ServiceAccountToken",
            "description": "ServiceAccountToken Option"
          }
        ]
      }
    },
    "ServiceType": {
      "type": "string",
      "description": "Kubernetes Service Types supported by Listener",
      "enum": [
        "ClusterIp",
        "LoadBalancer",
        "NodePort"
      ],
      "x-ms-enum": {
        "name": "ServiceType",
        "modelAsString": true,
        "values": [
          {
            "name": "ClusterIp",
            "value": "ClusterIp",
            "description": "Cluster IP Service."
          },
          {
            "name": "LoadBalancer",
            "value": "LoadBalancer",
            "description": "Load Balancer Service."
          },
          {
            "name": "NodePort",
            "value": "NodePort",
            "description": "Node Port Service."
          }
        ]
      }
    },
    "SourceSerializationFormat": {
      "type": "string",
      "description": "Serialization Format properties",
      "enum": [
        "Json"
      ],
      "x-ms-enum": {
        "name": "SourceSerializationFormat",
        "modelAsString": true,
        "values": [
          {
            "name": "Json",
            "value": "Json",
            "description": "JSON Format"
          }
        ]
      }
    },
    "StateStoreResourceDefinitionMethods": {
      "type": "string",
      "description": "StateStoreResourceDefinitionMethods methods allowed",
      "enum": [
        "Read",
        "Write",
        "ReadWrite"
      ],
      "x-ms-enum": {
        "name": "StateStoreResourceDefinitionMethods",
        "modelAsString": true,
        "values": [
          {
            "name": "Read",
            "value": "Read",
            "description": "Get/KeyNotify from Store"
          },
          {
            "name": "Write",
            "value": "Write",
            "description": "Set/Delete in Store"
          },
          {
            "name": "ReadWrite",
            "value": "ReadWrite",
            "description": "Allowed all operations on Store - Get/KeyNotify/Set/Delete"
          }
        ]
      }
    },
    "StateStoreResourceKeyTypes": {
      "type": "string",
      "description": "StateStoreResourceKeyTypes properties",
      "enum": [
        "Pattern",
        "String",
        "Binary"
      ],
      "x-ms-enum": {
        "name": "StateStoreResourceKeyTypes",
        "modelAsString": true,
        "values": [
          {
            "name": "Pattern",
            "value": "Pattern",
            "description": "Key type - pattern"
          },
          {
            "name": "String",
            "value": "String",
            "description": "Key type - string"
          },
          {
            "name": "Binary",
            "value": "Binary",
            "description": "Key type - binary"
          }
        ]
      }
    },
    "StateStoreResourceRule": {
      "type": "object",
      "description": "State Store Resource Rule properties.",
      "properties": {
        "keyType": {
          "description": "Allowed keyTypes pattern, string, binary. The key type used for matching, for example pattern tries to match the key to a glob-style pattern and string checks key is equal to value provided in keys.",
          "type": "string",
          "enum": [
            "Pattern",
            "String",
            "Binary"
          ],
          "x-ms-enum": {
            "name": "StateStoreResourceKeyTypes",
            "modelAsString": true,
            "values": [
              {
                "name": "Pattern",
                "value": "Pattern",
                "description": "Key type - pattern"
              },
              {
                "name": "String",
                "value": "String",
                "description": "Key type - string"
              },
              {
                "name": "Binary",
                "value": "Binary",
                "description": "Key type - binary"
              }
            ]
          }
        },
        "keys": {
          "type": "array",
          "description": "Give access to state store keys for the corresponding principals defined. When key type is pattern set glob-style pattern (e.g., '*', 'clients/*').",
          "items": {
            "type": "string"
          }
        },
        "method": {
          "description": "Give access for `Read`, `Write` and `ReadWrite` access level.",
          "type": "string",
          "enum": [
            "Read",
            "Write",
            "ReadWrite"
          ],
          "x-ms-enum": {
            "name": "StateStoreResourceDefinitionMethods",
            "modelAsString": true,
            "values": [
              {
                "name": "Read",
                "value": "Read",
                "description": "Get/KeyNotify from Store"
              },
              {
                "name": "Write",
                "value": "Write",
                "description": "Set/Delete in Store"
              },
              {
                "name": "ReadWrite",
                "value": "ReadWrite",
                "description": "Allowed all operations on Store - Get/KeyNotify/Set/Delete"
              }
            ]
          }
        }
      },
      "required": [
        "keyType",
        "keys",
        "method"
      ]
    },
    "SubscriberMessageDropStrategy": {
      "type": "string",
      "description": "The enum defining strategies for dropping messages from the subscriber queue.",
      "enum": [
        "None",
        "DropOldest"
      ],
      "x-ms-enum": {
        "name": "SubscriberMessageDropStrategy",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None",
            "description": "Messages are never dropped."
          },
          {
            "name": "DropOldest",
            "value": "DropOldest",
            "description": "The oldest message is dropped."
          }
        ]
      }
    },
    "SubscriberQueueLimit": {
      "type": "object",
      "description": "The settings of Subscriber Queue Limit.",
      "properties": {
        "length": {
          "type": "integer",
          "format": "int64",
          "description": "The maximum length of the queue before messages start getting dropped.",
          "minimum": 1
        },
        "strategy": {
          "type": "string",
          "description": "The strategy to use for dropping messages from the queue.",
          "default": "None",
          "enum": [
            "None",
            "DropOldest"
          ],
          "x-ms-enum": {
            "name": "SubscriberMessageDropStrategy",
            "modelAsString": true,
            "values": [
              {
                "name": "None",
                "value": "None",
                "description": "Messages are never dropped."
              },
              {
                "name": "DropOldest",
                "value": "DropOldest",
                "description": "The oldest message is dropped."
              }
            ]
          }
        }
      }
    },
    "TlsCertMethod": {
      "type": "object",
      "description": "Collection of different TLS types, NOTE- Enum at a time only one of them needs to be supported",
      "properties": {
        "mode": {
          "description": "Mode of TLS server certificate management.",
          "type": "string",
          "enum": [
            "Automatic",
            "Manual"
          ],
          "x-ms-enum": {
            "name": "TlsCertMethodMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Automatic",
                "value": "Automatic",
                "description": "Automatic TLS server certificate configuration."
              },
              {
                "name": "Manual",
                "value": "Manual",
                "description": "Manual TLS server certificate configuration."
              }
            ]
          }
        },
        "certManagerCertificateSpec": {
          "description": "Option 1 - Automatic TLS server certificate management with cert-manager.",
          "type": "object",
          "properties": {
            "duration": {
              "type": "string",
              "description": "Lifetime of certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."
            },
            "secretName": {
              "type": "string",
              "description": "Secret for storing server certificate. Any existing data will be overwritten. This is a reference to the secret through an identifying name, not the secret itself."
            },
            "renewBefore": {
              "type": "string",
              "description": "When to begin renewing certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."
            },
            "issuerRef": {
              "description": "cert-manager issuerRef.",
              "type": "object",
              "properties": {
                "group": {
                  "type": "string",
                  "description": "group of issuer.",
                  "default": "cert-manager.io"
                },
                "kind": {
                  "description": "kind of issuer (Issuer or ClusterIssuer).",
                  "type": "string",
                  "enum": [
                    "Issuer",
                    "ClusterIssuer"
                  ],
                  "x-ms-enum": {
                    "name": "CertManagerIssuerKind",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Issuer",
                        "value": "Issuer",
                        "description": "Issuer kind."
                      },
                      {
                        "name": "ClusterIssuer",
                        "value": "ClusterIssuer",
                        "description": "ClusterIssuer kind."
                      }
                    ]
                  }
                },
                "name": {
                  "type": "string",
                  "description": "name of issuer."
                }
              },
              "required": [
                "group",
                "kind",
                "name"
              ]
            },
            "privateKey": {
              "description": "Type of certificate private key.",
              "type": "object",
              "properties": {
                "algorithm": {
                  "description": "algorithm for private key.",
                  "type": "string",
                  "enum": [
                    "Ec256",
                    "Ec384",
                    "Ec521",
                    "Ed25519",
                    "Rsa2048",
                    "Rsa4096",
                    "Rsa8192"
                  ],
                  "x-ms-enum": {
                    "name": "PrivateKeyAlgorithm",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Ec256",
                        "value": "Ec256",
                        "description": "Algorithm - ec256."
                      },
                      {
                        "name": "Ec384",
                        "value": "Ec384",
                        "description": "Algorithm - ec384."
                      },
                      {
                        "name": "Ec521",
                        "value": "Ec521",
                        "description": "Algorithm - ec521."
                      },
                      {
                        "name": "Ed25519",
                        "value": "Ed25519",
                        "description": "Algorithm - ed25519."
                      },
                      {
                        "name": "Rsa2048",
                        "value": "Rsa2048",
                        "description": "Algorithm - rsa2048."
                      },
                      {
                        "name": "Rsa4096",
                        "value": "Rsa4096",
                        "description": "Algorithm - rsa4096."
                      },
                      {
                        "name": "Rsa8192",
                        "value": "Rsa8192",
                        "description": "Algorithm - rsa8192."
                      }
                    ]
                  }
                },
                "rotationPolicy": {
                  "description": "cert-manager private key rotationPolicy.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never"
                  ],
                  "x-ms-enum": {
                    "name": "PrivateKeyRotationPolicy",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Always",
                        "value": "Always",
                        "description": "Rotation Policy - Always."
                      },
                      {
                        "name": "Never",
                        "value": "Never",
                        "description": "Rotation Policy - Never."
                      }
                    ]
                  }
                }
              },
              "required": [
                "algorithm",
                "rotationPolicy"
              ]
            },
            "san": {
              "description": "Additional Subject Alternative Names (SANs) to include in the certificate.",
              "type": "object",
              "properties": {
                "dns": {
                  "type": "array",
                  "description": "DNS SANs.",
                  "default": [],
                  "items": {
                    "type": "string"
                  }
                },
                "ip": {
                  "type": "array",
                  "description": "IP address SANs.",
                  "default": [],
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "dns",
                "ip"
              ]
            }
          },
          "required": [
            "issuerRef"
          ]
        },
        "manual": {
          "description": "Option 2 - Manual TLS server certificate management through a defined secret.",
          "type": "object",
          "properties": {
            "secretRef": {
              "type": "string",
              "description": "Kubernetes secret containing an X.509 client certificate. This is a reference to the secret through an identifying name, not the secret itself."
            }
          },
          "required": [
            "secretRef"
          ]
        }
      },
      "required": [
        "mode"
      ]
    },
    "TlsCertMethodMode": {
      "type": "string",
      "description": "Broker Authentication Mode",
      "enum": [
        "Automatic",
        "Manual"
      ],
      "x-ms-enum": {
        "name": "TlsCertMethodMode",
        "modelAsString": true,
        "values": [
          {
            "name": "Automatic",
            "value": "Automatic",
            "description": "Automatic TLS server certificate configuration."
          },
          {
            "name": "Manual",
            "value": "Manual",
            "description": "Manual TLS server certificate configuration."
          }
        ]
      }
    },
    "TlsProperties": {
      "type": "object",
      "description": "Tls properties",
      "properties": {
        "mode": {
          "type": "string",
          "description": "Mode for TLS.",
          "default": "Enabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "OperationalMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "Enabled is equivalent to True"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "Disabled is equivalent to False."
              }
            ]
          }
        },
        "trustedCaCertificateConfigMapRef": {
          "type": "string",
          "description": "Trusted CA certificate config map."
        }
      }
    },
    "Traces": {
      "type": "object",
      "description": "Broker Diagnostic Trace properties",
      "properties": {
        "mode": {
          "type": "string",
          "description": "The toggle to enable/disable traces.",
          "default": "Enabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "OperationalMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "Enabled is equivalent to True"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "Disabled is equivalent to False."
              }
            ]
          }
        },
        "cacheSizeMegabytes": {
          "type": "integer",
          "format": "int32",
          "description": "The cache size in megabytes.",
          "default": 16,
          "minimum": 1,
          "maximum": 128
        },
        "selfTracing": {
          "description": "The self tracing properties.",
          "type": "object",
          "properties": {
            "mode": {
              "type": "string",
              "description": "The toggle to enable/disable self tracing.",
              "default": "Enabled",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "OperationalMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled",
                    "description": "Enabled is equivalent to True"
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "Disabled is equivalent to False."
                  }
                ]
              }
            },
            "intervalSeconds": {
              "type": "integer",
              "format": "int32",
              "description": "The self tracing interval.",
              "default": 30,
              "minimum": 1,
              "maximum": 300
            }
          }
        },
        "spanChannelCapacity": {
          "type": "integer",
          "format": "int32",
          "description": "The span channel capacity.",
          "default": 1000,
          "minimum": 1000,
          "maximum": 100000
        }
      }
    },
    "TransformationSerializationFormat": {
      "type": "string",
      "description": "Transformation Format properties",
      "enum": [
        "Delta",
        "Json",
        "Parquet"
      ],
      "x-ms-enum": {
        "name": "TransformationSerializationFormat",
        "modelAsString": true,
        "values": [
          {
            "name": "Delta",
            "value": "Delta",
            "description": "Delta Format"
          },
          {
            "name": "Json",
            "value": "Json",
            "description": "JSON Format"
          },
          {
            "name": "Parquet",
            "value": "Parquet",
            "description": "Parquet Format"
          }
        ]
      }
    },
    "VolumeClaimResourceRequirements": {
      "type": "object",
      "description": "VolumeClaimResourceRequirements properties",
      "properties": {
        "limits": {
          "type": "object",
          "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "additionalProperties": {
            "type": "string"
          }
        },
        "requests": {
          "type": "object",
          "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "additionalProperties": {
            "type": "string"
          }
        },
        "claims": {
          "type": "array",
          "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.\n\nThis is an alpha field and requires enabling the DynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
          "items": {
            "type": "object",
            "description": "VolumeClaimResourceRequirementsClaims properties.",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the resource. This must match the name of a resource in spec.resourceClaims."
              }
            },
            "required": [
              "name"
            ]
          },
          "x-ms-identifiers": []
        }
      }
    },
    "VolumeClaimResourceRequirementsClaims": {
      "type": "object",
      "description": "VolumeClaimResourceRequirementsClaims properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the resource. This must match the name of a resource in spec.resourceClaims."
        }
      },
      "required": [
        "name"
      ]
    },
    "VolumeClaimSpec": {
      "type": "object",
      "description": "VolumeClaimSpec properties",
      "properties": {
        "volumeName": {
          "type": "string",
          "description": "VolumeName is the binding reference to the PersistentVolume backing this claim."
        },
        "volumeMode": {
          "type": "string",
          "description": "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature."
        },
        "storageClassName": {
          "type": "string",
          "description": "Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"
        },
        "accessModes": {
          "type": "array",
          "description": "AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
          "items": {
            "type": "string"
          }
        },
        "dataSource": {
          "description": "This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.",
          "type": "object",
          "properties": {
            "apiGroup": {
              "type": "string",
              "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
            },
            "kind": {
              "type": "string",
              "description": "Kind is the type of resource being referenced"
            },
            "name": {
              "type": "string",
              "description": "Name is the name of resource being referenced"
            }
          },
          "required": [
            "kind",
            "name"
          ]
        },
        "dataSourceRef": {
          "description": "Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.",
          "type": "object",
          "properties": {
            "apiGroup": {
              "type": "string",
              "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."
            },
            "kind": {
              "type": "string",
              "description": "Kind is the type of resource being referenced"
            },
            "name": {
              "type": "string",
              "description": "Name is the name of resource being referenced"
            },
            "namespace": {
              "type": "string",
              "description": "Namespace is the namespace of the resource being referenced. This field is required when the resource has a namespace."
            }
          },
          "required": [
            "kind",
            "name"
          ]
        },
        "resources": {
          "description": "Resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
          "type": "object",
          "properties": {
            "limits": {
              "type": "object",
              "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
              "additionalProperties": {
                "type": "string"
              }
            },
            "requests": {
              "type": "object",
              "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
              "additionalProperties": {
                "type": "string"
              }
            },
            "claims": {
              "type": "array",
              "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.\n\nThis is an alpha field and requires enabling the DynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
              "items": {
                "type": "object",
                "description": "VolumeClaimResourceRequirementsClaims properties.",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the resource. This must match the name of a resource in spec.resourceClaims."
                  }
                },
                "required": [
                  "name"
                ]
              },
              "x-ms-identifiers": []
            }
          }
        },
        "selector": {
          "description": "A label query over volumes to consider for binding.",
          "type": "object",
          "properties": {
            "matchExpressions": {
              "type": "array",
              "description": "MatchExpressions is a list of label selector requirements. The requirements are ANDed.",
              "items": {
                "type": "object",
                "description": "VolumeClaimSpecSelectorMatchExpressions properties",
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "key is the label key that the selector applies to."
                  },
                  "operator": {
                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                    "type": "string",
                    "enum": [
                      "In",
                      "NotIn",
                      "Exists",
                      "DoesNotExist"
                    ],
                    "x-ms-enum": {
                      "name": "OperatorValues",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "In",
                          "value": "In",
                          "description": "In operator."
                        },
                        {
                          "name": "NotIn",
                          "value": "NotIn",
                          "description": "NotIn operator."
                        },
                        {
                          "name": "Exists",
                          "value": "Exists",
                          "description": "Exists operator."
                        },
                        {
                          "name": "DoesNotExist",
                          "value": "DoesNotExist",
                          "description": "DoesNotExist operator."
                        }
                      ]
                    }
                  },
                  "values": {
                    "type": "array",
                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "key",
                  "operator"
                ]
              },
              "x-ms-identifiers": []
            },
            "matchLabels": {
              "type": "object",
              "description": "MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "VolumeClaimSpecSelector": {
      "type": "object",
      "description": "VolumeClaimSpecSelector properties",
      "properties": {
        "matchExpressions": {
          "type": "array",
          "description": "MatchExpressions is a list of label selector requirements. The requirements are ANDed.",
          "items": {
            "type": "object",
            "description": "VolumeClaimSpecSelectorMatchExpressions properties",
            "properties": {
              "key": {
                "type": "string",
                "description": "key is the label key that the selector applies to."
              },
              "operator": {
                "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                "type": "string",
                "enum": [
                  "In",
                  "NotIn",
                  "Exists",
                  "DoesNotExist"
                ],
                "x-ms-enum": {
                  "name": "OperatorValues",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "In",
                      "value": "In",
                      "description": "In operator."
                    },
                    {
                      "name": "NotIn",
                      "value": "NotIn",
                      "description": "NotIn operator."
                    },
                    {
                      "name": "Exists",
                      "value": "Exists",
                      "description": "Exists operator."
                    },
                    {
                      "name": "DoesNotExist",
                      "value": "DoesNotExist",
                      "description": "DoesNotExist operator."
                    }
                  ]
                }
              },
              "values": {
                "type": "array",
                "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "key",
              "operator"
            ]
          },
          "x-ms-identifiers": []
        },
        "matchLabels": {
          "type": "object",
          "description": "MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "VolumeClaimSpecSelectorMatchExpressions": {
      "type": "object",
      "description": "VolumeClaimSpecSelectorMatchExpressions properties",
      "properties": {
        "key": {
          "type": "string",
          "description": "key is the label key that the selector applies to."
        },
        "operator": {
          "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
          "type": "string",
          "enum": [
            "In",
            "NotIn",
            "Exists",
            "DoesNotExist"
          ],
          "x-ms-enum": {
            "name": "OperatorValues",
            "modelAsString": true,
            "values": [
              {
                "name": "In",
                "value": "In",
                "description": "In operator."
              },
              {
                "name": "NotIn",
                "value": "NotIn",
                "description": "NotIn operator."
              },
              {
                "name": "Exists",
                "value": "Exists",
                "description": "Exists operator."
              },
              {
                "name": "DoesNotExist",
                "value": "DoesNotExist",
                "description": "DoesNotExist operator."
              }
            ]
          }
        },
        "values": {
          "type": "array",
          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "key",
        "operator"
      ]
    },
    "X509ManualCertificate": {
      "type": "object",
      "description": "X509 Certificate Authentication properties.",
      "properties": {
        "secretRef": {
          "type": "string",
          "description": "Kubernetes secret containing an X.509 client certificate. This is a reference to the secret through an identifying name, not the secret itself."
        }
      },
      "required": [
        "secretRef"
      ]
    },
    "x509CertificateMethod": {
      "type": "string",
      "description": "x509 Certificate Method",
      "enum": [
        "X509Certificate"
      ],
      "x-ms-enum": {
        "name": "x509CertificateMethod",
        "modelAsString": true,
        "values": [
          {
            "name": "X509Certificate",
            "value": "X509Certificate",
            "description": "x509Certificate Option"
          }
        ]
      }
    }
  },
  "parameters": {}
}