{
  "swagger": "2.0",
  "info": {
    "title": "Azure databasefleetmanager",
    "version": "2025-02-01-preview-preview",
    "description": "Azure databasefleetmanager service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/providers/Microsoft.DatabaseFleetManager/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of operations supported by the resource provider",
                  "items": {
                    "type": "object",
                    "title": "REST API Operation",
                    "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
                        "readOnly": true
                      },
                      "isDataAction": {
                        "type": "boolean",
                        "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
                        "readOnly": true
                      },
                      "display": {
                        "type": "object",
                        "description": "Localized display information for this particular operation.",
                        "properties": {
                          "provider": {
                            "type": "string",
                            "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
                            "readOnly": true
                          },
                          "resource": {
                            "type": "string",
                            "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
                            "readOnly": true
                          },
                          "operation": {
                            "type": "string",
                            "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
                            "readOnly": true
                          },
                          "description": {
                            "type": "string",
                            "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
                            "readOnly": true
                          }
                        }
                      },
                      "origin": {
                        "type": "string",
                        "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
                        "enum": [
                          "user",
                          "system",
                          "user,system"
                        ],
                        "x-ms-enum": {
                          "name": "Origin",
                          "modelAsString": true
                        },
                        "readOnly": true
                      },
                      "actionType": {
                        "type": "string",
                        "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
                        "enum": [
                          "Internal"
                        ],
                        "x-ms-enum": {
                          "name": "ActionType",
                          "modelAsString": true
                        },
                        "readOnly": true
                      }
                    }
                  },
                  "readOnly": true,
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "URL to get the next set of operation list results (if there are any).",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DatabaseFleetManager/fleets": {
      "get": {
        "operationId": "Fleets_List",
        "tags": [
          "Fleets"
        ],
        "description": "Gets all fleets in a subscription.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a Fleet list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Fleet items on this page",
                  "items": {
                    "type": "object",
                    "description": "A Database Fleet.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The fleet properties.",
                        "type": "object",
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "Fleet description.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "provisioningState": {
                            "description": "Provisioning state.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Accepted"
                            ],
                            "x-ms-enum": {
                              "name": "AzureProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "Resource is provisioning."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "Request on the resource has been accepted."
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseFleetManager/fleets": {
      "get": {
        "operationId": "Fleets_ListByResourceGroup",
        "tags": [
          "Fleets"
        ],
        "description": "Gets all fleets in a resource group.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of elements in the collection to skip.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of elements to return from the collection.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "description": "An opaque token that identifies a starting point in the collection.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a Fleet list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Fleet items on this page",
                  "items": {
                    "type": "object",
                    "description": "A Database Fleet.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "The fleet properties.",
                        "type": "object",
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "Fleet description.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "provisioningState": {
                            "description": "Provisioning state.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Accepted"
                            ],
                            "x-ms-enum": {
                              "name": "AzureProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "Resource is provisioning."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "Request on the resource has been accepted."
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseFleetManager/fleets/{fleetName}": {
      "get": {
        "operationId": "Fleets_Get",
        "tags": [
          "Fleets"
        ],
        "description": "Gets a fleet resource.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A Database Fleet.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The fleet properties.",
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "Fleet description.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "provisioningState": {
                      "description": "Provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "AzureProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is provisioning."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Request on the resource has been accepted."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Fleets_CreateOrUpdate",
        "tags": [
          "Fleets"
        ],
        "description": "Creates or updates a fleet resource.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "The fleet object to create or update.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A Database Fleet.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The fleet properties.",
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "Fleet description.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "provisioningState": {
                      "description": "Provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "AzureProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is provisioning."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Request on the resource has been accepted."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Fleet' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "A Database Fleet.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The fleet properties.",
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "Fleet description.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "provisioningState": {
                      "description": "Provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "AzureProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is provisioning."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Request on the resource has been accepted."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource 'Fleet' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "A Database Fleet.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The fleet properties.",
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "Fleet description.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "provisioningState": {
                      "description": "Provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "AzureProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is provisioning."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Request on the resource has been accepted."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Fleets_Update",
        "tags": [
          "Fleets"
        ],
        "description": "Modifies a fleet resource.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The fleet object to patch.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "An update to a Database Fleet.",
              "properties": {
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "update",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The Database Fleet properties.",
                  "x-ms-mutability": [
                    "read",
                    "update",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "Fleet description.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "provisioningState": {
                      "description": "Provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "AzureProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is provisioning."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Request on the resource has been accepted."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A Database Fleet.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "The fleet properties.",
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "Fleet description.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "provisioningState": {
                      "description": "Provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "AzureProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is provisioning."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Request on the resource has been accepted."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Fleets_Delete",
        "tags": [
          "Fleets"
        ],
        "description": "Deletes a fleet.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseFleetManager/fleets/{fleetName}/fleetspaces": {
      "get": {
        "operationId": "Fleetspaces_ListByFleet",
        "tags": [
          "Fleetspaces"
        ],
        "description": "Lists fleetspaces in a fleet.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of elements in the collection to skip.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of elements to return from the collection.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "description": "An opaque token that identifies a starting point in the collection.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a Fleetspace list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Fleetspace items on this page",
                  "items": {
                    "type": "object",
                    "description": "A fleetspace.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "A Fleetspace properties.",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "Fleetspace state.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Accepted"
                            ],
                            "x-ms-enum": {
                              "name": "AzureProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "Resource is provisioning."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "Request on the resource has been accepted."
                                }
                              ]
                            }
                          },
                          "capacityMax": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Maximum number of vCores database fleet manager is allowed to provision in the fleetspace.",
                            "x-ms-mutability": [
                              "read",
                              "update",
                              "create"
                            ]
                          },
                          "mainPrincipal": {
                            "description": "Main Microsoft Entra ID principal that has admin access to all databases in the fleetspace.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "object",
                            "properties": {
                              "login": {
                                "type": "string",
                                "description": "Login name of the main principal.",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              },
                              "applicationId": {
                                "description": "Application Id of the main principal.",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "type": "string",
                                "format": "uuid"
                              },
                              "objectId": {
                                "description": "Object Id of the main principal.",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "type": "string",
                                "format": "uuid"
                              },
                              "tenantId": {
                                "description": "Tenant Id of the main principal.",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "type": "string",
                                "format": "uuid"
                              },
                              "principalType": {
                                "description": "Principal type of the main principal.",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "type": "string",
                                "enum": [
                                  "Application",
                                  "User"
                                ],
                                "x-ms-enum": {
                                  "name": "PrincipalType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Application",
                                      "value": "Application",
                                      "description": "Application principal type."
                                    },
                                    {
                                      "name": "User",
                                      "value": "User",
                                      "description": "User principal type."
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseFleetManager/fleets/{fleetName}/fleetspaces/{fleetspaceName}": {
      "get": {
        "operationId": "Fleetspaces_Get",
        "tags": [
          "Fleetspaces"
        ],
        "description": "Gets fleetspace resource.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "fleetspaceName",
            "in": "path",
            "description": "Name of the fleetspace.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A fleetspace.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "A Fleetspace properties.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Fleetspace state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "AzureProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is provisioning."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Request on the resource has been accepted."
                          }
                        ]
                      }
                    },
                    "capacityMax": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Maximum number of vCores database fleet manager is allowed to provision in the fleetspace.",
                      "x-ms-mutability": [
                        "read",
                        "update",
                        "create"
                      ]
                    },
                    "mainPrincipal": {
                      "description": "Main Microsoft Entra ID principal that has admin access to all databases in the fleetspace.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "login": {
                          "type": "string",
                          "description": "Login name of the main principal.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "applicationId": {
                          "description": "Application Id of the main principal.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "format": "uuid"
                        },
                        "objectId": {
                          "description": "Object Id of the main principal.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "format": "uuid"
                        },
                        "tenantId": {
                          "description": "Tenant Id of the main principal.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "format": "uuid"
                        },
                        "principalType": {
                          "description": "Principal type of the main principal.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Application",
                            "User"
                          ],
                          "x-ms-enum": {
                            "name": "PrincipalType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Application",
                                "value": "Application",
                                "description": "Application principal type."
                              },
                              {
                                "name": "User",
                                "value": "User",
                                "description": "User principal type."
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Fleetspaces_CreateOrUpdate",
        "tags": [
          "Fleetspaces"
        ],
        "description": "Creates or updates a fleetspace resource.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "fleetspaceName",
            "in": "path",
            "description": "Name of the fleetspace.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "The fleet object to create or update.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A fleetspace.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "A Fleetspace properties.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Fleetspace state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "AzureProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is provisioning."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Request on the resource has been accepted."
                          }
                        ]
                      }
                    },
                    "capacityMax": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Maximum number of vCores database fleet manager is allowed to provision in the fleetspace.",
                      "x-ms-mutability": [
                        "read",
                        "update",
                        "create"
                      ]
                    },
                    "mainPrincipal": {
                      "description": "Main Microsoft Entra ID principal that has admin access to all databases in the fleetspace.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "login": {
                          "type": "string",
                          "description": "Login name of the main principal.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "applicationId": {
                          "description": "Application Id of the main principal.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "format": "uuid"
                        },
                        "objectId": {
                          "description": "Object Id of the main principal.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "format": "uuid"
                        },
                        "tenantId": {
                          "description": "Tenant Id of the main principal.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "format": "uuid"
                        },
                        "principalType": {
                          "description": "Principal type of the main principal.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Application",
                            "User"
                          ],
                          "x-ms-enum": {
                            "name": "PrincipalType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Application",
                                "value": "Application",
                                "description": "Application principal type."
                              },
                              {
                                "name": "User",
                                "value": "User",
                                "description": "User principal type."
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Fleetspace' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "A fleetspace.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "A Fleetspace properties.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Fleetspace state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "AzureProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is provisioning."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Request on the resource has been accepted."
                          }
                        ]
                      }
                    },
                    "capacityMax": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Maximum number of vCores database fleet manager is allowed to provision in the fleetspace.",
                      "x-ms-mutability": [
                        "read",
                        "update",
                        "create"
                      ]
                    },
                    "mainPrincipal": {
                      "description": "Main Microsoft Entra ID principal that has admin access to all databases in the fleetspace.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "login": {
                          "type": "string",
                          "description": "Login name of the main principal.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "applicationId": {
                          "description": "Application Id of the main principal.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "format": "uuid"
                        },
                        "objectId": {
                          "description": "Object Id of the main principal.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "format": "uuid"
                        },
                        "tenantId": {
                          "description": "Tenant Id of the main principal.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "format": "uuid"
                        },
                        "principalType": {
                          "description": "Principal type of the main principal.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Application",
                            "User"
                          ],
                          "x-ms-enum": {
                            "name": "PrincipalType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Application",
                                "value": "Application",
                                "description": "Application principal type."
                              },
                              {
                                "name": "User",
                                "value": "User",
                                "description": "User principal type."
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource 'Fleetspace' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "A fleetspace.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "A Fleetspace properties.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Fleetspace state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "AzureProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is provisioning."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Request on the resource has been accepted."
                          }
                        ]
                      }
                    },
                    "capacityMax": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Maximum number of vCores database fleet manager is allowed to provision in the fleetspace.",
                      "x-ms-mutability": [
                        "read",
                        "update",
                        "create"
                      ]
                    },
                    "mainPrincipal": {
                      "description": "Main Microsoft Entra ID principal that has admin access to all databases in the fleetspace.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "login": {
                          "type": "string",
                          "description": "Login name of the main principal.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "applicationId": {
                          "description": "Application Id of the main principal.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "format": "uuid"
                        },
                        "objectId": {
                          "description": "Object Id of the main principal.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "format": "uuid"
                        },
                        "tenantId": {
                          "description": "Tenant Id of the main principal.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "format": "uuid"
                        },
                        "principalType": {
                          "description": "Principal type of the main principal.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Application",
                            "User"
                          ],
                          "x-ms-enum": {
                            "name": "PrincipalType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Application",
                                "value": "Application",
                                "description": "Application principal type."
                              },
                              {
                                "name": "User",
                                "value": "User",
                                "description": "User principal type."
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Fleetspaces_Update",
        "tags": [
          "Fleetspaces"
        ],
        "description": "Modifies a fleetspace resource.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "fleetspaceName",
            "in": "path",
            "description": "Name of the fleetspace.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A fleetspace.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "A Fleetspace properties.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Fleetspace state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "AzureProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is provisioning."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Request on the resource has been accepted."
                          }
                        ]
                      }
                    },
                    "capacityMax": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Maximum number of vCores database fleet manager is allowed to provision in the fleetspace.",
                      "x-ms-mutability": [
                        "read",
                        "update",
                        "create"
                      ]
                    },
                    "mainPrincipal": {
                      "description": "Main Microsoft Entra ID principal that has admin access to all databases in the fleetspace.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "login": {
                          "type": "string",
                          "description": "Login name of the main principal.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "applicationId": {
                          "description": "Application Id of the main principal.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "format": "uuid"
                        },
                        "objectId": {
                          "description": "Object Id of the main principal.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "format": "uuid"
                        },
                        "tenantId": {
                          "description": "Tenant Id of the main principal.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "format": "uuid"
                        },
                        "principalType": {
                          "description": "Principal type of the main principal.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Application",
                            "User"
                          ],
                          "x-ms-enum": {
                            "name": "PrincipalType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Application",
                                "value": "Application",
                                "description": "Application principal type."
                              },
                              {
                                "name": "User",
                                "value": "User",
                                "description": "User principal type."
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A fleetspace.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "A Fleetspace properties.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Fleetspace state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "AzureProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is provisioning."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Request on the resource has been accepted."
                          }
                        ]
                      }
                    },
                    "capacityMax": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Maximum number of vCores database fleet manager is allowed to provision in the fleetspace.",
                      "x-ms-mutability": [
                        "read",
                        "update",
                        "create"
                      ]
                    },
                    "mainPrincipal": {
                      "description": "Main Microsoft Entra ID principal that has admin access to all databases in the fleetspace.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "login": {
                          "type": "string",
                          "description": "Login name of the main principal.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ]
                        },
                        "applicationId": {
                          "description": "Application Id of the main principal.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "format": "uuid"
                        },
                        "objectId": {
                          "description": "Object Id of the main principal.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "format": "uuid"
                        },
                        "tenantId": {
                          "description": "Tenant Id of the main principal.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "format": "uuid"
                        },
                        "principalType": {
                          "description": "Principal type of the main principal.",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "Application",
                            "User"
                          ],
                          "x-ms-enum": {
                            "name": "PrincipalType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Application",
                                "value": "Application",
                                "description": "Application principal type."
                              },
                              {
                                "name": "User",
                                "value": "User",
                                "description": "User principal type."
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Fleetspaces_Delete",
        "tags": [
          "Fleetspaces"
        ],
        "description": "Deletes a fleetspace.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "fleetspaceName",
            "in": "path",
            "description": "Name of the fleetspace.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseFleetManager/fleets/{fleetName}/fleetspaces/{fleetspaceName}/databases": {
      "get": {
        "operationId": "FleetDatabases_ListByFleetspace",
        "tags": [
          "FleetDatabases"
        ],
        "description": "Gets all fleet databases in a fleetspace.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "fleetspaceName",
            "in": "path",
            "description": "Name of the fleetspace.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of elements in the collection to skip.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of elements to return from the collection.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData filter expression that filters elements in the collection.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "description": "An opaque token that identifies a starting point in the collection.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a FleetDatabase list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The FleetDatabase items on this page",
                  "items": {
                    "type": "object",
                    "description": "A fleet database.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "Fleet database properties.",
                        "type": "object",
                        "properties": {
                          "originalDatabaseId": {
                            "type": "string",
                            "description": "Resource identifier for the underlying database resource.",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Database state.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Accepted"
                            ],
                            "x-ms-enum": {
                              "name": "AzureProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "Resource is provisioning."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "Request on the resource has been accepted."
                                }
                              ]
                            }
                          },
                          "createMode": {
                            "description": "Create mode. Available options: Default - Create a database. Copy - Copy the source database (source database name must be specified) PointInTimeRestore - Create a database by restoring source database from a point in time (source database name and restore from time must be specified)",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "string",
                            "enum": [
                              "Default",
                              "Copy",
                              "PointInTimeRestore"
                            ],
                            "x-ms-enum": {
                              "name": "DatabaseCreateMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Default",
                                  "value": "Default",
                                  "description": "Create a database."
                                },
                                {
                                  "name": "Copy",
                                  "value": "Copy",
                                  "description": "Copy the source database (source database name must be specified)."
                                },
                                {
                                  "name": "PointInTimeRestore",
                                  "value": "PointInTimeRestore",
                                  "description": "Create a database by restoring source database from a point in time (source database name and restore from time must be specified)."
                                }
                              ]
                            }
                          },
                          "tierName": {
                            "type": "string",
                            "description": "Name of the tier this database belongs to.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "connectionString": {
                            "type": "string",
                            "description": "Connection string to connect to the database with.",
                            "readOnly": true
                          },
                          "recoverable": {
                            "type": "boolean",
                            "description": "If true, database is recoverable.",
                            "readOnly": true
                          },
                          "restoreFromTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Restore from time when CreateMode is PointInTimeRestore.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "earliestRestoreTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Earliest restore time.",
                            "readOnly": true
                          },
                          "latestRestoreTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Latest restore time.",
                            "readOnly": true
                          },
                          "backupRetentionDays": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Backup retention in days.",
                            "readOnly": true
                          },
                          "databaseSizeGbMax": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Maximum database size in Gb.",
                            "readOnly": true
                          },
                          "sourceDatabaseName": {
                            "type": "string",
                            "description": "Source database name used when CreateMode is Copy or PointInTimeRestore.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "resourceTags": {
                            "type": "object",
                            "description": "Additional database properties to be applied as the underlying database resource tags.",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "x-ms-mutability": [
                              "read",
                              "update",
                              "create"
                            ]
                          },
                          "identity": {
                            "description": "Identity property.",
                            "x-ms-mutability": [
                              "read",
                              "update",
                              "create"
                            ],
                            "type": "object",
                            "properties": {
                              "identityType": {
                                "description": "Identity type of the main principal.",
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ],
                                "type": "string",
                                "enum": [
                                  "None",
                                  "UserAssigned"
                                ],
                                "x-ms-enum": {
                                  "name": "IdentityType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "None",
                                      "value": "None",
                                      "description": "No identity."
                                    },
                                    {
                                      "name": "UserAssigned",
                                      "value": "UserAssigned",
                                      "description": "User assigned identity."
                                    }
                                  ]
                                }
                              },
                              "userAssignedIdentities": {
                                "type": "array",
                                "description": "User identity ids",
                                "items": {
                                  "type": "object",
                                  "description": "Database Identity properties.",
                                  "properties": {
                                    "resourceId": {
                                      "type": "string",
                                      "format": "arm-id",
                                      "description": "Resource Id of the database identity.",
                                      "x-ms-mutability": [
                                        "read",
                                        "update",
                                        "create"
                                      ],
                                      "x-ms-arm-id-details": {
                                        "allowedResources": [
                                          {
                                            "type": "Microsoft.ManagedIdentity/userAssignedIdentities"
                                          }
                                        ]
                                      }
                                    },
                                    "principalId": {
                                      "description": "Principal Id of the database identity.",
                                      "x-ms-mutability": [
                                        "read",
                                        "update",
                                        "create"
                                      ],
                                      "type": "string",
                                      "format": "uuid"
                                    },
                                    "clientId": {
                                      "description": "Client Id of the database identity.",
                                      "x-ms-mutability": [
                                        "read",
                                        "update",
                                        "create"
                                      ],
                                      "type": "string",
                                      "format": "uuid"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [],
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "federatedClientId": {
                                "description": "The federated client id for the SQL Database. It is used for cross tenant CMK scenario.",
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ],
                                "type": "string",
                                "format": "uuid"
                              }
                            }
                          },
                          "transparentDataEncryption": {
                            "description": "Transparent Data Encryption properties",
                            "x-ms-mutability": [
                              "read",
                              "update",
                              "create"
                            ],
                            "type": "object",
                            "properties": {
                              "keyUri": {
                                "type": "string",
                                "format": "uri",
                                "description": "Customer Managed Key (CMK) Uri.",
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "keys": {
                                "type": "array",
                                "description": "Additional Keys",
                                "items": {
                                  "type": "string"
                                },
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              },
                              "enableAutoRotation": {
                                "type": "boolean",
                                "description": "Enable key auto rotation",
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ]
                              }
                            }
                          },
                          "collation": {
                            "type": "string",
                            "description": "Database collation.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseFleetManager/fleets/{fleetName}/fleetspaces/{fleetspaceName}/databases/{databaseName}": {
      "get": {
        "operationId": "FleetDatabases_Get",
        "tags": [
          "FleetDatabases"
        ],
        "description": "Gets a fleet database.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "fleetspaceName",
            "in": "path",
            "description": "Name of the fleetspace.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Name of the database.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A fleet database.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Fleet database properties.",
                  "type": "object",
                  "properties": {
                    "originalDatabaseId": {
                      "type": "string",
                      "description": "Resource identifier for the underlying database resource.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Database state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "AzureProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is provisioning."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Request on the resource has been accepted."
                          }
                        ]
                      }
                    },
                    "createMode": {
                      "description": "Create mode. Available options: Default - Create a database. Copy - Copy the source database (source database name must be specified) PointInTimeRestore - Create a database by restoring source database from a point in time (source database name and restore from time must be specified)",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string",
                      "enum": [
                        "Default",
                        "Copy",
                        "PointInTimeRestore"
                      ],
                      "x-ms-enum": {
                        "name": "DatabaseCreateMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Default",
                            "value": "Default",
                            "description": "Create a database."
                          },
                          {
                            "name": "Copy",
                            "value": "Copy",
                            "description": "Copy the source database (source database name must be specified)."
                          },
                          {
                            "name": "PointInTimeRestore",
                            "value": "PointInTimeRestore",
                            "description": "Create a database by restoring source database from a point in time (source database name and restore from time must be specified)."
                          }
                        ]
                      }
                    },
                    "tierName": {
                      "type": "string",
                      "description": "Name of the tier this database belongs to.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "connectionString": {
                      "type": "string",
                      "description": "Connection string to connect to the database with.",
                      "readOnly": true
                    },
                    "recoverable": {
                      "type": "boolean",
                      "description": "If true, database is recoverable.",
                      "readOnly": true
                    },
                    "restoreFromTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Restore from time when CreateMode is PointInTimeRestore.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "earliestRestoreTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Earliest restore time.",
                      "readOnly": true
                    },
                    "latestRestoreTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Latest restore time.",
                      "readOnly": true
                    },
                    "backupRetentionDays": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Backup retention in days.",
                      "readOnly": true
                    },
                    "databaseSizeGbMax": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Maximum database size in Gb.",
                      "readOnly": true
                    },
                    "sourceDatabaseName": {
                      "type": "string",
                      "description": "Source database name used when CreateMode is Copy or PointInTimeRestore.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "resourceTags": {
                      "type": "object",
                      "description": "Additional database properties to be applied as the underlying database resource tags.",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-ms-mutability": [
                        "read",
                        "update",
                        "create"
                      ]
                    },
                    "identity": {
                      "description": "Identity property.",
                      "x-ms-mutability": [
                        "read",
                        "update",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "identityType": {
                          "description": "Identity type of the main principal.",
                          "x-ms-mutability": [
                            "read",
                            "update",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "None",
                            "UserAssigned"
                          ],
                          "x-ms-enum": {
                            "name": "IdentityType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "None",
                                "value": "None",
                                "description": "No identity."
                              },
                              {
                                "name": "UserAssigned",
                                "value": "UserAssigned",
                                "description": "User assigned identity."
                              }
                            ]
                          }
                        },
                        "userAssignedIdentities": {
                          "type": "array",
                          "description": "User identity ids",
                          "items": {
                            "type": "object",
                            "description": "Database Identity properties.",
                            "properties": {
                              "resourceId": {
                                "type": "string",
                                "format": "arm-id",
                                "description": "Resource Id of the database identity.",
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ],
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.ManagedIdentity/userAssignedIdentities"
                                    }
                                  ]
                                }
                              },
                              "principalId": {
                                "description": "Principal Id of the database identity.",
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ],
                                "type": "string",
                                "format": "uuid"
                              },
                              "clientId": {
                                "description": "Client Id of the database identity.",
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ],
                                "type": "string",
                                "format": "uuid"
                              }
                            }
                          },
                          "x-ms-identifiers": [],
                          "x-ms-mutability": [
                            "read",
                            "update",
                            "create"
                          ]
                        },
                        "federatedClientId": {
                          "description": "The federated client id for the SQL Database. It is used for cross tenant CMK scenario.",
                          "x-ms-mutability": [
                            "read",
                            "update",
                            "create"
                          ],
                          "type": "string",
                          "format": "uuid"
                        }
                      }
                    },
                    "transparentDataEncryption": {
                      "description": "Transparent Data Encryption properties",
                      "x-ms-mutability": [
                        "read",
                        "update",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "keyUri": {
                          "type": "string",
                          "format": "uri",
                          "description": "Customer Managed Key (CMK) Uri.",
                          "x-ms-mutability": [
                            "read",
                            "update",
                            "create"
                          ]
                        },
                        "keys": {
                          "type": "array",
                          "description": "Additional Keys",
                          "items": {
                            "type": "string"
                          },
                          "x-ms-mutability": [
                            "read",
                            "update",
                            "create"
                          ]
                        },
                        "enableAutoRotation": {
                          "type": "boolean",
                          "description": "Enable key auto rotation",
                          "x-ms-mutability": [
                            "read",
                            "update",
                            "create"
                          ]
                        }
                      }
                    },
                    "collation": {
                      "type": "string",
                      "description": "Database collation.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "FleetDatabases_CreateOrUpdate",
        "tags": [
          "FleetDatabases"
        ],
        "description": "Creates or updates a fleet database.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "fleetspaceName",
            "in": "path",
            "description": "Name of the fleetspace.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Name of the database.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "The database object to create or update.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A fleet database.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Fleet database properties.",
                  "type": "object",
                  "properties": {
                    "originalDatabaseId": {
                      "type": "string",
                      "description": "Resource identifier for the underlying database resource.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Database state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "AzureProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is provisioning."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Request on the resource has been accepted."
                          }
                        ]
                      }
                    },
                    "createMode": {
                      "description": "Create mode. Available options: Default - Create a database. Copy - Copy the source database (source database name must be specified) PointInTimeRestore - Create a database by restoring source database from a point in time (source database name and restore from time must be specified)",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string",
                      "enum": [
                        "Default",
                        "Copy",
                        "PointInTimeRestore"
                      ],
                      "x-ms-enum": {
                        "name": "DatabaseCreateMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Default",
                            "value": "Default",
                            "description": "Create a database."
                          },
                          {
                            "name": "Copy",
                            "value": "Copy",
                            "description": "Copy the source database (source database name must be specified)."
                          },
                          {
                            "name": "PointInTimeRestore",
                            "value": "PointInTimeRestore",
                            "description": "Create a database by restoring source database from a point in time (source database name and restore from time must be specified)."
                          }
                        ]
                      }
                    },
                    "tierName": {
                      "type": "string",
                      "description": "Name of the tier this database belongs to.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "connectionString": {
                      "type": "string",
                      "description": "Connection string to connect to the database with.",
                      "readOnly": true
                    },
                    "recoverable": {
                      "type": "boolean",
                      "description": "If true, database is recoverable.",
                      "readOnly": true
                    },
                    "restoreFromTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Restore from time when CreateMode is PointInTimeRestore.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "earliestRestoreTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Earliest restore time.",
                      "readOnly": true
                    },
                    "latestRestoreTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Latest restore time.",
                      "readOnly": true
                    },
                    "backupRetentionDays": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Backup retention in days.",
                      "readOnly": true
                    },
                    "databaseSizeGbMax": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Maximum database size in Gb.",
                      "readOnly": true
                    },
                    "sourceDatabaseName": {
                      "type": "string",
                      "description": "Source database name used when CreateMode is Copy or PointInTimeRestore.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "resourceTags": {
                      "type": "object",
                      "description": "Additional database properties to be applied as the underlying database resource tags.",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-ms-mutability": [
                        "read",
                        "update",
                        "create"
                      ]
                    },
                    "identity": {
                      "description": "Identity property.",
                      "x-ms-mutability": [
                        "read",
                        "update",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "identityType": {
                          "description": "Identity type of the main principal.",
                          "x-ms-mutability": [
                            "read",
                            "update",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "None",
                            "UserAssigned"
                          ],
                          "x-ms-enum": {
                            "name": "IdentityType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "None",
                                "value": "None",
                                "description": "No identity."
                              },
                              {
                                "name": "UserAssigned",
                                "value": "UserAssigned",
                                "description": "User assigned identity."
                              }
                            ]
                          }
                        },
                        "userAssignedIdentities": {
                          "type": "array",
                          "description": "User identity ids",
                          "items": {
                            "type": "object",
                            "description": "Database Identity properties.",
                            "properties": {
                              "resourceId": {
                                "type": "string",
                                "format": "arm-id",
                                "description": "Resource Id of the database identity.",
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ],
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.ManagedIdentity/userAssignedIdentities"
                                    }
                                  ]
                                }
                              },
                              "principalId": {
                                "description": "Principal Id of the database identity.",
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ],
                                "type": "string",
                                "format": "uuid"
                              },
                              "clientId": {
                                "description": "Client Id of the database identity.",
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ],
                                "type": "string",
                                "format": "uuid"
                              }
                            }
                          },
                          "x-ms-identifiers": [],
                          "x-ms-mutability": [
                            "read",
                            "update",
                            "create"
                          ]
                        },
                        "federatedClientId": {
                          "description": "The federated client id for the SQL Database. It is used for cross tenant CMK scenario.",
                          "x-ms-mutability": [
                            "read",
                            "update",
                            "create"
                          ],
                          "type": "string",
                          "format": "uuid"
                        }
                      }
                    },
                    "transparentDataEncryption": {
                      "description": "Transparent Data Encryption properties",
                      "x-ms-mutability": [
                        "read",
                        "update",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "keyUri": {
                          "type": "string",
                          "format": "uri",
                          "description": "Customer Managed Key (CMK) Uri.",
                          "x-ms-mutability": [
                            "read",
                            "update",
                            "create"
                          ]
                        },
                        "keys": {
                          "type": "array",
                          "description": "Additional Keys",
                          "items": {
                            "type": "string"
                          },
                          "x-ms-mutability": [
                            "read",
                            "update",
                            "create"
                          ]
                        },
                        "enableAutoRotation": {
                          "type": "boolean",
                          "description": "Enable key auto rotation",
                          "x-ms-mutability": [
                            "read",
                            "update",
                            "create"
                          ]
                        }
                      }
                    },
                    "collation": {
                      "type": "string",
                      "description": "Database collation.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'FleetDatabase' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "A fleet database.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Fleet database properties.",
                  "type": "object",
                  "properties": {
                    "originalDatabaseId": {
                      "type": "string",
                      "description": "Resource identifier for the underlying database resource.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Database state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "AzureProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is provisioning."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Request on the resource has been accepted."
                          }
                        ]
                      }
                    },
                    "createMode": {
                      "description": "Create mode. Available options: Default - Create a database. Copy - Copy the source database (source database name must be specified) PointInTimeRestore - Create a database by restoring source database from a point in time (source database name and restore from time must be specified)",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string",
                      "enum": [
                        "Default",
                        "Copy",
                        "PointInTimeRestore"
                      ],
                      "x-ms-enum": {
                        "name": "DatabaseCreateMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Default",
                            "value": "Default",
                            "description": "Create a database."
                          },
                          {
                            "name": "Copy",
                            "value": "Copy",
                            "description": "Copy the source database (source database name must be specified)."
                          },
                          {
                            "name": "PointInTimeRestore",
                            "value": "PointInTimeRestore",
                            "description": "Create a database by restoring source database from a point in time (source database name and restore from time must be specified)."
                          }
                        ]
                      }
                    },
                    "tierName": {
                      "type": "string",
                      "description": "Name of the tier this database belongs to.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "connectionString": {
                      "type": "string",
                      "description": "Connection string to connect to the database with.",
                      "readOnly": true
                    },
                    "recoverable": {
                      "type": "boolean",
                      "description": "If true, database is recoverable.",
                      "readOnly": true
                    },
                    "restoreFromTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Restore from time when CreateMode is PointInTimeRestore.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "earliestRestoreTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Earliest restore time.",
                      "readOnly": true
                    },
                    "latestRestoreTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Latest restore time.",
                      "readOnly": true
                    },
                    "backupRetentionDays": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Backup retention in days.",
                      "readOnly": true
                    },
                    "databaseSizeGbMax": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Maximum database size in Gb.",
                      "readOnly": true
                    },
                    "sourceDatabaseName": {
                      "type": "string",
                      "description": "Source database name used when CreateMode is Copy or PointInTimeRestore.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "resourceTags": {
                      "type": "object",
                      "description": "Additional database properties to be applied as the underlying database resource tags.",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-ms-mutability": [
                        "read",
                        "update",
                        "create"
                      ]
                    },
                    "identity": {
                      "description": "Identity property.",
                      "x-ms-mutability": [
                        "read",
                        "update",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "identityType": {
                          "description": "Identity type of the main principal.",
                          "x-ms-mutability": [
                            "read",
                            "update",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "None",
                            "UserAssigned"
                          ],
                          "x-ms-enum": {
                            "name": "IdentityType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "None",
                                "value": "None",
                                "description": "No identity."
                              },
                              {
                                "name": "UserAssigned",
                                "value": "UserAssigned",
                                "description": "User assigned identity."
                              }
                            ]
                          }
                        },
                        "userAssignedIdentities": {
                          "type": "array",
                          "description": "User identity ids",
                          "items": {
                            "type": "object",
                            "description": "Database Identity properties.",
                            "properties": {
                              "resourceId": {
                                "type": "string",
                                "format": "arm-id",
                                "description": "Resource Id of the database identity.",
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ],
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.ManagedIdentity/userAssignedIdentities"
                                    }
                                  ]
                                }
                              },
                              "principalId": {
                                "description": "Principal Id of the database identity.",
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ],
                                "type": "string",
                                "format": "uuid"
                              },
                              "clientId": {
                                "description": "Client Id of the database identity.",
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ],
                                "type": "string",
                                "format": "uuid"
                              }
                            }
                          },
                          "x-ms-identifiers": [],
                          "x-ms-mutability": [
                            "read",
                            "update",
                            "create"
                          ]
                        },
                        "federatedClientId": {
                          "description": "The federated client id for the SQL Database. It is used for cross tenant CMK scenario.",
                          "x-ms-mutability": [
                            "read",
                            "update",
                            "create"
                          ],
                          "type": "string",
                          "format": "uuid"
                        }
                      }
                    },
                    "transparentDataEncryption": {
                      "description": "Transparent Data Encryption properties",
                      "x-ms-mutability": [
                        "read",
                        "update",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "keyUri": {
                          "type": "string",
                          "format": "uri",
                          "description": "Customer Managed Key (CMK) Uri.",
                          "x-ms-mutability": [
                            "read",
                            "update",
                            "create"
                          ]
                        },
                        "keys": {
                          "type": "array",
                          "description": "Additional Keys",
                          "items": {
                            "type": "string"
                          },
                          "x-ms-mutability": [
                            "read",
                            "update",
                            "create"
                          ]
                        },
                        "enableAutoRotation": {
                          "type": "boolean",
                          "description": "Enable key auto rotation",
                          "x-ms-mutability": [
                            "read",
                            "update",
                            "create"
                          ]
                        }
                      }
                    },
                    "collation": {
                      "type": "string",
                      "description": "Database collation.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource 'FleetDatabase' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "A fleet database.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Fleet database properties.",
                  "type": "object",
                  "properties": {
                    "originalDatabaseId": {
                      "type": "string",
                      "description": "Resource identifier for the underlying database resource.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Database state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "AzureProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is provisioning."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Request on the resource has been accepted."
                          }
                        ]
                      }
                    },
                    "createMode": {
                      "description": "Create mode. Available options: Default - Create a database. Copy - Copy the source database (source database name must be specified) PointInTimeRestore - Create a database by restoring source database from a point in time (source database name and restore from time must be specified)",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string",
                      "enum": [
                        "Default",
                        "Copy",
                        "PointInTimeRestore"
                      ],
                      "x-ms-enum": {
                        "name": "DatabaseCreateMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Default",
                            "value": "Default",
                            "description": "Create a database."
                          },
                          {
                            "name": "Copy",
                            "value": "Copy",
                            "description": "Copy the source database (source database name must be specified)."
                          },
                          {
                            "name": "PointInTimeRestore",
                            "value": "PointInTimeRestore",
                            "description": "Create a database by restoring source database from a point in time (source database name and restore from time must be specified)."
                          }
                        ]
                      }
                    },
                    "tierName": {
                      "type": "string",
                      "description": "Name of the tier this database belongs to.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "connectionString": {
                      "type": "string",
                      "description": "Connection string to connect to the database with.",
                      "readOnly": true
                    },
                    "recoverable": {
                      "type": "boolean",
                      "description": "If true, database is recoverable.",
                      "readOnly": true
                    },
                    "restoreFromTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Restore from time when CreateMode is PointInTimeRestore.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "earliestRestoreTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Earliest restore time.",
                      "readOnly": true
                    },
                    "latestRestoreTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Latest restore time.",
                      "readOnly": true
                    },
                    "backupRetentionDays": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Backup retention in days.",
                      "readOnly": true
                    },
                    "databaseSizeGbMax": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Maximum database size in Gb.",
                      "readOnly": true
                    },
                    "sourceDatabaseName": {
                      "type": "string",
                      "description": "Source database name used when CreateMode is Copy or PointInTimeRestore.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "resourceTags": {
                      "type": "object",
                      "description": "Additional database properties to be applied as the underlying database resource tags.",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-ms-mutability": [
                        "read",
                        "update",
                        "create"
                      ]
                    },
                    "identity": {
                      "description": "Identity property.",
                      "x-ms-mutability": [
                        "read",
                        "update",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "identityType": {
                          "description": "Identity type of the main principal.",
                          "x-ms-mutability": [
                            "read",
                            "update",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "None",
                            "UserAssigned"
                          ],
                          "x-ms-enum": {
                            "name": "IdentityType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "None",
                                "value": "None",
                                "description": "No identity."
                              },
                              {
                                "name": "UserAssigned",
                                "value": "UserAssigned",
                                "description": "User assigned identity."
                              }
                            ]
                          }
                        },
                        "userAssignedIdentities": {
                          "type": "array",
                          "description": "User identity ids",
                          "items": {
                            "type": "object",
                            "description": "Database Identity properties.",
                            "properties": {
                              "resourceId": {
                                "type": "string",
                                "format": "arm-id",
                                "description": "Resource Id of the database identity.",
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ],
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.ManagedIdentity/userAssignedIdentities"
                                    }
                                  ]
                                }
                              },
                              "principalId": {
                                "description": "Principal Id of the database identity.",
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ],
                                "type": "string",
                                "format": "uuid"
                              },
                              "clientId": {
                                "description": "Client Id of the database identity.",
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ],
                                "type": "string",
                                "format": "uuid"
                              }
                            }
                          },
                          "x-ms-identifiers": [],
                          "x-ms-mutability": [
                            "read",
                            "update",
                            "create"
                          ]
                        },
                        "federatedClientId": {
                          "description": "The federated client id for the SQL Database. It is used for cross tenant CMK scenario.",
                          "x-ms-mutability": [
                            "read",
                            "update",
                            "create"
                          ],
                          "type": "string",
                          "format": "uuid"
                        }
                      }
                    },
                    "transparentDataEncryption": {
                      "description": "Transparent Data Encryption properties",
                      "x-ms-mutability": [
                        "read",
                        "update",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "keyUri": {
                          "type": "string",
                          "format": "uri",
                          "description": "Customer Managed Key (CMK) Uri.",
                          "x-ms-mutability": [
                            "read",
                            "update",
                            "create"
                          ]
                        },
                        "keys": {
                          "type": "array",
                          "description": "Additional Keys",
                          "items": {
                            "type": "string"
                          },
                          "x-ms-mutability": [
                            "read",
                            "update",
                            "create"
                          ]
                        },
                        "enableAutoRotation": {
                          "type": "boolean",
                          "description": "Enable key auto rotation",
                          "x-ms-mutability": [
                            "read",
                            "update",
                            "create"
                          ]
                        }
                      }
                    },
                    "collation": {
                      "type": "string",
                      "description": "Database collation.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    }
                  }
                }
              }
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "FleetDatabases_Update",
        "tags": [
          "FleetDatabases"
        ],
        "description": "Updates a fleet database.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "fleetspaceName",
            "in": "path",
            "description": "Name of the fleetspace.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Name of the database.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The database object to patch.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A fleet database.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Fleet database properties.",
                  "type": "object",
                  "properties": {
                    "originalDatabaseId": {
                      "type": "string",
                      "description": "Resource identifier for the underlying database resource.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Database state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "AzureProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is provisioning."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Request on the resource has been accepted."
                          }
                        ]
                      }
                    },
                    "createMode": {
                      "description": "Create mode. Available options: Default - Create a database. Copy - Copy the source database (source database name must be specified) PointInTimeRestore - Create a database by restoring source database from a point in time (source database name and restore from time must be specified)",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string",
                      "enum": [
                        "Default",
                        "Copy",
                        "PointInTimeRestore"
                      ],
                      "x-ms-enum": {
                        "name": "DatabaseCreateMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Default",
                            "value": "Default",
                            "description": "Create a database."
                          },
                          {
                            "name": "Copy",
                            "value": "Copy",
                            "description": "Copy the source database (source database name must be specified)."
                          },
                          {
                            "name": "PointInTimeRestore",
                            "value": "PointInTimeRestore",
                            "description": "Create a database by restoring source database from a point in time (source database name and restore from time must be specified)."
                          }
                        ]
                      }
                    },
                    "tierName": {
                      "type": "string",
                      "description": "Name of the tier this database belongs to.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "connectionString": {
                      "type": "string",
                      "description": "Connection string to connect to the database with.",
                      "readOnly": true
                    },
                    "recoverable": {
                      "type": "boolean",
                      "description": "If true, database is recoverable.",
                      "readOnly": true
                    },
                    "restoreFromTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Restore from time when CreateMode is PointInTimeRestore.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "earliestRestoreTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Earliest restore time.",
                      "readOnly": true
                    },
                    "latestRestoreTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Latest restore time.",
                      "readOnly": true
                    },
                    "backupRetentionDays": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Backup retention in days.",
                      "readOnly": true
                    },
                    "databaseSizeGbMax": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Maximum database size in Gb.",
                      "readOnly": true
                    },
                    "sourceDatabaseName": {
                      "type": "string",
                      "description": "Source database name used when CreateMode is Copy or PointInTimeRestore.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "resourceTags": {
                      "type": "object",
                      "description": "Additional database properties to be applied as the underlying database resource tags.",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-ms-mutability": [
                        "read",
                        "update",
                        "create"
                      ]
                    },
                    "identity": {
                      "description": "Identity property.",
                      "x-ms-mutability": [
                        "read",
                        "update",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "identityType": {
                          "description": "Identity type of the main principal.",
                          "x-ms-mutability": [
                            "read",
                            "update",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "None",
                            "UserAssigned"
                          ],
                          "x-ms-enum": {
                            "name": "IdentityType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "None",
                                "value": "None",
                                "description": "No identity."
                              },
                              {
                                "name": "UserAssigned",
                                "value": "UserAssigned",
                                "description": "User assigned identity."
                              }
                            ]
                          }
                        },
                        "userAssignedIdentities": {
                          "type": "array",
                          "description": "User identity ids",
                          "items": {
                            "type": "object",
                            "description": "Database Identity properties.",
                            "properties": {
                              "resourceId": {
                                "type": "string",
                                "format": "arm-id",
                                "description": "Resource Id of the database identity.",
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ],
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.ManagedIdentity/userAssignedIdentities"
                                    }
                                  ]
                                }
                              },
                              "principalId": {
                                "description": "Principal Id of the database identity.",
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ],
                                "type": "string",
                                "format": "uuid"
                              },
                              "clientId": {
                                "description": "Client Id of the database identity.",
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ],
                                "type": "string",
                                "format": "uuid"
                              }
                            }
                          },
                          "x-ms-identifiers": [],
                          "x-ms-mutability": [
                            "read",
                            "update",
                            "create"
                          ]
                        },
                        "federatedClientId": {
                          "description": "The federated client id for the SQL Database. It is used for cross tenant CMK scenario.",
                          "x-ms-mutability": [
                            "read",
                            "update",
                            "create"
                          ],
                          "type": "string",
                          "format": "uuid"
                        }
                      }
                    },
                    "transparentDataEncryption": {
                      "description": "Transparent Data Encryption properties",
                      "x-ms-mutability": [
                        "read",
                        "update",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "keyUri": {
                          "type": "string",
                          "format": "uri",
                          "description": "Customer Managed Key (CMK) Uri.",
                          "x-ms-mutability": [
                            "read",
                            "update",
                            "create"
                          ]
                        },
                        "keys": {
                          "type": "array",
                          "description": "Additional Keys",
                          "items": {
                            "type": "string"
                          },
                          "x-ms-mutability": [
                            "read",
                            "update",
                            "create"
                          ]
                        },
                        "enableAutoRotation": {
                          "type": "boolean",
                          "description": "Enable key auto rotation",
                          "x-ms-mutability": [
                            "read",
                            "update",
                            "create"
                          ]
                        }
                      }
                    },
                    "collation": {
                      "type": "string",
                      "description": "Database collation.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A fleet database.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Fleet database properties.",
                  "type": "object",
                  "properties": {
                    "originalDatabaseId": {
                      "type": "string",
                      "description": "Resource identifier for the underlying database resource.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Database state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "AzureProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is provisioning."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Request on the resource has been accepted."
                          }
                        ]
                      }
                    },
                    "createMode": {
                      "description": "Create mode. Available options: Default - Create a database. Copy - Copy the source database (source database name must be specified) PointInTimeRestore - Create a database by restoring source database from a point in time (source database name and restore from time must be specified)",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string",
                      "enum": [
                        "Default",
                        "Copy",
                        "PointInTimeRestore"
                      ],
                      "x-ms-enum": {
                        "name": "DatabaseCreateMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Default",
                            "value": "Default",
                            "description": "Create a database."
                          },
                          {
                            "name": "Copy",
                            "value": "Copy",
                            "description": "Copy the source database (source database name must be specified)."
                          },
                          {
                            "name": "PointInTimeRestore",
                            "value": "PointInTimeRestore",
                            "description": "Create a database by restoring source database from a point in time (source database name and restore from time must be specified)."
                          }
                        ]
                      }
                    },
                    "tierName": {
                      "type": "string",
                      "description": "Name of the tier this database belongs to.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "connectionString": {
                      "type": "string",
                      "description": "Connection string to connect to the database with.",
                      "readOnly": true
                    },
                    "recoverable": {
                      "type": "boolean",
                      "description": "If true, database is recoverable.",
                      "readOnly": true
                    },
                    "restoreFromTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Restore from time when CreateMode is PointInTimeRestore.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "earliestRestoreTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Earliest restore time.",
                      "readOnly": true
                    },
                    "latestRestoreTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Latest restore time.",
                      "readOnly": true
                    },
                    "backupRetentionDays": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Backup retention in days.",
                      "readOnly": true
                    },
                    "databaseSizeGbMax": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Maximum database size in Gb.",
                      "readOnly": true
                    },
                    "sourceDatabaseName": {
                      "type": "string",
                      "description": "Source database name used when CreateMode is Copy or PointInTimeRestore.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "resourceTags": {
                      "type": "object",
                      "description": "Additional database properties to be applied as the underlying database resource tags.",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-ms-mutability": [
                        "read",
                        "update",
                        "create"
                      ]
                    },
                    "identity": {
                      "description": "Identity property.",
                      "x-ms-mutability": [
                        "read",
                        "update",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "identityType": {
                          "description": "Identity type of the main principal.",
                          "x-ms-mutability": [
                            "read",
                            "update",
                            "create"
                          ],
                          "type": "string",
                          "enum": [
                            "None",
                            "UserAssigned"
                          ],
                          "x-ms-enum": {
                            "name": "IdentityType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "None",
                                "value": "None",
                                "description": "No identity."
                              },
                              {
                                "name": "UserAssigned",
                                "value": "UserAssigned",
                                "description": "User assigned identity."
                              }
                            ]
                          }
                        },
                        "userAssignedIdentities": {
                          "type": "array",
                          "description": "User identity ids",
                          "items": {
                            "type": "object",
                            "description": "Database Identity properties.",
                            "properties": {
                              "resourceId": {
                                "type": "string",
                                "format": "arm-id",
                                "description": "Resource Id of the database identity.",
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ],
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.ManagedIdentity/userAssignedIdentities"
                                    }
                                  ]
                                }
                              },
                              "principalId": {
                                "description": "Principal Id of the database identity.",
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ],
                                "type": "string",
                                "format": "uuid"
                              },
                              "clientId": {
                                "description": "Client Id of the database identity.",
                                "x-ms-mutability": [
                                  "read",
                                  "update",
                                  "create"
                                ],
                                "type": "string",
                                "format": "uuid"
                              }
                            }
                          },
                          "x-ms-identifiers": [],
                          "x-ms-mutability": [
                            "read",
                            "update",
                            "create"
                          ]
                        },
                        "federatedClientId": {
                          "description": "The federated client id for the SQL Database. It is used for cross tenant CMK scenario.",
                          "x-ms-mutability": [
                            "read",
                            "update",
                            "create"
                          ],
                          "type": "string",
                          "format": "uuid"
                        }
                      }
                    },
                    "transparentDataEncryption": {
                      "description": "Transparent Data Encryption properties",
                      "x-ms-mutability": [
                        "read",
                        "update",
                        "create"
                      ],
                      "type": "object",
                      "properties": {
                        "keyUri": {
                          "type": "string",
                          "format": "uri",
                          "description": "Customer Managed Key (CMK) Uri.",
                          "x-ms-mutability": [
                            "read",
                            "update",
                            "create"
                          ]
                        },
                        "keys": {
                          "type": "array",
                          "description": "Additional Keys",
                          "items": {
                            "type": "string"
                          },
                          "x-ms-mutability": [
                            "read",
                            "update",
                            "create"
                          ]
                        },
                        "enableAutoRotation": {
                          "type": "boolean",
                          "description": "Enable key auto rotation",
                          "x-ms-mutability": [
                            "read",
                            "update",
                            "create"
                          ]
                        }
                      }
                    },
                    "collation": {
                      "type": "string",
                      "description": "Database collation.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "FleetDatabases_Delete",
        "tags": [
          "FleetDatabases"
        ],
        "description": "Deletes a fleet database.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "fleetspaceName",
            "in": "path",
            "description": "Name of the fleetspace.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Name of the database.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseFleetManager/fleets/{fleetName}/fleetspaces/{fleetspaceName}/databases/{databaseName}/changeTier": {
      "post": {
        "operationId": "FleetDatabases_ChangeTier",
        "tags": [
          "FleetDatabases"
        ],
        "description": "Moves database to a different tier.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "fleetspaceName",
            "in": "path",
            "description": "Name of the fleetspace.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Name of the database.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The details of the change tier operation.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A database change tier definition.",
              "properties": {
                "targetTierName": {
                  "type": "string",
                  "description": "A target tier name.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseFleetManager/fleets/{fleetName}/fleetspaces/{fleetspaceName}/databases/{databaseName}/rename": {
      "post": {
        "operationId": "FleetDatabases_Rename",
        "tags": [
          "FleetDatabases"
        ],
        "description": "Renames a database.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "fleetspaceName",
            "in": "path",
            "description": "Name of the fleetspace.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Name of the database.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The details of the rename operation.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A database rename definition.",
              "properties": {
                "newName": {
                  "type": "string",
                  "description": "New database name.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseFleetManager/fleets/{fleetName}/fleetspaces/{fleetspaceName}/databases/{databaseName}/revert": {
      "post": {
        "operationId": "FleetDatabases_Revert",
        "tags": [
          "FleetDatabases"
        ],
        "description": "Revert a database transparent data encryption (TDE).",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "fleetspaceName",
            "in": "path",
            "description": "Name of the fleetspace.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Name of the database.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseFleetManager/fleets/{fleetName}/fleetspaces/{fleetspaceName}/firewallRules": {
      "get": {
        "operationId": "FirewallRules_ListByFleetspace",
        "tags": [
          "FirewallRules"
        ],
        "description": "Gets all firewall rules in a fleetspace.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "fleetspaceName",
            "in": "path",
            "description": "Name of the fleetspace.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of elements in the collection to skip.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of elements to return from the collection.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "description": "An opaque token that identifies a starting point in the collection.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a FirewallRule list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The FirewallRule items on this page",
                  "items": {
                    "type": "object",
                    "description": "A firewall rule.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "A Firewall rule properties.",
                        "type": "object",
                        "properties": {
                          "startIpAddress": {
                            "type": "string",
                            "description": "Start IP address.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "endIpAddress": {
                            "type": "string",
                            "description": "End IP address.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "provisioningState": {
                            "description": "Provisioning state.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Accepted"
                            ],
                            "x-ms-enum": {
                              "name": "AzureProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "Resource is provisioning."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "Request on the resource has been accepted."
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseFleetManager/fleets/{fleetName}/fleetspaces/{fleetspaceName}/firewallRules/{firewallRuleName}": {
      "get": {
        "operationId": "FirewallRules_Get",
        "tags": [
          "FirewallRules"
        ],
        "description": "Gets a firewall rule.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "fleetspaceName",
            "in": "path",
            "description": "Name of the fleetspace.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "firewallRuleName",
            "in": "path",
            "description": "Name of the firewall rule.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A firewall rule.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "A Firewall rule properties.",
                  "type": "object",
                  "properties": {
                    "startIpAddress": {
                      "type": "string",
                      "description": "Start IP address.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "endIpAddress": {
                      "type": "string",
                      "description": "End IP address.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "provisioningState": {
                      "description": "Provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "AzureProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is provisioning."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Request on the resource has been accepted."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "FirewallRules_CreateOrUpdate",
        "tags": [
          "FirewallRules"
        ],
        "description": "Creates or updates a firewall rule.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "fleetspaceName",
            "in": "path",
            "description": "Name of the fleetspace.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "firewallRuleName",
            "in": "path",
            "description": "Name of the firewall rule.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "The firewall rule object to create or update.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A firewall rule.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "A Firewall rule properties.",
                  "type": "object",
                  "properties": {
                    "startIpAddress": {
                      "type": "string",
                      "description": "Start IP address.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "endIpAddress": {
                      "type": "string",
                      "description": "End IP address.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "provisioningState": {
                      "description": "Provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "AzureProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is provisioning."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Request on the resource has been accepted."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'FirewallRule' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "A firewall rule.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "A Firewall rule properties.",
                  "type": "object",
                  "properties": {
                    "startIpAddress": {
                      "type": "string",
                      "description": "Start IP address.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "endIpAddress": {
                      "type": "string",
                      "description": "End IP address.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "provisioningState": {
                      "description": "Provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "AzureProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is provisioning."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Request on the resource has been accepted."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource 'FirewallRule' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "A firewall rule.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "A Firewall rule properties.",
                  "type": "object",
                  "properties": {
                    "startIpAddress": {
                      "type": "string",
                      "description": "Start IP address.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "endIpAddress": {
                      "type": "string",
                      "description": "End IP address.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "provisioningState": {
                      "description": "Provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "AzureProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is provisioning."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Request on the resource has been accepted."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "FirewallRules_Delete",
        "tags": [
          "FirewallRules"
        ],
        "description": "Deletes a firewall rule.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "fleetspaceName",
            "in": "path",
            "description": "Name of the fleetspace.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "firewallRuleName",
            "in": "path",
            "description": "Name of the firewall rule.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseFleetManager/fleets/{fleetName}/fleetspaces/{fleetspaceName}/registerServer": {
      "post": {
        "operationId": "Fleetspaces_RegisterServer",
        "tags": [
          "Fleetspaces"
        ],
        "description": "Migrates an existing logical server into fleet.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "fleetspaceName",
            "in": "path",
            "description": "Name of the fleetspace.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The details of the register server operation.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Server registration definition.",
              "properties": {
                "tierName": {
                  "type": "string",
                  "description": "Destination tier name.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "sourceSubscriptionId": {
                  "type": "string",
                  "description": "Source subscription id.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "sourceResourceGroupName": {
                  "type": "string",
                  "description": "Source resource group name.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "sourceServerName": {
                  "type": "string",
                  "description": "Source SQL Server name.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "destinationTierOverrides": {
                  "type": "array",
                  "description": "Destination tier overrides.",
                  "items": {
                    "type": "object",
                    "description": "A destination tier override.",
                    "properties": {
                      "resourceType": {
                        "description": "Resource type.",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "type": "string",
                        "enum": [
                          "Database",
                          "Pool"
                        ],
                        "x-ms-enum": {
                          "name": "ResourceType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Database",
                              "value": "Database",
                              "description": "Database resource type."
                            },
                            {
                              "name": "Pool",
                              "value": "Pool",
                              "description": "Elastic pool resource type."
                            }
                          ]
                        }
                      },
                      "tierName": {
                        "type": "string",
                        "description": "Destination tier name.",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "resourceName": {
                        "type": "string",
                        "description": "Resource name.",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      }
                    },
                    "required": [
                      "resourceType",
                      "tierName",
                      "resourceName"
                    ]
                  },
                  "x-ms-identifiers": [],
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseFleetManager/fleets/{fleetName}/fleetspaces/{fleetspaceName}/unregister": {
      "post": {
        "operationId": "Fleetspaces_Unregister",
        "tags": [
          "Fleetspaces"
        ],
        "description": "Unregisters all databases from a fleetspace",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "fleetspaceName",
            "in": "path",
            "description": "Name of the fleetspace.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseFleetManager/fleets/{fleetName}/tiers": {
      "get": {
        "operationId": "FleetTiers_ListByFleet",
        "tags": [
          "FleetTiers"
        ],
        "description": "List tiers in a fleet.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "The number of elements in the collection to skip.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of elements to return from the collection.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "description": "An opaque token that identifies a starting point in the collection.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a FleetTier list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The FleetTier items on this page",
                  "items": {
                    "type": "object",
                    "description": "A SQL Database Fleet tier.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "A Fleet tier properties.",
                        "type": "object",
                        "properties": {
                          "disabled": {
                            "type": "boolean",
                            "description": "If true, tier is disabled.",
                            "readOnly": true
                          },
                          "serverless": {
                            "type": "boolean",
                            "description": "If true, serverless resources are provisioned in the tier.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "pooled": {
                            "type": "boolean",
                            "description": "If true, databases are pooled.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "serviceTier": {
                            "type": "string",
                            "description": "Service tier of provisioned resources. Supported values: GeneralPurpose, Hyperscale.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "family": {
                            "type": "string",
                            "description": "Family of provisioned resources, for example Gen5.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "capacity": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Capacity of provisioned resources in the tier, in units matching the specified service tier, for example vCore for GeneralPurpose.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "poolNumOfDatabasesMax": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Maximum number of databases per pool.",
                            "x-ms-mutability": [
                              "read",
                              "update",
                              "create"
                            ]
                          },
                          "highAvailabilityReplicaCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Number of high availability replicas for databases in this tier.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "zoneRedundancy": {
                            "description": "Enable zone redundancy for all databases in this tier.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "type": "string",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "ZoneRedundancy",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled",
                                  "description": "Zone redundancy enabled."
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled",
                                  "description": "Zone redundancy disabled."
                                }
                              ]
                            }
                          },
                          "databaseCapacityMin": {
                            "type": "number",
                            "format": "double",
                            "description": "Minimum allocated capacity per database, in units matching the specified service tier.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "databaseCapacityMax": {
                            "type": "number",
                            "format": "double",
                            "description": "Maximum allocated capacity per database, in units matching the specified service tier.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "databaseSizeGbMax": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Maximum database size in Gb.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "provisioningState": {
                            "description": "Provisioning state.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Accepted"
                            ],
                            "x-ms-enum": {
                              "name": "AzureProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "Resource is provisioning."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "Request on the resource has been accepted."
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseFleetManager/fleets/{fleetName}/tiers/{tierName}": {
      "get": {
        "operationId": "FleetTiers_Get",
        "tags": [
          "FleetTiers"
        ],
        "description": "Gets a tier resource.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "tierName",
            "in": "path",
            "description": "Name of the tier.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A SQL Database Fleet tier.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "A Fleet tier properties.",
                  "type": "object",
                  "properties": {
                    "disabled": {
                      "type": "boolean",
                      "description": "If true, tier is disabled.",
                      "readOnly": true
                    },
                    "serverless": {
                      "type": "boolean",
                      "description": "If true, serverless resources are provisioned in the tier.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "pooled": {
                      "type": "boolean",
                      "description": "If true, databases are pooled.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "serviceTier": {
                      "type": "string",
                      "description": "Service tier of provisioned resources. Supported values: GeneralPurpose, Hyperscale.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "family": {
                      "type": "string",
                      "description": "Family of provisioned resources, for example Gen5.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Capacity of provisioned resources in the tier, in units matching the specified service tier, for example vCore for GeneralPurpose.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "poolNumOfDatabasesMax": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Maximum number of databases per pool.",
                      "x-ms-mutability": [
                        "read",
                        "update",
                        "create"
                      ]
                    },
                    "highAvailabilityReplicaCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Number of high availability replicas for databases in this tier.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "zoneRedundancy": {
                      "description": "Enable zone redundancy for all databases in this tier.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "ZoneRedundancy",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "Zone redundancy enabled."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "Zone redundancy disabled."
                          }
                        ]
                      }
                    },
                    "databaseCapacityMin": {
                      "type": "number",
                      "format": "double",
                      "description": "Minimum allocated capacity per database, in units matching the specified service tier.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "databaseCapacityMax": {
                      "type": "number",
                      "format": "double",
                      "description": "Maximum allocated capacity per database, in units matching the specified service tier.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "databaseSizeGbMax": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Maximum database size in Gb.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "provisioningState": {
                      "description": "Provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "AzureProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is provisioning."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Request on the resource has been accepted."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "FleetTiers_CreateOrUpdate",
        "tags": [
          "FleetTiers"
        ],
        "description": "Creates or updates a tier.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "tierName",
            "in": "path",
            "description": "Name of the tier.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "The tier object to create or update.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A SQL Database Fleet tier.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "A Fleet tier properties.",
                  "type": "object",
                  "properties": {
                    "disabled": {
                      "type": "boolean",
                      "description": "If true, tier is disabled.",
                      "readOnly": true
                    },
                    "serverless": {
                      "type": "boolean",
                      "description": "If true, serverless resources are provisioned in the tier.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "pooled": {
                      "type": "boolean",
                      "description": "If true, databases are pooled.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "serviceTier": {
                      "type": "string",
                      "description": "Service tier of provisioned resources. Supported values: GeneralPurpose, Hyperscale.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "family": {
                      "type": "string",
                      "description": "Family of provisioned resources, for example Gen5.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Capacity of provisioned resources in the tier, in units matching the specified service tier, for example vCore for GeneralPurpose.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "poolNumOfDatabasesMax": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Maximum number of databases per pool.",
                      "x-ms-mutability": [
                        "read",
                        "update",
                        "create"
                      ]
                    },
                    "highAvailabilityReplicaCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Number of high availability replicas for databases in this tier.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "zoneRedundancy": {
                      "description": "Enable zone redundancy for all databases in this tier.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "ZoneRedundancy",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "Zone redundancy enabled."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "Zone redundancy disabled."
                          }
                        ]
                      }
                    },
                    "databaseCapacityMin": {
                      "type": "number",
                      "format": "double",
                      "description": "Minimum allocated capacity per database, in units matching the specified service tier.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "databaseCapacityMax": {
                      "type": "number",
                      "format": "double",
                      "description": "Maximum allocated capacity per database, in units matching the specified service tier.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "databaseSizeGbMax": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Maximum database size in Gb.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "provisioningState": {
                      "description": "Provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "AzureProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is provisioning."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Request on the resource has been accepted."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'FleetTier' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "A SQL Database Fleet tier.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "A Fleet tier properties.",
                  "type": "object",
                  "properties": {
                    "disabled": {
                      "type": "boolean",
                      "description": "If true, tier is disabled.",
                      "readOnly": true
                    },
                    "serverless": {
                      "type": "boolean",
                      "description": "If true, serverless resources are provisioned in the tier.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "pooled": {
                      "type": "boolean",
                      "description": "If true, databases are pooled.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "serviceTier": {
                      "type": "string",
                      "description": "Service tier of provisioned resources. Supported values: GeneralPurpose, Hyperscale.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "family": {
                      "type": "string",
                      "description": "Family of provisioned resources, for example Gen5.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Capacity of provisioned resources in the tier, in units matching the specified service tier, for example vCore for GeneralPurpose.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "poolNumOfDatabasesMax": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Maximum number of databases per pool.",
                      "x-ms-mutability": [
                        "read",
                        "update",
                        "create"
                      ]
                    },
                    "highAvailabilityReplicaCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Number of high availability replicas for databases in this tier.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "zoneRedundancy": {
                      "description": "Enable zone redundancy for all databases in this tier.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "ZoneRedundancy",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "Zone redundancy enabled."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "Zone redundancy disabled."
                          }
                        ]
                      }
                    },
                    "databaseCapacityMin": {
                      "type": "number",
                      "format": "double",
                      "description": "Minimum allocated capacity per database, in units matching the specified service tier.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "databaseCapacityMax": {
                      "type": "number",
                      "format": "double",
                      "description": "Maximum allocated capacity per database, in units matching the specified service tier.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "databaseSizeGbMax": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Maximum database size in Gb.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "provisioningState": {
                      "description": "Provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "AzureProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is provisioning."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Request on the resource has been accepted."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource 'FleetTier' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "A SQL Database Fleet tier.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "A Fleet tier properties.",
                  "type": "object",
                  "properties": {
                    "disabled": {
                      "type": "boolean",
                      "description": "If true, tier is disabled.",
                      "readOnly": true
                    },
                    "serverless": {
                      "type": "boolean",
                      "description": "If true, serverless resources are provisioned in the tier.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "pooled": {
                      "type": "boolean",
                      "description": "If true, databases are pooled.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "serviceTier": {
                      "type": "string",
                      "description": "Service tier of provisioned resources. Supported values: GeneralPurpose, Hyperscale.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "family": {
                      "type": "string",
                      "description": "Family of provisioned resources, for example Gen5.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Capacity of provisioned resources in the tier, in units matching the specified service tier, for example vCore for GeneralPurpose.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "poolNumOfDatabasesMax": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Maximum number of databases per pool.",
                      "x-ms-mutability": [
                        "read",
                        "update",
                        "create"
                      ]
                    },
                    "highAvailabilityReplicaCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Number of high availability replicas for databases in this tier.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "zoneRedundancy": {
                      "description": "Enable zone redundancy for all databases in this tier.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "ZoneRedundancy",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "Zone redundancy enabled."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "Zone redundancy disabled."
                          }
                        ]
                      }
                    },
                    "databaseCapacityMin": {
                      "type": "number",
                      "format": "double",
                      "description": "Minimum allocated capacity per database, in units matching the specified service tier.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "databaseCapacityMax": {
                      "type": "number",
                      "format": "double",
                      "description": "Maximum allocated capacity per database, in units matching the specified service tier.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "databaseSizeGbMax": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Maximum database size in Gb.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "provisioningState": {
                      "description": "Provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "AzureProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is provisioning."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Request on the resource has been accepted."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "FleetTiers_Update",
        "tags": [
          "FleetTiers"
        ],
        "description": "Updates a tier.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "tierName",
            "in": "path",
            "description": "Name of the tier.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A SQL Database Fleet tier.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "A Fleet tier properties.",
                  "type": "object",
                  "properties": {
                    "disabled": {
                      "type": "boolean",
                      "description": "If true, tier is disabled.",
                      "readOnly": true
                    },
                    "serverless": {
                      "type": "boolean",
                      "description": "If true, serverless resources are provisioned in the tier.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "pooled": {
                      "type": "boolean",
                      "description": "If true, databases are pooled.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "serviceTier": {
                      "type": "string",
                      "description": "Service tier of provisioned resources. Supported values: GeneralPurpose, Hyperscale.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "family": {
                      "type": "string",
                      "description": "Family of provisioned resources, for example Gen5.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Capacity of provisioned resources in the tier, in units matching the specified service tier, for example vCore for GeneralPurpose.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "poolNumOfDatabasesMax": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Maximum number of databases per pool.",
                      "x-ms-mutability": [
                        "read",
                        "update",
                        "create"
                      ]
                    },
                    "highAvailabilityReplicaCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Number of high availability replicas for databases in this tier.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "zoneRedundancy": {
                      "description": "Enable zone redundancy for all databases in this tier.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "ZoneRedundancy",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "Zone redundancy enabled."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "Zone redundancy disabled."
                          }
                        ]
                      }
                    },
                    "databaseCapacityMin": {
                      "type": "number",
                      "format": "double",
                      "description": "Minimum allocated capacity per database, in units matching the specified service tier.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "databaseCapacityMax": {
                      "type": "number",
                      "format": "double",
                      "description": "Maximum allocated capacity per database, in units matching the specified service tier.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "databaseSizeGbMax": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Maximum database size in Gb.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "provisioningState": {
                      "description": "Provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "AzureProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is provisioning."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Request on the resource has been accepted."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A SQL Database Fleet tier.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "A Fleet tier properties.",
                  "type": "object",
                  "properties": {
                    "disabled": {
                      "type": "boolean",
                      "description": "If true, tier is disabled.",
                      "readOnly": true
                    },
                    "serverless": {
                      "type": "boolean",
                      "description": "If true, serverless resources are provisioned in the tier.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "pooled": {
                      "type": "boolean",
                      "description": "If true, databases are pooled.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "serviceTier": {
                      "type": "string",
                      "description": "Service tier of provisioned resources. Supported values: GeneralPurpose, Hyperscale.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "family": {
                      "type": "string",
                      "description": "Family of provisioned resources, for example Gen5.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Capacity of provisioned resources in the tier, in units matching the specified service tier, for example vCore for GeneralPurpose.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "poolNumOfDatabasesMax": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Maximum number of databases per pool.",
                      "x-ms-mutability": [
                        "read",
                        "update",
                        "create"
                      ]
                    },
                    "highAvailabilityReplicaCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Number of high availability replicas for databases in this tier.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "zoneRedundancy": {
                      "description": "Enable zone redundancy for all databases in this tier.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "ZoneRedundancy",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "Zone redundancy enabled."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "Zone redundancy disabled."
                          }
                        ]
                      }
                    },
                    "databaseCapacityMin": {
                      "type": "number",
                      "format": "double",
                      "description": "Minimum allocated capacity per database, in units matching the specified service tier.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "databaseCapacityMax": {
                      "type": "number",
                      "format": "double",
                      "description": "Maximum allocated capacity per database, in units matching the specified service tier.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "databaseSizeGbMax": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Maximum database size in Gb.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "provisioningState": {
                      "description": "Provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "AzureProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is provisioning."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Request on the resource has been accepted."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "FleetTiers_Delete",
        "tags": [
          "FleetTiers"
        ],
        "description": "Deletes a tier.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "tierName",
            "in": "path",
            "description": "Name of the tier.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseFleetManager/fleets/{fleetName}/tiers/{tierName}/disable": {
      "post": {
        "operationId": "FleetTiers_Disable",
        "tags": [
          "FleetTiers"
        ],
        "description": "Disables a tier.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Name of the database fleet.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          },
          {
            "name": "tierName",
            "in": "path",
            "description": "Name of the tier.",
            "required": true,
            "type": "string",
            "pattern": "^.+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A SQL Database Fleet tier.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "A Fleet tier properties.",
                  "type": "object",
                  "properties": {
                    "disabled": {
                      "type": "boolean",
                      "description": "If true, tier is disabled.",
                      "readOnly": true
                    },
                    "serverless": {
                      "type": "boolean",
                      "description": "If true, serverless resources are provisioned in the tier.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "pooled": {
                      "type": "boolean",
                      "description": "If true, databases are pooled.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "serviceTier": {
                      "type": "string",
                      "description": "Service tier of provisioned resources. Supported values: GeneralPurpose, Hyperscale.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "family": {
                      "type": "string",
                      "description": "Family of provisioned resources, for example Gen5.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Capacity of provisioned resources in the tier, in units matching the specified service tier, for example vCore for GeneralPurpose.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "poolNumOfDatabasesMax": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Maximum number of databases per pool.",
                      "x-ms-mutability": [
                        "read",
                        "update",
                        "create"
                      ]
                    },
                    "highAvailabilityReplicaCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Number of high availability replicas for databases in this tier.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "zoneRedundancy": {
                      "description": "Enable zone redundancy for all databases in this tier.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "ZoneRedundancy",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enabled",
                            "value": "Enabled",
                            "description": "Zone redundancy enabled."
                          },
                          {
                            "name": "Disabled",
                            "value": "Disabled",
                            "description": "Zone redundancy disabled."
                          }
                        ]
                      }
                    },
                    "databaseCapacityMin": {
                      "type": "number",
                      "format": "double",
                      "description": "Minimum allocated capacity per database, in units matching the specified service tier.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "databaseCapacityMax": {
                      "type": "number",
                      "format": "double",
                      "description": "Maximum allocated capacity per database, in units matching the specified service tier.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "databaseSizeGbMax": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Maximum database size in Gb.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "provisioningState": {
                      "description": "Provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "AzureProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "Resource is provisioning."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Request on the resource has been accepted."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Azure.Core.uuid": {
      "type": "string",
      "format": "uuid",
      "description": "Universally Unique Identifier"
    },
    "AzureProvisioningState": {
      "type": "string",
      "description": "The provisioning state of the resource.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Provisioning",
        "Accepted"
      ],
      "x-ms-enum": {
        "name": "AzureProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Provisioning",
            "value": "Provisioning",
            "description": "Resource is provisioning."
          },
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "Request on the resource has been accepted."
          }
        ]
      },
      "readOnly": true
    },
    "DatabaseChangeTierProperties": {
      "type": "object",
      "description": "A database change tier definition.",
      "properties": {
        "targetTierName": {
          "type": "string",
          "description": "A target tier name.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "DatabaseCreateMode": {
      "type": "string",
      "description": "Create mode. Available options: Default - Create a database. Copy - Copy the source database (source database name must be specified) PointInTimeRestore - Create a database by restoring source database from a point in time (source database name and restore from time must be specified)",
      "enum": [
        "Default",
        "Copy",
        "PointInTimeRestore"
      ],
      "x-ms-enum": {
        "name": "DatabaseCreateMode",
        "modelAsString": true,
        "values": [
          {
            "name": "Default",
            "value": "Default",
            "description": "Create a database."
          },
          {
            "name": "Copy",
            "value": "Copy",
            "description": "Copy the source database (source database name must be specified)."
          },
          {
            "name": "PointInTimeRestore",
            "value": "PointInTimeRestore",
            "description": "Create a database by restoring source database from a point in time (source database name and restore from time must be specified)."
          }
        ]
      }
    },
    "DatabaseIdentity": {
      "type": "object",
      "description": "Database Identity properties.",
      "properties": {
        "resourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Resource Id of the database identity.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ],
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.ManagedIdentity/userAssignedIdentities"
              }
            ]
          }
        },
        "principalId": {
          "description": "Principal Id of the database identity.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ],
          "type": "string",
          "format": "uuid"
        },
        "clientId": {
          "description": "Client Id of the database identity.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ],
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "DatabaseRenameProperties": {
      "type": "object",
      "description": "A database rename definition.",
      "properties": {
        "newName": {
          "type": "string",
          "description": "New database name.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "DestinationTierOverride": {
      "type": "object",
      "description": "A destination tier override.",
      "properties": {
        "resourceType": {
          "description": "Resource type.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "string",
          "enum": [
            "Database",
            "Pool"
          ],
          "x-ms-enum": {
            "name": "ResourceType",
            "modelAsString": true,
            "values": [
              {
                "name": "Database",
                "value": "Database",
                "description": "Database resource type."
              },
              {
                "name": "Pool",
                "value": "Pool",
                "description": "Elastic pool resource type."
              }
            ]
          }
        },
        "tierName": {
          "type": "string",
          "description": "Destination tier name.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "resourceName": {
          "type": "string",
          "description": "Resource name.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "resourceType",
        "tierName",
        "resourceName"
      ]
    },
    "FirewallRule": {
      "type": "object",
      "description": "A firewall rule.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "A Firewall rule properties.",
          "type": "object",
          "properties": {
            "startIpAddress": {
              "type": "string",
              "description": "Start IP address.",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "endIpAddress": {
              "type": "string",
              "description": "End IP address.",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "provisioningState": {
              "description": "Provisioning state.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Accepted"
              ],
              "x-ms-enum": {
                "name": "AzureProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "Resource is provisioning."
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "Request on the resource has been accepted."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "FirewallRuleListResult": {
      "type": "object",
      "description": "The response of a FirewallRule list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The FirewallRule items on this page",
          "items": {
            "type": "object",
            "description": "A firewall rule.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "A Firewall rule properties.",
                "type": "object",
                "properties": {
                  "startIpAddress": {
                    "type": "string",
                    "description": "Start IP address.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "endIpAddress": {
                    "type": "string",
                    "description": "End IP address.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "provisioningState": {
                    "description": "Provisioning state.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Provisioning",
                      "Accepted"
                    ],
                    "x-ms-enum": {
                      "name": "AzureProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Provisioning",
                          "value": "Provisioning",
                          "description": "Resource is provisioning."
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "Request on the resource has been accepted."
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "FirewallRuleProperties": {
      "type": "object",
      "description": "A Firewall rule properties.",
      "properties": {
        "startIpAddress": {
          "type": "string",
          "description": "Start IP address.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "endIpAddress": {
          "type": "string",
          "description": "End IP address.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "provisioningState": {
          "description": "Provisioning state.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Accepted"
          ],
          "x-ms-enum": {
            "name": "AzureProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Provisioning",
                "value": "Provisioning",
                "description": "Resource is provisioning."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "Request on the resource has been accepted."
              }
            ]
          }
        }
      }
    },
    "Fleet": {
      "type": "object",
      "description": "A Database Fleet.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "description": "The fleet properties.",
          "type": "object",
          "properties": {
            "description": {
              "type": "string",
              "description": "Fleet description.",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "provisioningState": {
              "description": "Provisioning state.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Accepted"
              ],
              "x-ms-enum": {
                "name": "AzureProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "Resource is provisioning."
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "Request on the resource has been accepted."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "FleetDatabase": {
      "type": "object",
      "description": "A fleet database.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "Fleet database properties.",
          "type": "object",
          "properties": {
            "originalDatabaseId": {
              "type": "string",
              "description": "Resource identifier for the underlying database resource.",
              "readOnly": true
            },
            "provisioningState": {
              "description": "Database state.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Accepted"
              ],
              "x-ms-enum": {
                "name": "AzureProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "Resource is provisioning."
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "Request on the resource has been accepted."
                  }
                ]
              }
            },
            "createMode": {
              "description": "Create mode. Available options: Default - Create a database. Copy - Copy the source database (source database name must be specified) PointInTimeRestore - Create a database by restoring source database from a point in time (source database name and restore from time must be specified)",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "string",
              "enum": [
                "Default",
                "Copy",
                "PointInTimeRestore"
              ],
              "x-ms-enum": {
                "name": "DatabaseCreateMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Default",
                    "value": "Default",
                    "description": "Create a database."
                  },
                  {
                    "name": "Copy",
                    "value": "Copy",
                    "description": "Copy the source database (source database name must be specified)."
                  },
                  {
                    "name": "PointInTimeRestore",
                    "value": "PointInTimeRestore",
                    "description": "Create a database by restoring source database from a point in time (source database name and restore from time must be specified)."
                  }
                ]
              }
            },
            "tierName": {
              "type": "string",
              "description": "Name of the tier this database belongs to.",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "connectionString": {
              "type": "string",
              "description": "Connection string to connect to the database with.",
              "readOnly": true
            },
            "recoverable": {
              "type": "boolean",
              "description": "If true, database is recoverable.",
              "readOnly": true
            },
            "restoreFromTime": {
              "type": "string",
              "format": "date-time",
              "description": "Restore from time when CreateMode is PointInTimeRestore.",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "earliestRestoreTime": {
              "type": "string",
              "format": "date-time",
              "description": "Earliest restore time.",
              "readOnly": true
            },
            "latestRestoreTime": {
              "type": "string",
              "format": "date-time",
              "description": "Latest restore time.",
              "readOnly": true
            },
            "backupRetentionDays": {
              "type": "integer",
              "format": "int32",
              "description": "Backup retention in days.",
              "readOnly": true
            },
            "databaseSizeGbMax": {
              "type": "integer",
              "format": "int32",
              "description": "Maximum database size in Gb.",
              "readOnly": true
            },
            "sourceDatabaseName": {
              "type": "string",
              "description": "Source database name used when CreateMode is Copy or PointInTimeRestore.",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "resourceTags": {
              "type": "object",
              "description": "Additional database properties to be applied as the underlying database resource tags.",
              "additionalProperties": {
                "type": "string"
              },
              "x-ms-mutability": [
                "read",
                "update",
                "create"
              ]
            },
            "identity": {
              "description": "Identity property.",
              "x-ms-mutability": [
                "read",
                "update",
                "create"
              ],
              "type": "object",
              "properties": {
                "identityType": {
                  "description": "Identity type of the main principal.",
                  "x-ms-mutability": [
                    "read",
                    "update",
                    "create"
                  ],
                  "type": "string",
                  "enum": [
                    "None",
                    "UserAssigned"
                  ],
                  "x-ms-enum": {
                    "name": "IdentityType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "None",
                        "value": "None",
                        "description": "No identity."
                      },
                      {
                        "name": "UserAssigned",
                        "value": "UserAssigned",
                        "description": "User assigned identity."
                      }
                    ]
                  }
                },
                "userAssignedIdentities": {
                  "type": "array",
                  "description": "User identity ids",
                  "items": {
                    "type": "object",
                    "description": "Database Identity properties.",
                    "properties": {
                      "resourceId": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Resource Id of the database identity.",
                        "x-ms-mutability": [
                          "read",
                          "update",
                          "create"
                        ],
                        "x-ms-arm-id-details": {
                          "allowedResources": [
                            {
                              "type": "Microsoft.ManagedIdentity/userAssignedIdentities"
                            }
                          ]
                        }
                      },
                      "principalId": {
                        "description": "Principal Id of the database identity.",
                        "x-ms-mutability": [
                          "read",
                          "update",
                          "create"
                        ],
                        "type": "string",
                        "format": "uuid"
                      },
                      "clientId": {
                        "description": "Client Id of the database identity.",
                        "x-ms-mutability": [
                          "read",
                          "update",
                          "create"
                        ],
                        "type": "string",
                        "format": "uuid"
                      }
                    }
                  },
                  "x-ms-identifiers": [],
                  "x-ms-mutability": [
                    "read",
                    "update",
                    "create"
                  ]
                },
                "federatedClientId": {
                  "description": "The federated client id for the SQL Database. It is used for cross tenant CMK scenario.",
                  "x-ms-mutability": [
                    "read",
                    "update",
                    "create"
                  ],
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "transparentDataEncryption": {
              "description": "Transparent Data Encryption properties",
              "x-ms-mutability": [
                "read",
                "update",
                "create"
              ],
              "type": "object",
              "properties": {
                "keyUri": {
                  "type": "string",
                  "format": "uri",
                  "description": "Customer Managed Key (CMK) Uri.",
                  "x-ms-mutability": [
                    "read",
                    "update",
                    "create"
                  ]
                },
                "keys": {
                  "type": "array",
                  "description": "Additional Keys",
                  "items": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "update",
                    "create"
                  ]
                },
                "enableAutoRotation": {
                  "type": "boolean",
                  "description": "Enable key auto rotation",
                  "x-ms-mutability": [
                    "read",
                    "update",
                    "create"
                  ]
                }
              }
            },
            "collation": {
              "type": "string",
              "description": "Database collation.",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            }
          }
        }
      }
    },
    "FleetDatabaseFilterParameters": {
      "type": "object",
      "description": "A database filter parameters.",
      "properties": {
        "tierName": {
          "type": "string",
          "description": "Filter on database tier name.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "FleetDatabaseListResult": {
      "type": "object",
      "description": "The response of a FleetDatabase list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The FleetDatabase items on this page",
          "items": {
            "type": "object",
            "description": "A fleet database.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "Fleet database properties.",
                "type": "object",
                "properties": {
                  "originalDatabaseId": {
                    "type": "string",
                    "description": "Resource identifier for the underlying database resource.",
                    "readOnly": true
                  },
                  "provisioningState": {
                    "description": "Database state.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Provisioning",
                      "Accepted"
                    ],
                    "x-ms-enum": {
                      "name": "AzureProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Provisioning",
                          "value": "Provisioning",
                          "description": "Resource is provisioning."
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "Request on the resource has been accepted."
                        }
                      ]
                    }
                  },
                  "createMode": {
                    "description": "Create mode. Available options: Default - Create a database. Copy - Copy the source database (source database name must be specified) PointInTimeRestore - Create a database by restoring source database from a point in time (source database name and restore from time must be specified)",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "type": "string",
                    "enum": [
                      "Default",
                      "Copy",
                      "PointInTimeRestore"
                    ],
                    "x-ms-enum": {
                      "name": "DatabaseCreateMode",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Default",
                          "value": "Default",
                          "description": "Create a database."
                        },
                        {
                          "name": "Copy",
                          "value": "Copy",
                          "description": "Copy the source database (source database name must be specified)."
                        },
                        {
                          "name": "PointInTimeRestore",
                          "value": "PointInTimeRestore",
                          "description": "Create a database by restoring source database from a point in time (source database name and restore from time must be specified)."
                        }
                      ]
                    }
                  },
                  "tierName": {
                    "type": "string",
                    "description": "Name of the tier this database belongs to.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "connectionString": {
                    "type": "string",
                    "description": "Connection string to connect to the database with.",
                    "readOnly": true
                  },
                  "recoverable": {
                    "type": "boolean",
                    "description": "If true, database is recoverable.",
                    "readOnly": true
                  },
                  "restoreFromTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Restore from time when CreateMode is PointInTimeRestore.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "earliestRestoreTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Earliest restore time.",
                    "readOnly": true
                  },
                  "latestRestoreTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Latest restore time.",
                    "readOnly": true
                  },
                  "backupRetentionDays": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Backup retention in days.",
                    "readOnly": true
                  },
                  "databaseSizeGbMax": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Maximum database size in Gb.",
                    "readOnly": true
                  },
                  "sourceDatabaseName": {
                    "type": "string",
                    "description": "Source database name used when CreateMode is Copy or PointInTimeRestore.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "resourceTags": {
                    "type": "object",
                    "description": "Additional database properties to be applied as the underlying database resource tags.",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "x-ms-mutability": [
                      "read",
                      "update",
                      "create"
                    ]
                  },
                  "identity": {
                    "description": "Identity property.",
                    "x-ms-mutability": [
                      "read",
                      "update",
                      "create"
                    ],
                    "type": "object",
                    "properties": {
                      "identityType": {
                        "description": "Identity type of the main principal.",
                        "x-ms-mutability": [
                          "read",
                          "update",
                          "create"
                        ],
                        "type": "string",
                        "enum": [
                          "None",
                          "UserAssigned"
                        ],
                        "x-ms-enum": {
                          "name": "IdentityType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "None",
                              "value": "None",
                              "description": "No identity."
                            },
                            {
                              "name": "UserAssigned",
                              "value": "UserAssigned",
                              "description": "User assigned identity."
                            }
                          ]
                        }
                      },
                      "userAssignedIdentities": {
                        "type": "array",
                        "description": "User identity ids",
                        "items": {
                          "type": "object",
                          "description": "Database Identity properties.",
                          "properties": {
                            "resourceId": {
                              "type": "string",
                              "format": "arm-id",
                              "description": "Resource Id of the database identity.",
                              "x-ms-mutability": [
                                "read",
                                "update",
                                "create"
                              ],
                              "x-ms-arm-id-details": {
                                "allowedResources": [
                                  {
                                    "type": "Microsoft.ManagedIdentity/userAssignedIdentities"
                                  }
                                ]
                              }
                            },
                            "principalId": {
                              "description": "Principal Id of the database identity.",
                              "x-ms-mutability": [
                                "read",
                                "update",
                                "create"
                              ],
                              "type": "string",
                              "format": "uuid"
                            },
                            "clientId": {
                              "description": "Client Id of the database identity.",
                              "x-ms-mutability": [
                                "read",
                                "update",
                                "create"
                              ],
                              "type": "string",
                              "format": "uuid"
                            }
                          }
                        },
                        "x-ms-identifiers": [],
                        "x-ms-mutability": [
                          "read",
                          "update",
                          "create"
                        ]
                      },
                      "federatedClientId": {
                        "description": "The federated client id for the SQL Database. It is used for cross tenant CMK scenario.",
                        "x-ms-mutability": [
                          "read",
                          "update",
                          "create"
                        ],
                        "type": "string",
                        "format": "uuid"
                      }
                    }
                  },
                  "transparentDataEncryption": {
                    "description": "Transparent Data Encryption properties",
                    "x-ms-mutability": [
                      "read",
                      "update",
                      "create"
                    ],
                    "type": "object",
                    "properties": {
                      "keyUri": {
                        "type": "string",
                        "format": "uri",
                        "description": "Customer Managed Key (CMK) Uri.",
                        "x-ms-mutability": [
                          "read",
                          "update",
                          "create"
                        ]
                      },
                      "keys": {
                        "type": "array",
                        "description": "Additional Keys",
                        "items": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "update",
                          "create"
                        ]
                      },
                      "enableAutoRotation": {
                        "type": "boolean",
                        "description": "Enable key auto rotation",
                        "x-ms-mutability": [
                          "read",
                          "update",
                          "create"
                        ]
                      }
                    }
                  },
                  "collation": {
                    "type": "string",
                    "description": "Database collation.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "FleetDatabaseProperties": {
      "type": "object",
      "description": "Fleet database properties.",
      "properties": {
        "originalDatabaseId": {
          "type": "string",
          "description": "Resource identifier for the underlying database resource.",
          "readOnly": true
        },
        "provisioningState": {
          "description": "Database state.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Accepted"
          ],
          "x-ms-enum": {
            "name": "AzureProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Provisioning",
                "value": "Provisioning",
                "description": "Resource is provisioning."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "Request on the resource has been accepted."
              }
            ]
          }
        },
        "createMode": {
          "description": "Create mode. Available options: Default - Create a database. Copy - Copy the source database (source database name must be specified) PointInTimeRestore - Create a database by restoring source database from a point in time (source database name and restore from time must be specified)",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "string",
          "enum": [
            "Default",
            "Copy",
            "PointInTimeRestore"
          ],
          "x-ms-enum": {
            "name": "DatabaseCreateMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Default",
                "value": "Default",
                "description": "Create a database."
              },
              {
                "name": "Copy",
                "value": "Copy",
                "description": "Copy the source database (source database name must be specified)."
              },
              {
                "name": "PointInTimeRestore",
                "value": "PointInTimeRestore",
                "description": "Create a database by restoring source database from a point in time (source database name and restore from time must be specified)."
              }
            ]
          }
        },
        "tierName": {
          "type": "string",
          "description": "Name of the tier this database belongs to.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "connectionString": {
          "type": "string",
          "description": "Connection string to connect to the database with.",
          "readOnly": true
        },
        "recoverable": {
          "type": "boolean",
          "description": "If true, database is recoverable.",
          "readOnly": true
        },
        "restoreFromTime": {
          "type": "string",
          "format": "date-time",
          "description": "Restore from time when CreateMode is PointInTimeRestore.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "earliestRestoreTime": {
          "type": "string",
          "format": "date-time",
          "description": "Earliest restore time.",
          "readOnly": true
        },
        "latestRestoreTime": {
          "type": "string",
          "format": "date-time",
          "description": "Latest restore time.",
          "readOnly": true
        },
        "backupRetentionDays": {
          "type": "integer",
          "format": "int32",
          "description": "Backup retention in days.",
          "readOnly": true
        },
        "databaseSizeGbMax": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum database size in Gb.",
          "readOnly": true
        },
        "sourceDatabaseName": {
          "type": "string",
          "description": "Source database name used when CreateMode is Copy or PointInTimeRestore.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "resourceTags": {
          "type": "object",
          "description": "Additional database properties to be applied as the underlying database resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "identity": {
          "description": "Identity property.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ],
          "type": "object",
          "properties": {
            "identityType": {
              "description": "Identity type of the main principal.",
              "x-ms-mutability": [
                "read",
                "update",
                "create"
              ],
              "type": "string",
              "enum": [
                "None",
                "UserAssigned"
              ],
              "x-ms-enum": {
                "name": "IdentityType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "None",
                    "value": "None",
                    "description": "No identity."
                  },
                  {
                    "name": "UserAssigned",
                    "value": "UserAssigned",
                    "description": "User assigned identity."
                  }
                ]
              }
            },
            "userAssignedIdentities": {
              "type": "array",
              "description": "User identity ids",
              "items": {
                "type": "object",
                "description": "Database Identity properties.",
                "properties": {
                  "resourceId": {
                    "type": "string",
                    "format": "arm-id",
                    "description": "Resource Id of the database identity.",
                    "x-ms-mutability": [
                      "read",
                      "update",
                      "create"
                    ],
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.ManagedIdentity/userAssignedIdentities"
                        }
                      ]
                    }
                  },
                  "principalId": {
                    "description": "Principal Id of the database identity.",
                    "x-ms-mutability": [
                      "read",
                      "update",
                      "create"
                    ],
                    "type": "string",
                    "format": "uuid"
                  },
                  "clientId": {
                    "description": "Client Id of the database identity.",
                    "x-ms-mutability": [
                      "read",
                      "update",
                      "create"
                    ],
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              "x-ms-identifiers": [],
              "x-ms-mutability": [
                "read",
                "update",
                "create"
              ]
            },
            "federatedClientId": {
              "description": "The federated client id for the SQL Database. It is used for cross tenant CMK scenario.",
              "x-ms-mutability": [
                "read",
                "update",
                "create"
              ],
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "transparentDataEncryption": {
          "description": "Transparent Data Encryption properties",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ],
          "type": "object",
          "properties": {
            "keyUri": {
              "type": "string",
              "format": "uri",
              "description": "Customer Managed Key (CMK) Uri.",
              "x-ms-mutability": [
                "read",
                "update",
                "create"
              ]
            },
            "keys": {
              "type": "array",
              "description": "Additional Keys",
              "items": {
                "type": "string"
              },
              "x-ms-mutability": [
                "read",
                "update",
                "create"
              ]
            },
            "enableAutoRotation": {
              "type": "boolean",
              "description": "Enable key auto rotation",
              "x-ms-mutability": [
                "read",
                "update",
                "create"
              ]
            }
          }
        },
        "collation": {
          "type": "string",
          "description": "Database collation.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "FleetListResult": {
      "type": "object",
      "description": "The response of a Fleet list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Fleet items on this page",
          "items": {
            "type": "object",
            "description": "A Database Fleet.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "description": "The fleet properties.",
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Fleet description.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "provisioningState": {
                    "description": "Provisioning state.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Provisioning",
                      "Accepted"
                    ],
                    "x-ms-enum": {
                      "name": "AzureProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Provisioning",
                          "value": "Provisioning",
                          "description": "Resource is provisioning."
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "Request on the resource has been accepted."
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "FleetProperties": {
      "type": "object",
      "description": "The Database Fleet properties.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Fleet description.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "provisioningState": {
          "description": "Provisioning state.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Accepted"
          ],
          "x-ms-enum": {
            "name": "AzureProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Provisioning",
                "value": "Provisioning",
                "description": "Resource is provisioning."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "Request on the resource has been accepted."
              }
            ]
          }
        }
      }
    },
    "FleetTier": {
      "type": "object",
      "description": "A SQL Database Fleet tier.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "A Fleet tier properties.",
          "type": "object",
          "properties": {
            "disabled": {
              "type": "boolean",
              "description": "If true, tier is disabled.",
              "readOnly": true
            },
            "serverless": {
              "type": "boolean",
              "description": "If true, serverless resources are provisioned in the tier.",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "pooled": {
              "type": "boolean",
              "description": "If true, databases are pooled.",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "serviceTier": {
              "type": "string",
              "description": "Service tier of provisioned resources. Supported values: GeneralPurpose, Hyperscale.",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "family": {
              "type": "string",
              "description": "Family of provisioned resources, for example Gen5.",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "capacity": {
              "type": "integer",
              "format": "int32",
              "description": "Capacity of provisioned resources in the tier, in units matching the specified service tier, for example vCore for GeneralPurpose.",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "poolNumOfDatabasesMax": {
              "type": "integer",
              "format": "int32",
              "description": "Maximum number of databases per pool.",
              "x-ms-mutability": [
                "read",
                "update",
                "create"
              ]
            },
            "highAvailabilityReplicaCount": {
              "type": "integer",
              "format": "int32",
              "description": "Number of high availability replicas for databases in this tier.",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "zoneRedundancy": {
              "description": "Enable zone redundancy for all databases in this tier.",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "ZoneRedundancy",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled",
                    "description": "Zone redundancy enabled."
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "Zone redundancy disabled."
                  }
                ]
              }
            },
            "databaseCapacityMin": {
              "type": "number",
              "format": "double",
              "description": "Minimum allocated capacity per database, in units matching the specified service tier.",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "databaseCapacityMax": {
              "type": "number",
              "format": "double",
              "description": "Maximum allocated capacity per database, in units matching the specified service tier.",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "databaseSizeGbMax": {
              "type": "integer",
              "format": "int32",
              "description": "Maximum database size in Gb.",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "provisioningState": {
              "description": "Provisioning state.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Accepted"
              ],
              "x-ms-enum": {
                "name": "AzureProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "Resource is provisioning."
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "Request on the resource has been accepted."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "FleetTierListResult": {
      "type": "object",
      "description": "The response of a FleetTier list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The FleetTier items on this page",
          "items": {
            "type": "object",
            "description": "A SQL Database Fleet tier.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "A Fleet tier properties.",
                "type": "object",
                "properties": {
                  "disabled": {
                    "type": "boolean",
                    "description": "If true, tier is disabled.",
                    "readOnly": true
                  },
                  "serverless": {
                    "type": "boolean",
                    "description": "If true, serverless resources are provisioned in the tier.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "pooled": {
                    "type": "boolean",
                    "description": "If true, databases are pooled.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "serviceTier": {
                    "type": "string",
                    "description": "Service tier of provisioned resources. Supported values: GeneralPurpose, Hyperscale.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "family": {
                    "type": "string",
                    "description": "Family of provisioned resources, for example Gen5.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "capacity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Capacity of provisioned resources in the tier, in units matching the specified service tier, for example vCore for GeneralPurpose.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "poolNumOfDatabasesMax": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Maximum number of databases per pool.",
                    "x-ms-mutability": [
                      "read",
                      "update",
                      "create"
                    ]
                  },
                  "highAvailabilityReplicaCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of high availability replicas for databases in this tier.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "zoneRedundancy": {
                    "description": "Enable zone redundancy for all databases in this tier.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "type": "string",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "name": "ZoneRedundancy",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Enabled",
                          "value": "Enabled",
                          "description": "Zone redundancy enabled."
                        },
                        {
                          "name": "Disabled",
                          "value": "Disabled",
                          "description": "Zone redundancy disabled."
                        }
                      ]
                    }
                  },
                  "databaseCapacityMin": {
                    "type": "number",
                    "format": "double",
                    "description": "Minimum allocated capacity per database, in units matching the specified service tier.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "databaseCapacityMax": {
                    "type": "number",
                    "format": "double",
                    "description": "Maximum allocated capacity per database, in units matching the specified service tier.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "databaseSizeGbMax": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Maximum database size in Gb.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "provisioningState": {
                    "description": "Provisioning state.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Provisioning",
                      "Accepted"
                    ],
                    "x-ms-enum": {
                      "name": "AzureProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Provisioning",
                          "value": "Provisioning",
                          "description": "Resource is provisioning."
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "Request on the resource has been accepted."
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "FleetTierProperties": {
      "type": "object",
      "description": "A Fleet tier properties.",
      "properties": {
        "disabled": {
          "type": "boolean",
          "description": "If true, tier is disabled.",
          "readOnly": true
        },
        "serverless": {
          "type": "boolean",
          "description": "If true, serverless resources are provisioned in the tier.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "pooled": {
          "type": "boolean",
          "description": "If true, databases are pooled.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "serviceTier": {
          "type": "string",
          "description": "Service tier of provisioned resources. Supported values: GeneralPurpose, Hyperscale.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "family": {
          "type": "string",
          "description": "Family of provisioned resources, for example Gen5.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "Capacity of provisioned resources in the tier, in units matching the specified service tier, for example vCore for GeneralPurpose.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "poolNumOfDatabasesMax": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of databases per pool.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "highAvailabilityReplicaCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of high availability replicas for databases in this tier.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "zoneRedundancy": {
          "description": "Enable zone redundancy for all databases in this tier.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "ZoneRedundancy",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "Zone redundancy enabled."
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "Zone redundancy disabled."
              }
            ]
          }
        },
        "databaseCapacityMin": {
          "type": "number",
          "format": "double",
          "description": "Minimum allocated capacity per database, in units matching the specified service tier.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "databaseCapacityMax": {
          "type": "number",
          "format": "double",
          "description": "Maximum allocated capacity per database, in units matching the specified service tier.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "databaseSizeGbMax": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum database size in Gb.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "provisioningState": {
          "description": "Provisioning state.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Accepted"
          ],
          "x-ms-enum": {
            "name": "AzureProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Provisioning",
                "value": "Provisioning",
                "description": "Resource is provisioning."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "Request on the resource has been accepted."
              }
            ]
          }
        }
      }
    },
    "FleetUpdate": {
      "type": "object",
      "description": "An update to a Database Fleet.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "properties": {
          "description": "The Database Fleet properties.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ],
          "type": "object",
          "properties": {
            "description": {
              "type": "string",
              "description": "Fleet description.",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "provisioningState": {
              "description": "Provisioning state.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Accepted"
              ],
              "x-ms-enum": {
                "name": "AzureProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "Resource is provisioning."
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "Request on the resource has been accepted."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "Fleetspace": {
      "type": "object",
      "description": "A fleetspace.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "A Fleetspace properties.",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "Fleetspace state.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Accepted"
              ],
              "x-ms-enum": {
                "name": "AzureProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "Resource is provisioning."
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "Request on the resource has been accepted."
                  }
                ]
              }
            },
            "capacityMax": {
              "type": "integer",
              "format": "int32",
              "description": "Maximum number of vCores database fleet manager is allowed to provision in the fleetspace.",
              "x-ms-mutability": [
                "read",
                "update",
                "create"
              ]
            },
            "mainPrincipal": {
              "description": "Main Microsoft Entra ID principal that has admin access to all databases in the fleetspace.",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "object",
              "properties": {
                "login": {
                  "type": "string",
                  "description": "Login name of the main principal.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "applicationId": {
                  "description": "Application Id of the main principal.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "string",
                  "format": "uuid"
                },
                "objectId": {
                  "description": "Object Id of the main principal.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "string",
                  "format": "uuid"
                },
                "tenantId": {
                  "description": "Tenant Id of the main principal.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "string",
                  "format": "uuid"
                },
                "principalType": {
                  "description": "Principal type of the main principal.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "string",
                  "enum": [
                    "Application",
                    "User"
                  ],
                  "x-ms-enum": {
                    "name": "PrincipalType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Application",
                        "value": "Application",
                        "description": "Application principal type."
                      },
                      {
                        "name": "User",
                        "value": "User",
                        "description": "User principal type."
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "FleetspaceListResult": {
      "type": "object",
      "description": "The response of a Fleetspace list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Fleetspace items on this page",
          "items": {
            "type": "object",
            "description": "A fleetspace.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "A Fleetspace properties.",
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "Fleetspace state.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Provisioning",
                      "Accepted"
                    ],
                    "x-ms-enum": {
                      "name": "AzureProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Provisioning",
                          "value": "Provisioning",
                          "description": "Resource is provisioning."
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "Request on the resource has been accepted."
                        }
                      ]
                    }
                  },
                  "capacityMax": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Maximum number of vCores database fleet manager is allowed to provision in the fleetspace.",
                    "x-ms-mutability": [
                      "read",
                      "update",
                      "create"
                    ]
                  },
                  "mainPrincipal": {
                    "description": "Main Microsoft Entra ID principal that has admin access to all databases in the fleetspace.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "type": "object",
                    "properties": {
                      "login": {
                        "type": "string",
                        "description": "Login name of the main principal.",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "applicationId": {
                        "description": "Application Id of the main principal.",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "type": "string",
                        "format": "uuid"
                      },
                      "objectId": {
                        "description": "Object Id of the main principal.",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "type": "string",
                        "format": "uuid"
                      },
                      "tenantId": {
                        "description": "Tenant Id of the main principal.",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "type": "string",
                        "format": "uuid"
                      },
                      "principalType": {
                        "description": "Principal type of the main principal.",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "type": "string",
                        "enum": [
                          "Application",
                          "User"
                        ],
                        "x-ms-enum": {
                          "name": "PrincipalType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Application",
                              "value": "Application",
                              "description": "Application principal type."
                            },
                            {
                              "name": "User",
                              "value": "User",
                              "description": "User principal type."
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "FleetspaceProperties": {
      "type": "object",
      "description": "A Fleetspace properties.",
      "properties": {
        "provisioningState": {
          "description": "Fleetspace state.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Accepted"
          ],
          "x-ms-enum": {
            "name": "AzureProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Provisioning",
                "value": "Provisioning",
                "description": "Resource is provisioning."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "Request on the resource has been accepted."
              }
            ]
          }
        },
        "capacityMax": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of vCores database fleet manager is allowed to provision in the fleetspace.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "mainPrincipal": {
          "description": "Main Microsoft Entra ID principal that has admin access to all databases in the fleetspace.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "object",
          "properties": {
            "login": {
              "type": "string",
              "description": "Login name of the main principal.",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "applicationId": {
              "description": "Application Id of the main principal.",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "string",
              "format": "uuid"
            },
            "objectId": {
              "description": "Object Id of the main principal.",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "string",
              "format": "uuid"
            },
            "tenantId": {
              "description": "Tenant Id of the main principal.",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "string",
              "format": "uuid"
            },
            "principalType": {
              "description": "Principal type of the main principal.",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "string",
              "enum": [
                "Application",
                "User"
              ],
              "x-ms-enum": {
                "name": "PrincipalType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Application",
                    "value": "Application",
                    "description": "Application principal type."
                  },
                  {
                    "name": "User",
                    "value": "User",
                    "description": "User principal type."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "Identity": {
      "type": "object",
      "description": "Database Identity.",
      "properties": {
        "identityType": {
          "description": "Identity type of the main principal.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ],
          "type": "string",
          "enum": [
            "None",
            "UserAssigned"
          ],
          "x-ms-enum": {
            "name": "IdentityType",
            "modelAsString": true,
            "values": [
              {
                "name": "None",
                "value": "None",
                "description": "No identity."
              },
              {
                "name": "UserAssigned",
                "value": "UserAssigned",
                "description": "User assigned identity."
              }
            ]
          }
        },
        "userAssignedIdentities": {
          "type": "array",
          "description": "User identity ids",
          "items": {
            "type": "object",
            "description": "Database Identity properties.",
            "properties": {
              "resourceId": {
                "type": "string",
                "format": "arm-id",
                "description": "Resource Id of the database identity.",
                "x-ms-mutability": [
                  "read",
                  "update",
                  "create"
                ],
                "x-ms-arm-id-details": {
                  "allowedResources": [
                    {
                      "type": "Microsoft.ManagedIdentity/userAssignedIdentities"
                    }
                  ]
                }
              },
              "principalId": {
                "description": "Principal Id of the database identity.",
                "x-ms-mutability": [
                  "read",
                  "update",
                  "create"
                ],
                "type": "string",
                "format": "uuid"
              },
              "clientId": {
                "description": "Client Id of the database identity.",
                "x-ms-mutability": [
                  "read",
                  "update",
                  "create"
                ],
                "type": "string",
                "format": "uuid"
              }
            }
          },
          "x-ms-identifiers": [],
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "federatedClientId": {
          "description": "The federated client id for the SQL Database. It is used for cross tenant CMK scenario.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ],
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "IdentityType": {
      "type": "string",
      "description": "Identity type of the main principal.",
      "enum": [
        "None",
        "UserAssigned"
      ],
      "x-ms-enum": {
        "name": "IdentityType",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None",
            "description": "No identity."
          },
          {
            "name": "UserAssigned",
            "value": "UserAssigned",
            "description": "User assigned identity."
          }
        ]
      }
    },
    "MainPrincipal": {
      "type": "object",
      "description": "A main principal.",
      "properties": {
        "login": {
          "type": "string",
          "description": "Login name of the main principal.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "applicationId": {
          "description": "Application Id of the main principal.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "string",
          "format": "uuid"
        },
        "objectId": {
          "description": "Object Id of the main principal.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "string",
          "format": "uuid"
        },
        "tenantId": {
          "description": "Tenant Id of the main principal.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "string",
          "format": "uuid"
        },
        "principalType": {
          "description": "Principal type of the main principal.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "string",
          "enum": [
            "Application",
            "User"
          ],
          "x-ms-enum": {
            "name": "PrincipalType",
            "modelAsString": true,
            "values": [
              {
                "name": "Application",
                "value": "Application",
                "description": "Application principal type."
              },
              {
                "name": "User",
                "value": "User",
                "description": "User principal type."
              }
            ]
          }
        }
      }
    },
    "PrincipalType": {
      "type": "string",
      "description": "Principal type of the authorized principal.",
      "enum": [
        "Application",
        "User"
      ],
      "x-ms-enum": {
        "name": "PrincipalType",
        "modelAsString": true,
        "values": [
          {
            "name": "Application",
            "value": "Application",
            "description": "Application principal type."
          },
          {
            "name": "User",
            "value": "User",
            "description": "User principal type."
          }
        ]
      }
    },
    "RegisterServerProperties": {
      "type": "object",
      "description": "Server registration definition.",
      "properties": {
        "tierName": {
          "type": "string",
          "description": "Destination tier name.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "sourceSubscriptionId": {
          "type": "string",
          "description": "Source subscription id.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "sourceResourceGroupName": {
          "type": "string",
          "description": "Source resource group name.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "sourceServerName": {
          "type": "string",
          "description": "Source SQL Server name.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "destinationTierOverrides": {
          "type": "array",
          "description": "Destination tier overrides.",
          "items": {
            "type": "object",
            "description": "A destination tier override.",
            "properties": {
              "resourceType": {
                "description": "Resource type.",
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "type": "string",
                "enum": [
                  "Database",
                  "Pool"
                ],
                "x-ms-enum": {
                  "name": "ResourceType",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Database",
                      "value": "Database",
                      "description": "Database resource type."
                    },
                    {
                      "name": "Pool",
                      "value": "Pool",
                      "description": "Elastic pool resource type."
                    }
                  ]
                }
              },
              "tierName": {
                "type": "string",
                "description": "Destination tier name.",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "resourceName": {
                "type": "string",
                "description": "Resource name.",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              }
            },
            "required": [
              "resourceType",
              "tierName",
              "resourceName"
            ]
          },
          "x-ms-identifiers": [],
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "ResourceType": {
      "type": "string",
      "description": "Resource type of the destination tier override.",
      "enum": [
        "Database",
        "Pool"
      ],
      "x-ms-enum": {
        "name": "ResourceType",
        "modelAsString": true,
        "values": [
          {
            "name": "Database",
            "value": "Database",
            "description": "Database resource type."
          },
          {
            "name": "Pool",
            "value": "Pool",
            "description": "Elastic pool resource type."
          }
        ]
      }
    },
    "TransparentDataEncryption": {
      "type": "object",
      "description": "Transparent Data Encryption properties.",
      "properties": {
        "keyUri": {
          "type": "string",
          "format": "uri",
          "description": "Customer Managed Key (CMK) Uri.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "keys": {
          "type": "array",
          "description": "Additional Keys",
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "enableAutoRotation": {
          "type": "boolean",
          "description": "Enable key auto rotation",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      }
    },
    "ZoneRedundancy": {
      "type": "string",
      "description": "Status of zone redundancy in a tier.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "ZoneRedundancy",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "Zone redundancy enabled."
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "Zone redundancy disabled."
          }
        ]
      }
    }
  },
  "parameters": {}
}